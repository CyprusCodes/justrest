{
  "version": 3,
  "sources": ["../../../../frontend/node_modules/jiff/lib/lcs.js", "../../../../frontend/node_modules/jiff/lib/array.js", "../../../../frontend/node_modules/jiff/lib/jsonPointerParse.js", "../../../../frontend/node_modules/jiff/lib/jsonPointer.js", "../../../../frontend/node_modules/jiff/lib/clone.js", "../../../../frontend/node_modules/jiff/lib/deepEquals.js", "../../../../frontend/node_modules/jiff/lib/commutePaths.js", "../../../../frontend/node_modules/jiff/lib/TestFailedError.js", "../../../../frontend/node_modules/jiff/lib/InvalidPatchOperationError.js", "../../../../frontend/node_modules/jiff/lib/PatchNotInvertibleError.js", "../../../../frontend/node_modules/jiff/lib/patches.js", "../../../../frontend/node_modules/jiff/lib/jsonPatch.js", "../../../../frontend/node_modules/jiff/lib/inverse.js", "../../../../frontend/node_modules/jiff/jiff.js", "../../../../frontend/node_modules/zod/lib/index.mjs", "../../../../frontend/ts-src/types/basics.ts", "../../../../frontend/ts-src/types/uuid.ts", "../../../../frontend/ts-src/types/heroku.ts", "../../../../frontend/ts-src/types/organization.ts", "../../../../frontend/ts-src/utils/array.ts", "../../../../frontend/ts-src/utils/zod.ts", "../../../../frontend/ts-src/types/project.ts", "../../../../frontend/ts-src/types/stats.ts", "../../../../frontend/ts-src/types/tracking.ts", "../../../../frontend/ts-src/types/ports.ts", "../../../../frontend/ts-src/utils/error.ts", "../../../../frontend/ts-src/services/elm.ts", "../../../../frontend/ts-src/services/api.ts", "../../../../frontend/ts-src/utils/env.ts", "../../../../frontend/ts-src/services/logger.ts", "../../../../frontend/ts-src/utils/polyfills.ts", "../../../../frontend/node_modules/canvas-confetti/dist/confetti.module.mjs", "../../../../frontend/ts-src/utils/utils.ts", "../../../../frontend/ts-src/services/storage/indexeddb.ts", "../../../../frontend/ts-src/utils/json.ts", "../../../../frontend/ts-src/services/storage/localstorage.ts", "../../../../frontend/ts-src/services/storage/inmemory.ts", "../../../../frontend/ts-src/utils/promise.ts", "../../../../frontend/ts-src/services/storage.ts", "../../../../frontend/ts-src/utils/http.ts", "../../../../frontend/ts-src/services/backend.ts", "../../../../frontend/ts-src/utils/url.ts", "../../../../frontend/node_modules/@sentry/src/is.ts", "../../../../frontend/node_modules/@sentry/src/worldwide.ts", "../../../../frontend/node_modules/@sentry/src/browser.ts", "../../../../frontend/node_modules/@sentry/src/error.ts", "../../../../frontend/node_modules/@sentry/src/dsn.ts", "../../../../frontend/node_modules/@sentry/src/logger.ts", "../../../../frontend/node_modules/@sentry/src/string.ts", "../../../../frontend/node_modules/@sentry/src/object.ts", "../../../../frontend/node_modules/@sentry/src/stacktrace.ts", "../../../../frontend/node_modules/@sentry/src/supports.ts", "../../../../frontend/node_modules/@sentry/src/instrument.ts", "../../../../frontend/node_modules/@sentry/src/memo.ts", "../../../../frontend/node_modules/@sentry/src/misc.ts", "../../../../frontend/node_modules/@sentry/src/env.ts", "../../../../frontend/node_modules/@sentry/src/node.ts", "../../../../frontend/node_modules/@sentry/src/normalize.ts", "../../../../frontend/node_modules/@sentry/src/syncpromise.ts", "../../../../frontend/node_modules/@sentry/src/promisebuffer.ts", "../../../../frontend/node_modules/@sentry/src/url.ts", "../../../../frontend/node_modules/@sentry/src/severity.ts", "../../../../frontend/node_modules/@sentry/src/time.ts", "../../../../frontend/node_modules/@sentry/src/tracing.ts", "../../../../frontend/node_modules/@sentry/src/envelope.ts", "../../../../frontend/node_modules/@sentry/src/clientreport.ts", "../../../../frontend/node_modules/@sentry/src/ratelimit.ts", "../../../../frontend/node_modules/@sentry/src/baggage.ts", "../../../../frontend/node_modules/@sentry/src/constants.ts", "../../../../frontend/node_modules/@sentry/src/session.ts", "../../../../frontend/node_modules/@sentry/src/scope.ts", "../../../../frontend/node_modules/@sentry/src/hub.ts", "../../../../frontend/node_modules/@sentry/src/utils/hasTracingEnabled.ts", "../../../../frontend/node_modules/@sentry/src/tracing/span.ts", "../../../../frontend/node_modules/@sentry/src/tracing/transaction.ts", "../../../../frontend/node_modules/@sentry/src/tracing/idletransaction.ts", "../../../../frontend/node_modules/@sentry/src/tracing/hubextensions.ts", "../../../../frontend/node_modules/@sentry/src/tracing/utils.ts", "../../../../frontend/node_modules/@sentry/src/exports.ts", "../../../../frontend/node_modules/@sentry/src/api.ts", "../../../../frontend/node_modules/@sentry/src/envelope.ts", "../../../../frontend/node_modules/@sentry/src/integration.ts", "../../../../frontend/node_modules/@sentry/src/utils/prepareEvent.ts", "../../../../frontend/node_modules/@sentry/src/baseclient.ts", "../../../../frontend/node_modules/@sentry/src/sdk.ts", "../../../../frontend/node_modules/@sentry/src/transports/base.ts", "../../../../frontend/node_modules/@sentry/src/version.ts", "../../../../frontend/node_modules/@sentry/core/esm/integrations/index.js", "../../../../frontend/node_modules/@sentry/src/integrations/functiontostring.ts", "../../../../frontend/node_modules/@sentry/src/integrations/inboundfilters.ts", "../../../../frontend/node_modules/src/helpers.ts", "../../../../frontend/node_modules/src/eventbuilder.ts", "../../../../frontend/node_modules/src/integrations/breadcrumbs.ts", "../../../../frontend/node_modules/src/client.ts", "../../../../frontend/node_modules/src/transports/utils.ts", "../../../../frontend/node_modules/src/transports/fetch.ts", "../../../../frontend/node_modules/src/transports/xhr.ts", "../../../../frontend/node_modules/src/stack-parsers.ts", "../../../../frontend/node_modules/src/integrations/globalhandlers.ts", "../../../../frontend/node_modules/src/integrations/trycatch.ts", "../../../../frontend/node_modules/src/integrations/linkederrors.ts", "../../../../frontend/node_modules/src/integrations/httpcontext.ts", "../../../../frontend/node_modules/src/integrations/dedupe.ts", "../../../../frontend/node_modules/src/sdk.ts", "../../../../frontend/node_modules/@sentry/browser/esm/integrations/index.js", "../../../../frontend/node_modules/src/index.ts", "../../../../frontend/node_modules/src/errors.ts", "../../../../frontend/node_modules/src/extensions.ts", "../../../../frontend/node_modules/src/browser/types.ts", "../../../../frontend/node_modules/src/browser/backgroundtab.ts", "../../../../frontend/node_modules/src/browser/web-vitals/lib/bindReporter.ts", "../../../../frontend/node_modules/src/browser/web-vitals/lib/generateUniqueID.ts", "../../../../frontend/node_modules/src/browser/web-vitals/lib/getNavigationEntry.ts", "../../../../frontend/node_modules/src/browser/web-vitals/lib/getActivationStart.ts", "../../../../frontend/node_modules/src/browser/web-vitals/lib/initMetric.ts", "../../../../frontend/node_modules/src/browser/web-vitals/lib/observe.ts", "../../../../frontend/node_modules/src/browser/web-vitals/lib/onHidden.ts", "../../../../frontend/node_modules/src/browser/web-vitals/getCLS.ts", "../../../../frontend/node_modules/src/browser/web-vitals/lib/getVisibilityWatcher.ts", "../../../../frontend/node_modules/src/browser/web-vitals/getFID.ts", "../../../../frontend/node_modules/src/browser/web-vitals/getLCP.ts", "../../../../frontend/node_modules/src/browser/metrics/utils.ts", "../../../../frontend/node_modules/src/browser/metrics/index.ts", "../../../../frontend/node_modules/src/browser/request.ts", "../../../../frontend/node_modules/src/browser/router.ts", "../../../../frontend/node_modules/src/browser/browsertracing.ts", "../../../../frontend/node_modules/src/index.ts", "../../../../frontend/ts-src/index.ts"],
  "sourcesContent": ["/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nexports.compare = compare;\nexports.reduce = reduce;\n\nvar REMOVE, RIGHT, ADD, DOWN, SKIP;\n\nexports.REMOVE = REMOVE = RIGHT = -1;\nexports.ADD    = ADD    = DOWN  =  1;\nexports.EQUAL  = SKIP   = 0;\n\n/**\n * Create an lcs comparison matrix describing the differences\n * between two array-like sequences\n * @param {array} a array-like\n * @param {array} b array-like\n * @returns {object} lcs descriptor, suitable for passing to reduce()\n */\nfunction compare(a, b) {\n\tvar cols = a.length;\n\tvar rows = b.length;\n\n\tvar prefix = findPrefix(a, b);\n\tvar suffix = prefix < cols && prefix < rows\n\t\t? findSuffix(a, b, prefix)\n\t\t: 0;\n\n\tvar remove = suffix + prefix - 1;\n\tcols -= remove;\n\trows -= remove;\n\tvar matrix = createMatrix(cols, rows);\n\n\tfor (var j = cols - 1; j >= 0; --j) {\n\t\tfor (var i = rows - 1; i >= 0; --i) {\n\t\t\tmatrix[i][j] = backtrack(matrix, a, b, prefix, j, i);\n\t\t}\n\t}\n\n\treturn {\n\t\tprefix: prefix,\n\t\tmatrix: matrix,\n\t\tsuffix: suffix\n\t};\n}\n\n/**\n * Reduce a set of lcs changes previously created using compare\n * @param {function(result:*, type:number, i:number, j:number)} f\n *  reducer function, where:\n *  - result is the current reduce value,\n *  - type is the type of change: ADD, REMOVE, or SKIP\n *  - i is the index of the change location in b\n *  - j is the index of the change location in a\n * @param {*} r initial value\n * @param {object} lcs results returned by compare()\n * @returns {*} the final reduced value\n */\nfunction reduce(f, r, lcs) {\n\tvar i, j, k, op;\n\n\tvar m = lcs.matrix;\n\n\t// Reduce shared prefix\n\tvar l = lcs.prefix;\n\tfor(i = 0;i < l; ++i) {\n\t\tr = f(r, SKIP, i, i);\n\t}\n\n\t// Reduce longest change span\n\tk = i;\n\tl = m.length;\n\ti = 0;\n\tj = 0;\n\twhile(i < l) {\n\t\top = m[i][j].type;\n\t\tr = f(r, op, i+k, j+k);\n\n\t\tswitch(op) {\n\t\t\tcase SKIP:  ++i; ++j; break;\n\t\t\tcase RIGHT: ++j; break;\n\t\t\tcase DOWN:  ++i; break;\n\t\t}\n\t}\n\n\t// Reduce shared suffix\n\ti += k;\n\tj += k;\n\tl = lcs.suffix;\n\tfor(k = 0;k < l; ++k) {\n\t\tr = f(r, SKIP, i+k, j+k);\n\t}\n\n\treturn r;\n}\n\nfunction findPrefix(a, b) {\n\tvar i = 0;\n\tvar l = Math.min(a.length, b.length);\n\twhile(i < l && a[i] === b[i]) {\n\t\t++i;\n\t}\n\treturn i;\n}\n\nfunction findSuffix(a, b) {\n\tvar al = a.length - 1;\n\tvar bl = b.length - 1;\n\tvar l = Math.min(al, bl);\n\tvar i = 0;\n\twhile(i < l && a[al-i] === b[bl-i]) {\n\t\t++i;\n\t}\n\treturn i;\n}\n\nfunction backtrack(matrix, a, b, start, j, i) {\n\tif (a[j+start] === b[i+start]) {\n\t\treturn { value: matrix[i + 1][j + 1].value, type: SKIP };\n\t}\n\tif (matrix[i][j + 1].value < matrix[i + 1][j].value) {\n\t\treturn { value: matrix[i][j + 1].value + 1, type: RIGHT };\n\t}\n\n\treturn { value: matrix[i + 1][j].value + 1, type: DOWN };\n}\n\nfunction createMatrix (cols, rows) {\n\tvar m = [], i, j, lastrow;\n\n\t// Fill the last row\n\tlastrow = m[rows] = [];\n\tfor (j = 0; j<cols; ++j) {\n\t\tlastrow[j] = { value: cols - j, type: RIGHT };\n\t}\n\n\t// Fill the last col\n\tfor (i = 0; i<rows; ++i) {\n\t\tm[i] = [];\n\t\tm[i][cols] = { value: rows - i, type: DOWN };\n\t}\n\n\t// Fill the last cell\n\tm[rows][cols] = { value: 0, type: SKIP };\n\n\treturn m;\n}\n", "/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nexports.cons = cons;\nexports.tail = tail;\nexports.map = map;\n\n/**\n * Prepend x to a, without mutating a. Faster than a.unshift(x)\n * @param {*} x\n * @param {Array} a array-like\n * @returns {Array} new Array with x prepended\n */\nfunction cons(x, a) {\n\tvar l = a.length;\n\tvar b = new Array(l+1);\n\tb[0] = x;\n\tfor(var i=0; i<l; ++i) {\n\t\tb[i+1] = a[i];\n\t}\n\n\treturn b;\n}\n\n/**\n * Create a new Array containing all elements in a, except the first.\n *  Faster than a.slice(1)\n * @param {Array} a array-like\n * @returns {Array} new Array, the equivalent of a.slice(1)\n */\nfunction tail(a) {\n\tvar l = a.length-1;\n\tvar b = new Array(l);\n\tfor(var i=0; i<l; ++i) {\n\t\tb[i] = a[i+1];\n\t}\n\n\treturn b;\n}\n\n/**\n * Map any array-like. Faster than Array.prototype.map\n * @param {function} f\n * @param {Array} a array-like\n * @returns {Array} new Array mapped by f\n */\nfunction map(f, a) {\n\tvar b = new Array(a.length);\n\tfor(var i=0; i< a.length; ++i) {\n\t\tb[i] = f(a[i]);\n\t}\n\treturn b;\n}", "/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nmodule.exports = jsonPointerParse;\n\nvar parseRx = /\\/|~1|~0/g;\nvar separator = '/';\nvar escapeChar = '~';\nvar encodedSeparator = '~1';\n\n/**\n * Parse through an encoded JSON Pointer string, decoding each path segment\n * and passing it to an onSegment callback function.\n * @see https://tools.ietf.org/html/rfc6901#section-4\n * @param {string} path encoded JSON Pointer string\n * @param {{function(segment:string):boolean}} onSegment callback function\n * @returns {string} original path\n */\nfunction jsonPointerParse(path, onSegment) {\n\tvar pos, accum, matches, match;\n\n\tpos = path.charAt(0) === separator ? 1 : 0;\n\taccum = '';\n\tparseRx.lastIndex = pos;\n\n\twhile(matches = parseRx.exec(path)) {\n\n\t\tmatch = matches[0];\n\t\taccum += path.slice(pos, parseRx.lastIndex - match.length);\n\t\tpos = parseRx.lastIndex;\n\n\t\tif(match === separator) {\n\t\t\tif (onSegment(accum) === false) return path;\n\t\t\taccum = '';\n\t\t} else {\n\t\t\taccum += match === encodedSeparator ? separator : escapeChar;\n\t\t}\n\t}\n\n\taccum += path.slice(pos);\n\tonSegment(accum);\n\n\treturn path;\n}\n", "/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nvar _parse = require('./jsonPointerParse');\n\nexports.find = find;\nexports.join = join;\nexports.absolute = absolute;\nexports.parse = parse;\nexports.contains = contains;\nexports.encodeSegment = encodeSegment;\nexports.decodeSegment = decodeSegment;\nexports.parseArrayIndex = parseArrayIndex;\nexports.isValidArrayIndex = isValidArrayIndex;\n\n// http://tools.ietf.org/html/rfc6901#page-2\nvar separator = '/';\nvar separatorRx = /\\//g;\nvar encodedSeparator = '~1';\nvar encodedSeparatorRx = /~1/g;\n\nvar escapeChar = '~';\nvar escapeRx = /~/g;\nvar encodedEscape = '~0';\nvar encodedEscapeRx = /~0/g;\n\n/**\n * Find the parent of the specified path in x and return a descriptor\n * containing the parent and a key.  If the parent does not exist in x,\n * return undefined, instead.\n * @param {object|array} x object or array in which to search\n * @param {string} path JSON Pointer string (encoded)\n * @param {?function(index:Number, array:Array, context:object):Number} findContext\n *  optional function used adjust array indexes for smarty/fuzzy patching, for\n *  patches containing context.  If provided, context MUST also be provided.\n * @param {?{before:Array, after:Array}} context optional patch context for\n *  findContext to use to adjust array indices.  If provided, findContext MUST\n *  also be provided.\n * @returns {{target:object|array|number|string, key:string}|undefined}\n */\nfunction find(x, path, findContext, context) {\n\tif(typeof path !== 'string') {\n\t\treturn;\n\t}\n\n\tif(path === '') {\n\t\t// whole document\n\t\treturn { target: x, key: void 0 };\n\t}\n\n\tif(path === separator) {\n\t\treturn { target: x, key: '' };\n\t}\n\n\tvar parent = x, key;\n\tvar hasContext = context !== void 0;\n\n\t_parse(path, function(segment) {\n\t\t// hm... this seems like it should be if(typeof x === 'undefined')\n\t\tif(x == null) {\n\t\t\t// Signal that we prematurely hit the end of the path hierarchy.\n\t\t\tparent = null;\n\t\t\treturn false;\n\t\t}\n\n\t\tif(Array.isArray(x)) {\n\t\t\tkey = hasContext\n\t\t\t\t? findIndex(findContext, parseArrayIndex(segment), x, context)\n\t\t\t\t: segment === '-' ? segment : parseArrayIndex(segment);\n\t\t} else {\n\t\t\tkey = segment;\n\t\t}\n\n\t\tparent = x;\n\t\tx = x[key];\n\t});\n\n\treturn parent === null\n\t\t? void 0\n\t\t: { target: parent, key: key };\n}\n\nfunction absolute(path) {\n\treturn path[0] === separator ? path : separator + path;\n}\n\nfunction join(segments) {\n\treturn segments.join(separator);\n}\n\nfunction parse(path) {\n\tvar segments = [];\n\t_parse(path, segments.push.bind(segments));\n\treturn segments;\n}\n\nfunction contains(a, b) {\n\treturn b.indexOf(a) === 0 && b[a.length] === separator;\n}\n\n/**\n * Decode a JSON Pointer path segment\n * @see http://tools.ietf.org/html/rfc6901#page-3\n * @param {string} s encoded segment\n * @returns {string} decoded segment\n */\nfunction decodeSegment(s) {\n\t// See: http://tools.ietf.org/html/rfc6901#page-3\n\treturn s.replace(encodedSeparatorRx, separator).replace(encodedEscapeRx, escapeChar);\n}\n\n/**\n * Encode a JSON Pointer path segment\n * @see http://tools.ietf.org/html/rfc6901#page-3\n * @param {string} s decoded segment\n * @returns {string} encoded segment\n */\nfunction encodeSegment(s) {\n\treturn s.replace(escapeRx, encodedEscape).replace(separatorRx, encodedSeparator);\n}\n\nvar arrayIndexRx = /^(0|[1-9]\\d*)$/;\n\n/**\n * Return true if s is a valid JSON Pointer array index\n * @param {String} s\n * @returns {boolean}\n */\nfunction isValidArrayIndex(s) {\n\treturn arrayIndexRx.test(s);\n}\n\n/**\n * Safely parse a string into a number >= 0. Does not check for decimal numbers\n * @param {string} s numeric string\n * @returns {number} number >= 0\n */\nfunction parseArrayIndex (s) {\n\tif(isValidArrayIndex(s)) {\n\t\treturn +s;\n\t}\n\n\tthrow new SyntaxError('invalid array index ' + s);\n}\n\nfunction findIndex (findContext, start, array, context) {\n\tvar index = start;\n\n\tif(index < 0) {\n\t\tthrow new Error('array index out of bounds ' + index);\n\t}\n\n\tif(context !== void 0 && typeof findContext === 'function') {\n\t\tindex = findContext(start, array, context);\n\t\tif(index < 0) {\n\t\t\tthrow new Error('could not find patch context ' + context);\n\t\t}\n\t}\n\n\treturn index;\n}", "/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n/**\n * Create a deep copy of x which must be a legal JSON object/array/value\n * @param {object|array|string|number|null} x object/array/value to clone\n * @returns {object|array|string|number|null} clone of x\n */\nmodule.exports = clone;\n\nfunction clone(x) {\n\tif(x == null || typeof x !== 'object') {\n\t\treturn x;\n\t}\n\n\tif(Array.isArray(x)) {\n\t\treturn cloneArray(x);\n\t}\n\n\treturn cloneObject(x);\n}\n\nfunction cloneArray (x) {\n\tvar l = x.length;\n\tvar y = new Array(l);\n\n\tfor (var i = 0; i < l; ++i) {\n\t\ty[i] = clone(x[i]);\n\t}\n\n\treturn y;\n}\n\nfunction cloneObject (x) {\n\tvar keys = Object.keys(x);\n\tvar y = {};\n\n\tfor (var k, i = 0, l = keys.length; i < l; ++i) {\n\t\tk = keys[i];\n\t\ty[k] = clone(x[k]);\n\t}\n\n\treturn y;\n}\n", "module.exports = deepEquals;\n\n/**\n * Compare 2 JSON values, or recursively compare 2 JSON objects or arrays\n * @param {object|array|string|number|boolean|null} a\n * @param {object|array|string|number|boolean|null} b\n * @returns {boolean} true iff a and b are recursively equal\n */\nfunction deepEquals(a, b) {\n\tif(a === b) {\n\t\treturn true;\n\t}\n\n\tif(Array.isArray(a) && Array.isArray(b)) {\n\t\treturn compareArrays(a, b);\n\t}\n\n\tif(typeof a === 'object' && typeof b === 'object') {\n\t\treturn compareObjects(a, b);\n\t}\n\n\treturn false;\n}\n\nfunction compareArrays(a, b) {\n\tif(a.length !== b.length) {\n\t\treturn false;\n\t}\n\n\tfor(var i = 0; i<a.length; ++i) {\n\t\tif(!deepEquals(a[i], b[i])) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction compareObjects(a, b) {\n\tif((a === null && b !== null) || (a !== null && b === null)) {\n\t\treturn false;\n\t}\n\n\tvar akeys = Object.keys(a);\n\tvar bkeys = Object.keys(b);\n\n\tif(akeys.length !== bkeys.length) {\n\t\treturn false;\n\t}\n\n\tfor(var i = 0, k; i<akeys.length; ++i) {\n\t\tk = akeys[i];\n\t\tif(!(k in b && deepEquals(a[k], b[k]))) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}", "var jsonPointer = require('./jsonPointer');\n\n/**\n * commute the patch sequence a,b to b,a\n * @param {object} a patch operation\n * @param {object} b patch operation\n */\nmodule.exports = function commutePaths(a, b) {\n\t// TODO: cases for special paths: '' and '/'\n\tvar left = jsonPointer.parse(a.path);\n\tvar right = jsonPointer.parse(b.path);\n\tvar prefix = getCommonPathPrefix(left, right);\n\tvar isArray = isArrayPath(left, right, prefix.length);\n\n\t// Never mutate the originals\n\tvar ac = copyPatch(a);\n\tvar bc = copyPatch(b);\n\n\tif(prefix.length === 0 && !isArray) {\n\t\t// Paths share no common ancestor, simple swap\n\t\treturn [bc, ac];\n\t}\n\n\tif(isArray) {\n\t\treturn commuteArrayPaths(ac, left, bc, right);\n\t} else {\n\t\treturn commuteTreePaths(ac, left, bc, right);\n\t}\n};\n\nfunction commuteTreePaths(a, left, b, right) {\n\tif(a.path === b.path) {\n\t\tthrow new TypeError('cannot commute ' + a.op + ',' + b.op + ' with identical object paths');\n\t}\n\t// FIXME: Implement tree path commutation\n\treturn [b, a];\n}\n\n/**\n * Commute two patches whose common ancestor (which may be the immediate parent)\n * is an array\n * @param a\n * @param left\n * @param b\n * @param right\n * @returns {*}\n */\nfunction commuteArrayPaths(a, left, b, right) {\n\tif(left.length === right.length) {\n\t\treturn commuteArraySiblings(a, left, b, right);\n\t}\n\n\tif (left.length > right.length) {\n\t\t// left is longer, commute by \"moving\" it to the right\n\t\tleft = commuteArrayAncestor(b, right, a, left, -1);\n\t\ta.path = jsonPointer.absolute(jsonPointer.join(left));\n\t} else {\n\t\t// right is longer, commute by \"moving\" it to the left\n\t\tright = commuteArrayAncestor(a, left, b, right, 1);\n\t\tb.path = jsonPointer.absolute(jsonPointer.join(right));\n\t}\n\n\treturn [b, a];\n}\n\nfunction isArrayPath(left, right, index) {\n\treturn jsonPointer.isValidArrayIndex(left[index])\n\t\t&& jsonPointer.isValidArrayIndex(right[index]);\n}\n\n/**\n * Commute two patches referring to items in the same array\n * @param l\n * @param lpath\n * @param r\n * @param rpath\n * @returns {*[]}\n */\nfunction commuteArraySiblings(l, lpath, r, rpath) {\n\n\tvar target = lpath.length-1;\n\tvar lindex = +lpath[target];\n\tvar rindex = +rpath[target];\n\n\tvar commuted;\n\n\tif(lindex < rindex) {\n\t\t// Adjust right path\n\t\tif(l.op === 'add' || l.op === 'copy') {\n\t\t\tcommuted = rpath.slice();\n\t\t\tcommuted[target] = Math.max(0, rindex - 1);\n\t\t\tr.path = jsonPointer.absolute(jsonPointer.join(commuted));\n\t\t} else if(l.op === 'remove') {\n\t\t\tcommuted = rpath.slice();\n\t\t\tcommuted[target] = rindex + 1;\n\t\t\tr.path = jsonPointer.absolute(jsonPointer.join(commuted));\n\t\t}\n\t} else if(r.op === 'add' || r.op === 'copy') {\n\t\t// Adjust left path\n\t\tcommuted = lpath.slice();\n\t\tcommuted[target] = lindex + 1;\n\t\tl.path = jsonPointer.absolute(jsonPointer.join(commuted));\n\t} else if (lindex > rindex && r.op === 'remove') {\n\t\t// Adjust left path only if remove was at a (strictly) lower index\n\t\tcommuted = lpath.slice();\n\t\tcommuted[target] = Math.max(0, lindex - 1);\n\t\tl.path = jsonPointer.absolute(jsonPointer.join(commuted));\n\t}\n\n\treturn [r, l];\n}\n\n/**\n * Commute two patches with a common array ancestor\n * @param l\n * @param lpath\n * @param r\n * @param rpath\n * @param direction\n * @returns {*}\n */\nfunction commuteArrayAncestor(l, lpath, r, rpath, direction) {\n\t// rpath is longer or same length\n\n\tvar target = lpath.length-1;\n\tvar lindex = +lpath[target];\n\tvar rindex = +rpath[target];\n\n\t// Copy rpath, then adjust its array index\n\tvar rc = rpath.slice();\n\n\tif(lindex > rindex) {\n\t\treturn rc;\n\t}\n\n\tif(l.op === 'add' || l.op === 'copy') {\n\t\trc[target] = Math.max(0, rindex - direction);\n\t} else if(l.op === 'remove') {\n\t\trc[target] = Math.max(0, rindex + direction);\n\t}\n\n\treturn rc;\n}\n\nfunction getCommonPathPrefix(p1, p2) {\n\tvar p1l = p1.length;\n\tvar p2l = p2.length;\n\tif(p1l === 0 || p2l === 0 || (p1l < 2 && p2l < 2)) {\n\t\treturn [];\n\t}\n\n\t// If paths are same length, the last segment cannot be part\n\t// of a common prefix.  If not the same length, the prefix cannot\n\t// be longer than the shorter path.\n\tvar l = p1l === p2l\n\t\t? p1l - 1\n\t\t: Math.min(p1l, p2l);\n\n\tvar i = 0;\n\twhile(i < l && p1[i] === p2[i]) {\n\t\t++i\n\t}\n\n\treturn p1.slice(0, i);\n}\n\nfunction copyPatch(p) {\n\tif(p.op === 'remove') {\n\t\treturn { op: p.op, path: p.path };\n\t}\n\n\tif(p.op === 'copy' || p.op === 'move') {\n\t\treturn { op: p.op, path: p.path, from: p.from };\n\t}\n\n\t// test, add, replace\n\treturn { op: p.op, path: p.path, value: p.value };\n}", "module.exports = TestFailedError;\n\nfunction TestFailedError(message) {\n\tError.call(this);\n\tthis.name = this.constructor.name;\n\tthis.message = message;\n\tif(typeof Error.captureStackTrace === 'function') {\n\t\tError.captureStackTrace(this, this.constructor);\n\t}\n}\n\nTestFailedError.prototype = Object.create(Error.prototype);\nTestFailedError.prototype.constructor = TestFailedError;", "module.exports = InvalidPatchOperationError;\n\nfunction InvalidPatchOperationError(message) {\n\tError.call(this);\n\tthis.name = this.constructor.name;\n\tthis.message = message;\n\tif(typeof Error.captureStackTrace === 'function') {\n\t\tError.captureStackTrace(this, this.constructor);\n\t}\n}\n\nInvalidPatchOperationError.prototype = Object.create(Error.prototype);\nInvalidPatchOperationError.prototype.constructor = InvalidPatchOperationError;", "module.exports = PatchNotInvertibleError;\n\nfunction PatchNotInvertibleError(message) {\n\tError.call(this);\n\tthis.name = this.constructor.name;\n\tthis.message = message;\n\tif(typeof Error.captureStackTrace === 'function') {\n\t\tError.captureStackTrace(this, this.constructor);\n\t}\n}\n\nPatchNotInvertibleError.prototype = Object.create(Error.prototype);\nPatchNotInvertibleError.prototype.constructor = PatchNotInvertibleError;", "var jsonPointer = require('./jsonPointer');\nvar clone = require('./clone');\nvar deepEquals = require('./deepEquals');\nvar commutePaths = require('./commutePaths');\n\nvar array = require('./array');\n\nvar TestFailedError = require('./TestFailedError');\nvar InvalidPatchOperationError = require('./InvalidPatchOperationError');\nvar PatchNotInvertibleError = require('./PatchNotInvertibleError');\n\nvar find = jsonPointer.find;\nvar parseArrayIndex = jsonPointer.parseArrayIndex;\n\nexports.test = {\n\tapply: applyTest,\n\tinverse: invertTest,\n\tcommute: commuteTest\n};\n\nexports.add = {\n\tapply: applyAdd,\n\tinverse: invertAdd,\n\tcommute: commuteAddOrCopy\n};\n\nexports.remove = {\n\tapply: applyRemove,\n\tinverse: invertRemove,\n\tcommute: commuteRemove\n};\n\nexports.replace = {\n\tapply: applyReplace,\n\tinverse: invertReplace,\n\tcommute: commuteReplace\n};\n\nexports.move = {\n\tapply: applyMove,\n\tinverse: invertMove,\n\tcommute: commuteMove\n};\n\nexports.copy = {\n\tapply: applyCopy,\n\tinverse: notInvertible,\n\tcommute: commuteAddOrCopy\n};\n\n/**\n * Apply a test operation to x\n * @param {object|array} x\n * @param {object} test test operation\n * @throws {TestFailedError} if the test operation fails\n */\n\nfunction applyTest(x, test, options) {\n\tvar pointer = find(x, test.path, options.findContext, test.context);\n\tvar target = pointer.target;\n\tvar index, value;\n\n\tif(Array.isArray(target)) {\n\t\tindex = parseArrayIndex(pointer.key);\n\t\t//index = findIndex(options.findContext, index, target, test.context);\n\t\tvalue = target[index];\n\t} else {\n\t\tvalue = pointer.key === void 0 ? pointer.target : pointer.target[pointer.key];\n\t}\n\n\tif(!deepEquals(value, test.value)) {\n\t\tthrow new TestFailedError('test failed ' + JSON.stringify(test));\n\t}\n\n\treturn x;\n}\n\n/**\n * Invert the provided test and add it to the inverted patch sequence\n * @param pr\n * @param test\n * @returns {number}\n */\nfunction invertTest(pr, test) {\n\tpr.push(test);\n\treturn 1;\n}\n\nfunction commuteTest(test, b) {\n\tif(test.path === b.path && b.op === 'remove') {\n\t\tthrow new TypeError('Can\\'t commute test,remove -> remove,test for same path');\n\t}\n\n\tif(b.op === 'test' || b.op === 'replace') {\n\t\treturn [b, test];\n\t}\n\n\treturn commutePaths(test, b);\n}\n\n/**\n * Apply an add operation to x\n * @param {object|array} x\n * @param {object} change add operation\n */\nfunction applyAdd(x, change, options) {\n\tvar pointer = find(x, change.path, options.findContext, change.context);\n\n\tif(notFound(pointer)) {\n\t\tthrow new InvalidPatchOperationError('path does not exist ' + change.path);\n\t}\n\n\tif(change.value === void 0) {\n\t\tthrow new InvalidPatchOperationError('missing value');\n\t}\n\n\tvar val = clone(change.value);\n\n\t// If pointer refers to whole document, replace whole document\n\tif(pointer.key === void 0) {\n\t\treturn val;\n\t}\n\n\t_add(pointer, val);\n\treturn x;\n}\n\nfunction _add(pointer, value) {\n\tvar target = pointer.target;\n\n\tif(Array.isArray(target)) {\n\t\t// '-' indicates 'append' to array\n\t\tif(pointer.key === '-') {\n\t\t\ttarget.push(value);\n\t\t} else if (pointer.key > target.length) {\n\t\t\tthrow new InvalidPatchOperationError('target of add outside of array bounds')\n\t\t} else {\n\t\t\ttarget.splice(pointer.key, 0, value);\n\t\t}\n\t} else if(isValidObject(target)) {\n\t\ttarget[pointer.key] = value;\n\t} else {\n\t\tthrow new InvalidPatchOperationError('target of add must be an object or array ' + pointer.key);\n\t}\n}\n\nfunction invertAdd(pr, add) {\n\tvar context = add.context;\n\tif(context !== void 0) {\n\t\tcontext = {\n\t\t\tbefore: context.before,\n\t\t\tafter: array.cons(add.value, context.after)\n\t\t}\n\t}\n\tpr.push({ op: 'test', path: add.path, value: add.value, context: context });\n\tpr.push({ op: 'remove', path: add.path, context: context });\n\treturn 1;\n}\n\nfunction commuteAddOrCopy(add, b) {\n\tif(add.path === b.path && b.op === 'remove') {\n\t\tthrow new TypeError('Can\\'t commute add,remove -> remove,add for same path');\n\t}\n\n\treturn commutePaths(add, b);\n}\n\n/**\n * Apply a replace operation to x\n * @param {object|array} x\n * @param {object} change replace operation\n */\nfunction applyReplace(x, change, options) {\n\tvar pointer = find(x, change.path, options.findContext, change.context);\n\n\tif(notFound(pointer) || missingValue(pointer)) {\n\t\tthrow new InvalidPatchOperationError('path does not exist ' + change.path);\n\t}\n\n\tif(change.value === void 0) {\n\t\tthrow new InvalidPatchOperationError('missing value');\n\t}\n\n\tvar value = clone(change.value);\n\n\t// If pointer refers to whole document, replace whole document\n\tif(pointer.key === void 0) {\n\t\treturn value;\n\t}\n\n\tvar target = pointer.target;\n\n\tif(Array.isArray(target)) {\n\t\ttarget[parseArrayIndex(pointer.key)] = value;\n\t} else {\n\t\ttarget[pointer.key] = value;\n\t}\n\n\treturn x;\n}\n\nfunction invertReplace(pr, c, i, patch) {\n\tvar prev = patch[i-1];\n\tif(prev === void 0 || prev.op !== 'test' || prev.path !== c.path) {\n\t\tthrow new PatchNotInvertibleError('cannot invert replace w/o test');\n\t}\n\n\tvar context = prev.context;\n\tif(context !== void 0) {\n\t\tcontext = {\n\t\t\tbefore: context.before,\n\t\t\tafter: array.cons(prev.value, array.tail(context.after))\n\t\t}\n\t}\n\n\tpr.push({ op: 'test', path: prev.path, value: c.value });\n\tpr.push({ op: 'replace', path: prev.path, value: prev.value });\n\treturn 2;\n}\n\nfunction commuteReplace(replace, b) {\n\tif(replace.path === b.path && b.op === 'remove') {\n\t\tthrow new TypeError('Can\\'t commute replace,remove -> remove,replace for same path');\n\t}\n\n\tif(b.op === 'test' || b.op === 'replace') {\n\t\treturn [b, replace];\n\t}\n\n\treturn commutePaths(replace, b);\n}\n\n/**\n * Apply a remove operation to x\n * @param {object|array} x\n * @param {object} change remove operation\n */\nfunction applyRemove(x, change, options) {\n\tvar pointer = find(x, change.path, options.findContext, change.context);\n\n\t// key must exist for remove\n\tif(notFound(pointer) || pointer.target[pointer.key] === void 0) {\n\t\tthrow new InvalidPatchOperationError('path does not exist ' + change.path);\n\t}\n\n\t_remove(pointer);\n\treturn x;\n}\n\nfunction _remove (pointer) {\n\tvar target = pointer.target;\n\n\tvar removed;\n\tif (Array.isArray(target)) {\n\t\tremoved = target.splice(parseArrayIndex(pointer.key), 1);\n\t\treturn removed[0];\n\n\t} else if (isValidObject(target)) {\n\t\tremoved = target[pointer.key];\n\t\tdelete target[pointer.key];\n\t\treturn removed;\n\n\t} else {\n\t\tthrow new InvalidPatchOperationError('target of remove must be an object or array');\n\t}\n}\n\nfunction invertRemove(pr, c, i, patch) {\n\tvar prev = patch[i-1];\n\tif(prev === void 0 || prev.op !== 'test' || prev.path !== c.path) {\n\t\tthrow new PatchNotInvertibleError('cannot invert remove w/o test');\n\t}\n\n\tvar context = prev.context;\n\tif(context !== void 0) {\n\t\tcontext = {\n\t\t\tbefore: context.before,\n\t\t\tafter: array.tail(context.after)\n\t\t}\n\t}\n\n\tpr.push({ op: 'add', path: prev.path, value: prev.value, context: context });\n\treturn 2;\n}\n\nfunction commuteRemove(remove, b) {\n\tif(remove.path === b.path && b.op === 'remove') {\n\t\treturn [b, remove];\n\t}\n\n\treturn commutePaths(remove, b);\n}\n\n/**\n * Apply a move operation to x\n * @param {object|array} x\n * @param {object} change move operation\n */\nfunction applyMove(x, change, options) {\n\tif(jsonPointer.contains(change.path, change.from)) {\n\t\tthrow new InvalidPatchOperationError('move.from cannot be ancestor of move.path');\n\t}\n\n\tvar pto = find(x, change.path, options.findContext, change.context);\n\tvar pfrom = find(x, change.from, options.findContext, change.fromContext);\n\n\t_add(pto, _remove(pfrom));\n\treturn x;\n}\n\nfunction invertMove(pr, c) {\n\tpr.push({ op: 'move',\n\t\tpath: c.from, context: c.fromContext,\n\t\tfrom: c.path, fromContext: c.context });\n\treturn 1;\n}\n\nfunction commuteMove(move, b) {\n\tif(move.path === b.path && b.op === 'remove') {\n\t\tthrow new TypeError('Can\\'t commute move,remove -> move,replace for same path');\n\t}\n\n\treturn commutePaths(move, b);\n}\n\n/**\n * Apply a copy operation to x\n * @param {object|array} x\n * @param {object} change copy operation\n */\nfunction applyCopy(x, change, options) {\n\tvar pto = find(x, change.path, options.findContext, change.context);\n\tvar pfrom = find(x, change.from, options.findContext, change.fromContext);\n\n\tif(notFound(pfrom) || missingValue(pfrom)) {\n\t\tthrow new InvalidPatchOperationError('copy.from must exist');\n\t}\n\n\tvar target = pfrom.target;\n\tvar value;\n\n\tif(Array.isArray(target)) {\n\t\tvalue = target[parseArrayIndex(pfrom.key)];\n\t} else {\n\t\tvalue = target[pfrom.key];\n\t}\n\n\t_add(pto, clone(value));\n\treturn x;\n}\n\n// NOTE: Copy is not invertible\n// See https://github.com/cujojs/jiff/issues/9\n// This needs more thought. We may have to extend/amend JSON Patch.\n// At first glance, this seems like it should just be a remove.\n// However, that's not correct.  It violates the involution:\n// invert(invert(p)) ~= p.  For example:\n// invert(copy) -> remove\n// invert(remove) -> add\n// thus: invert(invert(copy)) -> add (DOH! this should be copy!)\n\nfunction notInvertible(_, c) {\n\tthrow new PatchNotInvertibleError('cannot invert ' + c.op);\n}\n\nfunction notFound (pointer) {\n\treturn pointer === void 0 || (pointer.target == null && pointer.key !== void 0);\n}\n\nfunction missingValue(pointer) {\n\treturn pointer.key !== void 0 && pointer.target[pointer.key] === void 0;\n}\n\n/**\n * Return true if x is a non-null object\n * @param {*} x\n * @returns {boolean}\n */\nfunction isValidObject (x) {\n\treturn x !== null && typeof x === 'object';\n}\n", "/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nvar patches = require('./patches');\nvar clone = require('./clone');\nvar InvalidPatchOperationError = require('./InvalidPatchOperationError');\n\nexports.apply = patch;\nexports.applyInPlace = patchInPlace;\nexports.clone = clone;\nexports.isValidObject = isValidObject;\nexports.defaultHash = defaultHash;\n\nvar defaultOptions = {};\n\n/**\n * Apply the supplied JSON Patch to x\n * @param {array} changes JSON Patch\n * @param {object|array|string|number} x object/array/value to patch\n * @param {object} options\n * @param {function(index:Number, array:Array, context:object):Number} options.findContext\n *  function used adjust array indexes for smarty/fuzzy patching, for\n *  patches containing context\n * @returns {object|array|string|number} patched version of x. If x is\n *  an array or object, it will be mutated and returned. Otherwise, if\n *  x is a value, the new value will be returned.\n */\nfunction patch(changes, x, options) {\n\treturn patchInPlace(changes, clone(x), options);\n}\n\nfunction patchInPlace(changes, x, options) {\n\tif(!options) {\n\t\toptions = defaultOptions;\n\t}\n\n\t// TODO: Consider throwing if changes is not an array\n\tif(!Array.isArray(changes)) {\n\t\treturn x;\n\t}\n\n\tvar patch, p;\n\tfor(var i=0; i<changes.length; ++i) {\n\t\tp = changes[i];\n\t\tpatch = patches[p.op];\n\n\t\tif(patch === void 0) {\n\t\t\tthrow new InvalidPatchOperationError('invalid op ' + JSON.stringify(p));\n\t\t}\n\n\t\tx = patch.apply(x, p, options);\n\t}\n\n\treturn x;\n}\n\nfunction defaultHash(x) {\n\treturn isValidObject(x) || isArray(x) ? JSON.stringify(x) : x;\n}\n\nfunction isValidObject (x) {\n\treturn x !== null && Object.prototype.toString.call(x) === '[object Object]';\n}\n\nfunction isArray (x) {\n\treturn Object.prototype.toString.call(x) === '[object Array]';\n}\n", "var patches = require('./patches');\n\nmodule.exports = function inverse(p) {\n\tvar pr = [];\n\tvar i, skip;\n\tfor(i = p.length-1; i>= 0; i -= skip) {\n\t\tskip = invertOp(pr, p[i], i, p);\n\t}\n\n\treturn pr;\n};\n\nfunction invertOp(patch, c, i, context) {\n\tvar op = patches[c.op];\n\treturn op !== void 0 && typeof op.inverse === 'function'\n\t\t? op.inverse(patch, c, i, context)\n\t\t: 1;\n}\n", "/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nvar lcs = require('./lib/lcs');\nvar array = require('./lib/array');\nvar patch = require('./lib/jsonPatch');\nvar inverse = require('./lib/inverse');\nvar jsonPointer = require('./lib/jsonPointer');\nvar encodeSegment = jsonPointer.encodeSegment;\n\nexports.diff = diff;\nexports.patch = patch.apply;\nexports.patchInPlace = patch.applyInPlace;\nexports.inverse = inverse;\nexports.clone = patch.clone;\n\n// Errors\nexports.InvalidPatchOperationError = require('./lib/InvalidPatchOperationError');\nexports.TestFailedError = require('./lib/TestFailedError');\nexports.PatchNotInvertibleError = require('./lib/PatchNotInvertibleError');\n\nvar isValidObject = patch.isValidObject;\nvar defaultHash = patch.defaultHash;\n\n/**\n * Compute a JSON Patch representing the differences between a and b.\n * @param {object|array|string|number|null} a\n * @param {object|array|string|number|null} b\n * @param {?function|?object} options if a function, see options.hash\n * @param {?function(x:*):String|Number} options.hash used to hash array items\n *  in order to recognize identical objects, defaults to JSON.stringify\n * @param {?function(index:Number, array:Array):object} options.makeContext\n *  used to generate patch context. If not provided, context will not be generated\n * @returns {array} JSON Patch such that patch(diff(a, b), a) ~ b\n */\nfunction diff(a, b, options) {\n\treturn appendChanges(a, b, '', initState(options, [])).patch;\n}\n\n/**\n * Create initial diff state from the provided options\n * @param {?function|?object} options @see diff options above\n * @param {array} patch an empty or existing JSON Patch array into which\n *  the diff should generate new patch operations\n * @returns {object} initialized diff state\n */\nfunction initState(options, patch) {\n\tif(typeof options === 'object') {\n\t\treturn {\n\t\t\tpatch: patch,\n\t\t\thash: orElse(isFunction, options.hash, defaultHash),\n\t\t\tmakeContext: orElse(isFunction, options.makeContext, defaultContext),\n\t\t\tinvertible: !(options.invertible === false)\n\t\t};\n\t} else {\n\t\treturn {\n\t\t\tpatch: patch,\n\t\t\thash: orElse(isFunction, options, defaultHash),\n\t\t\tmakeContext: defaultContext,\n\t\t\tinvertible: true\n\t\t};\n\t}\n}\n\n/**\n * Given two JSON values (object, array, number, string, etc.), find their\n * differences and append them to the diff state\n * @param {object|array|string|number|null} a\n * @param {object|array|string|number|null} b\n * @param {string} path\n * @param {object} state\n * @returns {Object} updated diff state\n */\nfunction appendChanges(a, b, path, state) {\n\tif(Array.isArray(a) && Array.isArray(b)) {\n\t\treturn appendArrayChanges(a, b, path, state);\n\t}\n\n\tif(isValidObject(a) && isValidObject(b)) {\n\t\treturn appendObjectChanges(a, b, path, state);\n\t}\n\n\treturn appendValueChanges(a, b, path, state);\n}\n\n/**\n * Given two objects, find their differences and append them to the diff state\n * @param {object} o1\n * @param {object} o2\n * @param {string} path\n * @param {object} state\n * @returns {Object} updated diff state\n */\nfunction appendObjectChanges(o1, o2, path, state) {\n\tvar keys = Object.keys(o2);\n\tvar patch = state.patch;\n\tvar i, key;\n\n\tfor(i=keys.length-1; i>=0; --i) {\n\t\tkey = keys[i];\n\t\tvar keyPath = path + '/' + encodeSegment(key);\n\t\tif(o1[key] !== void 0) {\n\t\t\tappendChanges(o1[key], o2[key], keyPath, state);\n\t\t} else {\n\t\t\tpatch.push({ op: 'add', path: keyPath, value: o2[key] });\n\t\t}\n\t}\n\n\tkeys = Object.keys(o1);\n\tfor(i=keys.length-1; i>=0; --i) {\n\t\tkey = keys[i];\n\t\tif(o2[key] === void 0) {\n\t\t\tvar p = path + '/' + encodeSegment(key);\n\t\t\tif(state.invertible) {\n\t\t\t\tpatch.push({ op: 'test', path: p, value: o1[key] });\n\t\t\t}\n\t\t\tpatch.push({ op: 'remove', path: p });\n\t\t}\n\t}\n\n\treturn state;\n}\n\n/**\n * Given two arrays, find their differences and append them to the diff state\n * @param {array} a1\n * @param {array} a2\n * @param {string} path\n * @param {object} state\n * @returns {Object} updated diff state\n */\nfunction appendArrayChanges(a1, a2, path, state) {\n\tvar a1hash = array.map(state.hash, a1);\n\tvar a2hash = array.map(state.hash, a2);\n\n\tvar lcsMatrix = lcs.compare(a1hash, a2hash);\n\n\treturn lcsToJsonPatch(a1, a2, path, state, lcsMatrix);\n}\n\n/**\n * Transform an lcsMatrix into JSON Patch operations and append\n * them to state.patch, recursing into array elements as necessary\n * @param {array} a1\n * @param {array} a2\n * @param {string} path\n * @param {object} state\n * @param {object} lcsMatrix\n * @returns {object} new state with JSON Patch operations added based\n *  on the provided lcsMatrix\n */\nfunction lcsToJsonPatch(a1, a2, path, state, lcsMatrix) {\n\tvar offset = 0;\n\treturn lcs.reduce(function(state, op, i, j) {\n\t\tvar last, context;\n\t\tvar patch = state.patch;\n\t\tvar p = path + '/' + (j + offset);\n\n\t\tif (op === lcs.REMOVE) {\n\t\t\t// Coalesce adjacent remove + add into replace\n\t\t\tlast = patch[patch.length-1];\n\t\t\tcontext = state.makeContext(j, a1);\n\n\t\t\tif(state.invertible) {\n\t\t\t\tpatch.push({ op: 'test', path: p, value: a1[j], context: context });\n\t\t\t}\n\n\t\t\tif(last !== void 0 && last.op === 'add' && last.path === p) {\n\t\t\t\tlast.op = 'replace';\n\t\t\t\tlast.context = context;\n\t\t\t} else {\n\t\t\t\tpatch.push({ op: 'remove', path: p, context: context });\n\t\t\t}\n\n\t\t\toffset -= 1;\n\n\t\t} else if (op === lcs.ADD) {\n\t\t\t// See https://tools.ietf.org/html/rfc6902#section-4.1\n\t\t\t// May use either index===length *or* '-' to indicate appending to array\n\t\t\tpatch.push({ op: 'add', path: p, value: a2[i],\n\t\t\t\tcontext: state.makeContext(j, a1)\n\t\t\t});\n\n\t\t\toffset += 1;\n\n\t\t} else {\n\t\t\tappendChanges(a1[j], a2[i], p, state);\n\t\t}\n\n\t\treturn state;\n\n\t}, state, lcsMatrix);\n}\n\n/**\n * Given two number|string|null values, if they differ, append to diff state\n * @param {string|number|null} a\n * @param {string|number|null} b\n * @param {string} path\n * @param {object} state\n * @returns {object} updated diff state\n */\nfunction appendValueChanges(a, b, path, state) {\n\tif(a !== b) {\n\t\tif(state.invertible) {\n\t\t\tstate.patch.push({ op: 'test', path: path, value: a });\n\t\t}\n\n\t\tstate.patch.push({ op: 'replace', path: path, value: b });\n\t}\n\n\treturn state;\n}\n\n/**\n * @param {function} predicate\n * @param {*} x\n * @param {*} y\n * @returns {*} x if predicate(x) is truthy, otherwise y\n */\nfunction orElse(predicate, x, y) {\n\treturn predicate(x) ? x : y;\n}\n\n/**\n * Default patch context generator\n * @returns {undefined} undefined context\n */\nfunction defaultContext() {\n\treturn void 0;\n}\n\n/**\n * @param {*} x\n * @returns {boolean} true if x is a function, false otherwise\n */\nfunction isFunction(x) {\n\treturn typeof x === 'function';\n}\n", "var util;\n(function (util) {\n    util.assertEqual = (val) => val;\n    function assertIs(_arg) { }\n    util.assertIs = assertIs;\n    function assertNever(_x) {\n        throw new Error();\n    }\n    util.assertNever = assertNever;\n    util.arrayToEnum = (items) => {\n        const obj = {};\n        for (const item of items) {\n            obj[item] = item;\n        }\n        return obj;\n    };\n    util.getValidEnumValues = (obj) => {\n        const validKeys = util.objectKeys(obj).filter((k) => typeof obj[obj[k]] !== \"number\");\n        const filtered = {};\n        for (const k of validKeys) {\n            filtered[k] = obj[k];\n        }\n        return util.objectValues(filtered);\n    };\n    util.objectValues = (obj) => {\n        return util.objectKeys(obj).map(function (e) {\n            return obj[e];\n        });\n    };\n    util.objectKeys = typeof Object.keys === \"function\" // eslint-disable-line ban/ban\n        ? (obj) => Object.keys(obj) // eslint-disable-line ban/ban\n        : (object) => {\n            const keys = [];\n            for (const key in object) {\n                if (Object.prototype.hasOwnProperty.call(object, key)) {\n                    keys.push(key);\n                }\n            }\n            return keys;\n        };\n    util.find = (arr, checker) => {\n        for (const item of arr) {\n            if (checker(item))\n                return item;\n        }\n        return undefined;\n    };\n    util.isInteger = typeof Number.isInteger === \"function\"\n        ? (val) => Number.isInteger(val) // eslint-disable-line ban/ban\n        : (val) => typeof val === \"number\" && isFinite(val) && Math.floor(val) === val;\n    function joinValues(array, separator = \" | \") {\n        return array\n            .map((val) => (typeof val === \"string\" ? `'${val}'` : val))\n            .join(separator);\n    }\n    util.joinValues = joinValues;\n    util.jsonStringifyReplacer = (_, value) => {\n        if (typeof value === \"bigint\") {\n            return value.toString();\n        }\n        return value;\n    };\n})(util || (util = {}));\nvar objectUtil;\n(function (objectUtil) {\n    objectUtil.mergeShapes = (first, second) => {\n        return {\n            ...first,\n            ...second, // second overwrites first\n        };\n    };\n})(objectUtil || (objectUtil = {}));\nconst ZodParsedType = util.arrayToEnum([\n    \"string\",\n    \"nan\",\n    \"number\",\n    \"integer\",\n    \"float\",\n    \"boolean\",\n    \"date\",\n    \"bigint\",\n    \"symbol\",\n    \"function\",\n    \"undefined\",\n    \"null\",\n    \"array\",\n    \"object\",\n    \"unknown\",\n    \"promise\",\n    \"void\",\n    \"never\",\n    \"map\",\n    \"set\",\n]);\nconst getParsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"undefined\":\n            return ZodParsedType.undefined;\n        case \"string\":\n            return ZodParsedType.string;\n        case \"number\":\n            return isNaN(data) ? ZodParsedType.nan : ZodParsedType.number;\n        case \"boolean\":\n            return ZodParsedType.boolean;\n        case \"function\":\n            return ZodParsedType.function;\n        case \"bigint\":\n            return ZodParsedType.bigint;\n        case \"symbol\":\n            return ZodParsedType.symbol;\n        case \"object\":\n            if (Array.isArray(data)) {\n                return ZodParsedType.array;\n            }\n            if (data === null) {\n                return ZodParsedType.null;\n            }\n            if (data.then &&\n                typeof data.then === \"function\" &&\n                data.catch &&\n                typeof data.catch === \"function\") {\n                return ZodParsedType.promise;\n            }\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\n                return ZodParsedType.map;\n            }\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\n                return ZodParsedType.set;\n            }\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\n                return ZodParsedType.date;\n            }\n            return ZodParsedType.object;\n        default:\n            return ZodParsedType.unknown;\n    }\n};\n\nconst ZodIssueCode = util.arrayToEnum([\n    \"invalid_type\",\n    \"invalid_literal\",\n    \"custom\",\n    \"invalid_union\",\n    \"invalid_union_discriminator\",\n    \"invalid_enum_value\",\n    \"unrecognized_keys\",\n    \"invalid_arguments\",\n    \"invalid_return_type\",\n    \"invalid_date\",\n    \"invalid_string\",\n    \"too_small\",\n    \"too_big\",\n    \"invalid_intersection_types\",\n    \"not_multiple_of\",\n    \"not_finite\",\n]);\nconst quotelessJson = (obj) => {\n    const json = JSON.stringify(obj, null, 2);\n    return json.replace(/\"([^\"]+)\":/g, \"$1:\");\n};\nclass ZodError extends Error {\n    constructor(issues) {\n        super();\n        this.issues = [];\n        this.addIssue = (sub) => {\n            this.issues = [...this.issues, sub];\n        };\n        this.addIssues = (subs = []) => {\n            this.issues = [...this.issues, ...subs];\n        };\n        const actualProto = new.target.prototype;\n        if (Object.setPrototypeOf) {\n            // eslint-disable-next-line ban/ban\n            Object.setPrototypeOf(this, actualProto);\n        }\n        else {\n            this.__proto__ = actualProto;\n        }\n        this.name = \"ZodError\";\n        this.issues = issues;\n    }\n    get errors() {\n        return this.issues;\n    }\n    format(_mapper) {\n        const mapper = _mapper ||\n            function (issue) {\n                return issue.message;\n            };\n        const fieldErrors = { _errors: [] };\n        const processError = (error) => {\n            for (const issue of error.issues) {\n                if (issue.code === \"invalid_union\") {\n                    issue.unionErrors.map(processError);\n                }\n                else if (issue.code === \"invalid_return_type\") {\n                    processError(issue.returnTypeError);\n                }\n                else if (issue.code === \"invalid_arguments\") {\n                    processError(issue.argumentsError);\n                }\n                else if (issue.path.length === 0) {\n                    fieldErrors._errors.push(mapper(issue));\n                }\n                else {\n                    let curr = fieldErrors;\n                    let i = 0;\n                    while (i < issue.path.length) {\n                        const el = issue.path[i];\n                        const terminal = i === issue.path.length - 1;\n                        if (!terminal) {\n                            curr[el] = curr[el] || { _errors: [] };\n                            // if (typeof el === \"string\") {\n                            //   curr[el] = curr[el] || { _errors: [] };\n                            // } else if (typeof el === \"number\") {\n                            //   const errorArray: any = [];\n                            //   errorArray._errors = [];\n                            //   curr[el] = curr[el] || errorArray;\n                            // }\n                        }\n                        else {\n                            curr[el] = curr[el] || { _errors: [] };\n                            curr[el]._errors.push(mapper(issue));\n                        }\n                        curr = curr[el];\n                        i++;\n                    }\n                }\n            }\n        };\n        processError(this);\n        return fieldErrors;\n    }\n    toString() {\n        return this.message;\n    }\n    get message() {\n        return JSON.stringify(this.issues, util.jsonStringifyReplacer, 2);\n    }\n    get isEmpty() {\n        return this.issues.length === 0;\n    }\n    flatten(mapper = (issue) => issue.message) {\n        const fieldErrors = {};\n        const formErrors = [];\n        for (const sub of this.issues) {\n            if (sub.path.length > 0) {\n                fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];\n                fieldErrors[sub.path[0]].push(mapper(sub));\n            }\n            else {\n                formErrors.push(mapper(sub));\n            }\n        }\n        return { formErrors, fieldErrors };\n    }\n    get formErrors() {\n        return this.flatten();\n    }\n}\nZodError.create = (issues) => {\n    const error = new ZodError(issues);\n    return error;\n};\n\nconst errorMap = (issue, _ctx) => {\n    let message;\n    switch (issue.code) {\n        case ZodIssueCode.invalid_type:\n            if (issue.received === ZodParsedType.undefined) {\n                message = \"Required\";\n            }\n            else {\n                message = `Expected ${issue.expected}, received ${issue.received}`;\n            }\n            break;\n        case ZodIssueCode.invalid_literal:\n            message = `Invalid literal value, expected ${JSON.stringify(issue.expected, util.jsonStringifyReplacer)}`;\n            break;\n        case ZodIssueCode.unrecognized_keys:\n            message = `Unrecognized key(s) in object: ${util.joinValues(issue.keys, \", \")}`;\n            break;\n        case ZodIssueCode.invalid_union:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_union_discriminator:\n            message = `Invalid discriminator value. Expected ${util.joinValues(issue.options)}`;\n            break;\n        case ZodIssueCode.invalid_enum_value:\n            message = `Invalid enum value. Expected ${util.joinValues(issue.options)}, received '${issue.received}'`;\n            break;\n        case ZodIssueCode.invalid_arguments:\n            message = `Invalid function arguments`;\n            break;\n        case ZodIssueCode.invalid_return_type:\n            message = `Invalid function return type`;\n            break;\n        case ZodIssueCode.invalid_date:\n            message = `Invalid date`;\n            break;\n        case ZodIssueCode.invalid_string:\n            if (typeof issue.validation === \"object\") {\n                if (\"includes\" in issue.validation) {\n                    message = `Invalid input: must include \"${issue.validation.includes}\"`;\n                    if (typeof issue.validation.position === \"number\") {\n                        message = `${message} at one or more positions greater than or equal to ${issue.validation.position}`;\n                    }\n                }\n                else if (\"startsWith\" in issue.validation) {\n                    message = `Invalid input: must start with \"${issue.validation.startsWith}\"`;\n                }\n                else if (\"endsWith\" in issue.validation) {\n                    message = `Invalid input: must end with \"${issue.validation.endsWith}\"`;\n                }\n                else {\n                    util.assertNever(issue.validation);\n                }\n            }\n            else if (issue.validation !== \"regex\") {\n                message = `Invalid ${issue.validation}`;\n            }\n            else {\n                message = \"Invalid\";\n            }\n            break;\n        case ZodIssueCode.too_small:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `more than`} ${issue.minimum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `over`} ${issue.minimum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${issue.minimum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${new Date(Number(issue.minimum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.too_big:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `less than`} ${issue.maximum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `under`} ${issue.maximum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"bigint\")\n                message = `BigInt must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `smaller than or equal to`\n                        : `smaller than`} ${new Date(Number(issue.maximum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.custom:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_intersection_types:\n            message = `Intersection results could not be merged`;\n            break;\n        case ZodIssueCode.not_multiple_of:\n            message = `Number must be a multiple of ${issue.multipleOf}`;\n            break;\n        case ZodIssueCode.not_finite:\n            message = \"Number must be finite\";\n            break;\n        default:\n            message = _ctx.defaultError;\n            util.assertNever(issue);\n    }\n    return { message };\n};\n\nlet overrideErrorMap = errorMap;\nfunction setErrorMap(map) {\n    overrideErrorMap = map;\n}\nfunction getErrorMap() {\n    return overrideErrorMap;\n}\n\nconst makeIssue = (params) => {\n    const { data, path, errorMaps, issueData } = params;\n    const fullPath = [...path, ...(issueData.path || [])];\n    const fullIssue = {\n        ...issueData,\n        path: fullPath,\n    };\n    let errorMessage = \"\";\n    const maps = errorMaps\n        .filter((m) => !!m)\n        .slice()\n        .reverse();\n    for (const map of maps) {\n        errorMessage = map(fullIssue, { data, defaultError: errorMessage }).message;\n    }\n    return {\n        ...issueData,\n        path: fullPath,\n        message: issueData.message || errorMessage,\n    };\n};\nconst EMPTY_PATH = [];\nfunction addIssueToContext(ctx, issueData) {\n    const issue = makeIssue({\n        issueData: issueData,\n        data: ctx.data,\n        path: ctx.path,\n        errorMaps: [\n            ctx.common.contextualErrorMap,\n            ctx.schemaErrorMap,\n            getErrorMap(),\n            errorMap, // then global default map\n        ].filter((x) => !!x),\n    });\n    ctx.common.issues.push(issue);\n}\nclass ParseStatus {\n    constructor() {\n        this.value = \"valid\";\n    }\n    dirty() {\n        if (this.value === \"valid\")\n            this.value = \"dirty\";\n    }\n    abort() {\n        if (this.value !== \"aborted\")\n            this.value = \"aborted\";\n    }\n    static mergeArray(status, results) {\n        const arrayValue = [];\n        for (const s of results) {\n            if (s.status === \"aborted\")\n                return INVALID;\n            if (s.status === \"dirty\")\n                status.dirty();\n            arrayValue.push(s.value);\n        }\n        return { status: status.value, value: arrayValue };\n    }\n    static async mergeObjectAsync(status, pairs) {\n        const syncPairs = [];\n        for (const pair of pairs) {\n            syncPairs.push({\n                key: await pair.key,\n                value: await pair.value,\n            });\n        }\n        return ParseStatus.mergeObjectSync(status, syncPairs);\n    }\n    static mergeObjectSync(status, pairs) {\n        const finalObject = {};\n        for (const pair of pairs) {\n            const { key, value } = pair;\n            if (key.status === \"aborted\")\n                return INVALID;\n            if (value.status === \"aborted\")\n                return INVALID;\n            if (key.status === \"dirty\")\n                status.dirty();\n            if (value.status === \"dirty\")\n                status.dirty();\n            if (typeof value.value !== \"undefined\" || pair.alwaysSet) {\n                finalObject[key.value] = value.value;\n            }\n        }\n        return { status: status.value, value: finalObject };\n    }\n}\nconst INVALID = Object.freeze({\n    status: \"aborted\",\n});\nconst DIRTY = (value) => ({ status: \"dirty\", value });\nconst OK = (value) => ({ status: \"valid\", value });\nconst isAborted = (x) => x.status === \"aborted\";\nconst isDirty = (x) => x.status === \"dirty\";\nconst isValid = (x) => x.status === \"valid\";\nconst isAsync = (x) => typeof Promise !== \"undefined\" && x instanceof Promise;\n\nvar errorUtil;\n(function (errorUtil) {\n    errorUtil.errToObj = (message) => typeof message === \"string\" ? { message } : message || {};\n    errorUtil.toString = (message) => typeof message === \"string\" ? message : message === null || message === void 0 ? void 0 : message.message;\n})(errorUtil || (errorUtil = {}));\n\nclass ParseInputLazyPath {\n    constructor(parent, value, path, key) {\n        this._cachedPath = [];\n        this.parent = parent;\n        this.data = value;\n        this._path = path;\n        this._key = key;\n    }\n    get path() {\n        if (!this._cachedPath.length) {\n            if (this._key instanceof Array) {\n                this._cachedPath.push(...this._path, ...this._key);\n            }\n            else {\n                this._cachedPath.push(...this._path, this._key);\n            }\n        }\n        return this._cachedPath;\n    }\n}\nconst handleResult = (ctx, result) => {\n    if (isValid(result)) {\n        return { success: true, data: result.value };\n    }\n    else {\n        if (!ctx.common.issues.length) {\n            throw new Error(\"Validation failed but no issues detected.\");\n        }\n        return {\n            success: false,\n            get error() {\n                if (this._error)\n                    return this._error;\n                const error = new ZodError(ctx.common.issues);\n                this._error = error;\n                return this._error;\n            },\n        };\n    }\n};\nfunction processCreateParams(params) {\n    if (!params)\n        return {};\n    const { errorMap, invalid_type_error, required_error, description } = params;\n    if (errorMap && (invalid_type_error || required_error)) {\n        throw new Error(`Can't use \"invalid_type_error\" or \"required_error\" in conjunction with custom error map.`);\n    }\n    if (errorMap)\n        return { errorMap: errorMap, description };\n    const customMap = (iss, ctx) => {\n        if (iss.code !== \"invalid_type\")\n            return { message: ctx.defaultError };\n        if (typeof ctx.data === \"undefined\") {\n            return { message: required_error !== null && required_error !== void 0 ? required_error : ctx.defaultError };\n        }\n        return { message: invalid_type_error !== null && invalid_type_error !== void 0 ? invalid_type_error : ctx.defaultError };\n    };\n    return { errorMap: customMap, description };\n}\nclass ZodType {\n    constructor(def) {\n        /** Alias of safeParseAsync */\n        this.spa = this.safeParseAsync;\n        this._def = def;\n        this.parse = this.parse.bind(this);\n        this.safeParse = this.safeParse.bind(this);\n        this.parseAsync = this.parseAsync.bind(this);\n        this.safeParseAsync = this.safeParseAsync.bind(this);\n        this.spa = this.spa.bind(this);\n        this.refine = this.refine.bind(this);\n        this.refinement = this.refinement.bind(this);\n        this.superRefine = this.superRefine.bind(this);\n        this.optional = this.optional.bind(this);\n        this.nullable = this.nullable.bind(this);\n        this.nullish = this.nullish.bind(this);\n        this.array = this.array.bind(this);\n        this.promise = this.promise.bind(this);\n        this.or = this.or.bind(this);\n        this.and = this.and.bind(this);\n        this.transform = this.transform.bind(this);\n        this.brand = this.brand.bind(this);\n        this.default = this.default.bind(this);\n        this.catch = this.catch.bind(this);\n        this.describe = this.describe.bind(this);\n        this.pipe = this.pipe.bind(this);\n        this.isNullable = this.isNullable.bind(this);\n        this.isOptional = this.isOptional.bind(this);\n    }\n    get description() {\n        return this._def.description;\n    }\n    _getType(input) {\n        return getParsedType(input.data);\n    }\n    _getOrReturnCtx(input, ctx) {\n        return (ctx || {\n            common: input.parent.common,\n            data: input.data,\n            parsedType: getParsedType(input.data),\n            schemaErrorMap: this._def.errorMap,\n            path: input.path,\n            parent: input.parent,\n        });\n    }\n    _processInputParams(input) {\n        return {\n            status: new ParseStatus(),\n            ctx: {\n                common: input.parent.common,\n                data: input.data,\n                parsedType: getParsedType(input.data),\n                schemaErrorMap: this._def.errorMap,\n                path: input.path,\n                parent: input.parent,\n            },\n        };\n    }\n    _parseSync(input) {\n        const result = this._parse(input);\n        if (isAsync(result)) {\n            throw new Error(\"Synchronous parse encountered promise.\");\n        }\n        return result;\n    }\n    _parseAsync(input) {\n        const result = this._parse(input);\n        return Promise.resolve(result);\n    }\n    parse(data, params) {\n        const result = this.safeParse(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    safeParse(data, params) {\n        var _a;\n        const ctx = {\n            common: {\n                issues: [],\n                async: (_a = params === null || params === void 0 ? void 0 : params.async) !== null && _a !== void 0 ? _a : false,\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const result = this._parseSync({ data, path: ctx.path, parent: ctx });\n        return handleResult(ctx, result);\n    }\n    async parseAsync(data, params) {\n        const result = await this.safeParseAsync(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    async safeParseAsync(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n                async: true,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const maybeAsyncResult = this._parse({ data, path: ctx.path, parent: ctx });\n        const result = await (isAsync(maybeAsyncResult)\n            ? maybeAsyncResult\n            : Promise.resolve(maybeAsyncResult));\n        return handleResult(ctx, result);\n    }\n    refine(check, message) {\n        const getIssueProperties = (val) => {\n            if (typeof message === \"string\" || typeof message === \"undefined\") {\n                return { message };\n            }\n            else if (typeof message === \"function\") {\n                return message(val);\n            }\n            else {\n                return message;\n            }\n        };\n        return this._refinement((val, ctx) => {\n            const result = check(val);\n            const setError = () => ctx.addIssue({\n                code: ZodIssueCode.custom,\n                ...getIssueProperties(val),\n            });\n            if (typeof Promise !== \"undefined\" && result instanceof Promise) {\n                return result.then((data) => {\n                    if (!data) {\n                        setError();\n                        return false;\n                    }\n                    else {\n                        return true;\n                    }\n                });\n            }\n            if (!result) {\n                setError();\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    refinement(check, refinementData) {\n        return this._refinement((val, ctx) => {\n            if (!check(val)) {\n                ctx.addIssue(typeof refinementData === \"function\"\n                    ? refinementData(val, ctx)\n                    : refinementData);\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    _refinement(refinement) {\n        return new ZodEffects({\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"refinement\", refinement },\n        });\n    }\n    superRefine(refinement) {\n        return this._refinement(refinement);\n    }\n    optional() {\n        return ZodOptional.create(this, this._def);\n    }\n    nullable() {\n        return ZodNullable.create(this, this._def);\n    }\n    nullish() {\n        return this.nullable().optional();\n    }\n    array() {\n        return ZodArray.create(this, this._def);\n    }\n    promise() {\n        return ZodPromise.create(this, this._def);\n    }\n    or(option) {\n        return ZodUnion.create([this, option], this._def);\n    }\n    and(incoming) {\n        return ZodIntersection.create(this, incoming, this._def);\n    }\n    transform(transform) {\n        return new ZodEffects({\n            ...processCreateParams(this._def),\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"transform\", transform },\n        });\n    }\n    default(def) {\n        const defaultValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodDefault({\n            ...processCreateParams(this._def),\n            innerType: this,\n            defaultValue: defaultValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodDefault,\n        });\n    }\n    brand() {\n        return new ZodBranded({\n            typeName: ZodFirstPartyTypeKind.ZodBranded,\n            type: this,\n            ...processCreateParams(this._def),\n        });\n    }\n    catch(def) {\n        const catchValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodCatch({\n            ...processCreateParams(this._def),\n            innerType: this,\n            catchValue: catchValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodCatch,\n        });\n    }\n    describe(description) {\n        const This = this.constructor;\n        return new This({\n            ...this._def,\n            description,\n        });\n    }\n    pipe(target) {\n        return ZodPipeline.create(this, target);\n    }\n    isOptional() {\n        return this.safeParse(undefined).success;\n    }\n    isNullable() {\n        return this.safeParse(null).success;\n    }\n}\nconst cuidRegex = /^c[^\\s-]{8,}$/i;\nconst cuid2Regex = /^[a-z][a-z0-9]*$/;\nconst ulidRegex = /[0-9A-HJKMNP-TV-Z]{26}/;\nconst uuidRegex = /^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i;\n// from https://stackoverflow.com/a/46181/1550155\n// old version: too slow, didn't support unicode\n// const emailRegex = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i;\n//old email regex\n// const emailRegex = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@((?!-)([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{1,})[^-<>()[\\].,;:\\s@\"]$/i;\n// eslint-disable-next-line\nconst emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\])|(\\[IPv6:(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))\\])|([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])*(\\.[A-Za-z]{2,})+))$/;\n// from https://thekevinscott.com/emojis-in-javascript/#writing-a-regular-expression\nconst emojiRegex = /^(\\p{Extended_Pictographic}|\\p{Emoji_Component})+$/u;\nconst ipv4Regex = /^(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))$/;\nconst ipv6Regex = /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/;\n// Adapted from https://stackoverflow.com/a/3143231\nconst datetimeRegex = (args) => {\n    if (args.precision) {\n        if (args.offset) {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\\\\.\\\\d{${args.precision}}(([+-]\\\\d{2}(:?\\\\d{2})?)|Z)$`);\n        }\n        else {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\\\\.\\\\d{${args.precision}}Z$`);\n        }\n    }\n    else if (args.precision === 0) {\n        if (args.offset) {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}(([+-]\\\\d{2}(:?\\\\d{2})?)|Z)$`);\n        }\n        else {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}Z$`);\n        }\n    }\n    else {\n        if (args.offset) {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}(\\\\.\\\\d+)?(([+-]\\\\d{2}(:?\\\\d{2})?)|Z)$`);\n        }\n        else {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}(\\\\.\\\\d+)?Z$`);\n        }\n    }\n};\nfunction isValidIP(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4Regex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6Regex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nclass ZodString extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._regex = (regex, validation, message) => this.refinement((data) => regex.test(data), {\n            validation,\n            code: ZodIssueCode.invalid_string,\n            ...errorUtil.errToObj(message),\n        });\n        /**\n         * @deprecated Use z.string().min(1) instead.\n         * @see {@link ZodString.min}\n         */\n        this.nonempty = (message) => this.min(1, errorUtil.errToObj(message));\n        this.trim = () => new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"trim\" }],\n        });\n        this.toLowerCase = () => new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toLowerCase\" }],\n        });\n        this.toUpperCase = () => new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toUpperCase\" }],\n        });\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = String(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.string) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.string,\n                received: ctx.parsedType,\n            }\n            //\n            );\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.length < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.length > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"length\") {\n                const tooBig = input.data.length > check.value;\n                const tooSmall = input.data.length < check.value;\n                if (tooBig || tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    if (tooBig) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_big,\n                            maximum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    else if (tooSmall) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_small,\n                            minimum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"email\") {\n                if (!emailRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"email\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"emoji\") {\n                if (!emojiRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"emoji\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"uuid\") {\n                if (!uuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"uuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid\") {\n                if (!cuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid2\") {\n                if (!cuid2Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid2\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ulid\") {\n                if (!ulidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ulid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"url\") {\n                try {\n                    new URL(input.data);\n                }\n                catch (_a) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"regex\") {\n                check.regex.lastIndex = 0;\n                const testResult = check.regex.test(input.data);\n                if (!testResult) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"regex\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"trim\") {\n                input.data = input.data.trim();\n            }\n            else if (check.kind === \"includes\") {\n                if (!input.data.includes(check.value, check.position)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { includes: check.value, position: check.position },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"toLowerCase\") {\n                input.data = input.data.toLowerCase();\n            }\n            else if (check.kind === \"toUpperCase\") {\n                input.data = input.data.toUpperCase();\n            }\n            else if (check.kind === \"startsWith\") {\n                if (!input.data.startsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { startsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"endsWith\") {\n                if (!input.data.endsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { endsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"datetime\") {\n                const regex = datetimeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"datetime\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ip\") {\n                if (!isValidIP(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ip\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _addCheck(check) {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    email(message) {\n        return this._addCheck({ kind: \"email\", ...errorUtil.errToObj(message) });\n    }\n    url(message) {\n        return this._addCheck({ kind: \"url\", ...errorUtil.errToObj(message) });\n    }\n    emoji(message) {\n        return this._addCheck({ kind: \"emoji\", ...errorUtil.errToObj(message) });\n    }\n    uuid(message) {\n        return this._addCheck({ kind: \"uuid\", ...errorUtil.errToObj(message) });\n    }\n    cuid(message) {\n        return this._addCheck({ kind: \"cuid\", ...errorUtil.errToObj(message) });\n    }\n    cuid2(message) {\n        return this._addCheck({ kind: \"cuid2\", ...errorUtil.errToObj(message) });\n    }\n    ulid(message) {\n        return this._addCheck({ kind: \"ulid\", ...errorUtil.errToObj(message) });\n    }\n    ip(options) {\n        return this._addCheck({ kind: \"ip\", ...errorUtil.errToObj(options) });\n    }\n    datetime(options) {\n        var _a;\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"datetime\",\n                precision: null,\n                offset: false,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"datetime\",\n            precision: typeof (options === null || options === void 0 ? void 0 : options.precision) === \"undefined\" ? null : options === null || options === void 0 ? void 0 : options.precision,\n            offset: (_a = options === null || options === void 0 ? void 0 : options.offset) !== null && _a !== void 0 ? _a : false,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    regex(regex, message) {\n        return this._addCheck({\n            kind: \"regex\",\n            regex: regex,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    includes(value, options) {\n        return this._addCheck({\n            kind: \"includes\",\n            value: value,\n            position: options === null || options === void 0 ? void 0 : options.position,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    startsWith(value, message) {\n        return this._addCheck({\n            kind: \"startsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    endsWith(value, message) {\n        return this._addCheck({\n            kind: \"endsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    min(minLength, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    max(maxLength, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    length(len, message) {\n        return this._addCheck({\n            kind: \"length\",\n            value: len,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    get isDatetime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"datetime\");\n    }\n    get isEmail() {\n        return !!this._def.checks.find((ch) => ch.kind === \"email\");\n    }\n    get isURL() {\n        return !!this._def.checks.find((ch) => ch.kind === \"url\");\n    }\n    get isEmoji() {\n        return !!this._def.checks.find((ch) => ch.kind === \"emoji\");\n    }\n    get isUUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"uuid\");\n    }\n    get isCUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid\");\n    }\n    get isCUID2() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid2\");\n    }\n    get isULID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ulid\");\n    }\n    get isIP() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ip\");\n    }\n    get minLength() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxLength() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodString.create = (params) => {\n    var _a;\n    return new ZodString({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodString,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\n// https://stackoverflow.com/questions/3966484/why-does-modulus-operator-return-fractional-number-in-javascript/31711034#31711034\nfunction floatSafeRemainder(val, step) {\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n    const stepDecCount = (step.toString().split(\".\")[1] || \"\").length;\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n    const valInt = parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n    const stepInt = parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n    return (valInt % stepInt) / Math.pow(10, decCount);\n}\nclass ZodNumber extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n        this.step = this.multipleOf;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Number(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.number) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.number,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"int\") {\n                if (!util.isInteger(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_type,\n                        expected: \"integer\",\n                        received: \"float\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (floatSafeRemainder(input.data, check.value) !== 0) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"finite\") {\n                if (!Number.isFinite(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_finite,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    int(message) {\n        return this._addCheck({\n            kind: \"int\",\n            message: errorUtil.toString(message),\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value: value,\n            message: errorUtil.toString(message),\n        });\n    }\n    finite(message) {\n        return this._addCheck({\n            kind: \"finite\",\n            message: errorUtil.toString(message),\n        });\n    }\n    safe(message) {\n        return this._addCheck({\n            kind: \"min\",\n            inclusive: true,\n            value: Number.MIN_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        })._addCheck({\n            kind: \"max\",\n            inclusive: true,\n            value: Number.MAX_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n    get isInt() {\n        return !!this._def.checks.find((ch) => ch.kind === \"int\" ||\n            (ch.kind === \"multipleOf\" && util.isInteger(ch.value)));\n    }\n    get isFinite() {\n        let max = null, min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"finite\" ||\n                ch.kind === \"int\" ||\n                ch.kind === \"multipleOf\") {\n                return true;\n            }\n            else if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n            else if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return Number.isFinite(min) && Number.isFinite(max);\n    }\n}\nZodNumber.create = (params) => {\n    return new ZodNumber({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodNumber,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBigInt extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = BigInt(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.bigint) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.bigint,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        type: \"bigint\",\n                        minimum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        type: \"bigint\",\n                        maximum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (input.data % check.value !== BigInt(0)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodBigInt.create = (params) => {\n    var _a;\n    return new ZodBigInt({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodBigInt,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBoolean extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Boolean(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.boolean) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.boolean,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodBoolean.create = (params) => {\n    return new ZodBoolean({\n        typeName: ZodFirstPartyTypeKind.ZodBoolean,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDate extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = new Date(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.date) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.date,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (isNaN(input.data.getTime())) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_date,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.getTime() < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        minimum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.getTime() > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        maximum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return {\n            status: status.value,\n            value: new Date(input.data.getTime()),\n        };\n    }\n    _addCheck(check) {\n        return new ZodDate({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    min(minDate, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    max(maxDate, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    get minDate() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min != null ? new Date(min) : null;\n    }\n    get maxDate() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max != null ? new Date(max) : null;\n    }\n}\nZodDate.create = (params) => {\n    return new ZodDate({\n        checks: [],\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        typeName: ZodFirstPartyTypeKind.ZodDate,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSymbol extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.symbol) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.symbol,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodSymbol.create = (params) => {\n    return new ZodSymbol({\n        typeName: ZodFirstPartyTypeKind.ZodSymbol,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUndefined extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.undefined,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodUndefined.create = (params) => {\n    return new ZodUndefined({\n        typeName: ZodFirstPartyTypeKind.ZodUndefined,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNull extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.null) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.null,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodNull.create = (params) => {\n    return new ZodNull({\n        typeName: ZodFirstPartyTypeKind.ZodNull,\n        ...processCreateParams(params),\n    });\n};\nclass ZodAny extends ZodType {\n    constructor() {\n        super(...arguments);\n        // to prevent instances of other classes from extending ZodAny. this causes issues with catchall in ZodObject.\n        this._any = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodAny.create = (params) => {\n    return new ZodAny({\n        typeName: ZodFirstPartyTypeKind.ZodAny,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnknown extends ZodType {\n    constructor() {\n        super(...arguments);\n        // required\n        this._unknown = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodUnknown.create = (params) => {\n    return new ZodUnknown({\n        typeName: ZodFirstPartyTypeKind.ZodUnknown,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNever extends ZodType {\n    _parse(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.never,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n}\nZodNever.create = (params) => {\n    return new ZodNever({\n        typeName: ZodFirstPartyTypeKind.ZodNever,\n        ...processCreateParams(params),\n    });\n};\nclass ZodVoid extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.void,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodVoid.create = (params) => {\n    return new ZodVoid({\n        typeName: ZodFirstPartyTypeKind.ZodVoid,\n        ...processCreateParams(params),\n    });\n};\nclass ZodArray extends ZodType {\n    _parse(input) {\n        const { ctx, status } = this._processInputParams(input);\n        const def = this._def;\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (def.exactLength !== null) {\n            const tooBig = ctx.data.length > def.exactLength.value;\n            const tooSmall = ctx.data.length < def.exactLength.value;\n            if (tooBig || tooSmall) {\n                addIssueToContext(ctx, {\n                    code: tooBig ? ZodIssueCode.too_big : ZodIssueCode.too_small,\n                    minimum: (tooSmall ? def.exactLength.value : undefined),\n                    maximum: (tooBig ? def.exactLength.value : undefined),\n                    type: \"array\",\n                    inclusive: true,\n                    exact: true,\n                    message: def.exactLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.minLength !== null) {\n            if (ctx.data.length < def.minLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxLength !== null) {\n            if (ctx.data.length > def.maxLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.all([...ctx.data].map((item, i) => {\n                return def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n            })).then((result) => {\n                return ParseStatus.mergeArray(status, result);\n            });\n        }\n        const result = [...ctx.data].map((item, i) => {\n            return def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n        });\n        return ParseStatus.mergeArray(status, result);\n    }\n    get element() {\n        return this._def.type;\n    }\n    min(minLength, message) {\n        return new ZodArray({\n            ...this._def,\n            minLength: { value: minLength, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxLength, message) {\n        return new ZodArray({\n            ...this._def,\n            maxLength: { value: maxLength, message: errorUtil.toString(message) },\n        });\n    }\n    length(len, message) {\n        return new ZodArray({\n            ...this._def,\n            exactLength: { value: len, message: errorUtil.toString(message) },\n        });\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodArray.create = (schema, params) => {\n    return new ZodArray({\n        type: schema,\n        minLength: null,\n        maxLength: null,\n        exactLength: null,\n        typeName: ZodFirstPartyTypeKind.ZodArray,\n        ...processCreateParams(params),\n    });\n};\nfunction deepPartialify(schema) {\n    if (schema instanceof ZodObject) {\n        const newShape = {};\n        for (const key in schema.shape) {\n            const fieldSchema = schema.shape[key];\n            newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));\n        }\n        return new ZodObject({\n            ...schema._def,\n            shape: () => newShape,\n        });\n    }\n    else if (schema instanceof ZodArray) {\n        return new ZodArray({\n            ...schema._def,\n            type: deepPartialify(schema.element),\n        });\n    }\n    else if (schema instanceof ZodOptional) {\n        return ZodOptional.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodNullable) {\n        return ZodNullable.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodTuple) {\n        return ZodTuple.create(schema.items.map((item) => deepPartialify(item)));\n    }\n    else {\n        return schema;\n    }\n}\nclass ZodObject extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._cached = null;\n        /**\n         * @deprecated In most cases, this is no longer needed - unknown properties are now silently stripped.\n         * If you want to pass through unknown properties, use `.passthrough()` instead.\n         */\n        this.nonstrict = this.passthrough;\n        // extend<\n        //   Augmentation extends ZodRawShape,\n        //   NewOutput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_output\"]\n        //       : k extends keyof Output\n        //       ? Output[k]\n        //       : never;\n        //   }>,\n        //   NewInput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_input\"]\n        //       : k extends keyof Input\n        //       ? Input[k]\n        //       : never;\n        //   }>\n        // >(\n        //   augmentation: Augmentation\n        // ): ZodObject<\n        //   extendShape<T, Augmentation>,\n        //   UnknownKeys,\n        //   Catchall,\n        //   NewOutput,\n        //   NewInput\n        // > {\n        //   return new ZodObject({\n        //     ...this._def,\n        //     shape: () => ({\n        //       ...this._def.shape(),\n        //       ...augmentation,\n        //     }),\n        //   }) as any;\n        // }\n        /**\n         * @deprecated Use `.extend` instead\n         *  */\n        this.augment = this.extend;\n    }\n    _getCached() {\n        if (this._cached !== null)\n            return this._cached;\n        const shape = this._def.shape();\n        const keys = util.objectKeys(shape);\n        return (this._cached = { shape, keys });\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.object) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const { status, ctx } = this._processInputParams(input);\n        const { shape, keys: shapeKeys } = this._getCached();\n        const extraKeys = [];\n        if (!(this._def.catchall instanceof ZodNever &&\n            this._def.unknownKeys === \"strip\")) {\n            for (const key in ctx.data) {\n                if (!shapeKeys.includes(key)) {\n                    extraKeys.push(key);\n                }\n            }\n        }\n        const pairs = [];\n        for (const key of shapeKeys) {\n            const keyValidator = shape[key];\n            const value = ctx.data[key];\n            pairs.push({\n                key: { status: \"valid\", value: key },\n                value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (this._def.catchall instanceof ZodNever) {\n            const unknownKeys = this._def.unknownKeys;\n            if (unknownKeys === \"passthrough\") {\n                for (const key of extraKeys) {\n                    pairs.push({\n                        key: { status: \"valid\", value: key },\n                        value: { status: \"valid\", value: ctx.data[key] },\n                    });\n                }\n            }\n            else if (unknownKeys === \"strict\") {\n                if (extraKeys.length > 0) {\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.unrecognized_keys,\n                        keys: extraKeys,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (unknownKeys === \"strip\") ;\n            else {\n                throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);\n            }\n        }\n        else {\n            // run catchall validation\n            const catchall = this._def.catchall;\n            for (const key of extraKeys) {\n                const value = ctx.data[key];\n                pairs.push({\n                    key: { status: \"valid\", value: key },\n                    value: catchall._parse(new ParseInputLazyPath(ctx, value, ctx.path, key) //, ctx.child(key), value, getParsedType(value)\n                    ),\n                    alwaysSet: key in ctx.data,\n                });\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.resolve()\n                .then(async () => {\n                const syncPairs = [];\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    syncPairs.push({\n                        key,\n                        value: await pair.value,\n                        alwaysSet: pair.alwaysSet,\n                    });\n                }\n                return syncPairs;\n            })\n                .then((syncPairs) => {\n                return ParseStatus.mergeObjectSync(status, syncPairs);\n            });\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get shape() {\n        return this._def.shape();\n    }\n    strict(message) {\n        errorUtil.errToObj;\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strict\",\n            ...(message !== undefined\n                ? {\n                    errorMap: (issue, ctx) => {\n                        var _a, _b, _c, _d;\n                        const defaultError = (_c = (_b = (_a = this._def).errorMap) === null || _b === void 0 ? void 0 : _b.call(_a, issue, ctx).message) !== null && _c !== void 0 ? _c : ctx.defaultError;\n                        if (issue.code === \"unrecognized_keys\")\n                            return {\n                                message: (_d = errorUtil.errToObj(message).message) !== null && _d !== void 0 ? _d : defaultError,\n                            };\n                        return {\n                            message: defaultError,\n                        };\n                    },\n                }\n                : {}),\n        });\n    }\n    strip() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strip\",\n        });\n    }\n    passthrough() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"passthrough\",\n        });\n    }\n    // const AugmentFactory =\n    //   <Def extends ZodObjectDef>(def: Def) =>\n    //   <Augmentation extends ZodRawShape>(\n    //     augmentation: Augmentation\n    //   ): ZodObject<\n    //     extendShape<ReturnType<Def[\"shape\"]>, Augmentation>,\n    //     Def[\"unknownKeys\"],\n    //     Def[\"catchall\"]\n    //   > => {\n    //     return new ZodObject({\n    //       ...def,\n    //       shape: () => ({\n    //         ...def.shape(),\n    //         ...augmentation,\n    //       }),\n    //     }) as any;\n    //   };\n    extend(augmentation) {\n        return new ZodObject({\n            ...this._def,\n            shape: () => ({\n                ...this._def.shape(),\n                ...augmentation,\n            }),\n        });\n    }\n    /**\n     * Prior to zod@1.0.12 there was a bug in the\n     * inferred type of merged objects. Please\n     * upgrade if you are experiencing issues.\n     */\n    merge(merging) {\n        const merged = new ZodObject({\n            unknownKeys: merging._def.unknownKeys,\n            catchall: merging._def.catchall,\n            shape: () => ({\n                ...this._def.shape(),\n                ...merging._def.shape(),\n            }),\n            typeName: ZodFirstPartyTypeKind.ZodObject,\n        });\n        return merged;\n    }\n    // merge<\n    //   Incoming extends AnyZodObject,\n    //   Augmentation extends Incoming[\"shape\"],\n    //   NewOutput extends {\n    //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_output\"]\n    //       : k extends keyof Output\n    //       ? Output[k]\n    //       : never;\n    //   },\n    //   NewInput extends {\n    //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_input\"]\n    //       : k extends keyof Input\n    //       ? Input[k]\n    //       : never;\n    //   }\n    // >(\n    //   merging: Incoming\n    // ): ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"],\n    //   NewOutput,\n    //   NewInput\n    // > {\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    setKey(key, schema) {\n        return this.augment({ [key]: schema });\n    }\n    // merge<Incoming extends AnyZodObject>(\n    //   merging: Incoming\n    // ): //ZodObject<T & Incoming[\"_shape\"], UnknownKeys, Catchall> = (merging) => {\n    // ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"]\n    // > {\n    //   // const mergedShape = objectUtil.mergeShapes(\n    //   //   this._def.shape(),\n    //   //   merging._def.shape()\n    //   // );\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    catchall(index) {\n        return new ZodObject({\n            ...this._def,\n            catchall: index,\n        });\n    }\n    pick(mask) {\n        const shape = {};\n        util.objectKeys(mask).forEach((key) => {\n            if (mask[key] && this.shape[key]) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    omit(mask) {\n        const shape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            if (!mask[key]) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    /**\n     * @deprecated\n     */\n    deepPartial() {\n        return deepPartialify(this);\n    }\n    partial(mask) {\n        const newShape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            const fieldSchema = this.shape[key];\n            if (mask && !mask[key]) {\n                newShape[key] = fieldSchema;\n            }\n            else {\n                newShape[key] = fieldSchema.optional();\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    required(mask) {\n        const newShape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            if (mask && !mask[key]) {\n                newShape[key] = this.shape[key];\n            }\n            else {\n                const fieldSchema = this.shape[key];\n                let newField = fieldSchema;\n                while (newField instanceof ZodOptional) {\n                    newField = newField._def.innerType;\n                }\n                newShape[key] = newField;\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    keyof() {\n        return createZodEnum(util.objectKeys(this.shape));\n    }\n}\nZodObject.create = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.strictCreate = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strict\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.lazycreate = (shape, params) => {\n    return new ZodObject({\n        shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const options = this._def.options;\n        function handleResults(results) {\n            // return first issue-free validation if it exists\n            for (const result of results) {\n                if (result.result.status === \"valid\") {\n                    return result.result;\n                }\n            }\n            for (const result of results) {\n                if (result.result.status === \"dirty\") {\n                    // add issues from dirty option\n                    ctx.common.issues.push(...result.ctx.common.issues);\n                    return result.result;\n                }\n            }\n            // return invalid\n            const unionErrors = results.map((result) => new ZodError(result.ctx.common.issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return Promise.all(options.map(async (option) => {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                return {\n                    result: await option._parseAsync({\n                        data: ctx.data,\n                        path: ctx.path,\n                        parent: childCtx,\n                    }),\n                    ctx: childCtx,\n                };\n            })).then(handleResults);\n        }\n        else {\n            let dirty = undefined;\n            const issues = [];\n            for (const option of options) {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                const result = option._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: childCtx,\n                });\n                if (result.status === \"valid\") {\n                    return result;\n                }\n                else if (result.status === \"dirty\" && !dirty) {\n                    dirty = { result, ctx: childCtx };\n                }\n                if (childCtx.common.issues.length) {\n                    issues.push(childCtx.common.issues);\n                }\n            }\n            if (dirty) {\n                ctx.common.issues.push(...dirty.ctx.common.issues);\n                return dirty.result;\n            }\n            const unionErrors = issues.map((issues) => new ZodError(issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n    }\n    get options() {\n        return this._def.options;\n    }\n}\nZodUnion.create = (types, params) => {\n    return new ZodUnion({\n        options: types,\n        typeName: ZodFirstPartyTypeKind.ZodUnion,\n        ...processCreateParams(params),\n    });\n};\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\n//////////                                 //////////\n//////////      ZodDiscriminatedUnion      //////////\n//////////                                 //////////\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\nconst getDiscriminator = (type) => {\n    if (type instanceof ZodLazy) {\n        return getDiscriminator(type.schema);\n    }\n    else if (type instanceof ZodEffects) {\n        return getDiscriminator(type.innerType());\n    }\n    else if (type instanceof ZodLiteral) {\n        return [type.value];\n    }\n    else if (type instanceof ZodEnum) {\n        return type.options;\n    }\n    else if (type instanceof ZodNativeEnum) {\n        // eslint-disable-next-line ban/ban\n        return Object.keys(type.enum);\n    }\n    else if (type instanceof ZodDefault) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else if (type instanceof ZodUndefined) {\n        return [undefined];\n    }\n    else if (type instanceof ZodNull) {\n        return [null];\n    }\n    else {\n        return null;\n    }\n};\nclass ZodDiscriminatedUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const discriminator = this.discriminator;\n        const discriminatorValue = ctx.data[discriminator];\n        const option = this.optionsMap.get(discriminatorValue);\n        if (!option) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union_discriminator,\n                options: Array.from(this.optionsMap.keys()),\n                path: [discriminator],\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return option._parseAsync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n        else {\n            return option._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n    }\n    get discriminator() {\n        return this._def.discriminator;\n    }\n    get options() {\n        return this._def.options;\n    }\n    get optionsMap() {\n        return this._def.optionsMap;\n    }\n    /**\n     * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.\n     * However, it only allows a union of objects, all of which need to share a discriminator property. This property must\n     * have a different value for each object in the union.\n     * @param discriminator the name of the discriminator property\n     * @param types an array of object schemas\n     * @param params\n     */\n    static create(discriminator, options, params) {\n        // Get all the valid discriminator values\n        const optionsMap = new Map();\n        // try {\n        for (const type of options) {\n            const discriminatorValues = getDiscriminator(type.shape[discriminator]);\n            if (!discriminatorValues) {\n                throw new Error(`A discriminator value for key \\`${discriminator}\\` could not be extracted from all schema options`);\n            }\n            for (const value of discriminatorValues) {\n                if (optionsMap.has(value)) {\n                    throw new Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`);\n                }\n                optionsMap.set(value, type);\n            }\n        }\n        return new ZodDiscriminatedUnion({\n            typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,\n            discriminator,\n            options,\n            optionsMap,\n            ...processCreateParams(params),\n        });\n    }\n}\nfunction mergeValues(a, b) {\n    const aType = getParsedType(a);\n    const bType = getParsedType(b);\n    if (a === b) {\n        return { valid: true, data: a };\n    }\n    else if (aType === ZodParsedType.object && bType === ZodParsedType.object) {\n        const bKeys = util.objectKeys(b);\n        const sharedKeys = util\n            .objectKeys(a)\n            .filter((key) => bKeys.indexOf(key) !== -1);\n        const newObj = { ...a, ...b };\n        for (const key of sharedKeys) {\n            const sharedValue = mergeValues(a[key], b[key]);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newObj[key] = sharedValue.data;\n        }\n        return { valid: true, data: newObj };\n    }\n    else if (aType === ZodParsedType.array && bType === ZodParsedType.array) {\n        if (a.length !== b.length) {\n            return { valid: false };\n        }\n        const newArray = [];\n        for (let index = 0; index < a.length; index++) {\n            const itemA = a[index];\n            const itemB = b[index];\n            const sharedValue = mergeValues(itemA, itemB);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newArray.push(sharedValue.data);\n        }\n        return { valid: true, data: newArray };\n    }\n    else if (aType === ZodParsedType.date &&\n        bType === ZodParsedType.date &&\n        +a === +b) {\n        return { valid: true, data: a };\n    }\n    else {\n        return { valid: false };\n    }\n}\nclass ZodIntersection extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const handleParsed = (parsedLeft, parsedRight) => {\n            if (isAborted(parsedLeft) || isAborted(parsedRight)) {\n                return INVALID;\n            }\n            const merged = mergeValues(parsedLeft.value, parsedRight.value);\n            if (!merged.valid) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.invalid_intersection_types,\n                });\n                return INVALID;\n            }\n            if (isDirty(parsedLeft) || isDirty(parsedRight)) {\n                status.dirty();\n            }\n            return { status: status.value, value: merged.data };\n        };\n        if (ctx.common.async) {\n            return Promise.all([\n                this._def.left._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n                this._def.right._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n            ]).then(([left, right]) => handleParsed(left, right));\n        }\n        else {\n            return handleParsed(this._def.left._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }), this._def.right._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }));\n        }\n    }\n}\nZodIntersection.create = (left, right, params) => {\n    return new ZodIntersection({\n        left: left,\n        right: right,\n        typeName: ZodFirstPartyTypeKind.ZodIntersection,\n        ...processCreateParams(params),\n    });\n};\nclass ZodTuple extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (ctx.data.length < this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_small,\n                minimum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            return INVALID;\n        }\n        const rest = this._def.rest;\n        if (!rest && ctx.data.length > this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_big,\n                maximum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            status.dirty();\n        }\n        const items = [...ctx.data]\n            .map((item, itemIndex) => {\n            const schema = this._def.items[itemIndex] || this._def.rest;\n            if (!schema)\n                return null;\n            return schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex));\n        })\n            .filter((x) => !!x); // filter nulls\n        if (ctx.common.async) {\n            return Promise.all(items).then((results) => {\n                return ParseStatus.mergeArray(status, results);\n            });\n        }\n        else {\n            return ParseStatus.mergeArray(status, items);\n        }\n    }\n    get items() {\n        return this._def.items;\n    }\n    rest(rest) {\n        return new ZodTuple({\n            ...this._def,\n            rest,\n        });\n    }\n}\nZodTuple.create = (schemas, params) => {\n    if (!Array.isArray(schemas)) {\n        throw new Error(\"You must pass an array of schemas to z.tuple([ ... ])\");\n    }\n    return new ZodTuple({\n        items: schemas,\n        typeName: ZodFirstPartyTypeKind.ZodTuple,\n        rest: null,\n        ...processCreateParams(params),\n    });\n};\nclass ZodRecord extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const pairs = [];\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        for (const key in ctx.data) {\n            pairs.push({\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),\n                value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key)),\n            });\n        }\n        if (ctx.common.async) {\n            return ParseStatus.mergeObjectAsync(status, pairs);\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get element() {\n        return this._def.valueType;\n    }\n    static create(first, second, third) {\n        if (second instanceof ZodType) {\n            return new ZodRecord({\n                keyType: first,\n                valueType: second,\n                typeName: ZodFirstPartyTypeKind.ZodRecord,\n                ...processCreateParams(third),\n            });\n        }\n        return new ZodRecord({\n            keyType: ZodString.create(),\n            valueType: first,\n            typeName: ZodFirstPartyTypeKind.ZodRecord,\n            ...processCreateParams(second),\n        });\n    }\n}\nclass ZodMap extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.map) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.map,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        const pairs = [...ctx.data.entries()].map(([key, value], index) => {\n            return {\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index, \"key\"])),\n                value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, \"value\"])),\n            };\n        });\n        if (ctx.common.async) {\n            const finalMap = new Map();\n            return Promise.resolve().then(async () => {\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    if (key.status === \"aborted\" || value.status === \"aborted\") {\n                        return INVALID;\n                    }\n                    if (key.status === \"dirty\" || value.status === \"dirty\") {\n                        status.dirty();\n                    }\n                    finalMap.set(key.value, value.value);\n                }\n                return { status: status.value, value: finalMap };\n            });\n        }\n        else {\n            const finalMap = new Map();\n            for (const pair of pairs) {\n                const key = pair.key;\n                const value = pair.value;\n                if (key.status === \"aborted\" || value.status === \"aborted\") {\n                    return INVALID;\n                }\n                if (key.status === \"dirty\" || value.status === \"dirty\") {\n                    status.dirty();\n                }\n                finalMap.set(key.value, value.value);\n            }\n            return { status: status.value, value: finalMap };\n        }\n    }\n}\nZodMap.create = (keyType, valueType, params) => {\n    return new ZodMap({\n        valueType,\n        keyType,\n        typeName: ZodFirstPartyTypeKind.ZodMap,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSet extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.set) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.set,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const def = this._def;\n        if (def.minSize !== null) {\n            if (ctx.data.size < def.minSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minSize.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxSize !== null) {\n            if (ctx.data.size > def.maxSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxSize.message,\n                });\n                status.dirty();\n            }\n        }\n        const valueType = this._def.valueType;\n        function finalizeSet(elements) {\n            const parsedSet = new Set();\n            for (const element of elements) {\n                if (element.status === \"aborted\")\n                    return INVALID;\n                if (element.status === \"dirty\")\n                    status.dirty();\n                parsedSet.add(element.value);\n            }\n            return { status: status.value, value: parsedSet };\n        }\n        const elements = [...ctx.data.values()].map((item, i) => valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i)));\n        if (ctx.common.async) {\n            return Promise.all(elements).then((elements) => finalizeSet(elements));\n        }\n        else {\n            return finalizeSet(elements);\n        }\n    }\n    min(minSize, message) {\n        return new ZodSet({\n            ...this._def,\n            minSize: { value: minSize, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxSize, message) {\n        return new ZodSet({\n            ...this._def,\n            maxSize: { value: maxSize, message: errorUtil.toString(message) },\n        });\n    }\n    size(size, message) {\n        return this.min(size, message).max(size, message);\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodSet.create = (valueType, params) => {\n    return new ZodSet({\n        valueType,\n        minSize: null,\n        maxSize: null,\n        typeName: ZodFirstPartyTypeKind.ZodSet,\n        ...processCreateParams(params),\n    });\n};\nclass ZodFunction extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.validate = this.implement;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.function) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.function,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        function makeArgsIssue(args, error) {\n            return makeIssue({\n                data: args,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    getErrorMap(),\n                    errorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_arguments,\n                    argumentsError: error,\n                },\n            });\n        }\n        function makeReturnsIssue(returns, error) {\n            return makeIssue({\n                data: returns,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    getErrorMap(),\n                    errorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_return_type,\n                    returnTypeError: error,\n                },\n            });\n        }\n        const params = { errorMap: ctx.common.contextualErrorMap };\n        const fn = ctx.data;\n        if (this._def.returns instanceof ZodPromise) {\n            return OK(async (...args) => {\n                const error = new ZodError([]);\n                const parsedArgs = await this._def.args\n                    .parseAsync(args, params)\n                    .catch((e) => {\n                    error.addIssue(makeArgsIssue(args, e));\n                    throw error;\n                });\n                const result = await fn(...parsedArgs);\n                const parsedReturns = await this._def.returns._def.type\n                    .parseAsync(result, params)\n                    .catch((e) => {\n                    error.addIssue(makeReturnsIssue(result, e));\n                    throw error;\n                });\n                return parsedReturns;\n            });\n        }\n        else {\n            return OK((...args) => {\n                const parsedArgs = this._def.args.safeParse(args, params);\n                if (!parsedArgs.success) {\n                    throw new ZodError([makeArgsIssue(args, parsedArgs.error)]);\n                }\n                const result = fn(...parsedArgs.data);\n                const parsedReturns = this._def.returns.safeParse(result, params);\n                if (!parsedReturns.success) {\n                    throw new ZodError([makeReturnsIssue(result, parsedReturns.error)]);\n                }\n                return parsedReturns.data;\n            });\n        }\n    }\n    parameters() {\n        return this._def.args;\n    }\n    returnType() {\n        return this._def.returns;\n    }\n    args(...items) {\n        return new ZodFunction({\n            ...this._def,\n            args: ZodTuple.create(items).rest(ZodUnknown.create()),\n        });\n    }\n    returns(returnType) {\n        return new ZodFunction({\n            ...this._def,\n            returns: returnType,\n        });\n    }\n    implement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    strictImplement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    static create(args, returns, params) {\n        return new ZodFunction({\n            args: (args\n                ? args\n                : ZodTuple.create([]).rest(ZodUnknown.create())),\n            returns: returns || ZodUnknown.create(),\n            typeName: ZodFirstPartyTypeKind.ZodFunction,\n            ...processCreateParams(params),\n        });\n    }\n}\nclass ZodLazy extends ZodType {\n    get schema() {\n        return this._def.getter();\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const lazySchema = this._def.getter();\n        return lazySchema._parse({ data: ctx.data, path: ctx.path, parent: ctx });\n    }\n}\nZodLazy.create = (getter, params) => {\n    return new ZodLazy({\n        getter: getter,\n        typeName: ZodFirstPartyTypeKind.ZodLazy,\n        ...processCreateParams(params),\n    });\n};\nclass ZodLiteral extends ZodType {\n    _parse(input) {\n        if (input.data !== this._def.value) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_literal,\n                expected: this._def.value,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n    get value() {\n        return this._def.value;\n    }\n}\nZodLiteral.create = (value, params) => {\n    return new ZodLiteral({\n        value: value,\n        typeName: ZodFirstPartyTypeKind.ZodLiteral,\n        ...processCreateParams(params),\n    });\n};\nfunction createZodEnum(values, params) {\n    return new ZodEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodEnum,\n        ...processCreateParams(params),\n    });\n}\nclass ZodEnum extends ZodType {\n    _parse(input) {\n        if (typeof input.data !== \"string\") {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (this._def.values.indexOf(input.data) === -1) {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get options() {\n        return this._def.values;\n    }\n    get enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Values() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    extract(values) {\n        return ZodEnum.create(values);\n    }\n    exclude(values) {\n        return ZodEnum.create(this.options.filter((opt) => !values.includes(opt)));\n    }\n}\nZodEnum.create = createZodEnum;\nclass ZodNativeEnum extends ZodType {\n    _parse(input) {\n        const nativeEnumValues = util.getValidEnumValues(this._def.values);\n        const ctx = this._getOrReturnCtx(input);\n        if (ctx.parsedType !== ZodParsedType.string &&\n            ctx.parsedType !== ZodParsedType.number) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (nativeEnumValues.indexOf(input.data) === -1) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get enum() {\n        return this._def.values;\n    }\n}\nZodNativeEnum.create = (values, params) => {\n    return new ZodNativeEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodNativeEnum,\n        ...processCreateParams(params),\n    });\n};\nclass ZodPromise extends ZodType {\n    unwrap() {\n        return this._def.type;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.promise &&\n            ctx.common.async === false) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.promise,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const promisified = ctx.parsedType === ZodParsedType.promise\n            ? ctx.data\n            : Promise.resolve(ctx.data);\n        return OK(promisified.then((data) => {\n            return this._def.type.parseAsync(data, {\n                path: ctx.path,\n                errorMap: ctx.common.contextualErrorMap,\n            });\n        }));\n    }\n}\nZodPromise.create = (schema, params) => {\n    return new ZodPromise({\n        type: schema,\n        typeName: ZodFirstPartyTypeKind.ZodPromise,\n        ...processCreateParams(params),\n    });\n};\nclass ZodEffects extends ZodType {\n    innerType() {\n        return this._def.schema;\n    }\n    sourceType() {\n        return this._def.schema._def.typeName === ZodFirstPartyTypeKind.ZodEffects\n            ? this._def.schema.sourceType()\n            : this._def.schema;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const effect = this._def.effect || null;\n        if (effect.type === \"preprocess\") {\n            const processed = effect.transform(ctx.data);\n            if (ctx.common.async) {\n                return Promise.resolve(processed).then((processed) => {\n                    return this._def.schema._parseAsync({\n                        data: processed,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                });\n            }\n            else {\n                return this._def.schema._parseSync({\n                    data: processed,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n        const checkCtx = {\n            addIssue: (arg) => {\n                addIssueToContext(ctx, arg);\n                if (arg.fatal) {\n                    status.abort();\n                }\n                else {\n                    status.dirty();\n                }\n            },\n            get path() {\n                return ctx.path;\n            },\n        };\n        checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);\n        if (effect.type === \"refinement\") {\n            const executeRefinement = (acc\n            // effect: RefinementEffect<any>\n            ) => {\n                const result = effect.refinement(acc, checkCtx);\n                if (ctx.common.async) {\n                    return Promise.resolve(result);\n                }\n                if (result instanceof Promise) {\n                    throw new Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\");\n                }\n                return acc;\n            };\n            if (ctx.common.async === false) {\n                const inner = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inner.status === \"aborted\")\n                    return INVALID;\n                if (inner.status === \"dirty\")\n                    status.dirty();\n                // return value is ignored\n                executeRefinement(inner.value);\n                return { status: status.value, value: inner.value };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((inner) => {\n                    if (inner.status === \"aborted\")\n                        return INVALID;\n                    if (inner.status === \"dirty\")\n                        status.dirty();\n                    return executeRefinement(inner.value).then(() => {\n                        return { status: status.value, value: inner.value };\n                    });\n                });\n            }\n        }\n        if (effect.type === \"transform\") {\n            if (ctx.common.async === false) {\n                const base = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (!isValid(base))\n                    return base;\n                const result = effect.transform(base.value, checkCtx);\n                if (result instanceof Promise) {\n                    throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);\n                }\n                return { status: status.value, value: result };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((base) => {\n                    if (!isValid(base))\n                        return base;\n                    return Promise.resolve(effect.transform(base.value, checkCtx)).then((result) => ({ status: status.value, value: result }));\n                });\n            }\n        }\n        util.assertNever(effect);\n    }\n}\nZodEffects.create = (schema, effect, params) => {\n    return new ZodEffects({\n        schema,\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        effect,\n        ...processCreateParams(params),\n    });\n};\nZodEffects.createWithPreprocess = (preprocess, schema, params) => {\n    return new ZodEffects({\n        schema,\n        effect: { type: \"preprocess\", transform: preprocess },\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        ...processCreateParams(params),\n    });\n};\nclass ZodOptional extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.undefined) {\n            return OK(undefined);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodOptional.create = (type, params) => {\n    return new ZodOptional({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodOptional,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNullable extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.null) {\n            return OK(null);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodNullable.create = (type, params) => {\n    return new ZodNullable({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodNullable,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDefault extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        let data = ctx.data;\n        if (ctx.parsedType === ZodParsedType.undefined) {\n            data = this._def.defaultValue();\n        }\n        return this._def.innerType._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    removeDefault() {\n        return this._def.innerType;\n    }\n}\nZodDefault.create = (type, params) => {\n    return new ZodDefault({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodDefault,\n        defaultValue: typeof params.default === \"function\"\n            ? params.default\n            : () => params.default,\n        ...processCreateParams(params),\n    });\n};\nclass ZodCatch extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        // newCtx is used to not collect issues from inner types in ctx\n        const newCtx = {\n            ...ctx,\n            common: {\n                ...ctx.common,\n                issues: [],\n            },\n        };\n        const result = this._def.innerType._parse({\n            data: newCtx.data,\n            path: newCtx.path,\n            parent: {\n                ...newCtx,\n            },\n        });\n        if (isAsync(result)) {\n            return result.then((result) => {\n                return {\n                    status: \"valid\",\n                    value: result.status === \"valid\"\n                        ? result.value\n                        : this._def.catchValue({\n                            get error() {\n                                return new ZodError(newCtx.common.issues);\n                            },\n                            input: newCtx.data,\n                        }),\n                };\n            });\n        }\n        else {\n            return {\n                status: \"valid\",\n                value: result.status === \"valid\"\n                    ? result.value\n                    : this._def.catchValue({\n                        get error() {\n                            return new ZodError(newCtx.common.issues);\n                        },\n                        input: newCtx.data,\n                    }),\n            };\n        }\n    }\n    removeCatch() {\n        return this._def.innerType;\n    }\n}\nZodCatch.create = (type, params) => {\n    return new ZodCatch({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodCatch,\n        catchValue: typeof params.catch === \"function\" ? params.catch : () => params.catch,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNaN extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.nan) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.nan,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n}\nZodNaN.create = (params) => {\n    return new ZodNaN({\n        typeName: ZodFirstPartyTypeKind.ZodNaN,\n        ...processCreateParams(params),\n    });\n};\nconst BRAND = Symbol(\"zod_brand\");\nclass ZodBranded extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const data = ctx.data;\n        return this._def.type._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    unwrap() {\n        return this._def.type;\n    }\n}\nclass ZodPipeline extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.common.async) {\n            const handleAsync = async () => {\n                const inResult = await this._def.in._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inResult.status === \"aborted\")\n                    return INVALID;\n                if (inResult.status === \"dirty\") {\n                    status.dirty();\n                    return DIRTY(inResult.value);\n                }\n                else {\n                    return this._def.out._parseAsync({\n                        data: inResult.value,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                }\n            };\n            return handleAsync();\n        }\n        else {\n            const inResult = this._def.in._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n            if (inResult.status === \"aborted\")\n                return INVALID;\n            if (inResult.status === \"dirty\") {\n                status.dirty();\n                return {\n                    status: \"dirty\",\n                    value: inResult.value,\n                };\n            }\n            else {\n                return this._def.out._parseSync({\n                    data: inResult.value,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n    }\n    static create(a, b) {\n        return new ZodPipeline({\n            in: a,\n            out: b,\n            typeName: ZodFirstPartyTypeKind.ZodPipeline,\n        });\n    }\n}\nconst custom = (check, params = {}, \n/*\n * @deprecated\n *\n * Pass `fatal` into the params object instead:\n *\n * ```ts\n * z.string().custom((val) => val.length > 5, { fatal: false })\n * ```\n *\n */\nfatal) => {\n    if (check)\n        return ZodAny.create().superRefine((data, ctx) => {\n            var _a, _b;\n            if (!check(data)) {\n                const p = typeof params === \"function\"\n                    ? params(data)\n                    : typeof params === \"string\"\n                        ? { message: params }\n                        : params;\n                const _fatal = (_b = (_a = p.fatal) !== null && _a !== void 0 ? _a : fatal) !== null && _b !== void 0 ? _b : true;\n                const p2 = typeof p === \"string\" ? { message: p } : p;\n                ctx.addIssue({ code: \"custom\", ...p2, fatal: _fatal });\n            }\n        });\n    return ZodAny.create();\n};\nconst late = {\n    object: ZodObject.lazycreate,\n};\nvar ZodFirstPartyTypeKind;\n(function (ZodFirstPartyTypeKind) {\n    ZodFirstPartyTypeKind[\"ZodString\"] = \"ZodString\";\n    ZodFirstPartyTypeKind[\"ZodNumber\"] = \"ZodNumber\";\n    ZodFirstPartyTypeKind[\"ZodNaN\"] = \"ZodNaN\";\n    ZodFirstPartyTypeKind[\"ZodBigInt\"] = \"ZodBigInt\";\n    ZodFirstPartyTypeKind[\"ZodBoolean\"] = \"ZodBoolean\";\n    ZodFirstPartyTypeKind[\"ZodDate\"] = \"ZodDate\";\n    ZodFirstPartyTypeKind[\"ZodSymbol\"] = \"ZodSymbol\";\n    ZodFirstPartyTypeKind[\"ZodUndefined\"] = \"ZodUndefined\";\n    ZodFirstPartyTypeKind[\"ZodNull\"] = \"ZodNull\";\n    ZodFirstPartyTypeKind[\"ZodAny\"] = \"ZodAny\";\n    ZodFirstPartyTypeKind[\"ZodUnknown\"] = \"ZodUnknown\";\n    ZodFirstPartyTypeKind[\"ZodNever\"] = \"ZodNever\";\n    ZodFirstPartyTypeKind[\"ZodVoid\"] = \"ZodVoid\";\n    ZodFirstPartyTypeKind[\"ZodArray\"] = \"ZodArray\";\n    ZodFirstPartyTypeKind[\"ZodObject\"] = \"ZodObject\";\n    ZodFirstPartyTypeKind[\"ZodUnion\"] = \"ZodUnion\";\n    ZodFirstPartyTypeKind[\"ZodDiscriminatedUnion\"] = \"ZodDiscriminatedUnion\";\n    ZodFirstPartyTypeKind[\"ZodIntersection\"] = \"ZodIntersection\";\n    ZodFirstPartyTypeKind[\"ZodTuple\"] = \"ZodTuple\";\n    ZodFirstPartyTypeKind[\"ZodRecord\"] = \"ZodRecord\";\n    ZodFirstPartyTypeKind[\"ZodMap\"] = \"ZodMap\";\n    ZodFirstPartyTypeKind[\"ZodSet\"] = \"ZodSet\";\n    ZodFirstPartyTypeKind[\"ZodFunction\"] = \"ZodFunction\";\n    ZodFirstPartyTypeKind[\"ZodLazy\"] = \"ZodLazy\";\n    ZodFirstPartyTypeKind[\"ZodLiteral\"] = \"ZodLiteral\";\n    ZodFirstPartyTypeKind[\"ZodEnum\"] = \"ZodEnum\";\n    ZodFirstPartyTypeKind[\"ZodEffects\"] = \"ZodEffects\";\n    ZodFirstPartyTypeKind[\"ZodNativeEnum\"] = \"ZodNativeEnum\";\n    ZodFirstPartyTypeKind[\"ZodOptional\"] = \"ZodOptional\";\n    ZodFirstPartyTypeKind[\"ZodNullable\"] = \"ZodNullable\";\n    ZodFirstPartyTypeKind[\"ZodDefault\"] = \"ZodDefault\";\n    ZodFirstPartyTypeKind[\"ZodCatch\"] = \"ZodCatch\";\n    ZodFirstPartyTypeKind[\"ZodPromise\"] = \"ZodPromise\";\n    ZodFirstPartyTypeKind[\"ZodBranded\"] = \"ZodBranded\";\n    ZodFirstPartyTypeKind[\"ZodPipeline\"] = \"ZodPipeline\";\n})(ZodFirstPartyTypeKind || (ZodFirstPartyTypeKind = {}));\nconst instanceOfType = (\n// const instanceOfType = <T extends new (...args: any[]) => any>(\ncls, params = {\n    message: `Input not instance of ${cls.name}`,\n}) => custom((data) => data instanceof cls, params);\nconst stringType = ZodString.create;\nconst numberType = ZodNumber.create;\nconst nanType = ZodNaN.create;\nconst bigIntType = ZodBigInt.create;\nconst booleanType = ZodBoolean.create;\nconst dateType = ZodDate.create;\nconst symbolType = ZodSymbol.create;\nconst undefinedType = ZodUndefined.create;\nconst nullType = ZodNull.create;\nconst anyType = ZodAny.create;\nconst unknownType = ZodUnknown.create;\nconst neverType = ZodNever.create;\nconst voidType = ZodVoid.create;\nconst arrayType = ZodArray.create;\nconst objectType = ZodObject.create;\nconst strictObjectType = ZodObject.strictCreate;\nconst unionType = ZodUnion.create;\nconst discriminatedUnionType = ZodDiscriminatedUnion.create;\nconst intersectionType = ZodIntersection.create;\nconst tupleType = ZodTuple.create;\nconst recordType = ZodRecord.create;\nconst mapType = ZodMap.create;\nconst setType = ZodSet.create;\nconst functionType = ZodFunction.create;\nconst lazyType = ZodLazy.create;\nconst literalType = ZodLiteral.create;\nconst enumType = ZodEnum.create;\nconst nativeEnumType = ZodNativeEnum.create;\nconst promiseType = ZodPromise.create;\nconst effectsType = ZodEffects.create;\nconst optionalType = ZodOptional.create;\nconst nullableType = ZodNullable.create;\nconst preprocessType = ZodEffects.createWithPreprocess;\nconst pipelineType = ZodPipeline.create;\nconst ostring = () => stringType().optional();\nconst onumber = () => numberType().optional();\nconst oboolean = () => booleanType().optional();\nconst coerce = {\n    string: ((arg) => ZodString.create({ ...arg, coerce: true })),\n    number: ((arg) => ZodNumber.create({ ...arg, coerce: true })),\n    boolean: ((arg) => ZodBoolean.create({\n        ...arg,\n        coerce: true,\n    })),\n    bigint: ((arg) => ZodBigInt.create({ ...arg, coerce: true })),\n    date: ((arg) => ZodDate.create({ ...arg, coerce: true })),\n};\nconst NEVER = INVALID;\n\nvar z = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    defaultErrorMap: errorMap,\n    setErrorMap: setErrorMap,\n    getErrorMap: getErrorMap,\n    makeIssue: makeIssue,\n    EMPTY_PATH: EMPTY_PATH,\n    addIssueToContext: addIssueToContext,\n    ParseStatus: ParseStatus,\n    INVALID: INVALID,\n    DIRTY: DIRTY,\n    OK: OK,\n    isAborted: isAborted,\n    isDirty: isDirty,\n    isValid: isValid,\n    isAsync: isAsync,\n    get util () { return util; },\n    get objectUtil () { return objectUtil; },\n    ZodParsedType: ZodParsedType,\n    getParsedType: getParsedType,\n    ZodType: ZodType,\n    ZodString: ZodString,\n    ZodNumber: ZodNumber,\n    ZodBigInt: ZodBigInt,\n    ZodBoolean: ZodBoolean,\n    ZodDate: ZodDate,\n    ZodSymbol: ZodSymbol,\n    ZodUndefined: ZodUndefined,\n    ZodNull: ZodNull,\n    ZodAny: ZodAny,\n    ZodUnknown: ZodUnknown,\n    ZodNever: ZodNever,\n    ZodVoid: ZodVoid,\n    ZodArray: ZodArray,\n    ZodObject: ZodObject,\n    ZodUnion: ZodUnion,\n    ZodDiscriminatedUnion: ZodDiscriminatedUnion,\n    ZodIntersection: ZodIntersection,\n    ZodTuple: ZodTuple,\n    ZodRecord: ZodRecord,\n    ZodMap: ZodMap,\n    ZodSet: ZodSet,\n    ZodFunction: ZodFunction,\n    ZodLazy: ZodLazy,\n    ZodLiteral: ZodLiteral,\n    ZodEnum: ZodEnum,\n    ZodNativeEnum: ZodNativeEnum,\n    ZodPromise: ZodPromise,\n    ZodEffects: ZodEffects,\n    ZodTransformer: ZodEffects,\n    ZodOptional: ZodOptional,\n    ZodNullable: ZodNullable,\n    ZodDefault: ZodDefault,\n    ZodCatch: ZodCatch,\n    ZodNaN: ZodNaN,\n    BRAND: BRAND,\n    ZodBranded: ZodBranded,\n    ZodPipeline: ZodPipeline,\n    custom: custom,\n    Schema: ZodType,\n    ZodSchema: ZodType,\n    late: late,\n    get ZodFirstPartyTypeKind () { return ZodFirstPartyTypeKind; },\n    coerce: coerce,\n    any: anyType,\n    array: arrayType,\n    bigint: bigIntType,\n    boolean: booleanType,\n    date: dateType,\n    discriminatedUnion: discriminatedUnionType,\n    effect: effectsType,\n    'enum': enumType,\n    'function': functionType,\n    'instanceof': instanceOfType,\n    intersection: intersectionType,\n    lazy: lazyType,\n    literal: literalType,\n    map: mapType,\n    nan: nanType,\n    nativeEnum: nativeEnumType,\n    never: neverType,\n    'null': nullType,\n    nullable: nullableType,\n    number: numberType,\n    object: objectType,\n    oboolean: oboolean,\n    onumber: onumber,\n    optional: optionalType,\n    ostring: ostring,\n    pipeline: pipelineType,\n    preprocess: preprocessType,\n    promise: promiseType,\n    record: recordType,\n    set: setType,\n    strictObject: strictObjectType,\n    string: stringType,\n    symbol: symbolType,\n    transformer: effectsType,\n    tuple: tupleType,\n    'undefined': undefinedType,\n    union: unionType,\n    unknown: unknownType,\n    'void': voidType,\n    NEVER: NEVER,\n    ZodIssueCode: ZodIssueCode,\n    quotelessJson: quotelessJson,\n    ZodError: ZodError\n});\n\nexport { BRAND, DIRTY, EMPTY_PATH, INVALID, NEVER, OK, ParseStatus, ZodType as Schema, ZodAny, ZodArray, ZodBigInt, ZodBoolean, ZodBranded, ZodCatch, ZodDate, ZodDefault, ZodDiscriminatedUnion, ZodEffects, ZodEnum, ZodError, ZodFirstPartyTypeKind, ZodFunction, ZodIntersection, ZodIssueCode, ZodLazy, ZodLiteral, ZodMap, ZodNaN, ZodNativeEnum, ZodNever, ZodNull, ZodNullable, ZodNumber, ZodObject, ZodOptional, ZodParsedType, ZodPipeline, ZodPromise, ZodRecord, ZodType as ZodSchema, ZodSet, ZodString, ZodSymbol, ZodEffects as ZodTransformer, ZodTuple, ZodType, ZodUndefined, ZodUnion, ZodUnknown, ZodVoid, addIssueToContext, anyType as any, arrayType as array, bigIntType as bigint, booleanType as boolean, coerce, custom, dateType as date, z as default, errorMap as defaultErrorMap, discriminatedUnionType as discriminatedUnion, effectsType as effect, enumType as enum, functionType as function, getErrorMap, getParsedType, instanceOfType as instanceof, intersectionType as intersection, isAborted, isAsync, isDirty, isValid, late, lazyType as lazy, literalType as literal, makeIssue, mapType as map, nanType as nan, nativeEnumType as nativeEnum, neverType as never, nullType as null, nullableType as nullable, numberType as number, objectType as object, objectUtil, oboolean, onumber, optionalType as optional, ostring, pipelineType as pipeline, preprocessType as preprocess, promiseType as promise, quotelessJson, recordType as record, setType as set, setErrorMap, strictObjectType as strictObject, stringType as string, symbolType as symbol, effectsType as transformer, tupleType as tuple, undefinedType as undefined, unionType as union, unknownType as unknown, util, voidType as void, z };\n", "import {z} from \"zod\";\n\nexport type Brand<K, T> = K & { __brand: T } // cf https://michalzalecki.com/nominal-typing-in-typescript\n\nexport type Timestamp = number // date in numerical format (1663007946750)\nexport const Timestamp = z.number()\nexport type DateTime = string // date in iso format (\"2022-09-12T11:13:02.611616Z\")\nexport const DateTime = z.string()\nexport type Px = number // number of pixels\nexport type Slug = string\nexport const Slug = z.string()\nexport type Email = string\nexport type Username = string\nexport type HtmlId = string\nexport const HtmlId = z.string()\nexport type DatabaseUrl = string\nexport const DatabaseUrl = z.string()\nexport type FileUrl = string\nexport type FileName = string\nexport const FileName = z.string()\nexport type FileContent = string\nexport const FileContent = z.string()\nexport type FileObject = File\nexport const FileObject = z.instanceof(window.File)\nexport type ViewPosition = 'start' | 'end'\nexport const ViewPosition = z.enum(['start', 'end'])\nexport type ToastLevel = 'info' | 'success' | 'warning' | 'error'\nexport const ToastLevel = z.enum(['info', 'success', 'warning', 'error'])\nexport type Platform = 'mac' | 'pc'\nexport const Platform = z.enum(['mac', 'pc'])\n\nexport interface Position {\n    left: number\n    top: number\n}\n\nexport const Position = z.object({\n    left: z.number(),\n    top: z.number()\n}).strict()\n\nexport interface PositionViewport {\n    clientX: number\n    clientY: number\n}\n\nexport const PositionViewport = z.object({\n    clientX: z.number(),\n    clientY: z.number()\n}).strict()\n\nexport interface Size {\n    width: number\n    height: number\n}\n\nexport const Size = z.object({\n    width: z.number(),\n    height: z.number()\n}).strict()\n\nexport interface Delta {\n    dx: number\n    dy: number\n}\n\nexport const Delta = z.object({\n    dx: z.number(),\n    dy: z.number()\n}).strict()\n\nexport type Color =\n    'indigo'\n    | 'violet'\n    | 'purple'\n    | 'fuchsia'\n    | 'pink'\n    | 'rose'\n    | 'red'\n    | 'orange'\n    | 'amber'\n    | 'yellow'\n    | 'lime'\n    | 'green'\n    | 'emerald'\n    | 'teal'\n    | 'cyan'\n    | 'sky'\n    | 'blue'\n    | 'gray'\n\nexport const Color = z.enum(['indigo', 'violet', 'purple', 'fuchsia', 'pink', 'rose', 'red', 'orange', 'amber', 'yellow', 'lime', 'green', 'emerald', 'teal', 'cyan', 'sky', 'blue', 'gray'])\n\nconst literalSchema = z.union([z.string(), z.number(), z.boolean(), z.null()])\ntype Literal = z.infer<typeof literalSchema>\ntype Json = Literal | { [key: string]: Json } | Json[]\nexport const Json: z.ZodType<Json> = z.lazy(() => z.union([literalSchema, z.array(Json), z.record(Json)]))\n", "import {z} from \"zod\";\n\nexport type Uuid = string\nexport const Uuid = z.string().uuid()\n\nexport const zero: Uuid = \"00000000-0000-0000-0000-000000000000\"\n", "import {Uuid} from \"./uuid\";\nimport {z} from \"zod\";\n\nexport type HerokuId = Uuid\nexport const HerokuId = Uuid\n\nexport interface HerokuResource {\n    id: HerokuId\n}\n\nexport const HerokuResource = z.object({\n    id: HerokuId\n}).strict()\n", "import {Uuid} from \"./uuid\";\nimport {Slug} from \"./basics\";\nimport {z} from \"zod\";\nimport {HerokuResource} from \"./heroku\";\n\nexport type OrganizationId = Uuid\nexport const OrganizationId = Uuid\nexport type OrganizationSlug = Slug\nexport const OrganizationSlug = Slug\nexport type OrganizationName = string\nexport const OrganizationName = z.string()\nexport type PlanId = 'free' | 'pro'\nexport const PlanId = z.enum(['free', 'pro'])\n\nexport interface Plan {\n    id: PlanId\n    name: string\n    layouts: number | null\n    memos: number | null\n    colors: boolean\n    private_links: boolean\n    db_analysis: boolean\n    db_access: boolean\n}\n\nexport const Plan = z.object({\n    id: PlanId,\n    name: z.string(),\n    layouts: z.number().nullable(),\n    memos: z.number().nullable(),\n    colors: z.boolean(),\n    private_links: z.boolean(),\n    db_analysis: z.boolean(),\n    db_access: z.boolean()\n}).strict()\n\nexport interface Organization {\n    id: OrganizationId\n    slug: OrganizationSlug\n    name: OrganizationName\n    plan: Plan\n    logo: string\n    location?: string\n    description?: string\n    heroku?: HerokuResource\n}\n\nexport const Organization = z.object({\n    id: OrganizationId,\n    slug: OrganizationSlug,\n    name: OrganizationName,\n    plan: Plan,\n    logo: z.string().url(),\n    location: z.string().optional(),\n    description: z.string().optional(),\n    heroku: HerokuResource.optional(),\n}).strict()\n", "export const groupBy = <T, K extends keyof any>(list: T[], getKey: (item: T) => K): Record<K, T[]> =>\n    list.reduce((acc, item) => {\n        const key = getKey(item)\n        if (!acc[key]) acc[key] = []\n        acc[key].push(item)\n        return acc\n    }, {} as Record<K, T[]>)\n", "import {z} from \"zod\";\n\nexport function stringify<T>(value: T, zod: z.ZodType<T>, label: string): string {\n    return JSON.stringify(validate(value, zod, label))\n}\n\nexport function validate<T>(value: T, zod: z.ZodType<T>, label: string): T {\n    const res = zod.safeParse(value)\n    if (res.success) {\n        return res.data\n    } else {\n        const jsonErrors = res.error.issues.map(i => issueToJson(value, i))\n        const strErrors = res.error.issues.map(i => issueToString(value, i))\n        console.error(`invalid ${label}`, jsonErrors.length > 1 ? jsonErrors : jsonErrors[0], value)\n        throw Error(`invalid ${label}${strErrors.length > 1 ? ` (${strErrors.length} errors)` : ''}: ${strErrors.join(', ')}`)\n    }\n}\n\nfunction issueToString(value: any, issue: z.ZodIssue): string {\n    if (issue.code === z.ZodIssueCode.unrecognized_keys) {\n        return `at ${pathToString(issue.path)}: invalid additional key${issue.keys.length > 1 ? 's:' : ''} ${issue.keys.map(k => `'${k}' (${JSON.stringify(getValue(value, issue.path.concat(k)))})`).join(', ')}`\n    } else if (issue.code === z.ZodIssueCode.invalid_type) {\n        return `at ${pathToString(issue.path)}: expect '${issue.expected}' but got '${issue.received}' (${JSON.stringify(getValue(value, issue.path))})`\n    } else if (issue.code === z.ZodIssueCode.invalid_literal) {\n        return `at ${pathToString(issue.path)}: expect ${JSON.stringify(issue.expected)} but got ${JSON.stringify(getValue(value, issue.path))}`\n    } else if (issue.code === z.ZodIssueCode.invalid_enum_value) {\n        return `at ${pathToString(issue.path)}: expect \\`${issue.options.map(o => JSON.stringify(o)).join(' | ')}\\` but got ${JSON.stringify(getValue(value, issue.path))}`\n    } else if (issue.code === z.ZodIssueCode.invalid_union_discriminator) {\n        return `at ${pathToString(issue.path)}: expect \\`${issue.options.map(o => JSON.stringify(o)).join(' | ')}\\` but got ${JSON.stringify(getValue(value, issue.path))}`\n    } else if (issue.code === z.ZodIssueCode.invalid_union) {\n        return `at ${pathToString(issue.path)}: invalid union for ${JSON.stringify(anyTrim(getValue(value, issue.path), 2))}`\n    } else {\n        return issue.message\n    }\n}\n\nfunction pathToString(path: (string | number)[]): string {\n    if (path.length === 0) {\n        return '_root_'\n    } else {\n        return `.${path.join('.')}`\n    }\n}\n\nfunction errorToJson(value: any, error: z.ZodError): object[] {\n    return error.issues.map(i => issueToJson(value, i))\n}\n\nfunction issueToJson(value: any, issue: z.ZodIssue): object {\n    const depth = 2\n    if (issue.code === z.ZodIssueCode.invalid_type) {\n        return {code: issue.code, path: issue.path, value: anyTrim(getValue(value, issue.path), depth), message: issue.message, expected: issue.expected, received: issue.received}\n    } else if (issue.code === z.ZodIssueCode.invalid_literal) {\n        return {code: issue.code, path: issue.path, value: anyTrim(getValue(value, issue.path), depth), message: issue.message, expected: issue.expected}\n    } else if (issue.code === z.ZodIssueCode.unrecognized_keys) {\n        return {code: issue.code, path: issue.path, value: anyTrim(getValue(value, issue.path), depth), message: issue.message, keys: issue.keys}\n    } else if (issue.code === z.ZodIssueCode.invalid_union) {\n        return {code: issue.code, path: issue.path, value: anyTrim(getValue(value, issue.path), depth), message: issue.message, unionErrors: issue.unionErrors.map(e => errorToJson(value, e))}\n    } else if (issue.code === z.ZodIssueCode.invalid_union_discriminator) {\n        return {code: issue.code, path: issue.path, value: anyTrim(getValue(value, issue.path), depth), message: issue.message, options: issue.options}\n    } else if (issue.code === z.ZodIssueCode.invalid_enum_value) {\n        return {code: issue.code, path: issue.path, value: anyTrim(getValue(value, issue.path), depth), message: issue.message, options: issue.options, received: issue.received}\n    } else if (issue.code === z.ZodIssueCode.invalid_arguments) {\n        return {code: issue.code, path: issue.path, value: anyTrim(getValue(value, issue.path), depth), message: issue.message, argumentsError: issue.argumentsError}\n    } else if (issue.code === z.ZodIssueCode.invalid_return_type) {\n        return {code: issue.code, path: issue.path, value: anyTrim(getValue(value, issue.path), depth), message: issue.message, returnTypeError: issue.returnTypeError}\n    } else if (issue.code === z.ZodIssueCode.invalid_date) {\n        return {code: issue.code, path: issue.path, value: anyTrim(getValue(value, issue.path), depth), message: issue.message}\n    } else if (issue.code === z.ZodIssueCode.invalid_string) {\n        return {code: issue.code, path: issue.path, value: anyTrim(getValue(value, issue.path), depth), message: issue.message, validation: issue.validation}\n    } else if (issue.code === z.ZodIssueCode.too_small) {\n        return {code: issue.code, path: issue.path, value: anyTrim(getValue(value, issue.path), depth), message: issue.message, type: issue.type, minimum: issue.minimum, inclusive: issue.inclusive}\n    } else if (issue.code === z.ZodIssueCode.too_big) {\n        return {code: issue.code, path: issue.path, value: anyTrim(getValue(value, issue.path), depth), message: issue.message, type: issue.type, maximum: issue.maximum, inclusive: issue.inclusive}\n    } else if (issue.code === z.ZodIssueCode.invalid_intersection_types) {\n        return {code: issue.code, path: issue.path, value: anyTrim(getValue(value, issue.path), depth), message: issue.message}\n    } else if (issue.code === z.ZodIssueCode.not_multiple_of) {\n        return {code: issue.code, path: issue.path, value: anyTrim(getValue(value, issue.path), depth), message: issue.message, multipleOf: issue.multipleOf}\n    } else if (issue.code === z.ZodIssueCode.custom) {\n        return {code: issue.code, path: issue.path, value: anyTrim(getValue(value, issue.path), depth), message: issue.message, params: issue.params}\n    } else {\n        throw `Unhandled ZodIssue!`\n    }\n}\n\nexport function errorToString(value: any, error: z.ZodError): string {\n    const issues = error.issues\n    return `${issues.length} validation error:${issues.map(i => `\\n - ${issueToString(value, i)}`)}`\n}\n\nfunction getValue(value: any, path: (string | number)[]): any {\n    if (path.length === 0 || value === undefined || value === null) {\n        return value\n    } else {\n        const [head, ...tail] = path\n        return getValue(value[head], tail)\n    }\n}\n\nfunction anyTrim(value: any, depth: number): any {\n    if (Array.isArray(value)) {\n        return depth <= 0 ? '?' : (value.length > 3 ? value.slice(0, 3).concat(['...']) : value).map(v => anyTrim(v, depth - 1))\n    } else if (value === null) {\n        return value\n    } else if (typeof value === 'object') {\n        return depth <= 0 ? '?' : Object.fromEntries(Object.entries(value).map(([key, value]) => [key, anyTrim(value, depth - 1)]))\n    } else if (typeof value === 'string') {\n        return value.length > 30 ? value.substring(0, 30) + '...' : value\n    } else {\n        return value\n    }\n}\n", "import {Color, Json, Position, Size, Slug, Timestamp} from \"./basics\";\nimport {Uuid} from \"./uuid\";\nimport {Organization} from \"./organization\";\nimport * as array from \"../utils/array\";\nimport {z} from \"zod\";\nimport * as Zod from \"../utils/zod\";\n\nexport type ProjectId = Uuid\nexport const ProjectId = Uuid\nexport type ProjectSlug = Slug\nexport const ProjectSlug = Slug\nexport type ProjectName = string\nexport const ProjectName = z.string()\nexport type SourceId = Uuid\nexport const SourceId = Uuid\nexport type SourceName = string\nexport const SourceName = z.string()\nexport type TableId = string\nexport const TableId = z.string()\nexport type SchemaName = string\nexport const SchemaName = z.string()\nexport type TableName = string\nexport const TableName = z.string()\nexport type ColumnId = string\nexport const ColumnId = z.string()\nexport type ColumnName = string\nexport const ColumnName = z.string()\nexport type ColumnType = string\nexport const ColumnType = z.string()\nexport type ColumnValue = string | number | boolean | null | unknown\nexport const ColumnValue = z.union([z.string(), z.number(), z.boolean(), z.null(), Json])\nexport type Line = string\nexport const Line = z.string()\nexport type LineIndex = number\nexport const LineIndex = z.number()\nexport type RelationName = string\nexport const RelationName = z.string()\nexport type TypeName = string\nexport const TypeName = z.string()\nexport type MemoId = number\nexport const MemoId = z.number()\nexport type LayoutName = string\nexport const LayoutName = z.string()\nexport type ZoomLevel = number\nexport const ZoomLevel = z.number()\nexport type ProjectTokenId = Uuid\nexport const ProjectTokenId = Uuid\n\nexport interface DatabaseConnection {\n    kind: 'DatabaseConnection',\n    url: string\n}\n\nexport const DatabaseConnection = z.object({\n    kind: z.literal('DatabaseConnection'),\n    url: z.string()\n}).strict()\n\nexport interface SqlLocalFile {\n    kind: 'SqlLocalFile',\n    name: string,\n    size: number,\n    modified: Timestamp\n}\n\nexport const SqlLocalFile = z.object({\n    kind: z.literal('SqlLocalFile'),\n    name: z.string(),\n    size: z.number(),\n    modified: Timestamp\n}).strict()\n\nexport interface SqlRemoteFile {\n    kind: 'SqlRemoteFile',\n    url: string,\n    size: number\n}\n\nexport const SqlRemoteFile = z.object({\n    kind: z.literal('SqlRemoteFile'),\n    url: z.string(),\n    size: z.number()\n}).strict()\n\nexport interface JsonLocalFile {\n    kind: 'JsonLocalFile',\n    name: string,\n    size: number,\n    modified: Timestamp\n}\n\nexport const JsonLocalFile = z.object({\n    kind: z.literal('JsonLocalFile'),\n    name: z.string(),\n    size: z.number(),\n    modified: Timestamp\n}).strict()\n\nexport interface JsonRemoteFile {\n    kind: 'JsonRemoteFile',\n    url: string,\n    size: number\n}\n\nexport const JsonRemoteFile = z.object({\n    kind: z.literal('JsonRemoteFile'),\n    url: z.string(),\n    size: z.number()\n}).strict()\n\nexport interface AmlEditor {\n    kind: 'AmlEditor'\n}\n\nexport const AmlEditor = z.object({\n    kind: z.literal('AmlEditor')\n}).strict()\n\nexport type SourceKind = DatabaseConnection | SqlLocalFile | SqlRemoteFile | JsonLocalFile | JsonRemoteFile | AmlEditor\nexport const SourceKind = z.discriminatedUnion('kind', [DatabaseConnection, SqlLocalFile, SqlRemoteFile, JsonLocalFile, JsonRemoteFile, AmlEditor])\n\nexport type SourceOrigin = 'import-project' | 'sql-source' | 'json-source'\nexport const SourceOrigin = z.enum(['import-project', 'sql-source', 'json-source'])\n\nexport interface Origin {\n    id: SourceId\n    lines: LineIndex[]\n}\n\nexport const Origin = z.object({\n    id: SourceId,\n    lines: LineIndex.array()\n}).strict()\n\nexport interface Comment {\n    text: string\n    origins?: Origin[]\n}\n\nexport const Comment = z.object({\n    text: z.string(),\n    origins: Origin.array().optional()\n}).strict()\n\nexport interface Column {\n    name: ColumnName\n    type: ColumnType\n    nullable?: boolean\n    default?: string\n    comment?: Comment\n    columns?: Column[]\n    origins?: Origin[]\n}\n\nexport const Column: z.ZodType<Column> = z.object({\n    name: ColumnName,\n    type: ColumnType,\n    nullable: z.boolean().optional(),\n    default: z.string().optional(),\n    comment: Comment.optional(),\n    columns: z.lazy(() => Column.array().optional()),\n    origins: Origin.array().optional()\n}).strict()\n\nexport interface PrimaryKey {\n    name?: string\n    columns: ColumnName[]\n    origins?: Origin[]\n}\n\nexport const PrimaryKey = z.object({\n    name: z.string().optional(),\n    columns: ColumnName.array(),\n    origins: Origin.array().optional()\n}).strict()\n\nexport interface Unique {\n    name: string\n    columns: ColumnName[]\n    definition?: string\n    origins?: Origin[]\n}\n\nexport const Unique = z.object({\n    name: z.string(),\n    columns: ColumnName.array(),\n    definition: z.string().optional(),\n    origins: Origin.array().optional()\n}).strict()\n\nexport interface Index {\n    name: string\n    columns: ColumnName[]\n    definition?: string\n    origins?: Origin[]\n}\n\nexport const Index = z.object({\n    name: z.string(),\n    columns: ColumnName.array(),\n    definition: z.string().optional(),\n    origins: Origin.array().optional()\n}).strict()\n\nexport interface Check {\n    name: string\n    columns: ColumnName[]\n    predicate?: string\n    origins?: Origin[]\n}\n\nexport const Check = z.object({\n    name: z.string(),\n    columns: ColumnName.array(),\n    predicate: z.string().optional(),\n    origins: Origin.array().optional()\n}).strict()\n\nexport interface Table {\n    schema: SchemaName\n    table: TableName\n    view?: boolean\n    columns: Column[]\n    primaryKey?: PrimaryKey\n    uniques?: Unique[]\n    indexes?: Index[]\n    checks?: Check[]\n    comment?: Comment\n    origins?: Origin[]\n}\n\nexport const Table = z.object({\n    schema: SchemaName,\n    table: TableName,\n    view: z.boolean().optional(),\n    columns: Column.array(),\n    primaryKey: PrimaryKey.optional(),\n    uniques: Unique.array().optional(),\n    indexes: Index.array().optional(),\n    checks: Check.array().optional(),\n    comment: Comment.optional(),\n    origins: Origin.array().optional()\n}).strict()\n\nexport interface ColumnRef {\n    table: TableId\n    column: ColumnName\n}\n\nexport const ColumnRef = z.object({\n    table: TableId,\n    column: ColumnName\n}).strict()\n\nexport interface Relation {\n    name: RelationName\n    src: ColumnRef\n    ref: ColumnRef\n    origins?: Origin[]\n}\n\nexport const Relation = z.object({\n    name: RelationName,\n    src: ColumnRef,\n    ref: ColumnRef,\n    origins: Origin.array().optional()\n}).strict()\n\nexport interface Type {\n    schema: SchemaName\n    name: TypeName\n    value: { enum: string[] } | { definition: string }\n    origins?: Origin[]\n}\n\nexport const Type = z.object({\n    schema: SchemaName,\n    name: TypeName,\n    value: z.union([z.object({enum: z.string().array()}).strict(), z.object({definition: z.string()}).strict()]),\n    origins: Origin.array().optional()\n}).strict()\n\nexport interface Source {\n    id: SourceId\n    name: SourceName\n    kind: SourceKind\n    content: Line[]\n    tables: Table[]\n    relations: Relation[]\n    types?: Type[]\n    enabled?: boolean\n    fromSample?: string\n    createdAt: Timestamp\n    updatedAt: Timestamp\n}\n\nexport const Source = z.object({\n    id: SourceId,\n    name: SourceName,\n    kind: SourceKind,\n    content: Line.array(),\n    tables: Table.array(),\n    relations: Relation.array(),\n    types: Type.array().optional(),\n    enabled: z.boolean().optional(),\n    fromSample: z.string().optional(),\n    createdAt: Timestamp,\n    updatedAt: Timestamp\n}).strict()\n\nexport interface CanvasProps {\n    position: Position\n    zoom: ZoomLevel\n}\n\nexport const CanvasProps = z.object({\n    position: Position,\n    zoom: ZoomLevel\n}).strict()\n\nexport interface TableProps {\n    id: TableId\n    position: Position\n    size: Size\n    color: Color\n    columns: ColumnName[]\n    selected?: boolean\n    collapsed?: boolean\n    hiddenColumns?: boolean\n}\n\nexport const TableProps = z.object({\n    id: TableId,\n    position: Position,\n    size: Size,\n    color: Color,\n    columns: ColumnName.array(),\n    selected: z.boolean().optional(),\n    collapsed: z.boolean().optional(),\n    hiddenColumns: z.boolean().optional()\n}).strict()\n\nexport interface Memo {\n    id: MemoId\n    content: string\n    position: Position\n    size: Size\n    color?: Color\n}\n\nexport const Memo = z.object({\n    id: MemoId,\n    content: z.string(),\n    position: Position,\n    size: Size,\n    color: Color.optional()\n}).strict()\n\nexport interface Layout {\n    canvas: CanvasProps\n    tables: TableProps[]\n    memos?: Memo[]\n    createdAt: Timestamp\n    updatedAt: Timestamp\n}\n\nexport const Layout = z.object({\n    canvas: CanvasProps,\n    tables: TableProps.array(),\n    memos: Memo.array().optional(),\n    createdAt: Timestamp,\n    updatedAt: Timestamp\n}).strict()\n\nexport interface Settings {\n    findPath?: { maxPathLength?: number, ignoredTables?: string, ignoredColumns?: string }\n    defaultSchema?: SchemaName\n    removedSchemas?: SchemaName[]\n    removeViews?: boolean\n    removedTables?: string\n    hiddenColumns?: { list?: string, max?: number, props?: boolean, relations?: boolean }\n    columnOrder?: 'sql' | 'property' | 'name' | 'type'\n    relationStyle?: 'Bezier' | 'Straight' | 'Steps'\n    columnBasicTypes?: boolean\n    collapseTableColumns?: boolean\n}\n\nexport const Settings = z.object({\n    findPath: z.object({\n        maxPathLength: z.number().optional(),\n        ignoredTables: z.string().optional(),\n        ignoredColumns: z.string().optional()\n    }).strict().optional(),\n    defaultSchema: SchemaName.optional(),\n    removedSchemas: SchemaName.array().optional(),\n    removeViews: z.boolean().optional(),\n    removedTables: z.string().optional(),\n    hiddenColumns: z.object({\n        list: z.string().optional(),\n        max: z.number().optional(),\n        props: z.boolean().optional(),\n        relations: z.boolean().optional()\n    }).strict().optional(),\n    columnOrder: z.enum(['sql', 'property', 'name', 'type']).optional(),\n    relationStyle: z.enum(['Bezier', 'Straight', 'Steps']).optional(),\n    columnBasicTypes: z.boolean().optional(),\n    collapseTableColumns: z.boolean().optional()\n}).strict()\n\nexport type ProjectStorage = 'local' | 'remote'\nexport const ProjectStorage = z.enum(['local', 'remote'])\n\nexport type ProjectVisibility = 'none' | 'read' | 'write'\nexport const ProjectVisibility = z.enum(['none', 'read', 'write'])\n\nexport type ProjectVersion = 1 | 2\nexport const ProjectVersion = z.union([z.literal(1), z.literal(2)])\n\nexport interface Project {\n    organization?: Organization\n    id: ProjectId\n    slug: ProjectSlug\n    name: ProjectName\n    description?: string\n    sources: Source[]\n    notes?: { [ref: string]: string }\n    usedLayout: LayoutName\n    layouts: { [name: LayoutName]: Layout }\n    settings?: Settings\n    storage: ProjectStorage\n    visibility: ProjectVisibility\n    createdAt: Timestamp\n    updatedAt: Timestamp\n    version: ProjectVersion\n}\n\nexport const Project = z.object({\n    organization: Organization.optional(),\n    id: ProjectId,\n    slug: ProjectSlug,\n    name: ProjectName,\n    description: z.string().optional(),\n    sources: Source.array(),\n    notes: z.record(z.string()).optional(),\n    usedLayout: LayoutName,\n    layouts: z.record(LayoutName, Layout),\n    settings: Settings.optional(),\n    storage: ProjectStorage,\n    visibility: ProjectVisibility,\n    createdAt: Timestamp,\n    updatedAt: Timestamp,\n    version: ProjectVersion\n}).strict()\n\nexport type ProjectJson = Omit<Project, 'organization' | 'id' | 'storage' | 'visibility' | 'createdAt' | 'updatedAt'> & { _type: 'json' }\nexport const ProjectJson = Project.omit({organization: true, id: true, storage: true, visibility: true, createdAt: true, updatedAt: true}).extend({_type: z.literal('json')}).strict()\n\nexport interface ProjectStats {\n    nbSources: number\n    nbTables: number\n    nbColumns: number\n    nbRelations: number\n    nbTypes: number\n    nbComments: number\n    nbLayouts: number\n    nbNotes: number\n    nbMemos: number\n}\n\nexport const ProjectStats = z.object({\n    nbSources: z.number(),\n    nbTables: z.number(),\n    nbColumns: z.number(),\n    nbRelations: z.number(),\n    nbTypes: z.number(),\n    nbComments: z.number(),\n    nbLayouts: z.number(),\n    nbNotes: z.number(),\n    nbMemos: z.number()\n}).strict()\n\nexport interface ProjectInfoLocal extends ProjectStats {\n    organization?: Organization\n    id: ProjectId\n    slug: ProjectSlug\n    name: ProjectName\n    description?: string\n    storage: 'local'\n    visibility: ProjectVisibility\n    encodingVersion: ProjectVersion\n    createdAt: Timestamp\n    updatedAt: Timestamp\n}\n\nexport const ProjectInfoLocal = ProjectStats.extend({\n    organization: Organization.optional(),\n    id: ProjectId,\n    slug: ProjectSlug,\n    name: ProjectName,\n    description: z.string().optional(),\n    storage: z.literal(ProjectStorage.enum.local),\n    visibility: ProjectVisibility,\n    encodingVersion: ProjectVersion,\n    createdAt: Timestamp,\n    updatedAt: Timestamp\n}).strict()\n\nexport type ProjectInfoRemote = Omit<ProjectInfoLocal, 'storage'> & { storage: 'remote' }\nexport const ProjectInfoRemote = ProjectInfoLocal.omit({storage: true}).extend({storage: z.literal(ProjectStorage.enum.remote)}).strict()\nexport type ProjectInfoRemoteWithContent = ProjectInfoRemote & { content: ProjectJson }\nexport type ProjectInfo = ProjectInfoLocal | ProjectInfoRemote\nexport const ProjectInfo = z.discriminatedUnion('storage', [ProjectInfoLocal, ProjectInfoRemote])\nexport type ProjectInfoWithContent = ProjectInfoLocal | ProjectInfoRemoteWithContent\n\n\nexport function isLocal(p: ProjectInfo): p is ProjectInfoLocal {\n    return p.storage === ProjectStorage.enum.local\n}\n\nexport function isRemote(p: ProjectInfo): p is ProjectInfoRemote {\n    return p.storage === ProjectStorage.enum.remote\n}\n\nexport function parseTableId(id: TableId): {schema: SchemaName, table: TableName} {\n    const [schema, table] = id.split(\".\")\n    return table === undefined ? {schema: \"\", table: schema} : {schema, table}\n}\n\nexport function buildProjectDraft(id: ProjectId, {_type, ...p}: ProjectJson): Project {\n    return Zod.validate({\n        ...p,\n        id,\n        slug: id,\n        storage: ProjectStorage.enum.local,\n        visibility: ProjectVisibility.enum.none,\n        createdAt: Date.now(),\n        updatedAt: Date.now()\n    }, Project, 'Project')\n}\n\nexport function buildProjectLocal(info: ProjectInfoLocal, {_type, ...p}: ProjectJson): Project {\n    return Zod.validate({\n        ...p,\n        organization: info.organization,\n        id: info.id,\n        storage: ProjectStorage.enum.local,\n        visibility: ProjectVisibility.enum.none,\n        createdAt: info.createdAt,\n        updatedAt: info.updatedAt\n    }, Project, 'Project')\n}\n\nexport function buildProjectRemote(info: ProjectInfoRemote, {_type, ...p}: ProjectJson): Project {\n    return Zod.validate({\n        ...p,\n        organization: info.organization,\n        id: info.id,\n        slug: info.slug,\n        storage: ProjectStorage.enum.remote,\n        visibility: info.visibility,\n        createdAt: info.createdAt,\n        updatedAt: info.updatedAt\n    }, Project, 'Project')\n}\n\nexport function buildProjectJson({organization, id, storage, visibility, createdAt, updatedAt, ...p}: Project): ProjectJson {\n    return Zod.validate({...p, _type: 'json'}, ProjectJson, 'ProjectJson')\n}\n\nexport function computeStats(p: ProjectJson): ProjectStats {\n    // should be the same as `fromProject` in src/Models/ProjectInfo.elm\n    const tables = array.groupBy(p.sources.flatMap(s => s.tables), t => `${t.schema}.${t.table}`)\n    const types = array.groupBy(p.sources.flatMap(s => s.types || []), t => `${t.schema}.${t.name}`)\n\n    return Zod.validate({\n        nbSources: p.sources.length,\n        nbTables: Object.keys(tables).length,\n        nbColumns: Object.values(tables).map(same => Math.max(...same.map(t => t.columns.length))).reduce((acc, cols) => acc + cols, 0),\n        nbRelations: p.sources.reduce((acc, src) => acc + src.relations.length, 0),\n        nbTypes: Object.keys(types).length,\n        nbComments: p.sources.flatMap(s => s.tables.flatMap(t => [t.comment].concat(t.columns.map(c => c.comment)).filter(c => !!c))).length,\n        nbLayouts: Object.keys(p.layouts).length,\n        nbNotes: Object.keys(p.notes || {}).length,\n        nbMemos: Object.values(p.layouts).flatMap(l => l.memos || []).length,\n    }, ProjectStats, 'ProjectStats')\n}\n", "import {ColumnName, ColumnType, ColumnValue, SchemaName, TableName} from \"./project\";\nimport {z} from \"zod\";\n\n// keep sync with backend/lib/azimutt/analyzer/table_stats.ex & frontend/src/Models/Project/TableStats.elm\nexport interface TableStats {\n    schema: SchemaName | null\n    table: TableName\n    rows: number\n    sample_values: {[column: string]: ColumnValue}\n}\n\nexport const TableStats = z.object({\n    schema: SchemaName.nullable(),\n    table: TableName,\n    rows: z.number(),\n    sample_values: z.record(ColumnValue)\n}).strict()\n\n// keep sync with backend/lib/azimutt/analyzer/column_stats.ex & frontend/src/Models/Project/ColumnStats.elm\nexport interface ColumnStats {\n    schema: SchemaName | null\n    table: TableName\n    column: ColumnName\n    rows: number\n    nulls: number\n    cardinality: number\n    common_values: {value: ColumnValue, count: number}[]\n}\n\nexport const ColumnStats = z.object({\n    schema: SchemaName.nullable(),\n    table: TableName,\n    column: ColumnName,\n    type: ColumnType,\n    rows: z.number(),\n    nulls: z.number(),\n    cardinality: z.number(),\n    common_values: z.object({value: ColumnValue, count: z.number()}).array()\n}).strict()\n", "import {ProjectId} from \"./project\";\nimport {z} from \"zod\";\nimport {OrganizationId} from \"./organization\";\n\nexport type TrackDetails = { [key: string]: string | number | boolean | null };\nexport const TrackDetails = z.record(z.union([z.string(), z.number(), z.boolean(), z.null()]))\n\nexport interface TrackEvent {\n    name: string\n    details?: TrackDetails\n    organization?: OrganizationId\n    project?: ProjectId\n}\n\nexport const TrackEvent = z.object({\n    name: z.string(),\n    details: TrackDetails.optional(),\n    organization: OrganizationId.optional(),\n    project: ProjectId.optional()\n}).strict()\n", "import {\n    Color,\n    DatabaseUrl,\n    Delta,\n    FileContent,\n    FileName,\n    FileObject,\n    HtmlId,\n    Platform,\n    Position,\n    PositionViewport,\n    Size,\n    Timestamp,\n    ToastLevel,\n    ViewPosition\n} from \"./basics\";\nimport {\n    ColumnId,\n    ColumnRef,\n    Project,\n    ProjectId,\n    ProjectInfo,\n    ProjectStorage,\n    ProjectTokenId,\n    SourceId,\n    SourceOrigin,\n    TableId\n} from \"./project\";\nimport {OrganizationId} from \"./organization\";\nimport {Env} from \"../utils/env\";\nimport {z} from \"zod\";\nimport {ColumnStats, TableStats} from \"./stats\";\nimport {TrackEvent} from \"./tracking\";\n\nexport interface ElmProgram<F, I, O> {\n    init: (f: { flags: F, node?: HTMLElement }) => ElmRuntime<I, O>\n}\n\nexport interface ElmRuntime<I, O> {\n    ports?: {\n        jsToElm: { send: (msg: I) => void }\n        elmToJs: { subscribe: (callback: (msg: O) => void) => void }\n    }\n}\n\nexport interface ElmFlags {\n    now: Timestamp\n    conf: {\n        env: Env\n        platform: Platform\n    }\n}\n\nexport interface ElementSize {\n    id: HtmlId\n    position: PositionViewport\n    size: Size\n    seeds: Delta\n}\n\nexport const ElementSize = z.object({\n    id: HtmlId,\n    position: PositionViewport,\n    size: Size,\n    seeds: Delta\n}).strict()\n\nexport type HotkeyId = string\nexport const HotkeyId = z.string()\n\nexport interface Hotkey {\n    key: string\n    ctrl: boolean\n    shift: boolean\n    alt: boolean\n    target: { id: string | null, class: string | null, tag: string | null } | null\n    onInput: boolean\n    preventDefault: boolean\n}\n\nexport const Hotkey = z.object({\n    key: z.string(),\n    ctrl: z.boolean(),\n    shift: z.boolean(),\n    alt: z.boolean(),\n    target: z.object({\n        id: z.string().nullable(),\n        class: z.string().nullable(),\n        tag: z.string().nullable()\n    }).strict().nullable(),\n    onInput: z.boolean(),\n    preventDefault: z.boolean()\n}).strict()\n\n\nexport type Click = { kind: 'Click', id: HtmlId }\nexport const Click = z.object({kind: z.literal('Click'), id: HtmlId}).strict()\nexport type MouseDown = { kind: 'MouseDown', id: HtmlId }\nexport const MouseDown = z.object({kind: z.literal('MouseDown'), id: HtmlId}).strict()\nexport type Focus = { kind: 'Focus', id: HtmlId }\nexport const Focus = z.object({kind: z.literal('Focus'), id: HtmlId}).strict()\nexport type Blur = { kind: 'Blur', id: HtmlId }\nexport const Blur = z.object({kind: z.literal('Blur'), id: HtmlId}).strict()\nexport type ScrollTo = { kind: 'ScrollTo', id: HtmlId, position: ViewPosition }\nexport const ScrollTo = z.object({kind: z.literal('ScrollTo'), id: HtmlId, position: ViewPosition}).strict()\nexport type Fullscreen = { kind: 'Fullscreen', id?: HtmlId }\nexport const Fullscreen = z.object({kind: z.literal('Fullscreen'), id: HtmlId.optional()}).strict()\nexport type SetMeta = { kind: 'SetMeta', title: string | null, description: string | null, canonical: string | null, html: string | null, body: string | null }\nexport const SetMeta = z.object({kind: z.literal('SetMeta'), title: z.string().nullable(), description: z.string().nullable(), canonical: z.string().nullable(), html: z.string().nullable(), body: z.string().nullable()}).strict()\nexport type AutofocusWithin = { kind: 'AutofocusWithin', id: HtmlId }\nexport const AutofocusWithin = z.object({kind: z.literal('AutofocusWithin'), id: HtmlId}).strict()\nexport type Toast = { kind: 'Toast', level: ToastLevel, message: string }\nexport const Toast = z.object({kind: z.literal('Toast'), level: ToastLevel, message: z.string()}).strict()\nexport type GetProject = { kind: 'GetProject', organization: OrganizationId, project: ProjectId, token: ProjectTokenId | null }\nexport const GetProject = z.object({kind: z.literal('GetProject'), organization: OrganizationId, project: ProjectId, token: ProjectTokenId.nullable()}).strict()\nexport type CreateProjectTmp = { kind: 'CreateProjectTmp', project: Project }\nexport const CreateProjectTmp = z.object({kind: z.literal('CreateProjectTmp'), project: Project}).strict()\nexport type UpdateProjectTmp = { kind: 'UpdateProjectTmp', project: Project }\nexport const UpdateProjectTmp = z.object({kind: z.literal('UpdateProjectTmp'), project: Project}).strict()\nexport type CreateProject = { kind: 'CreateProject', organization: OrganizationId, storage: ProjectStorage, project: Project }\nexport const CreateProject = z.object({kind: z.literal('CreateProject'), organization: OrganizationId, storage: ProjectStorage, project: Project}).strict()\nexport type UpdateProject = { kind: 'UpdateProject', project: Project }\nexport const UpdateProject = z.object({kind: z.literal('UpdateProject'), project: Project}).strict()\nexport type MoveProjectTo = { kind: 'MoveProjectTo', project: Project, storage: ProjectStorage }\nexport const MoveProjectTo = z.object({kind: z.literal('MoveProjectTo'), project: Project, storage: ProjectStorage}).strict()\nexport type DeleteProject = { kind: 'DeleteProject', project: ProjectInfo, redirect: string | null }\nexport const DeleteProject = z.object({kind: z.literal('DeleteProject'), project: ProjectInfo, redirect: z.string().nullable()}).strict()\nexport type ProjectDirty = { kind: 'ProjectDirty', dirty: boolean }\nexport const ProjectDirty = z.object({kind: z.literal('ProjectDirty'), dirty: z.boolean()}).strict()\nexport type DownloadFile = { kind: 'DownloadFile', filename: FileName, content: FileContent }\nexport const DownloadFile = z.object({kind: z.literal('DownloadFile'), filename: FileName, content: FileContent}).strict()\nexport type GetLocalFile = { kind: 'GetLocalFile', sourceKind: SourceOrigin, file: File }\nexport const GetLocalFile = z.object({kind: z.literal('GetLocalFile'), sourceKind: SourceOrigin, file: FileObject}).strict()\nexport type GetTableStats = { kind: 'GetTableStats', source: SourceId, database: DatabaseUrl, table: TableId }\nexport const GetTableStats = z.object({kind: z.literal('GetTableStats'), source: SourceId, database: DatabaseUrl, table: TableId}).strict()\nexport type GetColumnStats = { kind: 'GetColumnStats', source: SourceId, database: DatabaseUrl, column: ColumnRef }\nexport const GetColumnStats = z.object({kind: z.literal('GetColumnStats'), source: SourceId, database: DatabaseUrl, column: ColumnRef}).strict()\nexport type ObserveSizes = { kind: 'ObserveSizes', ids: HtmlId[] }\nexport const ObserveSizes = z.object({kind: z.literal('ObserveSizes'), ids: HtmlId.array()}).strict()\nexport type ListenKeys = { kind: 'ListenKeys', keys: { [id: HotkeyId]: Hotkey[] } }\nexport const ListenKeys = z.object({kind: z.literal('ListenKeys'), keys: z.record(HotkeyId, Hotkey.array())}).strict()\nexport type Confetti = { kind: 'Confetti', id: HtmlId }\nexport const Confetti = z.object({kind: z.literal('Confetti'), id: HtmlId}).strict()\nexport type ConfettiPride = { kind: 'ConfettiPride' }\nexport const ConfettiPride = z.object({kind: z.literal('ConfettiPride')}).strict()\nexport type Fireworks = { kind: 'Fireworks' }\nexport const Fireworks = z.object({kind: z.literal('Fireworks')}).strict()\nexport type Track = { kind: 'Track', event: TrackEvent }\nexport const Track = z.object({kind: z.literal('Track'), event: TrackEvent}).strict()\nexport type ElmMsg = Click | MouseDown | Focus | Blur | ScrollTo | Fullscreen | SetMeta | AutofocusWithin | Toast | GetProject | CreateProjectTmp | UpdateProjectTmp | CreateProject | UpdateProject | MoveProjectTo | DeleteProject | ProjectDirty | DownloadFile | GetLocalFile | GetTableStats | GetColumnStats | ObserveSizes | ListenKeys | Confetti | ConfettiPride | Fireworks | Track\nexport const ElmMsg = z.discriminatedUnion('kind', [Click, MouseDown, Focus, Blur, ScrollTo, Fullscreen, SetMeta, AutofocusWithin, Toast, GetProject, CreateProjectTmp, UpdateProjectTmp, CreateProject, UpdateProject, MoveProjectTo, DeleteProject, ProjectDirty, DownloadFile, GetLocalFile, GetTableStats, GetColumnStats, ObserveSizes, ListenKeys, Confetti, ConfettiPride, Fireworks, Track])\n\n\nexport type GotSizes = { kind: 'GotSizes', sizes: ElementSize[] }\nexport const GotSizes = z.object({kind: z.literal('GotSizes'), sizes: ElementSize.array()}).strict()\nexport type GotProject = { kind: 'GotProject', project?: Project }\nexport const GotProject = z.object({kind: z.literal('GotProject'), project: Project.optional()}).strict()\nexport type ProjectDeleted = { kind: 'ProjectDeleted', id: ProjectId }\nexport const ProjectDeleted = z.object({kind: z.literal('ProjectDeleted'), id: ProjectId}).strict()\nexport type GotLocalFile = { kind: 'GotLocalFile', sourceKind: SourceOrigin, file: File, content: string }\nexport const GotLocalFile = z.object({kind: z.literal('GotLocalFile'), sourceKind: SourceOrigin, file: FileObject, content: z.string()}).strict()\nexport type GotTableStats = { kind: 'GotTableStats', source: SourceId, stats: TableStats }\nexport const GotTableStats = z.object({kind: z.literal('GotTableStats'), source: SourceId, stats: TableStats}).strict()\nexport type GotColumnStats = { kind: 'GotColumnStats', source: SourceId, stats: ColumnStats }\nexport const GotColumnStats = z.object({kind: z.literal('GotColumnStats'), source: SourceId, stats: ColumnStats}).strict()\nexport type GotHotkey = { kind: 'GotHotkey', id: string }\nexport const GotHotkey = z.object({kind: z.literal('GotHotkey'), id: z.string()}).strict()\nexport type GotKeyHold = { kind: 'GotKeyHold', key: string, start: boolean }\nexport const GotKeyHold = z.object({kind: z.literal('GotKeyHold'), key: z.string(), start: z.boolean()}).strict()\nexport type GotToast = { kind: 'GotToast', level: ToastLevel, message: string }\nexport const GotToast = z.object({kind: z.literal('GotToast'), level: ToastLevel, message: z.string()}).strict()\nexport type GotTableShow = { kind: 'GotTableShow', id: TableId, position?: Position }\nexport const GotTableShow = z.object({kind: z.literal('GotTableShow'), id: TableId, position: Position.optional()}).strict()\nexport type GotTableHide = { kind: 'GotTableHide', id: TableId }\nexport const GotTableHide = z.object({kind: z.literal('GotTableHide'), id: TableId}).strict()\nexport type GotTableToggleColumns = { kind: 'GotTableToggleColumns', id: TableId }\nexport const GotTableToggleColumns = z.object({kind: z.literal('GotTableToggleColumns'), id: TableId}).strict()\nexport type GotTablePosition = { kind: 'GotTablePosition', id: TableId, position: Position }\nexport const GotTablePosition = z.object({kind: z.literal('GotTablePosition'), id: TableId, position: Position}).strict()\nexport type GotTableMove = { kind: 'GotTableMove', id: TableId, delta: Delta }\nexport const GotTableMove = z.object({kind: z.literal('GotTableMove'), id: TableId, delta: Delta}).strict()\nexport type GotTableSelect = { kind: 'GotTableSelect', id: TableId }\nexport const GotTableSelect = z.object({kind: z.literal('GotTableSelect'), id: TableId}).strict()\nexport type GotTableColor = { kind: 'GotTableColor', id: TableId, color: Color }\nexport const GotTableColor = z.object({kind: z.literal('GotTableColor'), id: TableId, color: Color}).strict()\nexport type GotColumnShow = { kind: 'GotColumnShow', ref: ColumnId }\nexport const GotColumnShow = z.object({kind: z.literal('GotColumnShow'), ref: ColumnId}).strict()\nexport type GotColumnHide = { kind: 'GotColumnHide', ref: ColumnId }\nexport const GotColumnHide = z.object({kind: z.literal('GotColumnHide'), ref: ColumnId}).strict()\nexport type GotColumnMove = { kind: 'GotColumnMove', ref: ColumnId, index: number }\nexport const GotColumnMove = z.object({kind: z.literal('GotColumnMove'), ref: ColumnId, index: z.number()}).strict()\nexport type GotFitToScreen = { kind: 'GotFitToScreen' }\nexport const GotFitToScreen = z.object({kind: z.literal('GotFitToScreen')}).strict()\nexport type Error = { kind: 'Error', message: string }\nexport const Error = z.object({kind: z.literal('Error'), message: z.string()}).strict()\nexport type JsMsg = GotSizes | GotProject | ProjectDeleted | GotLocalFile | GotTableStats | GotColumnStats | GotHotkey | GotKeyHold | GotToast | GotTableShow | GotTableHide | GotTableToggleColumns | GotTablePosition | GotTableMove | GotTableSelect | GotTableColor | GotColumnShow | GotColumnHide | GotColumnMove | GotFitToScreen | Error\nexport const JsMsg = z.discriminatedUnion('kind', [GotSizes, GotProject, ProjectDeleted, GotLocalFile, GotTableStats, GotColumnStats, GotHotkey, GotKeyHold, GotToast, GotTableShow, GotTableHide, GotTableToggleColumns, GotTablePosition, GotTableMove, GotTableSelect, GotTableColor, GotColumnShow, GotColumnHide, GotColumnMove, GotFitToScreen, Error])\n", "export type AnyError = any\nexport type StrError = string\n\nexport function formatError(err: AnyError) {\n    if (err instanceof Error) {\n        return err.message\n    } else if (typeof err === 'string') {\n        return err\n    } else if (typeof err === 'object' && err.json && typeof err.json.message === 'string') {\n        return err.json.message\n    } else if (typeof err === 'object' && err && typeof err.statusCode === 'number' && typeof err.message === 'string') {\n        return err.message\n    } else {\n        return JSON.stringify(err)\n    }\n}\n", "import {ElementSize, ElmFlags, ElmMsg, ElmRuntime, GetLocalFile, Hotkey, HotkeyId, JsMsg} from \"../types/ports\";\nimport {ColumnId, Project, ProjectId, SourceId, TableId} from \"../types/project\";\nimport {Color, Delta, Position, ToastLevel} from \"../types/basics\";\nimport {Logger} from \"./logger\";\nimport * as Zod from \"../utils/zod\";\nimport {formatError} from \"../utils/error\";\nimport {ColumnStats, TableStats} from \"../types/stats\";\n\nexport class ElmApp {\n    static init(flags: ElmFlags, logger: Logger) {\n        return new ElmApp(window.Elm.Main.init({flags}), logger)\n    }\n\n    private callbacks: { [key in ElmMsg['kind']]: Callback<key>[] } = {\n        Click: [],\n        MouseDown: [],\n        Focus: [],\n        Blur: [],\n        ScrollTo: [],\n        Fullscreen: [],\n        SetMeta: [],\n        AutofocusWithin: [],\n        Toast: [],\n        GetProject: [],\n        CreateProjectTmp: [],\n        UpdateProjectTmp: [],\n        CreateProject: [],\n        UpdateProject: [],\n        MoveProjectTo: [],\n        DeleteProject: [],\n        ProjectDirty: [],\n        DownloadFile: [],\n        GetLocalFile: [],\n        GetTableStats: [],\n        GetColumnStats: [],\n        ObserveSizes: [],\n        ListenKeys: [],\n        Confetti: [],\n        ConfettiPride: [],\n        Fireworks: [],\n        Track: [],\n    }\n\n    constructor(private elm: ElmRuntime<JsMsg, ElmMsg>, private logger: Logger) {\n        this.elm.ports?.elmToJs.subscribe(msg => {\n            this.logger.debug('ElmMsg', msg)\n            try {\n                const valid: ElmMsg = Zod.validate(msg, ElmMsg, `ElmMsg[${msg.kind}]`)\n                // setTimeout: a ugly hack to wait for Elm to render the model changes before running the commands :(\n                // TODO: use requestAnimationFrame instead!\n                setTimeout(() => {\n                    const calls = this.callbacks[valid.kind]\n                    if (calls.length > 0) {\n                        // @ts-ignore\n                        calls.map(call => call(valid))\n                    } else {\n                        logger.error(`Message \"${valid.kind}\" not handled`, valid)\n                    }\n                }, 100)\n            } catch (e) {\n                this.toast(ToastLevel.enum.error, formatError(e))\n            }\n        })\n    }\n\n    on = <K extends ElmMsg['kind']>(event: K, callback: (msg: ElmMsg & { kind: K }) => void): void => {\n        this.callbacks[event].push(callback)\n    }\n\n    noListeners = (): ElmMsg['kind'][] => (Object.keys(this.callbacks) as ElmMsg['kind'][]).filter(c => this.callbacks[c].length === 0)\n\n    updateSizes = (sizes: ElementSize[]): void => this.send({kind: 'GotSizes', sizes})\n    gotProject = (project: Project | undefined): void => {\n        window.azimutt.project = project\n        project ? this.send({kind: 'GotProject', project}) : this.send({kind: 'GotProject'})\n    }\n    dropProject = (id: ProjectId): void => this.send({kind: 'ProjectDeleted', id})\n    gotLocalFile = (msg: GetLocalFile, content: string): void => this.send({\n        kind: 'GotLocalFile',\n        sourceKind: msg.sourceKind,\n        file: msg.file,\n        content\n    })\n    gotTableStats = (source: SourceId, stats: TableStats): void => this.send({kind: 'GotTableStats', source, stats})\n    gotColumnStats = (source: SourceId, stats: ColumnStats): void => this.send({kind: 'GotColumnStats', source, stats})\n    gotHotkey = (hotkey: Hotkey & { id: HotkeyId }): void => this.send({kind: 'GotHotkey', id: hotkey.id})\n    gotKeyHold = (key: string, start: boolean): void => this.send({kind: 'GotKeyHold', key, start})\n    toast = (level: ToastLevel, message: string): void => this.send({kind: 'GotToast', level, message})\n    showTable = (id: TableId, position?: Position): void => this.send({kind: 'GotTableShow', id, position})\n    hideTable = (id: TableId): void => this.send({kind: 'GotTableHide', id})\n    toggleTableColumns = (id: TableId): void => this.send({kind: 'GotTableToggleColumns', id})\n    setTablePosition = (id: TableId, position: Position): void => this.send({kind: 'GotTablePosition', id, position})\n    moveTable = (id: TableId, delta: Delta): void => this.send({kind: 'GotTableMove', id, delta})\n    selectTable = (id: TableId): void => this.send({kind: 'GotTableSelect', id})\n    setTableColor = (id: TableId, color: Color): void => this.send({kind: 'GotTableColor', id, color})\n    showColumn = (id: ColumnId): void => this.send({kind: 'GotColumnShow', ref: id})\n    hideColumn = (id: ColumnId): void => this.send({kind: 'GotColumnHide', ref: id})\n    moveColumn = (id: ColumnId, index: number): void => this.send({kind: 'GotColumnMove', ref: id, index})\n    fitToScreen = (): void => this.send({kind: 'GotFitToScreen'})\n\n    private send(msg: JsMsg): void {\n        this.logger.debug('JsMsg', msg)\n        try {\n            const valid: JsMsg = Zod.validate(msg, JsMsg, `JsMsg[${msg.kind}]`)\n            this.elm.ports?.jsToElm.send(valid)\n        } catch (e) {\n            this.toast(ToastLevel.enum.error, formatError(e))\n        }\n    }\n}\n\ntype Callback<key> = (msg: ElmMsg & { kind: key }) => void\n", "import {ColumnId, Project, Relation, Table, TableId} from \"../types/project\";\nimport {Color, Px} from \"../types/basics\";\nimport {ElmApp} from \"./elm\";\nimport {Logger} from \"./logger\";\n\nexport class AzimuttApi {\n    constructor(private app: ElmApp,\n                private logger: Logger,\n                public project: Project | undefined = undefined) {\n    }\n\n    getAllTables = (): Table[] => {\n        const removedTables = (this.project?.settings?.removedTables || '').split(',').map(t => t.trim()).filter(t => t.length > 0)\n        return this.project?.sources\n            .filter(s => s.enabled !== false)\n            .flatMap(s => s.tables)\n            .filter(t => !removedTables.find(r => t.table === r || new RegExp(r).test(t.table))) || []\n    }\n    getAllRelations = (): Relation[] => this.project?.sources.filter(s => s.enabled !== false).flatMap(s => s.relations) || []\n    getVisibleTables = (): Table[] => {\n        const tables: { [id: TableId]: Table } = this.getAllTables().reduce((acc, t) => ({...acc, [`${t.schema}.${t.table}`]: t}), {})\n        return this.project?.layouts[this.project?.usedLayout].tables.map(t => tables[t.id]).filter(t => t !== undefined) as Table[]\n    }\n    showTable = (id: TableId, left?: Px, top?: Px): void => this.app.showTable(id, typeof left === 'number' && typeof top === 'number' ? {left, top} : undefined)\n    hideTable = (id: TableId): void => this.app.hideTable(id)\n    toggleTableColumns = (id: TableId): void => this.app.toggleTableColumns(id)\n    moveTableTo = (id: TableId, left: Px, top: Px): void => this.app.setTablePosition(id, {left, top})\n    moveTable = (id: TableId, dx: Px, dy: Px): void => this.app.moveTable(id, {dx, dy})\n    selectTable = (id: TableId): void => this.app.selectTable(id)\n    setTableColor = (id: TableId, color: Color): void => this.app.setTableColor(id, color)\n    showColumn = (id: ColumnId): void => this.app.showColumn(id)\n    hideColumn = (id: ColumnId): void => this.app.hideColumn(id)\n    moveColumn = (id: ColumnId, index: number): void => this.app.moveColumn(id, index)\n    fitToScreen = (): void => this.app.fitToScreen()\n    help = (): void => this.logger.info('Hi! Welcome in the hackable world! \uD83D\uDCBB\uFE0F\uD83E\uDD13\\n' +\n        'We are just trying out this, so if you use it and it\\'s helpful, please let us know. Also, if you need more feature like this, don\\'t hesitate to ask.\\n\\n' +\n        'Here are a few tips:\\n' +\n        ' - `tableId` is the \"schema.table\" of a table, but if schema is \"public\", you can omit it. Basically, what you see in table header.\\n' +\n        ' - `columnRef` is similar to `tableId` but with the column name appended. For example \"users.id\" or \"audit.logs.time\".\\n\\n' +\n        '\u26A0\uFE0F This is not a stable interface, just a toy to experiment. If you start using it heavily, let us know so we can define something more stable.')\n}\n", "import {z} from \"zod\";\n\nexport type Env = 'dev' | 'staging' | 'prod'\nexport const Env = z.enum(['dev', 'staging', 'prod'])\n\nexport function getEnv(): Env {\n    if (window.location.hostname.endsWith('localhost')) {\n        return Env.enum.dev\n    } else if (window.location.hostname.endsWith('azimutt.dev')) {\n        return Env.enum.staging\n    } else {\n        return Env.enum.prod\n    }\n}\n", "import {z} from \"zod\";\nimport {Env} from \"../utils/env\";\n\nexport class Logger {\n    error(...args: any[]): void {\n        throw 'Not implemented'\n    }\n\n    warn(...args: any[]): void {\n        throw 'Not implemented'\n    }\n\n    info(...args: any[]): void {\n        throw 'Not implemented'\n    }\n\n    log(...args: any[]): void {\n        throw 'Not implemented'\n    }\n\n    debug(...args: any[]): void {\n        throw 'Not implemented'\n    }\n\n    disableDebug(): Logger {\n        return new ProxyLogger(this, LoggerLevel.enum.debug)\n    }\n}\n\nexport class ConsoleLogger extends Logger {\n    constructor(private env: Env) {\n        super()\n    }\n\n    error(...args: any[]): void {\n        console.error(...args)\n    }\n\n    warn(...args: any[]): void {\n        console.warn(...args)\n    }\n\n    info(...args: any[]): void {\n        console.info(...args)\n    }\n\n    log(...args: any[]): void {\n        console.log(...args)\n    }\n\n    debug(...args: any[]): void {\n        if (this.env !== Env.enum.prod) {\n            console.debug(...args)\n        }\n    }\n}\n\nexport type LoggerLevel = 'error' | 'warn' | 'info' | 'log' | 'debug'\nexport const LoggerLevel = z.enum(['error', 'warn', 'info', 'log', 'debug'])\n\nexport class ProxyLogger extends Logger {\n    constructor(private underlying: Logger, private disabled: LoggerLevel) {\n        super()\n    }\n\n    error(...args: any[]): void {\n        if (this.disabled !== LoggerLevel.enum.error) {\n            this.underlying.error(...args)\n        }\n    }\n\n    warn(...args: any[]): void {\n        if (this.disabled !== LoggerLevel.enum.warn) {\n            this.underlying.warn(...args)\n        }\n    }\n\n    info(...args: any[]): void {\n        if (this.disabled !== LoggerLevel.enum.info) {\n            this.underlying.info(...args)\n        }\n    }\n\n    log(...args: any[]): void {\n        if (this.disabled !== LoggerLevel.enum.log) {\n            this.underlying.log(...args)\n        }\n    }\n\n    debug(...args: any[]): void {\n        if (this.disabled !== LoggerLevel.enum.debug) {\n            this.underlying.debug(...args)\n        }\n    }\n}\n", "export function loadPolyfills() {\n    // https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n    if (!String.prototype.includes) {\n        String.prototype.includes = function (search: string | RegExp, start) {\n            if (search instanceof RegExp) {\n                throw TypeError('first argument must not be a RegExp')\n            }\n            if (start === undefined) {\n                start = 0\n            }\n            return this.indexOf(search, start) !== -1\n        }\n    }\n\n    // https://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid/2117523#2117523\n    if (!crypto.randomUUID) {\n        crypto.randomUUID = function () {\n            // @ts-expect-error\n            return ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g, c => (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16))\n        }\n    }\n\n    // empower Elm for time measurements (inspired from https://ellie-app.com/g7kpM8n9Z6Ka1)\n    const consoleLog = console.log\n    console.log = (...args) => {\n        const msg = args[0]\n        if (typeof msg === 'string' && msg.startsWith('[elm-time')) {\n            if (msg.startsWith('[elm-time-end]')) {\n                console.timeEnd(msg.slice(15, -4))\n            } else {\n                console.time(msg.slice(11, -4))\n            }\n        } else {\n            consoleLog(...args)\n        }\n    }\n}\n", "// canvas-confetti v1.6.0 built on 2022-10-24T21:26:41.619Z\nvar module = {};\n\n// source content\n(function main(global, module, isWorker, workerSize) {\n  var canUseWorker = !!(\n    global.Worker &&\n    global.Blob &&\n    global.Promise &&\n    global.OffscreenCanvas &&\n    global.OffscreenCanvasRenderingContext2D &&\n    global.HTMLCanvasElement &&\n    global.HTMLCanvasElement.prototype.transferControlToOffscreen &&\n    global.URL &&\n    global.URL.createObjectURL);\n\n  function noop() {}\n\n  // create a promise if it exists, otherwise, just\n  // call the function directly\n  function promise(func) {\n    var ModulePromise = module.exports.Promise;\n    var Prom = ModulePromise !== void 0 ? ModulePromise : global.Promise;\n\n    if (typeof Prom === 'function') {\n      return new Prom(func);\n    }\n\n    func(noop, noop);\n\n    return null;\n  }\n\n  var raf = (function () {\n    var TIME = Math.floor(1000 / 60);\n    var frame, cancel;\n    var frames = {};\n    var lastFrameTime = 0;\n\n    if (typeof requestAnimationFrame === 'function' && typeof cancelAnimationFrame === 'function') {\n      frame = function (cb) {\n        var id = Math.random();\n\n        frames[id] = requestAnimationFrame(function onFrame(time) {\n          if (lastFrameTime === time || lastFrameTime + TIME - 1 < time) {\n            lastFrameTime = time;\n            delete frames[id];\n\n            cb();\n          } else {\n            frames[id] = requestAnimationFrame(onFrame);\n          }\n        });\n\n        return id;\n      };\n      cancel = function (id) {\n        if (frames[id]) {\n          cancelAnimationFrame(frames[id]);\n        }\n      };\n    } else {\n      frame = function (cb) {\n        return setTimeout(cb, TIME);\n      };\n      cancel = function (timer) {\n        return clearTimeout(timer);\n      };\n    }\n\n    return { frame: frame, cancel: cancel };\n  }());\n\n  var getWorker = (function () {\n    var worker;\n    var prom;\n    var resolves = {};\n\n    function decorate(worker) {\n      function execute(options, callback) {\n        worker.postMessage({ options: options || {}, callback: callback });\n      }\n      worker.init = function initWorker(canvas) {\n        var offscreen = canvas.transferControlToOffscreen();\n        worker.postMessage({ canvas: offscreen }, [offscreen]);\n      };\n\n      worker.fire = function fireWorker(options, size, done) {\n        if (prom) {\n          execute(options, null);\n          return prom;\n        }\n\n        var id = Math.random().toString(36).slice(2);\n\n        prom = promise(function (resolve) {\n          function workerDone(msg) {\n            if (msg.data.callback !== id) {\n              return;\n            }\n\n            delete resolves[id];\n            worker.removeEventListener('message', workerDone);\n\n            prom = null;\n            done();\n            resolve();\n          }\n\n          worker.addEventListener('message', workerDone);\n          execute(options, id);\n\n          resolves[id] = workerDone.bind(null, { data: { callback: id }});\n        });\n\n        return prom;\n      };\n\n      worker.reset = function resetWorker() {\n        worker.postMessage({ reset: true });\n\n        for (var id in resolves) {\n          resolves[id]();\n          delete resolves[id];\n        }\n      };\n    }\n\n    return function () {\n      if (worker) {\n        return worker;\n      }\n\n      if (!isWorker && canUseWorker) {\n        var code = [\n          'var CONFETTI, SIZE = {}, module = {};',\n          '(' + main.toString() + ')(this, module, true, SIZE);',\n          'onmessage = function(msg) {',\n          '  if (msg.data.options) {',\n          '    CONFETTI(msg.data.options).then(function () {',\n          '      if (msg.data.callback) {',\n          '        postMessage({ callback: msg.data.callback });',\n          '      }',\n          '    });',\n          '  } else if (msg.data.reset) {',\n          '    CONFETTI && CONFETTI.reset();',\n          '  } else if (msg.data.resize) {',\n          '    SIZE.width = msg.data.resize.width;',\n          '    SIZE.height = msg.data.resize.height;',\n          '  } else if (msg.data.canvas) {',\n          '    SIZE.width = msg.data.canvas.width;',\n          '    SIZE.height = msg.data.canvas.height;',\n          '    CONFETTI = module.exports.create(msg.data.canvas);',\n          '  }',\n          '}',\n        ].join('\\n');\n        try {\n          worker = new Worker(URL.createObjectURL(new Blob([code])));\n        } catch (e) {\n          // eslint-disable-next-line no-console\n          typeof console !== undefined && typeof console.warn === 'function' ? console.warn('\uD83C\uDF8A Could not load worker', e) : null;\n\n          return null;\n        }\n\n        decorate(worker);\n      }\n\n      return worker;\n    };\n  })();\n\n  var defaults = {\n    particleCount: 50,\n    angle: 90,\n    spread: 45,\n    startVelocity: 45,\n    decay: 0.9,\n    gravity: 1,\n    drift: 0,\n    ticks: 200,\n    x: 0.5,\n    y: 0.5,\n    shapes: ['square', 'circle'],\n    zIndex: 100,\n    colors: [\n      '#26ccff',\n      '#a25afd',\n      '#ff5e7e',\n      '#88ff5a',\n      '#fcff42',\n      '#ffa62d',\n      '#ff36ff'\n    ],\n    // probably should be true, but back-compat\n    disableForReducedMotion: false,\n    scalar: 1\n  };\n\n  function convert(val, transform) {\n    return transform ? transform(val) : val;\n  }\n\n  function isOk(val) {\n    return !(val === null || val === undefined);\n  }\n\n  function prop(options, name, transform) {\n    return convert(\n      options && isOk(options[name]) ? options[name] : defaults[name],\n      transform\n    );\n  }\n\n  function onlyPositiveInt(number){\n    return number < 0 ? 0 : Math.floor(number);\n  }\n\n  function randomInt(min, max) {\n    // [min, max)\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  function toDecimal(str) {\n    return parseInt(str, 16);\n  }\n\n  function colorsToRgb(colors) {\n    return colors.map(hexToRgb);\n  }\n\n  function hexToRgb(str) {\n    var val = String(str).replace(/[^0-9a-f]/gi, '');\n\n    if (val.length < 6) {\n        val = val[0]+val[0]+val[1]+val[1]+val[2]+val[2];\n    }\n\n    return {\n      r: toDecimal(val.substring(0,2)),\n      g: toDecimal(val.substring(2,4)),\n      b: toDecimal(val.substring(4,6))\n    };\n  }\n\n  function getOrigin(options) {\n    var origin = prop(options, 'origin', Object);\n    origin.x = prop(origin, 'x', Number);\n    origin.y = prop(origin, 'y', Number);\n\n    return origin;\n  }\n\n  function setCanvasWindowSize(canvas) {\n    canvas.width = document.documentElement.clientWidth;\n    canvas.height = document.documentElement.clientHeight;\n  }\n\n  function setCanvasRectSize(canvas) {\n    var rect = canvas.getBoundingClientRect();\n    canvas.width = rect.width;\n    canvas.height = rect.height;\n  }\n\n  function getCanvas(zIndex) {\n    var canvas = document.createElement('canvas');\n\n    canvas.style.position = 'fixed';\n    canvas.style.top = '0px';\n    canvas.style.left = '0px';\n    canvas.style.pointerEvents = 'none';\n    canvas.style.zIndex = zIndex;\n\n    return canvas;\n  }\n\n  function ellipse(context, x, y, radiusX, radiusY, rotation, startAngle, endAngle, antiClockwise) {\n    context.save();\n    context.translate(x, y);\n    context.rotate(rotation);\n    context.scale(radiusX, radiusY);\n    context.arc(0, 0, 1, startAngle, endAngle, antiClockwise);\n    context.restore();\n  }\n\n  function randomPhysics(opts) {\n    var radAngle = opts.angle * (Math.PI / 180);\n    var radSpread = opts.spread * (Math.PI / 180);\n\n    return {\n      x: opts.x,\n      y: opts.y,\n      wobble: Math.random() * 10,\n      wobbleSpeed: Math.min(0.11, Math.random() * 0.1 + 0.05),\n      velocity: (opts.startVelocity * 0.5) + (Math.random() * opts.startVelocity),\n      angle2D: -radAngle + ((0.5 * radSpread) - (Math.random() * radSpread)),\n      tiltAngle: (Math.random() * (0.75 - 0.25) + 0.25) * Math.PI,\n      color: opts.color,\n      shape: opts.shape,\n      tick: 0,\n      totalTicks: opts.ticks,\n      decay: opts.decay,\n      drift: opts.drift,\n      random: Math.random() + 2,\n      tiltSin: 0,\n      tiltCos: 0,\n      wobbleX: 0,\n      wobbleY: 0,\n      gravity: opts.gravity * 3,\n      ovalScalar: 0.6,\n      scalar: opts.scalar\n    };\n  }\n\n  function updateFetti(context, fetti) {\n    fetti.x += Math.cos(fetti.angle2D) * fetti.velocity + fetti.drift;\n    fetti.y += Math.sin(fetti.angle2D) * fetti.velocity + fetti.gravity;\n    fetti.wobble += fetti.wobbleSpeed;\n    fetti.velocity *= fetti.decay;\n    fetti.tiltAngle += 0.1;\n    fetti.tiltSin = Math.sin(fetti.tiltAngle);\n    fetti.tiltCos = Math.cos(fetti.tiltAngle);\n    fetti.random = Math.random() + 2;\n    fetti.wobbleX = fetti.x + ((10 * fetti.scalar) * Math.cos(fetti.wobble));\n    fetti.wobbleY = fetti.y + ((10 * fetti.scalar) * Math.sin(fetti.wobble));\n\n    var progress = (fetti.tick++) / fetti.totalTicks;\n\n    var x1 = fetti.x + (fetti.random * fetti.tiltCos);\n    var y1 = fetti.y + (fetti.random * fetti.tiltSin);\n    var x2 = fetti.wobbleX + (fetti.random * fetti.tiltCos);\n    var y2 = fetti.wobbleY + (fetti.random * fetti.tiltSin);\n\n    context.fillStyle = 'rgba(' + fetti.color.r + ', ' + fetti.color.g + ', ' + fetti.color.b + ', ' + (1 - progress) + ')';\n    context.beginPath();\n\n    if (fetti.shape === 'circle') {\n      context.ellipse ?\n        context.ellipse(fetti.x, fetti.y, Math.abs(x2 - x1) * fetti.ovalScalar, Math.abs(y2 - y1) * fetti.ovalScalar, Math.PI / 10 * fetti.wobble, 0, 2 * Math.PI) :\n        ellipse(context, fetti.x, fetti.y, Math.abs(x2 - x1) * fetti.ovalScalar, Math.abs(y2 - y1) * fetti.ovalScalar, Math.PI / 10 * fetti.wobble, 0, 2 * Math.PI);\n    } else if (fetti.shape === 'star') {\n      var rot = Math.PI / 2 * 3;\n      var innerRadius = 4 * fetti.scalar;\n      var outerRadius = 8 * fetti.scalar;\n      var x = fetti.x;\n      var y = fetti.y;\n      var spikes = 5;\n      var step = Math.PI / spikes;\n\n      while (spikes--) {\n        x = fetti.x + Math.cos(rot) * outerRadius;\n        y = fetti.y + Math.sin(rot) * outerRadius;\n        context.lineTo(x, y);\n        rot += step;\n\n        x = fetti.x + Math.cos(rot) * innerRadius;\n        y = fetti.y + Math.sin(rot) * innerRadius;\n        context.lineTo(x, y);\n        rot += step;\n      }\n    } else {\n      context.moveTo(Math.floor(fetti.x), Math.floor(fetti.y));\n      context.lineTo(Math.floor(fetti.wobbleX), Math.floor(y1));\n      context.lineTo(Math.floor(x2), Math.floor(y2));\n      context.lineTo(Math.floor(x1), Math.floor(fetti.wobbleY));\n    }\n\n    context.closePath();\n    context.fill();\n\n    return fetti.tick < fetti.totalTicks;\n  }\n\n  function animate(canvas, fettis, resizer, size, done) {\n    var animatingFettis = fettis.slice();\n    var context = canvas.getContext('2d');\n    var animationFrame;\n    var destroy;\n\n    var prom = promise(function (resolve) {\n      function onDone() {\n        animationFrame = destroy = null;\n\n        context.clearRect(0, 0, size.width, size.height);\n\n        done();\n        resolve();\n      }\n\n      function update() {\n        if (isWorker && !(size.width === workerSize.width && size.height === workerSize.height)) {\n          size.width = canvas.width = workerSize.width;\n          size.height = canvas.height = workerSize.height;\n        }\n\n        if (!size.width && !size.height) {\n          resizer(canvas);\n          size.width = canvas.width;\n          size.height = canvas.height;\n        }\n\n        context.clearRect(0, 0, size.width, size.height);\n\n        animatingFettis = animatingFettis.filter(function (fetti) {\n          return updateFetti(context, fetti);\n        });\n\n        if (animatingFettis.length) {\n          animationFrame = raf.frame(update);\n        } else {\n          onDone();\n        }\n      }\n\n      animationFrame = raf.frame(update);\n      destroy = onDone;\n    });\n\n    return {\n      addFettis: function (fettis) {\n        animatingFettis = animatingFettis.concat(fettis);\n\n        return prom;\n      },\n      canvas: canvas,\n      promise: prom,\n      reset: function () {\n        if (animationFrame) {\n          raf.cancel(animationFrame);\n        }\n\n        if (destroy) {\n          destroy();\n        }\n      }\n    };\n  }\n\n  function confettiCannon(canvas, globalOpts) {\n    var isLibCanvas = !canvas;\n    var allowResize = !!prop(globalOpts || {}, 'resize');\n    var globalDisableForReducedMotion = prop(globalOpts, 'disableForReducedMotion', Boolean);\n    var shouldUseWorker = canUseWorker && !!prop(globalOpts || {}, 'useWorker');\n    var worker = shouldUseWorker ? getWorker() : null;\n    var resizer = isLibCanvas ? setCanvasWindowSize : setCanvasRectSize;\n    var initialized = (canvas && worker) ? !!canvas.__confetti_initialized : false;\n    var preferLessMotion = typeof matchMedia === 'function' && matchMedia('(prefers-reduced-motion)').matches;\n    var animationObj;\n\n    function fireLocal(options, size, done) {\n      var particleCount = prop(options, 'particleCount', onlyPositiveInt);\n      var angle = prop(options, 'angle', Number);\n      var spread = prop(options, 'spread', Number);\n      var startVelocity = prop(options, 'startVelocity', Number);\n      var decay = prop(options, 'decay', Number);\n      var gravity = prop(options, 'gravity', Number);\n      var drift = prop(options, 'drift', Number);\n      var colors = prop(options, 'colors', colorsToRgb);\n      var ticks = prop(options, 'ticks', Number);\n      var shapes = prop(options, 'shapes');\n      var scalar = prop(options, 'scalar');\n      var origin = getOrigin(options);\n\n      var temp = particleCount;\n      var fettis = [];\n\n      var startX = canvas.width * origin.x;\n      var startY = canvas.height * origin.y;\n\n      while (temp--) {\n        fettis.push(\n          randomPhysics({\n            x: startX,\n            y: startY,\n            angle: angle,\n            spread: spread,\n            startVelocity: startVelocity,\n            color: colors[temp % colors.length],\n            shape: shapes[randomInt(0, shapes.length)],\n            ticks: ticks,\n            decay: decay,\n            gravity: gravity,\n            drift: drift,\n            scalar: scalar\n          })\n        );\n      }\n\n      // if we have a previous canvas already animating,\n      // add to it\n      if (animationObj) {\n        return animationObj.addFettis(fettis);\n      }\n\n      animationObj = animate(canvas, fettis, resizer, size , done);\n\n      return animationObj.promise;\n    }\n\n    function fire(options) {\n      var disableForReducedMotion = globalDisableForReducedMotion || prop(options, 'disableForReducedMotion', Boolean);\n      var zIndex = prop(options, 'zIndex', Number);\n\n      if (disableForReducedMotion && preferLessMotion) {\n        return promise(function (resolve) {\n          resolve();\n        });\n      }\n\n      if (isLibCanvas && animationObj) {\n        // use existing canvas from in-progress animation\n        canvas = animationObj.canvas;\n      } else if (isLibCanvas && !canvas) {\n        // create and initialize a new canvas\n        canvas = getCanvas(zIndex);\n        document.body.appendChild(canvas);\n      }\n\n      if (allowResize && !initialized) {\n        // initialize the size of a user-supplied canvas\n        resizer(canvas);\n      }\n\n      var size = {\n        width: canvas.width,\n        height: canvas.height\n      };\n\n      if (worker && !initialized) {\n        worker.init(canvas);\n      }\n\n      initialized = true;\n\n      if (worker) {\n        canvas.__confetti_initialized = true;\n      }\n\n      function onResize() {\n        if (worker) {\n          // TODO this really shouldn't be immediate, because it is expensive\n          var obj = {\n            getBoundingClientRect: function () {\n              if (!isLibCanvas) {\n                return canvas.getBoundingClientRect();\n              }\n            }\n          };\n\n          resizer(obj);\n\n          worker.postMessage({\n            resize: {\n              width: obj.width,\n              height: obj.height\n            }\n          });\n          return;\n        }\n\n        // don't actually query the size here, since this\n        // can execute frequently and rapidly\n        size.width = size.height = null;\n      }\n\n      function done() {\n        animationObj = null;\n\n        if (allowResize) {\n          global.removeEventListener('resize', onResize);\n        }\n\n        if (isLibCanvas && canvas) {\n          document.body.removeChild(canvas);\n          canvas = null;\n          initialized = false;\n        }\n      }\n\n      if (allowResize) {\n        global.addEventListener('resize', onResize, false);\n      }\n\n      if (worker) {\n        return worker.fire(options, size, done);\n      }\n\n      return fireLocal(options, size, done);\n    }\n\n    fire.reset = function () {\n      if (worker) {\n        worker.reset();\n      }\n\n      if (animationObj) {\n        animationObj.reset();\n      }\n    };\n\n    return fire;\n  }\n\n  // Make default export lazy to defer worker creation until called.\n  var defaultFire;\n  function getDefaultFire() {\n    if (!defaultFire) {\n      defaultFire = confettiCannon(null, { useWorker: true, resize: true });\n    }\n    return defaultFire;\n  }\n\n  module.exports = function() {\n    return getDefaultFire().apply(this, arguments);\n  };\n  module.exports.reset = function() {\n    getDefaultFire().reset();\n  };\n  module.exports.create = confettiCannon;\n}((function () {\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n\n  return this || {};\n})(), module, false));\n\n// end source content\n\nexport default module.exports;\nexport var create = module.exports.create;\n", "import {HtmlId, Platform} from \"../types/basics\";\nimport confetti from \"canvas-confetti\";\n\nexport const Utils = {\n    getPlatform(): Platform {\n        // return window.navigator.platform.indexOf('Mac') !== -1 ? Platform.enum.mac : Platform.enum.pc\n        return window.navigator.userAgent.indexOf('Mac OS X') !== -1 ? Platform.enum.mac : Platform.enum.pc\n    },\n    randomId() {\n        return crypto.randomUUID()\n    },\n    getElementById(id: HtmlId): HTMLElement {\n        const elem = document.getElementById(id)\n        if (elem) {\n            return elem\n        } else {\n            throw new Error(`Can't find element with id '${id}'`)\n        }\n    },\n    maybeElementById(id: HtmlId): HTMLElement[] {\n        const elem = document.getElementById(id)\n        return elem ? [elem] : []\n    },\n    getParents(elt: HTMLElement): HTMLElement[] {\n        const parents = [elt]\n        let parent = elt.parentElement\n        while (parent) {\n            parents.push(parent)\n            parent = parent.parentElement\n        }\n        return parents\n    },\n    findParent(elt: HTMLElement, predicate: (e: HTMLElement) => boolean): HTMLElement | undefined {\n        if (predicate(elt)) {\n            return elt\n        } else if (elt.parentElement) {\n            return Utils.findParent(elt.parentElement, predicate)\n        } else {\n            return undefined\n        }\n    },\n    fullscreen(id: HtmlId | undefined): Promise<void> {\n        const element = id ? Utils.getElementById(id) : document.body\n        const result = element.requestFullscreen ? element.requestFullscreen() : Promise.reject(new Error('requestFullscreen not available'))\n        return result.catch(_ => window.open(window.location.href, '_blank')?.focus()) // if full-screen is denied, open in a new tab\n    },\n    downloadFile(filename: string, content: string) {\n        const element = document.createElement('a')\n        element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(content))\n        element.setAttribute('download', filename)\n\n        element.style.display = 'none'\n        document.body.appendChild(element)\n\n        element.click()\n\n        document.body.removeChild(element)\n    },\n    launchConfetti(id: string): void {\n        // https://www.kirilv.com/canvas-confetti\n        const elt = document.getElementById(id) as HTMLElement\n        if (!elt) {\n            console.warn(`Didn't found ${id} to launch confetti`)\n            return\n        }\n\n        const rect = elt.getBoundingClientRect()\n        const left = (rect.left + rect.right) / 2\n        const top = 50 + (rect.top + rect.bottom) / 2\n        confetti({\n            particleCount: 100,\n            spread: 70,\n            origin: {x: left / window.innerWidth, y: top / window.innerHeight},\n            disableForReducedMotion: true\n        });\n    },\n    launchConfettiPride(): void {\n        const end = Date.now() + (3 * 1000);\n        const colors = ['#28BEC9', '#0C4F9C'];\n\n        (function frame() {\n            confetti({\n                particleCount: 2,\n                angle: 60,\n                spread: 55,\n                origin: {x: 0},\n                colors: colors,\n                zIndex: 20000\n            });\n            confetti({\n                particleCount: 2,\n                angle: 120,\n                spread: 55,\n                origin: {x: 1},\n                colors: colors,\n                zIndex: 20000\n            });\n\n            if (Date.now() < end) {\n                requestAnimationFrame(frame);\n            }\n        }());\n    },\n    launchFireworks(): void {\n        const duration = 3 * 1000\n        const animationEnd = Date.now() + duration\n        const defaults = { startVelocity: 30, spread: 360, ticks: 60, zIndex: 10001 /* z-max + 1 */ }\n        const randomInRange = (min: number, max: number): number => Math.random() * (max - min) + min\n\n        const interval: any = setInterval(() => {\n            const timeLeft = animationEnd - Date.now()\n            if (timeLeft <= 0) { return clearInterval(interval) }\n\n            const particleCount = 100 * (timeLeft / duration);\n            // since particles fall down, start a bit higher than random\n            confetti(Object.assign({}, defaults, { particleCount, origin: { x: randomInRange(0.1, 0.3), y: Math.random() - 0.2 } }));\n            confetti(Object.assign({}, defaults, { particleCount, origin: { x: randomInRange(0.7, 0.9), y: Math.random() - 0.2 } }));\n        }, 250)\n    }\n}\n", "import {ProjectId, ProjectJson} from \"../../types/project\";\nimport {StorageApi, StorageKind} from \"./api\";\nimport {Logger} from \"../logger\";\nimport * as Zod from \"../../utils/zod\";\n\nexport class IndexedDBStorage implements StorageApi {\n    static databaseName = 'azimutt'\n    static databaseVersion = 1\n    static dbProjects = 'projects'\n\n    static init(logger: Logger): Promise<IndexedDBStorage> {\n        return window.indexedDB ? new Promise<IndexedDBStorage>((resolve, reject) => {\n            const openRequest = window.indexedDB.open(IndexedDBStorage.databaseName, IndexedDBStorage.databaseVersion)\n            openRequest.onerror = _ => reject('Unable to open indexedDB')\n            openRequest.onsuccess = (event: any) => resolve(new IndexedDBStorage(event.target.result, logger))\n            openRequest.onupgradeneeded = (event: any) => {\n                const db = event.target.result\n                if (!db.objectStoreNames.contains(IndexedDBStorage.dbProjects)) {\n                    db.createObjectStore(IndexedDBStorage.dbProjects, {keyPath: 'id'})\n                }\n            }\n        }) : Promise.reject('indexedDB not available')\n    }\n\n    public kind: StorageKind = 'indexedDb'\n\n    constructor(private db: IDBDatabase, private logger: Logger) {\n    }\n\n    loadProject = (id: ProjectId): Promise<ProjectJson> => {\n        this.logger.debug(`indexedDb.loadProject(${id})`)\n        return this.openStore('readonly')\n            .then(store => this.getProject(store, id))\n            .then(p => p ? p : Promise.reject(`Not found`))\n    }\n    createProject = (id: ProjectId, p: ProjectJson): Promise<ProjectJson> => {\n        this.logger.debug(`indexedDb.createProject(${id})`, p)\n        return this.openStore('readwrite').then(store => {\n            return this.getProject(store, id).then(project => {\n                if (project) {\n                    return Promise.reject(`Project ${id} already exists in ${this.kind}`)\n                } else {\n                    return reqToPromise(store.add({...Zod.validate(p, ProjectJson, 'ProjectJson'), id})).then(_ => p)\n                }\n            })\n        })\n    }\n    updateProject = (id: ProjectId, p: ProjectJson): Promise<ProjectJson> => {\n        this.logger.debug(`indexedDb.updateProject(${id})`, p)\n        return this.openStore('readwrite').then(store => {\n            return this.getProject(store, id).then(project => {\n                if (project) {\n                    return reqToPromise(store.put({...Zod.validate(p, ProjectJson, 'ProjectJson'), id})).then(_ => p)\n                } else {\n                    return Promise.reject(`Project ${id} doesn't exists in ${this.kind}`)\n                }\n            })\n        })\n    }\n    deleteProject = (id: ProjectId): Promise<void> => {\n        this.logger.debug(`indexedDb.deleteProject(${id})`)\n        return this.openStore('readwrite').then(store => reqToPromise(store.delete(id)))\n    }\n\n    private openStore(mode: IDBTransactionMode): Promise<IDBObjectStore> {\n        return new Promise<IDBObjectStore>(resolve => resolve(this.db.transaction(IndexedDBStorage.dbProjects, mode).objectStore(IndexedDBStorage.dbProjects)))\n    }\n\n    private getProject(store: IDBObjectStore, id: ProjectId): Promise<ProjectJson | undefined> {\n        return new Promise<ProjectJson | undefined>((resolve, reject) => {\n            store.get(id).onsuccess = (event: any) => {\n                try {\n                    resolve(Zod.validate(removeId(event.target.result), ProjectJson.optional(), 'ProjectJson?'))\n                } catch (e) {\n                    reject(e)\n                }\n            }\n            (store as any).onerror = (err: any) => reject(`Unable to load project: ${err}`)\n        })\n    }\n}\n\nfunction removeId(value: any & {id: any}): any {\n    if (typeof value === 'object' && value !== null) {\n        const {id, ...rest} = value\n        return rest\n    } else {\n        return value\n    }\n}\n\nfunction reqToPromise<T>(req: IDBRequest<T>): Promise<T> {\n    return new Promise<T>((resolve, reject) => {\n        req.onerror = _ => reject(req.error)\n        req.onsuccess = _ => resolve(req.result)\n    })\n}\n", "import {formatError} from \"./error\";\n\nexport function parse(value: string): any {\n    try {\n        return JSON.parse(value)\n    } catch (e) {\n        const v = value?.length > 20 ? value.slice(0, 20) + \"...\" : value\n        throw `${JSON.stringify(v)} is not a valid JSON (${formatError(e)})`\n    }\n}\n", "import {ProjectId, ProjectJson} from \"../../types/project\";\nimport {StorageApi, StorageKind} from \"./api\";\nimport {Logger} from \"../logger\";\nimport {formatError} from \"../../utils/error\";\nimport * as Zod from \"../../utils/zod\";\nimport * as Json from \"../../utils/json\";\n\nexport class LocalStorageStorage implements StorageApi {\n    static init(logger: Logger): Promise<LocalStorageStorage> {\n        return window.localStorage ?\n            Promise.resolve(new LocalStorageStorage(logger)) :\n            Promise.reject('localStorage not available')\n    }\n\n    public kind: StorageKind = 'localStorage'\n    private prefix = 'project-'\n\n    constructor(private logger: Logger) {\n    }\n\n    loadProject = (id: ProjectId): Promise<ProjectJson> => {\n        this.logger.debug(`localStorage.loadProject(${id})`)\n        return Promise.resolve(this.getProject(this.idToKey(id))).then(p => p ? p : Promise.reject(`Not found`))\n    }\n    createProject = (id: ProjectId, p: ProjectJson): Promise<ProjectJson> => {\n        this.logger.debug(`localStorage.createProject(${id})`, p)\n        const key = this.idToKey(id)\n        if (window.localStorage.getItem(key) === null) {\n            return this.setProject(key, p)\n        } else {\n            return Promise.reject(`Project ${id} already exists in ${this.kind}`)\n        }\n    }\n    updateProject = (id: ProjectId, p: ProjectJson): Promise<ProjectJson> => {\n        this.logger.debug(`localStorage.updateProject(${id})`, p)\n        const key = this.idToKey(id)\n        if (window.localStorage.getItem(key) === null) {\n            return Promise.reject(`Project ${id} doesn't exists in ${this.kind}`)\n        } else {\n            return this.setProject(key, p)\n        }\n    }\n    deleteProject = (id: ProjectId): Promise<void> => {\n        this.logger.debug(`localStorage.deleteProject(${id})`)\n        window.localStorage.removeItem(this.idToKey(id))\n        return Promise.resolve()\n    }\n\n    private idToKey = (id: ProjectId): string => this.prefix + id\n    private getProject = (key: string): Promise<ProjectJson> => {\n        const value = window.localStorage.getItem(key)\n        if (value === null) {\n            return Promise.reject(`Nothing in localStorage ${JSON.stringify(key)}`)\n        }\n        try {\n            return Promise.resolve(Zod.validate(Json.parse(value), ProjectJson, 'ProjectJson'))\n        } catch (e) {\n            return Promise.reject(`Invalid JSON in localStorage ${JSON.stringify(key)}: ${formatError(e)}`)\n        }\n    }\n    private setProject = (key: string, p: ProjectJson): Promise<ProjectJson> => {\n        try {\n            window.localStorage.setItem(key, Zod.stringify(p, ProjectJson, 'ProjectJson'))\n            return Promise.resolve(p)\n        } catch (e) {\n            return Promise.reject(e)\n        }\n    }\n}\n", "import {ProjectId, ProjectJson} from \"../../types/project\";\nimport {StorageApi, StorageKind} from \"./api\";\nimport {Logger} from \"../logger\";\nimport * as Zod from \"../../utils/zod\";\n\nexport class InMemoryStorage implements StorageApi {\n    public kind: StorageKind = 'inMemory'\n\n    constructor(private logger: Logger, private projects: { [id: string]: ProjectJson } = {}) {\n    }\n\n    loadProject = (id: ProjectId): Promise<ProjectJson> => {\n        this.logger.debug(`inMemory.loadProject(${id})`)\n        return this.projects[id] ? Promise.resolve(Zod.validate(this.projects[id], ProjectJson, 'ProjectJson')) : Promise.reject(`Not found`)\n    }\n    createProject = (id: ProjectId, p: ProjectJson): Promise<ProjectJson> => {\n        this.logger.debug(`inMemory.createProject(${id})`, p)\n        if(this.projects[id]) {\n            return Promise.reject(`Project ${id} already exists in ${this.kind}`)\n        } else {\n            this.projects[id] = Zod.validate(p, ProjectJson, 'ProjectJson')\n            return Promise.resolve(p)\n        }\n    }\n    updateProject = (id: ProjectId, p: ProjectJson): Promise<ProjectJson> => {\n        this.logger.debug(`inMemory.updateProject(${id})`, p)\n        if(this.projects[id]) {\n            this.projects[id] = Zod.validate(p, ProjectJson, 'ProjectJson')\n            return Promise.resolve(p)\n        } else {\n            return Promise.reject(`Project ${id} doesn't exists in ${this.kind}`)\n        }\n    }\n    deleteProject = (id: ProjectId): Promise<void> => {\n        this.logger.debug(`inMemory.deleteProject(${id})`)\n        delete this.projects[id]\n        return Promise.resolve()\n    }\n}\n", "import {AnyError} from \"./error\";\n\n// similar to `Promise.all` but sequential instead of parallel, \"easy\" rate limiting ^^\nexport function sequence<T, U>(arr: T[], perform: (t: T) => Promise<U>): Promise<U[]> {\n    return arr.reduce((acc, t) => {\n        return acc.then(res => perform(t).then(u => res.concat([u])))\n    }, Promise.resolve([] as U[]))\n}\n\n// similar to `sequence` but do not fail and accumulate errors\nexport function sequenceSafe<T, U>(arr: T[], perform: (t: T) => Promise<U>): Promise<[[T, AnyError][], U[]]> {\n    return arr.reduce((acc, t) => {\n        return acc.then(([errs, res]) => perform(t)\n            .then(u => [errs, res.concat([u])] as [[T, AnyError][], U[]])\n            .catch(err => [errs.concat([[t, err]]), res])\n        )\n    }, Promise.resolve([[], []] as [[T, AnyError][], U[]]))\n}\n\n// similar to `Promise.all` but collect only successful results and do not fail, run in parallel\nexport function successes<T>(arr: Promise<T>[]): Promise<T[]> {\n    return arr.reduce((acc, promise) => {\n        return acc.then(res => promise.then(p => res.concat([p])).catch(_ => res))\n    }, Promise.resolve([] as T[]))\n}\n", "import {IndexedDBStorage} from \"./storage/indexeddb\";\nimport {LocalStorageStorage} from \"./storage/localstorage\";\nimport {InMemoryStorage} from \"./storage/inmemory\";\nimport {StorageKind} from \"./storage/api\";\nimport {Logger} from \"./logger\";\nimport {ProjectId, ProjectJson} from \"../types/project\";\nimport {successes} from \"../utils/promise\";\n\nexport class Storage {\n    public kind: StorageKind = 'manager'\n    private indexedDb: Promise<IndexedDBStorage>\n    private localStorage: Promise<LocalStorageStorage>\n    private inMemory: InMemoryStorage\n\n    constructor(private logger: Logger) {\n        this.indexedDb = IndexedDBStorage.init(logger.disableDebug())\n        this.localStorage = LocalStorageStorage.init(logger.disableDebug())\n        this.inMemory = new InMemoryStorage(logger.disableDebug())\n    }\n\n    getProject = (id: ProjectId): Promise<ProjectJson> => {\n        this.logger.debug(`storage.getProject(${id})`)\n        return this.indexedDb.then(s => s.loadProject(id))\n            .catch(e => e === 'Not found' ? this.localStorage.then(s => s.loadProject(id)) : Promise.reject(e))\n            .catch(e => e === 'Not found' ? this.inMemory.loadProject(id) : Promise.reject(e))\n            .catch(e => Promise.reject(e === 'Not found' ? `Not found project ${id}` : e))\n    }\n\n    createProject = (id: ProjectId, p: ProjectJson): Promise<void> => {\n        this.logger.debug(`storage.createProject(${id})`, p)\n        return this.indexedDb.catch(_ => this.localStorage).catch(_ => this.inMemory)\n            .then(s => s.createProject(id, p))\n            .then(_ => undefined)\n    }\n\n    updateProject = (id: ProjectId, p: ProjectJson): Promise<void> => {\n        this.logger.debug(`storage.updateProject(${id})`, p)\n        return this.indexedDb.catch(_ => this.localStorage).catch(_ => this.inMemory)\n            .then(s => s.updateProject(id, p))\n            .then(_ => undefined)\n    }\n\n    deleteProject = (id: ProjectId): Promise<void> => {\n        this.logger.debug(`storage.deleteProject(${id})`)\n        return successes([\n            this.indexedDb.then(s => s.deleteProject(id)),\n            this.localStorage.then(s => s.deleteProject(id)),\n            this.inMemory.deleteProject(id)\n        ]).then(_ => undefined)\n    }\n}\n", "import {ZodType} from \"zod/lib/types\";\nimport * as Zod from \"./zod\";\nimport * as Json from \"./json\";\n\nexport const getJson = <Response>(url: string, zod: ZodType<Response>, label: string): Promise<Response> => fetch(url, {credentials: 'include'}).then(buildJsonResponse(zod, label))\nexport const postJson = <Body, Response>(url: string, body: Body, zod: ZodType<Response>, label: string): Promise<Response> => fetchJson('POST', url, body, zod, label)\nexport const postNoContent = <Body>(url: string, body: Body): Promise<void> => fetchNoContent('POST', url, body)\nexport const postMultipart = <Response>(url: string, body: FormData, zod: ZodType<Response>, label: string): Promise<Response> => fetchMultipart('POST', url, body, zod, label)\nexport const putJson = <Body, Response>(url: string, body: Body, zod: ZodType<Response>, label: string): Promise<Response> => fetchJson('PUT', url, body, zod, label)\nexport const putMultipart = <Response>(url: string, body: FormData, zod: ZodType<Response>, label: string): Promise<Response> => fetchMultipart('PUT', url, body, zod, label)\nexport const deleteNoContent = (url: string): Promise<void> => fetch(url, {method: 'DELETE', credentials: 'include'}).then(buildNoContentResponse)\n\n\ntype Method = 'GET' | 'POST' | 'PUT' | 'DELETE'\n\nfunction fetchJson<Body, Response>(method: Method, url: string, body: Body, zod: ZodType<Response>, label: string): Promise<Response> {\n    return fetch(url, {\n        method,\n        credentials: 'include',\n        headers: {'Accept': 'application/json', 'Content-Type': 'application/json'},\n        body: JSON.stringify(body)\n    }).then(buildJsonResponse(zod, label))\n}\n\nfunction fetchNoContent<Body>(method: Method, url: string, body: Body): Promise<void> {\n    return fetch(url, {\n        method,\n        credentials: 'include',\n        headers: {'Accept': 'application/json', 'Content-Type': 'application/json'},\n        body: JSON.stringify(body)\n    }).then(buildNoContentResponse)\n}\n\nfunction fetchMultipart<Response>(method: Method, url: string, body: FormData, zod: ZodType<Response>, label: string): Promise<Response> {\n    return fetch(url, {\n        method,\n        credentials: 'include',\n        body: body\n    }).then(buildJsonResponse(zod, label))\n}\n\nconst buildJsonResponse = <T>(zod: ZodType<T>, label: string) => (res: Response): Promise<T> =>\n    res.ok ? res.text().then(v => Zod.validate(Json.parse(v), zod, label)) : res.text().then(err => Promise.reject(Json.parse(err)))\nconst buildNoContentResponse = (res: Response): Promise<void> =>\n    res.ok ? Promise.resolve() : res.text().then(err => Promise.reject(Json.parse(err)))\n", "import {Logger} from \"./logger\";\nimport {\n    buildProjectJson,\n    ColumnRef,\n    computeStats,\n    isLocal,\n    isRemote,\n    parseTableId,\n    Project,\n    ProjectId,\n    ProjectInfo,\n    ProjectInfoLocal,\n    ProjectInfoRemote,\n    ProjectInfoWithContent,\n    ProjectJson,\n    ProjectName,\n    ProjectSlug,\n    ProjectStats,\n    ProjectStorage,\n    ProjectTokenId,\n    ProjectVersion,\n    ProjectVisibility,\n    TableId\n} from \"../types/project\";\nimport {Organization, OrganizationId, OrganizationSlug, Plan} from \"../types/organization\";\nimport {DatabaseUrl, DateTime} from \"../types/basics\";\nimport {Env} from \"../utils/env\";\nimport * as Http from \"../utils/http\";\nimport {z} from \"zod\";\nimport * as Zod from \"../utils/zod\";\nimport * as Json from \"../utils/json\";\nimport * as jiff from \"jiff\";\nimport {HerokuResource} from \"../types/heroku\";\nimport {ColumnStats, TableStats} from \"../types/stats\";\nimport {TrackEvent} from \"../types/tracking\";\n\nexport class Backend {\n    private projects: { [id: ProjectId]: ProjectJson } = {}\n\n    constructor(private env: Env, private logger: Logger) {\n    }\n\n    loginUrl = (currentUrl: string | undefined): string =>\n        currentUrl ? `/login/redirect?url=${encodeURIComponent(currentUrl)}` : '/login'\n\n    getProject = async (o: OrganizationId, p: ProjectId, t: ProjectTokenId | null): Promise<ProjectInfoWithContent> => {\n        this.logger.debug(`backend.getProject(${o}, ${p}, ${t})`)\n        const project = await this.fetchProject(o, p, t)\n        if (project.storage === ProjectStorage.enum.remote) {\n            this.projects[p] = project.content\n        }\n        return project\n    }\n\n    private fetchProject = (o: OrganizationId, p: ProjectId, t: ProjectTokenId | null): Promise<ProjectInfoWithContent> => {\n        const token = t ? `token=${t}&` : ''\n        const url = this.withXhrHost(`/api/v1/organizations/${o}/projects/${p}?${token}expand=organization,organization.plan,content`)\n        return Http.getJson(url, ProjectWithContentResponse, 'ProjectWithContentResponse').then(toProjectInfoWithContent)\n    }\n\n    createProjectLocal = (o: OrganizationId, json: ProjectJson): Promise<ProjectInfoLocal> => {\n        this.logger.debug(`backend.createProjectLocal(${o})`, json)\n        const url = this.withXhrHost(`/api/v1/organizations/${o}/projects?expand=organization,organization.plan`)\n        return Http.postJson(url, toProjectBody(json, ProjectStorage.enum.local), ProjectResponse, 'ProjectResponse').then(toProjectInfo)\n            .then(res => isLocal(res) ? res : Promise.reject('Expecting a local project'))\n    }\n\n    createProjectRemote = async (o: OrganizationId, json: ProjectJson): Promise<ProjectInfoRemote> => {\n        this.logger.debug(`backend.createProjectRemote(${o})`, json)\n        const url = this.withXhrHost(`/api/v1/organizations/${o}/projects?expand=organization,organization.plan`)\n        const formData: FormData = new FormData()\n        Object.entries(toProjectBody(json, ProjectStorage.enum.remote))\n            .filter(([_, value]) => value !== null && value !== undefined)\n            .map(([key, value]) => formData.append(key, typeof value === 'string' ? value : JSON.stringify(value)))\n        formData.append('file', new Blob([encodeContent(json)], {type: 'application/json'}), `${json.name}.json`)\n        const res = await Http.postMultipart(url, formData, ProjectResponse, 'ProjectResponse').then(toProjectInfo)\n        this.projects[res.id] = json\n        return isRemote(res) ? res : Promise.reject('Expecting a remote project')\n    }\n\n    updateProjectLocal = (p: Project): Promise<ProjectInfoLocal> => {\n        this.logger.debug(`backend.updateProjectLocal(${p.organization?.id}, ${p.id})`, p)\n        if (!p.organization) return Promise.reject('Expecting an organization to update project')\n        if (p.storage !== ProjectStorage.enum.local) return Promise.reject('Expecting a local project')\n        const url = this.withXhrHost(`/api/v1/organizations/${p.organization.id}/projects/${p.id}?expand=organization,organization.plan`)\n        const json = buildProjectJson(p)\n        return Http.putJson(url, toProjectBody(json, ProjectStorage.enum.local), ProjectResponse, 'ProjectResponse').then(toProjectInfo)\n            .then(res => isLocal(res) ? res : Promise.reject('Expecting a local project'))\n    }\n\n    updateProjectRemote = async (p: Project): Promise<ProjectInfoRemote> => {\n        this.logger.debug(`backend.updateProjectRemote(${p.organization?.id}, ${p.id})`, p)\n        if (!p.organization) return Promise.reject('Expecting an organization to update project')\n        if (p.storage !== ProjectStorage.enum.remote) return Promise.reject('Expecting a remote project')\n\n        const initial = this.projects[p.id] // where the user started\n        const current = await this.fetchProject(p.organization.id, p.id, null) // server version\n            .then(p => isRemote(p) ? p : Promise.reject('Expecting a remote project'))\n        let json = buildProjectJson(p)\n        if (current.updatedAt !== p.updatedAt) {\n            try {\n                // FIXME: fail most of the time because of current_layout conflict :(\n                const patch = jiff.diff(initial, json) // compute changes made by user\n                json = jiff.patch(patch, current.content) // apply changes made by user\n            } catch (e) {\n                console.warn('patch failed', e)\n                return Promise.reject('already updated by someone else, please reload')\n            }\n        }\n\n        if (!p.organization) return Promise.reject('Expecting an organization to update project')\n        const url = this.withXhrHost(`/api/v1/organizations/${p.organization.id}/projects/${p.id}?expand=organization,organization.plan`)\n        const formData: FormData = new FormData()\n        Object.entries(toProjectBody(json, ProjectStorage.enum.remote))\n            .filter(([_, value]) => value !== null && value !== undefined)\n            .map(([key, value]) => formData.append(key, typeof value === 'string' ? value : JSON.stringify(value)))\n        formData.append('file', new Blob([encodeContent(json)], {type: 'application/json'}), `${p.organization.id}-${p.name}.json`)\n        const res = await Http.putMultipart(url, formData, ProjectResponse, 'ProjectResponse').then(toProjectInfo)\n        this.projects[p.id] = json\n        return isRemote(res) ? res : Promise.reject('Expecting a remote project')\n    }\n\n    deleteProject = async (o: OrganizationId, p: ProjectId): Promise<void> => {\n        this.logger.debug(`backend.deleteProject(${o}, ${p})`)\n        const url = this.withXhrHost(`/api/v1/organizations/${o}/projects/${p}`)\n        await Http.deleteNoContent(url)\n        delete this.projects[p]\n    }\n\n    getTableStats = async (database: DatabaseUrl, id: TableId): Promise<TableStats> => {\n        this.logger.debug(`backend.getTableStats(${database}, ${id})`)\n        const {schema, table} = parseTableId(id)\n        const url = this.withXhrHost(`/api/v1/analyzer/stats`)\n        return Http.postJson(url, {url: database, schema, table}, TableStats, 'TableStats')\n    }\n\n    getColumnStats = async (database: DatabaseUrl, column: ColumnRef): Promise<ColumnStats> => {\n        this.logger.debug(`backend.getColumnStats(${database}, ${JSON.stringify(column)})`)\n        const {schema, table} = parseTableId(column.table)\n        const url = this.withXhrHost(`/api/v1/analyzer/stats`)\n        return Http.postJson(url, {url: database, schema, table, column: column.column}, ColumnStats, 'ColumnStats')\n    }\n\n    trackEvent = (event: TrackEvent): void => {\n        this.logger.debug(`backend.trackEvent(${JSON.stringify(event)})`)\n        const url = this.withXhrHost(`/api/v1/events`)\n        Http.postNoContent(url, event).then(_ => undefined)\n    }\n\n    private withXhrHost(path: string): string {\n        if (this.env == Env.enum.dev) {\n            return `${path}`\n        } else if (this.env == Env.enum.staging) {\n            return `https://azimutt.dev${path}`\n        } else {\n            return `https://azimutt.app${path}`\n        }\n    }\n}\n\nexport interface ProjectStatsResponse {\n    nb_sources: number\n    nb_tables: number\n    nb_columns: number\n    nb_relations: number\n    nb_types: number\n    nb_comments: number\n    nb_layouts: number\n    nb_notes: number\n    nb_memos: number\n}\n\nexport const ProjectStatsResponse = z.object({\n    nb_sources: z.number(),\n    nb_tables: z.number(),\n    nb_columns: z.number(),\n    nb_relations: z.number(),\n    nb_types: z.number(),\n    nb_comments: z.number(),\n    nb_layouts: z.number(),\n    nb_notes: z.number(),\n    nb_memos: z.number()\n}).strict()\n\ninterface ProjectBody extends ProjectStatsResponse {\n    name: ProjectName\n    description: string | undefined\n    storage_kind: ProjectStorage\n    encoding_version: number\n}\n\nexport interface OrganizationResponse {\n    id: OrganizationId\n    slug: OrganizationSlug\n    name: string\n    plan: Plan\n    logo: string\n    location: string | null\n    description: string | null\n    heroku?: HerokuResource\n}\n\nexport const OrganizationResponse = z.object({\n    id: OrganizationId,\n    slug: OrganizationSlug,\n    name: z.string(),\n    plan: Plan,\n    logo: z.string(),\n    location: z.string().nullable(),\n    description: z.string().nullable(),\n    heroku: HerokuResource.optional(),\n}).strict()\n\ninterface ProjectResponse extends ProjectStatsResponse {\n    organization: OrganizationResponse\n    id: ProjectId\n    slug: ProjectSlug\n    name: ProjectName\n    description: string | null\n    encoding_version: ProjectVersion\n    storage_kind: ProjectStorage\n    visibility: ProjectVisibility\n    created_at: DateTime\n    updated_at: DateTime\n    archived_at: DateTime | null\n}\n\nexport const ProjectResponse = ProjectStatsResponse.extend({\n    organization: OrganizationResponse,\n    id: ProjectId,\n    slug: ProjectSlug,\n    name: ProjectName,\n    description: z.string().nullable(),\n    encoding_version: ProjectVersion,\n    storage_kind: ProjectStorage,\n    visibility: ProjectVisibility,\n    created_at: DateTime,\n    updated_at: DateTime,\n    archived_at: DateTime.nullable()\n}).strict()\n\ninterface ProjectWithContentResponse extends ProjectResponse {\n    content?: string\n}\n\nexport const ProjectWithContentResponse = ProjectResponse.extend({\n    content: z.string().optional()\n}).strict()\n\nfunction toStats(s: ProjectStatsResponse): ProjectStats {\n    return {\n        nbSources: s.nb_sources,\n        nbTables: s.nb_tables,\n        nbColumns: s.nb_columns,\n        nbRelations: s.nb_relations,\n        nbTypes: s.nb_types,\n        nbComments: s.nb_comments,\n        nbLayouts: s.nb_layouts,\n        nbNotes: s.nb_notes,\n        nbMemos: s.nb_memos\n    }\n}\n\nfunction toStatsResponse(s: ProjectStats): ProjectStatsResponse {\n    return {\n        nb_sources: s.nbSources,\n        nb_tables: s.nbTables,\n        nb_columns: s.nbColumns,\n        nb_relations: s.nbRelations,\n        nb_types: s.nbTypes,\n        nb_comments: s.nbComments,\n        nb_layouts: s.nbLayouts,\n        nb_notes: s.nbNotes,\n        nb_memos: s.nbMemos\n    }\n}\n\nfunction toProjectBody(p: ProjectJson, storage: ProjectStorage): ProjectBody {\n    return {\n        name: p.name,\n        description: undefined,\n        storage_kind: storage,\n        encoding_version: p.version,\n        ...toStatsResponse(computeStats(p))\n    }\n}\n\nfunction toOrganization(o: OrganizationResponse): Organization {\n    return {\n        id: o.id,\n        slug: o.slug,\n        name: o.name,\n        plan: o.plan,\n        logo: o.logo,\n        location: o.location || undefined,\n        description: o.description || undefined,\n        heroku: o.heroku,\n    }\n}\n\nfunction toProjectInfo(p: ProjectResponse): ProjectInfo {\n    return {\n        organization: toOrganization(p.organization),\n        id: p.id,\n        slug: p.slug,\n        name: p.name,\n        description: p.description || undefined,\n        encodingVersion: p.encoding_version,\n        storage: p.storage_kind,\n        visibility: p.visibility,\n        createdAt: new Date(p.created_at).getTime(),\n        updatedAt: new Date(p.updated_at).getTime(),\n        ...toStats(p)\n    }\n}\n\nfunction toProjectInfoWithContent(p: ProjectWithContentResponse): ProjectInfoWithContent {\n    const res = toProjectInfo(p)\n    return res.storage === ProjectStorage.enum.remote ? {...res, content: decodeContent(p.content)} : res\n}\n\nfunction encodeContent(p: ProjectJson): string {\n    return Zod.stringify(p, ProjectJson, 'ProjectJson')\n}\n\nfunction decodeContent(content?: string): ProjectJson {\n    if (typeof content === 'string') {\n        return Zod.validate(Json.parse(content), ProjectJson, 'ProjectJson')\n    } else {\n        throw 'Missing content in backend response!'\n    }\n}\n", "export const relative = (l: Location): string => l.pathname + l.search + l.hash\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n\nimport type { PolymorphicEvent, Primitive } from '@sentry/types';\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nconst objectToString = Object.prototype.toString;\n\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isError(wat: unknown): wat is Error {\n  switch (objectToString.call(wat)) {\n    case '[object Error]':\n    case '[object Exception]':\n    case '[object DOMException]':\n      return true;\n    default:\n      return isInstanceOf(wat, Error);\n  }\n}\n/**\n * Checks whether given value is an instance of the given built-in class.\n *\n * @param wat The value to be checked\n * @param className\n * @returns A boolean representing the result.\n */\nfunction isBuiltin(wat: unknown, className: string): boolean {\n  return objectToString.call(wat) === `[object ${className}]`;\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isErrorEvent(wat: unknown): boolean {\n  return isBuiltin(wat, 'ErrorEvent');\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMError(wat: unknown): boolean {\n  return isBuiltin(wat, 'DOMError');\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMException(wat: unknown): boolean {\n  return isBuiltin(wat, 'DOMException');\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isString(wat: unknown): wat is string {\n  return isBuiltin(wat, 'String');\n}\n\n/**\n * Checks whether given value is a primitive (undefined, null, number, boolean, string, bigint, symbol)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPrimitive(wat: unknown): wat is Primitive {\n  return wat === null || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPlainObject(wat: unknown): wat is Record<string, unknown> {\n  return isBuiltin(wat, 'Object');\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isEvent(wat: unknown): wat is PolymorphicEvent {\n  return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isElement(wat: unknown): boolean {\n  return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isRegExp(wat: unknown): wat is RegExp {\n  return isBuiltin(wat, 'RegExp');\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nexport function isThenable(wat: any): wat is PromiseLike<any> {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return Boolean(wat && wat.then && typeof wat.then === 'function');\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isSyntheticEvent(wat: unknown): boolean {\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n\n/**\n * Checks whether given value is NaN\n * {@link isNaN}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isNaN(wat: unknown): boolean {\n  return typeof wat === 'number' && wat !== wat;\n}\n\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nexport function isInstanceOf(wat: any, base: any): boolean {\n  try {\n    return wat instanceof base;\n  } catch (_e) {\n    return false;\n  }\n}\n", "/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n *\n * Note: This file was originally called `global.ts`, but was changed to unblock users which might be doing\n * string replaces with bundlers like Vite for `global` (would break imports that rely on importing from utils/src/global).\n *\n * Why worldwide?\n *\n * Why not?\n */\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport type { Integration } from '@sentry/types';\n\nimport type { SdkSource } from './env';\n\n/** Internal global with common properties and Sentry extensions  */\nexport interface InternalGlobal {\n  navigator?: { userAgent?: string };\n  console: Console;\n  Sentry?: {\n    Integrations?: Integration[];\n  };\n  SENTRY_ENVIRONMENT?: string;\n  SENTRY_DSN?: string;\n  SENTRY_RELEASE?: {\n    id?: string;\n  };\n  SENTRY_SDK_SOURCE?: SdkSource;\n  /**\n   * Debug IDs are indirectly injected by Sentry CLI or bundler plugins to directly reference a particular source map\n   * for resolving of a source file. The injected code will place an entry into the record for each loaded bundle/JS\n   * file.\n   */\n  _sentryDebugIds?: Record<string, string>;\n  __SENTRY__: {\n    globalEventProcessors: any;\n    hub: any;\n    logger: any;\n    extensions?: {\n      /** Extension methods for the hub, which are bound to the current Hub instance */\n      // eslint-disable-next-line @typescript-eslint/ban-types\n      [key: string]: Function;\n    };\n  };\n}\n\n// The code below for 'isGlobalObj' and 'GLOBAL_OBJ' was copied from core-js before modification\n// https://github.com/zloirock/core-js/blob/1b944df55282cdc99c90db5f49eb0b6eda2cc0a3/packages/core-js/internals/global.js\n// core-js has the following licence:\n//\n// Copyright (c) 2014-2022 Denis Pushkarev\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/** Returns 'obj' if it's the global object, otherwise returns undefined */\nfunction isGlobalObj(obj: { Math?: Math }): any | undefined {\n  return obj && obj.Math == Math ? obj : undefined;\n}\n\n/** Get's the global object for the current JavaScript runtime */\nexport const GLOBAL_OBJ: InternalGlobal =\n  (typeof globalThis == 'object' && isGlobalObj(globalThis)) ||\n  // eslint-disable-next-line no-restricted-globals\n  (typeof window == 'object' && isGlobalObj(window)) ||\n  (typeof self == 'object' && isGlobalObj(self)) ||\n  (typeof global == 'object' && isGlobalObj(global)) ||\n  (function (this: any) {\n    return this;\n  })() ||\n  {};\n\n/**\n * @deprecated Use GLOBAL_OBJ instead or WINDOW from @sentry/browser. This will be removed in v8\n */\nexport function getGlobalObject<T>(): T & InternalGlobal {\n  return GLOBAL_OBJ as T & InternalGlobal;\n}\n\n/**\n * Returns a global singleton contained in the global `__SENTRY__` object.\n *\n * If the singleton doesn't already exist in `__SENTRY__`, it will be created using the given factory\n * function and added to the `__SENTRY__` object.\n *\n * @param name name of the global singleton on __SENTRY__\n * @param creator creator Factory function to create the singleton if it doesn't already exist on `__SENTRY__`\n * @param obj (Optional) The global object on which to look for `__SENTRY__`, if not `GLOBAL_OBJ`'s return value\n * @returns the singleton\n */\nexport function getGlobalSingleton<T>(name: keyof InternalGlobal['__SENTRY__'], creator: () => T, obj?: unknown): T {\n  const gbl = (obj || GLOBAL_OBJ) as InternalGlobal;\n  const __SENTRY__ = (gbl.__SENTRY__ = gbl.__SENTRY__ || {});\n  const singleton = __SENTRY__[name] || (__SENTRY__[name] = creator());\n  return singleton;\n}\n", "import { isString } from './is';\nimport { getGlobalObject } from './worldwide';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject<Window>();\n\nconst DEFAULT_MAX_STRING_LENGTH = 80;\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nexport function htmlTreeAsString(\n  elem: unknown,\n  options: string[] | { keyAttrs?: string[]; maxStringLength?: number } = {},\n): string {\n  type SimpleNode = {\n    parentNode: SimpleNode;\n  } | null;\n\n  // try/catch both:\n  // - accessing event.target (see getsentry/raven-js#838, #768)\n  // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n  // - can throw an exception in some circumstances.\n  try {\n    let currentElem = elem as SimpleNode;\n    const MAX_TRAVERSE_HEIGHT = 5;\n    const out = [];\n    let height = 0;\n    let len = 0;\n    const separator = ' > ';\n    const sepLength = separator.length;\n    let nextStr;\n    const keyAttrs = Array.isArray(options) ? options : options.keyAttrs;\n    const maxStringLength = (!Array.isArray(options) && options.maxStringLength) || DEFAULT_MAX_STRING_LENGTH;\n\n    while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n      nextStr = _htmlElementAsString(currentElem, keyAttrs);\n      // bail out if\n      // - nextStr is the 'html' element\n      // - the length of the string that would be created exceeds maxStringLength\n      //   (ignore this limit if we are on the first iteration)\n      if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= maxStringLength)) {\n        break;\n      }\n\n      out.push(nextStr);\n\n      len += nextStr.length;\n      currentElem = currentElem.parentNode;\n    }\n\n    return out.reverse().join(separator);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(el: unknown, keyAttrs?: string[]): string {\n  const elem = el as {\n    tagName?: string;\n    id?: string;\n    className?: string;\n    getAttribute(key: string): string;\n  };\n\n  const out = [];\n  let className;\n  let classes;\n  let key;\n  let attr;\n  let i;\n\n  if (!elem || !elem.tagName) {\n    return '';\n  }\n\n  out.push(elem.tagName.toLowerCase());\n\n  // Pairs of attribute keys defined in `serializeAttribute` and their values on element.\n  const keyAttrPairs =\n    keyAttrs && keyAttrs.length\n      ? keyAttrs.filter(keyAttr => elem.getAttribute(keyAttr)).map(keyAttr => [keyAttr, elem.getAttribute(keyAttr)])\n      : null;\n\n  if (keyAttrPairs && keyAttrPairs.length) {\n    keyAttrPairs.forEach(keyAttrPair => {\n      out.push(`[${keyAttrPair[0]}=\"${keyAttrPair[1]}\"]`);\n    });\n  } else {\n    if (elem.id) {\n      out.push(`#${elem.id}`);\n    }\n\n    // eslint-disable-next-line prefer-const\n    className = elem.className;\n    if (className && isString(className)) {\n      classes = className.split(/\\s+/);\n      for (i = 0; i < classes.length; i++) {\n        out.push(`.${classes[i]}`);\n      }\n    }\n  }\n  const allowedAttrs = ['aria-label', 'type', 'name', 'title', 'alt'];\n  for (i = 0; i < allowedAttrs.length; i++) {\n    key = allowedAttrs[i];\n    attr = elem.getAttribute(key);\n    if (attr) {\n      out.push(`[${key}=\"${attr}\"]`);\n    }\n  }\n  return out.join('');\n}\n\n/**\n * A safe form of location.href\n */\nexport function getLocationHref(): string {\n  try {\n    return WINDOW.document.location.href;\n  } catch (oO) {\n    return '';\n  }\n}\n\n/**\n * Gets a DOM element by using document.querySelector.\n *\n * This wrapper will first check for the existance of the function before\n * actually calling it so that we don't have to take care of this check,\n * every time we want to access the DOM.\n *\n * Reason: DOM/querySelector is not available in all environments.\n *\n * We have to cast to any because utils can be consumed by a variety of environments,\n * and we don't want to break TS users. If you know what element will be selected by\n * `document.querySelector`, specify it as part of the generic call. For example,\n * `const element = getDomElement<Element>('selector');`\n *\n * @param selector the selector string passed on to document.querySelector\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getDomElement<E = any>(selector: string): E | null {\n  if (WINDOW.document && WINDOW.document.querySelector) {\n    return WINDOW.document.querySelector(selector) as unknown as E;\n  }\n  return null;\n}\n", "import type { ConsoleLevel } from './logger';\n\n/** An error emitted by Sentry SDKs and related utilities. */\nexport class SentryError extends Error {\n  /** Display name of this error instance. */\n  public name: string;\n\n  public logLevel: ConsoleLevel;\n\n  public constructor(public message: string, logLevel: ConsoleLevel = 'warn') {\n    super(message);\n\n    this.name = new.target.prototype.constructor.name;\n    // This sets the prototype to be `Error`, not `SentryError`. It's unclear why we do this, but commenting this line\n    // out causes various (seemingly totally unrelated) playwright tests consistently time out. FYI, this makes\n    // instances of `SentryError` fail `obj instanceof SentryError` checks.\n    Object.setPrototypeOf(this, new.target.prototype);\n    this.logLevel = logLevel;\n  }\n}\n", "import type { DsnComponents, DsnLike, DsnProtocol } from '@sentry/types';\n\nimport { SentryError } from './error';\n\n/** Regular expression used to parse a Dsn. */\nconst DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+)?)?@)([\\w.-]+)(?::(\\d+))?\\/(.+)/;\n\nfunction isValidProtocol(protocol?: string): protocol is DsnProtocol {\n  return protocol === 'http' || protocol === 'https';\n}\n\n/**\n * Renders the string representation of this Dsn.\n *\n * By default, this will render the public representation without the password\n * component. To get the deprecated private representation, set `withPassword`\n * to true.\n *\n * @param withPassword When set to true, the password will be included.\n */\nexport function dsnToString(dsn: DsnComponents, withPassword: boolean = false): string {\n  const { host, path, pass, port, projectId, protocol, publicKey } = dsn;\n  return (\n    `${protocol}://${publicKey}${withPassword && pass ? `:${pass}` : ''}` +\n    `@${host}${port ? `:${port}` : ''}/${path ? `${path}/` : path}${projectId}`\n  );\n}\n\n/**\n * Parses a Dsn from a given string.\n *\n * @param str A Dsn as string\n * @returns Dsn as DsnComponents\n */\nexport function dsnFromString(str: string): DsnComponents {\n  const match = DSN_REGEX.exec(str);\n\n  if (!match) {\n    throw new SentryError(`Invalid Sentry Dsn: ${str}`);\n  }\n\n  const [protocol, publicKey, pass = '', host, port = '', lastPath] = match.slice(1);\n  let path = '';\n  let projectId = lastPath;\n\n  const split = projectId.split('/');\n  if (split.length > 1) {\n    path = split.slice(0, -1).join('/');\n    projectId = split.pop() as string;\n  }\n\n  if (projectId) {\n    const projectMatch = projectId.match(/^\\d+/);\n    if (projectMatch) {\n      projectId = projectMatch[0];\n    }\n  }\n\n  return dsnFromComponents({ host, pass, path, projectId, port, protocol: protocol as DsnProtocol, publicKey });\n}\n\nfunction dsnFromComponents(components: DsnComponents): DsnComponents {\n  return {\n    protocol: components.protocol,\n    publicKey: components.publicKey || '',\n    pass: components.pass || '',\n    host: components.host,\n    port: components.port || '',\n    path: components.path || '',\n    projectId: components.projectId,\n  };\n}\n\nfunction validateDsn(dsn: DsnComponents): boolean | void {\n  if (!__DEBUG_BUILD__) {\n    return;\n  }\n\n  const { port, projectId, protocol } = dsn;\n\n  const requiredComponents: ReadonlyArray<keyof DsnComponents> = ['protocol', 'publicKey', 'host', 'projectId'];\n  requiredComponents.forEach(component => {\n    if (!dsn[component]) {\n      throw new SentryError(`Invalid Sentry Dsn: ${component} missing`);\n    }\n  });\n\n  if (!projectId.match(/^\\d+$/)) {\n    throw new SentryError(`Invalid Sentry Dsn: Invalid projectId ${projectId}`);\n  }\n\n  if (!isValidProtocol(protocol)) {\n    throw new SentryError(`Invalid Sentry Dsn: Invalid protocol ${protocol}`);\n  }\n\n  if (port && isNaN(parseInt(port, 10))) {\n    throw new SentryError(`Invalid Sentry Dsn: Invalid port ${port}`);\n  }\n\n  return true;\n}\n\n/** The Sentry Dsn, identifying a Sentry instance and project. */\nexport function makeDsn(from: DsnLike): DsnComponents {\n  const components = typeof from === 'string' ? dsnFromString(from) : dsnFromComponents(from);\n  validateDsn(components);\n  return components;\n}\n", "import type { WrappedFunction } from '@sentry/types';\n\nimport { getGlobalSingleton, GLOBAL_OBJ } from './worldwide';\n\n/** Prefix for logging strings */\nconst PREFIX = 'Sentry Logger ';\n\nexport const CONSOLE_LEVELS = ['debug', 'info', 'warn', 'error', 'log', 'assert', 'trace'] as const;\nexport type ConsoleLevel = typeof CONSOLE_LEVELS[number];\n\ntype LoggerMethod = (...args: unknown[]) => void;\ntype LoggerConsoleMethods = Record<typeof CONSOLE_LEVELS[number], LoggerMethod>;\n\n/** JSDoc */\ninterface Logger extends LoggerConsoleMethods {\n  disable(): void;\n  enable(): void;\n}\n\n/**\n * Temporarily disable sentry console instrumentations.\n *\n * @param callback The function to run against the original `console` messages\n * @returns The results of the callback\n */\nexport function consoleSandbox<T>(callback: () => T): T {\n  if (!('console' in GLOBAL_OBJ)) {\n    return callback();\n  }\n\n  const originalConsole = GLOBAL_OBJ.console as Console & Record<string, unknown>;\n  const wrappedLevels: Partial<LoggerConsoleMethods> = {};\n\n  // Restore all wrapped console methods\n  CONSOLE_LEVELS.forEach(level => {\n    // TODO(v7): Remove this check as it's only needed for Node 6\n    const originalWrappedFunc =\n      originalConsole[level] && (originalConsole[level] as WrappedFunction).__sentry_original__;\n    if (level in originalConsole && originalWrappedFunc) {\n      wrappedLevels[level] = originalConsole[level] as LoggerConsoleMethods[typeof level];\n      originalConsole[level] = originalWrappedFunc as Console[typeof level];\n    }\n  });\n\n  try {\n    return callback();\n  } finally {\n    // Revert restoration to wrapped state\n    Object.keys(wrappedLevels).forEach(level => {\n      originalConsole[level] = wrappedLevels[level as typeof CONSOLE_LEVELS[number]];\n    });\n  }\n}\n\nfunction makeLogger(): Logger {\n  let enabled = false;\n  const logger: Partial<Logger> = {\n    enable: () => {\n      enabled = true;\n    },\n    disable: () => {\n      enabled = false;\n    },\n  };\n\n  if (__DEBUG_BUILD__) {\n    CONSOLE_LEVELS.forEach(name => {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      logger[name] = (...args: any[]) => {\n        if (enabled) {\n          consoleSandbox(() => {\n            GLOBAL_OBJ.console[name](`${PREFIX}[${name}]:`, ...args);\n          });\n        }\n      };\n    });\n  } else {\n    CONSOLE_LEVELS.forEach(name => {\n      logger[name] = () => undefined;\n    });\n  }\n\n  return logger as Logger;\n}\n\n// Ensure we only have a single logger instance, even if multiple versions of @sentry/utils are being used\nlet logger: Logger;\nif (__DEBUG_BUILD__) {\n  logger = getGlobalSingleton('logger', makeLogger);\n} else {\n  logger = makeLogger();\n}\n\nexport { logger };\n", "import { isRegExp, isString } from './is';\n\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string (0 = unlimited)\n * @returns string Encoded\n */\nexport function truncate(str: string, max: number = 0): string {\n  if (typeof str !== 'string' || max === 0) {\n    return str;\n  }\n  return str.length <= max ? str : `${str.slice(0, max)}...`;\n}\n\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nexport function snipLine(line: string, colno: number): string {\n  let newLine = line;\n  const lineLength = newLine.length;\n  if (lineLength <= 150) {\n    return newLine;\n  }\n  if (colno > lineLength) {\n    // eslint-disable-next-line no-param-reassign\n    colno = lineLength;\n  }\n\n  let start = Math.max(colno - 60, 0);\n  if (start < 5) {\n    start = 0;\n  }\n\n  let end = Math.min(start + 140, lineLength);\n  if (end > lineLength - 5) {\n    end = lineLength;\n  }\n  if (end === lineLength) {\n    start = Math.max(end - 140, 0);\n  }\n\n  newLine = newLine.slice(start, end);\n  if (start > 0) {\n    newLine = `'{snip} ${newLine}`;\n  }\n  if (end < lineLength) {\n    newLine += ' {snip}';\n  }\n\n  return newLine;\n}\n\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function safeJoin(input: any[], delimiter?: string): string {\n  if (!Array.isArray(input)) {\n    return '';\n  }\n\n  const output = [];\n  // eslint-disable-next-line @typescript-eslint/prefer-for-of\n  for (let i = 0; i < input.length; i++) {\n    const value = input[i];\n    try {\n      output.push(String(value));\n    } catch (e) {\n      output.push('[value cannot be serialized]');\n    }\n  }\n\n  return output.join(delimiter);\n}\n\n/**\n * Checks if the given value matches a regex or string\n *\n * @param value The string to test\n * @param pattern Either a regex or a string against which `value` will be matched\n * @param requireExactStringMatch If true, `value` must match `pattern` exactly. If false, `value` will match\n * `pattern` if it contains `pattern`. Only applies to string-type patterns.\n */\nexport function isMatchingPattern(\n  value: string,\n  pattern: RegExp | string,\n  requireExactStringMatch: boolean = false,\n): boolean {\n  if (!isString(value)) {\n    return false;\n  }\n\n  if (isRegExp(pattern)) {\n    return pattern.test(value);\n  }\n  if (isString(pattern)) {\n    return requireExactStringMatch ? value === pattern : value.includes(pattern);\n  }\n\n  return false;\n}\n\n/**\n * Test the given string against an array of strings and regexes. By default, string matching is done on a\n * substring-inclusion basis rather than a strict equality basis\n *\n * @param testString The string to test\n * @param patterns The patterns against which to test the string\n * @param requireExactStringMatch If true, `testString` must match one of the given string patterns exactly in order to\n * count. If false, `testString` will match a string pattern if it contains that pattern.\n * @returns\n */\nexport function stringMatchesSomePattern(\n  testString: string,\n  patterns: Array<string | RegExp> = [],\n  requireExactStringMatch: boolean = false,\n): boolean {\n  return patterns.some(pattern => isMatchingPattern(testString, pattern, requireExactStringMatch));\n}\n\n/**\n * Given a string, escape characters which have meaning in the regex grammar, such that the result is safe to feed to\n * `new RegExp()`.\n *\n * Based on https://github.com/sindresorhus/escape-string-regexp. Vendored to a) reduce the size by skipping the runtime\n * type-checking, and b) ensure it gets down-compiled for old versions of Node (the published package only supports Node\n * 12+).\n *\n * @param regexString The string to escape\n * @returns An version of the string with all special regex characters escaped\n */\nexport function escapeStringForRegex(regexString: string): string {\n  // escape the hyphen separately so we can also replace it with a unicode literal hyphen, to avoid the problems\n  // discussed in https://github.com/sindresorhus/escape-string-regexp/issues/20.\n  return regexString.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&').replace(/-/g, '\\\\x2d');\n}\n", "/* eslint-disable max-lines */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport type { WrappedFunction } from '@sentry/types';\n\nimport { htmlTreeAsString } from './browser';\nimport { isElement, isError, isEvent, isInstanceOf, isPlainObject, isPrimitive } from './is';\nimport { truncate } from './string';\n\n/**\n * Replace a method in an object with a wrapped version of itself.\n *\n * @param source An object that contains a method to be wrapped.\n * @param name The name of the method to be wrapped.\n * @param replacementFactory A higher-order function that takes the original version of the given method and returns a\n * wrapped version. Note: The function returned by `replacementFactory` needs to be a non-arrow function, in order to\n * preserve the correct value of `this`, and the original method must be called using `origMethod.call(this, <other\n * args>)` or `origMethod.apply(this, [<other args>])` (rather than being called directly), again to preserve `this`.\n * @returns void\n */\nexport function fill(source: { [key: string]: any }, name: string, replacementFactory: (...args: any[]) => any): void {\n  if (!(name in source)) {\n    return;\n  }\n\n  const original = source[name] as () => any;\n  const wrapped = replacementFactory(original) as WrappedFunction;\n\n  // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n  // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n  if (typeof wrapped === 'function') {\n    try {\n      markFunctionWrapped(wrapped, original);\n    } catch (_Oo) {\n      // This can throw if multiple fill happens on a global object like XMLHttpRequest\n      // Fixes https://github.com/getsentry/sentry-javascript/issues/2043\n    }\n  }\n\n  source[name] = wrapped;\n}\n\n/**\n * Defines a non-enumerable property on the given object.\n *\n * @param obj The object on which to set the property\n * @param name The name of the property to be set\n * @param value The value to which to set the property\n */\nexport function addNonEnumerableProperty(obj: { [key: string]: unknown }, name: string, value: unknown): void {\n  Object.defineProperty(obj, name, {\n    // enumerable: false, // the default, so we can save on bundle size by not explicitly setting it\n    value: value,\n    writable: true,\n    configurable: true,\n  });\n}\n\n/**\n * Remembers the original function on the wrapped function and\n * patches up the prototype.\n *\n * @param wrapped the wrapper function\n * @param original the original function that gets wrapped\n */\nexport function markFunctionWrapped(wrapped: WrappedFunction, original: WrappedFunction): void {\n  const proto = original.prototype || {};\n  wrapped.prototype = original.prototype = proto;\n  addNonEnumerableProperty(wrapped, '__sentry_original__', original);\n}\n\n/**\n * This extracts the original function if available.  See\n * `markFunctionWrapped` for more information.\n *\n * @param func the function to unwrap\n * @returns the unwrapped version of the function if available.\n */\nexport function getOriginalFunction(func: WrappedFunction): WrappedFunction | undefined {\n  return func.__sentry_original__;\n}\n\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nexport function urlEncode(object: { [key: string]: any }): string {\n  return Object.keys(object)\n    .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(object[key])}`)\n    .join('&');\n}\n\n/**\n * Transforms any `Error` or `Event` into a plain object with all of their enumerable properties, and some of their\n * non-enumerable properties attached.\n *\n * @param value Initial source that we have to transform in order for it to be usable by the serializer\n * @returns An Event or Error turned into an object - or the value argurment itself, when value is neither an Event nor\n *  an Error.\n */\nexport function convertToPlainObject<V>(value: V):\n  | {\n      [ownProps: string]: unknown;\n      type: string;\n      target: string;\n      currentTarget: string;\n      detail?: unknown;\n    }\n  | {\n      [ownProps: string]: unknown;\n      message: string;\n      name: string;\n      stack?: string;\n    }\n  | V {\n  if (isError(value)) {\n    return {\n      message: value.message,\n      name: value.name,\n      stack: value.stack,\n      ...getOwnProperties(value),\n    };\n  } else if (isEvent(value)) {\n    const newObj: {\n      [ownProps: string]: unknown;\n      type: string;\n      target: string;\n      currentTarget: string;\n      detail?: unknown;\n    } = {\n      type: value.type,\n      target: serializeEventTarget(value.target),\n      currentTarget: serializeEventTarget(value.currentTarget),\n      ...getOwnProperties(value),\n    };\n\n    if (typeof CustomEvent !== 'undefined' && isInstanceOf(value, CustomEvent)) {\n      newObj.detail = value.detail;\n    }\n\n    return newObj;\n  } else {\n    return value;\n  }\n}\n\n/** Creates a string representation of the target of an `Event` object */\nfunction serializeEventTarget(target: unknown): string {\n  try {\n    return isElement(target) ? htmlTreeAsString(target) : Object.prototype.toString.call(target);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/** Filters out all but an object's own properties */\nfunction getOwnProperties(obj: unknown): { [key: string]: unknown } {\n  if (typeof obj === 'object' && obj !== null) {\n    const extractedProps: { [key: string]: unknown } = {};\n    for (const property in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, property)) {\n        extractedProps[property] = (obj as Record<string, unknown>)[property];\n      }\n    }\n    return extractedProps;\n  } else {\n    return {};\n  }\n}\n\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\nexport function extractExceptionKeysForMessage(exception: Record<string, unknown>, maxLength: number = 40): string {\n  const keys = Object.keys(convertToPlainObject(exception));\n  keys.sort();\n\n  if (!keys.length) {\n    return '[object has no keys]';\n  }\n\n  if (keys[0].length >= maxLength) {\n    return truncate(keys[0], maxLength);\n  }\n\n  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    const serialized = keys.slice(0, includedKeys).join(', ');\n    if (serialized.length > maxLength) {\n      continue;\n    }\n    if (includedKeys === keys.length) {\n      return serialized;\n    }\n    return truncate(serialized, maxLength);\n  }\n\n  return '';\n}\n\n/**\n * Given any object, return a new object having removed all fields whose value was `undefined`.\n * Works recursively on objects and arrays.\n *\n * Attention: This function keeps circular references in the returned object.\n */\nexport function dropUndefinedKeys<T>(inputValue: T): T {\n  // This map keeps track of what already visited nodes map to.\n  // Our Set - based memoBuilder doesn't work here because we want to the output object to have the same circular\n  // references as the input object.\n  const memoizationMap = new Map<unknown, unknown>();\n\n  // This function just proxies `_dropUndefinedKeys` to keep the `memoBuilder` out of this function's API\n  return _dropUndefinedKeys(inputValue, memoizationMap);\n}\n\nfunction _dropUndefinedKeys<T>(inputValue: T, memoizationMap: Map<unknown, unknown>): T {\n  if (isPlainObject(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the object it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal as T;\n    }\n\n    const returnValue: { [key: string]: any } = {};\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    for (const key of Object.keys(inputValue)) {\n      if (typeof inputValue[key] !== 'undefined') {\n        returnValue[key] = _dropUndefinedKeys(inputValue[key], memoizationMap);\n      }\n    }\n\n    return returnValue as T;\n  }\n\n  if (Array.isArray(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the array it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal as T;\n    }\n\n    const returnValue: unknown[] = [];\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    inputValue.forEach((item: unknown) => {\n      returnValue.push(_dropUndefinedKeys(item, memoizationMap));\n    });\n\n    return returnValue as unknown as T;\n  }\n\n  return inputValue;\n}\n\n/**\n * Ensure that something is an object.\n *\n * Turns `undefined` and `null` into `String`s and all other primitives into instances of their respective wrapper\n * classes (String, Boolean, Number, etc.). Acts as the identity function on non-primitives.\n *\n * @param wat The subject of the objectification\n * @returns A version of `wat` which can safely be used with `Object` class methods\n */\nexport function objectify(wat: unknown): typeof Object {\n  let objectified;\n  switch (true) {\n    case wat === undefined || wat === null:\n      objectified = new String(wat);\n      break;\n\n    // Though symbols and bigints do have wrapper classes (`Symbol` and `BigInt`, respectively), for whatever reason\n    // those classes don't have constructors which can be used with the `new` keyword. We therefore need to cast each as\n    // an object in order to wrap it.\n    case typeof wat === 'symbol' || typeof wat === 'bigint':\n      objectified = Object(wat);\n      break;\n\n    // this will catch the remaining primitives: `String`, `Number`, and `Boolean`\n    case isPrimitive(wat):\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      objectified = new (wat as any).constructor(wat);\n      break;\n\n    // by process of elimination, at this point we know that `wat` must already be an object\n    default:\n      objectified = wat;\n      break;\n  }\n  return objectified;\n}\n", "import type { StackFrame, StackLineParser, StackLineParserFn, StackParser } from '@sentry/types';\n\nconst STACKTRACE_LIMIT = 50;\n\n/**\n * Creates a stack parser with the supplied line parsers\n *\n * StackFrames are returned in the correct order for Sentry Exception\n * frames and with Sentry SDK internal frames removed from the top and bottom\n *\n */\nexport function createStackParser(...parsers: StackLineParser[]): StackParser {\n  const sortedParsers = parsers.sort((a, b) => a[0] - b[0]).map(p => p[1]);\n\n  return (stack: string, skipFirst: number = 0): StackFrame[] => {\n    const frames: StackFrame[] = [];\n    for (const line of stack.split('\\n').slice(skipFirst)) {\n      // Ignore lines over 1kb as they are unlikely to be stack frames.\n      // Many of the regular expressions use backtracking which results in run time that increases exponentially with\n      // input size. Huge strings can result in hangs/Denial of Service:\n      // https://github.com/getsentry/sentry-javascript/issues/2286\n      if (line.length > 1024) {\n        continue;\n      }\n\n      // https://github.com/getsentry/sentry-javascript/issues/5459\n      // Remove webpack (error: *) wrappers\n      const cleanedLine = line.replace(/\\(error: (.*)\\)/, '$1');\n\n      for (const parser of sortedParsers) {\n        const frame = parser(cleanedLine);\n\n        if (frame) {\n          frames.push(frame);\n          break;\n        }\n      }\n    }\n\n    return stripSentryFramesAndReverse(frames);\n  };\n}\n\n/**\n * Gets a stack parser implementation from Options.stackParser\n * @see Options\n *\n * If options contains an array of line parsers, it is converted into a parser\n */\nexport function stackParserFromStackParserOptions(stackParser: StackParser | StackLineParser[]): StackParser {\n  if (Array.isArray(stackParser)) {\n    return createStackParser(...stackParser);\n  }\n  return stackParser;\n}\n\n/**\n * @hidden\n */\nexport function stripSentryFramesAndReverse(stack: StackFrame[]): StackFrame[] {\n  if (!stack.length) {\n    return [];\n  }\n\n  let localStack = stack;\n\n  const firstFrameFunction = localStack[0].function || '';\n  const lastFrameFunction = localStack[localStack.length - 1].function || '';\n\n  // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n  if (firstFrameFunction.indexOf('captureMessage') !== -1 || firstFrameFunction.indexOf('captureException') !== -1) {\n    localStack = localStack.slice(1);\n  }\n\n  // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n  if (lastFrameFunction.indexOf('sentryWrapped') !== -1) {\n    localStack = localStack.slice(0, -1);\n  }\n\n  // The frame where the crash happened, should be the last entry in the array\n  return localStack\n    .slice(0, STACKTRACE_LIMIT)\n    .map(frame => ({\n      ...frame,\n      filename: frame.filename || localStack[0].filename,\n      function: frame.function || '?',\n    }))\n    .reverse();\n}\n\nconst defaultFunctionName = '<anonymous>';\n\n/**\n * Safely extract function name from itself\n */\nexport function getFunctionName(fn: unknown): string {\n  try {\n    if (!fn || typeof fn !== 'function') {\n      return defaultFunctionName;\n    }\n    return fn.name || defaultFunctionName;\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    return defaultFunctionName;\n  }\n}\n\ntype GetModuleFn = (filename: string | undefined) => string | undefined;\n\n// eslint-disable-next-line complexity\nfunction node(getModule?: GetModuleFn): StackLineParserFn {\n  const FILENAME_MATCH = /^\\s*[-]{4,}$/;\n  const FULL_MATCH = /at (?:async )?(?:(.+?)\\s+\\()?(?:(.+):(\\d+):(\\d+)?|([^)]+))\\)?/;\n\n  // eslint-disable-next-line complexity\n  return (line: string) => {\n    if (line.match(FILENAME_MATCH)) {\n      return {\n        filename: line,\n      };\n    }\n\n    const lineMatch = line.match(FULL_MATCH);\n    if (!lineMatch) {\n      return undefined;\n    }\n\n    let object: string | undefined;\n    let method: string | undefined;\n    let functionName: string | undefined;\n    let typeName: string | undefined;\n    let methodName: string | undefined;\n\n    if (lineMatch[1]) {\n      functionName = lineMatch[1];\n\n      let methodStart = functionName.lastIndexOf('.');\n      if (functionName[methodStart - 1] === '.') {\n        methodStart--;\n      }\n\n      if (methodStart > 0) {\n        object = functionName.slice(0, methodStart);\n        method = functionName.slice(methodStart + 1);\n        const objectEnd = object.indexOf('.Module');\n        if (objectEnd > 0) {\n          functionName = functionName.slice(objectEnd + 1);\n          object = object.slice(0, objectEnd);\n        }\n      }\n      typeName = undefined;\n    }\n\n    if (method) {\n      typeName = object;\n      methodName = method;\n    }\n\n    if (method === '<anonymous>') {\n      methodName = undefined;\n      functionName = undefined;\n    }\n\n    if (functionName === undefined) {\n      methodName = methodName || '<anonymous>';\n      functionName = typeName ? `${typeName}.${methodName}` : methodName;\n    }\n\n    const filename = lineMatch[2] && lineMatch[2].startsWith('file://') ? lineMatch[2].slice(7) : lineMatch[2];\n    const isNative = lineMatch[5] === 'native';\n    const isInternal =\n      isNative || (filename && !filename.startsWith('/') && !filename.startsWith('.') && filename.indexOf(':\\\\') !== 1);\n\n    // in_app is all that's not an internal Node function or a module within node_modules\n    // note that isNative appears to return true even for node core libraries\n    // see https://github.com/getsentry/raven-node/issues/176\n    const in_app = !isInternal && filename !== undefined && !filename.includes('node_modules/');\n\n    return {\n      filename,\n      module: getModule ? getModule(filename) : undefined,\n      function: functionName,\n      lineno: parseInt(lineMatch[3], 10) || undefined,\n      colno: parseInt(lineMatch[4], 10) || undefined,\n      in_app,\n    };\n  };\n}\n\n/**\n * Node.js stack line parser\n *\n * This is in @sentry/utils so it can be used from the Electron SDK in the browser for when `nodeIntegration == true`.\n * This allows it to be used without referencing or importing any node specific code which causes bundlers to complain\n */\nexport function nodeStackLineParser(getModule?: GetModuleFn): StackLineParser {\n  return [90, node(getModule)];\n}\n", "import { logger } from './logger';\nimport { getGlobalObject } from './worldwide';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject<Window>();\n\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsErrorEvent(): boolean {\n  try {\n    new ErrorEvent('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMError(): boolean {\n  try {\n    // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n    // 1 argument required, but only 0 present.\n    // @ts-ignore It really needs 1 argument, not 0.\n    new DOMError('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMException(): boolean {\n  try {\n    new DOMException('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsFetch(): boolean {\n  if (!('fetch' in WINDOW)) {\n    return false;\n  }\n\n  try {\n    new Headers();\n    new Request('http://www.example.com');\n    new Response();\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * isNativeFetch checks if the given function is a native implementation of fetch()\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function isNativeFetch(func: Function): boolean {\n  return func && /^function fetch\\(\\)\\s+\\{\\s+\\[native code\\]\\s+\\}$/.test(func.toString());\n}\n\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nexport function supportsNativeFetch(): boolean {\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  // Fast path to avoid DOM I/O\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  if (isNativeFetch(WINDOW.fetch)) {\n    return true;\n  }\n\n  // window.fetch is implemented, but is polyfilled or already wrapped (e.g: by a chrome extension)\n  // so create a \"pure\" iframe to see if that has native fetch\n  let result = false;\n  const doc = WINDOW.document;\n  // eslint-disable-next-line deprecation/deprecation\n  if (doc && typeof (doc.createElement as unknown) === 'function') {\n    try {\n      const sandbox = doc.createElement('iframe');\n      sandbox.hidden = true;\n      doc.head.appendChild(sandbox);\n      if (sandbox.contentWindow && sandbox.contentWindow.fetch) {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        result = isNativeFetch(sandbox.contentWindow.fetch);\n      }\n      doc.head.removeChild(sandbox);\n    } catch (err) {\n      __DEBUG_BUILD__ &&\n        logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReportingObserver(): boolean {\n  return 'ReportingObserver' in WINDOW;\n}\n\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReferrerPolicy(): boolean {\n  // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default'\n  // (see https://caniuse.com/#feat=referrer-policy),\n  // it doesn't. And it throws an exception instead of ignoring this parameter...\n  // REF: https://github.com/getsentry/raven-js/issues/1233\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  try {\n    new Request('_', {\n      referrerPolicy: 'origin' as ReferrerPolicy,\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsHistory(): boolean {\n  // NOTE: in Chrome App environment, touching history.pushState, *even inside\n  //       a try/catch block*, will cause Chrome to output an error to console.error\n  // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n  /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const chrome = (WINDOW as any).chrome;\n  const isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n  /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n  const hasHistoryApi = 'history' in WINDOW && !!WINDOW.history.pushState && !!WINDOW.history.replaceState;\n\n  return !isChromePackagedApp && hasHistoryApi;\n}\n", "/* eslint-disable max-lines */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport type { HandlerDataFetch, SentryWrappedXMLHttpRequest, WrappedFunction } from '@sentry/types';\n\nimport { isInstanceOf, isString } from './is';\nimport { CONSOLE_LEVELS, logger } from './logger';\nimport { fill } from './object';\nimport { getFunctionName } from './stacktrace';\nimport { supportsHistory, supportsNativeFetch } from './supports';\nimport { getGlobalObject } from './worldwide';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject<Window>();\n\nexport type InstrumentHandlerType =\n  | 'console'\n  | 'dom'\n  | 'fetch'\n  | 'history'\n  | 'sentry'\n  | 'xhr'\n  | 'error'\n  | 'unhandledrejection';\nexport type InstrumentHandlerCallback = (data: any) => void;\n\n/**\n * Instrument native APIs to call handlers that can be used to create breadcrumbs, APM spans etc.\n *  - Console API\n *  - Fetch API\n *  - XHR API\n *  - History API\n *  - DOM API (click/typing)\n *  - Error API\n *  - UnhandledRejection API\n */\n\nconst handlers: { [key in InstrumentHandlerType]?: InstrumentHandlerCallback[] } = {};\nconst instrumented: { [key in InstrumentHandlerType]?: boolean } = {};\n\n/** Instruments given API */\nfunction instrument(type: InstrumentHandlerType): void {\n  if (instrumented[type]) {\n    return;\n  }\n\n  instrumented[type] = true;\n\n  switch (type) {\n    case 'console':\n      instrumentConsole();\n      break;\n    case 'dom':\n      instrumentDOM();\n      break;\n    case 'xhr':\n      instrumentXHR();\n      break;\n    case 'fetch':\n      instrumentFetch();\n      break;\n    case 'history':\n      instrumentHistory();\n      break;\n    case 'error':\n      instrumentError();\n      break;\n    case 'unhandledrejection':\n      instrumentUnhandledRejection();\n      break;\n    default:\n      __DEBUG_BUILD__ && logger.warn('unknown instrumentation type:', type);\n      return;\n  }\n}\n\n/**\n * Add handler that will be called when given type of instrumentation triggers.\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addInstrumentationHandler(type: InstrumentHandlerType, callback: InstrumentHandlerCallback): void {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] as InstrumentHandlerCallback[]).push(callback);\n  instrument(type);\n}\n\n/** JSDoc */\nfunction triggerHandlers(type: InstrumentHandlerType, data: any): void {\n  if (!type || !handlers[type]) {\n    return;\n  }\n\n  for (const handler of handlers[type] || []) {\n    try {\n      handler(data);\n    } catch (e) {\n      __DEBUG_BUILD__ &&\n        logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n\n/** JSDoc */\nfunction instrumentConsole(): void {\n  if (!('console' in WINDOW)) {\n    return;\n  }\n\n  CONSOLE_LEVELS.forEach(function (level: string): void {\n    if (!(level in WINDOW.console)) {\n      return;\n    }\n\n    fill(WINDOW.console, level, function (originalConsoleMethod: () => any): Function {\n      return function (...args: any[]): void {\n        triggerHandlers('console', { args, level });\n\n        // this fails for some browsers. :(\n        if (originalConsoleMethod) {\n          originalConsoleMethod.apply(WINDOW.console, args);\n        }\n      };\n    });\n  });\n}\n\n/** JSDoc */\nfunction instrumentFetch(): void {\n  if (!supportsNativeFetch()) {\n    return;\n  }\n\n  fill(WINDOW, 'fetch', function (originalFetch: () => void): () => void {\n    return function (...args: any[]): void {\n      const handlerData: HandlerDataFetch = {\n        args,\n        fetchData: {\n          method: getFetchMethod(args),\n          url: getFetchUrl(args),\n        },\n        startTimestamp: Date.now(),\n      };\n\n      triggerHandlers('fetch', {\n        ...handlerData,\n      });\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      return originalFetch.apply(WINDOW, args).then(\n        (response: Response) => {\n          triggerHandlers('fetch', {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            response,\n          });\n          return response;\n        },\n        (error: Error) => {\n          triggerHandlers('fetch', {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            error,\n          });\n          // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n          //       it means the sentry.javascript SDK caught an error invoking your application code.\n          //       This is expected behavior and NOT indicative of a bug with sentry.javascript.\n          throw error;\n        },\n      );\n    };\n  });\n}\n\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/** Extract `method` from fetch call arguments */\nfunction getFetchMethod(fetchArgs: any[] = []): string {\n  if ('Request' in WINDOW && isInstanceOf(fetchArgs[0], Request) && fetchArgs[0].method) {\n    return String(fetchArgs[0].method).toUpperCase();\n  }\n  if (fetchArgs[1] && fetchArgs[1].method) {\n    return String(fetchArgs[1].method).toUpperCase();\n  }\n  return 'GET';\n}\n\n/** Extract `url` from fetch call arguments */\nfunction getFetchUrl(fetchArgs: any[] = []): string {\n  if (typeof fetchArgs[0] === 'string') {\n    return fetchArgs[0];\n  }\n  if ('Request' in WINDOW && isInstanceOf(fetchArgs[0], Request)) {\n    return fetchArgs[0].url;\n  }\n  return String(fetchArgs[0]);\n}\n/* eslint-enable @typescript-eslint/no-unsafe-member-access */\n\n/** JSDoc */\nfunction instrumentXHR(): void {\n  if (!('XMLHttpRequest' in WINDOW)) {\n    return;\n  }\n\n  const xhrproto = XMLHttpRequest.prototype;\n\n  fill(xhrproto, 'open', function (originalOpen: () => void): () => void {\n    return function (this: SentryWrappedXMLHttpRequest, ...args: any[]): void {\n      // eslint-disable-next-line @typescript-eslint/no-this-alias\n      const xhr = this;\n      const url = args[1];\n      const xhrInfo: SentryWrappedXMLHttpRequest['__sentry_xhr__'] = (xhr.__sentry_xhr__ = {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        method: isString(args[0]) ? args[0].toUpperCase() : args[0],\n        url: args[1],\n      });\n\n      // if Sentry key appears in URL, don't capture it as a request\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      if (isString(url) && xhrInfo.method === 'POST' && url.match(/sentry_key/)) {\n        xhr.__sentry_own_request__ = true;\n      }\n\n      const onreadystatechangeHandler = function (): void {\n        if (xhr.readyState === 4) {\n          try {\n            // touching statusCode in some platforms throws\n            // an exception\n            xhrInfo.status_code = xhr.status;\n          } catch (e) {\n            /* do nothing */\n          }\n\n          triggerHandlers('xhr', {\n            args,\n            endTimestamp: Date.now(),\n            startTimestamp: Date.now(),\n            xhr,\n          });\n        }\n      };\n\n      if ('onreadystatechange' in xhr && typeof xhr.onreadystatechange === 'function') {\n        fill(xhr, 'onreadystatechange', function (original: WrappedFunction): Function {\n          return function (...readyStateArgs: any[]): void {\n            onreadystatechangeHandler();\n            return original.apply(xhr, readyStateArgs);\n          };\n        });\n      } else {\n        xhr.addEventListener('readystatechange', onreadystatechangeHandler);\n      }\n\n      return originalOpen.apply(xhr, args);\n    };\n  });\n\n  fill(xhrproto, 'send', function (originalSend: () => void): () => void {\n    return function (this: SentryWrappedXMLHttpRequest, ...args: any[]): void {\n      if (this.__sentry_xhr__ && args[0] !== undefined) {\n        this.__sentry_xhr__.body = args[0];\n      }\n\n      triggerHandlers('xhr', {\n        args,\n        startTimestamp: Date.now(),\n        xhr: this,\n      });\n\n      return originalSend.apply(this, args);\n    };\n  });\n}\n\nlet lastHref: string;\n\n/** JSDoc */\nfunction instrumentHistory(): void {\n  if (!supportsHistory()) {\n    return;\n  }\n\n  const oldOnPopState = WINDOW.onpopstate;\n  WINDOW.onpopstate = function (this: WindowEventHandlers, ...args: any[]): any {\n    const to = WINDOW.location.href;\n    // keep track of the current URL state, as we always receive only the updated state\n    const from = lastHref;\n    lastHref = to;\n    triggerHandlers('history', {\n      from,\n      to,\n    });\n    if (oldOnPopState) {\n      // Apparently this can throw in Firefox when incorrectly implemented plugin is installed.\n      // https://github.com/getsentry/sentry-javascript/issues/3344\n      // https://github.com/bugsnag/bugsnag-js/issues/469\n      try {\n        return oldOnPopState.apply(this, args);\n      } catch (_oO) {\n        // no-empty\n      }\n    }\n  };\n\n  /** @hidden */\n  function historyReplacementFunction(originalHistoryFunction: () => void): () => void {\n    return function (this: History, ...args: any[]): void {\n      const url = args.length > 2 ? args[2] : undefined;\n      if (url) {\n        // coerce to string (this is what pushState does)\n        const from = lastHref;\n        const to = String(url);\n        // keep track of the current URL state, as we always receive only the updated state\n        lastHref = to;\n        triggerHandlers('history', {\n          from,\n          to,\n        });\n      }\n      return originalHistoryFunction.apply(this, args);\n    };\n  }\n\n  fill(WINDOW.history, 'pushState', historyReplacementFunction);\n  fill(WINDOW.history, 'replaceState', historyReplacementFunction);\n}\n\nconst debounceDuration = 1000;\nlet debounceTimerID: number | undefined;\nlet lastCapturedEvent: Event | undefined;\n\n/**\n * Decide whether the current event should finish the debounce of previously captured one.\n * @param previous previously captured event\n * @param current event to be captured\n */\nfunction shouldShortcircuitPreviousDebounce(previous: Event | undefined, current: Event): boolean {\n  // If there was no previous event, it should always be swapped for the new one.\n  if (!previous) {\n    return true;\n  }\n\n  // If both events have different type, then user definitely performed two separate actions. e.g. click + keypress.\n  if (previous.type !== current.type) {\n    return true;\n  }\n\n  try {\n    // If both events have the same type, it's still possible that actions were performed on different targets.\n    // e.g. 2 clicks on different buttons.\n    if (previous.target !== current.target) {\n      return true;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  // If both events have the same type _and_ same `target` (an element which triggered an event, _not necessarily_\n  // to which an event listener was attached), we treat them as the same action, as we want to capture\n  // only one breadcrumb. e.g. multiple clicks on the same button, or typing inside a user input box.\n  return false;\n}\n\n/**\n * Decide whether an event should be captured.\n * @param event event to be captured\n */\nfunction shouldSkipDOMEvent(event: Event): boolean {\n  // We are only interested in filtering `keypress` events for now.\n  if (event.type !== 'keypress') {\n    return false;\n  }\n\n  try {\n    const target = event.target as HTMLElement;\n\n    if (!target || !target.tagName) {\n      return true;\n    }\n\n    // Only consider keypress events on actual input elements. This will disregard keypresses targeting body\n    // e.g.tabbing through elements, hotkeys, etc.\n    if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {\n      return false;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  return true;\n}\n\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n * @param handler function that will be triggered\n * @param globalListener indicates whether event was captured by the global event listener\n * @returns wrapped breadcrumb events handler\n * @hidden\n */\nfunction makeDOMEventHandler(handler: Function, globalListener: boolean = false): (event: Event) => void {\n  return (event: Event): void => {\n    // It's possible this handler might trigger multiple times for the same\n    // event (e.g. event propagation through node ancestors).\n    // Ignore if we've already captured that event.\n    if (!event || lastCapturedEvent === event) {\n      return;\n    }\n\n    // We always want to skip _some_ events.\n    if (shouldSkipDOMEvent(event)) {\n      return;\n    }\n\n    const name = event.type === 'keypress' ? 'input' : event.type;\n\n    // If there is no debounce timer, it means that we can safely capture the new event and store it for future comparisons.\n    if (debounceTimerID === undefined) {\n      handler({\n        event: event,\n        name,\n        global: globalListener,\n      });\n      lastCapturedEvent = event;\n    }\n    // If there is a debounce awaiting, see if the new event is different enough to treat it as a unique one.\n    // If that's the case, emit the previous event and store locally the newly-captured DOM event.\n    else if (shouldShortcircuitPreviousDebounce(lastCapturedEvent, event)) {\n      handler({\n        event: event,\n        name,\n        global: globalListener,\n      });\n      lastCapturedEvent = event;\n    }\n\n    // Start a new debounce timer that will prevent us from capturing multiple events that should be grouped together.\n    clearTimeout(debounceTimerID);\n    debounceTimerID = WINDOW.setTimeout(() => {\n      debounceTimerID = undefined;\n    }, debounceDuration);\n  };\n}\n\ntype AddEventListener = (\n  type: string,\n  listener: EventListenerOrEventListenerObject,\n  options?: boolean | AddEventListenerOptions,\n) => void;\ntype RemoveEventListener = (\n  type: string,\n  listener: EventListenerOrEventListenerObject,\n  options?: boolean | EventListenerOptions,\n) => void;\n\ntype InstrumentedElement = Element & {\n  __sentry_instrumentation_handlers__?: {\n    [key in 'click' | 'keypress']?: {\n      handler?: Function;\n      /** The number of custom listeners attached to this element */\n      refCount: number;\n    };\n  };\n};\n\n/** JSDoc */\nfunction instrumentDOM(): void {\n  if (!('document' in WINDOW)) {\n    return;\n  }\n\n  // Make it so that any click or keypress that is unhandled / bubbled up all the way to the document triggers our dom\n  // handlers. (Normally we have only one, which captures a breadcrumb for each click or keypress.) Do this before\n  // we instrument `addEventListener` so that we don't end up attaching this handler twice.\n  const triggerDOMHandler = triggerHandlers.bind(null, 'dom');\n  const globalDOMEventHandler = makeDOMEventHandler(triggerDOMHandler, true);\n  WINDOW.document.addEventListener('click', globalDOMEventHandler, false);\n  WINDOW.document.addEventListener('keypress', globalDOMEventHandler, false);\n\n  // After hooking into click and keypress events bubbled up to `document`, we also hook into user-handled\n  // clicks & keypresses, by adding an event listener of our own to any element to which they add a listener. That\n  // way, whenever one of their handlers is triggered, ours will be, too. (This is needed because their handler\n  // could potentially prevent the event from bubbling up to our global listeners. This way, our handler are still\n  // guaranteed to fire at least once.)\n  ['EventTarget', 'Node'].forEach((target: string) => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const proto = (WINDOW as any)[target] && (WINDOW as any)[target].prototype;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n    if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n      return;\n    }\n\n    fill(proto, 'addEventListener', function (originalAddEventListener: AddEventListener): AddEventListener {\n      return function (\n        this: Element,\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | AddEventListenerOptions,\n      ): AddEventListener {\n        if (type === 'click' || type == 'keypress') {\n          try {\n            const el = this as InstrumentedElement;\n            const handlers = (el.__sentry_instrumentation_handlers__ = el.__sentry_instrumentation_handlers__ || {});\n            const handlerForType = (handlers[type] = handlers[type] || { refCount: 0 });\n\n            if (!handlerForType.handler) {\n              const handler = makeDOMEventHandler(triggerDOMHandler);\n              handlerForType.handler = handler;\n              originalAddEventListener.call(this, type, handler, options);\n            }\n\n            handlerForType.refCount++;\n          } catch (e) {\n            // Accessing dom properties is always fragile.\n            // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n          }\n        }\n\n        return originalAddEventListener.call(this, type, listener, options);\n      };\n    });\n\n    fill(\n      proto,\n      'removeEventListener',\n      function (originalRemoveEventListener: RemoveEventListener): RemoveEventListener {\n        return function (\n          this: Element,\n          type: string,\n          listener: EventListenerOrEventListenerObject,\n          options?: boolean | EventListenerOptions,\n        ): () => void {\n          if (type === 'click' || type == 'keypress') {\n            try {\n              const el = this as InstrumentedElement;\n              const handlers = el.__sentry_instrumentation_handlers__ || {};\n              const handlerForType = handlers[type];\n\n              if (handlerForType) {\n                handlerForType.refCount--;\n                // If there are no longer any custom handlers of the current type on this element, we can remove ours, too.\n                if (handlerForType.refCount <= 0) {\n                  originalRemoveEventListener.call(this, type, handlerForType.handler, options);\n                  handlerForType.handler = undefined;\n                  delete handlers[type]; // eslint-disable-line @typescript-eslint/no-dynamic-delete\n                }\n\n                // If there are no longer any custom handlers of any type on this element, cleanup everything.\n                if (Object.keys(handlers).length === 0) {\n                  delete el.__sentry_instrumentation_handlers__;\n                }\n              }\n            } catch (e) {\n              // Accessing dom properties is always fragile.\n              // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n            }\n          }\n\n          return originalRemoveEventListener.call(this, type, listener, options);\n        };\n      },\n    );\n  });\n}\n\nlet _oldOnErrorHandler: OnErrorEventHandler = null;\n/** JSDoc */\nfunction instrumentError(): void {\n  _oldOnErrorHandler = WINDOW.onerror;\n\n  WINDOW.onerror = function (msg: any, url: any, line: any, column: any, error: any): boolean {\n    triggerHandlers('error', {\n      column,\n      error,\n      line,\n      msg,\n      url,\n    });\n\n    if (_oldOnErrorHandler) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnErrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  };\n}\n\nlet _oldOnUnhandledRejectionHandler: ((e: any) => void) | null = null;\n/** JSDoc */\nfunction instrumentUnhandledRejection(): void {\n  _oldOnUnhandledRejectionHandler = WINDOW.onunhandledrejection;\n\n  WINDOW.onunhandledrejection = function (e: any): boolean {\n    triggerHandlers('unhandledrejection', e);\n\n    if (_oldOnUnhandledRejectionHandler) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnUnhandledRejectionHandler.apply(this, arguments);\n    }\n\n    return true;\n  };\n}\n", "/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nexport type MemoFunc = [\n  // memoize\n  (obj: any) => boolean,\n  // unmemoize\n  (obj: any) => void,\n];\n\n/**\n * Helper to decycle json objects\n */\nexport function memoBuilder(): MemoFunc {\n  const hasWeakSet = typeof WeakSet === 'function';\n  const inner: any = hasWeakSet ? new WeakSet() : [];\n  function memoize(obj: any): boolean {\n    if (hasWeakSet) {\n      if (inner.has(obj)) {\n        return true;\n      }\n      inner.add(obj);\n      return false;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let i = 0; i < inner.length; i++) {\n      const value = inner[i];\n      if (value === obj) {\n        return true;\n      }\n    }\n    inner.push(obj);\n    return false;\n  }\n\n  function unmemoize(obj: any): void {\n    if (hasWeakSet) {\n      inner.delete(obj);\n    } else {\n      for (let i = 0; i < inner.length; i++) {\n        if (inner[i] === obj) {\n          inner.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n  return [memoize, unmemoize];\n}\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\nimport type { Event, Exception, Mechanism, StackFrame } from '@sentry/types';\n\nimport { addNonEnumerableProperty } from './object';\nimport { snipLine } from './string';\nimport { GLOBAL_OBJ } from './worldwide';\n\ninterface CryptoInternal {\n  getRandomValues(array: Uint8Array): Uint8Array;\n  randomUUID?(): string;\n}\n\n/** An interface for common properties on global */\ninterface CryptoGlobal {\n  msCrypto?: CryptoInternal;\n  crypto?: CryptoInternal;\n}\n\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nexport function uuid4(): string {\n  const gbl = GLOBAL_OBJ as typeof GLOBAL_OBJ & CryptoGlobal;\n  const crypto = gbl.crypto || gbl.msCrypto;\n\n  if (crypto && crypto.randomUUID) {\n    return crypto.randomUUID().replace(/-/g, '');\n  }\n\n  const getRandomByte =\n    crypto && crypto.getRandomValues ? () => crypto.getRandomValues(new Uint8Array(1))[0] : () => Math.random() * 16;\n\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  // Concatenating the following numbers as strings results in '10000000100040008000100000000000'\n  return (([1e7] as unknown as string) + 1e3 + 4e3 + 8e3 + 1e11).replace(/[018]/g, c =>\n    // eslint-disable-next-line no-bitwise\n    ((c as unknown as number) ^ ((getRandomByte() & 15) >> ((c as unknown as number) / 4))).toString(16),\n  );\n}\n\nfunction getFirstException(event: Event): Exception | undefined {\n  return event.exception && event.exception.values ? event.exception.values[0] : undefined;\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nexport function getEventDescription(event: Event): string {\n  const { message, event_id: eventId } = event;\n  if (message) {\n    return message;\n  }\n\n  const firstException = getFirstException(event);\n  if (firstException) {\n    if (firstException.type && firstException.value) {\n      return `${firstException.type}: ${firstException.value}`;\n    }\n    return firstException.type || firstException.value || eventId || '<unknown>';\n  }\n  return eventId || '<unknown>';\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nexport function addExceptionTypeValue(event: Event, value?: string, type?: string): void {\n  const exception = (event.exception = event.exception || {});\n  const values = (exception.values = exception.values || []);\n  const firstException = (values[0] = values[0] || {});\n  if (!firstException.value) {\n    firstException.value = value || '';\n  }\n  if (!firstException.type) {\n    firstException.type = type || 'Error';\n  }\n}\n\n/**\n * Adds exception mechanism data to a given event. Uses defaults if the second parameter is not passed.\n *\n * @param event The event to modify.\n * @param newMechanism Mechanism data to add to the event.\n * @hidden\n */\nexport function addExceptionMechanism(event: Event, newMechanism?: Partial<Mechanism>): void {\n  const firstException = getFirstException(event);\n  if (!firstException) {\n    return;\n  }\n\n  const defaultMechanism = { type: 'generic', handled: true };\n  const currentMechanism = firstException.mechanism;\n  firstException.mechanism = { ...defaultMechanism, ...currentMechanism, ...newMechanism };\n\n  if (newMechanism && 'data' in newMechanism) {\n    const mergedData = { ...(currentMechanism && currentMechanism.data), ...newMechanism.data };\n    firstException.mechanism.data = mergedData;\n  }\n}\n\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nconst SEMVER_REGEXP =\n  /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\n/**\n * Represents Semantic Versioning object\n */\ninterface SemVer {\n  major?: number;\n  minor?: number;\n  patch?: number;\n  prerelease?: string;\n  buildmetadata?: string;\n}\n\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nexport function parseSemver(input: string): SemVer {\n  const match = input.match(SEMVER_REGEXP) || [];\n  const major = parseInt(match[1], 10);\n  const minor = parseInt(match[2], 10);\n  const patch = parseInt(match[3], 10);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4],\n  };\n}\n\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nexport function addContextToFrame(lines: string[], frame: StackFrame, linesOfContext: number = 5): void {\n  // When there is no line number in the frame, attaching context is nonsensical and will even break grouping\n  if (frame.lineno === undefined) {\n    return;\n  }\n\n  const maxLines = lines.length;\n  const sourceLine = Math.max(Math.min(maxLines, frame.lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line: string) => snipLine(line, 0));\n\n  frame.context_line = snipLine(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line: string) => snipLine(line, 0));\n}\n\n/**\n * Checks whether or not we've already captured the given exception (note: not an identical exception - the very object\n * in question), and marks it captured if not.\n *\n * This is useful because it's possible for an error to get captured by more than one mechanism. After we intercept and\n * record an error, we rethrow it (assuming we've intercepted it before it's reached the top-level global handlers), so\n * that we don't interfere with whatever effects the error might have had were the SDK not there. At that point, because\n * the error has been rethrown, it's possible for it to bubble up to some other code we've instrumented. If it's not\n * caught after that, it will bubble all the way up to the global handlers (which of course we also instrument). This\n * function helps us ensure that even if we encounter the same error more than once, we only record it the first time we\n * see it.\n *\n * Note: It will ignore primitives (always return `false` and not mark them as seen), as properties can't be set on\n * them. {@link: Object.objectify} can be used on exceptions to convert any that are primitives into their equivalent\n * object wrapper forms so that this check will always work. However, because we need to flag the exact object which\n * will get rethrown, and because that rethrowing happens outside of the event processing pipeline, the objectification\n * must be done before the exception captured.\n *\n * @param A thrown exception to check or flag as having been seen\n * @returns `true` if the exception has already been captured, `false` if not (with the side effect of marking it seen)\n */\nexport function checkOrSetAlreadyCaught(exception: unknown): boolean {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (exception && (exception as any).__sentry_captured__) {\n    return true;\n  }\n\n  try {\n    // set it this way rather than by assignment so that it's not ennumerable and therefore isn't recorded by the\n    // `ExtraErrorData` integration\n    addNonEnumerableProperty(exception as { [key: string]: unknown }, '__sentry_captured__', true);\n  } catch (err) {\n    // `exception` is a primitive, so we can't mark it seen\n  }\n\n  return false;\n}\n\n/**\n * Checks whether the given input is already an array, and if it isn't, wraps it in one.\n *\n * @param maybeArray Input to turn into an array, if necessary\n * @returns The input, if already an array, or an array with the input as the only element, if not\n */\nexport function arrayify<T = unknown>(maybeArray: T | T[]): T[] {\n  return Array.isArray(maybeArray) ? maybeArray : [maybeArray];\n}\n", "/*\n * This module exists for optimizations in the build process through rollup and terser.  We define some global\n * constants, which can be overridden during build. By guarding certain pieces of code with functions that return these\n * constants, we can control whether or not they appear in the final bundle. (Any code guarded by a false condition will\n * never run, and will hence be dropped during treeshaking.) The two primary uses for this are stripping out calls to\n * `logger` and preventing node-related code from appearing in browser bundles.\n *\n * Attention:\n * This file should not be used to define constants/flags that are intended to be used for tree-shaking conducted by\n * users. These flags should live in their respective packages, as we identified user tooling (specifically webpack)\n * having issues tree-shaking these constants across package boundaries.\n * An example for this is the __SENTRY_DEBUG__ constant. It is declared in each package individually because we want\n * users to be able to shake away expressions that it guards.\n */\n\ndeclare const __SENTRY_BROWSER_BUNDLE__: boolean | undefined;\n\nexport type SdkSource = 'npm' | 'cdn' | 'loader';\n\n/**\n * Figures out if we're building a browser bundle.\n *\n * @returns true if this is a browser bundle build.\n */\nexport function isBrowserBundle(): boolean {\n  return typeof __SENTRY_BROWSER_BUNDLE__ !== 'undefined' && !!__SENTRY_BROWSER_BUNDLE__;\n}\n\n/**\n * Get source of SDK.\n */\nexport function getSDKSource(): SdkSource {\n  // @ts-ignore __SENTRY_SDK_SOURCE__ is injected by rollup during build process\n  return __SENTRY_SDK_SOURCE__;\n}\n", "/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n */\n\nimport { isBrowserBundle } from './env';\n\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nexport function isNodeEnv(): boolean {\n  // explicitly check for browser bundles as those can be optimized statically\n  // by terser/rollup.\n  return (\n    !isBrowserBundle() &&\n    Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]'\n  );\n}\n\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param request The module path to resolve\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\nexport function dynamicRequire(mod: any, request: string): any {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return mod.require(request);\n}\n\n/**\n * Helper for dynamically loading module that should work with linked dependencies.\n * The problem is that we _should_ be using `require(require.resolve(moduleName, { paths: [cwd()] }))`\n * However it's _not possible_ to do that with Webpack, as it has to know all the dependencies during\n * build time. `require.resolve` is also not available in any other way, so we cannot create,\n * a fake helper like we do with `dynamicRequire`.\n *\n * We always prefer to use local package, thus the value is not returned early from each `try/catch` block.\n * That is to mimic the behavior of `require.resolve` exactly.\n *\n * @param moduleName module name to require\n * @returns possibly required module\n */\nexport function loadModule<T>(moduleName: string): T | undefined {\n  let mod: T | undefined;\n\n  try {\n    mod = dynamicRequire(module, moduleName);\n  } catch (e) {\n    // no-empty\n  }\n\n  try {\n    const { cwd } = dynamicRequire(module, 'process');\n    mod = dynamicRequire(module, `${cwd()}/node_modules/${moduleName}`) as T;\n  } catch (e) {\n    // no-empty\n  }\n\n  return mod;\n}\n", "import type { Primitive } from '@sentry/types';\n\nimport { isNaN, isSyntheticEvent } from './is';\nimport type { MemoFunc } from './memo';\nimport { memoBuilder } from './memo';\nimport { convertToPlainObject } from './object';\nimport { getFunctionName } from './stacktrace';\n\ntype Prototype = { constructor: (...args: unknown[]) => unknown };\n// This is a hack to placate TS, relying on the fact that technically, arrays are objects with integer keys. Normally we\n// think of those keys as actual numbers, but `arr['0']` turns out to work just as well as `arr[0]`, and doing it this\n// way lets us use a single type in the places where behave as if we are only dealing with objects, even if some of them\n// might be arrays.\ntype ObjOrArray<T> = { [key: string]: T };\n\n/**\n * Recursively normalizes the given object.\n *\n * - Creates a copy to prevent original input mutation\n * - Skips non-enumerable properties\n * - When stringifying, calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializable values (`undefined`/`NaN`/functions) to serializable format\n * - Translates known global objects/classes to a string representations\n * - Takes care of `Error` object serialization\n * - Optionally limits depth of final output\n * - Optionally limits number of properties/elements included in any single object/array\n *\n * @param input The object to be normalized.\n * @param depth The max depth to which to normalize the object. (Anything deeper stringified whole.)\n * @param maxProperties The max number of elements or properties to be included in any single array or\n * object in the normallized output.\n * @returns A normalized version of the object, or `\"**non-serializable**\"` if any errors are thrown during normalization.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function normalize(input: unknown, depth: number = +Infinity, maxProperties: number = +Infinity): any {\n  try {\n    // since we're at the outermost level, we don't provide a key\n    return visit('', input, depth, maxProperties);\n  } catch (err) {\n    return { ERROR: `**non-serializable** (${err})` };\n  }\n}\n\n/** JSDoc */\nexport function normalizeToSize<T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  object: { [key: string]: any },\n  // Default Node.js REPL depth\n  depth: number = 3,\n  // 100kB, as 200kB is max payload size, so half sounds reasonable\n  maxSize: number = 100 * 1024,\n): T {\n  const normalized = normalize(object, depth);\n\n  if (jsonSize(normalized) > maxSize) {\n    return normalizeToSize(object, depth - 1, maxSize);\n  }\n\n  return normalized as T;\n}\n\n/**\n * Visits a node to perform normalization on it\n *\n * @param key The key corresponding to the given node\n * @param value The node to be visited\n * @param depth Optional number indicating the maximum recursion depth\n * @param maxProperties Optional maximum number of properties/elements included in any single object/array\n * @param memo Optional Memo class handling decycling\n */\nfunction visit(\n  key: string,\n  value: unknown,\n  depth: number = +Infinity,\n  maxProperties: number = +Infinity,\n  memo: MemoFunc = memoBuilder(),\n): Primitive | ObjOrArray<unknown> {\n  const [memoize, unmemoize] = memo;\n\n  // Get the simple cases out of the way first\n  if (value === null || (['number', 'boolean', 'string'].includes(typeof value) && !isNaN(value))) {\n    return value as Primitive;\n  }\n\n  const stringified = stringifyValue(key, value);\n\n  // Anything we could potentially dig into more (objects or arrays) will have come back as `\"[object XXXX]\"`.\n  // Everything else will have already been serialized, so if we don't see that pattern, we're done.\n  if (!stringified.startsWith('[object ')) {\n    return stringified;\n  }\n\n  // From here on, we can assert that `value` is either an object or an array.\n\n  // Do not normalize objects that we know have already been normalized. As a general rule, the\n  // \"__sentry_skip_normalization__\" property should only be used sparingly and only should only be set on objects that\n  // have already been normalized.\n  if ((value as ObjOrArray<unknown>)['__sentry_skip_normalization__']) {\n    return value as ObjOrArray<unknown>;\n  }\n\n  // Do not normalize objects that we know have already been normalized. As a general rule, the\n  // \"__sentry_skip_normalization__\" property should only be used sparingly and only should only be set on objects that\n  // have already been normalized.\n  let overriddenDepth = depth;\n\n  if (typeof (value as ObjOrArray<unknown>)['__sentry_override_normalization_depth__'] === 'number') {\n    overriddenDepth = (value as ObjOrArray<unknown>)['__sentry_override_normalization_depth__'] as number;\n  }\n\n  // We're also done if we've reached the max depth\n  if (overriddenDepth === 0) {\n    // At this point we know `serialized` is a string of the form `\"[object XXXX]\"`. Clean it up so it's just `\"[XXXX]\"`.\n    return stringified.replace('object ', '');\n  }\n\n  // If we've already visited this branch, bail out, as it's circular reference. If not, note that we're seeing it now.\n  if (memoize(value)) {\n    return '[Circular ~]';\n  }\n\n  // If the value has a `toJSON` method, we call it to extract more information\n  const valueWithToJSON = value as unknown & { toJSON?: () => unknown };\n  if (valueWithToJSON && typeof valueWithToJSON.toJSON === 'function') {\n    try {\n      const jsonValue = valueWithToJSON.toJSON();\n      // We need to normalize the return value of `.toJSON()` in case it has circular references\n      return visit('', jsonValue, overriddenDepth - 1, maxProperties, memo);\n    } catch (err) {\n      // pass (The built-in `toJSON` failed, but we can still try to do it ourselves)\n    }\n  }\n\n  // At this point we know we either have an object or an array, we haven't seen it before, and we're going to recurse\n  // because we haven't yet reached the max depth. Create an accumulator to hold the results of visiting each\n  // property/entry, and keep track of the number of items we add to it.\n  const normalized = (Array.isArray(value) ? [] : {}) as ObjOrArray<unknown>;\n  let numAdded = 0;\n\n  // Before we begin, convert`Error` and`Event` instances into plain objects, since some of each of their relevant\n  // properties are non-enumerable and otherwise would get missed.\n  const visitable = convertToPlainObject(value as ObjOrArray<unknown>);\n\n  for (const visitKey in visitable) {\n    // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n    if (!Object.prototype.hasOwnProperty.call(visitable, visitKey)) {\n      continue;\n    }\n\n    if (numAdded >= maxProperties) {\n      normalized[visitKey] = '[MaxProperties ~]';\n      break;\n    }\n\n    // Recursively visit all the child nodes\n    const visitValue = visitable[visitKey];\n    normalized[visitKey] = visit(visitKey, visitValue, overriddenDepth - 1, maxProperties, memo);\n\n    numAdded++;\n  }\n\n  // Once we've visited all the branches, remove the parent from memo storage\n  unmemoize(value);\n\n  // Return accumulated values\n  return normalized;\n}\n\n// TODO remove this in v7 (this means the method will no longer be exported, under any name)\nexport { visit as walk };\n\n/**\n * Stringify the given value. Handles various known special values and types.\n *\n * Not meant to be used on simple primitives which already have a string representation, as it will, for example, turn\n * the number 1231 into \"[Object Number]\", nor on `null`, as it will throw.\n *\n * @param value The value to stringify\n * @returns A stringified representation of the given value\n */\nfunction stringifyValue(\n  key: unknown,\n  // this type is a tiny bit of a cheat, since this function does handle NaN (which is technically a number), but for\n  // our internal use, it'll do\n  value: Exclude<unknown, string | number | boolean | null>,\n): string {\n  try {\n    if (key === 'domain' && value && typeof value === 'object' && (value as { _events: unknown })._events) {\n      return '[Domain]';\n    }\n\n    if (key === 'domainEmitter') {\n      return '[DomainEmitter]';\n    }\n\n    // It's safe to use `global`, `window`, and `document` here in this manner, as we are asserting using `typeof` first\n    // which won't throw if they are not present.\n\n    if (typeof global !== 'undefined' && value === global) {\n      return '[Global]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof window !== 'undefined' && value === window) {\n      return '[Window]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof document !== 'undefined' && value === document) {\n      return '[Document]';\n    }\n\n    // React's SyntheticEvent thingy\n    if (isSyntheticEvent(value)) {\n      return '[SyntheticEvent]';\n    }\n\n    if (typeof value === 'number' && value !== value) {\n      return '[NaN]';\n    }\n\n    // this catches `undefined` (but not `null`, which is a primitive and can be serialized on its own)\n    if (value === void 0) {\n      return '[undefined]';\n    }\n\n    if (typeof value === 'function') {\n      return `[Function: ${getFunctionName(value)}]`;\n    }\n\n    if (typeof value === 'symbol') {\n      return `[${String(value)}]`;\n    }\n\n    // stringified BigInts are indistinguishable from regular numbers, so we need to label them to avoid confusion\n    if (typeof value === 'bigint') {\n      return `[BigInt: ${String(value)}]`;\n    }\n\n    // Now that we've knocked out all the special cases and the primitives, all we have left are objects. Simply casting\n    // them to strings means that instances of classes which haven't defined their `toStringTag` will just come out as\n    // `\"[object Object]\"`. If we instead look at the constructor's name (which is the same as the name of the class),\n    // we can make sure that only plain objects come out that way.\n    return `[object ${getConstructorName(value)}]`;\n  } catch (err) {\n    return `**non-serializable** (${err})`;\n  }\n}\n\nfunction getConstructorName(value: unknown): string {\n  const prototype: Prototype | null = Object.getPrototypeOf(value);\n\n  return prototype ? prototype.constructor.name : 'null prototype';\n}\n\n/** Calculates bytes size of input string */\nfunction utf8Length(value: string): number {\n  // eslint-disable-next-line no-bitwise\n  return ~-encodeURI(value).split(/%..|./).length;\n}\n\n/** Calculates bytes size of input object */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction jsonSize(value: any): number {\n  return utf8Length(JSON.stringify(value));\n}\n", "/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/typedef */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { isThenable } from './is';\n\n/** SyncPromise internal states */\nconst enum States {\n  /** Pending */\n  PENDING = 0,\n  /** Resolved / OK */\n  RESOLVED = 1,\n  /** Rejected / Error */\n  REJECTED = 2,\n}\n\n// Overloads so we can call resolvedSyncPromise without arguments and generic argument\nexport function resolvedSyncPromise(): PromiseLike<void>;\nexport function resolvedSyncPromise<T>(value: T | PromiseLike<T>): PromiseLike<T>;\n\n/**\n * Creates a resolved sync promise.\n *\n * @param value the value to resolve the promise with\n * @returns the resolved sync promise\n */\nexport function resolvedSyncPromise<T>(value?: T | PromiseLike<T>): PromiseLike<T> {\n  return new SyncPromise(resolve => {\n    resolve(value);\n  });\n}\n\n/**\n * Creates a rejected sync promise.\n *\n * @param value the value to reject the promise with\n * @returns the rejected sync promise\n */\nexport function rejectedSyncPromise<T = never>(reason?: any): PromiseLike<T> {\n  return new SyncPromise((_, reject) => {\n    reject(reason);\n  });\n}\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nclass SyncPromise<T> implements PromiseLike<T> {\n  private _state: States = States.PENDING;\n  private _handlers: Array<[boolean, (value: T) => void, (reason: any) => any]> = [];\n  private _value: any;\n\n  public constructor(\n    executor: (resolve: (value?: T | PromiseLike<T> | null) => void, reject: (reason?: any) => void) => void,\n  ) {\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n\n  /** JSDoc */\n  public then<TResult1 = T, TResult2 = never>(\n    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | null,\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | null,\n  ): PromiseLike<TResult1 | TResult2> {\n    return new SyncPromise((resolve, reject) => {\n      this._handlers.push([\n        false,\n        result => {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result as any);\n          } else {\n            try {\n              resolve(onfulfilled(result));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n        reason => {\n          if (!onrejected) {\n            reject(reason);\n          } else {\n            try {\n              resolve(onrejected(reason));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n      ]);\n      this._executeHandlers();\n    });\n  }\n\n  /** JSDoc */\n  public catch<TResult = never>(\n    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | null,\n  ): PromiseLike<T | TResult> {\n    return this.then(val => val, onrejected);\n  }\n\n  /** JSDoc */\n  public finally<TResult>(onfinally?: (() => void) | null): PromiseLike<TResult> {\n    return new SyncPromise<TResult>((resolve, reject) => {\n      let val: TResult | any;\n      let isRejected: boolean;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve(val as unknown as any);\n      });\n    });\n  }\n\n  /** JSDoc */\n  private readonly _resolve = (value?: T | PromiseLike<T> | null) => {\n    this._setResult(States.RESOLVED, value);\n  };\n\n  /** JSDoc */\n  private readonly _reject = (reason?: any) => {\n    this._setResult(States.REJECTED, reason);\n  };\n\n  /** JSDoc */\n  private readonly _setResult = (state: States, value?: T | PromiseLike<T> | any) => {\n    if (this._state !== States.PENDING) {\n      return;\n    }\n\n    if (isThenable(value)) {\n      void (value as PromiseLike<T>).then(this._resolve, this._reject);\n      return;\n    }\n\n    this._state = state;\n    this._value = value;\n\n    this._executeHandlers();\n  };\n\n  /** JSDoc */\n  private readonly _executeHandlers = () => {\n    if (this._state === States.PENDING) {\n      return;\n    }\n\n    const cachedHandlers = this._handlers.slice();\n    this._handlers = [];\n\n    cachedHandlers.forEach(handler => {\n      if (handler[0]) {\n        return;\n      }\n\n      if (this._state === States.RESOLVED) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        handler[1](this._value as unknown as any);\n      }\n\n      if (this._state === States.REJECTED) {\n        handler[2](this._value);\n      }\n\n      handler[0] = true;\n    });\n  };\n}\n\nexport { SyncPromise };\n", "import { SentryError } from './error';\nimport { rejectedSyncPromise, resolvedSyncPromise, SyncPromise } from './syncpromise';\n\nexport interface PromiseBuffer<T> {\n  // exposes the internal array so tests can assert on the state of it.\n  // XXX: this really should not be public api.\n  $: Array<PromiseLike<T>>;\n  add(taskProducer: () => PromiseLike<T>): PromiseLike<T>;\n  drain(timeout?: number): PromiseLike<boolean>;\n}\n\n/**\n * Creates an new PromiseBuffer object with the specified limit\n * @param limit max number of promises that can be stored in the buffer\n */\nexport function makePromiseBuffer<T>(limit?: number): PromiseBuffer<T> {\n  const buffer: Array<PromiseLike<T>> = [];\n\n  function isReady(): boolean {\n    return limit === undefined || buffer.length < limit;\n  }\n\n  /**\n   * Remove a promise from the queue.\n   *\n   * @param task Can be any PromiseLike<T>\n   * @returns Removed promise.\n   */\n  function remove(task: PromiseLike<T>): PromiseLike<T> {\n    return buffer.splice(buffer.indexOf(task), 1)[0];\n  }\n\n  /**\n   * Add a promise (representing an in-flight action) to the queue, and set it to remove itself on fulfillment.\n   *\n   * @param taskProducer A function producing any PromiseLike<T>; In previous versions this used to be `task:\n   *        PromiseLike<T>`, but under that model, Promises were instantly created on the call-site and their executor\n   *        functions therefore ran immediately. Thus, even if the buffer was full, the action still happened. By\n   *        requiring the promise to be wrapped in a function, we can defer promise creation until after the buffer\n   *        limit check.\n   * @returns The original promise.\n   */\n  function add(taskProducer: () => PromiseLike<T>): PromiseLike<T> {\n    if (!isReady()) {\n      return rejectedSyncPromise(new SentryError('Not adding Promise because buffer limit was reached.'));\n    }\n\n    // start the task and add its promise to the queue\n    const task = taskProducer();\n    if (buffer.indexOf(task) === -1) {\n      buffer.push(task);\n    }\n    void task\n      .then(() => remove(task))\n      // Use `then(null, rejectionHandler)` rather than `catch(rejectionHandler)` so that we can use `PromiseLike`\n      // rather than `Promise`. `PromiseLike` doesn't have a `.catch` method, making its polyfill smaller. (ES5 didn't\n      // have promises, so TS has to polyfill when down-compiling.)\n      .then(null, () =>\n        remove(task).then(null, () => {\n          // We have to add another catch here because `remove()` starts a new promise chain.\n        }),\n      );\n    return task;\n  }\n\n  /**\n   * Wait for all promises in the queue to resolve or for timeout to expire, whichever comes first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the queue is still non-empty. Passing `0` (or\n   * not passing anything) will make the promise wait as long as it takes for the queue to drain before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if the queue is already empty or drains before the timeout, and\n   * `false` otherwise\n   */\n  function drain(timeout?: number): PromiseLike<boolean> {\n    return new SyncPromise<boolean>((resolve, reject) => {\n      let counter = buffer.length;\n\n      if (!counter) {\n        return resolve(true);\n      }\n\n      // wait for `timeout` ms and then resolve to `false` (if not cancelled first)\n      const capturedSetTimeout = setTimeout(() => {\n        if (timeout && timeout > 0) {\n          resolve(false);\n        }\n      }, timeout);\n\n      // if all promises resolve in time, cancel the timer and resolve to `true`\n      buffer.forEach(item => {\n        void resolvedSyncPromise(item).then(() => {\n          if (!--counter) {\n            clearTimeout(capturedSetTimeout);\n            resolve(true);\n          }\n        }, reject);\n      });\n    });\n  }\n\n  return {\n    $: buffer,\n    add,\n    drain,\n  };\n}\n", "/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nexport function parseUrl(url: string): {\n  host?: string;\n  path?: string;\n  protocol?: string;\n  relative?: string;\n} {\n  if (!url) {\n    return {};\n  }\n\n  const match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  }\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  const query = match[6] || '';\n  const fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    relative: match[5] + query + fragment, // everything minus origin\n  };\n}\n\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\nexport function stripUrlQueryAndFragment(urlPath: string): string {\n  // eslint-disable-next-line no-useless-escape\n  return urlPath.split(/[\\?#]/, 1)[0];\n}\n\n/**\n * Returns number of URL segments of a passed string URL.\n */\nexport function getNumberOfUrlSegments(url: string): number {\n  // split at '/' or at '\\/' to split regex urls correctly\n  return url.split(/\\\\?\\//).filter(s => s.length > 0 && s !== ',').length;\n}\n", "/* eslint-disable deprecation/deprecation */\nimport type { Severity, SeverityLevel } from '@sentry/types';\n\n// Note: Ideally the `SeverityLevel` type would be derived from `validSeverityLevels`, but that would mean either\n//\n// a) moving `validSeverityLevels` to `@sentry/types`,\n// b) moving the`SeverityLevel` type here, or\n// c) importing `validSeverityLevels` from here into `@sentry/types`.\n//\n// Option A would make `@sentry/types` a runtime dependency of `@sentry/utils` (not good), and options B and C would\n// create a circular dependency between `@sentry/types` and `@sentry/utils` (also not good). So a TODO accompanying the\n// type, reminding anyone who changes it to change this list also, will have to do.\n\nexport const validSeverityLevels = ['fatal', 'error', 'warning', 'log', 'info', 'debug'];\n\n/**\n * Converts a string-based level into a member of the deprecated {@link Severity} enum.\n *\n * @deprecated `severityFromString` is deprecated. Please use `severityLevelFromString` instead.\n *\n * @param level String representation of Severity\n * @returns Severity\n */\nexport function severityFromString(level: Severity | SeverityLevel | string): Severity {\n  return severityLevelFromString(level) as Severity;\n}\n\n/**\n * Converts a string-based level into a `SeverityLevel`, normalizing it along the way.\n *\n * @param level String representation of desired `SeverityLevel`.\n * @returns The `SeverityLevel` corresponding to the given string, or 'log' if the string isn't a valid level.\n */\nexport function severityLevelFromString(level: SeverityLevel | string): SeverityLevel {\n  return (level === 'warn' ? 'warning' : validSeverityLevels.includes(level) ? level : 'log') as SeverityLevel;\n}\n", "import { dynamicRequire, isNodeEnv } from './node';\nimport { getGlobalObject } from './worldwide';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject<Window>();\n\n/**\n * An object that can return the current timestamp in seconds since the UNIX epoch.\n */\ninterface TimestampSource {\n  nowSeconds(): number;\n}\n\n/**\n * A TimestampSource implementation for environments that do not support the Performance Web API natively.\n *\n * Note that this TimestampSource does not use a monotonic clock. A call to `nowSeconds` may return a timestamp earlier\n * than a previously returned value. We do not try to emulate a monotonic behavior in order to facilitate debugging. It\n * is more obvious to explain \"why does my span have negative duration\" than \"why my spans have zero duration\".\n */\nconst dateTimestampSource: TimestampSource = {\n  nowSeconds: () => Date.now() / 1000,\n};\n\n/**\n * A partial definition of the [Performance Web API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Performance}\n * for accessing a high-resolution monotonic clock.\n */\ninterface Performance {\n  /**\n   * The millisecond timestamp at which measurement began, measured in Unix time.\n   */\n  timeOrigin: number;\n  /**\n   * Returns the current millisecond timestamp, where 0 represents the start of measurement.\n   */\n  now(): number;\n}\n\n/**\n * Returns a wrapper around the native Performance API browser implementation, or undefined for browsers that do not\n * support the API.\n *\n * Wrapping the native API works around differences in behavior from different browsers.\n */\nfunction getBrowserPerformance(): Performance | undefined {\n  const { performance } = WINDOW;\n  if (!performance || !performance.now) {\n    return undefined;\n  }\n\n  // Replace performance.timeOrigin with our own timeOrigin based on Date.now().\n  //\n  // This is a partial workaround for browsers reporting performance.timeOrigin such that performance.timeOrigin +\n  // performance.now() gives a date arbitrarily in the past.\n  //\n  // Additionally, computing timeOrigin in this way fills the gap for browsers where performance.timeOrigin is\n  // undefined.\n  //\n  // The assumption that performance.timeOrigin + performance.now() ~= Date.now() is flawed, but we depend on it to\n  // interact with data coming out of performance entries.\n  //\n  // Note that despite recommendations against it in the spec, browsers implement the Performance API with a clock that\n  // might stop when the computer is asleep (and perhaps under other circumstances). Such behavior causes\n  // performance.timeOrigin + performance.now() to have an arbitrary skew over Date.now(). In laptop computers, we have\n  // observed skews that can be as long as days, weeks or months.\n  //\n  // See https://github.com/getsentry/sentry-javascript/issues/2590.\n  //\n  // BUG: despite our best intentions, this workaround has its limitations. It mostly addresses timings of pageload\n  // transactions, but ignores the skew built up over time that can aversely affect timestamps of navigation\n  // transactions of long-lived web pages.\n  const timeOrigin = Date.now() - performance.now();\n\n  return {\n    now: () => performance.now(),\n    timeOrigin,\n  };\n}\n\n/**\n * Returns the native Performance API implementation from Node.js. Returns undefined in old Node.js versions that don't\n * implement the API.\n */\nfunction getNodePerformance(): Performance | undefined {\n  try {\n    const perfHooks = dynamicRequire(module, 'perf_hooks') as { performance: Performance };\n    return perfHooks.performance;\n  } catch (_) {\n    return undefined;\n  }\n}\n\n/**\n * The Performance API implementation for the current platform, if available.\n */\nconst platformPerformance: Performance | undefined = isNodeEnv() ? getNodePerformance() : getBrowserPerformance();\n\nconst timestampSource: TimestampSource =\n  platformPerformance === undefined\n    ? dateTimestampSource\n    : {\n        nowSeconds: () => (platformPerformance.timeOrigin + platformPerformance.now()) / 1000,\n      };\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using the Date API.\n */\nexport const dateTimestampInSeconds: () => number = dateTimestampSource.nowSeconds.bind(dateTimestampSource);\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using either the Performance or Date APIs, depending on the\n * availability of the Performance API.\n *\n * See `usingPerformanceAPI` to test whether the Performance API is used.\n *\n * BUG: Note that because of how browsers implement the Performance API, the clock might stop when the computer is\n * asleep. This creates a skew between `dateTimestampInSeconds` and `timestampInSeconds`. The\n * skew can grow to arbitrary amounts like days, weeks or months.\n * See https://github.com/getsentry/sentry-javascript/issues/2590.\n */\nexport const timestampInSeconds: () => number = timestampSource.nowSeconds.bind(timestampSource);\n\n// Re-exported with an old name for backwards-compatibility.\nexport const timestampWithMs = timestampInSeconds;\n\n/**\n * A boolean that is true when timestampInSeconds uses the Performance API to produce monotonic timestamps.\n */\nexport const usingPerformanceAPI = platformPerformance !== undefined;\n\n/**\n * Internal helper to store what is the source of browserPerformanceTimeOrigin below. For debugging only.\n */\nexport let _browserPerformanceTimeOriginMode: string;\n\n/**\n * The number of milliseconds since the UNIX epoch. This value is only usable in a browser, and only when the\n * performance API is available.\n */\nexport const browserPerformanceTimeOrigin = ((): number | undefined => {\n  // Unfortunately browsers may report an inaccurate time origin data, through either performance.timeOrigin or\n  // performance.timing.navigationStart, which results in poor results in performance data. We only treat time origin\n  // data as reliable if they are within a reasonable threshold of the current time.\n\n  const { performance } = WINDOW;\n  if (!performance || !performance.now) {\n    _browserPerformanceTimeOriginMode = 'none';\n    return undefined;\n  }\n\n  const threshold = 3600 * 1000;\n  const performanceNow = performance.now();\n  const dateNow = Date.now();\n\n  // if timeOrigin isn't available set delta to threshold so it isn't used\n  const timeOriginDelta = performance.timeOrigin\n    ? Math.abs(performance.timeOrigin + performanceNow - dateNow)\n    : threshold;\n  const timeOriginIsReliable = timeOriginDelta < threshold;\n\n  // While performance.timing.navigationStart is deprecated in favor of performance.timeOrigin, performance.timeOrigin\n  // is not as widely supported. Namely, performance.timeOrigin is undefined in Safari as of writing.\n  // Also as of writing, performance.timing is not available in Web Workers in mainstream browsers, so it is not always\n  // a valid fallback. In the absence of an initial time provided by the browser, fallback to the current time from the\n  // Date API.\n  // eslint-disable-next-line deprecation/deprecation\n  const navigationStart = performance.timing && performance.timing.navigationStart;\n  const hasNavigationStart = typeof navigationStart === 'number';\n  // if navigationStart isn't available set delta to threshold so it isn't used\n  const navigationStartDelta = hasNavigationStart ? Math.abs(navigationStart + performanceNow - dateNow) : threshold;\n  const navigationStartIsReliable = navigationStartDelta < threshold;\n\n  if (timeOriginIsReliable || navigationStartIsReliable) {\n    // Use the more reliable time origin\n    if (timeOriginDelta <= navigationStartDelta) {\n      _browserPerformanceTimeOriginMode = 'timeOrigin';\n      return performance.timeOrigin;\n    } else {\n      _browserPerformanceTimeOriginMode = 'navigationStart';\n      return navigationStart;\n    }\n  }\n\n  // Either both timeOrigin and navigationStart are skewed or neither is available, fallback to Date.\n  _browserPerformanceTimeOriginMode = 'dateNow';\n  return dateNow;\n})();\n", "import type { TraceparentData } from '@sentry/types';\n\nexport const TRACEPARENT_REGEXP = new RegExp(\n  '^[ \\\\t]*' + // whitespace\n    '([0-9a-f]{32})?' + // trace_id\n    '-?([0-9a-f]{16})?' + // span_id\n    '-?([01])?' + // sampled\n    '[ \\\\t]*$', // whitespace\n);\n\n/**\n * Extract transaction context data from a `sentry-trace` header.\n *\n * @param traceparent Traceparent string\n *\n * @returns Object containing data from the header, or undefined if traceparent string is malformed\n */\nexport function extractTraceparentData(traceparent: string): TraceparentData | undefined {\n  const matches = traceparent.match(TRACEPARENT_REGEXP);\n\n  if (!traceparent || !matches) {\n    // empty string or no matches is invalid traceparent data\n    return undefined;\n  }\n\n  let parentSampled: boolean | undefined;\n  if (matches[3] === '1') {\n    parentSampled = true;\n  } else if (matches[3] === '0') {\n    parentSampled = false;\n  }\n\n  return {\n    traceId: matches[1],\n    parentSampled,\n    parentSpanId: matches[2],\n  };\n}\n", "import type {\n  Attachment,\n  AttachmentItem,\n  BaseEnvelopeHeaders,\n  BaseEnvelopeItemHeaders,\n  DataCategory,\n  DsnComponents,\n  Envelope,\n  EnvelopeItemType,\n  Event,\n  EventEnvelopeHeaders,\n  SdkInfo,\n  SdkMetadata,\n  TextEncoderInternal,\n} from '@sentry/types';\n\nimport { dsnToString } from './dsn';\nimport { normalize } from './normalize';\nimport { dropUndefinedKeys } from './object';\n\n/**\n * Creates an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nexport function createEnvelope<E extends Envelope>(headers: E[0], items: E[1] = []): E {\n  return [headers, items] as E;\n}\n\n/**\n * Add an item to an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nexport function addItemToEnvelope<E extends Envelope>(envelope: E, newItem: E[1][number]): E {\n  const [headers, items] = envelope;\n  return [headers, [...items, newItem]] as E;\n}\n\n/**\n * Convenience function to loop through the items and item types of an envelope.\n * (This function was mostly created because working with envelope types is painful at the moment)\n *\n * If the callback returns true, the rest of the items will be skipped.\n */\nexport function forEachEnvelopeItem<E extends Envelope>(\n  envelope: Envelope,\n  callback: (envelopeItem: E[1][number], envelopeItemType: E[1][number][0]['type']) => boolean | void,\n): boolean {\n  const envelopeItems = envelope[1];\n\n  for (const envelopeItem of envelopeItems) {\n    const envelopeItemType = envelopeItem[0].type;\n    const result = callback(envelopeItem, envelopeItemType);\n\n    if (result) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Returns true if the envelope contains any of the given envelope item types\n */\nexport function envelopeContainsItemType(envelope: Envelope, types: EnvelopeItemType[]): boolean {\n  return forEachEnvelopeItem(envelope, (_, type) => types.includes(type));\n}\n\n/**\n * Encode a string to UTF8.\n */\nfunction encodeUTF8(input: string, textEncoder?: TextEncoderInternal): Uint8Array {\n  const utf8 = textEncoder || new TextEncoder();\n  return utf8.encode(input);\n}\n\n/**\n * Serializes an envelope.\n */\nexport function serializeEnvelope(envelope: Envelope, textEncoder?: TextEncoderInternal): string | Uint8Array {\n  const [envHeaders, items] = envelope;\n\n  // Initially we construct our envelope as a string and only convert to binary chunks if we encounter binary data\n  let parts: string | Uint8Array[] = JSON.stringify(envHeaders);\n\n  function append(next: string | Uint8Array): void {\n    if (typeof parts === 'string') {\n      parts = typeof next === 'string' ? parts + next : [encodeUTF8(parts, textEncoder), next];\n    } else {\n      parts.push(typeof next === 'string' ? encodeUTF8(next, textEncoder) : next);\n    }\n  }\n\n  for (const item of items) {\n    const [itemHeaders, payload] = item;\n\n    append(`\\n${JSON.stringify(itemHeaders)}\\n`);\n\n    if (typeof payload === 'string' || payload instanceof Uint8Array) {\n      append(payload);\n    } else {\n      let stringifiedPayload: string;\n      try {\n        stringifiedPayload = JSON.stringify(payload);\n      } catch (e) {\n        // In case, despite all our efforts to keep `payload` circular-dependency-free, `JSON.strinify()` still\n        // fails, we try again after normalizing it again with infinite normalization depth. This of course has a\n        // performance impact but in this case a performance hit is better than throwing.\n        stringifiedPayload = JSON.stringify(normalize(payload));\n      }\n      append(stringifiedPayload);\n    }\n  }\n\n  return typeof parts === 'string' ? parts : concatBuffers(parts);\n}\n\nfunction concatBuffers(buffers: Uint8Array[]): Uint8Array {\n  const totalLength = buffers.reduce((acc, buf) => acc + buf.length, 0);\n\n  const merged = new Uint8Array(totalLength);\n  let offset = 0;\n  for (const buffer of buffers) {\n    merged.set(buffer, offset);\n    offset += buffer.length;\n  }\n\n  return merged;\n}\n\nexport interface TextDecoderInternal {\n  decode(input?: Uint8Array): string;\n}\n\n/**\n * Parses an envelope\n */\nexport function parseEnvelope(\n  env: string | Uint8Array,\n  textEncoder: TextEncoderInternal,\n  textDecoder: TextDecoderInternal,\n): Envelope {\n  let buffer = typeof env === 'string' ? textEncoder.encode(env) : env;\n\n  function readBinary(length: number): Uint8Array {\n    const bin = buffer.subarray(0, length);\n    // Replace the buffer with the remaining data excluding trailing newline\n    buffer = buffer.subarray(length + 1);\n    return bin;\n  }\n\n  function readJson<T>(): T {\n    let i = buffer.indexOf(0xa);\n    // If we couldn't find a newline, we must have found the end of the buffer\n    if (i < 0) {\n      i = buffer.length;\n    }\n\n    return JSON.parse(textDecoder.decode(readBinary(i))) as T;\n  }\n\n  const envelopeHeader = readJson<BaseEnvelopeHeaders>();\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const items: [any, any][] = [];\n\n  while (buffer.length) {\n    const itemHeader = readJson<BaseEnvelopeItemHeaders>();\n    const binaryLength = typeof itemHeader.length === 'number' ? itemHeader.length : undefined;\n\n    items.push([itemHeader, binaryLength ? readBinary(binaryLength) : readJson()]);\n  }\n\n  return [envelopeHeader, items];\n}\n\n/**\n * Creates attachment envelope items\n */\nexport function createAttachmentEnvelopeItem(\n  attachment: Attachment,\n  textEncoder?: TextEncoderInternal,\n): AttachmentItem {\n  const buffer = typeof attachment.data === 'string' ? encodeUTF8(attachment.data, textEncoder) : attachment.data;\n\n  return [\n    dropUndefinedKeys({\n      type: 'attachment',\n      length: buffer.length,\n      filename: attachment.filename,\n      content_type: attachment.contentType,\n      attachment_type: attachment.attachmentType,\n    }),\n    buffer,\n  ];\n}\n\nconst ITEM_TYPE_TO_DATA_CATEGORY_MAP: Record<EnvelopeItemType, DataCategory> = {\n  session: 'session',\n  sessions: 'session',\n  attachment: 'attachment',\n  transaction: 'transaction',\n  event: 'error',\n  client_report: 'internal',\n  user_report: 'default',\n  profile: 'profile',\n  replay_event: 'replay',\n  replay_recording: 'replay',\n};\n\n/**\n * Maps the type of an envelope item to a data category.\n */\nexport function envelopeItemTypeToDataCategory(type: EnvelopeItemType): DataCategory {\n  return ITEM_TYPE_TO_DATA_CATEGORY_MAP[type];\n}\n\n/** Extracts the minimal SDK info from from the metadata or an events */\nexport function getSdkMetadataForEnvelopeHeader(metadataOrEvent?: SdkMetadata | Event): SdkInfo | undefined {\n  if (!metadataOrEvent || !metadataOrEvent.sdk) {\n    return;\n  }\n  const { name, version } = metadataOrEvent.sdk;\n  return { name, version };\n}\n\n/**\n * Creates event envelope headers, based on event, sdk info and tunnel\n * Note: This function was extracted from the core package to make it available in Replay\n */\nexport function createEventEnvelopeHeaders(\n  event: Event,\n  sdkInfo: SdkInfo | undefined,\n  tunnel: string | undefined,\n  dsn: DsnComponents,\n): EventEnvelopeHeaders {\n  const dynamicSamplingContext = event.sdkProcessingMetadata && event.sdkProcessingMetadata.dynamicSamplingContext;\n\n  return {\n    event_id: event.event_id as string,\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && { dsn: dsnToString(dsn) }),\n    ...(event.type === 'transaction' &&\n      dynamicSamplingContext && {\n        trace: dropUndefinedKeys({ ...dynamicSamplingContext }),\n      }),\n  };\n}\n", "import type { ClientReport, ClientReportEnvelope, ClientReportItem } from '@sentry/types';\n\nimport { createEnvelope } from './envelope';\nimport { dateTimestampInSeconds } from './time';\n\n/**\n * Creates client report envelope\n * @param discarded_events An array of discard events\n * @param dsn A DSN that can be set on the header. Optional.\n */\nexport function createClientReportEnvelope(\n  discarded_events: ClientReport['discarded_events'],\n  dsn?: string,\n  timestamp?: number,\n): ClientReportEnvelope {\n  const clientReportItem: ClientReportItem = [\n    { type: 'client_report' },\n    {\n      timestamp: timestamp || dateTimestampInSeconds(),\n      discarded_events,\n    },\n  ];\n  return createEnvelope<ClientReportEnvelope>(dsn ? { dsn } : {}, [clientReportItem]);\n}\n", "import type { TransportMakeRequestResponse } from '@sentry/types';\n\n// Intentionally keeping the key broad, as we don't know for sure what rate limit headers get returned from backend\nexport type RateLimits = Record<string, number>;\n\nexport const DEFAULT_RETRY_AFTER = 60 * 1000; // 60 seconds\n\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param header string representation of 'Retry-After' header\n * @param now current unix timestamp\n *\n */\nexport function parseRetryAfterHeader(header: string, now: number = Date.now()): number {\n  const headerDelay = parseInt(`${header}`, 10);\n  if (!isNaN(headerDelay)) {\n    return headerDelay * 1000;\n  }\n\n  const headerDate = Date.parse(`${header}`);\n  if (!isNaN(headerDate)) {\n    return headerDate - now;\n  }\n\n  return DEFAULT_RETRY_AFTER;\n}\n\n/**\n * Gets the time that the given category is disabled until for rate limiting.\n * In case no category-specific limit is set but a general rate limit across all categories is active,\n * that time is returned.\n *\n * @return the time in ms that the category is disabled until or 0 if there's no active rate limit.\n */\nexport function disabledUntil(limits: RateLimits, category: string): number {\n  return limits[category] || limits.all || 0;\n}\n\n/**\n * Checks if a category is rate limited\n */\nexport function isRateLimited(limits: RateLimits, category: string, now: number = Date.now()): boolean {\n  return disabledUntil(limits, category) > now;\n}\n\n/**\n * Update ratelimits from incoming headers.\n *\n * @return the updated RateLimits object.\n */\nexport function updateRateLimits(\n  limits: RateLimits,\n  { statusCode, headers }: TransportMakeRequestResponse,\n  now: number = Date.now(),\n): RateLimits {\n  const updatedRateLimits: RateLimits = {\n    ...limits,\n  };\n\n  // \"The name is case-insensitive.\"\n  // https://developer.mozilla.org/en-US/docs/Web/API/Headers/get\n  const rateLimitHeader = headers && headers['x-sentry-rate-limits'];\n  const retryAfterHeader = headers && headers['retry-after'];\n\n  if (rateLimitHeader) {\n    /**\n     * rate limit headers are of the form\n     *     <header>,<header>,..\n     * where each <header> is of the form\n     *     <retry_after>: <categories>: <scope>: <reason_code>\n     * where\n     *     <retry_after> is a delay in seconds\n     *     <categories> is the event type(s) (error, transaction, etc) being rate limited and is of the form\n     *         <category>;<category>;...\n     *     <scope> is what's being limited (org, project, or key) - ignored by SDK\n     *     <reason_code> is an arbitrary string like \"org_quota\" - ignored by SDK\n     */\n    for (const limit of rateLimitHeader.trim().split(',')) {\n      const [retryAfter, categories] = limit.split(':', 2);\n      const headerDelay = parseInt(retryAfter, 10);\n      const delay = (!isNaN(headerDelay) ? headerDelay : 60) * 1000; // 60sec default\n      if (!categories) {\n        updatedRateLimits.all = now + delay;\n      } else {\n        for (const category of categories.split(';')) {\n          updatedRateLimits[category] = now + delay;\n        }\n      }\n    }\n  } else if (retryAfterHeader) {\n    updatedRateLimits.all = now + parseRetryAfterHeader(retryAfterHeader, now);\n  } else if (statusCode === 429) {\n    updatedRateLimits.all = now + 60 * 1000;\n  }\n\n  return updatedRateLimits;\n}\n", "import type { DynamicSamplingContext } from '@sentry/types';\n\nimport { isString } from './is';\nimport { logger } from './logger';\n\nexport const BAGGAGE_HEADER_NAME = 'baggage';\n\nexport const SENTRY_BAGGAGE_KEY_PREFIX = 'sentry-';\n\nexport const SENTRY_BAGGAGE_KEY_PREFIX_REGEX = /^sentry-/;\n\n/**\n * Max length of a serialized baggage string\n *\n * https://www.w3.org/TR/baggage/#limits\n */\nexport const MAX_BAGGAGE_STRING_LENGTH = 8192;\n\n/**\n * Takes a baggage header and turns it into Dynamic Sampling Context, by extracting all the \"sentry-\" prefixed values\n * from it.\n *\n * @param baggageHeader A very bread definition of a baggage header as it might appear in various frameworks.\n * @returns The Dynamic Sampling Context that was found on `baggageHeader`, if there was any, `undefined` otherwise.\n */\nexport function baggageHeaderToDynamicSamplingContext(\n  // Very liberal definition of what any incoming header might look like\n  baggageHeader: string | string[] | number | null | undefined | boolean,\n): Partial<DynamicSamplingContext> | undefined {\n  if (!isString(baggageHeader) && !Array.isArray(baggageHeader)) {\n    return undefined;\n  }\n\n  // Intermediary object to store baggage key value pairs of incoming baggage headers on.\n  // It is later used to read Sentry-DSC-values from.\n  let baggageObject: Readonly<Record<string, string>> = {};\n\n  if (Array.isArray(baggageHeader)) {\n    // Combine all baggage headers into one object containing the baggage values so we can later read the Sentry-DSC-values from it\n    baggageObject = baggageHeader.reduce<Record<string, string>>((acc, curr) => {\n      const currBaggageObject = baggageHeaderToObject(curr);\n      return {\n        ...acc,\n        ...currBaggageObject,\n      };\n    }, {});\n  } else {\n    // Return undefined if baggage header is an empty string (technically an empty baggage header is not spec conform but\n    // this is how we choose to handle it)\n    if (!baggageHeader) {\n      return undefined;\n    }\n\n    baggageObject = baggageHeaderToObject(baggageHeader);\n  }\n\n  // Read all \"sentry-\" prefixed values out of the baggage object and put it onto a dynamic sampling context object.\n  const dynamicSamplingContext = Object.entries(baggageObject).reduce<Record<string, string>>((acc, [key, value]) => {\n    if (key.match(SENTRY_BAGGAGE_KEY_PREFIX_REGEX)) {\n      const nonPrefixedKey = key.slice(SENTRY_BAGGAGE_KEY_PREFIX.length);\n      acc[nonPrefixedKey] = value;\n    }\n    return acc;\n  }, {});\n\n  // Only return a dynamic sampling context object if there are keys in it.\n  // A keyless object means there were no sentry values on the header, which means that there is no DSC.\n  if (Object.keys(dynamicSamplingContext).length > 0) {\n    return dynamicSamplingContext as Partial<DynamicSamplingContext>;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Turns a Dynamic Sampling Object into a baggage header by prefixing all the keys on the object with \"sentry-\".\n *\n * @param dynamicSamplingContext The Dynamic Sampling Context to turn into a header. For convenience and compatibility\n * with the `getDynamicSamplingContext` method on the Transaction class ,this argument can also be `undefined`. If it is\n * `undefined` the function will return `undefined`.\n * @returns a baggage header, created from `dynamicSamplingContext`, or `undefined` either if `dynamicSamplingContext`\n * was `undefined`, or if `dynamicSamplingContext` didn't contain any values.\n */\nexport function dynamicSamplingContextToSentryBaggageHeader(\n  // this also takes undefined for convenience and bundle size in other places\n  dynamicSamplingContext: Partial<DynamicSamplingContext>,\n): string | undefined {\n  // Prefix all DSC keys with \"sentry-\" and put them into a new object\n  const sentryPrefixedDSC = Object.entries(dynamicSamplingContext).reduce<Record<string, string>>(\n    (acc, [dscKey, dscValue]) => {\n      if (dscValue) {\n        acc[`${SENTRY_BAGGAGE_KEY_PREFIX}${dscKey}`] = dscValue;\n      }\n      return acc;\n    },\n    {},\n  );\n\n  return objectToBaggageHeader(sentryPrefixedDSC);\n}\n\n/**\n * Will parse a baggage header, which is a simple key-value map, into a flat object.\n *\n * @param baggageHeader The baggage header to parse.\n * @returns a flat object containing all the key-value pairs from `baggageHeader`.\n */\nfunction baggageHeaderToObject(baggageHeader: string): Record<string, string> {\n  return baggageHeader\n    .split(',')\n    .map(baggageEntry => baggageEntry.split('=').map(keyOrValue => decodeURIComponent(keyOrValue.trim())))\n    .reduce<Record<string, string>>((acc, [key, value]) => {\n      acc[key] = value;\n      return acc;\n    }, {});\n}\n\n/**\n * Turns a flat object (key-value pairs) into a baggage header, which is also just key-value pairs.\n *\n * @param object The object to turn into a baggage header.\n * @returns a baggage header string, or `undefined` if the object didn't have any values, since an empty baggage header\n * is not spec compliant.\n */\nfunction objectToBaggageHeader(object: Record<string, string>): string | undefined {\n  if (Object.keys(object).length === 0) {\n    // An empty baggage header is not spec compliant: We return undefined.\n    return undefined;\n  }\n\n  return Object.entries(object).reduce((baggageHeader, [objectKey, objectValue], currentIndex) => {\n    const baggageEntry = `${encodeURIComponent(objectKey)}=${encodeURIComponent(objectValue)}`;\n    const newBaggageHeader = currentIndex === 0 ? baggageEntry : `${baggageHeader},${baggageEntry}`;\n    if (newBaggageHeader.length > MAX_BAGGAGE_STRING_LENGTH) {\n      __DEBUG_BUILD__ &&\n        logger.warn(\n          `Not adding key: ${objectKey} with val: ${objectValue} to baggage header due to exceeding baggage size limits.`,\n        );\n      return baggageHeader;\n    } else {\n      return newBaggageHeader;\n    }\n  }, '');\n}\n", "export const DEFAULT_ENVIRONMENT = 'production';\n", "import type { SerializedSession, Session, SessionContext, SessionStatus } from '@sentry/types';\nimport { dropUndefinedKeys, timestampInSeconds, uuid4 } from '@sentry/utils';\n\n/**\n * Creates a new `Session` object by setting certain default parameters. If optional @param context\n * is passed, the passed properties are applied to the session object.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns a new `Session` object\n */\nexport function makeSession(context?: Omit<SessionContext, 'started' | 'status'>): Session {\n  // Both timestamp and started are in seconds since the UNIX epoch.\n  const startingTime = timestampInSeconds();\n\n  const session: Session = {\n    sid: uuid4(),\n    init: true,\n    timestamp: startingTime,\n    started: startingTime,\n    duration: 0,\n    status: 'ok',\n    errors: 0,\n    ignoreDuration: false,\n    toJSON: () => sessionToJSON(session),\n  };\n\n  if (context) {\n    updateSession(session, context);\n  }\n\n  return session;\n}\n\n/**\n * Updates a session object with the properties passed in the context.\n *\n * Note that this function mutates the passed object and returns void.\n * (Had to do this instead of returning a new and updated session because closing and sending a session\n * makes an update to the session after it was passed to the sending logic.\n * @see BaseClient.captureSession )\n *\n * @param session the `Session` to update\n * @param context the `SessionContext` holding the properties that should be updated in @param session\n */\n// eslint-disable-next-line complexity\nexport function updateSession(session: Session, context: SessionContext = {}): void {\n  if (context.user) {\n    if (!session.ipAddress && context.user.ip_address) {\n      session.ipAddress = context.user.ip_address;\n    }\n\n    if (!session.did && !context.did) {\n      session.did = context.user.id || context.user.email || context.user.username;\n    }\n  }\n\n  session.timestamp = context.timestamp || timestampInSeconds();\n\n  if (context.ignoreDuration) {\n    session.ignoreDuration = context.ignoreDuration;\n  }\n  if (context.sid) {\n    // Good enough uuid validation. — Kamil\n    session.sid = context.sid.length === 32 ? context.sid : uuid4();\n  }\n  if (context.init !== undefined) {\n    session.init = context.init;\n  }\n  if (!session.did && context.did) {\n    session.did = `${context.did}`;\n  }\n  if (typeof context.started === 'number') {\n    session.started = context.started;\n  }\n  if (session.ignoreDuration) {\n    session.duration = undefined;\n  } else if (typeof context.duration === 'number') {\n    session.duration = context.duration;\n  } else {\n    const duration = session.timestamp - session.started;\n    session.duration = duration >= 0 ? duration : 0;\n  }\n  if (context.release) {\n    session.release = context.release;\n  }\n  if (context.environment) {\n    session.environment = context.environment;\n  }\n  if (!session.ipAddress && context.ipAddress) {\n    session.ipAddress = context.ipAddress;\n  }\n  if (!session.userAgent && context.userAgent) {\n    session.userAgent = context.userAgent;\n  }\n  if (typeof context.errors === 'number') {\n    session.errors = context.errors;\n  }\n  if (context.status) {\n    session.status = context.status;\n  }\n}\n\n/**\n * Closes a session by setting its status and updating the session object with it.\n * Internally calls `updateSession` to update the passed session object.\n *\n * Note that this function mutates the passed session (@see updateSession for explanation).\n *\n * @param session the `Session` object to be closed\n * @param status the `SessionStatus` with which the session was closed. If you don't pass a status,\n *               this function will keep the previously set status, unless it was `'ok'` in which case\n *               it is changed to `'exited'`.\n */\nexport function closeSession(session: Session, status?: Exclude<SessionStatus, 'ok'>): void {\n  let context = {};\n  if (status) {\n    context = { status };\n  } else if (session.status === 'ok') {\n    context = { status: 'exited' };\n  }\n\n  updateSession(session, context);\n}\n\n/**\n * Serializes a passed session object to a JSON object with a slightly different structure.\n * This is necessary because the Sentry backend requires a slightly different schema of a session\n * than the one the JS SDKs use internally.\n *\n * @param session the session to be converted\n *\n * @returns a JSON object of the passed session\n */\nfunction sessionToJSON(session: Session): SerializedSession {\n  return dropUndefinedKeys({\n    sid: `${session.sid}`,\n    init: session.init,\n    // Make sure that sec is converted to ms for date constructor\n    started: new Date(session.started * 1000).toISOString(),\n    timestamp: new Date(session.timestamp * 1000).toISOString(),\n    status: session.status,\n    errors: session.errors,\n    did: typeof session.did === 'number' || typeof session.did === 'string' ? `${session.did}` : undefined,\n    duration: session.duration,\n    attrs: {\n      release: session.release,\n      environment: session.environment,\n      ip_address: session.ipAddress,\n      user_agent: session.userAgent,\n    },\n  });\n}\n", "/* eslint-disable max-lines */\nimport type {\n  Attachment,\n  Breadcrumb,\n  CaptureContext,\n  Context,\n  Contexts,\n  Event,\n  EventHint,\n  EventProcessor,\n  Extra,\n  Extras,\n  Primitive,\n  RequestSession,\n  Scope as ScopeInterface,\n  ScopeContext,\n  Session,\n  Severity,\n  SeverityLevel,\n  Span,\n  Transaction,\n  User,\n} from '@sentry/types';\nimport {\n  arrayify,\n  dateTimestampInSeconds,\n  getGlobalSingleton,\n  isPlainObject,\n  isThenable,\n  logger,\n  SyncPromise,\n} from '@sentry/utils';\n\nimport { updateSession } from './session';\n\n/**\n * Default value for maximum number of breadcrumbs added to an event.\n */\nconst DEFAULT_MAX_BREADCRUMBS = 100;\n\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\nexport class Scope implements ScopeInterface {\n  /** Flag if notifying is happening. */\n  protected _notifyingListeners: boolean;\n\n  /** Callback for client to receive scope changes. */\n  protected _scopeListeners: Array<(scope: Scope) => void>;\n\n  /** Callback list that will be called after {@link applyToEvent}. */\n  protected _eventProcessors: EventProcessor[];\n\n  /** Array of breadcrumbs. */\n  protected _breadcrumbs: Breadcrumb[];\n\n  /** User */\n  protected _user: User;\n\n  /** Tags */\n  protected _tags: { [key: string]: Primitive };\n\n  /** Extra */\n  protected _extra: Extras;\n\n  /** Contexts */\n  protected _contexts: Contexts;\n\n  /** Attachments */\n  protected _attachments: Attachment[];\n\n  /**\n   * A place to stash data which is needed at some point in the SDK's event processing pipeline but which shouldn't get\n   * sent to Sentry\n   */\n  protected _sdkProcessingMetadata: { [key: string]: unknown };\n\n  /** Fingerprint */\n  protected _fingerprint?: string[];\n\n  /** Severity */\n  // eslint-disable-next-line deprecation/deprecation\n  protected _level?: Severity | SeverityLevel;\n\n  /** Transaction Name */\n  protected _transactionName?: string;\n\n  /** Span */\n  protected _span?: Span;\n\n  /** Session */\n  protected _session?: Session;\n\n  /** Request Mode Session Status */\n  protected _requestSession?: RequestSession;\n\n  // NOTE: Any field which gets added here should get added not only to the constructor but also to the `clone` method.\n\n  public constructor() {\n    this._notifyingListeners = false;\n    this._scopeListeners = [];\n    this._eventProcessors = [];\n    this._breadcrumbs = [];\n    this._attachments = [];\n    this._user = {};\n    this._tags = {};\n    this._extra = {};\n    this._contexts = {};\n    this._sdkProcessingMetadata = {};\n  }\n\n  /**\n   * Inherit values from the parent scope.\n   * @param scope to clone.\n   */\n  public static clone(scope?: Scope): Scope {\n    const newScope = new Scope();\n    if (scope) {\n      newScope._breadcrumbs = [...scope._breadcrumbs];\n      newScope._tags = { ...scope._tags };\n      newScope._extra = { ...scope._extra };\n      newScope._contexts = { ...scope._contexts };\n      newScope._user = scope._user;\n      newScope._level = scope._level;\n      newScope._span = scope._span;\n      newScope._session = scope._session;\n      newScope._transactionName = scope._transactionName;\n      newScope._fingerprint = scope._fingerprint;\n      newScope._eventProcessors = [...scope._eventProcessors];\n      newScope._requestSession = scope._requestSession;\n      newScope._attachments = [...scope._attachments];\n      newScope._sdkProcessingMetadata = { ...scope._sdkProcessingMetadata };\n    }\n    return newScope;\n  }\n\n  /**\n   * Add internal on change listener. Used for sub SDKs that need to store the scope.\n   * @hidden\n   */\n  public addScopeListener(callback: (scope: Scope) => void): void {\n    this._scopeListeners.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addEventProcessor(callback: EventProcessor): this {\n    this._eventProcessors.push(callback);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setUser(user: User | null): this {\n    this._user = user || {};\n    if (this._session) {\n      updateSession(this._session, { user });\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getUser(): User | undefined {\n    return this._user;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getRequestSession(): RequestSession | undefined {\n    return this._requestSession;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setRequestSession(requestSession?: RequestSession): this {\n    this._requestSession = requestSession;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTags(tags: { [key: string]: Primitive }): this {\n    this._tags = {\n      ...this._tags,\n      ...tags,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTag(key: string, value: Primitive): this {\n    this._tags = { ...this._tags, [key]: value };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtras(extras: Extras): this {\n    this._extra = {\n      ...this._extra,\n      ...extras,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtra(key: string, extra: Extra): this {\n    this._extra = { ...this._extra, [key]: extra };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setFingerprint(fingerprint: string[]): this {\n    this._fingerprint = fingerprint;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setLevel(\n    // eslint-disable-next-line deprecation/deprecation\n    level: Severity | SeverityLevel,\n  ): this {\n    this._level = level;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTransactionName(name?: string): this {\n    this._transactionName = name;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setContext(key: string, context: Context | null): this {\n    if (context === null) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._contexts[key];\n    } else {\n      this._contexts[key] = context;\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setSpan(span?: Span): this {\n    this._span = span;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getSpan(): Span | undefined {\n    return this._span;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getTransaction(): Transaction | undefined {\n    // Often, this span (if it exists at all) will be a transaction, but it's not guaranteed to be. Regardless, it will\n    // have a pointer to the currently-active transaction.\n    const span = this.getSpan();\n    return span && span.transaction;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setSession(session?: Session): this {\n    if (!session) {\n      delete this._session;\n    } else {\n      this._session = session;\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getSession(): Session | undefined {\n    return this._session;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public update(captureContext?: CaptureContext): this {\n    if (!captureContext) {\n      return this;\n    }\n\n    if (typeof captureContext === 'function') {\n      const updatedScope = (captureContext as <T>(scope: T) => T)(this);\n      return updatedScope instanceof Scope ? updatedScope : this;\n    }\n\n    if (captureContext instanceof Scope) {\n      this._tags = { ...this._tags, ...captureContext._tags };\n      this._extra = { ...this._extra, ...captureContext._extra };\n      this._contexts = { ...this._contexts, ...captureContext._contexts };\n      if (captureContext._user && Object.keys(captureContext._user).length) {\n        this._user = captureContext._user;\n      }\n      if (captureContext._level) {\n        this._level = captureContext._level;\n      }\n      if (captureContext._fingerprint) {\n        this._fingerprint = captureContext._fingerprint;\n      }\n      if (captureContext._requestSession) {\n        this._requestSession = captureContext._requestSession;\n      }\n    } else if (isPlainObject(captureContext)) {\n      // eslint-disable-next-line no-param-reassign\n      captureContext = captureContext as ScopeContext;\n      this._tags = { ...this._tags, ...captureContext.tags };\n      this._extra = { ...this._extra, ...captureContext.extra };\n      this._contexts = { ...this._contexts, ...captureContext.contexts };\n      if (captureContext.user) {\n        this._user = captureContext.user;\n      }\n      if (captureContext.level) {\n        this._level = captureContext.level;\n      }\n      if (captureContext.fingerprint) {\n        this._fingerprint = captureContext.fingerprint;\n      }\n      if (captureContext.requestSession) {\n        this._requestSession = captureContext.requestSession;\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public clear(): this {\n    this._breadcrumbs = [];\n    this._tags = {};\n    this._extra = {};\n    this._user = {};\n    this._contexts = {};\n    this._level = undefined;\n    this._transactionName = undefined;\n    this._fingerprint = undefined;\n    this._requestSession = undefined;\n    this._span = undefined;\n    this._session = undefined;\n    this._notifyScopeListeners();\n    this._attachments = [];\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addBreadcrumb(breadcrumb: Breadcrumb, maxBreadcrumbs?: number): this {\n    const maxCrumbs = typeof maxBreadcrumbs === 'number' ? maxBreadcrumbs : DEFAULT_MAX_BREADCRUMBS;\n\n    // No data has been changed, so don't notify scope listeners\n    if (maxCrumbs <= 0) {\n      return this;\n    }\n\n    const mergedBreadcrumb = {\n      timestamp: dateTimestampInSeconds(),\n      ...breadcrumb,\n    };\n    this._breadcrumbs = [...this._breadcrumbs, mergedBreadcrumb].slice(-maxCrumbs);\n    this._notifyScopeListeners();\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getLastBreadcrumb(): Breadcrumb | undefined {\n    return this._breadcrumbs[this._breadcrumbs.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public clearBreadcrumbs(): this {\n    this._breadcrumbs = [];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addAttachment(attachment: Attachment): this {\n    this._attachments.push(attachment);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getAttachments(): Attachment[] {\n    return this._attachments;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public clearAttachments(): this {\n    this._attachments = [];\n    return this;\n  }\n\n  /**\n   * Applies data from the scope to the event and runs all event processors on it.\n   *\n   * @param event Event\n   * @param hint Object containing additional information about the original exception, for use by the event processors.\n   * @hidden\n   */\n  public applyToEvent(event: Event, hint: EventHint = {}): PromiseLike<Event | null> {\n    if (this._extra && Object.keys(this._extra).length) {\n      event.extra = { ...this._extra, ...event.extra };\n    }\n    if (this._tags && Object.keys(this._tags).length) {\n      event.tags = { ...this._tags, ...event.tags };\n    }\n    if (this._user && Object.keys(this._user).length) {\n      event.user = { ...this._user, ...event.user };\n    }\n    if (this._contexts && Object.keys(this._contexts).length) {\n      event.contexts = { ...this._contexts, ...event.contexts };\n    }\n    if (this._level) {\n      event.level = this._level;\n    }\n    if (this._transactionName) {\n      event.transaction = this._transactionName;\n    }\n\n    // We want to set the trace context for normal events only if there isn't already\n    // a trace context on the event. There is a product feature in place where we link\n    // errors with transaction and it relies on that.\n    if (this._span) {\n      event.contexts = { trace: this._span.getTraceContext(), ...event.contexts };\n      const transactionName = this._span.transaction && this._span.transaction.name;\n      if (transactionName) {\n        event.tags = { transaction: transactionName, ...event.tags };\n      }\n    }\n\n    this._applyFingerprint(event);\n\n    event.breadcrumbs = [...(event.breadcrumbs || []), ...this._breadcrumbs];\n    event.breadcrumbs = event.breadcrumbs.length > 0 ? event.breadcrumbs : undefined;\n\n    event.sdkProcessingMetadata = { ...event.sdkProcessingMetadata, ...this._sdkProcessingMetadata };\n\n    return this._notifyEventProcessors([...getGlobalEventProcessors(), ...this._eventProcessors], event, hint);\n  }\n\n  /**\n   * Add data which will be accessible during event processing but won't get sent to Sentry\n   */\n  public setSDKProcessingMetadata(newData: { [key: string]: unknown }): this {\n    this._sdkProcessingMetadata = { ...this._sdkProcessingMetadata, ...newData };\n\n    return this;\n  }\n\n  /**\n   * This will be called after {@link applyToEvent} is finished.\n   */\n  protected _notifyEventProcessors(\n    processors: EventProcessor[],\n    event: Event | null,\n    hint: EventHint,\n    index: number = 0,\n  ): PromiseLike<Event | null> {\n    return new SyncPromise<Event | null>((resolve, reject) => {\n      const processor = processors[index];\n      if (event === null || typeof processor !== 'function') {\n        resolve(event);\n      } else {\n        const result = processor({ ...event }, hint) as Event | null;\n\n        __DEBUG_BUILD__ &&\n          processor.id &&\n          result === null &&\n          logger.log(`Event processor \"${processor.id}\" dropped event`);\n\n        if (isThenable(result)) {\n          void result\n            .then(final => this._notifyEventProcessors(processors, final, hint, index + 1).then(resolve))\n            .then(null, reject);\n        } else {\n          void this._notifyEventProcessors(processors, result, hint, index + 1)\n            .then(resolve)\n            .then(null, reject);\n        }\n      }\n    });\n  }\n\n  /**\n   * This will be called on every set call.\n   */\n  protected _notifyScopeListeners(): void {\n    // We need this check for this._notifyingListeners to be able to work on scope during updates\n    // If this check is not here we'll produce endless recursion when something is done with the scope\n    // during the callback.\n    if (!this._notifyingListeners) {\n      this._notifyingListeners = true;\n      this._scopeListeners.forEach(callback => {\n        callback(this);\n      });\n      this._notifyingListeners = false;\n    }\n  }\n\n  /**\n   * Applies fingerprint from the scope to the event if there's one,\n   * uses message if there's one instead or get rid of empty fingerprint\n   */\n  private _applyFingerprint(event: Event): void {\n    // Make sure it's an array first and we actually have something in place\n    event.fingerprint = event.fingerprint ? arrayify(event.fingerprint) : [];\n\n    // If we have something on the scope, then merge it with event\n    if (this._fingerprint) {\n      event.fingerprint = event.fingerprint.concat(this._fingerprint);\n    }\n\n    // If we have no data at all, remove empty array default\n    if (event.fingerprint && !event.fingerprint.length) {\n      delete event.fingerprint;\n    }\n  }\n}\n\n/**\n * Returns the global event processors.\n */\nfunction getGlobalEventProcessors(): EventProcessor[] {\n  return getGlobalSingleton<EventProcessor[]>('globalEventProcessors', () => []);\n}\n\n/**\n * Add a EventProcessor to be kept globally.\n * @param callback EventProcessor to add\n */\nexport function addGlobalEventProcessor(callback: EventProcessor): void {\n  getGlobalEventProcessors().push(callback);\n}\n", "/* eslint-disable max-lines */\nimport type {\n  Breadcrumb,\n  BreadcrumbHint,\n  Client,\n  CustomSamplingContext,\n  Event,\n  EventHint,\n  Extra,\n  Extras,\n  Hub as HubInterface,\n  Integration,\n  IntegrationClass,\n  Primitive,\n  Session,\n  SessionContext,\n  Severity,\n  SeverityLevel,\n  Transaction,\n  TransactionContext,\n  User,\n} from '@sentry/types';\nimport {\n  consoleSandbox,\n  dateTimestampInSeconds,\n  getGlobalSingleton,\n  GLOBAL_OBJ,\n  isNodeEnv,\n  logger,\n  uuid4,\n} from '@sentry/utils';\n\nimport { DEFAULT_ENVIRONMENT } from './constants';\nimport { Scope } from './scope';\nimport { closeSession, makeSession, updateSession } from './session';\n\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be increased when the global interface\n * changes and new methods are introduced.\n *\n * @hidden\n */\nexport const API_VERSION = 4;\n\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nconst DEFAULT_BREADCRUMBS = 100;\n\n/**\n * A layer in the process stack.\n * @hidden\n */\nexport interface Layer {\n  client?: Client;\n  scope?: Scope;\n}\n\n/**\n * An object that contains a hub and maintains a scope stack.\n * @hidden\n */\nexport interface Carrier {\n  __SENTRY__?: {\n    hub?: Hub;\n    /**\n     * Extra Hub properties injected by various SDKs\n     */\n    integrations?: Integration[];\n    extensions?: {\n      /** Hack to prevent bundlers from breaking our usage of the domain package in the cross-platform Hub package */\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      domain?: { [key: string]: any };\n    } & {\n      /** Extension methods for the hub, which are bound to the current Hub instance */\n      // eslint-disable-next-line @typescript-eslint/ban-types\n      [key: string]: Function;\n    };\n  };\n}\n\n/**\n * @inheritDoc\n */\nexport class Hub implements HubInterface {\n  /** Is a {@link Layer}[] containing the client and scope */\n  private readonly _stack: Layer[] = [{}];\n\n  /** Contains the last event id of a captured event.  */\n  private _lastEventId?: string;\n\n  /**\n   * Creates a new instance of the hub, will push one {@link Layer} into the\n   * internal stack on creation.\n   *\n   * @param client bound to the hub.\n   * @param scope bound to the hub.\n   * @param version number, higher number means higher priority.\n   */\n  public constructor(client?: Client, scope: Scope = new Scope(), private readonly _version: number = API_VERSION) {\n    this.getStackTop().scope = scope;\n    if (client) {\n      this.bindClient(client);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public isOlderThan(version: number): boolean {\n    return this._version < version;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public bindClient(client?: Client): void {\n    const top = this.getStackTop();\n    top.client = client;\n    if (client && client.setupIntegrations) {\n      client.setupIntegrations();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public pushScope(): Scope {\n    // We want to clone the content of prev scope\n    const scope = Scope.clone(this.getScope());\n    this.getStack().push({\n      client: this.getClient(),\n      scope,\n    });\n    return scope;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public popScope(): boolean {\n    if (this.getStack().length <= 1) return false;\n    return !!this.getStack().pop();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public withScope(callback: (scope: Scope) => void): void {\n    const scope = this.pushScope();\n    try {\n      callback(scope);\n    } finally {\n      this.popScope();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getClient<C extends Client>(): C | undefined {\n    return this.getStackTop().client as C;\n  }\n\n  /** Returns the scope of the top stack. */\n  public getScope(): Scope | undefined {\n    return this.getStackTop().scope;\n  }\n\n  /** Returns the scope stack for domains or the process. */\n  public getStack(): Layer[] {\n    return this._stack;\n  }\n\n  /** Returns the topmost scope layer in the order domain > local > process. */\n  public getStackTop(): Layer {\n    return this._stack[this._stack.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureException(exception: unknown, hint?: EventHint): string {\n    const eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    const syntheticException = new Error('Sentry syntheticException');\n    this._withClient((client, scope) => {\n      client.captureException(\n        exception,\n        {\n          originalException: exception,\n          syntheticException,\n          ...hint,\n          event_id: eventId,\n        },\n        scope,\n      );\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureMessage(\n    message: string,\n    // eslint-disable-next-line deprecation/deprecation\n    level?: Severity | SeverityLevel,\n    hint?: EventHint,\n  ): string {\n    const eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    const syntheticException = new Error(message);\n    this._withClient((client, scope) => {\n      client.captureMessage(\n        message,\n        level,\n        {\n          originalException: message,\n          syntheticException,\n          ...hint,\n          event_id: eventId,\n        },\n        scope,\n      );\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureEvent(event: Event, hint?: EventHint): string {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n    if (!event.type) {\n      this._lastEventId = eventId;\n    }\n\n    this._withClient((client, scope) => {\n      client.captureEvent(event, { ...hint, event_id: eventId }, scope);\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public lastEventId(): string | undefined {\n    return this._lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addBreadcrumb(breadcrumb: Breadcrumb, hint?: BreadcrumbHint): void {\n    const { scope, client } = this.getStackTop();\n\n    if (!scope || !client) return;\n\n    const { beforeBreadcrumb = null, maxBreadcrumbs = DEFAULT_BREADCRUMBS } =\n      (client.getOptions && client.getOptions()) || {};\n\n    if (maxBreadcrumbs <= 0) return;\n\n    const timestamp = dateTimestampInSeconds();\n    const mergedBreadcrumb = { timestamp, ...breadcrumb };\n    const finalBreadcrumb = beforeBreadcrumb\n      ? (consoleSandbox(() => beforeBreadcrumb(mergedBreadcrumb, hint)) as Breadcrumb | null)\n      : mergedBreadcrumb;\n\n    if (finalBreadcrumb === null) return;\n\n    scope.addBreadcrumb(finalBreadcrumb, maxBreadcrumbs);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setUser(user: User | null): void {\n    const scope = this.getScope();\n    if (scope) scope.setUser(user);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTags(tags: { [key: string]: Primitive }): void {\n    const scope = this.getScope();\n    if (scope) scope.setTags(tags);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtras(extras: Extras): void {\n    const scope = this.getScope();\n    if (scope) scope.setExtras(extras);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTag(key: string, value: Primitive): void {\n    const scope = this.getScope();\n    if (scope) scope.setTag(key, value);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtra(key: string, extra: Extra): void {\n    const scope = this.getScope();\n    if (scope) scope.setExtra(key, extra);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public setContext(name: string, context: { [key: string]: any } | null): void {\n    const scope = this.getScope();\n    if (scope) scope.setContext(name, context);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public configureScope(callback: (scope: Scope) => void): void {\n    const { scope, client } = this.getStackTop();\n    if (scope && client) {\n      callback(scope);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public run(callback: (hub: Hub) => void): void {\n    const oldHub = makeMain(this);\n    try {\n      callback(this);\n    } finally {\n      makeMain(oldHub);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getIntegration<T extends Integration>(integration: IntegrationClass<T>): T | null {\n    const client = this.getClient();\n    if (!client) return null;\n    try {\n      return client.getIntegration(integration);\n    } catch (_oO) {\n      __DEBUG_BUILD__ && logger.warn(`Cannot retrieve integration ${integration.id} from the current Hub`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public startTransaction(context: TransactionContext, customSamplingContext?: CustomSamplingContext): Transaction {\n    return this._callExtensionMethod('startTransaction', context, customSamplingContext);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public traceHeaders(): { [key: string]: string } {\n    return this._callExtensionMethod<{ [key: string]: string }>('traceHeaders');\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureSession(endSession: boolean = false): void {\n    // both send the update and pull the session from the scope\n    if (endSession) {\n      return this.endSession();\n    }\n\n    // only send the update\n    this._sendSessionUpdate();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public endSession(): void {\n    const layer = this.getStackTop();\n    const scope = layer && layer.scope;\n    const session = scope && scope.getSession();\n    if (session) {\n      closeSession(session);\n    }\n    this._sendSessionUpdate();\n\n    // the session is over; take it off of the scope\n    if (scope) {\n      scope.setSession();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public startSession(context?: SessionContext): Session {\n    const { scope, client } = this.getStackTop();\n    const { release, environment = DEFAULT_ENVIRONMENT } = (client && client.getOptions()) || {};\n\n    // Will fetch userAgent if called from browser sdk\n    const { userAgent } = GLOBAL_OBJ.navigator || {};\n\n    const session = makeSession({\n      release,\n      environment,\n      ...(scope && { user: scope.getUser() }),\n      ...(userAgent && { userAgent }),\n      ...context,\n    });\n\n    if (scope) {\n      // End existing session if there's one\n      const currentSession = scope.getSession && scope.getSession();\n      if (currentSession && currentSession.status === 'ok') {\n        updateSession(currentSession, { status: 'exited' });\n      }\n      this.endSession();\n\n      // Afterwards we set the new session on the scope\n      scope.setSession(session);\n    }\n\n    return session;\n  }\n\n  /**\n   * Returns if default PII should be sent to Sentry and propagated in ourgoing requests\n   * when Tracing is used.\n   */\n  public shouldSendDefaultPii(): boolean {\n    const client = this.getClient();\n    const options = client && client.getOptions();\n    return Boolean(options && options.sendDefaultPii);\n  }\n\n  /**\n   * Sends the current Session on the scope\n   */\n  private _sendSessionUpdate(): void {\n    const { scope, client } = this.getStackTop();\n    if (!scope) return;\n\n    const session = scope.getSession();\n    if (session) {\n      if (client && client.captureSession) {\n        client.captureSession(session);\n      }\n    }\n  }\n\n  /**\n   * Internal helper function to call a method on the top client if it exists.\n   *\n   * @param method The method to call on the client.\n   * @param args Arguments to pass to the client function.\n   */\n  private _withClient(callback: (client: Client, scope: Scope | undefined) => void): void {\n    const { scope, client } = this.getStackTop();\n    if (client) {\n      callback(client, scope);\n    }\n  }\n\n  /**\n   * Calls global extension method and binding current instance to the function call\n   */\n  // @ts-ignore Function lacks ending return statement and return type does not include 'undefined'. ts(2366)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _callExtensionMethod<T>(method: string, ...args: any[]): T {\n    const carrier = getMainCarrier();\n    const sentry = carrier.__SENTRY__;\n    if (sentry && sentry.extensions && typeof sentry.extensions[method] === 'function') {\n      return sentry.extensions[method].apply(this, args);\n    }\n    __DEBUG_BUILD__ && logger.warn(`Extension method ${method} couldn't be found, doing nothing.`);\n  }\n}\n\n/**\n * Returns the global shim registry.\n *\n * FIXME: This function is problematic, because despite always returning a valid Carrier,\n * it has an optional `__SENTRY__` property, which then in turn requires us to always perform an unnecessary check\n * at the call-site. We always access the carrier through this function, so we can guarantee that `__SENTRY__` is there.\n **/\nexport function getMainCarrier(): Carrier {\n  GLOBAL_OBJ.__SENTRY__ = GLOBAL_OBJ.__SENTRY__ || {\n    extensions: {},\n    hub: undefined,\n  };\n  return GLOBAL_OBJ;\n}\n\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n */\nexport function makeMain(hub: Hub): Hub {\n  const registry = getMainCarrier();\n  const oldHub = getHubFromCarrier(registry);\n  setHubOnCarrier(registry, hub);\n  return oldHub;\n}\n\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n */\nexport function getCurrentHub(): Hub {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n\n  // If there's no hub, or its an old API, assign a new one\n  if (!hasHubOnCarrier(registry) || getHubFromCarrier(registry).isOlderThan(API_VERSION)) {\n    setHubOnCarrier(registry, new Hub());\n  }\n\n  // Prefer domains over global if they are there (applicable only to Node environment)\n  if (isNodeEnv()) {\n    return getHubFromActiveDomain(registry);\n  }\n  // Return hub that lives on a global object\n  return getHubFromCarrier(registry);\n}\n\n/**\n * Try to read the hub from an active domain, and fallback to the registry if one doesn't exist\n * @returns discovered hub\n */\nfunction getHubFromActiveDomain(registry: Carrier): Hub {\n  try {\n    const sentry = getMainCarrier().__SENTRY__;\n    const activeDomain = sentry && sentry.extensions && sentry.extensions.domain && sentry.extensions.domain.active;\n\n    // If there's no active domain, just return global hub\n    if (!activeDomain) {\n      return getHubFromCarrier(registry);\n    }\n\n    // If there's no hub on current domain, or it's an old API, assign a new one\n    if (!hasHubOnCarrier(activeDomain) || getHubFromCarrier(activeDomain).isOlderThan(API_VERSION)) {\n      const registryHubTopStack = getHubFromCarrier(registry).getStackTop();\n      setHubOnCarrier(activeDomain, new Hub(registryHubTopStack.client, Scope.clone(registryHubTopStack.scope)));\n    }\n\n    // Return hub that lives on a domain\n    return getHubFromCarrier(activeDomain);\n  } catch (_Oo) {\n    // Return hub that lives on a global object\n    return getHubFromCarrier(registry);\n  }\n}\n\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier: Carrier): boolean {\n  return !!(carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub);\n}\n\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\nexport function getHubFromCarrier(carrier: Carrier): Hub {\n  return getGlobalSingleton<Hub>('hub', () => new Hub(), carrier);\n}\n\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n * @returns A boolean indicating success or failure\n */\nexport function setHubOnCarrier(carrier: Carrier, hub: Hub): boolean {\n  if (!carrier) return false;\n  const __SENTRY__ = (carrier.__SENTRY__ = carrier.__SENTRY__ || {});\n  __SENTRY__.hub = hub;\n  return true;\n}\n", "import type { Options } from '@sentry/types';\n\nimport { getCurrentHub } from '../hub';\n\n// Treeshakable guard to remove all code related to tracing\ndeclare const __SENTRY_TRACING__: boolean | undefined;\n\n/**\n * Determines if tracing is currently enabled.\n *\n * Tracing is enabled when at least one of `tracesSampleRate` and `tracesSampler` is defined in the SDK config.\n */\nexport function hasTracingEnabled(\n  maybeOptions?: Pick<Options, 'tracesSampleRate' | 'tracesSampler' | 'enableTracing'> | undefined,\n): boolean {\n  if (typeof __SENTRY_TRACING__ === 'boolean' && !__SENTRY_TRACING__) {\n    return false;\n  }\n\n  const client = getCurrentHub().getClient();\n  const options = maybeOptions || (client && client.getOptions());\n  return !!options && (options.enableTracing || 'tracesSampleRate' in options || 'tracesSampler' in options);\n}\n", "/* eslint-disable max-lines */\nimport type {\n  Instrumenter,\n  Primitive,\n  Span as SpanInterface,\n  SpanContext,\n  TraceContext,\n  Transaction,\n} from '@sentry/types';\nimport { dropUndefinedKeys, logger, timestampWithMs, uuid4 } from '@sentry/utils';\n\n/**\n * Keeps track of finished spans for a given transaction\n * @internal\n * @hideconstructor\n * @hidden\n */\nexport class SpanRecorder {\n  public spans: Span[] = [];\n\n  private readonly _maxlen: number;\n\n  public constructor(maxlen: number = 1000) {\n    this._maxlen = maxlen;\n  }\n\n  /**\n   * This is just so that we don't run out of memory while recording a lot\n   * of spans. At some point we just stop and flush out the start of the\n   * trace tree (i.e.the first n spans with the smallest\n   * start_timestamp).\n   */\n  public add(span: Span): void {\n    if (this.spans.length > this._maxlen) {\n      span.spanRecorder = undefined;\n    } else {\n      this.spans.push(span);\n    }\n  }\n}\n\n/**\n * Span contains all data about a span\n */\nexport class Span implements SpanInterface {\n  /**\n   * @inheritDoc\n   */\n  public traceId: string = uuid4();\n\n  /**\n   * @inheritDoc\n   */\n  public spanId: string = uuid4().substring(16);\n\n  /**\n   * @inheritDoc\n   */\n  public parentSpanId?: string;\n\n  /**\n   * Internal keeper of the status\n   */\n  public status?: SpanStatusType | string;\n\n  /**\n   * @inheritDoc\n   */\n  public sampled?: boolean;\n\n  /**\n   * Timestamp in seconds when the span was created.\n   */\n  public startTimestamp: number = timestampWithMs();\n\n  /**\n   * Timestamp in seconds when the span ended.\n   */\n  public endTimestamp?: number;\n\n  /**\n   * @inheritDoc\n   */\n  public op?: string;\n\n  /**\n   * @inheritDoc\n   */\n  public description?: string;\n\n  /**\n   * @inheritDoc\n   */\n  public tags: { [key: string]: Primitive } = {};\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public data: { [key: string]: any } = {};\n\n  /**\n   * List of spans that were finalized\n   */\n  public spanRecorder?: SpanRecorder;\n\n  /**\n   * @inheritDoc\n   */\n  public transaction?: Transaction;\n\n  /**\n   * The instrumenter that created this span.\n   */\n  public instrumenter: Instrumenter = 'sentry';\n\n  /**\n   * You should never call the constructor manually, always use `Sentry.startTransaction()`\n   * or call `startChild()` on an existing span.\n   * @internal\n   * @hideconstructor\n   * @hidden\n   */\n  public constructor(spanContext?: SpanContext) {\n    if (!spanContext) {\n      return this;\n    }\n    if (spanContext.traceId) {\n      this.traceId = spanContext.traceId;\n    }\n    if (spanContext.spanId) {\n      this.spanId = spanContext.spanId;\n    }\n    if (spanContext.parentSpanId) {\n      this.parentSpanId = spanContext.parentSpanId;\n    }\n    // We want to include booleans as well here\n    if ('sampled' in spanContext) {\n      this.sampled = spanContext.sampled;\n    }\n    if (spanContext.op) {\n      this.op = spanContext.op;\n    }\n    if (spanContext.description) {\n      this.description = spanContext.description;\n    }\n    if (spanContext.data) {\n      this.data = spanContext.data;\n    }\n    if (spanContext.tags) {\n      this.tags = spanContext.tags;\n    }\n    if (spanContext.status) {\n      this.status = spanContext.status;\n    }\n    if (spanContext.startTimestamp) {\n      this.startTimestamp = spanContext.startTimestamp;\n    }\n    if (spanContext.endTimestamp) {\n      this.endTimestamp = spanContext.endTimestamp;\n    }\n    if (spanContext.instrumenter) {\n      this.instrumenter = spanContext.instrumenter;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public startChild(\n    spanContext?: Pick<SpanContext, Exclude<keyof SpanContext, 'sampled' | 'traceId' | 'parentSpanId'>>,\n  ): Span {\n    const childSpan = new Span({\n      ...spanContext,\n      parentSpanId: this.spanId,\n      sampled: this.sampled,\n      traceId: this.traceId,\n    });\n\n    childSpan.spanRecorder = this.spanRecorder;\n    if (childSpan.spanRecorder) {\n      childSpan.spanRecorder.add(childSpan);\n    }\n\n    childSpan.transaction = this.transaction;\n\n    if (__DEBUG_BUILD__ && childSpan.transaction) {\n      const opStr = (spanContext && spanContext.op) || '< unknown op >';\n      const nameStr = childSpan.transaction.name || '< unknown name >';\n      const idStr = childSpan.transaction.spanId;\n\n      const logMessage = `[Tracing] Starting '${opStr}' span on transaction '${nameStr}' (${idStr}).`;\n      childSpan.transaction.metadata.spanMetadata[childSpan.spanId] = { logMessage };\n      logger.log(logMessage);\n    }\n\n    return childSpan;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTag(key: string, value: Primitive): this {\n    this.tags = { ...this.tags, [key]: value };\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  public setData(key: string, value: any): this {\n    this.data = { ...this.data, [key]: value };\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setStatus(value: SpanStatusType): this {\n    this.status = value;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setHttpStatus(httpStatus: number): this {\n    this.setTag('http.status_code', String(httpStatus));\n    const spanStatus = spanStatusfromHttpCode(httpStatus);\n    if (spanStatus !== 'unknown_error') {\n      this.setStatus(spanStatus);\n    }\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public isSuccess(): boolean {\n    return this.status === 'ok';\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public finish(endTimestamp?: number): void {\n    if (\n      __DEBUG_BUILD__ &&\n      // Don't call this for transactions\n      this.transaction &&\n      this.transaction.spanId !== this.spanId\n    ) {\n      const { logMessage } = this.transaction.metadata.spanMetadata[this.spanId];\n      if (logMessage) {\n        logger.log((logMessage as string).replace('Starting', 'Finishing'));\n      }\n    }\n\n    this.endTimestamp = typeof endTimestamp === 'number' ? endTimestamp : timestampWithMs();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public toTraceparent(): string {\n    let sampledString = '';\n    if (this.sampled !== undefined) {\n      sampledString = this.sampled ? '-1' : '-0';\n    }\n    return `${this.traceId}-${this.spanId}${sampledString}`;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public toContext(): SpanContext {\n    return dropUndefinedKeys({\n      data: this.data,\n      description: this.description,\n      endTimestamp: this.endTimestamp,\n      op: this.op,\n      parentSpanId: this.parentSpanId,\n      sampled: this.sampled,\n      spanId: this.spanId,\n      startTimestamp: this.startTimestamp,\n      status: this.status,\n      tags: this.tags,\n      traceId: this.traceId,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public updateWithContext(spanContext: SpanContext): this {\n    this.data = spanContext.data || {};\n    this.description = spanContext.description;\n    this.endTimestamp = spanContext.endTimestamp;\n    this.op = spanContext.op;\n    this.parentSpanId = spanContext.parentSpanId;\n    this.sampled = spanContext.sampled;\n    this.spanId = spanContext.spanId || this.spanId;\n    this.startTimestamp = spanContext.startTimestamp || this.startTimestamp;\n    this.status = spanContext.status;\n    this.tags = spanContext.tags || {};\n    this.traceId = spanContext.traceId || this.traceId;\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getTraceContext(): TraceContext {\n    return dropUndefinedKeys({\n      data: Object.keys(this.data).length > 0 ? this.data : undefined,\n      description: this.description,\n      op: this.op,\n      parent_span_id: this.parentSpanId,\n      span_id: this.spanId,\n      status: this.status,\n      tags: Object.keys(this.tags).length > 0 ? this.tags : undefined,\n      trace_id: this.traceId,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public toJSON(): {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    data?: { [key: string]: any };\n    description?: string;\n    op?: string;\n    parent_span_id?: string;\n    span_id: string;\n    start_timestamp: number;\n    status?: string;\n    tags?: { [key: string]: Primitive };\n    timestamp?: number;\n    trace_id: string;\n  } {\n    return dropUndefinedKeys({\n      data: Object.keys(this.data).length > 0 ? this.data : undefined,\n      description: this.description,\n      op: this.op,\n      parent_span_id: this.parentSpanId,\n      span_id: this.spanId,\n      start_timestamp: this.startTimestamp,\n      status: this.status,\n      tags: Object.keys(this.tags).length > 0 ? this.tags : undefined,\n      timestamp: this.endTimestamp,\n      trace_id: this.traceId,\n    });\n  }\n}\n\nexport type SpanStatusType =\n  /** The operation completed successfully. */\n  | 'ok'\n  /** Deadline expired before operation could complete. */\n  | 'deadline_exceeded'\n  /** 401 Unauthorized (actually does mean unauthenticated according to RFC 7235) */\n  | 'unauthenticated'\n  /** 403 Forbidden */\n  | 'permission_denied'\n  /** 404 Not Found. Some requested entity (file or directory) was not found. */\n  | 'not_found'\n  /** 429 Too Many Requests */\n  | 'resource_exhausted'\n  /** Client specified an invalid argument. 4xx. */\n  | 'invalid_argument'\n  /** 501 Not Implemented */\n  | 'unimplemented'\n  /** 503 Service Unavailable */\n  | 'unavailable'\n  /** Other/generic 5xx. */\n  | 'internal_error'\n  /** Unknown. Any non-standard HTTP status code. */\n  | 'unknown_error'\n  /** The operation was cancelled (typically by the user). */\n  | 'cancelled'\n  /** Already exists (409) */\n  | 'already_exists'\n  /** Operation was rejected because the system is not in a state required for the operation's */\n  | 'failed_precondition'\n  /** The operation was aborted, typically due to a concurrency issue. */\n  | 'aborted'\n  /** Operation was attempted past the valid range. */\n  | 'out_of_range'\n  /** Unrecoverable data loss or corruption */\n  | 'data_loss';\n\n/**\n * Converts a HTTP status code into a {@link SpanStatusType}.\n *\n * @param httpStatus The HTTP response status code.\n * @returns The span status or unknown_error.\n */\nexport function spanStatusfromHttpCode(httpStatus: number): SpanStatusType {\n  if (httpStatus < 400 && httpStatus >= 100) {\n    return 'ok';\n  }\n\n  if (httpStatus >= 400 && httpStatus < 500) {\n    switch (httpStatus) {\n      case 401:\n        return 'unauthenticated';\n      case 403:\n        return 'permission_denied';\n      case 404:\n        return 'not_found';\n      case 409:\n        return 'already_exists';\n      case 413:\n        return 'failed_precondition';\n      case 429:\n        return 'resource_exhausted';\n      default:\n        return 'invalid_argument';\n    }\n  }\n\n  if (httpStatus >= 500 && httpStatus < 600) {\n    switch (httpStatus) {\n      case 501:\n        return 'unimplemented';\n      case 503:\n        return 'unavailable';\n      case 504:\n        return 'deadline_exceeded';\n      default:\n        return 'internal_error';\n    }\n  }\n\n  return 'unknown_error';\n}\n", "import type {\n  Context,\n  Contexts,\n  DynamicSamplingContext,\n  Event,\n  Measurements,\n  MeasurementUnit,\n  Transaction as TransactionInterface,\n  TransactionContext,\n  TransactionMetadata,\n} from '@sentry/types';\nimport { dropUndefinedKeys, logger } from '@sentry/utils';\n\nimport { DEFAULT_ENVIRONMENT } from '../constants';\nimport type { Hub } from '../hub';\nimport { getCurrentHub } from '../hub';\nimport { Span as SpanClass, SpanRecorder } from './span';\n\n/** JSDoc */\nexport class Transaction extends SpanClass implements TransactionInterface {\n  public metadata: TransactionMetadata;\n\n  /**\n   * The reference to the current hub.\n   */\n  public readonly _hub: Hub;\n\n  private _name: string;\n\n  private _measurements: Measurements = {};\n\n  private _contexts: Contexts = {};\n\n  private _trimEnd?: boolean;\n\n  private _frozenDynamicSamplingContext: Readonly<Partial<DynamicSamplingContext>> | undefined = undefined;\n\n  /**\n   * This constructor should never be called manually. Those instrumenting tracing should use\n   * `Sentry.startTransaction()`, and internal methods should use `hub.startTransaction()`.\n   * @internal\n   * @hideconstructor\n   * @hidden\n   */\n  public constructor(transactionContext: TransactionContext, hub?: Hub) {\n    super(transactionContext);\n\n    this._hub = hub || getCurrentHub();\n\n    this._name = transactionContext.name || '';\n\n    this.metadata = {\n      source: 'custom',\n      ...transactionContext.metadata,\n      spanMetadata: {},\n    };\n\n    this._trimEnd = transactionContext.trimEnd;\n\n    // this is because transactions are also spans, and spans have a transaction pointer\n    this.transaction = this;\n\n    // If Dynamic Sampling Context is provided during the creation of the transaction, we freeze it as it usually means\n    // there is incoming Dynamic Sampling Context. (Either through an incoming request, a baggage meta-tag, or other means)\n    const incomingDynamicSamplingContext = this.metadata.dynamicSamplingContext;\n    if (incomingDynamicSamplingContext) {\n      // We shallow copy this in case anything writes to the original reference of the passed in `dynamicSamplingContext`\n      this._frozenDynamicSamplingContext = { ...incomingDynamicSamplingContext };\n    }\n  }\n\n  /** Getter for `name` property */\n  public get name(): string {\n    return this._name;\n  }\n\n  /** Setter for `name` property, which also sets `source` as custom */\n  public set name(newName: string) {\n    this.setName(newName);\n  }\n\n  /**\n   * JSDoc\n   */\n  public setName(name: string, source: TransactionMetadata['source'] = 'custom'): void {\n    this._name = name;\n    this.metadata.source = source;\n  }\n\n  /**\n   * Attaches SpanRecorder to the span itself\n   * @param maxlen maximum number of spans that can be recorded\n   */\n  public initSpanRecorder(maxlen: number = 1000): void {\n    if (!this.spanRecorder) {\n      this.spanRecorder = new SpanRecorder(maxlen);\n    }\n    this.spanRecorder.add(this);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setContext(key: string, context: Context | null): void {\n    if (context === null) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._contexts[key];\n    } else {\n      this._contexts[key] = context;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setMeasurement(name: string, value: number, unit: MeasurementUnit = ''): void {\n    this._measurements[name] = { value, unit };\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setMetadata(newMetadata: Partial<TransactionMetadata>): void {\n    this.metadata = { ...this.metadata, ...newMetadata };\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public finish(endTimestamp?: number): string | undefined {\n    // This transaction is already finished, so we should not flush it again.\n    if (this.endTimestamp !== undefined) {\n      return undefined;\n    }\n\n    if (!this.name) {\n      __DEBUG_BUILD__ && logger.warn('Transaction has no name, falling back to `<unlabeled transaction>`.');\n      this.name = '<unlabeled transaction>';\n    }\n\n    // just sets the end timestamp\n    super.finish(endTimestamp);\n\n    const client = this._hub.getClient();\n    if (client && client.emit) {\n      client.emit('finishTransaction', this);\n    }\n\n    if (this.sampled !== true) {\n      // At this point if `sampled !== true` we want to discard the transaction.\n      __DEBUG_BUILD__ && logger.log('[Tracing] Discarding transaction because its trace was not chosen to be sampled.');\n\n      if (client) {\n        client.recordDroppedEvent('sample_rate', 'transaction');\n      }\n\n      return undefined;\n    }\n\n    const finishedSpans = this.spanRecorder ? this.spanRecorder.spans.filter(s => s !== this && s.endTimestamp) : [];\n\n    if (this._trimEnd && finishedSpans.length > 0) {\n      this.endTimestamp = finishedSpans.reduce((prev: SpanClass, current: SpanClass) => {\n        if (prev.endTimestamp && current.endTimestamp) {\n          return prev.endTimestamp > current.endTimestamp ? prev : current;\n        }\n        return prev;\n      }).endTimestamp;\n    }\n\n    const metadata = this.metadata;\n\n    const transaction: Event = {\n      contexts: {\n        ...this._contexts,\n        // We don't want to override trace context\n        trace: this.getTraceContext(),\n      },\n      spans: finishedSpans,\n      start_timestamp: this.startTimestamp,\n      tags: this.tags,\n      timestamp: this.endTimestamp,\n      transaction: this.name,\n      type: 'transaction',\n      sdkProcessingMetadata: {\n        ...metadata,\n        dynamicSamplingContext: this.getDynamicSamplingContext(),\n      },\n      ...(metadata.source && {\n        transaction_info: {\n          source: metadata.source,\n        },\n      }),\n    };\n\n    const hasMeasurements = Object.keys(this._measurements).length > 0;\n\n    if (hasMeasurements) {\n      __DEBUG_BUILD__ &&\n        logger.log(\n          '[Measurements] Adding measurements to transaction',\n          JSON.stringify(this._measurements, undefined, 2),\n        );\n      transaction.measurements = this._measurements;\n    }\n\n    __DEBUG_BUILD__ && logger.log(`[Tracing] Finishing ${this.op} transaction: ${this.name}.`);\n\n    return this._hub.captureEvent(transaction);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public toContext(): TransactionContext {\n    const spanContext = super.toContext();\n\n    return dropUndefinedKeys({\n      ...spanContext,\n      name: this.name,\n      trimEnd: this._trimEnd,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public updateWithContext(transactionContext: TransactionContext): this {\n    super.updateWithContext(transactionContext);\n\n    this.name = transactionContext.name || '';\n\n    this._trimEnd = transactionContext.trimEnd;\n\n    return this;\n  }\n\n  /**\n   * @inheritdoc\n   *\n   * @experimental\n   */\n  public getDynamicSamplingContext(): Readonly<Partial<DynamicSamplingContext>> {\n    if (this._frozenDynamicSamplingContext) {\n      return this._frozenDynamicSamplingContext;\n    }\n\n    const hub: Hub = this._hub || getCurrentHub();\n    const client = hub && hub.getClient();\n\n    if (!client) return {};\n\n    const { environment, release } = client.getOptions() || {};\n    const { publicKey: public_key } = client.getDsn() || {};\n\n    const maybeSampleRate = this.metadata.sampleRate;\n    const sample_rate = maybeSampleRate !== undefined ? maybeSampleRate.toString() : undefined;\n\n    const scope = hub.getScope();\n    const { segment: user_segment } = (scope && scope.getUser()) || {};\n\n    const source = this.metadata.source;\n\n    // We don't want to have a transaction name in the DSC if the source is \"url\" because URLs might contain PII\n    const transaction = source && source !== 'url' ? this.name : undefined;\n\n    const dsc = dropUndefinedKeys({\n      environment: environment || DEFAULT_ENVIRONMENT,\n      release,\n      transaction,\n      user_segment,\n      public_key,\n      trace_id: this.traceId,\n      sample_rate,\n    });\n\n    // Uncomment if we want to make DSC immutable\n    // this._frozenDynamicSamplingContext = dsc;\n\n    return dsc;\n  }\n}\n", "/* eslint-disable max-lines */\nimport type { TransactionContext } from '@sentry/types';\nimport { logger, timestampWithMs } from '@sentry/utils';\n\nimport type { Hub } from '../hub';\nimport type { Span } from './span';\nimport { SpanRecorder } from './span';\nimport { Transaction } from './transaction';\n\nexport const TRACING_DEFAULTS = {\n  idleTimeout: 1000,\n  finalTimeout: 30000,\n  heartbeatInterval: 5000,\n};\n\n/**\n * @inheritDoc\n */\nexport class IdleTransactionSpanRecorder extends SpanRecorder {\n  public constructor(\n    private readonly _pushActivity: (id: string) => void,\n    private readonly _popActivity: (id: string) => void,\n    public transactionSpanId: string,\n    maxlen?: number,\n  ) {\n    super(maxlen);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public add(span: Span): void {\n    // We should make sure we do not push and pop activities for\n    // the transaction that this span recorder belongs to.\n    if (span.spanId !== this.transactionSpanId) {\n      // We patch span.finish() to pop an activity after setting an endTimestamp.\n      span.finish = (endTimestamp?: number) => {\n        span.endTimestamp = typeof endTimestamp === 'number' ? endTimestamp : timestampWithMs();\n        this._popActivity(span.spanId);\n      };\n\n      // We should only push new activities if the span does not have an end timestamp.\n      if (span.endTimestamp === undefined) {\n        this._pushActivity(span.spanId);\n      }\n    }\n\n    super.add(span);\n  }\n}\n\nexport type BeforeFinishCallback = (transactionSpan: IdleTransaction, endTimestamp: number) => void;\n\n/**\n * An IdleTransaction is a transaction that automatically finishes. It does this by tracking child spans as activities.\n * You can have multiple IdleTransactions active, but if the `onScope` option is specified, the idle transaction will\n * put itself on the scope on creation.\n */\nexport class IdleTransaction extends Transaction {\n  // Activities store a list of active spans\n  public activities: Record<string, boolean> = {};\n\n  // Track state of activities in previous heartbeat\n  private _prevHeartbeatString: string | undefined;\n\n  // Amount of times heartbeat has counted. Will cause transaction to finish after 3 beats.\n  private _heartbeatCounter: number = 0;\n\n  // We should not use heartbeat if we finished a transaction\n  private _finished: boolean = false;\n\n  // Idle timeout was canceled and we should finish the transaction with the last span end.\n  private _idleTimeoutCanceledPermanently: boolean = false;\n\n  private readonly _beforeFinishCallbacks: BeforeFinishCallback[] = [];\n\n  /**\n   * Timer that tracks Transaction idleTimeout\n   */\n  private _idleTimeoutID: ReturnType<typeof setTimeout> | undefined;\n\n  public constructor(\n    transactionContext: TransactionContext,\n    private readonly _idleHub: Hub,\n    /**\n     * The time to wait in ms until the idle transaction will be finished. This timer is started each time\n     * there are no active spans on this transaction.\n     */\n    private readonly _idleTimeout: number = TRACING_DEFAULTS.idleTimeout,\n    /**\n     * The final value in ms that a transaction cannot exceed\n     */\n    private readonly _finalTimeout: number = TRACING_DEFAULTS.finalTimeout,\n    private readonly _heartbeatInterval: number = TRACING_DEFAULTS.heartbeatInterval,\n    // Whether or not the transaction should put itself on the scope when it starts and pop itself off when it ends\n    private readonly _onScope: boolean = false,\n  ) {\n    super(transactionContext, _idleHub);\n\n    if (_onScope) {\n      // There should only be one active transaction on the scope\n      clearActiveTransaction(_idleHub);\n\n      // We set the transaction here on the scope so error events pick up the trace\n      // context and attach it to the error.\n      __DEBUG_BUILD__ && logger.log(`Setting idle transaction on scope. Span ID: ${this.spanId}`);\n      _idleHub.configureScope(scope => scope.setSpan(this));\n    }\n\n    this._restartIdleTimeout();\n    setTimeout(() => {\n      if (!this._finished) {\n        this.setStatus('deadline_exceeded');\n        this.finish();\n      }\n    }, this._finalTimeout);\n  }\n\n  /** {@inheritDoc} */\n  public finish(endTimestamp: number = timestampWithMs()): string | undefined {\n    this._finished = true;\n    this.activities = {};\n\n    if (this.spanRecorder) {\n      __DEBUG_BUILD__ &&\n        logger.log('[Tracing] finishing IdleTransaction', new Date(endTimestamp * 1000).toISOString(), this.op);\n\n      for (const callback of this._beforeFinishCallbacks) {\n        callback(this, endTimestamp);\n      }\n\n      this.spanRecorder.spans = this.spanRecorder.spans.filter((span: Span) => {\n        // If we are dealing with the transaction itself, we just return it\n        if (span.spanId === this.spanId) {\n          return true;\n        }\n\n        // We cancel all pending spans with status \"cancelled\" to indicate the idle transaction was finished early\n        if (!span.endTimestamp) {\n          span.endTimestamp = endTimestamp;\n          span.setStatus('cancelled');\n          __DEBUG_BUILD__ &&\n            logger.log('[Tracing] cancelling span since transaction ended early', JSON.stringify(span, undefined, 2));\n        }\n\n        const keepSpan = span.startTimestamp < endTimestamp;\n        if (!keepSpan) {\n          __DEBUG_BUILD__ &&\n            logger.log(\n              '[Tracing] discarding Span since it happened after Transaction was finished',\n              JSON.stringify(span, undefined, 2),\n            );\n        }\n        return keepSpan;\n      });\n\n      __DEBUG_BUILD__ && logger.log('[Tracing] flushing IdleTransaction');\n    } else {\n      __DEBUG_BUILD__ && logger.log('[Tracing] No active IdleTransaction');\n    }\n\n    // if `this._onScope` is `true`, the transaction put itself on the scope when it started\n    if (this._onScope) {\n      clearActiveTransaction(this._idleHub);\n    }\n\n    return super.finish(endTimestamp);\n  }\n\n  /**\n   * Register a callback function that gets excecuted before the transaction finishes.\n   * Useful for cleanup or if you want to add any additional spans based on current context.\n   *\n   * This is exposed because users have no other way of running something before an idle transaction\n   * finishes.\n   */\n  public registerBeforeFinishCallback(callback: BeforeFinishCallback): void {\n    this._beforeFinishCallbacks.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public initSpanRecorder(maxlen?: number): void {\n    if (!this.spanRecorder) {\n      const pushActivity = (id: string): void => {\n        if (this._finished) {\n          return;\n        }\n        this._pushActivity(id);\n      };\n      const popActivity = (id: string): void => {\n        if (this._finished) {\n          return;\n        }\n        this._popActivity(id);\n      };\n\n      this.spanRecorder = new IdleTransactionSpanRecorder(pushActivity, popActivity, this.spanId, maxlen);\n\n      // Start heartbeat so that transactions do not run forever.\n      __DEBUG_BUILD__ && logger.log('Starting heartbeat');\n      this._pingHeartbeat();\n    }\n    this.spanRecorder.add(this);\n  }\n\n  /**\n   * Cancels the existing idle timeout, if there is one.\n   * @param restartOnChildSpanChange Default is `true`.\n   *                                 If set to false the transaction will end\n   *                                 with the last child span.\n   */\n  public cancelIdleTimeout(\n    endTimestamp?: Parameters<IdleTransaction['finish']>[0],\n    {\n      restartOnChildSpanChange,\n    }: {\n      restartOnChildSpanChange?: boolean;\n    } = {\n      restartOnChildSpanChange: true,\n    },\n  ): void {\n    if (this._idleTimeoutID) {\n      clearTimeout(this._idleTimeoutID);\n      this._idleTimeoutID = undefined;\n      this._idleTimeoutCanceledPermanently = restartOnChildSpanChange === false;\n\n      if (Object.keys(this.activities).length === 0 && this._idleTimeoutCanceledPermanently) {\n        this.finish(endTimestamp);\n      }\n    }\n  }\n\n  /**\n   * Restarts idle timeout, if there is no running idle timeout it will start one.\n   */\n  private _restartIdleTimeout(endTimestamp?: Parameters<IdleTransaction['finish']>[0]): void {\n    this.cancelIdleTimeout();\n    this._idleTimeoutID = setTimeout(() => {\n      if (!this._finished && Object.keys(this.activities).length === 0) {\n        this.finish(endTimestamp);\n      }\n    }, this._idleTimeout);\n  }\n\n  /**\n   * Start tracking a specific activity.\n   * @param spanId The span id that represents the activity\n   */\n  private _pushActivity(spanId: string): void {\n    this.cancelIdleTimeout();\n    __DEBUG_BUILD__ && logger.log(`[Tracing] pushActivity: ${spanId}`);\n    this.activities[spanId] = true;\n    __DEBUG_BUILD__ && logger.log('[Tracing] new activities count', Object.keys(this.activities).length);\n  }\n\n  /**\n   * Remove an activity from usage\n   * @param spanId The span id that represents the activity\n   */\n  private _popActivity(spanId: string): void {\n    if (this.activities[spanId]) {\n      __DEBUG_BUILD__ && logger.log(`[Tracing] popActivity ${spanId}`);\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this.activities[spanId];\n      __DEBUG_BUILD__ && logger.log('[Tracing] new activities count', Object.keys(this.activities).length);\n    }\n\n    if (Object.keys(this.activities).length === 0) {\n      const endTimestamp = timestampWithMs();\n      if (this._idleTimeoutCanceledPermanently) {\n        this.finish(endTimestamp);\n      } else {\n        // We need to add the timeout here to have the real endtimestamp of the transaction\n        // Remember timestampWithMs is in seconds, timeout is in ms\n        this._restartIdleTimeout(endTimestamp + this._idleTimeout / 1000);\n      }\n    }\n  }\n\n  /**\n   * Checks when entries of this.activities are not changing for 3 beats.\n   * If this occurs we finish the transaction.\n   */\n  private _beat(): void {\n    // We should not be running heartbeat if the idle transaction is finished.\n    if (this._finished) {\n      return;\n    }\n\n    const heartbeatString = Object.keys(this.activities).join('');\n\n    if (heartbeatString === this._prevHeartbeatString) {\n      this._heartbeatCounter++;\n    } else {\n      this._heartbeatCounter = 1;\n    }\n\n    this._prevHeartbeatString = heartbeatString;\n\n    if (this._heartbeatCounter >= 3) {\n      __DEBUG_BUILD__ && logger.log('[Tracing] Transaction finished because of no change for 3 heart beats');\n      this.setStatus('deadline_exceeded');\n      this.finish();\n    } else {\n      this._pingHeartbeat();\n    }\n  }\n\n  /**\n   * Pings the heartbeat\n   */\n  private _pingHeartbeat(): void {\n    __DEBUG_BUILD__ && logger.log(`pinging Heartbeat -> current counter: ${this._heartbeatCounter}`);\n    setTimeout(() => {\n      this._beat();\n    }, this._heartbeatInterval);\n  }\n}\n\n/**\n * Reset transaction on scope to `undefined`\n */\nfunction clearActiveTransaction(hub: Hub): void {\n  const scope = hub.getScope();\n  if (scope) {\n    const transaction = scope.getTransaction();\n    if (transaction) {\n      scope.setSpan(undefined);\n    }\n  }\n}\n", "import type { ClientOptions, CustomSamplingContext, Options, SamplingContext, TransactionContext } from '@sentry/types';\nimport { isNaN, logger } from '@sentry/utils';\n\nimport type { Hub } from '../hub';\nimport { getMainCarrier } from '../hub';\nimport { hasTracingEnabled } from '../utils/hasTracingEnabled';\nimport { IdleTransaction } from './idletransaction';\nimport { Transaction } from './transaction';\n\n/** Returns all trace headers that are currently on the top scope. */\nfunction traceHeaders(this: Hub): { [key: string]: string } {\n  const scope = this.getScope();\n  if (scope) {\n    const span = scope.getSpan();\n    if (span) {\n      return {\n        'sentry-trace': span.toTraceparent(),\n      };\n    }\n  }\n  return {};\n}\n\n/**\n * Makes a sampling decision for the given transaction and stores it on the transaction.\n *\n * Called every time a transaction is created. Only transactions which emerge with a `sampled` value of `true` will be\n * sent to Sentry.\n *\n * @param transaction: The transaction needing a sampling decision\n * @param options: The current client's options, so we can access `tracesSampleRate` and/or `tracesSampler`\n * @param samplingContext: Default and user-provided data which may be used to help make the decision\n *\n * @returns The given transaction with its `sampled` value set\n */\nfunction sample<T extends Transaction>(\n  transaction: T,\n  options: Pick<Options, 'tracesSampleRate' | 'tracesSampler' | 'enableTracing'>,\n  samplingContext: SamplingContext,\n): T {\n  // nothing to do if tracing is not enabled\n  if (!hasTracingEnabled(options)) {\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // if the user has forced a sampling decision by passing a `sampled` value in their transaction context, go with that\n  if (transaction.sampled !== undefined) {\n    transaction.setMetadata({\n      sampleRate: Number(transaction.sampled),\n    });\n    return transaction;\n  }\n\n  // we would have bailed already if neither `tracesSampler` nor `tracesSampleRate` nor `enableTracing` were defined, so one of these should\n  // work; prefer the hook if so\n  let sampleRate;\n  if (typeof options.tracesSampler === 'function') {\n    sampleRate = options.tracesSampler(samplingContext);\n    transaction.setMetadata({\n      sampleRate: Number(sampleRate),\n    });\n  } else if (samplingContext.parentSampled !== undefined) {\n    sampleRate = samplingContext.parentSampled;\n  } else if (typeof options.tracesSampleRate !== 'undefined') {\n    sampleRate = options.tracesSampleRate;\n    transaction.setMetadata({\n      sampleRate: Number(sampleRate),\n    });\n  } else {\n    // When `enableTracing === true`, we use a sample rate of 100%\n    sampleRate = 1;\n    transaction.setMetadata({\n      sampleRate,\n    });\n  }\n\n  // Since this is coming from the user (or from a function provided by the user), who knows what we might get. (The\n  // only valid values are booleans or numbers between 0 and 1.)\n  if (!isValidSampleRate(sampleRate)) {\n    __DEBUG_BUILD__ && logger.warn('[Tracing] Discarding transaction because of invalid sample rate.');\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // if the function returned 0 (or false), or if `tracesSampleRate` is 0, it's a sign the transaction should be dropped\n  if (!sampleRate) {\n    __DEBUG_BUILD__ &&\n      logger.log(\n        `[Tracing] Discarding transaction because ${\n          typeof options.tracesSampler === 'function'\n            ? 'tracesSampler returned 0 or false'\n            : 'a negative sampling decision was inherited or tracesSampleRate is set to 0'\n        }`,\n      );\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // Now we roll the dice. Math.random is inclusive of 0, but not of 1, so strict < is safe here. In case sampleRate is\n  // a boolean, the < comparison will cause it to be automatically cast to 1 if it's true and 0 if it's false.\n  transaction.sampled = Math.random() < (sampleRate as number | boolean);\n\n  // if we're not going to keep it, we're done\n  if (!transaction.sampled) {\n    __DEBUG_BUILD__ &&\n      logger.log(\n        `[Tracing] Discarding transaction because it's not included in the random sample (sampling rate = ${Number(\n          sampleRate,\n        )})`,\n      );\n    return transaction;\n  }\n\n  __DEBUG_BUILD__ && logger.log(`[Tracing] starting ${transaction.op} transaction - ${transaction.name}`);\n  return transaction;\n}\n\n/**\n * Checks the given sample rate to make sure it is valid type and value (a boolean, or a number between 0 and 1).\n */\nfunction isValidSampleRate(rate: unknown): boolean {\n  // we need to check NaN explicitly because it's of type 'number' and therefore wouldn't get caught by this typecheck\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  if (isNaN(rate) || !(typeof rate === 'number' || typeof rate === 'boolean')) {\n    __DEBUG_BUILD__ &&\n      logger.warn(\n        `[Tracing] Given sample rate is invalid. Sample rate must be a boolean or a number between 0 and 1. Got ${JSON.stringify(\n          rate,\n        )} of type ${JSON.stringify(typeof rate)}.`,\n      );\n    return false;\n  }\n\n  // in case sampleRate is a boolean, it will get automatically cast to 1 if it's true and 0 if it's false\n  if (rate < 0 || rate > 1) {\n    __DEBUG_BUILD__ &&\n      logger.warn(`[Tracing] Given sample rate is invalid. Sample rate must be between 0 and 1. Got ${rate}.`);\n    return false;\n  }\n  return true;\n}\n\n/**\n * Creates a new transaction and adds a sampling decision if it doesn't yet have one.\n *\n * The Hub.startTransaction method delegates to this method to do its work, passing the Hub instance in as `this`, as if\n * it had been called on the hub directly. Exists as a separate function so that it can be injected into the class as an\n * \"extension method.\"\n *\n * @param this: The Hub starting the transaction\n * @param transactionContext: Data used to configure the transaction\n * @param CustomSamplingContext: Optional data to be provided to the `tracesSampler` function (if any)\n *\n * @returns The new transaction\n *\n * @see {@link Hub.startTransaction}\n */\nfunction _startTransaction(\n  this: Hub,\n  transactionContext: TransactionContext,\n  customSamplingContext?: CustomSamplingContext,\n): Transaction {\n  const client = this.getClient();\n  const options: Partial<ClientOptions> = (client && client.getOptions()) || {};\n\n  const configInstrumenter = options.instrumenter || 'sentry';\n  const transactionInstrumenter = transactionContext.instrumenter || 'sentry';\n\n  if (configInstrumenter !== transactionInstrumenter) {\n    __DEBUG_BUILD__ &&\n      logger.error(\n        `A transaction was started with instrumenter=\\`${transactionInstrumenter}\\`, but the SDK is configured with the \\`${configInstrumenter}\\` instrumenter.\nThe transaction will not be sampled. Please use the ${configInstrumenter} instrumentation to start transactions.`,\n      );\n\n    transactionContext.sampled = false;\n  }\n\n  let transaction = new Transaction(transactionContext, this);\n  transaction = sample(transaction, options, {\n    parentSampled: transactionContext.parentSampled,\n    transactionContext,\n    ...customSamplingContext,\n  });\n  if (transaction.sampled) {\n    transaction.initSpanRecorder(options._experiments && (options._experiments.maxSpans as number));\n  }\n  if (client && client.emit) {\n    client.emit('startTransaction', transaction);\n  }\n  return transaction;\n}\n\n/**\n * Create new idle transaction.\n */\nexport function startIdleTransaction(\n  hub: Hub,\n  transactionContext: TransactionContext,\n  idleTimeout: number,\n  finalTimeout: number,\n  onScope?: boolean,\n  customSamplingContext?: CustomSamplingContext,\n  heartbeatInterval?: number,\n): IdleTransaction {\n  const client = hub.getClient();\n  const options: Partial<ClientOptions> = (client && client.getOptions()) || {};\n\n  let transaction = new IdleTransaction(transactionContext, hub, idleTimeout, finalTimeout, heartbeatInterval, onScope);\n  transaction = sample(transaction, options, {\n    parentSampled: transactionContext.parentSampled,\n    transactionContext,\n    ...customSamplingContext,\n  });\n  if (transaction.sampled) {\n    transaction.initSpanRecorder(options._experiments && (options._experiments.maxSpans as number));\n  }\n  if (client && client.emit) {\n    client.emit('startTransaction', transaction);\n  }\n  return transaction;\n}\n\n/**\n * Adds tracing extensions to the global hub.\n */\nexport function addTracingExtensions(): void {\n  const carrier = getMainCarrier();\n  if (!carrier.__SENTRY__) {\n    return;\n  }\n  carrier.__SENTRY__.extensions = carrier.__SENTRY__.extensions || {};\n  if (!carrier.__SENTRY__.extensions.startTransaction) {\n    carrier.__SENTRY__.extensions.startTransaction = _startTransaction;\n  }\n  if (!carrier.__SENTRY__.extensions.traceHeaders) {\n    carrier.__SENTRY__.extensions.traceHeaders = traceHeaders;\n  }\n}\n", "import type { Transaction } from '@sentry/types';\n\nimport type { Hub } from '../hub';\nimport { getCurrentHub } from '../hub';\n\n/**\n * The `extractTraceparentData` function and `TRACEPARENT_REGEXP` constant used\n * to be declared in this file. It was later moved into `@sentry/utils` as part of a\n * move to remove `@sentry/tracing` dependencies from `@sentry/node` (`extractTraceparentData`\n * is the only tracing function used by `@sentry/node`).\n *\n * These exports are kept here for backwards compatability's sake.\n *\n * TODO(v7): Reorganize these exports\n *\n * See https://github.com/getsentry/sentry-javascript/issues/4642 for more details.\n */\nexport { TRACEPARENT_REGEXP, extractTraceparentData } from '@sentry/utils';\n\n/** Grabs active transaction off scope, if any */\nexport function getActiveTransaction<T extends Transaction>(maybeHub?: Hub): T | undefined {\n  const hub = maybeHub || getCurrentHub();\n  const scope = hub.getScope();\n  return scope && (scope.getTransaction() as T | undefined);\n}\n\n// so it can be used in manual instrumentation without necessitating a hard dependency on @sentry/utils\nexport { stripUrlQueryAndFragment } from '@sentry/utils';\n", "import type {\n  Breadcrumb,\n  CaptureContext,\n  CustomSamplingContext,\n  Event,\n  EventHint,\n  Extra,\n  Extras,\n  Primitive,\n  Severity,\n  SeverityLevel,\n  TransactionContext,\n  User,\n} from '@sentry/types';\n\nimport type { Hub } from './hub';\nimport { getCurrentHub } from './hub';\nimport type { Scope } from './scope';\n\n// Note: All functions in this file are typed with a return value of `ReturnType<Hub[HUB_FUNCTION]>`,\n// where HUB_FUNCTION is some method on the Hub class.\n//\n// This is done to make sure the top level SDK methods stay in sync with the hub methods.\n// Although every method here has an explicit return type, some of them (that map to void returns) do not\n// contain `return` keywords. This is done to save on bundle size, as `return` is not minifiable.\n\n/**\n * Captures an exception event and sends it to Sentry.\n *\n * @param exception An exception-like object.\n * @param captureContext Additional scope data to apply to exception event.\n * @returns The generated eventId.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\nexport function captureException(exception: any, captureContext?: CaptureContext): ReturnType<Hub['captureException']> {\n  return getCurrentHub().captureException(exception, { captureContext });\n}\n\n/**\n * Captures a message event and sends it to Sentry.\n *\n * @param message The message to send to Sentry.\n * @param Severity Define the level of the message.\n * @returns The generated eventId.\n */\nexport function captureMessage(\n  message: string,\n  // eslint-disable-next-line deprecation/deprecation\n  captureContext?: CaptureContext | Severity | SeverityLevel,\n): ReturnType<Hub['captureMessage']> {\n  // This is necessary to provide explicit scopes upgrade, without changing the original\n  // arity of the `captureMessage(message, level)` method.\n  const level = typeof captureContext === 'string' ? captureContext : undefined;\n  const context = typeof captureContext !== 'string' ? { captureContext } : undefined;\n  return getCurrentHub().captureMessage(message, level, context);\n}\n\n/**\n * Captures a manually created event and sends it to Sentry.\n *\n * @param event The event to send to Sentry.\n * @returns The generated eventId.\n */\nexport function captureEvent(event: Event, hint?: EventHint): ReturnType<Hub['captureEvent']> {\n  return getCurrentHub().captureEvent(event, hint);\n}\n\n/**\n * Callback to set context information onto the scope.\n * @param callback Callback function that receives Scope.\n */\nexport function configureScope(callback: (scope: Scope) => void): ReturnType<Hub['configureScope']> {\n  getCurrentHub().configureScope(callback);\n}\n\n/**\n * Records a new breadcrumb which will be attached to future events.\n *\n * Breadcrumbs will be added to subsequent events to provide more context on\n * user's actions prior to an error or crash.\n *\n * @param breadcrumb The breadcrumb to record.\n */\nexport function addBreadcrumb(breadcrumb: Breadcrumb): ReturnType<Hub['addBreadcrumb']> {\n  getCurrentHub().addBreadcrumb(breadcrumb);\n}\n\n/**\n * Sets context data with the given name.\n * @param name of the context\n * @param context Any kind of data. This data will be normalized.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function setContext(name: string, context: { [key: string]: any } | null): ReturnType<Hub['setContext']> {\n  getCurrentHub().setContext(name, context);\n}\n\n/**\n * Set an object that will be merged sent as extra data with the event.\n * @param extras Extras object to merge into current context.\n */\nexport function setExtras(extras: Extras): ReturnType<Hub['setExtras']> {\n  getCurrentHub().setExtras(extras);\n}\n\n/**\n * Set key:value that will be sent as extra data with the event.\n * @param key String of extra\n * @param extra Any kind of data. This data will be normalized.\n */\nexport function setExtra(key: string, extra: Extra): ReturnType<Hub['setExtra']> {\n  getCurrentHub().setExtra(key, extra);\n}\n\n/**\n * Set an object that will be merged sent as tags data with the event.\n * @param tags Tags context object to merge into current context.\n */\nexport function setTags(tags: { [key: string]: Primitive }): ReturnType<Hub['setTags']> {\n  getCurrentHub().setTags(tags);\n}\n\n/**\n * Set key:value that will be sent as tags data with the event.\n *\n * Can also be used to unset a tag, by passing `undefined`.\n *\n * @param key String key of tag\n * @param value Value of tag\n */\nexport function setTag(key: string, value: Primitive): ReturnType<Hub['setTag']> {\n  getCurrentHub().setTag(key, value);\n}\n\n/**\n * Updates user context information for future events.\n *\n * @param user User context object to be set in the current context. Pass `null` to unset the user.\n */\nexport function setUser(user: User | null): ReturnType<Hub['setUser']> {\n  getCurrentHub().setUser(user);\n}\n\n/**\n * Creates a new scope with and executes the given operation within.\n * The scope is automatically removed once the operation\n * finishes or throws.\n *\n * This is essentially a convenience function for:\n *\n *     pushScope();\n *     callback();\n *     popScope();\n *\n * @param callback that will be enclosed into push/popScope.\n */\nexport function withScope(callback: (scope: Scope) => void): ReturnType<Hub['withScope']> {\n  getCurrentHub().withScope(callback);\n}\n\n/**\n * Starts a new `Transaction` and returns it. This is the entry point to manual tracing instrumentation.\n *\n * A tree structure can be built by adding child spans to the transaction, and child spans to other spans. To start a\n * new child span within the transaction or any span, call the respective `.startChild()` method.\n *\n * Every child span must be finished before the transaction is finished, otherwise the unfinished spans are discarded.\n *\n * The transaction must be finished with a call to its `.finish()` method, at which point the transaction with all its\n * finished child spans will be sent to Sentry.\n *\n * NOTE: This function should only be used for *manual* instrumentation. Auto-instrumentation should call\n * `startTransaction` directly on the hub.\n *\n * @param context Properties of the new `Transaction`.\n * @param customSamplingContext Information given to the transaction sampling function (along with context-dependent\n * default values). See {@link Options.tracesSampler}.\n *\n * @returns The transaction which was just started\n */\nexport function startTransaction(\n  context: TransactionContext,\n  customSamplingContext?: CustomSamplingContext,\n): ReturnType<Hub['startTransaction']> {\n  return getCurrentHub().startTransaction({ ...context }, customSamplingContext);\n}\n", "import type { ClientOptions, DsnComponents, DsnLike, SdkInfo } from '@sentry/types';\nimport { dsnToString, makeDsn, urlEncode } from '@sentry/utils';\n\nconst SENTRY_API_VERSION = '7';\n\n/** Returns the prefix to construct Sentry ingestion API endpoints. */\nfunction getBaseApiEndpoint(dsn: DsnComponents): string {\n  const protocol = dsn.protocol ? `${dsn.protocol}:` : '';\n  const port = dsn.port ? `:${dsn.port}` : '';\n  return `${protocol}//${dsn.host}${port}${dsn.path ? `/${dsn.path}` : ''}/api/`;\n}\n\n/** Returns the ingest API endpoint for target. */\nfunction _getIngestEndpoint(dsn: DsnComponents): string {\n  return `${getBaseApiEndpoint(dsn)}${dsn.projectId}/envelope/`;\n}\n\n/** Returns a URL-encoded string with auth config suitable for a query string. */\nfunction _encodedAuth(dsn: DsnComponents, sdkInfo: SdkInfo | undefined): string {\n  return urlEncode({\n    // We send only the minimum set of required information. See\n    // https://github.com/getsentry/sentry-javascript/issues/2572.\n    sentry_key: dsn.publicKey,\n    sentry_version: SENTRY_API_VERSION,\n    ...(sdkInfo && { sentry_client: `${sdkInfo.name}/${sdkInfo.version}` }),\n  });\n}\n\n/**\n * Returns the envelope endpoint URL with auth in the query string.\n *\n * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n */\nexport function getEnvelopeEndpointWithUrlEncodedAuth(\n  dsn: DsnComponents,\n  // TODO (v8): Remove `tunnelOrOptions` in favor of `options`, and use the substitute code below\n  // options: ClientOptions = {} as ClientOptions,\n  tunnelOrOptions: string | ClientOptions = {} as ClientOptions,\n): string {\n  // TODO (v8): Use this code instead\n  // const { tunnel, _metadata = {} } = options;\n  // return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, _metadata.sdk)}`;\n\n  const tunnel = typeof tunnelOrOptions === 'string' ? tunnelOrOptions : tunnelOrOptions.tunnel;\n  const sdkInfo =\n    typeof tunnelOrOptions === 'string' || !tunnelOrOptions._metadata ? undefined : tunnelOrOptions._metadata.sdk;\n\n  return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, sdkInfo)}`;\n}\n\n/** Returns the url to the report dialog endpoint. */\nexport function getReportDialogEndpoint(\n  dsnLike: DsnLike,\n  dialogOptions: {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    [key: string]: any;\n    user?: { name?: string; email?: string };\n  },\n): string {\n  const dsn = makeDsn(dsnLike);\n  const endpoint = `${getBaseApiEndpoint(dsn)}embed/error-page/`;\n\n  let encodedOptions = `dsn=${dsnToString(dsn)}`;\n  for (const key in dialogOptions) {\n    if (key === 'dsn') {\n      continue;\n    }\n\n    if (key === 'user') {\n      const user = dialogOptions.user;\n      if (!user) {\n        continue;\n      }\n      if (user.name) {\n        encodedOptions += `&name=${encodeURIComponent(user.name)}`;\n      }\n      if (user.email) {\n        encodedOptions += `&email=${encodeURIComponent(user.email)}`;\n      }\n    } else {\n      encodedOptions += `&${encodeURIComponent(key)}=${encodeURIComponent(dialogOptions[key] as string)}`;\n    }\n  }\n\n  return `${endpoint}?${encodedOptions}`;\n}\n", "import type {\n  DsnComponents,\n  Event,\n  EventEnvelope,\n  EventItem,\n  SdkInfo,\n  SdkMetadata,\n  Session,\n  SessionAggregates,\n  SessionEnvelope,\n  SessionItem,\n} from '@sentry/types';\nimport {\n  createEnvelope,\n  createEventEnvelopeHeaders,\n  dsnToString,\n  getSdkMetadataForEnvelopeHeader,\n} from '@sentry/utils';\n\n/**\n * Apply SdkInfo (name, version, packages, integrations) to the corresponding event key.\n * Merge with existing data if any.\n **/\nfunction enhanceEventWithSdkInfo(event: Event, sdkInfo?: SdkInfo): Event {\n  if (!sdkInfo) {\n    return event;\n  }\n  event.sdk = event.sdk || {};\n  event.sdk.name = event.sdk.name || sdkInfo.name;\n  event.sdk.version = event.sdk.version || sdkInfo.version;\n  event.sdk.integrations = [...(event.sdk.integrations || []), ...(sdkInfo.integrations || [])];\n  event.sdk.packages = [...(event.sdk.packages || []), ...(sdkInfo.packages || [])];\n  return event;\n}\n\n/** Creates an envelope from a Session */\nexport function createSessionEnvelope(\n  session: Session | SessionAggregates,\n  dsn: DsnComponents,\n  metadata?: SdkMetadata,\n  tunnel?: string,\n): SessionEnvelope {\n  const sdkInfo = getSdkMetadataForEnvelopeHeader(metadata);\n  const envelopeHeaders = {\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && { dsn: dsnToString(dsn) }),\n  };\n\n  const envelopeItem: SessionItem =\n    'aggregates' in session ? [{ type: 'sessions' }, session] : [{ type: 'session' }, session];\n\n  return createEnvelope<SessionEnvelope>(envelopeHeaders, [envelopeItem]);\n}\n\n/**\n * Create an Envelope from an event.\n */\nexport function createEventEnvelope(\n  event: Event,\n  dsn: DsnComponents,\n  metadata?: SdkMetadata,\n  tunnel?: string,\n): EventEnvelope {\n  const sdkInfo = getSdkMetadataForEnvelopeHeader(metadata);\n\n  /*\n    Note: Due to TS, event.type may be `replay_event`, theoretically.\n    In practice, we never call `createEventEnvelope` with `replay_event` type,\n    and we'd have to adjut a looot of types to make this work properly.\n    We want to avoid casting this around, as that could lead to bugs (e.g. when we add another type)\n    So the safe choice is to really guard against the replay_event type here.\n  */\n  const eventType = event.type && event.type !== 'replay_event' ? event.type : 'event';\n\n  enhanceEventWithSdkInfo(event, metadata && metadata.sdk);\n\n  const envelopeHeaders = createEventEnvelopeHeaders(event, sdkInfo, tunnel, dsn);\n\n  // Prevent this data (which, if it exists, was used in earlier steps in the processing pipeline) from being sent to\n  // sentry. (Note: Our use of this property comes and goes with whatever we might be debugging, whatever hacks we may\n  // have temporarily added, etc. Even if we don't happen to be using it at some point in the future, let's not get rid\n  // of this `delete`, lest we miss putting it back in the next time the property is in use.)\n  delete event.sdkProcessingMetadata;\n\n  const eventItem: EventItem = [{ type: eventType }, event];\n  return createEnvelope<EventEnvelope>(envelopeHeaders, [eventItem]);\n}\n", "import type { Integration, Options } from '@sentry/types';\nimport { arrayify, logger } from '@sentry/utils';\n\nimport { getCurrentHub } from './hub';\nimport { addGlobalEventProcessor } from './scope';\n\ndeclare module '@sentry/types' {\n  interface Integration {\n    isDefaultInstance?: boolean;\n  }\n}\n\nexport const installedIntegrations: string[] = [];\n\n/** Map of integrations assigned to a client */\nexport type IntegrationIndex = {\n  [key: string]: Integration;\n};\n\n/**\n * Remove duplicates from the given array, preferring the last instance of any duplicate. Not guaranteed to\n * preseve the order of integrations in the array.\n *\n * @private\n */\nfunction filterDuplicates(integrations: Integration[]): Integration[] {\n  const integrationsByName: { [key: string]: Integration } = {};\n\n  integrations.forEach(currentInstance => {\n    const { name } = currentInstance;\n\n    const existingInstance = integrationsByName[name];\n\n    // We want integrations later in the array to overwrite earlier ones of the same type, except that we never want a\n    // default instance to overwrite an existing user instance\n    if (existingInstance && !existingInstance.isDefaultInstance && currentInstance.isDefaultInstance) {\n      return;\n    }\n\n    integrationsByName[name] = currentInstance;\n  });\n\n  return Object.keys(integrationsByName).map(k => integrationsByName[k]);\n}\n\n/** Gets integrations to install */\nexport function getIntegrationsToSetup(options: Options): Integration[] {\n  const defaultIntegrations = options.defaultIntegrations || [];\n  const userIntegrations = options.integrations;\n\n  // We flag default instances, so that later we can tell them apart from any user-created instances of the same class\n  defaultIntegrations.forEach(integration => {\n    integration.isDefaultInstance = true;\n  });\n\n  let integrations: Integration[];\n\n  if (Array.isArray(userIntegrations)) {\n    integrations = [...defaultIntegrations, ...userIntegrations];\n  } else if (typeof userIntegrations === 'function') {\n    integrations = arrayify(userIntegrations(defaultIntegrations));\n  } else {\n    integrations = defaultIntegrations;\n  }\n\n  const finalIntegrations = filterDuplicates(integrations);\n\n  // The `Debug` integration prints copies of the `event` and `hint` which will be passed to `beforeSend` or\n  // `beforeSendTransaction`. It therefore has to run after all other integrations, so that the changes of all event\n  // processors will be reflected in the printed values. For lack of a more elegant way to guarantee that, we therefore\n  // locate it and, assuming it exists, pop it out of its current spot and shove it onto the end of the array.\n  const debugIndex = finalIntegrations.findIndex(integration => integration.name === 'Debug');\n  if (debugIndex !== -1) {\n    const [debugInstance] = finalIntegrations.splice(debugIndex, 1);\n    finalIntegrations.push(debugInstance);\n  }\n\n  return finalIntegrations;\n}\n\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nexport function setupIntegrations(integrations: Integration[]): IntegrationIndex {\n  const integrationIndex: IntegrationIndex = {};\n\n  integrations.forEach(integration => {\n    // guard against empty provided integrations\n    if (integration) {\n      setupIntegration(integration, integrationIndex);\n    }\n  });\n\n  return integrationIndex;\n}\n\n/** Setup a single integration.  */\nexport function setupIntegration(integration: Integration, integrationIndex: IntegrationIndex): void {\n  integrationIndex[integration.name] = integration;\n\n  if (installedIntegrations.indexOf(integration.name) === -1) {\n    integration.setupOnce(addGlobalEventProcessor, getCurrentHub);\n    installedIntegrations.push(integration.name);\n    __DEBUG_BUILD__ && logger.log(`Integration installed: ${integration.name}`);\n  }\n}\n", "import type { ClientOptions, Event, EventHint, StackParser } from '@sentry/types';\nimport { dateTimestampInSeconds, GLOBAL_OBJ, normalize, resolvedSyncPromise, truncate, uuid4 } from '@sentry/utils';\n\nimport { DEFAULT_ENVIRONMENT } from '../constants';\nimport { Scope } from '../scope';\n\n/**\n * Adds common information to events.\n *\n * The information includes release and environment from `options`,\n * breadcrumbs and context (extra, tags and user) from the scope.\n *\n * Information that is already present in the event is never overwritten. For\n * nested objects, such as the context, keys are merged.\n *\n * Note: This also triggers callbacks for `addGlobalEventProcessor`, but not `beforeSend`.\n *\n * @param event The original event.\n * @param hint May contain additional information about the original exception.\n * @param scope A scope containing event metadata.\n * @returns A new event with more information.\n * @hidden\n */\nexport function prepareEvent(\n  options: ClientOptions,\n  event: Event,\n  hint: EventHint,\n  scope?: Scope,\n): PromiseLike<Event | null> {\n  const { normalizeDepth = 3, normalizeMaxBreadth = 1_000 } = options;\n  const prepared: Event = {\n    ...event,\n    event_id: event.event_id || hint.event_id || uuid4(),\n    timestamp: event.timestamp || dateTimestampInSeconds(),\n  };\n  const integrations = hint.integrations || options.integrations.map(i => i.name);\n\n  applyClientOptions(prepared, options);\n  applyIntegrationsMetadata(prepared, integrations);\n  applyDebugMetadata(prepared, options.stackParser);\n\n  // If we have scope given to us, use it as the base for further modifications.\n  // This allows us to prevent unnecessary copying of data if `captureContext` is not provided.\n  let finalScope = scope;\n  if (hint.captureContext) {\n    finalScope = Scope.clone(finalScope).update(hint.captureContext);\n  }\n\n  // We prepare the result here with a resolved Event.\n  let result = resolvedSyncPromise<Event | null>(prepared);\n\n  // This should be the last thing called, since we want that\n  // {@link Hub.addEventProcessor} gets the finished prepared event.\n  //\n  // We need to check for the existence of `finalScope.getAttachments`\n  // because `getAttachments` can be undefined if users are using an older version\n  // of `@sentry/core` that does not have the `getAttachments` method.\n  // See: https://github.com/getsentry/sentry-javascript/issues/5229\n  if (finalScope) {\n    // Collect attachments from the hint and scope\n    if (finalScope.getAttachments) {\n      const attachments = [...(hint.attachments || []), ...finalScope.getAttachments()];\n\n      if (attachments.length) {\n        hint.attachments = attachments;\n      }\n    }\n\n    // In case we have a hub we reassign it.\n    result = finalScope.applyToEvent(prepared, hint);\n  }\n\n  return result.then(evt => {\n    if (typeof normalizeDepth === 'number' && normalizeDepth > 0) {\n      return normalizeEvent(evt, normalizeDepth, normalizeMaxBreadth);\n    }\n    return evt;\n  });\n}\n\n/**\n *  Enhances event using the client configuration.\n *  It takes care of all \"static\" values like environment, release and `dist`,\n *  as well as truncating overly long values.\n * @param event event instance to be enhanced\n */\nfunction applyClientOptions(event: Event, options: ClientOptions): void {\n  const { environment, release, dist, maxValueLength = 250 } = options;\n\n  if (!('environment' in event)) {\n    event.environment = 'environment' in options ? environment : DEFAULT_ENVIRONMENT;\n  }\n\n  if (event.release === undefined && release !== undefined) {\n    event.release = release;\n  }\n\n  if (event.dist === undefined && dist !== undefined) {\n    event.dist = dist;\n  }\n\n  if (event.message) {\n    event.message = truncate(event.message, maxValueLength);\n  }\n\n  const exception = event.exception && event.exception.values && event.exception.values[0];\n  if (exception && exception.value) {\n    exception.value = truncate(exception.value, maxValueLength);\n  }\n\n  const request = event.request;\n  if (request && request.url) {\n    request.url = truncate(request.url, maxValueLength);\n  }\n}\n\n/**\n * Applies debug metadata images to the event in order to apply source maps by looking up their debug ID.\n */\nexport function applyDebugMetadata(event: Event, stackParser: StackParser): void {\n  const debugIdMap = GLOBAL_OBJ._sentryDebugIds;\n\n  if (!debugIdMap) {\n    return;\n  }\n\n  // Build a map of abs_path -> debug_id\n  const absPathDebugIdMap = Object.keys(debugIdMap).reduce<Record<string, string>>((acc, debugIdStackTrace) => {\n    const parsedStack = stackParser(debugIdStackTrace);\n    for (const stackFrame of parsedStack) {\n      if (stackFrame.abs_path) {\n        acc[stackFrame.abs_path] = debugIdMap[debugIdStackTrace];\n        break;\n      }\n    }\n    return acc;\n  }, {});\n\n  // Get a Set of abs_paths in the stack trace\n  const errorAbsPaths = new Set<string>();\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event!.exception!.values!.forEach(exception => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      exception.stacktrace!.frames!.forEach(frame => {\n        if (frame.abs_path) {\n          errorAbsPaths.add(frame.abs_path);\n        }\n      });\n    });\n  } catch (e) {\n    // To save bundle size we're just try catching here instead of checking for the existence of all the different objects.\n  }\n\n  // Fill debug_meta information\n  event.debug_meta = event.debug_meta || {};\n  event.debug_meta.images = event.debug_meta.images || [];\n  const images = event.debug_meta.images;\n  errorAbsPaths.forEach(absPath => {\n    if (absPathDebugIdMap[absPath]) {\n      images.push({\n        type: 'sourcemap',\n        code_file: absPath,\n        debug_id: absPathDebugIdMap[absPath],\n      });\n    }\n  });\n}\n\n/**\n * This function adds all used integrations to the SDK info in the event.\n * @param event The event that will be filled with all integrations.\n */\nfunction applyIntegrationsMetadata(event: Event, integrationNames: string[]): void {\n  if (integrationNames.length > 0) {\n    event.sdk = event.sdk || {};\n    event.sdk.integrations = [...(event.sdk.integrations || []), ...integrationNames];\n  }\n}\n\n/**\n * Applies `normalize` function on necessary `Event` attributes to make them safe for serialization.\n * Normalized keys:\n * - `breadcrumbs.data`\n * - `user`\n * - `contexts`\n * - `extra`\n * @param event Event\n * @returns Normalized event\n */\nfunction normalizeEvent(event: Event | null, depth: number, maxBreadth: number): Event | null {\n  if (!event) {\n    return null;\n  }\n\n  const normalized: Event = {\n    ...event,\n    ...(event.breadcrumbs && {\n      breadcrumbs: event.breadcrumbs.map(b => ({\n        ...b,\n        ...(b.data && {\n          data: normalize(b.data, depth, maxBreadth),\n        }),\n      })),\n    }),\n    ...(event.user && {\n      user: normalize(event.user, depth, maxBreadth),\n    }),\n    ...(event.contexts && {\n      contexts: normalize(event.contexts, depth, maxBreadth),\n    }),\n    ...(event.extra && {\n      extra: normalize(event.extra, depth, maxBreadth),\n    }),\n  };\n\n  // event.contexts.trace stores information about a Transaction. Similarly,\n  // event.spans[] stores information about child Spans. Given that a\n  // Transaction is conceptually a Span, normalization should apply to both\n  // Transactions and Spans consistently.\n  // For now the decision is to skip normalization of Transactions and Spans,\n  // so this block overwrites the normalized event to add back the original\n  // Transaction information prior to normalization.\n  if (event.contexts && event.contexts.trace && normalized.contexts) {\n    normalized.contexts.trace = event.contexts.trace;\n\n    // event.contexts.trace.data may contain circular/dangerous data so we need to normalize it\n    if (event.contexts.trace.data) {\n      normalized.contexts.trace.data = normalize(event.contexts.trace.data, depth, maxBreadth);\n    }\n  }\n\n  // event.spans[].data may contain circular/dangerous data so we need to normalize it\n  if (event.spans) {\n    normalized.spans = event.spans.map(span => {\n      // We cannot use the spread operator here because `toJSON` on `span` is non-enumerable\n      if (span.data) {\n        span.data = normalize(span.data, depth, maxBreadth);\n      }\n      return span;\n    });\n  }\n\n  return normalized;\n}\n", "/* eslint-disable max-lines */\nimport type {\n  Client,\n  ClientOptions,\n  DataCategory,\n  DsnComponents,\n  Envelope,\n  ErrorEvent,\n  Event,\n  EventDropReason,\n  EventHint,\n  Integration,\n  IntegrationClass,\n  Outcome,\n  SdkMetadata,\n  Session,\n  SessionAggregates,\n  Severity,\n  SeverityLevel,\n  Transaction,\n  TransactionEvent,\n  Transport,\n} from '@sentry/types';\nimport {\n  addItemToEnvelope,\n  checkOrSetAlreadyCaught,\n  createAttachmentEnvelopeItem,\n  isPlainObject,\n  isPrimitive,\n  isThenable,\n  logger,\n  makeDsn,\n  rejectedSyncPromise,\n  resolvedSyncPromise,\n  SentryError,\n  SyncPromise,\n} from '@sentry/utils';\n\nimport { getEnvelopeEndpointWithUrlEncodedAuth } from './api';\nimport { createEventEnvelope, createSessionEnvelope } from './envelope';\nimport type { IntegrationIndex } from './integration';\nimport { setupIntegration, setupIntegrations } from './integration';\nimport type { Scope } from './scope';\nimport { updateSession } from './session';\nimport { prepareEvent } from './utils/prepareEvent';\n\nconst ALREADY_SEEN_ERROR = \"Not capturing exception because it's already been captured.\";\n\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event, it is passed through\n * {@link BaseClient._prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends BaseClient<NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(options);\n *   }\n *\n *   // ...\n * }\n */\nexport abstract class BaseClient<O extends ClientOptions> implements Client<O> {\n  /** Options passed to the SDK. */\n  protected readonly _options: O;\n\n  /** The client Dsn, if specified in options. Without this Dsn, the SDK will be disabled. */\n  protected readonly _dsn?: DsnComponents;\n\n  protected readonly _transport?: Transport;\n\n  /** Array of set up integrations. */\n  protected _integrations: IntegrationIndex = {};\n\n  /** Indicates whether this client's integrations have been set up. */\n  protected _integrationsInitialized: boolean = false;\n\n  /** Number of calls being processed */\n  protected _numProcessing: number = 0;\n\n  /** Holds flushable  */\n  private _outcomes: { [key: string]: number } = {};\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  private _hooks: Record<string, Function[]> = {};\n\n  /**\n   * Initializes this client instance.\n   *\n   * @param options Options for the client.\n   */\n  protected constructor(options: O) {\n    this._options = options;\n    if (options.dsn) {\n      this._dsn = makeDsn(options.dsn);\n      const url = getEnvelopeEndpointWithUrlEncodedAuth(this._dsn, options);\n      this._transport = options.transport({\n        recordDroppedEvent: this.recordDroppedEvent.bind(this),\n        ...options.transportOptions,\n        url,\n      });\n    } else {\n      __DEBUG_BUILD__ && logger.warn('No DSN provided, client will not do anything.');\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  public captureException(exception: any, hint?: EventHint, scope?: Scope): string | undefined {\n    // ensure we haven't captured this very object before\n    if (checkOrSetAlreadyCaught(exception)) {\n      __DEBUG_BUILD__ && logger.log(ALREADY_SEEN_ERROR);\n      return;\n    }\n\n    let eventId: string | undefined = hint && hint.event_id;\n\n    this._process(\n      this.eventFromException(exception, hint)\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureMessage(\n    message: string,\n    // eslint-disable-next-line deprecation/deprecation\n    level?: Severity | SeverityLevel,\n    hint?: EventHint,\n    scope?: Scope,\n  ): string | undefined {\n    let eventId: string | undefined = hint && hint.event_id;\n\n    const promisedEvent = isPrimitive(message)\n      ? this.eventFromMessage(String(message), level, hint)\n      : this.eventFromException(message, hint);\n\n    this._process(\n      promisedEvent\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureEvent(event: Event, hint?: EventHint, scope?: Scope): string | undefined {\n    // ensure we haven't captured this very object before\n    if (hint && hint.originalException && checkOrSetAlreadyCaught(hint.originalException)) {\n      __DEBUG_BUILD__ && logger.log(ALREADY_SEEN_ERROR);\n      return;\n    }\n\n    let eventId: string | undefined = hint && hint.event_id;\n\n    this._process(\n      this._captureEvent(event, hint, scope).then(result => {\n        eventId = result;\n      }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureSession(session: Session): void {\n    if (!this._isEnabled()) {\n      __DEBUG_BUILD__ && logger.warn('SDK not enabled, will not capture session.');\n      return;\n    }\n\n    if (!(typeof session.release === 'string')) {\n      __DEBUG_BUILD__ && logger.warn('Discarded session because of missing or non-string release');\n    } else {\n      this.sendSession(session);\n      // After sending, we set init false to indicate it's not the first occurrence\n      updateSession(session, { init: false });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getDsn(): DsnComponents | undefined {\n    return this._dsn;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getOptions(): O {\n    return this._options;\n  }\n\n  /**\n   * @see SdkMetadata in @sentry/types\n   *\n   * @return The metadata of the SDK\n   */\n  public getSdkMetadata(): SdkMetadata | undefined {\n    return this._options._metadata;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getTransport(): Transport | undefined {\n    return this._transport;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public flush(timeout?: number): PromiseLike<boolean> {\n    const transport = this._transport;\n    if (transport) {\n      return this._isClientDoneProcessing(timeout).then(clientFinished => {\n        return transport.flush(timeout).then(transportFlushed => clientFinished && transportFlushed);\n      });\n    } else {\n      return resolvedSyncPromise(true);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public close(timeout?: number): PromiseLike<boolean> {\n    return this.flush(timeout).then(result => {\n      this.getOptions().enabled = false;\n      return result;\n    });\n  }\n\n  /**\n   * Sets up the integrations\n   */\n  public setupIntegrations(): void {\n    if (this._isEnabled() && !this._integrationsInitialized) {\n      this._integrations = setupIntegrations(this._options.integrations);\n      this._integrationsInitialized = true;\n    }\n  }\n\n  /**\n   * Gets an installed integration by its `id`.\n   *\n   * @returns The installed integration or `undefined` if no integration with that `id` was installed.\n   */\n  public getIntegrationById(integrationId: string): Integration | undefined {\n    return this._integrations[integrationId];\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getIntegration<T extends Integration>(integration: IntegrationClass<T>): T | null {\n    try {\n      return (this._integrations[integration.id] as T) || null;\n    } catch (_oO) {\n      __DEBUG_BUILD__ && logger.warn(`Cannot retrieve integration ${integration.id} from the current Client`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addIntegration(integration: Integration): void {\n    setupIntegration(integration, this._integrations);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public sendEvent(event: Event, hint: EventHint = {}): void {\n    if (this._dsn) {\n      let env = createEventEnvelope(event, this._dsn, this._options._metadata, this._options.tunnel);\n\n      for (const attachment of hint.attachments || []) {\n        env = addItemToEnvelope(\n          env,\n          createAttachmentEnvelopeItem(\n            attachment,\n            this._options.transportOptions && this._options.transportOptions.textEncoder,\n          ),\n        );\n      }\n\n      this._sendEnvelope(env);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public sendSession(session: Session | SessionAggregates): void {\n    if (this._dsn) {\n      const env = createSessionEnvelope(session, this._dsn, this._options._metadata, this._options.tunnel);\n      this._sendEnvelope(env);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public recordDroppedEvent(reason: EventDropReason, category: DataCategory, _event?: Event): void {\n    // Note: we use `event` in replay, where we overwrite this hook.\n\n    if (this._options.sendClientReports) {\n      // We want to track each category (error, transaction, session, replay_event) separately\n      // but still keep the distinction between different type of outcomes.\n      // We could use nested maps, but it's much easier to read and type this way.\n      // A correct type for map-based implementation if we want to go that route\n      // would be `Partial<Record<SentryRequestType, Partial<Record<Outcome, number>>>>`\n      // With typescript 4.1 we could even use template literal types\n      const key = `${reason}:${category}`;\n      __DEBUG_BUILD__ && logger.log(`Adding outcome: \"${key}\"`);\n\n      // The following works because undefined + 1 === NaN and NaN is falsy\n      this._outcomes[key] = this._outcomes[key] + 1 || 1;\n    }\n  }\n\n  // Keep on() & emit() signatures in sync with types' client.ts interface\n\n  /** @inheritdoc */\n  public on(hook: 'startTransaction' | 'finishTransaction', callback: (transaction: Transaction) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'beforeEnvelope', callback: (envelope: Envelope) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: string, callback: unknown): void {\n    if (!this._hooks[hook]) {\n      this._hooks[hook] = [];\n    }\n\n    // @ts-ignore We assue the types are correct\n    this._hooks[hook].push(callback);\n  }\n\n  /** @inheritdoc */\n  public emit(hook: 'startTransaction' | 'finishTransaction', transaction: Transaction): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'beforeEnvelope', envelope: Envelope): void;\n\n  /** @inheritdoc */\n  public emit(hook: string, ...rest: unknown[]): void {\n    if (this._hooks[hook]) {\n      // @ts-ignore we cannot enforce the callback to match the hook\n      this._hooks[hook].forEach(callback => callback(...rest));\n    }\n  }\n\n  /** Updates existing session based on the provided event */\n  protected _updateSessionFromEvent(session: Session, event: Event): void {\n    let crashed = false;\n    let errored = false;\n    const exceptions = event.exception && event.exception.values;\n\n    if (exceptions) {\n      errored = true;\n\n      for (const ex of exceptions) {\n        const mechanism = ex.mechanism;\n        if (mechanism && mechanism.handled === false) {\n          crashed = true;\n          break;\n        }\n      }\n    }\n\n    // A session is updated and that session update is sent in only one of the two following scenarios:\n    // 1. Session with non terminal status and 0 errors + an error occurred -> Will set error count to 1 and send update\n    // 2. Session with non terminal status and 1 error + a crash occurred -> Will set status crashed and send update\n    const sessionNonTerminal = session.status === 'ok';\n    const shouldUpdateAndSend = (sessionNonTerminal && session.errors === 0) || (sessionNonTerminal && crashed);\n\n    if (shouldUpdateAndSend) {\n      updateSession(session, {\n        ...(crashed && { status: 'crashed' }),\n        errors: session.errors || Number(errored || crashed),\n      });\n      this.captureSession(session);\n    }\n  }\n\n  /**\n   * Determine if the client is finished processing. Returns a promise because it will wait `timeout` ms before saying\n   * \"no\" (resolving to `false`) in order to give the client a chance to potentially finish first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the client is still busy. Passing `0` (or not\n   * passing anything) will make the promise wait as long as it takes for processing to finish before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if processing is already done or finishes before the timeout, and\n   * `false` otherwise\n   */\n  protected _isClientDoneProcessing(timeout?: number): PromiseLike<boolean> {\n    return new SyncPromise(resolve => {\n      let ticked: number = 0;\n      const tick: number = 1;\n\n      const interval = setInterval(() => {\n        if (this._numProcessing == 0) {\n          clearInterval(interval);\n          resolve(true);\n        } else {\n          ticked += tick;\n          if (timeout && ticked >= timeout) {\n            clearInterval(interval);\n            resolve(false);\n          }\n        }\n      }, tick);\n    });\n  }\n\n  /** Determines whether this SDK is enabled and a valid Dsn is present. */\n  protected _isEnabled(): boolean {\n    return this.getOptions().enabled !== false && this._dsn !== undefined;\n  }\n\n  /**\n   * Adds common information to events.\n   *\n   * The information includes release and environment from `options`,\n   * breadcrumbs and context (extra, tags and user) from the scope.\n   *\n   * Information that is already present in the event is never overwritten. For\n   * nested objects, such as the context, keys are merged.\n   *\n   * @param event The original event.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A new event with more information.\n   */\n  protected _prepareEvent(event: Event, hint: EventHint, scope?: Scope): PromiseLike<Event | null> {\n    const options = this.getOptions();\n    const integrations = Object.keys(this._integrations);\n    if (!hint.integrations && integrations.length > 0) {\n      hint.integrations = integrations;\n    }\n    return prepareEvent(options, event, hint, scope);\n  }\n\n  /**\n   * Processes the event and logs an error in case of rejection\n   * @param event\n   * @param hint\n   * @param scope\n   */\n  protected _captureEvent(event: Event, hint: EventHint = {}, scope?: Scope): PromiseLike<string | undefined> {\n    return this._processEvent(event, hint, scope).then(\n      finalEvent => {\n        return finalEvent.event_id;\n      },\n      reason => {\n        if (__DEBUG_BUILD__) {\n          // If something's gone wrong, log the error as a warning. If it's just us having used a `SentryError` for\n          // control flow, log just the message (no stack) as a log-level log.\n          const sentryError = reason as SentryError;\n          if (sentryError.logLevel === 'log') {\n            logger.log(sentryError.message);\n          } else {\n            logger.warn(sentryError);\n          }\n        }\n        return undefined;\n      },\n    );\n  }\n\n  /**\n   * Processes an event (either error or message) and sends it to Sentry.\n   *\n   * This also adds breadcrumbs and context information to the event. However,\n   * platform specific meta data (such as the User's IP address) must be added\n   * by the SDK implementor.\n   *\n   *\n   * @param event The event to send to Sentry.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n   */\n  protected _processEvent(event: Event, hint: EventHint, scope?: Scope): PromiseLike<Event> {\n    const options = this.getOptions();\n    const { sampleRate } = options;\n\n    if (!this._isEnabled()) {\n      return rejectedSyncPromise(new SentryError('SDK not enabled, will not capture event.', 'log'));\n    }\n\n    const isTransaction = isTransactionEvent(event);\n    const isError = isErrorEvent(event);\n    const eventType = event.type || 'error';\n    const beforeSendLabel = `before send for type \\`${eventType}\\``;\n\n    // 1.0 === 100% events are sent\n    // 0.0 === 0% events are sent\n    // Sampling for transaction happens somewhere else\n    if (isError && typeof sampleRate === 'number' && Math.random() > sampleRate) {\n      this.recordDroppedEvent('sample_rate', 'error', event);\n      return rejectedSyncPromise(\n        new SentryError(\n          `Discarding event because it's not included in the random sample (sampling rate = ${sampleRate})`,\n          'log',\n        ),\n      );\n    }\n\n    const dataCategory: DataCategory = eventType === 'replay_event' ? 'replay' : eventType;\n\n    return this._prepareEvent(event, hint, scope)\n      .then(prepared => {\n        if (prepared === null) {\n          this.recordDroppedEvent('event_processor', dataCategory, event);\n          throw new SentryError('An event processor returned `null`, will not send event.', 'log');\n        }\n\n        const isInternalException = hint.data && (hint.data as { __sentry__: boolean }).__sentry__ === true;\n        if (isInternalException) {\n          return prepared;\n        }\n\n        const result = processBeforeSend(options, prepared, hint);\n        return _validateBeforeSendResult(result, beforeSendLabel);\n      })\n      .then(processedEvent => {\n        if (processedEvent === null) {\n          this.recordDroppedEvent('before_send', dataCategory, event);\n          throw new SentryError(`${beforeSendLabel} returned \\`null\\`, will not send event.`, 'log');\n        }\n\n        const session = scope && scope.getSession();\n        if (!isTransaction && session) {\n          this._updateSessionFromEvent(session, processedEvent);\n        }\n\n        // None of the Sentry built event processor will update transaction name,\n        // so if the transaction name has been changed by an event processor, we know\n        // it has to come from custom event processor added by a user\n        const transactionInfo = processedEvent.transaction_info;\n        if (isTransaction && transactionInfo && processedEvent.transaction !== event.transaction) {\n          const source = 'custom';\n          processedEvent.transaction_info = {\n            ...transactionInfo,\n            source,\n          };\n        }\n\n        this.sendEvent(processedEvent, hint);\n        return processedEvent;\n      })\n      .then(null, reason => {\n        if (reason instanceof SentryError) {\n          throw reason;\n        }\n\n        this.captureException(reason, {\n          data: {\n            __sentry__: true,\n          },\n          originalException: reason,\n        });\n        throw new SentryError(\n          `Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\\nReason: ${reason}`,\n        );\n      });\n  }\n\n  /**\n   * Occupies the client with processing and event\n   */\n  protected _process<T>(promise: PromiseLike<T>): void {\n    this._numProcessing++;\n    void promise.then(\n      value => {\n        this._numProcessing--;\n        return value;\n      },\n      reason => {\n        this._numProcessing--;\n        return reason;\n      },\n    );\n  }\n\n  /**\n   * @inheritdoc\n   */\n  protected _sendEnvelope(envelope: Envelope): void {\n    if (this._transport && this._dsn) {\n      this._transport.send(envelope).then(null, reason => {\n        __DEBUG_BUILD__ && logger.error('Error while sending event:', reason);\n      });\n    } else {\n      __DEBUG_BUILD__ && logger.error('Transport disabled');\n    }\n  }\n\n  /**\n   * Clears outcomes on this client and returns them.\n   */\n  protected _clearOutcomes(): Outcome[] {\n    const outcomes = this._outcomes;\n    this._outcomes = {};\n    return Object.keys(outcomes).map(key => {\n      const [reason, category] = key.split(':') as [EventDropReason, DataCategory];\n      return {\n        reason,\n        category,\n        quantity: outcomes[key],\n      };\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  public abstract eventFromException(_exception: any, _hint?: EventHint): PromiseLike<Event>;\n\n  /**\n   * @inheritDoc\n   */\n  public abstract eventFromMessage(\n    _message: string,\n    // eslint-disable-next-line deprecation/deprecation\n    _level?: Severity | SeverityLevel,\n    _hint?: EventHint,\n  ): PromiseLike<Event>;\n}\n\n/**\n * Verifies that return value of configured `beforeSend` or `beforeSendTransaction` is of expected type, and returns the value if so.\n */\nfunction _validateBeforeSendResult(\n  beforeSendResult: PromiseLike<Event | null> | Event | null,\n  beforeSendLabel: string,\n): PromiseLike<Event | null> | Event | null {\n  const invalidValueError = `${beforeSendLabel} must return \\`null\\` or a valid event.`;\n  if (isThenable(beforeSendResult)) {\n    return beforeSendResult.then(\n      event => {\n        if (!isPlainObject(event) && event !== null) {\n          throw new SentryError(invalidValueError);\n        }\n        return event;\n      },\n      e => {\n        throw new SentryError(`${beforeSendLabel} rejected with ${e}`);\n      },\n    );\n  } else if (!isPlainObject(beforeSendResult) && beforeSendResult !== null) {\n    throw new SentryError(invalidValueError);\n  }\n  return beforeSendResult;\n}\n\n/**\n * Process the matching `beforeSendXXX` callback.\n */\nfunction processBeforeSend(\n  options: ClientOptions,\n  event: Event,\n  hint: EventHint,\n): PromiseLike<Event | null> | Event | null {\n  const { beforeSend, beforeSendTransaction } = options;\n\n  if (isErrorEvent(event) && beforeSend) {\n    return beforeSend(event, hint);\n  }\n\n  if (isTransactionEvent(event) && beforeSendTransaction) {\n    return beforeSendTransaction(event, hint);\n  }\n\n  return event;\n}\n\nfunction isErrorEvent(event: Event): event is ErrorEvent {\n  return event.type === undefined;\n}\n\nfunction isTransactionEvent(event: Event): event is TransactionEvent {\n  return event.type === 'transaction';\n}\n", "import type { Client, ClientOptions } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport { getCurrentHub } from './hub';\n\n/** A class object that can instantiate Client objects. */\nexport type ClientClass<F extends Client, O extends ClientOptions> = new (options: O) => F;\n\n/**\n * Internal function to create a new SDK client instance. The client is\n * installed and then bound to the current scope.\n *\n * @param clientClass The client class to instantiate.\n * @param options Options to pass to the client.\n */\nexport function initAndBind<F extends Client, O extends ClientOptions>(\n  clientClass: ClientClass<F, O>,\n  options: O,\n): void {\n  if (options.debug === true) {\n    if (__DEBUG_BUILD__) {\n      logger.enable();\n    } else {\n      // use `console.warn` rather than `logger.warn` since by non-debug bundles have all `logger.x` statements stripped\n      // eslint-disable-next-line no-console\n      console.warn('[Sentry] Cannot initialize SDK with `debug` option using a non-debug bundle.');\n    }\n  }\n  const hub = getCurrentHub();\n  const scope = hub.getScope();\n  if (scope) {\n    scope.update(options.initialScope);\n  }\n\n  const client = new clientClass(options);\n  hub.bindClient(client);\n}\n", "import type {\n  Envelope,\n  EnvelopeItem,\n  EnvelopeItemType,\n  Event,\n  EventDropReason,\n  EventItem,\n  InternalBaseTransportOptions,\n  Transport,\n  TransportMakeRequestResponse,\n  TransportRequestExecutor,\n} from '@sentry/types';\nimport type { PromiseBuffer, RateLimits } from '@sentry/utils';\nimport {\n  createEnvelope,\n  envelopeItemTypeToDataCategory,\n  forEachEnvelopeItem,\n  isRateLimited,\n  logger,\n  makePromiseBuffer,\n  resolvedSyncPromise,\n  SentryError,\n  serializeEnvelope,\n  updateRateLimits,\n} from '@sentry/utils';\n\nexport const DEFAULT_TRANSPORT_BUFFER_SIZE = 30;\n\n/**\n * Creates an instance of a Sentry `Transport`\n *\n * @param options\n * @param makeRequest\n */\nexport function createTransport(\n  options: InternalBaseTransportOptions,\n  makeRequest: TransportRequestExecutor,\n  buffer: PromiseBuffer<void | TransportMakeRequestResponse> = makePromiseBuffer(\n    options.bufferSize || DEFAULT_TRANSPORT_BUFFER_SIZE,\n  ),\n): Transport {\n  let rateLimits: RateLimits = {};\n\n  const flush = (timeout?: number): PromiseLike<boolean> => buffer.drain(timeout);\n\n  function send(envelope: Envelope): PromiseLike<void | TransportMakeRequestResponse> {\n    const filteredEnvelopeItems: EnvelopeItem[] = [];\n\n    // Drop rate limited items from envelope\n    forEachEnvelopeItem(envelope, (item, type) => {\n      const envelopeItemDataCategory = envelopeItemTypeToDataCategory(type);\n      if (isRateLimited(rateLimits, envelopeItemDataCategory)) {\n        const event: Event | undefined = getEventForEnvelopeItem(item, type);\n        options.recordDroppedEvent('ratelimit_backoff', envelopeItemDataCategory, event);\n      } else {\n        filteredEnvelopeItems.push(item);\n      }\n    });\n\n    // Skip sending if envelope is empty after filtering out rate limited events\n    if (filteredEnvelopeItems.length === 0) {\n      return resolvedSyncPromise();\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const filteredEnvelope: Envelope = createEnvelope(envelope[0], filteredEnvelopeItems as any);\n\n    // Creates client report for each item in an envelope\n    const recordEnvelopeLoss = (reason: EventDropReason): void => {\n      forEachEnvelopeItem(filteredEnvelope, (item, type) => {\n        const event: Event | undefined = getEventForEnvelopeItem(item, type);\n        options.recordDroppedEvent(reason, envelopeItemTypeToDataCategory(type), event);\n      });\n    };\n\n    const requestTask = (): PromiseLike<void | TransportMakeRequestResponse> =>\n      makeRequest({ body: serializeEnvelope(filteredEnvelope, options.textEncoder) }).then(\n        response => {\n          // We don't want to throw on NOK responses, but we want to at least log them\n          if (response.statusCode !== undefined && (response.statusCode < 200 || response.statusCode >= 300)) {\n            __DEBUG_BUILD__ && logger.warn(`Sentry responded with status code ${response.statusCode} to sent event.`);\n          }\n\n          rateLimits = updateRateLimits(rateLimits, response);\n          return response;\n        },\n        error => {\n          recordEnvelopeLoss('network_error');\n          throw error;\n        },\n      );\n\n    return buffer.add(requestTask).then(\n      result => result,\n      error => {\n        if (error instanceof SentryError) {\n          __DEBUG_BUILD__ && logger.error('Skipped sending event because buffer is full.');\n          recordEnvelopeLoss('queue_overflow');\n          return resolvedSyncPromise();\n        } else {\n          throw error;\n        }\n      },\n    );\n  }\n\n  return {\n    send,\n    flush,\n  };\n}\n\nfunction getEventForEnvelopeItem(item: Envelope[1][number], type: EnvelopeItemType): Event | undefined {\n  if (type !== 'event' && type !== 'transaction') {\n    return undefined;\n  }\n\n  return Array.isArray(item) ? (item as EventItem)[1] : undefined;\n}\n", "export const SDK_VERSION = '7.42.0';\n", "export { FunctionToString } from './functiontostring.js';\nexport { InboundFilters } from './inboundfilters.js';\n//# sourceMappingURL=index.js.map\n", "import type { Integration, WrappedFunction } from '@sentry/types';\nimport { getOriginalFunction } from '@sentry/utils';\n\nlet originalFunctionToString: () => void;\n\n/** Patch toString calls to return proper name for wrapped functions */\nexport class FunctionToString implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'FunctionToString';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = FunctionToString.id;\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    originalFunctionToString = Function.prototype.toString;\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Function.prototype.toString = function (this: WrappedFunction, ...args: any[]): string {\n      const context = getOriginalFunction(this) || this;\n      return originalFunctionToString.apply(context, args);\n    };\n  }\n}\n", "import type { Event, EventProcessor, Hub, Integration, StackFrame } from '@sentry/types';\nimport { getEventDescription, logger, stringMatchesSomePattern } from '@sentry/utils';\n\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nconst DEFAULT_IGNORE_ERRORS = [/^Script error\\.?$/, /^Javascript error: Script error\\.? on line 0$/];\n\n/** Options for the InboundFilters integration */\nexport interface InboundFiltersOptions {\n  allowUrls: Array<string | RegExp>;\n  denyUrls: Array<string | RegExp>;\n  ignoreErrors: Array<string | RegExp>;\n  ignoreInternal: boolean;\n}\n\n/** Inbound filters configurable by the user */\nexport class InboundFilters implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'InboundFilters';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = InboundFilters.id;\n\n  public constructor(private readonly _options: Partial<InboundFiltersOptions> = {}) {}\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(addGlobalEventProcessor: (processor: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    const eventProcess: EventProcessor = (event: Event) => {\n      const hub = getCurrentHub();\n      if (hub) {\n        const self = hub.getIntegration(InboundFilters);\n        if (self) {\n          const client = hub.getClient();\n          const clientOptions = client ? client.getOptions() : {};\n          const options = _mergeOptions(self._options, clientOptions);\n          return _shouldDropEvent(event, options) ? null : event;\n        }\n      }\n      return event;\n    };\n\n    eventProcess.id = this.name;\n    addGlobalEventProcessor(eventProcess);\n  }\n}\n\n/** JSDoc */\nexport function _mergeOptions(\n  internalOptions: Partial<InboundFiltersOptions> = {},\n  clientOptions: Partial<InboundFiltersOptions> = {},\n): Partial<InboundFiltersOptions> {\n  return {\n    allowUrls: [...(internalOptions.allowUrls || []), ...(clientOptions.allowUrls || [])],\n    denyUrls: [...(internalOptions.denyUrls || []), ...(clientOptions.denyUrls || [])],\n    ignoreErrors: [\n      ...(internalOptions.ignoreErrors || []),\n      ...(clientOptions.ignoreErrors || []),\n      ...DEFAULT_IGNORE_ERRORS,\n    ],\n    ignoreInternal: internalOptions.ignoreInternal !== undefined ? internalOptions.ignoreInternal : true,\n  };\n}\n\n/** JSDoc */\nexport function _shouldDropEvent(event: Event, options: Partial<InboundFiltersOptions>): boolean {\n  if (options.ignoreInternal && _isSentryError(event)) {\n    __DEBUG_BUILD__ &&\n      logger.warn(`Event dropped due to being internal Sentry Error.\\nEvent: ${getEventDescription(event)}`);\n    return true;\n  }\n  if (_isIgnoredError(event, options.ignoreErrors)) {\n    __DEBUG_BUILD__ &&\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreErrors\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n    return true;\n  }\n  if (_isDeniedUrl(event, options.denyUrls)) {\n    __DEBUG_BUILD__ &&\n      logger.warn(\n        `Event dropped due to being matched by \\`denyUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  if (!_isAllowedUrl(event, options.allowUrls)) {\n    __DEBUG_BUILD__ &&\n      logger.warn(\n        `Event dropped due to not being matched by \\`allowUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  return false;\n}\n\nfunction _isIgnoredError(event: Event, ignoreErrors?: Array<string | RegExp>): boolean {\n  if (!ignoreErrors || !ignoreErrors.length) {\n    return false;\n  }\n\n  return _getPossibleEventMessages(event).some(message => stringMatchesSomePattern(message, ignoreErrors));\n}\n\nfunction _isDeniedUrl(event: Event, denyUrls?: Array<string | RegExp>): boolean {\n  // TODO: Use Glob instead?\n  if (!denyUrls || !denyUrls.length) {\n    return false;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? false : stringMatchesSomePattern(url, denyUrls);\n}\n\nfunction _isAllowedUrl(event: Event, allowUrls?: Array<string | RegExp>): boolean {\n  // TODO: Use Glob instead?\n  if (!allowUrls || !allowUrls.length) {\n    return true;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? true : stringMatchesSomePattern(url, allowUrls);\n}\n\nfunction _getPossibleEventMessages(event: Event): string[] {\n  if (event.message) {\n    return [event.message];\n  }\n  if (event.exception) {\n    try {\n      const { type = '', value = '' } = (event.exception.values && event.exception.values[0]) || {};\n      return [`${value}`, `${type}: ${value}`];\n    } catch (oO) {\n      __DEBUG_BUILD__ && logger.error(`Cannot extract message for event ${getEventDescription(event)}`);\n      return [];\n    }\n  }\n  return [];\n}\n\nfunction _isSentryError(event: Event): boolean {\n  try {\n    // @ts-ignore can't be a sentry error if undefined\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return event.exception.values[0].type === 'SentryError';\n  } catch (e) {\n    // ignore\n  }\n  return false;\n}\n\nfunction _getLastValidUrl(frames: StackFrame[] = []): string | null {\n  for (let i = frames.length - 1; i >= 0; i--) {\n    const frame = frames[i];\n\n    if (frame && frame.filename !== '<anonymous>' && frame.filename !== '[native code]') {\n      return frame.filename || null;\n    }\n  }\n\n  return null;\n}\n\nfunction _getEventFilterUrl(event: Event): string | null {\n  try {\n    let frames;\n    try {\n      // @ts-ignore we only care about frames if the whole thing here is defined\n      frames = event.exception.values[0].stacktrace.frames;\n    } catch (e) {\n      // ignore\n    }\n    return frames ? _getLastValidUrl(frames) : null;\n  } catch (oO) {\n    __DEBUG_BUILD__ && logger.error(`Cannot extract url for event ${getEventDescription(event)}`);\n    return null;\n  }\n}\n", "import { captureException, withScope } from '@sentry/core';\nimport type { DsnLike, Event as SentryEvent, Mechanism, Scope, WrappedFunction } from '@sentry/types';\nimport {\n  addExceptionMechanism,\n  addExceptionTypeValue,\n  addNonEnumerableProperty,\n  getOriginalFunction,\n  GLOBAL_OBJ,\n  markFunctionWrapped,\n} from '@sentry/utils';\n\nexport const WINDOW = GLOBAL_OBJ as typeof GLOBAL_OBJ & Window;\n\nlet ignoreOnError: number = 0;\n\n/**\n * @hidden\n */\nexport function shouldIgnoreOnError(): boolean {\n  return ignoreOnError > 0;\n}\n\n/**\n * @hidden\n */\nexport function ignoreNextOnError(): void {\n  // onerror should trigger before setTimeout\n  ignoreOnError++;\n  setTimeout(() => {\n    ignoreOnError--;\n  });\n}\n\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap. It is generally safe to pass an unbound function, because the returned wrapper always\n * has a correct `this` context.\n * @returns The wrapped function.\n * @hidden\n */\nexport function wrap(\n  fn: WrappedFunction,\n  options: {\n    mechanism?: Mechanism;\n  } = {},\n  before?: WrappedFunction,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n): any {\n  // for future readers what this does is wrap a function and then create\n  // a bi-directional wrapping between them.\n  //\n  // example: wrapped = wrap(original);\n  //  original.__sentry_wrapped__ -> wrapped\n  //  wrapped.__sentry_original__ -> original\n\n  if (typeof fn !== 'function') {\n    return fn;\n  }\n\n  try {\n    // if we're dealing with a function that was previously wrapped, return\n    // the original wrapper.\n    const wrapper = fn.__sentry_wrapped__;\n    if (wrapper) {\n      return wrapper;\n    }\n\n    // We don't wanna wrap it twice\n    if (getOriginalFunction(fn)) {\n      return fn;\n    }\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    // Bail on wrapping and return the function as-is (defers to window.onerror).\n    return fn;\n  }\n\n  /* eslint-disable prefer-rest-params */\n  // It is important that `sentryWrapped` is not an arrow function to preserve the context of `this`\n  const sentryWrapped: WrappedFunction = function (this: unknown): void {\n    const args = Array.prototype.slice.call(arguments);\n\n    try {\n      if (before && typeof before === 'function') {\n        before.apply(this, arguments);\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n      const wrappedArguments = args.map((arg: any) => wrap(arg, options));\n\n      // Attempt to invoke user-land function\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n      //       means the sentry.javascript SDK caught an error invoking your application code. This\n      //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n      return fn.apply(this, wrappedArguments);\n    } catch (ex) {\n      ignoreNextOnError();\n\n      withScope((scope: Scope) => {\n        scope.addEventProcessor((event: SentryEvent) => {\n          if (options.mechanism) {\n            addExceptionTypeValue(event, undefined, undefined);\n            addExceptionMechanism(event, options.mechanism);\n          }\n\n          event.extra = {\n            ...event.extra,\n            arguments: args,\n          };\n\n          return event;\n        });\n\n        captureException(ex);\n      });\n\n      throw ex;\n    }\n  };\n  /* eslint-enable prefer-rest-params */\n\n  // Accessing some objects may throw\n  // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n  try {\n    for (const property in fn) {\n      if (Object.prototype.hasOwnProperty.call(fn, property)) {\n        sentryWrapped[property] = fn[property];\n      }\n    }\n  } catch (_oO) {} // eslint-disable-line no-empty\n\n  // Signal that this function has been wrapped/filled already\n  // for both debugging and to prevent it to being wrapped/filled twice\n  markFunctionWrapped(sentryWrapped, fn);\n\n  addNonEnumerableProperty(fn, '__sentry_wrapped__', sentryWrapped);\n\n  // Restore original function name (not all browsers allow that)\n  try {\n    const descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name') as PropertyDescriptor;\n    if (descriptor.configurable) {\n      Object.defineProperty(sentryWrapped, 'name', {\n        get(): string {\n          return fn.name;\n        },\n      });\n    }\n    // eslint-disable-next-line no-empty\n  } catch (_oO) {}\n\n  return sentryWrapped;\n}\n\n/**\n * All properties the report dialog supports\n */\nexport interface ReportDialogOptions {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [key: string]: any;\n  eventId?: string;\n  dsn?: DsnLike;\n  user?: {\n    email?: string;\n    name?: string;\n  };\n  lang?: string;\n  title?: string;\n  subtitle?: string;\n  subtitle2?: string;\n  labelName?: string;\n  labelEmail?: string;\n  labelComments?: string;\n  labelClose?: string;\n  labelSubmit?: string;\n  errorGeneric?: string;\n  errorFormEntry?: string;\n  successMessage?: string;\n  /** Callback after reportDialog showed up */\n  onLoad?(this: void): void;\n}\n", "import { getCurrentHub } from '@sentry/core';\nimport type { Event, EventHint, Exception, Severity, SeverityLevel, StackFrame, StackParser } from '@sentry/types';\nimport {\n  addExceptionMechanism,\n  addExceptionTypeValue,\n  extractExceptionKeysForMessage,\n  isDOMError,\n  isDOMException,\n  isError,\n  isErrorEvent,\n  isEvent,\n  isPlainObject,\n  normalizeToSize,\n  resolvedSyncPromise,\n} from '@sentry/utils';\n\n/**\n * This function creates an exception from a JavaScript Error\n */\nexport function exceptionFromError(stackParser: StackParser, ex: Error): Exception {\n  // Get the frames first since Opera can lose the stack if we touch anything else first\n  const frames = parseStackFrames(stackParser, ex);\n\n  const exception: Exception = {\n    type: ex && ex.name,\n    value: extractMessage(ex),\n  };\n\n  if (frames.length) {\n    exception.stacktrace = { frames };\n  }\n\n  if (exception.type === undefined && exception.value === '') {\n    exception.value = 'Unrecoverable error caught';\n  }\n\n  return exception;\n}\n\n/**\n * @hidden\n */\nexport function eventFromPlainObject(\n  stackParser: StackParser,\n  exception: Record<string, unknown>,\n  syntheticException?: Error,\n  isUnhandledRejection?: boolean,\n): Event {\n  const hub = getCurrentHub();\n  const client = hub.getClient();\n  const normalizeDepth = client && client.getOptions().normalizeDepth;\n\n  const event: Event = {\n    exception: {\n      values: [\n        {\n          type: isEvent(exception) ? exception.constructor.name : isUnhandledRejection ? 'UnhandledRejection' : 'Error',\n          value: `Non-Error ${\n            isUnhandledRejection ? 'promise rejection' : 'exception'\n          } captured with keys: ${extractExceptionKeysForMessage(exception)}`,\n        },\n      ],\n    },\n    extra: {\n      __serialized__: normalizeToSize(exception, normalizeDepth),\n    },\n  };\n\n  if (syntheticException) {\n    const frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      // event.exception.values[0] has been set above\n      (event.exception as { values: Exception[] }).values[0].stacktrace = { frames };\n    }\n  }\n\n  return event;\n}\n\n/**\n * @hidden\n */\nexport function eventFromError(stackParser: StackParser, ex: Error): Event {\n  return {\n    exception: {\n      values: [exceptionFromError(stackParser, ex)],\n    },\n  };\n}\n\n/** Parses stack frames from an error */\nexport function parseStackFrames(\n  stackParser: StackParser,\n  ex: Error & { framesToPop?: number; stacktrace?: string },\n): StackFrame[] {\n  // Access and store the stacktrace property before doing ANYTHING\n  // else to it because Opera is not very good at providing it\n  // reliably in other circumstances.\n  const stacktrace = ex.stacktrace || ex.stack || '';\n\n  const popSize = getPopSize(ex);\n\n  try {\n    return stackParser(stacktrace, popSize);\n  } catch (e) {\n    // no-empty\n  }\n\n  return [];\n}\n\n// Based on our own mapping pattern - https://github.com/getsentry/sentry/blob/9f08305e09866c8bd6d0c24f5b0aabdd7dd6c59c/src/sentry/lang/javascript/errormapping.py#L83-L108\nconst reactMinifiedRegexp = /Minified React error #\\d+;/i;\n\nfunction getPopSize(ex: Error & { framesToPop?: number }): number {\n  if (ex) {\n    if (typeof ex.framesToPop === 'number') {\n      return ex.framesToPop;\n    }\n\n    if (reactMinifiedRegexp.test(ex.message)) {\n      return 1;\n    }\n  }\n\n  return 0;\n}\n\n/**\n * There are cases where stacktrace.message is an Event object\n * https://github.com/getsentry/sentry-javascript/issues/1949\n * In this specific case we try to extract stacktrace.message.error.message\n */\nfunction extractMessage(ex: Error & { message: { error?: Error } }): string {\n  const message = ex && ex.message;\n  if (!message) {\n    return 'No error message';\n  }\n  if (message.error && typeof message.error.message === 'string') {\n    return message.error.message;\n  }\n  return message;\n}\n\n/**\n * Creates an {@link Event} from all inputs to `captureException` and non-primitive inputs to `captureMessage`.\n * @hidden\n */\nexport function eventFromException(\n  stackParser: StackParser,\n  exception: unknown,\n  hint?: EventHint,\n  attachStacktrace?: boolean,\n): PromiseLike<Event> {\n  const syntheticException = (hint && hint.syntheticException) || undefined;\n  const event = eventFromUnknownInput(stackParser, exception, syntheticException, attachStacktrace);\n  addExceptionMechanism(event); // defaults to { type: 'generic', handled: true }\n  event.level = 'error';\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * Builds and Event from a Message\n * @hidden\n */\nexport function eventFromMessage(\n  stackParser: StackParser,\n  message: string,\n  // eslint-disable-next-line deprecation/deprecation\n  level: Severity | SeverityLevel = 'info',\n  hint?: EventHint,\n  attachStacktrace?: boolean,\n): PromiseLike<Event> {\n  const syntheticException = (hint && hint.syntheticException) || undefined;\n  const event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n  event.level = level;\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * @hidden\n */\nexport function eventFromUnknownInput(\n  stackParser: StackParser,\n  exception: unknown,\n  syntheticException?: Error,\n  attachStacktrace?: boolean,\n  isUnhandledRejection?: boolean,\n): Event {\n  let event: Event;\n\n  if (isErrorEvent(exception as ErrorEvent) && (exception as ErrorEvent).error) {\n    // If it is an ErrorEvent with `error` property, extract it to get actual Error\n    const errorEvent = exception as ErrorEvent;\n    return eventFromError(stackParser, errorEvent.error as Error);\n  }\n\n  // If it is a `DOMError` (which is a legacy API, but still supported in some browsers) then we just extract the name\n  // and message, as it doesn't provide anything else. According to the spec, all `DOMExceptions` should also be\n  // `Error`s, but that's not the case in IE11, so in that case we treat it the same as we do a `DOMError`.\n  //\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n  // https://webidl.spec.whatwg.org/#es-DOMException-specialness\n  if (isDOMError(exception as DOMError) || isDOMException(exception as DOMException)) {\n    const domException = exception as DOMException;\n\n    if ('stack' in (exception as Error)) {\n      event = eventFromError(stackParser, exception as Error);\n    } else {\n      const name = domException.name || (isDOMError(domException) ? 'DOMError' : 'DOMException');\n      const message = domException.message ? `${name}: ${domException.message}` : name;\n      event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n      addExceptionTypeValue(event, message);\n    }\n    if ('code' in domException) {\n      event.tags = { ...event.tags, 'DOMException.code': `${domException.code}` };\n    }\n\n    return event;\n  }\n  if (isError(exception)) {\n    // we have a real Error object, do nothing\n    return eventFromError(stackParser, exception);\n  }\n  if (isPlainObject(exception) || isEvent(exception)) {\n    // If it's a plain object or an instance of `Event` (the built-in JS kind, not this SDK's `Event` type), serialize\n    // it manually. This will allow us to group events based on top-level keys which is much better than creating a new\n    // group on any key/value change.\n    const objectException = exception as Record<string, unknown>;\n    event = eventFromPlainObject(stackParser, objectException, syntheticException, isUnhandledRejection);\n    addExceptionMechanism(event, {\n      synthetic: true,\n    });\n    return event;\n  }\n\n  // If none of previous checks were valid, then it means that it's not:\n  // - an instance of DOMError\n  // - an instance of DOMException\n  // - an instance of Event\n  // - an instance of Error\n  // - a valid ErrorEvent (one with an error property)\n  // - a plain Object\n  //\n  // So bail out and capture it as a simple message:\n  event = eventFromString(stackParser, exception as string, syntheticException, attachStacktrace);\n  addExceptionTypeValue(event, `${exception}`, undefined);\n  addExceptionMechanism(event, {\n    synthetic: true,\n  });\n\n  return event;\n}\n\n/**\n * @hidden\n */\nexport function eventFromString(\n  stackParser: StackParser,\n  input: string,\n  syntheticException?: Error,\n  attachStacktrace?: boolean,\n): Event {\n  const event: Event = {\n    message: input,\n  };\n\n  if (attachStacktrace && syntheticException) {\n    const frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      event.exception = {\n        values: [{ value: input, stacktrace: { frames } }],\n      };\n    }\n  }\n\n  return event;\n}\n", "/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable max-lines */\nimport { getCurrentHub } from '@sentry/core';\nimport type { Event as SentryEvent, HandlerDataFetch, Integration, SentryWrappedXMLHttpRequest } from '@sentry/types';\nimport {\n  addInstrumentationHandler,\n  getEventDescription,\n  htmlTreeAsString,\n  logger,\n  parseUrl,\n  safeJoin,\n  severityLevelFromString,\n} from '@sentry/utils';\n\nimport { WINDOW } from '../helpers';\n\ntype HandlerData = Record<string, unknown>;\n\n/** JSDoc */\ninterface BreadcrumbsOptions {\n  console: boolean;\n  dom:\n    | boolean\n    | {\n        serializeAttribute?: string | string[];\n        maxStringLength?: number;\n      };\n  fetch: boolean;\n  history: boolean;\n  sentry: boolean;\n  xhr: boolean;\n}\n\n/** maxStringLength gets capped to prevent 100 breadcrumbs exceeding 1MB event payload size */\nconst MAX_ALLOWED_STRING_LENGTH = 1024;\n\nexport const BREADCRUMB_INTEGRATION_ID = 'Breadcrumbs';\n\n/**\n * Default Breadcrumbs instrumentations\n * TODO: Deprecated - with v6, this will be renamed to `Instrument`\n */\nexport class Breadcrumbs implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = BREADCRUMB_INTEGRATION_ID;\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = Breadcrumbs.id;\n\n  /**\n   * Options of the breadcrumbs integration.\n   */\n  // This field is public, because we use it in the browser client to check if the `sentry` option is enabled.\n  public readonly options: Readonly<BreadcrumbsOptions>;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options?: Partial<BreadcrumbsOptions>) {\n    this.options = {\n      console: true,\n      dom: true,\n      fetch: true,\n      history: true,\n      sentry: true,\n      xhr: true,\n      ...options,\n    };\n  }\n\n  /**\n   * Instrument browser built-ins w/ breadcrumb capturing\n   *  - Console API\n   *  - DOM API (click/typing)\n   *  - XMLHttpRequest API\n   *  - Fetch API\n   *  - History API\n   */\n  public setupOnce(): void {\n    if (this.options.console) {\n      addInstrumentationHandler('console', _consoleBreadcrumb);\n    }\n    if (this.options.dom) {\n      addInstrumentationHandler('dom', _domBreadcrumb(this.options.dom));\n    }\n    if (this.options.xhr) {\n      addInstrumentationHandler('xhr', _xhrBreadcrumb);\n    }\n    if (this.options.fetch) {\n      addInstrumentationHandler('fetch', _fetchBreadcrumb);\n    }\n    if (this.options.history) {\n      addInstrumentationHandler('history', _historyBreadcrumb);\n    }\n  }\n\n  /**\n   * Adds a breadcrumb for Sentry events or transactions if this option is enabled.\n   */\n  public addSentryBreadcrumb(event: SentryEvent): void {\n    if (this.options.sentry) {\n      getCurrentHub().addBreadcrumb(\n        {\n          category: `sentry.${event.type === 'transaction' ? 'transaction' : 'event'}`,\n          event_id: event.event_id,\n          level: event.level,\n          message: getEventDescription(event),\n        },\n        {\n          event,\n        },\n      );\n    }\n  }\n}\n\n/**\n * A HOC that creaes a function that creates breadcrumbs from DOM API calls.\n * This is a HOC so that we get access to dom options in the closure.\n */\nfunction _domBreadcrumb(dom: BreadcrumbsOptions['dom']): (handlerData: HandlerData) => void {\n  function _innerDomBreadcrumb(handlerData: HandlerData): void {\n    let target;\n    let keyAttrs = typeof dom === 'object' ? dom.serializeAttribute : undefined;\n\n    let maxStringLength =\n      typeof dom === 'object' && typeof dom.maxStringLength === 'number' ? dom.maxStringLength : undefined;\n    if (maxStringLength && maxStringLength > MAX_ALLOWED_STRING_LENGTH) {\n      __DEBUG_BUILD__ &&\n        logger.warn(\n          `\\`dom.maxStringLength\\` cannot exceed ${MAX_ALLOWED_STRING_LENGTH}, but a value of ${maxStringLength} was configured. Sentry will use ${MAX_ALLOWED_STRING_LENGTH} instead.`,\n        );\n      maxStringLength = MAX_ALLOWED_STRING_LENGTH;\n    }\n\n    if (typeof keyAttrs === 'string') {\n      keyAttrs = [keyAttrs];\n    }\n\n    // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n    try {\n      const event = handlerData.event as Event | Node;\n      target = _isEvent(event)\n        ? htmlTreeAsString(event.target, { keyAttrs, maxStringLength })\n        : htmlTreeAsString(event, { keyAttrs, maxStringLength });\n    } catch (e) {\n      target = '<unknown>';\n    }\n\n    if (target.length === 0) {\n      return;\n    }\n\n    getCurrentHub().addBreadcrumb(\n      {\n        category: `ui.${handlerData.name}`,\n        message: target,\n      },\n      {\n        event: handlerData.event,\n        name: handlerData.name,\n        global: handlerData.global,\n      },\n    );\n  }\n\n  return _innerDomBreadcrumb;\n}\n\n/**\n * Creates breadcrumbs from console API calls\n */\nfunction _consoleBreadcrumb(handlerData: HandlerData & { args: unknown[]; level: string }): void {\n  // This is a hack to fix a Vue3-specific bug that causes an infinite loop of\n  // console warnings. This happens when a Vue template is rendered with\n  // an undeclared variable, which we try to stringify, ultimately causing\n  // Vue to issue another warning which repeats indefinitely.\n  // see: https://github.com/getsentry/sentry-javascript/pull/6010\n  // see: https://github.com/getsentry/sentry-javascript/issues/5916\n  for (let i = 0; i < handlerData.args.length; i++) {\n    if (handlerData.args[i] === 'ref=Ref<') {\n      handlerData.args[i + 1] = 'viewRef';\n      break;\n    }\n  }\n  const breadcrumb = {\n    category: 'console',\n    data: {\n      arguments: handlerData.args,\n      logger: 'console',\n    },\n    level: severityLevelFromString(handlerData.level),\n    message: safeJoin(handlerData.args, ' '),\n  };\n\n  if (handlerData.level === 'assert') {\n    if (handlerData.args[0] === false) {\n      breadcrumb.message = `Assertion failed: ${safeJoin(handlerData.args.slice(1), ' ') || 'console.assert'}`;\n      breadcrumb.data.arguments = handlerData.args.slice(1);\n    } else {\n      // Don't capture a breadcrumb for passed assertions\n      return;\n    }\n  }\n\n  getCurrentHub().addBreadcrumb(breadcrumb, {\n    input: handlerData.args,\n    level: handlerData.level,\n  });\n}\n\n/**\n * Creates breadcrumbs from XHR API calls\n */\nfunction _xhrBreadcrumb(handlerData: HandlerData & { xhr: SentryWrappedXMLHttpRequest }): void {\n  if (handlerData.endTimestamp) {\n    // We only capture complete, non-sentry requests\n    if (handlerData.xhr.__sentry_own_request__) {\n      return;\n    }\n\n    const { method, url, status_code, body } = handlerData.xhr.__sentry_xhr__ || {};\n\n    getCurrentHub().addBreadcrumb(\n      {\n        category: 'xhr',\n        data: {\n          method,\n          url,\n          status_code,\n        },\n        type: 'http',\n      },\n      {\n        xhr: handlerData.xhr,\n        input: body,\n      },\n    );\n\n    return;\n  }\n}\n\n/**\n * Creates breadcrumbs from fetch API calls\n */\nfunction _fetchBreadcrumb(handlerData: HandlerData & HandlerDataFetch): void {\n  // We only capture complete fetch requests\n  if (!handlerData.endTimestamp) {\n    return;\n  }\n\n  if (handlerData.fetchData.url.match(/sentry_key/) && handlerData.fetchData.method === 'POST') {\n    // We will not create breadcrumbs for fetch requests that contain `sentry_key` (internal sentry requests)\n    return;\n  }\n\n  if (handlerData.error) {\n    getCurrentHub().addBreadcrumb(\n      {\n        category: 'fetch',\n        data: handlerData.fetchData,\n        level: 'error',\n        type: 'http',\n      },\n      {\n        data: handlerData.error,\n        input: handlerData.args,\n      },\n    );\n  } else {\n    getCurrentHub().addBreadcrumb(\n      {\n        category: 'fetch',\n        data: {\n          ...handlerData.fetchData,\n          status_code: handlerData.response && handlerData.response.status,\n        },\n        type: 'http',\n      },\n      {\n        input: handlerData.args,\n        response: handlerData.response,\n      },\n    );\n  }\n}\n\n/**\n * Creates breadcrumbs from history API calls\n */\nfunction _historyBreadcrumb(handlerData: HandlerData & { from: string; to: string }): void {\n  let from: string | undefined = handlerData.from;\n  let to: string | undefined = handlerData.to;\n  const parsedLoc = parseUrl(WINDOW.location.href);\n  let parsedFrom = parseUrl(from);\n  const parsedTo = parseUrl(to);\n\n  // Initial pushState doesn't provide `from` information\n  if (!parsedFrom.path) {\n    parsedFrom = parsedLoc;\n  }\n\n  // Use only the path component of the URL if the URL matches the current\n  // document (almost all the time when using pushState)\n  if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n    to = parsedTo.relative;\n  }\n  if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n    from = parsedFrom.relative;\n  }\n\n  getCurrentHub().addBreadcrumb({\n    category: 'navigation',\n    data: {\n      from,\n      to,\n    },\n  });\n}\n\nfunction _isEvent(event: unknown): event is Event {\n  return event && !!(event as Record<string, unknown>).target;\n}\n", "import type { Scope } from '@sentry/core';\nimport { BaseClient, getEnvelopeEndpointWithUrlEncodedAuth, SDK_VERSION } from '@sentry/core';\nimport type {\n  BrowserClientReplayOptions,\n  ClientOptions,\n  Event,\n  EventHint,\n  Options,\n  Severity,\n  SeverityLevel,\n} from '@sentry/types';\nimport { createClientReportEnvelope, dsnToString, getSDKSource, logger, serializeEnvelope } from '@sentry/utils';\n\nimport { eventFromException, eventFromMessage } from './eventbuilder';\nimport { WINDOW } from './helpers';\nimport type { Breadcrumbs } from './integrations';\nimport { BREADCRUMB_INTEGRATION_ID } from './integrations/breadcrumbs';\nimport type { BrowserTransportOptions } from './transports/types';\n\n/**\n * Configuration options for the Sentry Browser SDK.\n * @see @sentry/types Options for more information.\n */\nexport type BrowserOptions = Options<BrowserTransportOptions> & BrowserClientReplayOptions;\n\n/**\n * Configuration options for the Sentry Browser SDK Client class\n * @see BrowserClient for more information.\n */\nexport type BrowserClientOptions = ClientOptions<BrowserTransportOptions>;\n\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nexport class BrowserClient extends BaseClient<BrowserClientOptions> {\n  /**\n   * Creates a new Browser SDK instance.\n   *\n   * @param options Configuration options for this SDK.\n   */\n  public constructor(options: BrowserClientOptions) {\n    const sdkSource = WINDOW.SENTRY_SDK_SOURCE || getSDKSource();\n\n    options._metadata = options._metadata || {};\n    options._metadata.sdk = options._metadata.sdk || {\n      name: 'sentry.javascript.browser',\n      packages: [\n        {\n          name: `${sdkSource}:@sentry/browser`,\n          version: SDK_VERSION,\n        },\n      ],\n      version: SDK_VERSION,\n    };\n\n    super(options);\n\n    if (options.sendClientReports && WINDOW.document) {\n      WINDOW.document.addEventListener('visibilitychange', () => {\n        if (WINDOW.document.visibilityState === 'hidden') {\n          this._flushOutcomes();\n        }\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public eventFromException(exception: unknown, hint?: EventHint): PromiseLike<Event> {\n    return eventFromException(this._options.stackParser, exception, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public eventFromMessage(\n    message: string,\n    // eslint-disable-next-line deprecation/deprecation\n    level: Severity | SeverityLevel = 'info',\n    hint?: EventHint,\n  ): PromiseLike<Event> {\n    return eventFromMessage(this._options.stackParser, message, level, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public sendEvent(event: Event, hint?: EventHint): void {\n    // We only want to add the sentry event breadcrumb when the user has the breadcrumb integration installed and\n    // activated its `sentry` option.\n    // We also do not want to use the `Breadcrumbs` class here directly, because we do not want it to be included in\n    // bundles, if it is not used by the SDK.\n    // This all sadly is a bit ugly, but we currently don't have a \"pre-send\" hook on the integrations so we do it this\n    // way for now.\n    const breadcrumbIntegration = this.getIntegrationById(BREADCRUMB_INTEGRATION_ID) as Breadcrumbs | undefined;\n    // We check for definedness of `addSentryBreadcrumb` in case users provided their own integration with id\n    // \"Breadcrumbs\" that does not have this function.\n    if (breadcrumbIntegration && breadcrumbIntegration.addSentryBreadcrumb) {\n      breadcrumbIntegration.addSentryBreadcrumb(event);\n    }\n\n    super.sendEvent(event, hint);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  protected _prepareEvent(event: Event, hint: EventHint, scope?: Scope): PromiseLike<Event | null> {\n    event.platform = event.platform || 'javascript';\n    return super._prepareEvent(event, hint, scope);\n  }\n\n  /**\n   * Sends client reports as an envelope.\n   */\n  private _flushOutcomes(): void {\n    const outcomes = this._clearOutcomes();\n\n    if (outcomes.length === 0) {\n      __DEBUG_BUILD__ && logger.log('No outcomes to send');\n      return;\n    }\n\n    if (!this._dsn) {\n      __DEBUG_BUILD__ && logger.log('No dsn provided, will not send outcomes');\n      return;\n    }\n\n    __DEBUG_BUILD__ && logger.log('Sending outcomes:', outcomes);\n\n    const url = getEnvelopeEndpointWithUrlEncodedAuth(this._dsn, this._options);\n    const envelope = createClientReportEnvelope(outcomes, this._options.tunnel && dsnToString(this._dsn));\n\n    try {\n      const isRealNavigator = Object.prototype.toString.call(WINDOW && WINDOW.navigator) === '[object Navigator]';\n      const hasSendBeacon = isRealNavigator && typeof WINDOW.navigator.sendBeacon === 'function';\n      // Make sure beacon is not used if user configures custom transport options\n      if (hasSendBeacon && !this._options.transportOptions) {\n        // Prevent illegal invocations - https://xgwang.me/posts/you-may-not-know-beacon/#it-may-throw-error%2C-be-sure-to-catch\n        const sendBeacon = WINDOW.navigator.sendBeacon.bind(WINDOW.navigator);\n        sendBeacon(url, serializeEnvelope(envelope));\n      } else {\n        // If beacon is not supported or if they are using the tunnel option\n        // use our regular transport to send client reports to Sentry.\n        this._sendEnvelope(envelope);\n      }\n    } catch (e) {\n      __DEBUG_BUILD__ && logger.error(e);\n    }\n  }\n}\n", "import { isNativeFetch, logger } from '@sentry/utils';\n\nimport { WINDOW } from '../helpers';\n\nlet cachedFetchImpl: FetchImpl | undefined = undefined;\n\nexport type FetchImpl = typeof fetch;\n\n/**\n * A special usecase for incorrectly wrapped Fetch APIs in conjunction with ad-blockers.\n * Whenever someone wraps the Fetch API and returns the wrong promise chain,\n * this chain becomes orphaned and there is no possible way to capture it's rejections\n * other than allowing it bubble up to this very handler. eg.\n *\n * const f = window.fetch;\n * window.fetch = function () {\n *   const p = f.apply(this, arguments);\n *\n *   p.then(function() {\n *     console.log('hi.');\n *   });\n *\n *   return p;\n * }\n *\n * `p.then(function () { ... })` is producing a completely separate promise chain,\n * however, what's returned is `p` - the result of original `fetch` call.\n *\n * This mean, that whenever we use the Fetch API to send our own requests, _and_\n * some ad-blocker blocks it, this orphaned chain will _always_ reject,\n * effectively causing another event to be captured.\n * This makes a whole process become an infinite loop, which we need to somehow\n * deal with, and break it in one way or another.\n *\n * To deal with this issue, we are making sure that we _always_ use the real\n * browser Fetch API, instead of relying on what `window.fetch` exposes.\n * The only downside to this would be missing our own requests as breadcrumbs,\n * but because we are already not doing this, it should be just fine.\n *\n * Possible failed fetch error messages per-browser:\n *\n * Chrome:  Failed to fetch\n * Edge:    Failed to Fetch\n * Firefox: NetworkError when attempting to fetch resource\n * Safari:  resource blocked by content blocker\n */\nexport function getNativeFetchImplementation(): FetchImpl {\n  if (cachedFetchImpl) {\n    return cachedFetchImpl;\n  }\n\n  /* eslint-disable @typescript-eslint/unbound-method */\n\n  // Fast path to avoid DOM I/O\n  if (isNativeFetch(WINDOW.fetch)) {\n    return (cachedFetchImpl = WINDOW.fetch.bind(WINDOW));\n  }\n\n  const document = WINDOW.document;\n  let fetchImpl = WINDOW.fetch;\n  // eslint-disable-next-line deprecation/deprecation\n  if (document && typeof document.createElement === 'function') {\n    try {\n      const sandbox = document.createElement('iframe');\n      sandbox.hidden = true;\n      document.head.appendChild(sandbox);\n      const contentWindow = sandbox.contentWindow;\n      if (contentWindow && contentWindow.fetch) {\n        fetchImpl = contentWindow.fetch;\n      }\n      document.head.removeChild(sandbox);\n    } catch (e) {\n      __DEBUG_BUILD__ &&\n        logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', e);\n    }\n  }\n\n  return (cachedFetchImpl = fetchImpl.bind(WINDOW));\n  /* eslint-enable @typescript-eslint/unbound-method */\n}\n\n/** Clears cached fetch impl */\nexport function clearCachedFetchImplementation(): void {\n  cachedFetchImpl = undefined;\n}\n", "import { createTransport } from '@sentry/core';\nimport type { Transport, TransportMakeRequestResponse, TransportRequest } from '@sentry/types';\nimport { rejectedSyncPromise } from '@sentry/utils';\n\nimport type { BrowserTransportOptions } from './types';\nimport type { FetchImpl } from './utils';\nimport { clearCachedFetchImplementation, getNativeFetchImplementation } from './utils';\n\n/**\n * Creates a Transport that uses the Fetch API to send events to Sentry.\n */\nexport function makeFetchTransport(\n  options: BrowserTransportOptions,\n  nativeFetch: FetchImpl = getNativeFetchImplementation(),\n): Transport {\n  function makeRequest(request: TransportRequest): PromiseLike<TransportMakeRequestResponse> {\n    const requestOptions: RequestInit = {\n      body: request.body,\n      method: 'POST',\n      referrerPolicy: 'origin',\n      headers: options.headers,\n      // Outgoing requests are usually cancelled when navigating to a different page, causing a \"TypeError: Failed to\n      // fetch\" error and sending a \"network_error\" client-outcome - in Chrome, the request status shows \"(cancelled)\".\n      // The `keepalive` flag keeps outgoing requests alive, even when switching pages. We want this since we're\n      // frequently sending events right before the user is switching pages (eg. whenfinishing navigation transactions).\n      // Gotchas:\n      // - `keepalive` isn't supported by Firefox\n      // - As per spec (https://fetch.spec.whatwg.org/#http-network-or-cache-fetch), a request with `keepalive: true`\n      //   and a content length of > 64 kibibytes returns a network error. We will therefore only activate the flag when\n      //   we're below that limit.\n      keepalive: request.body.length <= 65536,\n      ...options.fetchOptions,\n    };\n\n    try {\n      return nativeFetch(options.url, requestOptions).then(response => ({\n        statusCode: response.status,\n        headers: {\n          'x-sentry-rate-limits': response.headers.get('X-Sentry-Rate-Limits'),\n          'retry-after': response.headers.get('Retry-After'),\n        },\n      }));\n    } catch (e) {\n      clearCachedFetchImplementation();\n      return rejectedSyncPromise(e);\n    }\n  }\n\n  return createTransport(options, makeRequest);\n}\n", "import { createTransport } from '@sentry/core';\nimport type { Transport, TransportMakeRequestResponse, TransportRequest } from '@sentry/types';\nimport { SyncPromise } from '@sentry/utils';\n\nimport type { BrowserTransportOptions } from './types';\n\n/**\n * The DONE ready state for XmlHttpRequest\n *\n * Defining it here as a constant b/c XMLHttpRequest.DONE is not always defined\n * (e.g. during testing, it is `undefined`)\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/readyState}\n */\nconst XHR_READYSTATE_DONE = 4;\n\n/**\n * Creates a Transport that uses the XMLHttpRequest API to send events to Sentry.\n */\nexport function makeXHRTransport(options: BrowserTransportOptions): Transport {\n  function makeRequest(request: TransportRequest): PromiseLike<TransportMakeRequestResponse> {\n    return new SyncPromise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n\n      xhr.onerror = reject;\n\n      xhr.onreadystatechange = (): void => {\n        if (xhr.readyState === XHR_READYSTATE_DONE) {\n          resolve({\n            statusCode: xhr.status,\n            headers: {\n              'x-sentry-rate-limits': xhr.getResponseHeader('X-Sentry-Rate-Limits'),\n              'retry-after': xhr.getResponseHeader('Retry-After'),\n            },\n          });\n        }\n      };\n\n      xhr.open('POST', options.url);\n\n      for (const header in options.headers) {\n        if (Object.prototype.hasOwnProperty.call(options.headers, header)) {\n          xhr.setRequestHeader(header, options.headers[header]);\n        }\n      }\n\n      xhr.send(request.body);\n    });\n  }\n\n  return createTransport(options, makeRequest);\n}\n", "import type { StackFrame, StackLineParser, StackLineParserFn } from '@sentry/types';\nimport { createStackParser } from '@sentry/utils';\n\n// global reference to slice\nconst UNKNOWN_FUNCTION = '?';\n\nconst OPERA10_PRIORITY = 10;\nconst OPERA11_PRIORITY = 20;\nconst CHROME_PRIORITY = 30;\nconst WINJS_PRIORITY = 40;\nconst GECKO_PRIORITY = 50;\n\nfunction createFrame(filename: string, func: string, lineno?: number, colno?: number): StackFrame {\n  const frame: StackFrame = {\n    filename,\n    abs_path: filename, // As opposed to filename, abs_path is immutable (I can't control your actions but don't touch it!)\n    function: func,\n    in_app: true, // All browser frames are considered in_app\n  };\n\n  if (lineno !== undefined) {\n    frame.lineno = lineno;\n  }\n\n  if (colno !== undefined) {\n    frame.colno = colno;\n  }\n\n  return frame;\n}\n\n// Chromium based browsers: Chrome, Brave, new Opera, new Edge\nconst chromeRegex =\n  /^\\s*at (?:(.*\\).*?|.*?) ?\\((?:address at )?)?(?:async )?((?:file|https?|blob|chrome-extension|address|native|eval|webpack|<anonymous>|[-a-z]+:|.*bundle|\\/)?.*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\nconst chromeEvalRegex = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n\nconst chrome: StackLineParserFn = line => {\n  const parts = chromeRegex.exec(line);\n\n  if (parts) {\n    const isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n\n    if (isEval) {\n      const subMatch = chromeEvalRegex.exec(parts[2]);\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line/column number\n        parts[2] = subMatch[1]; // url\n        parts[3] = subMatch[2]; // line\n        parts[4] = subMatch[3]; // column\n      }\n    }\n\n    // Kamil: One more hack won't hurt us right? Understanding and adding more rules on top of these regexps right now\n    // would be way too time consuming. (TODO: Rewrite whole RegExp to be more readable)\n    const [func, filename] = extractSafariExtensionDetails(parts[1] || UNKNOWN_FUNCTION, parts[2]);\n\n    return createFrame(filename, func, parts[3] ? +parts[3] : undefined, parts[4] ? +parts[4] : undefined);\n  }\n\n  return;\n};\n\nexport const chromeStackLineParser: StackLineParser = [CHROME_PRIORITY, chrome];\n\n// gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n// generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n// We need this specific case for now because we want no other regex to match.\nconst geckoREgex =\n  /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:file|https?|blob|chrome|webpack|resource|moz-extension|safari-extension|safari-web-extension|capacitor)?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js)|\\/[\\w\\-. /=]+)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nconst geckoEvalRegex = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\n\nconst gecko: StackLineParserFn = line => {\n  const parts = geckoREgex.exec(line);\n\n  if (parts) {\n    const isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n    if (isEval) {\n      const subMatch = geckoEvalRegex.exec(parts[3]);\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line number\n        parts[1] = parts[1] || 'eval';\n        parts[3] = subMatch[1];\n        parts[4] = subMatch[2];\n        parts[5] = ''; // no column when eval\n      }\n    }\n\n    let filename = parts[3];\n    let func = parts[1] || UNKNOWN_FUNCTION;\n    [func, filename] = extractSafariExtensionDetails(func, filename);\n\n    return createFrame(filename, func, parts[4] ? +parts[4] : undefined, parts[5] ? +parts[5] : undefined);\n  }\n\n  return;\n};\n\nexport const geckoStackLineParser: StackLineParser = [GECKO_PRIORITY, gecko];\n\nconst winjsRegex =\n  /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n\nconst winjs: StackLineParserFn = line => {\n  const parts = winjsRegex.exec(line);\n\n  return parts\n    ? createFrame(parts[2], parts[1] || UNKNOWN_FUNCTION, +parts[3], parts[4] ? +parts[4] : undefined)\n    : undefined;\n};\n\nexport const winjsStackLineParser: StackLineParser = [WINJS_PRIORITY, winjs];\n\nconst opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i;\n\nconst opera10: StackLineParserFn = line => {\n  const parts = opera10Regex.exec(line);\n  return parts ? createFrame(parts[2], parts[3] || UNKNOWN_FUNCTION, +parts[1]) : undefined;\n};\n\nexport const opera10StackLineParser: StackLineParser = [OPERA10_PRIORITY, opera10];\n\nconst opera11Regex =\n  / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^)]+))\\(.*\\))? in (.*):\\s*$/i;\n\nconst opera11: StackLineParserFn = line => {\n  const parts = opera11Regex.exec(line);\n  return parts ? createFrame(parts[5], parts[3] || parts[4] || UNKNOWN_FUNCTION, +parts[1], +parts[2]) : undefined;\n};\n\nexport const opera11StackLineParser: StackLineParser = [OPERA11_PRIORITY, opera11];\n\nexport const defaultStackLineParsers = [chromeStackLineParser, geckoStackLineParser, winjsStackLineParser];\n\nexport const defaultStackParser = createStackParser(...defaultStackLineParsers);\n\n/**\n * Safari web extensions, starting version unknown, can produce \"frames-only\" stacktraces.\n * What it means, is that instead of format like:\n *\n * Error: wat\n *   at function@url:row:col\n *   at function@url:row:col\n *   at function@url:row:col\n *\n * it produces something like:\n *\n *   function@url:row:col\n *   function@url:row:col\n *   function@url:row:col\n *\n * Because of that, it won't be captured by `chrome` RegExp and will fall into `Gecko` branch.\n * This function is extracted so that we can use it in both places without duplicating the logic.\n * Unfortunately \"just\" changing RegExp is too complicated now and making it pass all tests\n * and fix this case seems like an impossible, or at least way too time-consuming task.\n */\nconst extractSafariExtensionDetails = (func: string, filename: string): [string, string] => {\n  const isSafariExtension = func.indexOf('safari-extension') !== -1;\n  const isSafariWebExtension = func.indexOf('safari-web-extension') !== -1;\n\n  return isSafariExtension || isSafariWebExtension\n    ? [\n        func.indexOf('@') !== -1 ? func.split('@')[0] : UNKNOWN_FUNCTION,\n        isSafariExtension ? `safari-extension:${filename}` : `safari-web-extension:${filename}`,\n      ]\n    : [func, filename];\n};\n", "/* eslint-disable @typescript-eslint/no-unsafe-member-access */\nimport { getCurrentHub } from '@sentry/core';\nimport type { Event, EventHint, Hub, Integration, Primitive, StackParser } from '@sentry/types';\nimport {\n  addExceptionMechanism,\n  addInstrumentationHandler,\n  getLocationHref,\n  isErrorEvent,\n  isPrimitive,\n  isString,\n  logger,\n} from '@sentry/utils';\n\nimport type { BrowserClient } from '../client';\nimport { eventFromUnknownInput } from '../eventbuilder';\nimport { shouldIgnoreOnError } from '../helpers';\n\ntype GlobalHandlersIntegrationsOptionKeys = 'onerror' | 'onunhandledrejection';\n\n/** JSDoc */\ntype GlobalHandlersIntegrations = Record<GlobalHandlersIntegrationsOptionKeys, boolean>;\n\n/** Global handlers */\nexport class GlobalHandlers implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'GlobalHandlers';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = GlobalHandlers.id;\n\n  /** JSDoc */\n  private readonly _options: GlobalHandlersIntegrations;\n\n  /**\n   * Stores references functions to installing handlers. Will set to undefined\n   * after they have been run so that they are not used twice.\n   */\n  private _installFunc: Record<GlobalHandlersIntegrationsOptionKeys, (() => void) | undefined> = {\n    onerror: _installGlobalOnErrorHandler,\n    onunhandledrejection: _installGlobalOnUnhandledRejectionHandler,\n  };\n\n  /** JSDoc */\n  public constructor(options?: GlobalHandlersIntegrations) {\n    this._options = {\n      onerror: true,\n      onunhandledrejection: true,\n      ...options,\n    };\n  }\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    Error.stackTraceLimit = 50;\n    const options = this._options;\n\n    // We can disable guard-for-in as we construct the options object above + do checks against\n    // `this._installFunc` for the property.\n    // eslint-disable-next-line guard-for-in\n    for (const key in options) {\n      const installFunc = this._installFunc[key as GlobalHandlersIntegrationsOptionKeys];\n      if (installFunc && options[key as GlobalHandlersIntegrationsOptionKeys]) {\n        globalHandlerLog(key);\n        installFunc();\n        this._installFunc[key as GlobalHandlersIntegrationsOptionKeys] = undefined;\n      }\n    }\n  }\n}\n\n/** JSDoc */\nfunction _installGlobalOnErrorHandler(): void {\n  addInstrumentationHandler(\n    'error',\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (data: { msg: any; url: any; line: any; column: any; error: any }) => {\n      const [hub, stackParser, attachStacktrace] = getHubAndOptions();\n      if (!hub.getIntegration(GlobalHandlers)) {\n        return;\n      }\n      const { msg, url, line, column, error } = data;\n      if (shouldIgnoreOnError() || (error && error.__sentry_own_request__)) {\n        return;\n      }\n\n      const event =\n        error === undefined && isString(msg)\n          ? _eventFromIncompleteOnError(msg, url, line, column)\n          : _enhanceEventWithInitialFrame(\n              eventFromUnknownInput(stackParser, error || msg, undefined, attachStacktrace, false),\n              url,\n              line,\n              column,\n            );\n\n      event.level = 'error';\n\n      addMechanismAndCapture(hub, error, event, 'onerror');\n    },\n  );\n}\n\n/** JSDoc */\nfunction _installGlobalOnUnhandledRejectionHandler(): void {\n  addInstrumentationHandler(\n    'unhandledrejection',\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (e: any) => {\n      const [hub, stackParser, attachStacktrace] = getHubAndOptions();\n      if (!hub.getIntegration(GlobalHandlers)) {\n        return;\n      }\n      let error = e;\n\n      // dig the object of the rejection out of known event types\n      try {\n        // PromiseRejectionEvents store the object of the rejection under 'reason'\n        // see https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n        if ('reason' in e) {\n          error = e.reason;\n        }\n        // something, somewhere, (likely a browser extension) effectively casts PromiseRejectionEvents\n        // to CustomEvents, moving the `promise` and `reason` attributes of the PRE into\n        // the CustomEvent's `detail` attribute, since they're not part of CustomEvent's spec\n        // see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent and\n        // https://github.com/getsentry/sentry-javascript/issues/2380\n        else if ('detail' in e && 'reason' in e.detail) {\n          error = e.detail.reason;\n        }\n      } catch (_oO) {\n        // no-empty\n      }\n\n      if (shouldIgnoreOnError() || (error && error.__sentry_own_request__)) {\n        return true;\n      }\n\n      const event = isPrimitive(error)\n        ? _eventFromRejectionWithPrimitive(error)\n        : eventFromUnknownInput(stackParser, error, undefined, attachStacktrace, true);\n\n      event.level = 'error';\n\n      addMechanismAndCapture(hub, error, event, 'onunhandledrejection');\n      return;\n    },\n  );\n}\n\n/**\n * Create an event from a promise rejection where the `reason` is a primitive.\n *\n * @param reason: The `reason` property of the promise rejection\n * @returns An Event object with an appropriate `exception` value\n */\nfunction _eventFromRejectionWithPrimitive(reason: Primitive): Event {\n  return {\n    exception: {\n      values: [\n        {\n          type: 'UnhandledRejection',\n          // String() is needed because the Primitive type includes symbols (which can't be automatically stringified)\n          value: `Non-Error promise rejection captured with value: ${String(reason)}`,\n        },\n      ],\n    },\n  };\n}\n\n/**\n * This function creates a stack from an old, error-less onerror handler.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _eventFromIncompleteOnError(msg: any, url: any, line: any, column: any): Event {\n  const ERROR_TYPES_RE =\n    /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i;\n\n  // If 'message' is ErrorEvent, get real message from inside\n  let message = isErrorEvent(msg) ? msg.message : msg;\n  let name = 'Error';\n\n  const groups = message.match(ERROR_TYPES_RE);\n  if (groups) {\n    name = groups[1];\n    message = groups[2];\n  }\n\n  const event = {\n    exception: {\n      values: [\n        {\n          type: name,\n          value: message,\n        },\n      ],\n    },\n  };\n\n  return _enhanceEventWithInitialFrame(event, url, line, column);\n}\n\n/** JSDoc */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _enhanceEventWithInitialFrame(event: Event, url: any, line: any, column: any): Event {\n  // event.exception\n  const e = (event.exception = event.exception || {});\n  // event.exception.values\n  const ev = (e.values = e.values || []);\n  // event.exception.values[0]\n  const ev0 = (ev[0] = ev[0] || {});\n  // event.exception.values[0].stacktrace\n  const ev0s = (ev0.stacktrace = ev0.stacktrace || {});\n  // event.exception.values[0].stacktrace.frames\n  const ev0sf = (ev0s.frames = ev0s.frames || []);\n\n  const colno = isNaN(parseInt(column, 10)) ? undefined : column;\n  const lineno = isNaN(parseInt(line, 10)) ? undefined : line;\n  const filename = isString(url) && url.length > 0 ? url : getLocationHref();\n\n  // event.exception.values[0].stacktrace.frames\n  if (ev0sf.length === 0) {\n    ev0sf.push({\n      colno,\n      filename,\n      function: '?',\n      in_app: true,\n      lineno,\n    });\n  }\n\n  return event;\n}\n\nfunction globalHandlerLog(type: string): void {\n  __DEBUG_BUILD__ && logger.log(`Global Handler attached: ${type}`);\n}\n\nfunction addMechanismAndCapture(hub: Hub, error: EventHint['originalException'], event: Event, type: string): void {\n  addExceptionMechanism(event, {\n    handled: false,\n    type,\n  });\n  hub.captureEvent(event, {\n    originalException: error,\n  });\n}\n\nfunction getHubAndOptions(): [Hub, StackParser, boolean | undefined] {\n  const hub = getCurrentHub();\n  const client = hub.getClient<BrowserClient>();\n  const options = (client && client.getOptions()) || {\n    stackParser: () => [],\n    attachStacktrace: false,\n  };\n  return [hub, options.stackParser, options.attachStacktrace];\n}\n", "import type { Integration, WrappedFunction } from '@sentry/types';\nimport { fill, getFunctionName, getOriginalFunction } from '@sentry/utils';\n\nimport { WINDOW, wrap } from '../helpers';\n\nconst DEFAULT_EVENT_TARGET = [\n  'EventTarget',\n  'Window',\n  'Node',\n  'ApplicationCache',\n  'AudioTrackList',\n  'ChannelMergerNode',\n  'CryptoOperation',\n  'EventSource',\n  'FileReader',\n  'HTMLUnknownElement',\n  'IDBDatabase',\n  'IDBRequest',\n  'IDBTransaction',\n  'KeyOperation',\n  'MediaController',\n  'MessagePort',\n  'ModalWindow',\n  'Notification',\n  'SVGElementInstance',\n  'Screen',\n  'TextTrack',\n  'TextTrackCue',\n  'TextTrackList',\n  'WebSocket',\n  'WebSocketWorker',\n  'Worker',\n  'XMLHttpRequest',\n  'XMLHttpRequestEventTarget',\n  'XMLHttpRequestUpload',\n];\n\ntype XMLHttpRequestProp = 'onload' | 'onerror' | 'onprogress' | 'onreadystatechange';\n\n/** JSDoc */\ninterface TryCatchOptions {\n  setTimeout: boolean;\n  setInterval: boolean;\n  requestAnimationFrame: boolean;\n  XMLHttpRequest: boolean;\n  eventTarget: boolean | string[];\n}\n\n/** Wrap timer functions and event targets to catch errors and provide better meta data */\nexport class TryCatch implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'TryCatch';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = TryCatch.id;\n\n  /** JSDoc */\n  private readonly _options: TryCatchOptions;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options?: Partial<TryCatchOptions>) {\n    this._options = {\n      XMLHttpRequest: true,\n      eventTarget: true,\n      requestAnimationFrame: true,\n      setInterval: true,\n      setTimeout: true,\n      ...options,\n    };\n  }\n\n  /**\n   * Wrap timer functions and event targets to catch errors\n   * and provide better metadata.\n   */\n  public setupOnce(): void {\n    if (this._options.setTimeout) {\n      fill(WINDOW, 'setTimeout', _wrapTimeFunction);\n    }\n\n    if (this._options.setInterval) {\n      fill(WINDOW, 'setInterval', _wrapTimeFunction);\n    }\n\n    if (this._options.requestAnimationFrame) {\n      fill(WINDOW, 'requestAnimationFrame', _wrapRAF);\n    }\n\n    if (this._options.XMLHttpRequest && 'XMLHttpRequest' in WINDOW) {\n      fill(XMLHttpRequest.prototype, 'send', _wrapXHR);\n    }\n\n    const eventTargetOption = this._options.eventTarget;\n    if (eventTargetOption) {\n      const eventTarget = Array.isArray(eventTargetOption) ? eventTargetOption : DEFAULT_EVENT_TARGET;\n      eventTarget.forEach(_wrapEventTarget);\n    }\n  }\n}\n\n/** JSDoc */\nfunction _wrapTimeFunction(original: () => void): () => number {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function (this: any, ...args: any[]): number {\n    const originalCallback = args[0];\n    args[0] = wrap(originalCallback, {\n      mechanism: {\n        data: { function: getFunctionName(original) },\n        handled: true,\n        type: 'instrument',\n      },\n    });\n    return original.apply(this, args);\n  };\n}\n\n/** JSDoc */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _wrapRAF(original: any): (callback: () => void) => any {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function (this: any, callback: () => void): () => void {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return original.apply(this, [\n      wrap(callback, {\n        mechanism: {\n          data: {\n            function: 'requestAnimationFrame',\n            handler: getFunctionName(original),\n          },\n          handled: true,\n          type: 'instrument',\n        },\n      }),\n    ]);\n  };\n}\n\n/** JSDoc */\nfunction _wrapXHR(originalSend: () => void): () => void {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function (this: XMLHttpRequest, ...args: any[]): void {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const xhr = this;\n    const xmlHttpRequestProps: XMLHttpRequestProp[] = ['onload', 'onerror', 'onprogress', 'onreadystatechange'];\n\n    xmlHttpRequestProps.forEach(prop => {\n      if (prop in xhr && typeof xhr[prop] === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        fill(xhr, prop, function (original: WrappedFunction): () => any {\n          const wrapOptions = {\n            mechanism: {\n              data: {\n                function: prop,\n                handler: getFunctionName(original),\n              },\n              handled: true,\n              type: 'instrument',\n            },\n          };\n\n          // If Instrument integration has been called before TryCatch, get the name of original function\n          const originalFunction = getOriginalFunction(original);\n          if (originalFunction) {\n            wrapOptions.mechanism.data.handler = getFunctionName(originalFunction);\n          }\n\n          // Otherwise wrap directly\n          return wrap(original, wrapOptions);\n        });\n      }\n    });\n\n    return originalSend.apply(this, args);\n  };\n}\n\n/** JSDoc */\nfunction _wrapEventTarget(target: string): void {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const globalObject = WINDOW as { [key: string]: any };\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  const proto = globalObject[target] && globalObject[target].prototype;\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n  if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n    return;\n  }\n\n  fill(proto, 'addEventListener', function (original: () => void): (\n    eventName: string,\n    fn: EventListenerObject,\n    options?: boolean | AddEventListenerOptions,\n  ) => void {\n    return function (\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this: any,\n      eventName: string,\n      fn: EventListenerObject,\n      options?: boolean | AddEventListenerOptions,\n    ): (eventName: string, fn: EventListenerObject, capture?: boolean, secure?: boolean) => void {\n      try {\n        if (typeof fn.handleEvent === 'function') {\n          // ESlint disable explanation:\n          //  First, it is generally safe to call `wrap` with an unbound function. Furthermore, using `.bind()` would\n          //  introduce a bug here, because bind returns a new function that doesn't have our\n          //  flags(like __sentry_original__) attached. `wrap` checks for those flags to avoid unnecessary wrapping.\n          //  Without those flags, every call to addEventListener wraps the function again, causing a memory leak.\n          // eslint-disable-next-line @typescript-eslint/unbound-method\n          fn.handleEvent = wrap(fn.handleEvent, {\n            mechanism: {\n              data: {\n                function: 'handleEvent',\n                handler: getFunctionName(fn),\n                target,\n              },\n              handled: true,\n              type: 'instrument',\n            },\n          });\n        }\n      } catch (err) {\n        // can sometimes get 'Permission denied to access property \"handle Event'\n      }\n\n      return original.apply(this, [\n        eventName,\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        wrap(fn as any as WrappedFunction, {\n          mechanism: {\n            data: {\n              function: 'addEventListener',\n              handler: getFunctionName(fn),\n              target,\n            },\n            handled: true,\n            type: 'instrument',\n          },\n        }),\n        options,\n      ]);\n    };\n  });\n\n  fill(\n    proto,\n    'removeEventListener',\n    function (\n      originalRemoveEventListener: () => void,\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ): (this: any, eventName: string, fn: EventListenerObject, options?: boolean | EventListenerOptions) => () => void {\n      return function (\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this: any,\n        eventName: string,\n        fn: EventListenerObject,\n        options?: boolean | EventListenerOptions,\n      ): () => void {\n        /**\n         * There are 2 possible scenarios here:\n         *\n         * 1. Someone passes a callback, which was attached prior to Sentry initialization, or by using unmodified\n         * method, eg. `document.addEventListener.call(el, name, handler). In this case, we treat this function\n         * as a pass-through, and call original `removeEventListener` with it.\n         *\n         * 2. Someone passes a callback, which was attached after Sentry was initialized, which means that it was using\n         * our wrapped version of `addEventListener`, which internally calls `wrap` helper.\n         * This helper \"wraps\" whole callback inside a try/catch statement, and attached appropriate metadata to it,\n         * in order for us to make a distinction between wrapped/non-wrapped functions possible.\n         * If a function was wrapped, it has additional property of `__sentry_wrapped__`, holding the handler.\n         *\n         * When someone adds a handler prior to initialization, and then do it again, but after,\n         * then we have to detach both of them. Otherwise, if we'd detach only wrapped one, it'd be impossible\n         * to get rid of the initial handler and it'd stick there forever.\n         */\n        const wrappedEventHandler = fn as unknown as WrappedFunction;\n        try {\n          const originalEventHandler = wrappedEventHandler && wrappedEventHandler.__sentry_wrapped__;\n          if (originalEventHandler) {\n            originalRemoveEventListener.call(this, eventName, originalEventHandler, options);\n          }\n        } catch (e) {\n          // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n        }\n        return originalRemoveEventListener.call(this, eventName, wrappedEventHandler, options);\n      };\n    },\n  );\n}\n", "import { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport type { Event, EventHint, Exception, ExtendedError, Integration, StackParser } from '@sentry/types';\nimport { isInstanceOf } from '@sentry/utils';\n\nimport type { BrowserClient } from '../client';\nimport { exceptionFromError } from '../eventbuilder';\n\nconst DEFAULT_KEY = 'cause';\nconst DEFAULT_LIMIT = 5;\n\ninterface LinkedErrorsOptions {\n  key: string;\n  limit: number;\n}\n\n/** Adds SDK info to an event. */\nexport class LinkedErrors implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'LinkedErrors';\n\n  /**\n   * @inheritDoc\n   */\n  public readonly name: string = LinkedErrors.id;\n\n  /**\n   * @inheritDoc\n   */\n  private readonly _key: LinkedErrorsOptions['key'];\n\n  /**\n   * @inheritDoc\n   */\n  private readonly _limit: LinkedErrorsOptions['limit'];\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options: Partial<LinkedErrorsOptions> = {}) {\n    this._key = options.key || DEFAULT_KEY;\n    this._limit = options.limit || DEFAULT_LIMIT;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    const client = getCurrentHub().getClient<BrowserClient>();\n    if (!client) {\n      return;\n    }\n    addGlobalEventProcessor((event: Event, hint?: EventHint) => {\n      const self = getCurrentHub().getIntegration(LinkedErrors);\n      return self ? _handler(client.getOptions().stackParser, self._key, self._limit, event, hint) : event;\n    });\n  }\n}\n\n/**\n * @inheritDoc\n */\nexport function _handler(\n  parser: StackParser,\n  key: string,\n  limit: number,\n  event: Event,\n  hint?: EventHint,\n): Event | null {\n  if (!event.exception || !event.exception.values || !hint || !isInstanceOf(hint.originalException, Error)) {\n    return event;\n  }\n  const linkedErrors = _walkErrorTree(parser, limit, hint.originalException as ExtendedError, key);\n  event.exception.values = [...linkedErrors, ...event.exception.values];\n  return event;\n}\n\n/**\n * JSDOC\n */\nexport function _walkErrorTree(\n  parser: StackParser,\n  limit: number,\n  error: ExtendedError,\n  key: string,\n  stack: Exception[] = [],\n): Exception[] {\n  if (!isInstanceOf(error[key], Error) || stack.length + 1 >= limit) {\n    return stack;\n  }\n  const exception = exceptionFromError(parser, error[key]);\n  return _walkErrorTree(parser, limit, error[key], key, [exception, ...stack]);\n}\n", "import { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport type { Event, Integration } from '@sentry/types';\n\nimport { WINDOW } from '../helpers';\n\n/** HttpContext integration collects information about HTTP request headers */\nexport class HttpContext implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'HttpContext';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = HttpContext.id;\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    addGlobalEventProcessor((event: Event) => {\n      if (getCurrentHub().getIntegration(HttpContext)) {\n        // if none of the information we want exists, don't bother\n        if (!WINDOW.navigator && !WINDOW.location && !WINDOW.document) {\n          return event;\n        }\n\n        // grab as much info as exists and add it to the event\n        const url = (event.request && event.request.url) || (WINDOW.location && WINDOW.location.href);\n        const { referrer } = WINDOW.document || {};\n        const { userAgent } = WINDOW.navigator || {};\n\n        const headers = {\n          ...(event.request && event.request.headers),\n          ...(referrer && { Referer: referrer }),\n          ...(userAgent && { 'User-Agent': userAgent }),\n        };\n        const request = { ...event.request, ...(url && { url }), headers };\n\n        return { ...event, request };\n      }\n      return event;\n    });\n  }\n}\n", "import type { Event, EventProcessor, Exception, Hub, Integration, StackFrame } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\n/** Deduplication filter */\nexport class Dedupe implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Dedupe';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = Dedupe.id;\n\n  /**\n   * @inheritDoc\n   */\n  private _previousEvent?: Event;\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(addGlobalEventProcessor: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    const eventProcessor: EventProcessor = currentEvent => {\n      // We want to ignore any non-error type events, e.g. transactions or replays\n      // These should never be deduped, and also not be compared against as _previousEvent.\n      if (currentEvent.type) {\n        return currentEvent;\n      }\n\n      const self = getCurrentHub().getIntegration(Dedupe);\n      if (self) {\n        // Juuust in case something goes wrong\n        try {\n          if (_shouldDropEvent(currentEvent, self._previousEvent)) {\n            __DEBUG_BUILD__ && logger.warn('Event dropped due to being a duplicate of previously captured event.');\n            return null;\n          }\n        } catch (_oO) {\n          return (self._previousEvent = currentEvent);\n        }\n\n        return (self._previousEvent = currentEvent);\n      }\n      return currentEvent;\n    };\n\n    eventProcessor.id = this.name;\n    addGlobalEventProcessor(eventProcessor);\n  }\n}\n\n/** JSDoc */\nfunction _shouldDropEvent(currentEvent: Event, previousEvent?: Event): boolean {\n  if (!previousEvent) {\n    return false;\n  }\n\n  if (_isSameMessageEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  if (_isSameExceptionEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  return false;\n}\n\n/** JSDoc */\nfunction _isSameMessageEvent(currentEvent: Event, previousEvent: Event): boolean {\n  const currentMessage = currentEvent.message;\n  const previousMessage = previousEvent.message;\n\n  // If neither event has a message property, they were both exceptions, so bail out\n  if (!currentMessage && !previousMessage) {\n    return false;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentMessage && !previousMessage) || (!currentMessage && previousMessage)) {\n    return false;\n  }\n\n  if (currentMessage !== previousMessage) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\n/** JSDoc */\nfunction _isSameExceptionEvent(currentEvent: Event, previousEvent: Event): boolean {\n  const previousException = _getExceptionFromEvent(previousEvent);\n  const currentException = _getExceptionFromEvent(currentEvent);\n\n  if (!previousException || !currentException) {\n    return false;\n  }\n\n  if (previousException.type !== currentException.type || previousException.value !== currentException.value) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\n/** JSDoc */\nfunction _isSameStacktrace(currentEvent: Event, previousEvent: Event): boolean {\n  let currentFrames = _getFramesFromEvent(currentEvent);\n  let previousFrames = _getFramesFromEvent(previousEvent);\n\n  // If neither event has a stacktrace, they are assumed to be the same\n  if (!currentFrames && !previousFrames) {\n    return true;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentFrames && !previousFrames) || (!currentFrames && previousFrames)) {\n    return false;\n  }\n\n  currentFrames = currentFrames as StackFrame[];\n  previousFrames = previousFrames as StackFrame[];\n\n  // If number of frames differ, they are not the same\n  if (previousFrames.length !== currentFrames.length) {\n    return false;\n  }\n\n  // Otherwise, compare the two\n  for (let i = 0; i < previousFrames.length; i++) {\n    const frameA = previousFrames[i];\n    const frameB = currentFrames[i];\n\n    if (\n      frameA.filename !== frameB.filename ||\n      frameA.lineno !== frameB.lineno ||\n      frameA.colno !== frameB.colno ||\n      frameA.function !== frameB.function\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/** JSDoc */\nfunction _isSameFingerprint(currentEvent: Event, previousEvent: Event): boolean {\n  let currentFingerprint = currentEvent.fingerprint;\n  let previousFingerprint = previousEvent.fingerprint;\n\n  // If neither event has a fingerprint, they are assumed to be the same\n  if (!currentFingerprint && !previousFingerprint) {\n    return true;\n  }\n\n  // If only one event has a fingerprint, but not the other one, they are not the same\n  if ((currentFingerprint && !previousFingerprint) || (!currentFingerprint && previousFingerprint)) {\n    return false;\n  }\n\n  currentFingerprint = currentFingerprint as string[];\n  previousFingerprint = previousFingerprint as string[];\n\n  // Otherwise, compare the two\n  try {\n    return !!(currentFingerprint.join('') === previousFingerprint.join(''));\n  } catch (_oO) {\n    return false;\n  }\n}\n\n/** JSDoc */\nfunction _getExceptionFromEvent(event: Event): Exception | undefined {\n  return event.exception && event.exception.values && event.exception.values[0];\n}\n\n/** JSDoc */\nfunction _getFramesFromEvent(event: Event): StackFrame[] | undefined {\n  const exception = event.exception;\n\n  if (exception) {\n    try {\n      // @ts-ignore Object could be undefined\n      return exception.values[0].stacktrace.frames;\n    } catch (_oO) {\n      return undefined;\n    }\n  }\n  return undefined;\n}\n", "import type { Hub } from '@sentry/core';\nimport {\n  getCurrentHub,\n  getIntegrationsToSetup,\n  getReportDialogEndpoint,\n  initAndBind,\n  Integrations as CoreIntegrations,\n} from '@sentry/core';\nimport {\n  addInstrumentationHandler,\n  logger,\n  resolvedSyncPromise,\n  stackParserFromStackParserOptions,\n  supportsFetch,\n} from '@sentry/utils';\n\nimport type { BrowserClientOptions, BrowserOptions } from './client';\nimport { BrowserClient } from './client';\nimport type { ReportDialogOptions } from './helpers';\nimport { WINDOW, wrap as internalWrap } from './helpers';\nimport { Breadcrumbs, Dedupe, GlobalHandlers, HttpContext, LinkedErrors, TryCatch } from './integrations';\nimport { defaultStackParser } from './stack-parsers';\nimport { makeFetchTransport, makeXHRTransport } from './transports';\n\nexport const defaultIntegrations = [\n  new CoreIntegrations.InboundFilters(),\n  new CoreIntegrations.FunctionToString(),\n  new TryCatch(),\n  new Breadcrumbs(),\n  new GlobalHandlers(),\n  new LinkedErrors(),\n  new Dedupe(),\n  new HttpContext(),\n];\n\n/**\n * A magic string that build tooling can leverage in order to inject a release value into the SDK.\n */\ndeclare const __SENTRY_RELEASE__: string | undefined;\n\n/**\n * The Sentry Browser SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible when\n * loading the web page. To set context information or send manual events, use\n * the provided methods.\n *\n * @example\n *\n * ```\n *\n * import { init } from '@sentry/browser';\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { configureScope } from '@sentry/browser';\n * configureScope((scope: Scope) => {\n *   scope.setExtra({ battery: 0.7 });\n *   scope.setTag({ user_mode: 'admin' });\n *   scope.setUser({ id: '4711' });\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { addBreadcrumb } from '@sentry/browser';\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n *\n * ```\n *\n * import * as Sentry from '@sentry/browser';\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BrowserOptions} for documentation on configuration options.\n */\nexport function init(options: BrowserOptions = {}): void {\n  if (options.defaultIntegrations === undefined) {\n    options.defaultIntegrations = defaultIntegrations;\n  }\n  if (options.release === undefined) {\n    // This allows build tooling to find-and-replace __SENTRY_RELEASE__ to inject a release value\n    if (typeof __SENTRY_RELEASE__ === 'string') {\n      options.release = __SENTRY_RELEASE__;\n    }\n\n    // This supports the variable that sentry-webpack-plugin injects\n    if (WINDOW.SENTRY_RELEASE && WINDOW.SENTRY_RELEASE.id) {\n      options.release = WINDOW.SENTRY_RELEASE.id;\n    }\n  }\n  if (options.autoSessionTracking === undefined) {\n    options.autoSessionTracking = true;\n  }\n  if (options.sendClientReports === undefined) {\n    options.sendClientReports = true;\n  }\n\n  const clientOptions: BrowserClientOptions = {\n    ...options,\n    stackParser: stackParserFromStackParserOptions(options.stackParser || defaultStackParser),\n    integrations: getIntegrationsToSetup(options),\n    transport: options.transport || (supportsFetch() ? makeFetchTransport : makeXHRTransport),\n  };\n\n  initAndBind(BrowserClient, clientOptions);\n\n  if (options.autoSessionTracking) {\n    startSessionTracking();\n  }\n}\n\n/**\n * Present the user with a report dialog.\n *\n * @param options Everything is optional, we try to fetch all info need from the global scope.\n */\nexport function showReportDialog(options: ReportDialogOptions = {}, hub: Hub = getCurrentHub()): void {\n  // doesn't work without a document (React Native)\n  if (!WINDOW.document) {\n    __DEBUG_BUILD__ && logger.error('Global document not defined in showReportDialog call');\n    return;\n  }\n\n  const { client, scope } = hub.getStackTop();\n  const dsn = options.dsn || (client && client.getDsn());\n  if (!dsn) {\n    __DEBUG_BUILD__ && logger.error('DSN not configured for showReportDialog call');\n    return;\n  }\n\n  if (scope) {\n    options.user = {\n      ...scope.getUser(),\n      ...options.user,\n    };\n  }\n\n  if (!options.eventId) {\n    options.eventId = hub.lastEventId();\n  }\n\n  const script = WINDOW.document.createElement('script');\n  script.async = true;\n  script.src = getReportDialogEndpoint(dsn, options);\n\n  if (options.onLoad) {\n    script.onload = options.onLoad;\n  }\n\n  const injectionPoint = WINDOW.document.head || WINDOW.document.body;\n  if (injectionPoint) {\n    injectionPoint.appendChild(script);\n  } else {\n    __DEBUG_BUILD__ && logger.error('Not injecting report dialog. No injection point found in HTML');\n  }\n}\n\n/**\n * This is the getter for lastEventId.\n *\n * @returns The last event id of a captured event.\n */\nexport function lastEventId(): string | undefined {\n  return getCurrentHub().lastEventId();\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function forceLoad(): void {\n  // Noop\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function onLoad(callback: () => void): void {\n  callback();\n}\n\n/**\n * Call `flush()` on the current client, if there is one. See {@link Client.flush}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue. Omitting this parameter will cause\n * the client to wait until all events are sent before resolving the promise.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nexport function flush(timeout?: number): PromiseLike<boolean> {\n  const client = getCurrentHub().getClient<BrowserClient>();\n  if (client) {\n    return client.flush(timeout);\n  }\n  __DEBUG_BUILD__ && logger.warn('Cannot flush events. No client defined.');\n  return resolvedSyncPromise(false);\n}\n\n/**\n * Call `close()` on the current client, if there is one. See {@link Client.close}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue before shutting down. Omitting this\n * parameter will cause the client to wait until all events are sent before disabling itself.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nexport function close(timeout?: number): PromiseLike<boolean> {\n  const client = getCurrentHub().getClient<BrowserClient>();\n  if (client) {\n    return client.close(timeout);\n  }\n  __DEBUG_BUILD__ && logger.warn('Cannot flush events and disable SDK. No client defined.');\n  return resolvedSyncPromise(false);\n}\n\n/**\n * Wrap code within a try/catch block so the SDK is able to capture errors.\n *\n * @param fn A function to wrap.\n *\n * @returns The result of wrapped function call.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function wrap(fn: (...args: any) => any): any {\n  return internalWrap(fn)();\n}\n\nfunction startSessionOnHub(hub: Hub): void {\n  hub.startSession({ ignoreDuration: true });\n  hub.captureSession();\n}\n\n/**\n * Enable automatic Session Tracking for the initial page load.\n */\nfunction startSessionTracking(): void {\n  if (typeof WINDOW.document === 'undefined') {\n    __DEBUG_BUILD__ &&\n      logger.warn('Session tracking in non-browser environment with @sentry/browser is not supported.');\n    return;\n  }\n\n  const hub = getCurrentHub();\n\n  // The only way for this to be false is for there to be a version mismatch between @sentry/browser (>= 6.0.0) and\n  // @sentry/hub (< 5.27.0). In the simple case, there won't ever be such a mismatch, because the two packages are\n  // pinned at the same version in package.json, but there are edge cases where it's possible. See\n  // https://github.com/getsentry/sentry-javascript/issues/3207 and\n  // https://github.com/getsentry/sentry-javascript/issues/3234 and\n  // https://github.com/getsentry/sentry-javascript/issues/3278.\n  if (!hub.captureSession) {\n    return;\n  }\n\n  // The session duration for browser sessions does not track a meaningful\n  // concept that can be used as a metric.\n  // Automatically captured sessions are akin to page views, and thus we\n  // discard their duration.\n  startSessionOnHub(hub);\n\n  // We want to create a session for every navigation as well\n  addInstrumentationHandler('history', ({ from, to }) => {\n    // Don't create an additional session for the initial route or if the location did not change\n    if (!(from === undefined || from === to)) {\n      startSessionOnHub(getCurrentHub());\n    }\n  });\n}\n", "export { GlobalHandlers } from './globalhandlers.js';\nexport { TryCatch } from './trycatch.js';\nexport { Breadcrumbs } from './breadcrumbs.js';\nexport { LinkedErrors } from './linkederrors.js';\nexport { HttpContext } from './httpcontext.js';\nexport { Dedupe } from './dedupe.js';\n//# sourceMappingURL=index.js.map\n", "export * from './exports';\n\nimport { Integrations as CoreIntegrations } from '@sentry/core';\n\nimport { WINDOW } from './helpers';\nimport * as BrowserIntegrations from './integrations';\n\nlet windowIntegrations = {};\n\n// This block is needed to add compatibility with the integrations packages when used with a CDN\nif (WINDOW.Sentry && WINDOW.Sentry.Integrations) {\n  windowIntegrations = WINDOW.Sentry.Integrations;\n}\n\nconst INTEGRATIONS = {\n  ...windowIntegrations,\n  ...CoreIntegrations,\n  ...BrowserIntegrations,\n};\n\nexport { INTEGRATIONS as Integrations };\n\n// DO NOT DELETE THESE COMMENTS!\n// We want to exclude Replay/Offline from CDN bundles, so we remove the block below with our\n// makeExcludeBlockPlugin Rollup plugin when generating bundles. Everything between\n// ROLLUP_EXCLUDE_*_FROM_BUNDLES_BEGIN and _END__ is removed for bundles.\n\n// __ROLLUP_EXCLUDE_REPLAY_FROM_BUNDLES_BEGIN__\nexport { Replay } from '@sentry/replay';\n// __ROLLUP_EXCLUDE_REPLAY_FROM_BUNDLES_END__\n\n// __ROLLUP_EXCLUDE_OFFLINE_FROM_BUNDLES_BEGIN__\nexport { makeBrowserOfflineTransport } from './transports/offline';\n// __ROLLUP_EXCLUDE_OFFLINE_FROM_BUNDLES_END__\n\n// __ROLLUP_EXCLUDE_BROWSER_PROFILING_FROM_BUNDLES_BEGIN__\nexport { onProfilingStartRouteTransaction } from './profiling/hubextensions';\nexport { BrowserProfilingIntegration } from './profiling/integration';\n// __ROLLUP_EXCLUDE_BROWSER_PROFILING_FROM_BUNDLES_END__\n", "import type { SpanStatusType } from '@sentry/core';\nimport { getActiveTransaction } from '@sentry/core';\nimport { addInstrumentationHandler, logger } from '@sentry/utils';\n\n/**\n * Configures global error listeners\n */\nexport function registerErrorInstrumentation(): void {\n  addInstrumentationHandler('error', errorCallback);\n  addInstrumentationHandler('unhandledrejection', errorCallback);\n}\n\n/**\n * If an error or unhandled promise occurs, we mark the active transaction as failed\n */\nfunction errorCallback(): void {\n  const activeTransaction = getActiveTransaction();\n  if (activeTransaction) {\n    const status: SpanStatusType = 'internal_error';\n    __DEBUG_BUILD__ && logger.log(`[Tracing] Transaction: ${status} -> Global error occured`);\n    activeTransaction.setStatus(status);\n  }\n}\n", "import { addTracingExtensions, getMainCarrier } from '@sentry/core';\nimport type { Integration, IntegrationClass } from '@sentry/types';\nimport { dynamicRequire, isNodeEnv, loadModule } from '@sentry/utils';\n\nimport { registerErrorInstrumentation } from './errors';\n\n/**\n * @private\n */\nfunction _autoloadDatabaseIntegrations(): void {\n  const carrier = getMainCarrier();\n  if (!carrier.__SENTRY__) {\n    return;\n  }\n\n  const packageToIntegrationMapping: Record<string, () => Integration> = {\n    mongodb() {\n      const integration = dynamicRequire(module, './node/integrations/mongo') as {\n        Mongo: IntegrationClass<Integration>;\n      };\n      return new integration.Mongo();\n    },\n    mongoose() {\n      const integration = dynamicRequire(module, './node/integrations/mongo') as {\n        Mongo: IntegrationClass<Integration>;\n      };\n      return new integration.Mongo({ mongoose: true });\n    },\n    mysql() {\n      const integration = dynamicRequire(module, './node/integrations/mysql') as {\n        Mysql: IntegrationClass<Integration>;\n      };\n      return new integration.Mysql();\n    },\n    pg() {\n      const integration = dynamicRequire(module, './node/integrations/postgres') as {\n        Postgres: IntegrationClass<Integration>;\n      };\n      return new integration.Postgres();\n    },\n  };\n\n  const mappedPackages = Object.keys(packageToIntegrationMapping)\n    .filter(moduleName => !!loadModule(moduleName))\n    .map(pkg => {\n      try {\n        return packageToIntegrationMapping[pkg]();\n      } catch (e) {\n        return undefined;\n      }\n    })\n    .filter(p => p) as Integration[];\n\n  if (mappedPackages.length > 0) {\n    carrier.__SENTRY__.integrations = [...(carrier.__SENTRY__.integrations || []), ...mappedPackages];\n  }\n}\n\n/**\n * This patches the global object and injects the Tracing extensions methods\n */\nexport function addExtensionMethods(): void {\n  addTracingExtensions();\n\n  // Detect and automatically load specified integrations.\n  if (isNodeEnv()) {\n    _autoloadDatabaseIntegrations();\n  }\n\n  // If an error happens globally, we should make sure transaction status is set to error.\n  registerErrorInstrumentation();\n}\n", "import { GLOBAL_OBJ } from '@sentry/utils';\n\nexport const WINDOW = GLOBAL_OBJ as typeof GLOBAL_OBJ & Window;\n", "import type { IdleTransaction, SpanStatusType } from '@sentry/core';\nimport { getActiveTransaction } from '@sentry/core';\nimport { logger } from '@sentry/utils';\n\nimport { WINDOW } from './types';\n\n/**\n * Add a listener that cancels and finishes a transaction when the global\n * document is hidden.\n */\nexport function registerBackgroundTabDetection(): void {\n  if (WINDOW && WINDOW.document) {\n    WINDOW.document.addEventListener('visibilitychange', () => {\n      const activeTransaction = getActiveTransaction() as IdleTransaction;\n      if (WINDOW.document.hidden && activeTransaction) {\n        const statusType: SpanStatusType = 'cancelled';\n\n        __DEBUG_BUILD__ &&\n          logger.log(\n            `[Tracing] Transaction: ${statusType} -> since tab moved to the background, op: ${activeTransaction.op}`,\n          );\n        // We should not set status if it is already set, this prevent important statuses like\n        // error or data loss from being overwritten on transaction.\n        if (!activeTransaction.status) {\n          activeTransaction.setStatus(statusType);\n        }\n        activeTransaction.setTag('visibilitychange', 'document.hidden');\n        activeTransaction.finish();\n      }\n    });\n  } else {\n    __DEBUG_BUILD__ &&\n      logger.warn('[Tracing] Could not set up background tab detection due to lack of global document');\n  }\n}\n", "/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Metric, ReportCallback } from '../types';\n\nexport const bindReporter = (\n  callback: ReportCallback,\n  metric: Metric,\n  reportAllChanges?: boolean,\n): ((forceReport?: boolean) => void) => {\n  let prevValue: number;\n  let delta: number;\n  return (forceReport?: boolean) => {\n    if (metric.value >= 0) {\n      if (forceReport || reportAllChanges) {\n        delta = metric.value - (prevValue || 0);\n\n        // Report the metric if there's a non-zero delta or if no previous\n        // value exists (which can happen in the case of the document becoming\n        // hidden when the metric value is 0).\n        // See: https://github.com/GoogleChrome/web-vitals/issues/14\n        if (delta || prevValue === undefined) {\n          prevValue = metric.value;\n          metric.delta = delta;\n          callback(metric);\n        }\n      }\n    }\n  };\n};\n", "/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Performantly generate a unique, 30-char string by combining a version\n * number, the current timestamp with a 13-digit number integer.\n * @return {string}\n */\nexport const generateUniqueID = (): string => {\n  return `v3-${Date.now()}-${Math.floor(Math.random() * (9e12 - 1)) + 1e12}`;\n};\n", "/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WINDOW } from '../../types';\nimport type { NavigationTimingPolyfillEntry } from '../types';\n\nconst getNavigationEntryFromPerformanceTiming = (): NavigationTimingPolyfillEntry => {\n  // eslint-disable-next-line deprecation/deprecation\n  const timing = WINDOW.performance.timing;\n  // eslint-disable-next-line deprecation/deprecation\n  const type = WINDOW.performance.navigation.type;\n\n  const navigationEntry: { [key: string]: number | string } = {\n    entryType: 'navigation',\n    startTime: 0,\n    type: type == 2 ? 'back_forward' : type === 1 ? 'reload' : 'navigate',\n  };\n\n  for (const key in timing) {\n    if (key !== 'navigationStart' && key !== 'toJSON') {\n      navigationEntry[key] = Math.max((timing[key as keyof PerformanceTiming] as number) - timing.navigationStart, 0);\n    }\n  }\n  return navigationEntry as unknown as NavigationTimingPolyfillEntry;\n};\n\nexport const getNavigationEntry = (): PerformanceNavigationTiming | NavigationTimingPolyfillEntry | undefined => {\n  if (WINDOW.__WEB_VITALS_POLYFILL__) {\n    return (\n      WINDOW.performance &&\n      ((performance.getEntriesByType && performance.getEntriesByType('navigation')[0]) ||\n        getNavigationEntryFromPerformanceTiming())\n    );\n  } else {\n    return WINDOW.performance && performance.getEntriesByType && performance.getEntriesByType('navigation')[0];\n  }\n};\n", "/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getNavigationEntry } from './getNavigationEntry';\n\nexport const getActivationStart = (): number => {\n  const navEntry = getNavigationEntry();\n  return (navEntry && navEntry.activationStart) || 0;\n};\n", "/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WINDOW } from '../../types';\nimport type { Metric } from '../types';\nimport { generateUniqueID } from './generateUniqueID';\nimport { getActivationStart } from './getActivationStart';\nimport { getNavigationEntry } from './getNavigationEntry';\n\nexport const initMetric = (name: Metric['name'], value?: number): Metric => {\n  const navEntry = getNavigationEntry();\n  let navigationType: Metric['navigationType'] = 'navigate';\n\n  if (navEntry) {\n    if (WINDOW.document.prerendering || getActivationStart() > 0) {\n      navigationType = 'prerender';\n    } else {\n      navigationType = navEntry.type.replace(/_/g, '-') as Metric['navigationType'];\n    }\n  }\n\n  return {\n    name,\n    value: typeof value === 'undefined' ? -1 : value,\n    rating: 'good', // Will be updated if the value changes.\n    delta: 0,\n    entries: [],\n    id: generateUniqueID(),\n    navigationType,\n  };\n};\n", "/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { FirstInputPolyfillEntry, NavigationTimingPolyfillEntry, PerformancePaintTiming } from '../types';\n\nexport interface PerformanceEntryHandler {\n  (entry: PerformanceEntry): void;\n}\n\ninterface PerformanceEntryMap {\n  event: PerformanceEventTiming[];\n  paint: PerformancePaintTiming[];\n  'layout-shift': LayoutShift[];\n  'largest-contentful-paint': LargestContentfulPaint[];\n  'first-input': PerformanceEventTiming[] | FirstInputPolyfillEntry[];\n  navigation: PerformanceNavigationTiming[] | NavigationTimingPolyfillEntry[];\n  resource: PerformanceResourceTiming[];\n  longtask: PerformanceEntry[];\n}\n\n/**\n * Takes a performance entry type and a callback function, and creates a\n * `PerformanceObserver` instance that will observe the specified entry type\n * with buffering enabled and call the callback _for each entry_.\n *\n * This function also feature-detects entry support and wraps the logic in a\n * try/catch to avoid errors in unsupporting browsers.\n */\nexport const observe = <K extends keyof PerformanceEntryMap>(\n  type: K,\n  callback: (entries: PerformanceEntryMap[K]) => void,\n  opts?: PerformanceObserverInit,\n): PerformanceObserver | undefined => {\n  try {\n    if (PerformanceObserver.supportedEntryTypes.includes(type)) {\n      const po = new PerformanceObserver(list => {\n        callback(list.getEntries() as PerformanceEntryMap[K]);\n      });\n      po.observe(\n        Object.assign(\n          {\n            type,\n            buffered: true,\n          },\n          opts || {},\n        ) as PerformanceObserverInit,\n      );\n      return po;\n    }\n  } catch (e) {\n    // Do nothing.\n  }\n  return;\n};\n", "/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WINDOW } from '../../types';\n\nexport interface OnHiddenCallback {\n  (event: Event): void;\n}\n\nexport const onHidden = (cb: OnHiddenCallback, once?: boolean): void => {\n  const onHiddenOrPageHide = (event: Event): void => {\n    if (event.type === 'pagehide' || WINDOW.document.visibilityState === 'hidden') {\n      cb(event);\n      if (once) {\n        removeEventListener('visibilitychange', onHiddenOrPageHide, true);\n        removeEventListener('pagehide', onHiddenOrPageHide, true);\n      }\n    }\n  };\n  addEventListener('visibilitychange', onHiddenOrPageHide, true);\n  // Some browsers have buggy implementations of visibilitychange,\n  // so we use pagehide in addition, just to be safe.\n  addEventListener('pagehide', onHiddenOrPageHide, true);\n};\n", "/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { bindReporter } from './lib/bindReporter';\nimport { initMetric } from './lib/initMetric';\nimport { observe } from './lib/observe';\nimport { onHidden } from './lib/onHidden';\nimport type { CLSMetric, ReportCallback, StopListening } from './types';\n\n/**\n * Calculates the [CLS](https://web.dev/cls/) value for the current page and\n * calls the `callback` function once the value is ready to be reported, along\n * with all `layout-shift` performance entries that were used in the metric\n * value calculation. The reported value is a `double` (corresponding to a\n * [layout shift score](https://web.dev/cls/#layout-shift-score)).\n *\n * If the `reportAllChanges` configuration option is set to `true`, the\n * `callback` function will be called as soon as the value is initially\n * determined as well as any time the value changes throughout the page\n * lifespan.\n *\n * _**Important:** CLS should be continually monitored for changes throughout\n * the entire lifespan of a page—including if the user returns to the page after\n * it's been hidden/backgrounded. However, since browsers often [will not fire\n * additional callbacks once the user has backgrounded a\n * page](https://developer.chrome.com/blog/page-lifecycle-api/#advice-hidden),\n * `callback` is always called when the page's visibility state changes to\n * hidden. As a result, the `callback` function might be called multiple times\n * during the same page load._\n */\nexport const onCLS = (onReport: ReportCallback): StopListening | undefined => {\n  const metric = initMetric('CLS', 0);\n  let report: ReturnType<typeof bindReporter>;\n\n  let sessionValue = 0;\n  let sessionEntries: PerformanceEntry[] = [];\n\n  // const handleEntries = (entries: Metric['entries']) => {\n  const handleEntries = (entries: LayoutShift[]): void => {\n    entries.forEach(entry => {\n      // Only count layout shifts without recent user input.\n      if (!entry.hadRecentInput) {\n        const firstSessionEntry = sessionEntries[0];\n        const lastSessionEntry = sessionEntries[sessionEntries.length - 1];\n\n        // If the entry occurred less than 1 second after the previous entry and\n        // less than 5 seconds after the first entry in the session, include the\n        // entry in the current session. Otherwise, start a new session.\n        if (\n          sessionValue &&\n          sessionEntries.length !== 0 &&\n          entry.startTime - lastSessionEntry.startTime < 1000 &&\n          entry.startTime - firstSessionEntry.startTime < 5000\n        ) {\n          sessionValue += entry.value;\n          sessionEntries.push(entry);\n        } else {\n          sessionValue = entry.value;\n          sessionEntries = [entry];\n        }\n\n        // If the current session value is larger than the current CLS value,\n        // update CLS and the entries contributing to it.\n        if (sessionValue > metric.value) {\n          metric.value = sessionValue;\n          metric.entries = sessionEntries;\n          if (report) {\n            report();\n          }\n        }\n      }\n    });\n  };\n\n  const po = observe('layout-shift', handleEntries);\n  if (po) {\n    report = bindReporter(onReport, metric);\n\n    const stopListening = (): void => {\n      handleEntries(po.takeRecords() as CLSMetric['entries']);\n      report(true);\n    };\n\n    onHidden(stopListening);\n\n    return stopListening;\n  }\n\n  return;\n};\n", "/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WINDOW } from '../../types';\nimport { onHidden } from './onHidden';\n\nlet firstHiddenTime = -1;\n\nconst initHiddenTime = (): number => {\n  // If the document is hidden and not prerendering, assume it was always\n  // hidden and the page was loaded in the background.\n  return WINDOW.document.visibilityState === 'hidden' && !WINDOW.document.prerendering ? 0 : Infinity;\n};\n\nconst trackChanges = (): void => {\n  // Update the time if/when the document becomes hidden.\n  onHidden(({ timeStamp }) => {\n    firstHiddenTime = timeStamp;\n  }, true);\n};\n\nexport const getVisibilityWatcher = (): {\n  readonly firstHiddenTime: number;\n} => {\n  if (firstHiddenTime < 0) {\n    // If the document is hidden when this code runs, assume it was hidden\n    // since navigation start. This isn't a perfect heuristic, but it's the\n    // best we can do until an API is available to support querying past\n    // visibilityState.\n    firstHiddenTime = initHiddenTime();\n    trackChanges();\n  }\n  return {\n    get firstHiddenTime() {\n      return firstHiddenTime;\n    },\n  };\n};\n", "/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { bindReporter } from './lib/bindReporter';\nimport { getVisibilityWatcher } from './lib/getVisibilityWatcher';\nimport { initMetric } from './lib/initMetric';\nimport { observe } from './lib/observe';\nimport { onHidden } from './lib/onHidden';\nimport type { FIDMetric, PerformanceEventTiming, ReportCallback } from './types';\n\n/**\n * Calculates the [FID](https://web.dev/fid/) value for the current page and\n * calls the `callback` function once the value is ready, along with the\n * relevant `first-input` performance entry used to determine the value. The\n * reported value is a `DOMHighResTimeStamp`.\n *\n * _**Important:** since FID is only reported after the user interacts with the\n * page, it's possible that it will not be reported for some page loads._\n */\nexport const onFID = (onReport: ReportCallback): void => {\n  const visibilityWatcher = getVisibilityWatcher();\n  const metric = initMetric('FID');\n  // eslint-disable-next-line prefer-const\n  let report: ReturnType<typeof bindReporter>;\n\n  const handleEntry = (entry: PerformanceEventTiming): void => {\n    // Only report if the page wasn't hidden prior to the first input.\n    if (entry.startTime < visibilityWatcher.firstHiddenTime) {\n      metric.value = entry.processingStart - entry.startTime;\n      metric.entries.push(entry);\n      report(true);\n    }\n  };\n\n  const handleEntries = (entries: FIDMetric['entries']): void => {\n    (entries as PerformanceEventTiming[]).forEach(handleEntry);\n  };\n\n  const po = observe('first-input', handleEntries);\n  report = bindReporter(onReport, metric);\n\n  if (po) {\n    onHidden(() => {\n      handleEntries(po.takeRecords() as FIDMetric['entries']);\n      po.disconnect();\n    }, true);\n  }\n};\n", "/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { bindReporter } from './lib/bindReporter';\nimport { getActivationStart } from './lib/getActivationStart';\nimport { getVisibilityWatcher } from './lib/getVisibilityWatcher';\nimport { initMetric } from './lib/initMetric';\nimport { observe } from './lib/observe';\nimport { onHidden } from './lib/onHidden';\nimport type { LCPMetric, ReportCallback, StopListening } from './types';\n\nconst reportedMetricIDs: Record<string, boolean> = {};\n\n/**\n * Calculates the [LCP](https://web.dev/lcp/) value for the current page and\n * calls the `callback` function once the value is ready (along with the\n * relevant `largest-contentful-paint` performance entry used to determine the\n * value). The reported value is a `DOMHighResTimeStamp`.\n */\nexport const onLCP = (onReport: ReportCallback): StopListening | undefined => {\n  const visibilityWatcher = getVisibilityWatcher();\n  const metric = initMetric('LCP');\n  let report: ReturnType<typeof bindReporter>;\n\n  const handleEntries = (entries: LCPMetric['entries']): void => {\n    const lastEntry = entries[entries.length - 1] as LargestContentfulPaint;\n    if (lastEntry) {\n      // The startTime attribute returns the value of the renderTime if it is\n      // not 0, and the value of the loadTime otherwise. The activationStart\n      // reference is used because LCP should be relative to page activation\n      // rather than navigation start if the page was prerendered.\n      const value = Math.max(lastEntry.startTime - getActivationStart(), 0);\n\n      // Only report if the page wasn't hidden prior to LCP.\n      if (value < visibilityWatcher.firstHiddenTime) {\n        metric.value = value;\n        metric.entries = [lastEntry];\n        report();\n      }\n    }\n  };\n\n  const po = observe('largest-contentful-paint', handleEntries);\n\n  if (po) {\n    report = bindReporter(onReport, metric);\n\n    const stopListening = (): void => {\n      if (!reportedMetricIDs[metric.id]) {\n        handleEntries(po.takeRecords() as LCPMetric['entries']);\n        po.disconnect();\n        reportedMetricIDs[metric.id] = true;\n        report(true);\n      }\n    };\n\n    // Stop listening after input. Note: while scrolling is an input that\n    // stop LCP observation, it's unreliable since it can be programmatically\n    // generated. See: https://github.com/GoogleChrome/web-vitals/issues/75\n    ['keydown', 'click'].forEach(type => {\n      addEventListener(type, stopListening, { once: true, capture: true });\n    });\n\n    onHidden(stopListening, true);\n\n    return stopListening;\n  }\n\n  return;\n};\n", "import type { Transaction } from '@sentry/core';\nimport type { Span, SpanContext } from '@sentry/types';\n\n/**\n * Checks if a given value is a valid measurement value.\n */\nexport function isMeasurementValue(value: unknown): value is number {\n  return typeof value === 'number' && isFinite(value);\n}\n\n/**\n * Helper function to start child on transactions. This function will make sure that the transaction will\n * use the start timestamp of the created child span if it is earlier than the transactions actual\n * start timestamp.\n */\nexport function _startChild(transaction: Transaction, { startTimestamp, ...ctx }: SpanContext): Span {\n  if (startTimestamp && transaction.startTimestamp > startTimestamp) {\n    transaction.startTimestamp = startTimestamp;\n  }\n\n  return transaction.startChild({\n    startTimestamp,\n    ...ctx,\n  });\n}\n", "/* eslint-disable max-lines */\nimport type { IdleTransaction, Transaction } from '@sentry/core';\nimport { getActiveTransaction } from '@sentry/core';\nimport type { Measurements } from '@sentry/types';\nimport { browserPerformanceTimeOrigin, htmlTreeAsString, logger } from '@sentry/utils';\n\nimport { WINDOW } from '../types';\nimport { onCLS } from '../web-vitals/getCLS';\nimport { onFID } from '../web-vitals/getFID';\nimport { onLCP } from '../web-vitals/getLCP';\nimport { getVisibilityWatcher } from '../web-vitals/lib/getVisibilityWatcher';\nimport { observe } from '../web-vitals/lib/observe';\nimport type { NavigatorDeviceMemory, NavigatorNetworkInformation } from '../web-vitals/types';\nimport { _startChild, isMeasurementValue } from './utils';\n\n/**\n * Converts from milliseconds to seconds\n * @param time time in ms\n */\nfunction msToSec(time: number): number {\n  return time / 1000;\n}\n\nfunction getBrowserPerformanceAPI(): Performance | undefined {\n  return WINDOW && WINDOW.addEventListener && WINDOW.performance;\n}\n\nlet _performanceCursor: number = 0;\n\nlet _measurements: Measurements = {};\nlet _lcpEntry: LargestContentfulPaint | undefined;\nlet _clsEntry: LayoutShift | undefined;\n\n/**\n * Start tracking web vitals\n *\n * @returns A function that forces web vitals collection\n */\nexport function startTrackingWebVitals(): () => void {\n  const performance = getBrowserPerformanceAPI();\n  if (performance && browserPerformanceTimeOrigin) {\n    if (performance.mark) {\n      WINDOW.performance.mark('sentry-tracing-init');\n    }\n    _trackFID();\n    const clsCallback = _trackCLS();\n    const lcpCallback = _trackLCP();\n\n    return (): void => {\n      if (clsCallback) {\n        clsCallback();\n      }\n      if (lcpCallback) {\n        lcpCallback();\n      }\n    };\n  }\n\n  return () => undefined;\n}\n\n/**\n * Start tracking long tasks.\n */\nexport function startTrackingLongTasks(): void {\n  const entryHandler = (entries: PerformanceEntry[]): void => {\n    for (const entry of entries) {\n      const transaction = getActiveTransaction() as IdleTransaction | undefined;\n      if (!transaction) {\n        return;\n      }\n      const startTime = msToSec((browserPerformanceTimeOrigin as number) + entry.startTime);\n      const duration = msToSec(entry.duration);\n\n      transaction.startChild({\n        description: 'Main UI thread blocked',\n        op: 'ui.long-task',\n        startTimestamp: startTime,\n        endTimestamp: startTime + duration,\n      });\n    }\n  };\n\n  observe('longtask', entryHandler);\n}\n\n/**\n * Start tracking interaction events.\n */\nexport function startTrackingInteractions(): void {\n  const entryHandler = (entries: PerformanceEventTiming[]): void => {\n    for (const entry of entries) {\n      const transaction = getActiveTransaction() as IdleTransaction | undefined;\n      if (!transaction) {\n        return;\n      }\n\n      if (entry.name === 'click') {\n        const startTime = msToSec((browserPerformanceTimeOrigin as number) + entry.startTime);\n        const duration = msToSec(entry.duration);\n\n        transaction.startChild({\n          description: htmlTreeAsString(entry.target),\n          op: `ui.interaction.${entry.name}`,\n          startTimestamp: startTime,\n          endTimestamp: startTime + duration,\n        });\n      }\n    }\n  };\n\n  observe('event', entryHandler, { durationThreshold: 0 });\n}\n\n/** Starts tracking the Cumulative Layout Shift on the current page. */\nfunction _trackCLS(): ReturnType<typeof onCLS> {\n  // See:\n  // https://web.dev/evolving-cls/\n  // https://web.dev/cls-web-tooling/\n  return onCLS(metric => {\n    const entry = metric.entries.pop();\n    if (!entry) {\n      return;\n    }\n\n    __DEBUG_BUILD__ && logger.log('[Measurements] Adding CLS');\n    _measurements['cls'] = { value: metric.value, unit: '' };\n    _clsEntry = entry as LayoutShift;\n  });\n}\n\n/** Starts tracking the Largest Contentful Paint on the current page. */\nfunction _trackLCP(): ReturnType<typeof onLCP> {\n  return onLCP(metric => {\n    const entry = metric.entries.pop();\n    if (!entry) {\n      return;\n    }\n\n    __DEBUG_BUILD__ && logger.log('[Measurements] Adding LCP');\n    _measurements['lcp'] = { value: metric.value, unit: 'millisecond' };\n    _lcpEntry = entry as LargestContentfulPaint;\n  });\n}\n\n/** Starts tracking the First Input Delay on the current page. */\nfunction _trackFID(): void {\n  onFID(metric => {\n    const entry = metric.entries.pop();\n    if (!entry) {\n      return;\n    }\n\n    const timeOrigin = msToSec(browserPerformanceTimeOrigin as number);\n    const startTime = msToSec(entry.startTime);\n    __DEBUG_BUILD__ && logger.log('[Measurements] Adding FID');\n    _measurements['fid'] = { value: metric.value, unit: 'millisecond' };\n    _measurements['mark.fid'] = { value: timeOrigin + startTime, unit: 'second' };\n  });\n}\n\n/** Add performance related spans to a transaction */\nexport function addPerformanceEntries(transaction: Transaction): void {\n  const performance = getBrowserPerformanceAPI();\n  if (!performance || !WINDOW.performance.getEntries || !browserPerformanceTimeOrigin) {\n    // Gatekeeper if performance API not available\n    return;\n  }\n\n  __DEBUG_BUILD__ && logger.log('[Tracing] Adding & adjusting spans using Performance API');\n  const timeOrigin = msToSec(browserPerformanceTimeOrigin);\n\n  const performanceEntries = performance.getEntries();\n\n  let responseStartTimestamp: number | undefined;\n  let requestStartTimestamp: number | undefined;\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  performanceEntries.slice(_performanceCursor).forEach((entry: Record<string, any>) => {\n    const startTime = msToSec(entry.startTime);\n    const duration = msToSec(entry.duration);\n\n    if (transaction.op === 'navigation' && timeOrigin + startTime < transaction.startTimestamp) {\n      return;\n    }\n\n    switch (entry.entryType) {\n      case 'navigation': {\n        _addNavigationSpans(transaction, entry, timeOrigin);\n        responseStartTimestamp = timeOrigin + msToSec(entry.responseStart);\n        requestStartTimestamp = timeOrigin + msToSec(entry.requestStart);\n        break;\n      }\n      case 'mark':\n      case 'paint':\n      case 'measure': {\n        _addMeasureSpans(transaction, entry, startTime, duration, timeOrigin);\n\n        // capture web vitals\n        const firstHidden = getVisibilityWatcher();\n        // Only report if the page wasn't hidden prior to the web vital.\n        const shouldRecord = entry.startTime < firstHidden.firstHiddenTime;\n\n        if (entry.name === 'first-paint' && shouldRecord) {\n          __DEBUG_BUILD__ && logger.log('[Measurements] Adding FP');\n          _measurements['fp'] = { value: entry.startTime, unit: 'millisecond' };\n        }\n        if (entry.name === 'first-contentful-paint' && shouldRecord) {\n          __DEBUG_BUILD__ && logger.log('[Measurements] Adding FCP');\n          _measurements['fcp'] = { value: entry.startTime, unit: 'millisecond' };\n        }\n        break;\n      }\n      case 'resource': {\n        const resourceName = (entry.name as string).replace(WINDOW.location.origin, '');\n        _addResourceSpans(transaction, entry, resourceName, startTime, duration, timeOrigin);\n        break;\n      }\n      default:\n      // Ignore other entry types.\n    }\n  });\n\n  _performanceCursor = Math.max(performanceEntries.length - 1, 0);\n\n  _trackNavigator(transaction);\n\n  // Measurements are only available for pageload transactions\n  if (transaction.op === 'pageload') {\n    // Generate TTFB (Time to First Byte), which measured as the time between the beginning of the transaction and the\n    // start of the response in milliseconds\n    if (typeof responseStartTimestamp === 'number') {\n      __DEBUG_BUILD__ && logger.log('[Measurements] Adding TTFB');\n      _measurements['ttfb'] = {\n        value: (responseStartTimestamp - transaction.startTimestamp) * 1000,\n        unit: 'millisecond',\n      };\n\n      if (typeof requestStartTimestamp === 'number' && requestStartTimestamp <= responseStartTimestamp) {\n        // Capture the time spent making the request and receiving the first byte of the response.\n        // This is the time between the start of the request and the start of the response in milliseconds.\n        _measurements['ttfb.requestTime'] = {\n          value: (responseStartTimestamp - requestStartTimestamp) * 1000,\n          unit: 'millisecond',\n        };\n      }\n    }\n\n    ['fcp', 'fp', 'lcp'].forEach(name => {\n      if (!_measurements[name] || timeOrigin >= transaction.startTimestamp) {\n        return;\n      }\n      // The web vitals, fcp, fp, lcp, and ttfb, all measure relative to timeOrigin.\n      // Unfortunately, timeOrigin is not captured within the transaction span data, so these web vitals will need\n      // to be adjusted to be relative to transaction.startTimestamp.\n      const oldValue = _measurements[name].value;\n      const measurementTimestamp = timeOrigin + msToSec(oldValue);\n\n      // normalizedValue should be in milliseconds\n      const normalizedValue = Math.abs((measurementTimestamp - transaction.startTimestamp) * 1000);\n      const delta = normalizedValue - oldValue;\n\n      __DEBUG_BUILD__ &&\n        logger.log(`[Measurements] Normalized ${name} from ${oldValue} to ${normalizedValue} (${delta})`);\n      _measurements[name].value = normalizedValue;\n    });\n\n    const fidMark = _measurements['mark.fid'];\n    if (fidMark && _measurements['fid']) {\n      // create span for FID\n      _startChild(transaction, {\n        description: 'first input delay',\n        endTimestamp: fidMark.value + msToSec(_measurements['fid'].value),\n        op: 'ui.action',\n        startTimestamp: fidMark.value,\n      });\n\n      // Delete mark.fid as we don't want it to be part of final payload\n      delete _measurements['mark.fid'];\n    }\n\n    // If FCP is not recorded we should not record the cls value\n    // according to the new definition of CLS.\n    if (!('fcp' in _measurements)) {\n      delete _measurements.cls;\n    }\n\n    Object.keys(_measurements).forEach(measurementName => {\n      transaction.setMeasurement(\n        measurementName,\n        _measurements[measurementName].value,\n        _measurements[measurementName].unit,\n      );\n    });\n\n    _tagMetricInfo(transaction);\n  }\n\n  _lcpEntry = undefined;\n  _clsEntry = undefined;\n  _measurements = {};\n}\n\n/** Create measure related spans */\nexport function _addMeasureSpans(\n  transaction: Transaction,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  entry: Record<string, any>,\n  startTime: number,\n  duration: number,\n  timeOrigin: number,\n): number {\n  const measureStartTimestamp = timeOrigin + startTime;\n  const measureEndTimestamp = measureStartTimestamp + duration;\n\n  _startChild(transaction, {\n    description: entry.name as string,\n    endTimestamp: measureEndTimestamp,\n    op: entry.entryType as string,\n    startTimestamp: measureStartTimestamp,\n  });\n\n  return measureStartTimestamp;\n}\n\n/** Instrument navigation entries */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _addNavigationSpans(transaction: Transaction, entry: Record<string, any>, timeOrigin: number): void {\n  ['unloadEvent', 'redirect', 'domContentLoadedEvent', 'loadEvent', 'connect'].forEach(event => {\n    _addPerformanceNavigationTiming(transaction, entry, event, timeOrigin);\n  });\n  _addPerformanceNavigationTiming(transaction, entry, 'secureConnection', timeOrigin, 'TLS/SSL', 'connectEnd');\n  _addPerformanceNavigationTiming(transaction, entry, 'fetch', timeOrigin, 'cache', 'domainLookupStart');\n  _addPerformanceNavigationTiming(transaction, entry, 'domainLookup', timeOrigin, 'DNS');\n  _addRequest(transaction, entry, timeOrigin);\n}\n\n/** Create performance navigation related spans */\nfunction _addPerformanceNavigationTiming(\n  transaction: Transaction,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  entry: Record<string, any>,\n  event: string,\n  timeOrigin: number,\n  description?: string,\n  eventEnd?: string,\n): void {\n  const end = eventEnd ? (entry[eventEnd] as number | undefined) : (entry[`${event}End`] as number | undefined);\n  const start = entry[`${event}Start`] as number | undefined;\n  if (!start || !end) {\n    return;\n  }\n  _startChild(transaction, {\n    op: 'browser',\n    description: description || event,\n    startTimestamp: timeOrigin + msToSec(start),\n    endTimestamp: timeOrigin + msToSec(end),\n  });\n}\n\n/** Create request and response related spans */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _addRequest(transaction: Transaction, entry: Record<string, any>, timeOrigin: number): void {\n  _startChild(transaction, {\n    op: 'browser',\n    description: 'request',\n    startTimestamp: timeOrigin + msToSec(entry.requestStart as number),\n    endTimestamp: timeOrigin + msToSec(entry.responseEnd as number),\n  });\n\n  _startChild(transaction, {\n    op: 'browser',\n    description: 'response',\n    startTimestamp: timeOrigin + msToSec(entry.responseStart as number),\n    endTimestamp: timeOrigin + msToSec(entry.responseEnd as number),\n  });\n}\n\nexport interface ResourceEntry extends Record<string, unknown> {\n  initiatorType?: string;\n  transferSize?: number;\n  encodedBodySize?: number;\n  decodedBodySize?: number;\n  renderBlockingStatus?: string;\n}\n\n/** Create resource-related spans */\nexport function _addResourceSpans(\n  transaction: Transaction,\n  entry: ResourceEntry,\n  resourceName: string,\n  startTime: number,\n  duration: number,\n  timeOrigin: number,\n): void {\n  // we already instrument based on fetch and xhr, so we don't need to\n  // duplicate spans here.\n  if (entry.initiatorType === 'xmlhttprequest' || entry.initiatorType === 'fetch') {\n    return;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const data: Record<string, any> = {};\n  if ('transferSize' in entry) {\n    data['Transfer Size'] = entry.transferSize;\n  }\n  if ('encodedBodySize' in entry) {\n    data['Encoded Body Size'] = entry.encodedBodySize;\n  }\n  if ('decodedBodySize' in entry) {\n    data['Decoded Body Size'] = entry.decodedBodySize;\n  }\n  if ('renderBlockingStatus' in entry) {\n    data['resource.render_blocking_status'] = entry.renderBlockingStatus;\n  }\n\n  const startTimestamp = timeOrigin + startTime;\n  const endTimestamp = startTimestamp + duration;\n\n  _startChild(transaction, {\n    description: resourceName,\n    endTimestamp,\n    op: entry.initiatorType ? `resource.${entry.initiatorType}` : 'resource.other',\n    startTimestamp,\n    data,\n  });\n}\n\n/**\n * Capture the information of the user agent.\n */\nfunction _trackNavigator(transaction: Transaction): void {\n  const navigator = WINDOW.navigator as null | (Navigator & NavigatorNetworkInformation & NavigatorDeviceMemory);\n  if (!navigator) {\n    return;\n  }\n\n  // track network connectivity\n  const connection = navigator.connection;\n  if (connection) {\n    if (connection.effectiveType) {\n      transaction.setTag('effectiveConnectionType', connection.effectiveType);\n    }\n\n    if (connection.type) {\n      transaction.setTag('connectionType', connection.type);\n    }\n\n    if (isMeasurementValue(connection.rtt)) {\n      _measurements['connection.rtt'] = { value: connection.rtt, unit: 'millisecond' };\n    }\n  }\n\n  if (isMeasurementValue(navigator.deviceMemory)) {\n    transaction.setTag('deviceMemory', `${navigator.deviceMemory} GB`);\n  }\n\n  if (isMeasurementValue(navigator.hardwareConcurrency)) {\n    transaction.setTag('hardwareConcurrency', String(navigator.hardwareConcurrency));\n  }\n}\n\n/** Add LCP / CLS data to transaction to allow debugging */\nfunction _tagMetricInfo(transaction: Transaction): void {\n  if (_lcpEntry) {\n    __DEBUG_BUILD__ && logger.log('[Measurements] Adding LCP Data');\n\n    // Capture Properties of the LCP element that contributes to the LCP.\n\n    if (_lcpEntry.element) {\n      transaction.setTag('lcp.element', htmlTreeAsString(_lcpEntry.element));\n    }\n\n    if (_lcpEntry.id) {\n      transaction.setTag('lcp.id', _lcpEntry.id);\n    }\n\n    if (_lcpEntry.url) {\n      // Trim URL to the first 200 characters.\n      transaction.setTag('lcp.url', _lcpEntry.url.trim().slice(0, 200));\n    }\n\n    transaction.setTag('lcp.size', _lcpEntry.size);\n  }\n\n  // See: https://developer.mozilla.org/en-US/docs/Web/API/LayoutShift\n  if (_clsEntry && _clsEntry.sources) {\n    __DEBUG_BUILD__ && logger.log('[Measurements] Adding CLS Data');\n    _clsEntry.sources.forEach((source, index) =>\n      transaction.setTag(`cls.source.${index + 1}`, htmlTreeAsString(source.node)),\n    );\n  }\n}\n", "/* eslint-disable max-lines */\nimport { getCurrentHub, hasTracingEnabled } from '@sentry/core';\nimport type { DynamicSamplingContext, Span } from '@sentry/types';\nimport {\n  addInstrumentationHandler,\n  BAGGAGE_HEADER_NAME,\n  dynamicSamplingContextToSentryBaggageHeader,\n  isInstanceOf,\n  stringMatchesSomePattern,\n} from '@sentry/utils';\n\nexport const DEFAULT_TRACE_PROPAGATION_TARGETS = ['localhost', /^\\//];\n\n/** Options for Request Instrumentation */\nexport interface RequestInstrumentationOptions {\n  /**\n   * @deprecated Will be removed in v8.\n   * Use `shouldCreateSpanForRequest` to control span creation and `tracePropagationTargets` to control\n   * trace header attachment.\n   */\n  tracingOrigins: Array<string | RegExp>;\n\n  /**\n   * List of strings and/or regexes used to determine which outgoing requests will have `sentry-trace` and `baggage`\n   * headers attached.\n   *\n   * Default: ['localhost', /^\\//] {@see DEFAULT_TRACE_PROPAGATION_TARGETS}\n   */\n  tracePropagationTargets: Array<string | RegExp>;\n\n  /**\n   * Flag to disable patching all together for fetch requests.\n   *\n   * Default: true\n   */\n  traceFetch: boolean;\n\n  /**\n   * Flag to disable patching all together for xhr requests.\n   *\n   * Default: true\n   */\n  traceXHR: boolean;\n\n  /**\n   * This function will be called before creating a span for a request with the given url.\n   * Return false if you don't want a span for the given url.\n   *\n   * Default: (url: string) => true\n   */\n  shouldCreateSpanForRequest?(this: void, url: string): boolean;\n}\n\n/** Data returned from fetch callback */\nexport interface FetchData {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  args: any[]; // the arguments passed to the fetch call itself\n  fetchData?: {\n    method: string;\n    url: string;\n    // span_id\n    __span?: string;\n  };\n\n  // TODO Should this be unknown instead? If we vendor types, make it a Response\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  response?: any;\n  error?: unknown;\n\n  startTimestamp: number;\n  endTimestamp?: number;\n}\n\n/** Data returned from XHR request */\nexport interface XHRData {\n  xhr?: {\n    __sentry_xhr__?: {\n      method: string;\n      url: string;\n      status_code: number;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      data: Record<string, any>;\n    };\n    __sentry_xhr_span_id__?: string;\n    setRequestHeader?: (key: string, val: string) => void;\n    getRequestHeader?: (key: string) => string;\n    __sentry_own_request__?: boolean;\n  };\n  startTimestamp: number;\n  endTimestamp?: number;\n}\n\ntype PolymorphicRequestHeaders =\n  | Record<string, string | undefined>\n  | Array<[string, string]>\n  // the below is not preicsely the Header type used in Request, but it'll pass duck-typing\n  | {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      [key: string]: any;\n      append: (key: string, value: string) => void;\n      get: (key: string) => string;\n    };\n\nexport const defaultRequestInstrumentationOptions: RequestInstrumentationOptions = {\n  traceFetch: true,\n  traceXHR: true,\n  // TODO (v8): Remove this property\n  tracingOrigins: DEFAULT_TRACE_PROPAGATION_TARGETS,\n  tracePropagationTargets: DEFAULT_TRACE_PROPAGATION_TARGETS,\n};\n\n/** Registers span creators for xhr and fetch requests  */\nexport function instrumentOutgoingRequests(_options?: Partial<RequestInstrumentationOptions>): void {\n  // eslint-disable-next-line deprecation/deprecation\n  const { traceFetch, traceXHR, tracePropagationTargets, tracingOrigins, shouldCreateSpanForRequest } = {\n    traceFetch: defaultRequestInstrumentationOptions.traceFetch,\n    traceXHR: defaultRequestInstrumentationOptions.traceXHR,\n    ..._options,\n  };\n\n  const shouldCreateSpan =\n    typeof shouldCreateSpanForRequest === 'function' ? shouldCreateSpanForRequest : (_: string) => true;\n\n  // TODO(v8) Remove tracingOrigins here\n  // The only reason we're passing it in here is because this instrumentOutgoingRequests function is publicly exported\n  // and we don't want to break the API. We can remove it in v8.\n  const shouldAttachHeadersWithTargets = (url: string): boolean =>\n    shouldAttachHeaders(url, tracePropagationTargets || tracingOrigins);\n\n  const spans: Record<string, Span> = {};\n\n  if (traceFetch) {\n    addInstrumentationHandler('fetch', (handlerData: FetchData) => {\n      fetchCallback(handlerData, shouldCreateSpan, shouldAttachHeadersWithTargets, spans);\n    });\n  }\n\n  if (traceXHR) {\n    addInstrumentationHandler('xhr', (handlerData: XHRData) => {\n      xhrCallback(handlerData, shouldCreateSpan, shouldAttachHeadersWithTargets, spans);\n    });\n  }\n}\n\n/**\n * A function that determines whether to attach tracing headers to a request.\n * This was extracted from `instrumentOutgoingRequests` to make it easier to test shouldAttachHeaders.\n * We only export this fuction for testing purposes.\n */\nexport function shouldAttachHeaders(url: string, tracePropagationTargets: (string | RegExp)[] | undefined): boolean {\n  return stringMatchesSomePattern(url, tracePropagationTargets || DEFAULT_TRACE_PROPAGATION_TARGETS);\n}\n\n/**\n * Create and track fetch request spans\n */\nexport function fetchCallback(\n  handlerData: FetchData,\n  shouldCreateSpan: (url: string) => boolean,\n  shouldAttachHeaders: (url: string) => boolean,\n  spans: Record<string, Span>,\n): void {\n  if (!hasTracingEnabled() || !(handlerData.fetchData && shouldCreateSpan(handlerData.fetchData.url))) {\n    return;\n  }\n\n  if (handlerData.endTimestamp) {\n    const spanId = handlerData.fetchData.__span;\n    if (!spanId) return;\n\n    const span = spans[spanId];\n    if (span) {\n      if (handlerData.response) {\n        // TODO (kmclb) remove this once types PR goes through\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        span.setHttpStatus(handlerData.response.status);\n      } else if (handlerData.error) {\n        span.setStatus('internal_error');\n      }\n      span.finish();\n\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete spans[spanId];\n    }\n    return;\n  }\n\n  const currentScope = getCurrentHub().getScope();\n  const currentSpan = currentScope && currentScope.getSpan();\n  const activeTransaction = currentSpan && currentSpan.transaction;\n\n  if (currentSpan && activeTransaction) {\n    const span = currentSpan.startChild({\n      data: {\n        ...handlerData.fetchData,\n        type: 'fetch',\n      },\n      description: `${handlerData.fetchData.method} ${handlerData.fetchData.url}`,\n      op: 'http.client',\n    });\n\n    handlerData.fetchData.__span = span.spanId;\n    spans[span.spanId] = span;\n\n    const request: string | Request = handlerData.args[0];\n\n    // In case the user hasn't set the second argument of a fetch call we default it to `{}`.\n    handlerData.args[1] = handlerData.args[1] || {};\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const options: { [key: string]: any } = handlerData.args[1];\n\n    if (shouldAttachHeaders(handlerData.fetchData.url)) {\n      options.headers = addTracingHeadersToFetchRequest(\n        request,\n        activeTransaction.getDynamicSamplingContext(),\n        span,\n        options,\n      );\n    }\n  }\n}\n\nfunction addTracingHeadersToFetchRequest(\n  request: string | Request,\n  dynamicSamplingContext: Partial<DynamicSamplingContext>,\n  span: Span,\n  options: {\n    headers?:\n      | {\n          [key: string]: string[] | string | undefined;\n        }\n      | Request['headers'];\n  },\n): PolymorphicRequestHeaders {\n  const sentryBaggageHeader = dynamicSamplingContextToSentryBaggageHeader(dynamicSamplingContext);\n  const sentryTraceHeader = span.toTraceparent();\n\n  const headers =\n    typeof Request !== 'undefined' && isInstanceOf(request, Request) ? (request as Request).headers : options.headers;\n\n  if (!headers) {\n    return { 'sentry-trace': sentryTraceHeader, baggage: sentryBaggageHeader };\n  } else if (typeof Headers !== 'undefined' && isInstanceOf(headers, Headers)) {\n    const newHeaders = new Headers(headers as Headers);\n\n    newHeaders.append('sentry-trace', sentryTraceHeader);\n\n    if (sentryBaggageHeader) {\n      // If the same header is appended miultiple times the browser will merge the values into a single request header.\n      // Its therefore safe to simply push a \"baggage\" entry, even though there might already be another baggage header.\n      newHeaders.append(BAGGAGE_HEADER_NAME, sentryBaggageHeader);\n    }\n\n    return newHeaders as PolymorphicRequestHeaders;\n  } else if (Array.isArray(headers)) {\n    const newHeaders = [...headers, ['sentry-trace', sentryTraceHeader]];\n\n    if (sentryBaggageHeader) {\n      // If there are multiple entries with the same key, the browser will merge the values into a single request header.\n      // Its therefore safe to simply push a \"baggage\" entry, even though there might already be another baggage header.\n      newHeaders.push([BAGGAGE_HEADER_NAME, sentryBaggageHeader]);\n    }\n\n    return newHeaders;\n  } else {\n    const existingBaggageHeader = 'baggage' in headers ? headers.baggage : undefined;\n    const newBaggageHeaders: string[] = [];\n\n    if (Array.isArray(existingBaggageHeader)) {\n      newBaggageHeaders.push(...existingBaggageHeader);\n    } else if (existingBaggageHeader) {\n      newBaggageHeaders.push(existingBaggageHeader);\n    }\n\n    if (sentryBaggageHeader) {\n      newBaggageHeaders.push(sentryBaggageHeader);\n    }\n\n    return {\n      ...(headers as Exclude<typeof headers, Headers>),\n      'sentry-trace': sentryTraceHeader,\n      baggage: newBaggageHeaders.length > 0 ? newBaggageHeaders.join(',') : undefined,\n    };\n  }\n}\n\n/**\n * Create and track xhr request spans\n */\nexport function xhrCallback(\n  handlerData: XHRData,\n  shouldCreateSpan: (url: string) => boolean,\n  shouldAttachHeaders: (url: string) => boolean,\n  spans: Record<string, Span>,\n): void {\n  if (\n    !hasTracingEnabled() ||\n    (handlerData.xhr && handlerData.xhr.__sentry_own_request__) ||\n    !(handlerData.xhr && handlerData.xhr.__sentry_xhr__ && shouldCreateSpan(handlerData.xhr.__sentry_xhr__.url))\n  ) {\n    return;\n  }\n\n  const xhr = handlerData.xhr.__sentry_xhr__;\n\n  // check first if the request has finished and is tracked by an existing span which should now end\n  if (handlerData.endTimestamp) {\n    const spanId = handlerData.xhr.__sentry_xhr_span_id__;\n    if (!spanId) return;\n\n    const span = spans[spanId];\n    if (span) {\n      span.setHttpStatus(xhr.status_code);\n      span.finish();\n\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete spans[spanId];\n    }\n    return;\n  }\n\n  const currentScope = getCurrentHub().getScope();\n  const currentSpan = currentScope && currentScope.getSpan();\n  const activeTransaction = currentSpan && currentSpan.transaction;\n\n  if (currentSpan && activeTransaction) {\n    const span = currentSpan.startChild({\n      data: {\n        ...xhr.data,\n        type: 'xhr',\n        method: xhr.method,\n        url: xhr.url,\n      },\n      description: `${xhr.method} ${xhr.url}`,\n      op: 'http.client',\n    });\n\n    handlerData.xhr.__sentry_xhr_span_id__ = span.spanId;\n    spans[handlerData.xhr.__sentry_xhr_span_id__] = span;\n\n    if (handlerData.xhr.setRequestHeader && shouldAttachHeaders(handlerData.xhr.__sentry_xhr__.url)) {\n      try {\n        handlerData.xhr.setRequestHeader('sentry-trace', span.toTraceparent());\n\n        const dynamicSamplingContext = activeTransaction.getDynamicSamplingContext();\n        const sentryBaggageHeader = dynamicSamplingContextToSentryBaggageHeader(dynamicSamplingContext);\n\n        if (sentryBaggageHeader) {\n          // From MDN: \"If this method is called several times with the same header, the values are merged into one single request header.\"\n          // We can therefore simply set a baggage header without checking what was there before\n          // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/setRequestHeader\n          handlerData.xhr.setRequestHeader(BAGGAGE_HEADER_NAME, sentryBaggageHeader);\n        }\n      } catch (_) {\n        // Error: InvalidStateError: Failed to execute 'setRequestHeader' on 'XMLHttpRequest': The object's state must be OPENED.\n      }\n    }\n  }\n}\n", "import type { Transaction, TransactionContext } from '@sentry/types';\nimport { addInstrumentationHandler, logger } from '@sentry/utils';\n\nimport { WINDOW } from './types';\n\n/**\n * Default function implementing pageload and navigation transactions\n */\nexport function instrumentRoutingWithDefaults<T extends Transaction>(\n  customStartTransaction: (context: TransactionContext) => T | undefined,\n  startTransactionOnPageLoad: boolean = true,\n  startTransactionOnLocationChange: boolean = true,\n): void {\n  if (!WINDOW || !WINDOW.location) {\n    __DEBUG_BUILD__ && logger.warn('Could not initialize routing instrumentation due to invalid location');\n    return;\n  }\n\n  let startingUrl: string | undefined = WINDOW.location.href;\n\n  let activeTransaction: T | undefined;\n  if (startTransactionOnPageLoad) {\n    activeTransaction = customStartTransaction({\n      name: WINDOW.location.pathname,\n      op: 'pageload',\n      metadata: { source: 'url' },\n    });\n  }\n\n  if (startTransactionOnLocationChange) {\n    addInstrumentationHandler('history', ({ to, from }: { to: string; from?: string }) => {\n      /**\n       * This early return is there to account for some cases where a navigation transaction starts right after\n       * long-running pageload. We make sure that if `from` is undefined and a valid `startingURL` exists, we don't\n       * create an uneccessary navigation transaction.\n       *\n       * This was hard to duplicate, but this behavior stopped as soon as this fix was applied. This issue might also\n       * only be caused in certain development environments where the usage of a hot module reloader is causing\n       * errors.\n       */\n      if (from === undefined && startingUrl && startingUrl.indexOf(to) !== -1) {\n        startingUrl = undefined;\n        return;\n      }\n\n      if (from !== to) {\n        startingUrl = undefined;\n        if (activeTransaction) {\n          __DEBUG_BUILD__ && logger.log(`[Tracing] Finishing current transaction with op: ${activeTransaction.op}`);\n          // If there's an open transaction on the scope, we need to finish it before creating an new one.\n          activeTransaction.finish();\n        }\n        activeTransaction = customStartTransaction({\n          name: WINDOW.location.pathname,\n          op: 'navigation',\n          metadata: { source: 'url' },\n        });\n      }\n    });\n  }\n}\n", "/* eslint-disable max-lines */\nimport type { Hub, IdleTransaction } from '@sentry/core';\nimport { extractTraceparentData, startIdleTransaction, TRACING_DEFAULTS } from '@sentry/core';\nimport type { EventProcessor, Integration, Transaction, TransactionContext, TransactionSource } from '@sentry/types';\nimport { baggageHeaderToDynamicSamplingContext, getDomElement, logger } from '@sentry/utils';\n\nimport { registerBackgroundTabDetection } from './backgroundtab';\nimport {\n  addPerformanceEntries,\n  startTrackingInteractions,\n  startTrackingLongTasks,\n  startTrackingWebVitals,\n} from './metrics';\nimport type { RequestInstrumentationOptions } from './request';\nimport { defaultRequestInstrumentationOptions, instrumentOutgoingRequests } from './request';\nimport { instrumentRoutingWithDefaults } from './router';\nimport { WINDOW } from './types';\n\nexport const BROWSER_TRACING_INTEGRATION_ID = 'BrowserTracing';\n\n/** Options for Browser Tracing integration */\nexport interface BrowserTracingOptions extends RequestInstrumentationOptions {\n  /**\n   * The time to wait in ms until the transaction will be finished during an idle state. An idle state is defined\n   * by a moment where there are no in-progress spans.\n   *\n   * The transaction will use the end timestamp of the last finished span as the endtime for the transaction.\n   * If there are still active spans when this the `idleTimeout` is set, the `idleTimeout` will get reset.\n   * Time is in ms.\n   *\n   * Default: 1000\n   */\n  idleTimeout: number;\n\n  /**\n   * The max duration for a transaction. If a transaction duration hits the `finalTimeout` value, it\n   * will be finished.\n   * Time is in ms.\n   *\n   * Default: 30000\n   */\n  finalTimeout: number;\n\n  /**\n   * The heartbeat interval. If no new spans are started or open spans are finished within 3 heartbeats,\n   * the transaction will be finished.\n   * Time is in ms.\n   *\n   * Default: 5000\n   */\n  heartbeatInterval: number;\n\n  /**\n   * Flag to enable/disable creation of `navigation` transaction on history changes.\n   *\n   * Default: true\n   */\n  startTransactionOnLocationChange: boolean;\n\n  /**\n   * Flag to enable/disable creation of `pageload` transaction on first pageload.\n   *\n   * Default: true\n   */\n  startTransactionOnPageLoad: boolean;\n\n  /**\n   * Flag Transactions where tabs moved to background with \"cancelled\". Browser background tab timing is\n   * not suited towards doing precise measurements of operations. By default, we recommend that this option\n   * be enabled as background transactions can mess up your statistics in nondeterministic ways.\n   *\n   * Default: true\n   */\n  markBackgroundTransactions: boolean;\n\n  /**\n   * If true, Sentry will capture long tasks and add them to the corresponding transaction.\n   *\n   * Default: true\n   */\n  enableLongTask: boolean;\n\n  /**\n   * _metricOptions allows the user to send options to change how metrics are collected.\n   *\n   * _metricOptions is currently experimental.\n   *\n   * Default: undefined\n   */\n  _metricOptions?: Partial<{\n    /**\n     * @deprecated This property no longer has any effect and will be removed in v8.\n     */\n    _reportAllChanges: boolean;\n  }>;\n\n  /**\n   * _experiments allows the user to send options to define how this integration works.\n   * Note that the `enableLongTask` options is deprecated in favor of the option at the top level, and will be removed in v8.\n   *\n   * TODO (v8): Remove enableLongTask\n   *\n   * Default: undefined\n   */\n  _experiments: Partial<{\n    enableLongTask: boolean;\n    enableInteractions: boolean;\n    onStartRouteTransaction: (t: Transaction | undefined, ctx: TransactionContext, getCurrentHub: () => Hub) => void;\n  }>;\n\n  /**\n   * beforeNavigate is called before a pageload/navigation transaction is created and allows users to modify transaction\n   * context data, or drop the transaction entirely (by setting `sampled = false` in the context).\n   *\n   * Note: For legacy reasons, transactions can also be dropped by returning `undefined`.\n   *\n   * @param context: The context data which will be passed to `startTransaction` by default\n   *\n   * @returns A (potentially) modified context object, with `sampled = false` if the transaction should be dropped.\n   */\n  beforeNavigate?(this: void, context: TransactionContext): TransactionContext | undefined;\n\n  /**\n   * Instrumentation that creates routing change transactions. By default creates\n   * pageload and navigation transactions.\n   */\n  routingInstrumentation<T extends Transaction>(\n    this: void,\n    customStartTransaction: (context: TransactionContext) => T | undefined,\n    startTransactionOnPageLoad?: boolean,\n    startTransactionOnLocationChange?: boolean,\n  ): void;\n}\n\nconst DEFAULT_BROWSER_TRACING_OPTIONS: BrowserTracingOptions = {\n  ...TRACING_DEFAULTS,\n  markBackgroundTransactions: true,\n  routingInstrumentation: instrumentRoutingWithDefaults,\n  startTransactionOnLocationChange: true,\n  startTransactionOnPageLoad: true,\n  enableLongTask: true,\n  _experiments: {},\n  ...defaultRequestInstrumentationOptions,\n};\n\n/**\n * The Browser Tracing integration automatically instruments browser pageload/navigation\n * actions as transactions, and captures requests, metrics and errors as spans.\n *\n * The integration can be configured with a variety of options, and can be extended to use\n * any routing library. This integration uses {@see IdleTransaction} to create transactions.\n */\nexport class BrowserTracing implements Integration {\n  // This class currently doesn't have a static `id` field like the other integration classes, because it prevented\n  // @sentry/tracing from being treeshaken. Tree shakers do not like static fields, because they behave like side effects.\n  // TODO: Come up with a better plan, than using static fields on integration classes, and use that plan on all\n  // integrations.\n\n  /** Browser Tracing integration options */\n  public options: BrowserTracingOptions;\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = BROWSER_TRACING_INTEGRATION_ID;\n\n  private _getCurrentHub?: () => Hub;\n\n  private _latestRouteName?: string;\n  private _latestRouteSource?: TransactionSource;\n\n  private _collectWebVitals: () => void;\n\n  public constructor(_options?: Partial<BrowserTracingOptions>) {\n    this.options = {\n      ...DEFAULT_BROWSER_TRACING_OPTIONS,\n      ..._options,\n    };\n\n    // Special case: enableLongTask can be set in _experiments\n    // TODO (v8): Remove this in v8\n    if (this.options._experiments.enableLongTask !== undefined) {\n      this.options.enableLongTask = this.options._experiments.enableLongTask;\n    }\n\n    // TODO (v8): remove this block after tracingOrigins is removed\n    // Set tracePropagationTargets to tracingOrigins if specified by the user\n    // In case both are specified, tracePropagationTargets takes precedence\n    // eslint-disable-next-line deprecation/deprecation\n    if (_options && !_options.tracePropagationTargets && _options.tracingOrigins) {\n      // eslint-disable-next-line deprecation/deprecation\n      this.options.tracePropagationTargets = _options.tracingOrigins;\n    }\n\n    this._collectWebVitals = startTrackingWebVitals();\n    if (this.options.enableLongTask) {\n      startTrackingLongTasks();\n    }\n    if (this.options._experiments.enableInteractions) {\n      startTrackingInteractions();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(_: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    this._getCurrentHub = getCurrentHub;\n\n    const {\n      routingInstrumentation: instrumentRouting,\n      startTransactionOnLocationChange,\n      startTransactionOnPageLoad,\n      markBackgroundTransactions,\n      traceFetch,\n      traceXHR,\n      tracePropagationTargets,\n      shouldCreateSpanForRequest,\n      _experiments,\n    } = this.options;\n\n    instrumentRouting(\n      (context: TransactionContext) => {\n        const transaction = this._createRouteTransaction(context);\n\n        this.options._experiments.onStartRouteTransaction &&\n          this.options._experiments.onStartRouteTransaction(transaction, context, getCurrentHub);\n\n        return transaction;\n      },\n      startTransactionOnPageLoad,\n      startTransactionOnLocationChange,\n    );\n\n    if (markBackgroundTransactions) {\n      registerBackgroundTabDetection();\n    }\n\n    if (_experiments.enableInteractions) {\n      this._registerInteractionListener();\n    }\n\n    instrumentOutgoingRequests({\n      traceFetch,\n      traceXHR,\n      tracePropagationTargets,\n      shouldCreateSpanForRequest,\n    });\n  }\n\n  /** Create routing idle transaction. */\n  private _createRouteTransaction(context: TransactionContext): Transaction | undefined {\n    if (!this._getCurrentHub) {\n      __DEBUG_BUILD__ &&\n        logger.warn(`[Tracing] Did not create ${context.op} transaction because _getCurrentHub is invalid.`);\n      return undefined;\n    }\n\n    const { beforeNavigate, idleTimeout, finalTimeout, heartbeatInterval } = this.options;\n\n    const isPageloadTransaction = context.op === 'pageload';\n\n    const sentryTraceMetaTagValue = isPageloadTransaction ? getMetaContent('sentry-trace') : null;\n    const baggageMetaTagValue = isPageloadTransaction ? getMetaContent('baggage') : null;\n\n    const traceParentData = sentryTraceMetaTagValue ? extractTraceparentData(sentryTraceMetaTagValue) : undefined;\n    const dynamicSamplingContext = baggageMetaTagValue\n      ? baggageHeaderToDynamicSamplingContext(baggageMetaTagValue)\n      : undefined;\n\n    const expandedContext: TransactionContext = {\n      ...context,\n      ...traceParentData,\n      metadata: {\n        ...context.metadata,\n        dynamicSamplingContext: traceParentData && !dynamicSamplingContext ? {} : dynamicSamplingContext,\n      },\n      trimEnd: true,\n    };\n\n    const modifiedContext = typeof beforeNavigate === 'function' ? beforeNavigate(expandedContext) : expandedContext;\n\n    // For backwards compatibility reasons, beforeNavigate can return undefined to \"drop\" the transaction (prevent it\n    // from being sent to Sentry).\n    const finalContext = modifiedContext === undefined ? { ...expandedContext, sampled: false } : modifiedContext;\n\n    // If `beforeNavigate` set a custom name, record that fact\n    finalContext.metadata =\n      finalContext.name !== expandedContext.name\n        ? { ...finalContext.metadata, source: 'custom' }\n        : finalContext.metadata;\n\n    this._latestRouteName = finalContext.name;\n    this._latestRouteSource = finalContext.metadata && finalContext.metadata.source;\n\n    if (finalContext.sampled === false) {\n      __DEBUG_BUILD__ &&\n        logger.log(`[Tracing] Will not send ${finalContext.op} transaction because of beforeNavigate.`);\n    }\n\n    __DEBUG_BUILD__ && logger.log(`[Tracing] Starting ${finalContext.op} transaction on scope`);\n\n    const hub = this._getCurrentHub();\n    const { location } = WINDOW;\n\n    const idleTransaction = startIdleTransaction(\n      hub,\n      finalContext,\n      idleTimeout,\n      finalTimeout,\n      true,\n      { location }, // for use in the tracesSampler\n      heartbeatInterval,\n    );\n    idleTransaction.registerBeforeFinishCallback(transaction => {\n      this._collectWebVitals();\n      addPerformanceEntries(transaction);\n    });\n\n    return idleTransaction as Transaction;\n  }\n\n  /** Start listener for interaction transactions */\n  private _registerInteractionListener(): void {\n    let inflightInteractionTransaction: IdleTransaction | undefined;\n    const registerInteractionTransaction = (): void => {\n      const { idleTimeout, finalTimeout, heartbeatInterval } = this.options;\n\n      const op = 'ui.action.click';\n      if (inflightInteractionTransaction) {\n        inflightInteractionTransaction.finish();\n        inflightInteractionTransaction = undefined;\n      }\n\n      if (!this._getCurrentHub) {\n        __DEBUG_BUILD__ && logger.warn(`[Tracing] Did not create ${op} transaction because _getCurrentHub is invalid.`);\n        return undefined;\n      }\n\n      if (!this._latestRouteName) {\n        __DEBUG_BUILD__ &&\n          logger.warn(`[Tracing] Did not create ${op} transaction because _latestRouteName is missing.`);\n        return undefined;\n      }\n\n      const hub = this._getCurrentHub();\n      const { location } = WINDOW;\n\n      const context: TransactionContext = {\n        name: this._latestRouteName,\n        op,\n        trimEnd: true,\n        metadata: {\n          source: this._latestRouteSource || 'url',\n        },\n      };\n\n      inflightInteractionTransaction = startIdleTransaction(\n        hub,\n        context,\n        idleTimeout,\n        finalTimeout,\n        true,\n        { location }, // for use in the tracesSampler\n        heartbeatInterval,\n      );\n    };\n\n    ['click'].forEach(type => {\n      addEventListener(type, registerInteractionTransaction, { once: false, capture: true });\n    });\n  }\n}\n\n/** Returns the value of a meta tag */\nexport function getMetaContent(metaName: string): string | null {\n  // Can't specify generic to `getDomElement` because tracing can be used\n  // in a variety of environments, have to disable `no-unsafe-member-access`\n  // as a result.\n  const metaTag = getDomElement(`meta[name=${metaName}]`);\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return metaTag ? metaTag.getAttribute('content') : null;\n}\n", "export * from './exports';\n\nimport { addExtensionMethods } from './extensions';\nimport * as Integrations from './node/integrations';\n\nexport { Integrations };\n\n// This is already exported as part of `Integrations` above (and for the moment will remain so for\n// backwards compatibility), but that interferes with treeshaking, so we also export it separately\n// here.\n//\n// Previously we expected users to import tracing integrations like\n//\n// import { Integrations } from '@sentry/tracing';\n// const instance = new Integrations.BrowserTracing();\n//\n// This makes the integrations unable to be treeshaken though. To address this, we now have\n// this individual export. We now expect users to consume BrowserTracing like so:\n//\n// import { BrowserTracing } from '@sentry/tracing';\n// const instance = new BrowserTracing();\n//\n// For an example of of the new usage of BrowserTracing, see @sentry/nextjs index.client.ts\nexport {\n  BrowserTracing,\n  BROWSER_TRACING_INTEGRATION_ID,\n  instrumentOutgoingRequests,\n  defaultRequestInstrumentationOptions,\n} from './browser';\n\nexport type { RequestInstrumentationOptions } from './browser';\n\n// Treeshakable guard to remove all code related to tracing\ndeclare const __SENTRY_TRACING__: boolean;\n\n// Guard for tree\nif (typeof __SENTRY_TRACING__ === 'undefined' || __SENTRY_TRACING__) {\n  // We are patching the global object with our hub extension methods\n  addExtensionMethods();\n}\n\nexport { addExtensionMethods };\n", "import {\n    CreateProject,\n    CreateProjectTmp,\n    DeleteProject,\n    GetColumnStats,\n    GetLocalFile,\n    GetProject,\n    GetTableStats,\n    Hotkey,\n    HotkeyId,\n    ListenKeys,\n    ObserveSizes,\n    ProjectDirty,\n    SetMeta,\n    Track,\n    UpdateProject,\n    UpdateProjectTmp\n} from \"./types/ports\";\nimport {ElmApp} from \"./services/elm\";\nimport {AzimuttApi} from \"./services/api\";\nimport {\n    buildProjectDraft,\n    buildProjectJson,\n    buildProjectLocal,\n    buildProjectRemote,\n    ProjectStorage\n} from \"./types/project\";\nimport {ConsoleLogger} from \"./services/logger\";\nimport {loadPolyfills} from \"./utils/polyfills\";\nimport {Utils} from \"./utils/utils\";\nimport {Storage} from \"./services/storage\";\nimport {Backend} from \"./services/backend\";\nimport * as Uuid from \"./types/uuid\";\nimport {HtmlId, Platform, ToastLevel, ViewPosition} from \"./types/basics\";\nimport {Env, getEnv} from \"./utils/env\";\nimport {AnyError, formatError} from \"./utils/error\";\nimport * as url from \"./utils/url\";\nimport {ColumnStats, TableStats} from \"./types/stats\";\nimport * as Sentry from \"@sentry/browser\";\nimport {BrowserTracing} from \"@sentry/tracing\";\n\nconst env = getEnv()\nconst platform = Utils.getPlatform()\nconst logger = new ConsoleLogger(env)\nconst flags = {now: Date.now(), conf: {env, platform}}\nlogger.debug('flags', flags)\nconst app = ElmApp.init(flags, logger)\nconst storage = new Storage(logger)\nconst backend = new Backend(env, logger)\nlogger.info('Hi there! I hope you are enjoying Azimutt \uD83D\uDC4D\uFE0F\\n\\n' +\n    'Did you know you can access your current project in the console?\\n' +\n    'And even trigger some actions in Azimutt?\\n\\n' +\n    'Just look at `azimutt` variable and perform what you want.\\n' +\n    'For example, here is how to count the total number of columns in all sources:\\n' +\n    '  `azimutt.project.sources.flatMap(s => s.tables).flatMap(t => t.columns).length`\\n\\n' +\n    'Use `azimutt.help()` for more details!')\n\nwindow.azimutt = new AzimuttApi(app, logger)\n\n/* PWA service worker */\n\nif ('serviceWorker' in navigator && env === Env.enum.prod) {\n    navigator.serviceWorker.register(\"/service-worker.js\")\n    // .then(reg => logger.debug('service-worker registered!', reg))\n    // .catch(err => logger.debug('service-worker failed to register!', err))\n}\n\n/* Elm ports */\n\napp.on('Click', msg => Utils.getElementById(msg.id).click())\napp.on('MouseDown', msg => Utils.getElementById(msg.id).dispatchEvent(new Event('mousedown')))\napp.on('Focus', msg => Utils.getElementById(msg.id).focus())\napp.on('Blur', msg => Utils.getElementById(msg.id).blur())\napp.on('ScrollTo', msg => Utils.maybeElementById(msg.id).forEach(e => e.scrollIntoView(msg.position !== ViewPosition.enum.end)))\napp.on('Fullscreen', msg => Utils.fullscreen(msg.id).then(() => app.fitToScreen()))\napp.on('SetMeta', setMeta)\napp.on('AutofocusWithin', msg => (Utils.getElementById(msg.id).querySelector<HTMLElement>('[autofocus]'))?.focus())\napp.on('Toast', msg => app.toast(msg.level, msg.message))\napp.on('GetProject', getProject)\napp.on('CreateProjectTmp', createProjectTmp)\napp.on('UpdateProjectTmp', updateProjectTmp)\napp.on('CreateProject', createProject)\napp.on('UpdateProject', updateProject)\n// FIXME: app.on('MoveProjectTo', msg => store.moveProjectTo(msg.project, msg.storage).then(app.gotProject).catch(err => app.toast(ToastLevel.enum.error, err)))\napp.on('DeleteProject', deleteProject)\napp.on('ProjectDirty', projectDirty)\napp.on('DownloadFile', msg => Utils.downloadFile(msg.filename, msg.content))\napp.on('GetLocalFile', getLocalFile)\napp.on('GetTableStats', getTableStats)\napp.on('GetColumnStats', getColumnStats)\napp.on('ObserveSizes', observeSizes)\napp.on('ListenKeys', listenHotkeys)\napp.on('Confetti', msg => Utils.launchConfetti(msg.id))\napp.on('ConfettiPride', _ => Utils.launchConfettiPride())\napp.on('Fireworks', _ => Utils.launchFireworks())\napp.on('Track', msg => backend.trackEvent(msg.event))\nif (app.noListeners().length > 0 && env !== Env.enum.prod) {\n    logger.error(`Do not listen to elm events: ${app.noListeners().join(', ')}`)\n}\n\nfunction setMeta(meta: SetMeta) {\n    if (typeof meta.title === 'string') {\n        document.title = meta.title\n        document.querySelector('meta[property=\"og:title\"]')?.setAttribute('content', meta.title)\n        document.querySelector('meta[name=\"twitter:title\"]')?.setAttribute('content', meta.title)\n    }\n    if (typeof meta.description === 'string') {\n        document.querySelector('meta[name=\"description\"]')?.setAttribute('content', meta.description)\n        document.querySelector('meta[property=\"og:description\"]')?.setAttribute('content', meta.description)\n        document.querySelector('meta[name=\"twitter:description\"]')?.setAttribute('content', meta.description)\n    }\n    if (typeof meta.canonical === 'string') {\n        const canonical = document.querySelector('link[rel=\"canonical\"]')\n        canonical ? canonical.setAttribute('href', meta.canonical) : document.head.append(`<link rel=\"canonical\" href=\"${meta.canonical}\">`)\n        document.querySelector('meta[property=\"og:url\"]')?.setAttribute('content', meta.canonical)\n        document.querySelector('meta[name=\"twitter:url\"]')?.setAttribute('content', meta.canonical)\n    }\n    if (typeof meta.html === 'string') {\n        document.getElementsByTagName('html')[0]?.setAttribute('class', meta.html)\n    }\n    if (typeof meta.body === 'string') {\n        document.getElementsByTagName('body')[0]?.setAttribute('class', meta.body)\n    }\n}\n\nfunction getProject(msg: GetProject) {\n    (msg.project === Uuid.zero ?\n            storage.getProject(msg.project).then(p => buildProjectDraft(msg.project, p)) :\n            backend.getProject(msg.organization, msg.project, msg.token).then(res => {\n                if (res.storage === ProjectStorage.enum.remote) {\n                    return buildProjectRemote(res, res.content)\n                } else if (res.storage === ProjectStorage.enum.local) {\n                    return storage.getProject(msg.project).then(p => buildProjectLocal(res, p))\n                } else {\n                    return Promise.reject('Invalid storage')\n                }\n            })\n    ).then(project => app.gotProject(project), err => {\n        if (err.statusCode === 401) {\n            window.location.replace(backend.loginUrl(url.relative(window.location)))\n        } else {\n            reportError(`Can't load project`, err)\n            app.gotProject(undefined)\n        }\n    })\n}\n\nfunction createProjectTmp(msg: CreateProjectTmp): void {\n    const json = buildProjectJson(msg.project)\n    storage.deleteProject(Uuid.zero)\n        .then(_ => storage.createProject(Uuid.zero, json))\n        .then(_ => app.gotProject(buildProjectDraft(msg.project.id, json)),\n            err => reportError(`Can't save draft project`, err))\n}\n\nfunction updateProjectTmp(msg: UpdateProjectTmp): void {\n    const json = buildProjectJson(msg.project)\n    storage.updateProject(Uuid.zero, json)\n        .then(_ => null, err => reportError(`Can't update draft project`, err))\n}\n\nfunction createProject(msg: CreateProject): void {\n    const json = buildProjectJson(msg.project)\n    if (msg.storage == ProjectStorage.enum.local) {\n        backend.createProjectLocal(msg.organization, json).then(res => {\n            return storage.createProject(res.id, json).then(_ => buildProjectLocal(res, json), err => {\n                reportError(`Can't save project locally`, err)\n                return backend.deleteProject(msg.organization, res.id).then(_ => Promise.reject(err))\n            })\n        }, err => {\n            reportError(`Can't save project to backend`, err)\n            return Promise.reject(err)\n        }).then(p => {\n            // delete previously stored projects: draft and legacy one\n            return Promise.all([storage.deleteProject(Uuid.zero), storage.deleteProject(msg.project.id)]).catch(err => {\n                reportError(`Can't delete temporary project`, err)\n                return Promise.resolve()\n            }).then(_ => {\n                app.toast(ToastLevel.enum.success, `Project created!`)\n                window.history.replaceState(\"\", \"\", `/${msg.organization}/${p.id}`)\n                app.gotProject(p)\n            })\n        })\n    } else if (msg.storage == ProjectStorage.enum.remote) {\n        backend.createProjectRemote(msg.organization, json).then(p => {\n            // delete previously stored projects: draft and legacy one\n            return Promise.all([storage.deleteProject(Uuid.zero), storage.deleteProject(msg.project.id)]).catch(err => {\n                reportError(`Can't delete temporary project`, err)\n                return Promise.resolve()\n            }).then(_ => {\n                app.toast(ToastLevel.enum.success, `Project created!`)\n                window.history.replaceState(\"\", \"\", `/${msg.organization}/${p.id}`)\n                app.gotProject(buildProjectRemote(p, json))\n            })\n        }, err => reportError(`Can't save project to backend`, err))\n    } else {\n        reportError(`Unknown ProjectStorage`, msg.storage)\n    }\n}\n\nfunction updateProject(msg: UpdateProject): void {\n    const json = buildProjectJson(msg.project)\n    if (!msg.project.organization) return reportError('Expecting an organization to update project')\n    if (msg.project.storage == ProjectStorage.enum.local) {\n        backend.updateProjectLocal(msg.project).then(res => {\n            return storage.updateProject(res.id, json).then(_ => {\n                app.toast(ToastLevel.enum.success, 'Project saved')\n                app.gotProject(buildProjectLocal(res, json))\n            }, err => reportError(`Can't update project locally`, err))\n        }, err => reportError(`Can't update project to backend`, err))\n    } else if (msg.project.storage == ProjectStorage.enum.remote) {\n        backend.updateProjectRemote(msg.project).then(res => {\n            app.toast(ToastLevel.enum.success, 'Project saved')\n            app.gotProject(buildProjectRemote(res, json))\n        }, err => reportError(`Can't update project`, err))\n    } else {\n        reportError(`Unknown ProjectStorage`, msg.project.storage)\n    }\n}\n\nfunction deleteProject(msg: DeleteProject): void {\n    if (msg.project.organization) {\n        backend.deleteProject(msg.project.organization.id, msg.project.id).catch(err => {\n            reportError(`Can't delete project in backend`, err)\n            return Promise.reject(err)\n        }).then(_ => {\n            if (msg.project.storage == ProjectStorage.enum.local) {\n                return storage.deleteProject(msg.project.id).catch(err => {\n                    reportError(`Can't delete project locally`, err)\n                    return Promise.reject(err)\n                })\n            }\n        }).then(_ => msg.redirect ? window.location.href = msg.redirect : app.dropProject(msg.project.id))\n    } else {\n        storage.deleteProject(msg.project.id).catch(err => {\n            reportError(`Can't delete project locally`, err)\n            return Promise.reject(err)\n        }).then(_ => msg.redirect ? window.location.href = msg.redirect : app.dropProject(msg.project.id))\n    }\n}\n\n// prompt users to save before leave project when not fully saved\nwindow.isDirty = false\nwindow.addEventListener('beforeunload', function (e: BeforeUnloadEvent) {\n    if (window.isDirty) {\n        const message = 'Your project is not saved, want to leave?'\n        e.returnValue = message // Gecko, Trident, Chrome 34+\n        return message          // Gecko, WebKit, Chrome <34\n    }\n})\n\nfunction projectDirty(msg: ProjectDirty): void {\n    window.isDirty = msg.dirty\n}\n\nfunction getLocalFile(msg: GetLocalFile) {\n    const reader = new FileReader()\n    reader.onload = (e: any) => app.gotLocalFile(msg, e.target.result)\n    reader.readAsText(msg.file as any)\n}\n\nconst tableStatsCache: { [key: string]: TableStats } = {}\n\nfunction getTableStats(msg: GetTableStats) {\n    const key = `${msg.source}-${msg.table}`\n    if (tableStatsCache[key]) {\n        app.gotTableStats(msg.source, tableStatsCache[key])\n    } else {\n        backend.getTableStats(msg.database, msg.table).then(\n            stats => app.gotTableStats(msg.source, tableStatsCache[key] = stats),\n            err => err.statusCode !== 404 && reportError(`Can't get stats for ${msg.table}`, err)\n        )\n    }\n}\n\nconst columnStatsCache: { [key: string]: ColumnStats } = {}\n\nfunction getColumnStats(msg: GetColumnStats) {\n    const key = `${msg.source}-${msg.column.table}.${msg.column.column}`\n    if (columnStatsCache[key]) {\n        app.gotColumnStats(msg.source, columnStatsCache[key])\n    } else {\n        backend.getColumnStats(msg.database, msg.column).then(\n            stats => app.gotColumnStats(msg.source, columnStatsCache[key] = stats),\n            err => err.statusCode !== 404 && reportError(`Can't get stats for ${msg.column}`, err)\n        )\n    }\n}\n\nconst resizeObserver = new ResizeObserver(entries => {\n    app.updateSizes(entries.map(entry => {\n        const rect = entry.target.getBoundingClientRect() // viewport position & size\n        // const sizeCanvas = {width: entry.contentRect.width, height: entry.contentRect.height} // don't change with zoom\n        const sizeViewport = {width: rect.width, height: rect.height} // depend on zoom\n        return {\n            id: entry.target.id,\n            position: {clientX: rect.left, clientY: rect.top},\n            size: sizeViewport,\n            seeds: {dx: Math.random(), dy: Math.random()}\n        }\n    }))\n})\n\nfunction observeSizes(msg: ObserveSizes) {\n    msg.ids.forEach(id => {\n        const elt = document.getElementById(id)\n        elt ? resizeObserver.observe(elt) : observeSizesRetry(id, 20)\n    })\n}\n\nfunction observeSizesRetry(id: HtmlId, remainingAttempts: number) {\n    if (remainingAttempts > 0) {\n        setTimeout(() => {\n            const elt = document.getElementById(id)\n            elt ? resizeObserver.observe(elt) : observeSizesRetry(id, remainingAttempts - 1)\n        }, 200)\n    }\n}\n\nconst hotkeys: { [key: string]: (Hotkey & { id: HotkeyId })[] } = {}\n\n// keydown is needed for preventDefault, also can't use Elm Browser.Events.onKeyUp because of it\nfunction isInput(elt: Element) {\n    return elt.localName === 'input' || elt.localName === 'textarea'\n}\n\nfunction keydownHotkey(e: KeyboardEvent) {\n    const target = e.target as HTMLElement\n    const matches = (hotkeys[e.key] || []).filter(hotkey => {\n        return (Utils.getPlatform() === Platform.enum.pc ? hotkey.ctrl === e.ctrlKey : hotkey.ctrl === e.metaKey) &&\n            (!hotkey.shift || e.shiftKey) &&\n            (hotkey.alt === e.altKey) &&\n            ((!hotkey.target && (hotkey.onInput || !isInput(target))) ||\n                (hotkey.target &&\n                    (!hotkey.target.id || hotkey.target.id === target.id) &&\n                    (!hotkey.target.class || target.className.split(' ').includes(hotkey.target.class)) &&\n                    (!hotkey.target.tag || hotkey.target.tag === target.localName)))\n    })\n    matches.map(hotkey => {\n        if (hotkey.preventDefault) e.preventDefault()\n        app.gotHotkey(hotkey)\n    })\n    if (matches.length === 0 && e.key === \"Escape\" && isInput(target)) target.blur()\n}\n\nfunction listenHotkeys(msg: ListenKeys) {\n    Object.keys(hotkeys).forEach(key => hotkeys[key] = [])\n    Object.entries(msg.keys).forEach(([id, alternatives]) => {\n        alternatives.forEach(hotkey => {\n            if (!hotkeys[hotkey.key]) {\n                hotkeys[hotkey.key] = []\n            }\n            hotkeys[hotkey.key].push({...hotkey, id})\n        })\n    })\n}\n\n\n// handle key hold\nconst holdKeyState = {drag: false}\n\nfunction keydownHoldKey(e: KeyboardEvent) {\n    if (e.code === 'Space') {\n        if (!holdKeyState.drag && (e.target as Element).localName !== 'input') {\n            app.gotKeyHold(e.code, true)\n        }\n        holdKeyState.drag = true\n    }\n}\n\nfunction keyupHoldKey(e: KeyboardEvent) {\n    if (e.code === 'Space') {\n        if (holdKeyState.drag) {\n            app.gotKeyHold(e.code, false)\n        }\n        holdKeyState.drag = false\n    }\n}\n\nfunction reportError(label: string, error?: AnyError) {\n    if (error === undefined) {\n        logger.error(label)\n        app.toast(ToastLevel.enum.error, label)\n    } else {\n        logger.error(label, error)\n        app.toast(ToastLevel.enum.error, `${label}: ${formatError(error)}`)\n    }\n}\n\n\n// listen at every click to handle tracking events\n// MUST stay sync with frontend/src/Libs/Html/Attributes.elm:123#track\nfunction trackClick(e: MouseEvent) {\n    const target = e.target as HTMLElement\n    const tracked = Utils.findParent(target, e => !!e.getAttribute('data-track-event'))\n    if (tracked) {\n        const name = tracked.getAttribute('data-track-event') || 'click'\n        const trackDetails: { [key: string]: string } = {label: (tracked.textContent || '').trim()}\n        const attrs = tracked.attributes\n        for (let i = 0; i < attrs.length; i++) {\n            const attr = attrs[i]\n            if (attr.name.startsWith('data-track-event-')) {\n                trackDetails[attr.name.replace('data-track-event-', '')] = attr.value\n            }\n        }\n        const {organization, project, ...details} = trackDetails\n        backend.trackEvent({name, details, organization, project})\n    }\n}\n\n// listeners\ndocument.addEventListener('click', (e: MouseEvent) => {\n    trackClick(e)\n})\ndocument.addEventListener('keydown', (e: KeyboardEvent) => {\n    keydownHotkey(e)\n    keydownHoldKey(e)\n})\ndocument.addEventListener('keyup', (e: KeyboardEvent) => {\n    keyupHoldKey(e)\n})\n\nif (env === Env.enum.prod) {\n    Sentry.init({\n        dsn: \"https://52a062c4168f402485783ad10fe2ccc2@o1353262.ingest.sentry.io/4504471109304320\",\n        integrations: [new BrowserTracing()],\n        tracesSampleRate: 1.0,\n    })\n}\n\nloadPolyfills()\n"],
  "mappings": "8zCAAA,IAAAA,GAAAC,GAAAC,IAAA,CAIAA,GAAQ,QAAUC,GAClBD,GAAQ,OAASE,GAEjB,IAAIC,GAAQC,GAAOC,GAAKC,GAAMC,GAE9BP,GAAQ,OAASG,GAASC,GAAQ,GAClCJ,GAAQ,IAASK,GAASC,GAAS,EACnCN,GAAQ,MAASO,GAAS,EAS1B,SAASN,GAAQO,EAAGC,EAAG,CACtB,IAAIC,EAAOF,EAAE,OACTG,EAAOF,EAAE,OAETG,EAASC,GAAWL,EAAGC,CAAC,EACxBK,EAASF,EAASF,GAAQE,EAASD,EACpCI,GAAWP,EAAGC,EAAGG,CAAM,EACvB,EAECI,EAASF,EAASF,EAAS,EAC/BF,GAAQM,EACRL,GAAQK,EAGR,QAFIC,EAASC,GAAaR,EAAMC,CAAI,EAE3BQ,EAAIT,EAAO,EAAGS,GAAK,EAAG,EAAEA,EAChC,QAASC,EAAIT,EAAO,EAAGS,GAAK,EAAG,EAAEA,EAChCH,EAAOG,CAAC,EAAED,CAAC,EAAIE,GAAUJ,EAAQT,EAAGC,EAAGG,EAAQO,EAAGC,CAAC,EAIrD,MAAO,CACN,OAAQR,EACR,OAAQK,EACR,OAAQH,CACT,CACD,CAcA,SAASZ,GAAOoB,EAAGC,EAAGC,EAAK,CAC1B,IAAIJ,EAAGD,EAAGM,EAAGC,EAETC,EAAIH,EAAI,OAGR,EAAIA,EAAI,OACZ,IAAIJ,EAAI,EAAEA,EAAI,EAAG,EAAEA,EAClBG,EAAID,EAAEC,EAAGhB,GAAMa,EAAGA,CAAC,EAQpB,IAJAK,EAAIL,EACJ,EAAIO,EAAE,OACNP,EAAI,EACJD,EAAI,EACEC,EAAI,GAIT,OAHAM,EAAKC,EAAEP,CAAC,EAAED,CAAC,EAAE,KACbI,EAAID,EAAEC,EAAGG,EAAIN,EAAEK,EAAGN,EAAEM,CAAC,EAEdC,EAAI,CACV,KAAKnB,GAAO,EAAEa,EAAG,EAAED,EAAG,MACtB,KAAKf,GAAO,EAAEe,EAAG,MACjB,KAAKb,GAAO,EAAEc,EAAG,KAClB,CAOD,IAHAA,GAAKK,EACLN,GAAKM,EACL,EAAID,EAAI,OACJC,EAAI,EAAEA,EAAI,EAAG,EAAEA,EAClBF,EAAID,EAAEC,EAAGhB,GAAMa,EAAEK,EAAGN,EAAEM,CAAC,EAGxB,OAAOF,CACR,CAEA,SAASV,GAAWL,EAAGC,EAAG,CAGzB,QAFIW,EAAI,EACJQ,EAAI,KAAK,IAAIpB,EAAE,OAAQC,EAAE,MAAM,EAC7BW,EAAIQ,GAAKpB,EAAEY,CAAC,IAAMX,EAAEW,CAAC,GAC1B,EAAEA,EAEH,OAAOA,CACR,CAEA,SAASL,GAAWP,EAAGC,EAAG,CAKzB,QAJIoB,EAAKrB,EAAE,OAAS,EAChBsB,EAAKrB,EAAE,OAAS,EAChBmB,EAAI,KAAK,IAAIC,EAAIC,CAAE,EACnB,EAAI,EACF,EAAIF,GAAKpB,EAAEqB,EAAG,CAAC,IAAMpB,EAAEqB,EAAG,CAAC,GAChC,EAAE,EAEH,OAAO,CACR,CAEA,SAAST,GAAUJ,EAAQT,EAAGC,EAAGsB,EAAOZ,EAAG,EAAG,CAC7C,OAAIX,EAAEW,EAAEY,CAAK,IAAMtB,EAAE,EAAEsB,CAAK,EACpB,CAAE,MAAOd,EAAO,EAAI,CAAC,EAAEE,EAAI,CAAC,EAAE,MAAO,KAAMZ,EAAK,EAEpDU,EAAO,CAAC,EAAEE,EAAI,CAAC,EAAE,MAAQF,EAAO,EAAI,CAAC,EAAEE,CAAC,EAAE,MACtC,CAAE,MAAOF,EAAO,CAAC,EAAEE,EAAI,CAAC,EAAE,MAAQ,EAAG,KAAMf,EAAM,EAGlD,CAAE,MAAOa,EAAO,EAAI,CAAC,EAAEE,CAAC,EAAE,MAAQ,EAAG,KAAMb,EAAK,CACxD,CAEA,SAASY,GAAcR,EAAMC,EAAM,CAClC,IAAIgB,EAAI,CAAC,EAAGP,EAAGD,EAAGa,EAIlB,IADAA,EAAUL,EAAEhB,CAAI,EAAI,CAAC,EAChBQ,EAAI,EAAGA,EAAET,EAAM,EAAES,EACrBa,EAAQb,CAAC,EAAI,CAAE,MAAOT,EAAOS,EAAG,KAAMf,EAAM,EAI7C,IAAKgB,EAAI,EAAGA,EAAET,EAAM,EAAES,EACrBO,EAAEP,CAAC,EAAI,CAAC,EACRO,EAAEP,CAAC,EAAEV,CAAI,EAAI,CAAE,MAAOC,EAAOS,EAAG,KAAMd,EAAK,EAI5C,OAAAqB,EAAEhB,CAAI,EAAED,CAAI,EAAI,CAAE,MAAO,EAAG,KAAMH,EAAK,EAEhCoB,CACR,ICnJA,IAAAM,GAAAC,GAAAC,IAAA,CAIAA,GAAQ,KAAOC,GACfD,GAAQ,KAAOE,GACfF,GAAQ,IAAMG,GAQd,SAASF,GAAKG,EAAGC,EAAG,CACnB,IAAIC,EAAID,EAAE,OACNE,EAAI,IAAI,MAAMD,EAAE,CAAC,EACrBC,EAAE,CAAC,EAAIH,EACP,QAAQI,EAAE,EAAGA,EAAEF,EAAG,EAAEE,EACnBD,EAAEC,EAAE,CAAC,EAAIH,EAAEG,CAAC,EAGb,OAAOD,CACR,CAQA,SAASL,GAAKG,EAAG,CAGhB,QAFIC,EAAID,EAAE,OAAO,EACbE,EAAI,IAAI,MAAMD,CAAC,EACXE,EAAE,EAAGA,EAAEF,EAAG,EAAEE,EACnBD,EAAEC,CAAC,EAAIH,EAAEG,EAAE,CAAC,EAGb,OAAOD,CACR,CAQA,SAASJ,GAAIM,EAAGJ,EAAG,CAElB,QADIE,EAAI,IAAI,MAAMF,EAAE,MAAM,EAClBG,EAAE,EAAGA,EAAGH,EAAE,OAAQ,EAAEG,EAC3BD,EAAEC,CAAC,EAAIC,EAAEJ,EAAEG,CAAC,CAAC,EAEd,OAAOD,CACR,ICrDA,IAAAG,GAAAC,GAAA,CAAAC,GAAAC,KAAA,CAIAA,GAAO,QAAUC,GAEjB,IAAIC,GAAU,YACVC,GAAY,IACZC,GAAa,IACbC,GAAmB,KAUvB,SAASJ,GAAiBK,EAAMC,EAAW,CAC1C,IAAIC,EAAKC,EAAOC,EAASC,EAMzB,IAJAH,EAAMF,EAAK,OAAO,CAAC,IAAMH,GAAY,EAAI,EACzCM,EAAQ,GACRP,GAAQ,UAAYM,EAEdE,EAAUR,GAAQ,KAAKI,CAAI,GAMhC,GAJAK,EAAQD,EAAQ,CAAC,EACjBD,GAASH,EAAK,MAAME,EAAKN,GAAQ,UAAYS,EAAM,MAAM,EACzDH,EAAMN,GAAQ,UAEXS,IAAUR,GAAW,CACvB,GAAII,EAAUE,CAAK,IAAM,GAAO,OAAOH,EACvCG,EAAQ,QAERA,GAASE,IAAUN,GAAmBF,GAAYC,GAIpD,OAAAK,GAASH,EAAK,MAAME,CAAG,EACvBD,EAAUE,CAAK,EAERH,CACR,IC5CA,IAAAM,GAAAC,GAAAC,IAAA,CAIA,IAAIC,GAAS,KAEbD,GAAQ,KAAOE,GACfF,GAAQ,KAAOG,GACfH,GAAQ,SAAWI,GACnBJ,GAAQ,MAAQK,GAChBL,GAAQ,SAAWM,GACnBN,GAAQ,cAAgBO,GACxBP,GAAQ,cAAgBQ,GACxBR,GAAQ,gBAAkBS,GAC1BT,GAAQ,kBAAoBU,GAG5B,IAAIC,GAAY,IACZC,GAAc,MACdC,GAAmB,KACnBC,GAAqB,MAErBC,GAAa,IACbC,GAAW,KACXC,GAAgB,KAChBC,GAAkB,MAgBtB,SAAShB,GAAKiB,EAAGC,EAAMC,EAAaC,EAAS,CAC5C,GAAG,OAAOF,GAAS,SAInB,IAAGA,IAAS,GAEX,MAAO,CAAE,OAAQD,EAAG,IAAK,MAAO,EAGjC,GAAGC,IAAST,GACX,MAAO,CAAE,OAAQQ,EAAG,IAAK,EAAG,EAG7B,IAAII,EAASJ,EAAGK,EACZC,EAAaH,IAAY,OAE7B,OAAArB,GAAOmB,EAAM,SAASM,EAAS,CAE9B,GAAGP,GAAK,KAEP,OAAAI,EAAS,KACF,GAGL,MAAM,QAAQJ,CAAC,EACjBK,EAAMC,EACHE,GAAUN,EAAaZ,GAAgBiB,CAAO,EAAGP,EAAGG,CAAO,EAC3DI,IAAY,IAAMA,EAAUjB,GAAgBiB,CAAO,EAEtDF,EAAME,EAGPH,EAASJ,EACTA,EAAIA,EAAEK,CAAG,CACV,CAAC,EAEMD,IAAW,KACf,OACA,CAAE,OAAQA,EAAQ,IAAKC,CAAI,EAC/B,CAEA,SAASpB,GAASgB,EAAM,CACvB,OAAOA,EAAK,CAAC,IAAMT,GAAYS,EAAOT,GAAYS,CACnD,CAEA,SAASjB,GAAKyB,EAAU,CACvB,OAAOA,EAAS,KAAKjB,EAAS,CAC/B,CAEA,SAASN,GAAMe,EAAM,CACpB,IAAIQ,EAAW,CAAC,EAChB,OAAA3B,GAAOmB,EAAMQ,EAAS,KAAK,KAAKA,CAAQ,CAAC,EAClCA,CACR,CAEA,SAAStB,GAASuB,EAAGC,EAAG,CACvB,OAAOA,EAAE,QAAQD,CAAC,IAAM,GAAKC,EAAED,EAAE,MAAM,IAAMlB,EAC9C,CAQA,SAASH,GAAcuB,EAAG,CAEzB,OAAOA,EAAE,QAAQjB,GAAoBH,EAAS,EAAE,QAAQO,GAAiBH,EAAU,CACpF,CAQA,SAASR,GAAcwB,EAAG,CACzB,OAAOA,EAAE,QAAQf,GAAUC,EAAa,EAAE,QAAQL,GAAaC,EAAgB,CAChF,CAEA,IAAImB,GAAe,iBAOnB,SAAStB,GAAkBqB,EAAG,CAC7B,OAAOC,GAAa,KAAKD,CAAC,CAC3B,CAOA,SAAStB,GAAiBsB,EAAG,CAC5B,GAAGrB,GAAkBqB,CAAC,EACrB,MAAO,CAACA,EAGT,MAAM,IAAI,YAAY,uBAAyBA,CAAC,CACjD,CAEA,SAASJ,GAAWN,EAAaY,EAAOC,EAAOZ,EAAS,CACvD,IAAIa,EAAQF,EAEZ,GAAGE,EAAQ,EACV,MAAM,IAAI,MAAM,6BAA+BA,CAAK,EAGrD,GAAGb,IAAY,QAAU,OAAOD,GAAgB,aAC/Cc,EAAQd,EAAYY,EAAOC,EAAOZ,CAAO,EACtCa,EAAQ,GACV,MAAM,IAAI,MAAM,gCAAkCb,CAAO,EAI3D,OAAOa,CACR,ICjKA,IAAAC,GAAAC,GAAA,CAAAC,GAAAC,KAAA,CASAA,GAAO,QAAUC,GAEjB,SAASA,GAAMC,EAAG,CACjB,OAAGA,GAAK,MAAQ,OAAOA,GAAM,SACrBA,EAGL,MAAM,QAAQA,CAAC,EACVC,GAAWD,CAAC,EAGbE,GAAYF,CAAC,CACrB,CAEA,SAASC,GAAYD,EAAG,CAIvB,QAHIG,EAAIH,EAAE,OACNI,EAAI,IAAI,MAAMD,CAAC,EAEVE,EAAI,EAAGA,EAAIF,EAAG,EAAEE,EACxBD,EAAEC,CAAC,EAAIN,GAAMC,EAAEK,CAAC,CAAC,EAGlB,OAAOD,CACR,CAEA,SAASF,GAAaF,EAAG,CAIxB,QAHIM,EAAO,OAAO,KAAKN,CAAC,EACpBI,EAAI,CAAC,EAEAG,EAAGF,EAAI,EAAGF,EAAIG,EAAK,OAAQD,EAAIF,EAAG,EAAEE,EAC5CE,EAAID,EAAKD,CAAC,EACVD,EAAEG,CAAC,EAAIR,GAAMC,EAAEO,CAAC,CAAC,EAGlB,OAAOH,CACR,IC5CA,IAAAI,GAAAC,GAAA,CAAAC,GAAAC,KAAA,CAAAA,GAAO,QAAUC,GAQjB,SAASA,GAAWC,EAAGC,EAAG,CACzB,OAAGD,IAAMC,EACD,GAGL,MAAM,QAAQD,CAAC,GAAK,MAAM,QAAQC,CAAC,EAC9BC,GAAcF,EAAGC,CAAC,EAGvB,OAAOD,GAAM,UAAY,OAAOC,GAAM,SACjCE,GAAeH,EAAGC,CAAC,EAGpB,EACR,CAEA,SAASC,GAAcF,EAAGC,EAAG,CAC5B,GAAGD,EAAE,SAAWC,EAAE,OACjB,MAAO,GAGR,QAAQG,EAAI,EAAGA,EAAEJ,EAAE,OAAQ,EAAEI,EAC5B,GAAG,CAACL,GAAWC,EAAEI,CAAC,EAAGH,EAAEG,CAAC,CAAC,EACxB,MAAO,GAIT,MAAO,EACR,CAEA,SAASD,GAAeH,EAAGC,EAAG,CAC7B,GAAID,IAAM,MAAQC,IAAM,MAAUD,IAAM,MAAQC,IAAM,KACrD,MAAO,GAGR,IAAII,EAAQ,OAAO,KAAKL,CAAC,EACrBM,EAAQ,OAAO,KAAKL,CAAC,EAEzB,GAAGI,EAAM,SAAWC,EAAM,OACzB,MAAO,GAGR,QAAQF,EAAI,EAAGG,EAAGH,EAAEC,EAAM,OAAQ,EAAED,EAEnC,GADAG,EAAIF,EAAMD,CAAC,EACR,EAAEG,KAAKN,GAAKF,GAAWC,EAAEO,CAAC,EAAGN,EAAEM,CAAC,CAAC,GACnC,MAAO,GAIT,MAAO,EACR,IC1DA,IAAAC,GAAAC,GAAA,CAAAC,GAAAC,KAAA,KAAIC,GAAc,KAOlBD,GAAO,QAAU,SAAsBE,EAAGC,EAAG,CAE5C,IAAIC,EAAOH,GAAY,MAAMC,EAAE,IAAI,EAC/BG,EAAQJ,GAAY,MAAME,EAAE,IAAI,EAChCG,EAASC,GAAoBH,EAAMC,CAAK,EACxCG,EAAUC,GAAYL,EAAMC,EAAOC,EAAO,MAAM,EAGhDI,EAAKC,GAAUT,CAAC,EAChBU,EAAKD,GAAUR,CAAC,EAEpB,OAAGG,EAAO,SAAW,GAAK,CAACE,EAEnB,CAACI,EAAIF,CAAE,EAGZF,EACKK,GAAkBH,EAAIN,EAAMQ,EAAIP,CAAK,EAErCS,GAAiBJ,EAAIN,EAAMQ,EAAIP,CAAK,CAE7C,EAEA,SAASS,GAAiBZ,EAAGE,EAAMD,EAAGE,EAAO,CAC5C,GAAGH,EAAE,OAASC,EAAE,KACf,MAAM,IAAI,UAAU,kBAAoBD,EAAE,GAAK,IAAMC,EAAE,GAAK,8BAA8B,EAG3F,MAAO,CAACA,EAAGD,CAAC,CACb,CAWA,SAASW,GAAkBX,EAAGE,EAAMD,EAAGE,EAAO,CAC7C,OAAGD,EAAK,SAAWC,EAAM,OACjBU,GAAqBb,EAAGE,EAAMD,EAAGE,CAAK,GAG1CD,EAAK,OAASC,EAAM,QAEvBD,EAAOY,GAAqBb,EAAGE,EAAOH,EAAGE,EAAM,EAAE,EACjDF,EAAE,KAAOD,GAAY,SAASA,GAAY,KAAKG,CAAI,CAAC,IAGpDC,EAAQW,GAAqBd,EAAGE,EAAMD,EAAGE,EAAO,CAAC,EACjDF,EAAE,KAAOF,GAAY,SAASA,GAAY,KAAKI,CAAK,CAAC,GAG/C,CAACF,EAAGD,CAAC,EACb,CAEA,SAASO,GAAYL,EAAMC,EAAOY,EAAO,CACxC,OAAOhB,GAAY,kBAAkBG,EAAKa,CAAK,CAAC,GAC5ChB,GAAY,kBAAkBI,EAAMY,CAAK,CAAC,CAC/C,CAUA,SAASF,GAAqBG,EAAGC,EAAO,EAAGC,EAAO,CAEjD,IAAIC,EAASF,EAAM,OAAO,EACtBG,EAAS,CAACH,EAAME,CAAM,EACtBE,EAAS,CAACH,EAAMC,CAAM,EAEtBG,EAEJ,OAAGF,EAASC,EAERL,EAAE,KAAO,OAASA,EAAE,KAAO,QAC7BM,EAAWJ,EAAM,MAAM,EACvBI,EAASH,CAAM,EAAI,KAAK,IAAI,EAAGE,EAAS,CAAC,EACzC,EAAE,KAAOtB,GAAY,SAASA,GAAY,KAAKuB,CAAQ,CAAC,GAC/CN,EAAE,KAAO,WAClBM,EAAWJ,EAAM,MAAM,EACvBI,EAASH,CAAM,EAAIE,EAAS,EAC5B,EAAE,KAAOtB,GAAY,SAASA,GAAY,KAAKuB,CAAQ,CAAC,GAEhD,EAAE,KAAO,OAAS,EAAE,KAAO,QAEpCA,EAAWL,EAAM,MAAM,EACvBK,EAASH,CAAM,EAAIC,EAAS,EAC5BJ,EAAE,KAAOjB,GAAY,SAASA,GAAY,KAAKuB,CAAQ,CAAC,GAC9CF,EAASC,GAAU,EAAE,KAAO,WAEtCC,EAAWL,EAAM,MAAM,EACvBK,EAASH,CAAM,EAAI,KAAK,IAAI,EAAGC,EAAS,CAAC,EACzCJ,EAAE,KAAOjB,GAAY,SAASA,GAAY,KAAKuB,CAAQ,CAAC,GAGlD,CAAC,EAAGN,CAAC,CACb,CAWA,SAASF,GAAqBE,EAAGC,EAAO,EAAGC,EAAOK,EAAW,CAG5D,IAAIJ,EAASF,EAAM,OAAO,EACtBG,EAAS,CAACH,EAAME,CAAM,EACtBE,EAAS,CAACH,EAAMC,CAAM,EAGtBK,EAAKN,EAAM,MAAM,EAErB,OAAGE,EAASC,IAITL,EAAE,KAAO,OAASA,EAAE,KAAO,OAC7BQ,EAAGL,CAAM,EAAI,KAAK,IAAI,EAAGE,EAASE,CAAS,EAClCP,EAAE,KAAO,WAClBQ,EAAGL,CAAM,EAAI,KAAK,IAAI,EAAGE,EAASE,CAAS,IAGrCC,CACR,CAEA,SAASnB,GAAoBoB,EAAIC,EAAI,CACpC,IAAIC,EAAMF,EAAG,OACTG,EAAMF,EAAG,OACb,GAAGC,IAAQ,GAAKC,IAAQ,GAAMD,EAAM,GAAKC,EAAM,EAC9C,MAAO,CAAC,EAWT,QALIZ,EAAIW,IAAQC,EACbD,EAAM,EACN,KAAK,IAAIA,EAAKC,CAAG,EAEhB,EAAI,EACF,EAAIZ,GAAKS,EAAG,CAAC,IAAMC,EAAG,CAAC,GAC5B,EAAE,EAGH,OAAOD,EAAG,MAAM,EAAG,CAAC,CACrB,CAEA,SAAShB,GAAUoB,EAAG,CACrB,OAAGA,EAAE,KAAO,SACJ,CAAE,GAAIA,EAAE,GAAI,KAAMA,EAAE,IAAK,EAG9BA,EAAE,KAAO,QAAUA,EAAE,KAAO,OACvB,CAAE,GAAIA,EAAE,GAAI,KAAMA,EAAE,KAAM,KAAMA,EAAE,IAAK,EAIxC,CAAE,GAAIA,EAAE,GAAI,KAAMA,EAAE,KAAM,MAAOA,EAAE,KAAM,CACjD,ICjLA,IAAAC,GAAAC,GAAA,CAAAC,GAAAC,KAAA,CAAAA,GAAO,QAAUC,GAEjB,SAASA,GAAgBC,EAAS,CACjC,MAAM,KAAK,IAAI,EACf,KAAK,KAAO,KAAK,YAAY,KAC7B,KAAK,QAAUA,EACZ,OAAO,MAAM,mBAAsB,YACrC,MAAM,kBAAkB,KAAM,KAAK,WAAW,CAEhD,CAEAD,GAAgB,UAAY,OAAO,OAAO,MAAM,SAAS,EACzDA,GAAgB,UAAU,YAAcA,KCZxC,IAAAE,GAAAC,GAAA,CAAAC,GAAAC,KAAA,CAAAA,GAAO,QAAUC,GAEjB,SAASA,GAA2BC,EAAS,CAC5C,MAAM,KAAK,IAAI,EACf,KAAK,KAAO,KAAK,YAAY,KAC7B,KAAK,QAAUA,EACZ,OAAO,MAAM,mBAAsB,YACrC,MAAM,kBAAkB,KAAM,KAAK,WAAW,CAEhD,CAEAD,GAA2B,UAAY,OAAO,OAAO,MAAM,SAAS,EACpEA,GAA2B,UAAU,YAAcA,KCZnD,IAAAE,GAAAC,GAAA,CAAAC,GAAAC,KAAA,CAAAA,GAAO,QAAUC,GAEjB,SAASA,GAAwBC,EAAS,CACzC,MAAM,KAAK,IAAI,EACf,KAAK,KAAO,KAAK,YAAY,KAC7B,KAAK,QAAUA,EACZ,OAAO,MAAM,mBAAsB,YACrC,MAAM,kBAAkB,KAAM,KAAK,WAAW,CAEhD,CAEAD,GAAwB,UAAY,OAAO,OAAO,MAAM,SAAS,EACjEA,GAAwB,UAAU,YAAcA,KCZhD,IAAAE,GAAAC,GAAAC,IAAA,KAAIC,GAAc,KACdC,GAAQ,KACRC,GAAa,KACbC,GAAe,KAEfC,GAAQ,KAERC,GAAkB,KAClBC,GAA6B,KAC7BC,GAA0B,KAE1BC,GAAOR,GAAY,KACnBS,GAAkBT,GAAY,gBAElCD,GAAQ,KAAO,CACd,MAAOW,GACP,QAASC,GACT,QAASC,EACV,EAEAb,GAAQ,IAAM,CACb,MAAOc,GACP,QAASC,GACT,QAASC,EACV,EAEAhB,GAAQ,OAAS,CAChB,MAAOiB,GACP,QAASC,GACT,QAASC,EACV,EAEAnB,GAAQ,QAAU,CACjB,MAAOoB,GACP,QAASC,GACT,QAASC,EACV,EAEAtB,GAAQ,KAAO,CACd,MAAOuB,GACP,QAASC,GACT,QAASC,EACV,EAEAzB,GAAQ,KAAO,CACd,MAAO0B,GACP,QAASC,GACT,QAASX,EACV,EASA,SAASL,GAAUiB,EAAGC,EAAMC,EAAS,CACpC,IAAIC,EAAUtB,GAAKmB,EAAGC,EAAK,KAAMC,EAAQ,YAAaD,EAAK,OAAO,EAC9DG,EAASD,EAAQ,OACjBE,EAAOC,EAUX,GARG,MAAM,QAAQF,CAAM,GACtBC,EAAQvB,GAAgBqB,EAAQ,GAAG,EAEnCG,EAAQF,EAAOC,CAAK,GAEpBC,EAAQH,EAAQ,MAAQ,OAASA,EAAQ,OAASA,EAAQ,OAAOA,EAAQ,GAAG,EAG1E,CAAC5B,GAAW+B,EAAOL,EAAK,KAAK,EAC/B,MAAM,IAAIvB,GAAgB,eAAiB,KAAK,UAAUuB,CAAI,CAAC,EAGhE,OAAOD,CACR,CAQA,SAAShB,GAAWuB,EAAIN,EAAM,CAC7B,OAAAM,EAAG,KAAKN,CAAI,EACL,CACR,CAEA,SAAShB,GAAYgB,EAAMO,EAAG,CAC7B,GAAGP,EAAK,OAASO,EAAE,MAAQA,EAAE,KAAO,SACnC,MAAM,IAAI,UAAU,wDAAyD,EAG9E,OAAGA,EAAE,KAAO,QAAUA,EAAE,KAAO,UACvB,CAACA,EAAGP,CAAI,EAGTzB,GAAayB,EAAMO,CAAC,CAC5B,CAOA,SAAStB,GAASc,EAAGS,EAAQP,EAAS,CACrC,IAAIC,EAAUtB,GAAKmB,EAAGS,EAAO,KAAMP,EAAQ,YAAaO,EAAO,OAAO,EAEtE,GAAGC,GAASP,CAAO,EAClB,MAAM,IAAIxB,GAA2B,uBAAyB8B,EAAO,IAAI,EAG1E,GAAGA,EAAO,QAAU,OACnB,MAAM,IAAI9B,GAA2B,eAAe,EAGrD,IAAIgC,EAAMrC,GAAMmC,EAAO,KAAK,EAG5B,OAAGN,EAAQ,MAAQ,OACXQ,GAGRC,GAAKT,EAASQ,CAAG,EACVX,EACR,CAEA,SAASY,GAAKT,EAASG,EAAO,CAC7B,IAAIF,EAASD,EAAQ,OAErB,GAAG,MAAM,QAAQC,CAAM,EAEtB,GAAGD,EAAQ,MAAQ,IAClBC,EAAO,KAAKE,CAAK,MACX,IAAIH,EAAQ,IAAMC,EAAO,OAC/B,MAAM,IAAIzB,GAA2B,uCAAuC,EAE5EyB,EAAO,OAAOD,EAAQ,IAAK,EAAGG,CAAK,UAE3BO,GAAcT,CAAM,EAC7BA,EAAOD,EAAQ,GAAG,EAAIG,MAEtB,OAAM,IAAI3B,GAA2B,4CAA8CwB,EAAQ,GAAG,CAEhG,CAEA,SAAShB,GAAUoB,EAAIO,EAAK,CAC3B,IAAIC,EAAUD,EAAI,QAClB,OAAGC,IAAY,SACdA,EAAU,CACT,OAAQA,EAAQ,OAChB,MAAOtC,GAAM,KAAKqC,EAAI,MAAOC,EAAQ,KAAK,CAC3C,GAEDR,EAAG,KAAK,CAAE,GAAI,OAAQ,KAAMO,EAAI,KAAM,MAAOA,EAAI,MAAO,QAASC,CAAQ,CAAC,EAC1ER,EAAG,KAAK,CAAE,GAAI,SAAU,KAAMO,EAAI,KAAM,QAASC,CAAQ,CAAC,EACnD,CACR,CAEA,SAAS3B,GAAiB0B,EAAKN,EAAG,CACjC,GAAGM,EAAI,OAASN,EAAE,MAAQA,EAAE,KAAO,SAClC,MAAM,IAAI,UAAU,sDAAuD,EAG5E,OAAOhC,GAAasC,EAAKN,CAAC,CAC3B,CAOA,SAAShB,GAAaQ,EAAGS,EAAQP,EAAS,CACzC,IAAIC,EAAUtB,GAAKmB,EAAGS,EAAO,KAAMP,EAAQ,YAAaO,EAAO,OAAO,EAEtE,GAAGC,GAASP,CAAO,GAAKa,GAAab,CAAO,EAC3C,MAAM,IAAIxB,GAA2B,uBAAyB8B,EAAO,IAAI,EAG1E,GAAGA,EAAO,QAAU,OACnB,MAAM,IAAI9B,GAA2B,eAAe,EAGrD,IAAI2B,EAAQhC,GAAMmC,EAAO,KAAK,EAG9B,GAAGN,EAAQ,MAAQ,OAClB,OAAOG,EAGR,IAAIF,EAASD,EAAQ,OAErB,OAAG,MAAM,QAAQC,CAAM,EACtBA,EAAOtB,GAAgBqB,EAAQ,GAAG,CAAC,EAAIG,EAEvCF,EAAOD,EAAQ,GAAG,EAAIG,EAGhBN,CACR,CAEA,SAASP,GAAcc,EAAIU,EAAGC,EAAGC,EAAO,CACvC,IAAIC,EAAOD,EAAMD,EAAE,CAAC,EACpB,GAAGE,IAAS,QAAUA,EAAK,KAAO,QAAUA,EAAK,OAASH,EAAE,KAC3D,MAAM,IAAIrC,GAAwB,gCAAgC,EAGnE,IAAImC,EAAUK,EAAK,QACnB,OAAGL,IAAY,SACdA,EAAU,CACT,OAAQA,EAAQ,OAChB,MAAOtC,GAAM,KAAK2C,EAAK,MAAO3C,GAAM,KAAKsC,EAAQ,KAAK,CAAC,CACxD,GAGDR,EAAG,KAAK,CAAE,GAAI,OAAQ,KAAMa,EAAK,KAAM,MAAOH,EAAE,KAAM,CAAC,EACvDV,EAAG,KAAK,CAAE,GAAI,UAAW,KAAMa,EAAK,KAAM,MAAOA,EAAK,KAAM,CAAC,EACtD,CACR,CAEA,SAAS1B,GAAe2B,EAASb,EAAG,CACnC,GAAGa,EAAQ,OAASb,EAAE,MAAQA,EAAE,KAAO,SACtC,MAAM,IAAI,UAAU,8DAA+D,EAGpF,OAAGA,EAAE,KAAO,QAAUA,EAAE,KAAO,UACvB,CAACA,EAAGa,CAAO,EAGZ7C,GAAa6C,EAASb,CAAC,CAC/B,CAOA,SAASnB,GAAYW,EAAGS,EAAQP,EAAS,CACxC,IAAIC,EAAUtB,GAAKmB,EAAGS,EAAO,KAAMP,EAAQ,YAAaO,EAAO,OAAO,EAGtE,GAAGC,GAASP,CAAO,GAAKA,EAAQ,OAAOA,EAAQ,GAAG,IAAM,OACvD,MAAM,IAAIxB,GAA2B,uBAAyB8B,EAAO,IAAI,EAG1E,OAAAa,GAAQnB,CAAO,EACRH,CACR,CAEA,SAASsB,GAASnB,EAAS,CAC1B,IAAIC,EAASD,EAAQ,OAEjBoB,EACJ,GAAI,MAAM,QAAQnB,CAAM,EACvB,OAAAmB,EAAUnB,EAAO,OAAOtB,GAAgBqB,EAAQ,GAAG,EAAG,CAAC,EAChDoB,EAAQ,CAAC,EAEV,GAAIV,GAAcT,CAAM,EAC9B,OAAAmB,EAAUnB,EAAOD,EAAQ,GAAG,EAC5B,OAAOC,EAAOD,EAAQ,GAAG,EAClBoB,EAGP,MAAM,IAAI5C,GAA2B,6CAA6C,CAEpF,CAEA,SAASW,GAAaiB,EAAIU,EAAGC,EAAGC,EAAO,CACtC,IAAIC,EAAOD,EAAMD,EAAE,CAAC,EACpB,GAAGE,IAAS,QAAUA,EAAK,KAAO,QAAUA,EAAK,OAASH,EAAE,KAC3D,MAAM,IAAIrC,GAAwB,+BAA+B,EAGlE,IAAImC,EAAUK,EAAK,QACnB,OAAGL,IAAY,SACdA,EAAU,CACT,OAAQA,EAAQ,OAChB,MAAOtC,GAAM,KAAKsC,EAAQ,KAAK,CAChC,GAGDR,EAAG,KAAK,CAAE,GAAI,MAAO,KAAMa,EAAK,KAAM,MAAOA,EAAK,MAAO,QAASL,CAAQ,CAAC,EACpE,CACR,CAEA,SAASxB,GAAciC,EAAQhB,EAAG,CACjC,OAAGgB,EAAO,OAAShB,EAAE,MAAQA,EAAE,KAAO,SAC9B,CAACA,EAAGgB,CAAM,EAGXhD,GAAagD,EAAQhB,CAAC,CAC9B,CAOA,SAASb,GAAUK,EAAGS,EAAQP,EAAS,CACtC,GAAG7B,GAAY,SAASoC,EAAO,KAAMA,EAAO,IAAI,EAC/C,MAAM,IAAI9B,GAA2B,2CAA2C,EAGjF,IAAI8C,EAAM5C,GAAKmB,EAAGS,EAAO,KAAMP,EAAQ,YAAaO,EAAO,OAAO,EAC9DiB,EAAQ7C,GAAKmB,EAAGS,EAAO,KAAMP,EAAQ,YAAaO,EAAO,WAAW,EAExE,OAAAG,GAAKa,EAAKH,GAAQI,CAAK,CAAC,EACjB1B,CACR,CAEA,SAASJ,GAAWW,EAAIU,EAAG,CAC1B,OAAAV,EAAG,KAAK,CAAE,GAAI,OACb,KAAMU,EAAE,KAAM,QAASA,EAAE,YACzB,KAAMA,EAAE,KAAM,YAAaA,EAAE,OAAQ,CAAC,EAChC,CACR,CAEA,SAASpB,GAAY8B,EAAMnB,EAAG,CAC7B,GAAGmB,EAAK,OAASnB,EAAE,MAAQA,EAAE,KAAO,SACnC,MAAM,IAAI,UAAU,yDAA0D,EAG/E,OAAOhC,GAAamD,EAAMnB,CAAC,CAC5B,CAOA,SAASV,GAAUE,EAAGS,EAAQP,EAAS,CACtC,IAAIuB,EAAM5C,GAAKmB,EAAGS,EAAO,KAAMP,EAAQ,YAAaO,EAAO,OAAO,EAC9DiB,EAAQ7C,GAAKmB,EAAGS,EAAO,KAAMP,EAAQ,YAAaO,EAAO,WAAW,EAExE,GAAGC,GAASgB,CAAK,GAAKV,GAAaU,CAAK,EACvC,MAAM,IAAI/C,GAA2B,sBAAsB,EAG5D,IAAIyB,EAASsB,EAAM,OACfpB,EAEJ,OAAG,MAAM,QAAQF,CAAM,EACtBE,EAAQF,EAAOtB,GAAgB4C,EAAM,GAAG,CAAC,EAEzCpB,EAAQF,EAAOsB,EAAM,GAAG,EAGzBd,GAAKa,EAAKnD,GAAMgC,CAAK,CAAC,EACfN,CACR,CAYA,SAASD,GAAc6B,EAAGX,EAAG,CAC5B,MAAM,IAAIrC,GAAwB,iBAAmBqC,EAAE,EAAE,CAC1D,CAEA,SAASP,GAAUP,EAAS,CAC3B,OAAOA,IAAY,QAAWA,EAAQ,QAAU,MAAQA,EAAQ,MAAQ,MACzE,CAEA,SAASa,GAAab,EAAS,CAC9B,OAAOA,EAAQ,MAAQ,QAAUA,EAAQ,OAAOA,EAAQ,GAAG,IAAM,MAClE,CAOA,SAASU,GAAeb,EAAG,CAC1B,OAAOA,IAAM,MAAQ,OAAOA,GAAM,QACnC,IC5XA,IAAA6B,GAAAC,GAAAC,IAAA,CAIA,IAAIC,GAAU,KACVC,GAAQ,KACRC,GAA6B,KAEjCH,GAAQ,MAAQI,GAChBJ,GAAQ,aAAeK,GACvBL,GAAQ,MAAQE,GAChBF,GAAQ,cAAgBM,GACxBN,GAAQ,YAAcO,GAEtB,IAAIC,GAAiB,CAAC,EActB,SAASJ,GAAMK,EAASC,EAAGC,EAAS,CACnC,OAAON,GAAaI,EAASP,GAAMQ,CAAC,EAAGC,CAAO,CAC/C,CAEA,SAASN,GAAaI,EAASC,EAAGC,EAAS,CAM1C,GALIA,IACHA,EAAUH,IAIR,CAAC,MAAM,QAAQC,CAAO,EACxB,OAAOC,EAIR,QADIN,EAAOQ,EACH,EAAE,EAAG,EAAEH,EAAQ,OAAQ,EAAE,EAAG,CAInC,GAHAG,EAAIH,EAAQ,CAAC,EACbL,EAAQH,GAAQW,EAAE,EAAE,EAEjBR,IAAU,OACZ,MAAM,IAAID,GAA2B,cAAgB,KAAK,UAAUS,CAAC,CAAC,EAGvEF,EAAIN,EAAM,MAAMM,EAAGE,EAAGD,CAAO,EAG9B,OAAOD,CACR,CAEA,SAASH,GAAYG,EAAG,CACvB,OAAOJ,GAAcI,CAAC,GAAKG,GAAQH,CAAC,EAAI,KAAK,UAAUA,CAAC,EAAIA,CAC7D,CAEA,SAASJ,GAAeI,EAAG,CAC1B,OAAOA,IAAM,MAAQ,OAAO,UAAU,SAAS,KAAKA,CAAC,IAAM,iBAC5D,CAEA,SAASG,GAASH,EAAG,CACpB,OAAO,OAAO,UAAU,SAAS,KAAKA,CAAC,IAAM,gBAC9C,ICnEA,IAAAI,GAAAC,GAAA,CAAAC,GAAAC,KAAA,KAAIC,GAAU,KAEdD,GAAO,QAAU,SAAiBE,EAAG,CACpC,IAAIC,EAAK,CAAC,EACNC,EAAGC,EACP,IAAID,EAAIF,EAAE,OAAO,EAAGE,GAAI,EAAGA,GAAKC,EAC/BA,EAAOC,GAASH,EAAID,EAAEE,CAAC,EAAGA,EAAGF,CAAC,EAG/B,OAAOC,CACR,EAEA,SAASG,GAASC,EAAOC,EAAGJ,EAAGK,EAAS,CACvC,IAAIC,EAAKT,GAAQO,EAAE,EAAE,EACrB,OAAOE,IAAO,QAAU,OAAOA,EAAG,SAAY,WAC3CA,EAAG,QAAQH,EAAOC,EAAGJ,EAAGK,CAAO,EAC/B,CACJ,ICjBA,IAAAE,GAAAC,GAAAC,IAAA,CAIA,IAAIC,GAAM,KACNC,GAAQ,KACRC,GAAQ,KACRC,GAAU,KACVC,GAAc,KACdC,GAAgBD,GAAY,cAEhCL,GAAQ,KAAOO,GACfP,GAAQ,MAAQG,GAAM,MACtBH,GAAQ,aAAeG,GAAM,aAC7BH,GAAQ,QAAUI,GAClBJ,GAAQ,MAAQG,GAAM,MAGtBH,GAAQ,2BAA6B,KACrCA,GAAQ,gBAAkB,KAC1BA,GAAQ,wBAA0B,KAElC,IAAIQ,GAAgBL,GAAM,cACtBM,GAAcN,GAAM,YAaxB,SAASI,GAAKG,EAAGC,EAAGC,EAAS,CAC5B,OAAOC,GAAcH,EAAGC,EAAG,GAAIG,GAAUF,EAAS,CAAC,CAAC,CAAC,EAAE,KACxD,CASA,SAASE,GAAUF,EAAST,EAAO,CAClC,OAAG,OAAOS,GAAY,SACd,CACN,MAAOT,EACP,KAAMY,GAAOC,GAAYJ,EAAQ,KAAMH,EAAW,EAClD,YAAaM,GAAOC,GAAYJ,EAAQ,YAAaK,EAAc,EACnE,WAAcL,EAAQ,aAAe,EACtC,EAEO,CACN,MAAOT,EACP,KAAMY,GAAOC,GAAYJ,EAASH,EAAW,EAC7C,YAAaQ,GACb,WAAY,EACb,CAEF,CAWA,SAASJ,GAAcH,EAAGC,EAAGO,EAAMC,EAAO,CACzC,OAAG,MAAM,QAAQT,CAAC,GAAK,MAAM,QAAQC,CAAC,EAC9BS,GAAmBV,EAAGC,EAAGO,EAAMC,CAAK,EAGzCX,GAAcE,CAAC,GAAKF,GAAcG,CAAC,EAC9BU,GAAoBX,EAAGC,EAAGO,EAAMC,CAAK,EAGtCG,GAAmBZ,EAAGC,EAAGO,EAAMC,CAAK,CAC5C,CAUA,SAASE,GAAoBE,EAAIC,EAAIN,EAAMC,EAAO,CACjD,IAAIM,EAAO,OAAO,KAAKD,CAAE,EACrBrB,EAAQgB,EAAM,MACdO,EAAGC,EAEP,IAAID,EAAED,EAAK,OAAO,EAAGC,GAAG,EAAG,EAAEA,EAAG,CAC/BC,EAAMF,EAAKC,CAAC,EACZ,IAAIE,EAAUV,EAAO,IAAMZ,GAAcqB,CAAG,EACzCJ,EAAGI,CAAG,IAAM,OACdd,GAAcU,EAAGI,CAAG,EAAGH,EAAGG,CAAG,EAAGC,EAAST,CAAK,EAE9ChB,EAAM,KAAK,CAAE,GAAI,MAAO,KAAMyB,EAAS,MAAOJ,EAAGG,CAAG,CAAE,CAAC,EAKzD,IADAF,EAAO,OAAO,KAAKF,CAAE,EACjBG,EAAED,EAAK,OAAO,EAAGC,GAAG,EAAG,EAAEA,EAE5B,GADAC,EAAMF,EAAKC,CAAC,EACTF,EAAGG,CAAG,IAAM,OAAQ,CACtB,IAAIE,EAAIX,EAAO,IAAMZ,GAAcqB,CAAG,EACnCR,EAAM,YACRhB,EAAM,KAAK,CAAE,GAAI,OAAQ,KAAM0B,EAAG,MAAON,EAAGI,CAAG,CAAE,CAAC,EAEnDxB,EAAM,KAAK,CAAE,GAAI,SAAU,KAAM0B,CAAE,CAAC,EAItC,OAAOV,CACR,CAUA,SAASC,GAAmBU,EAAIC,EAAIb,EAAMC,EAAO,CAChD,IAAIa,EAAS9B,GAAM,IAAIiB,EAAM,KAAMW,CAAE,EACjCG,EAAS/B,GAAM,IAAIiB,EAAM,KAAMY,CAAE,EAEjCG,EAAYjC,GAAI,QAAQ+B,EAAQC,CAAM,EAE1C,OAAOE,GAAeL,EAAIC,EAAIb,EAAMC,EAAOe,CAAS,CACrD,CAaA,SAASC,GAAeL,EAAIC,EAAIb,EAAMC,EAAOe,EAAW,CACvD,IAAIE,EAAS,EACb,OAAOnC,GAAI,OAAO,SAASkB,EAAOkB,EAAIX,EAAGY,EAAG,CAC3C,IAAIC,EAAMC,EACNrC,EAAQgB,EAAM,MACdU,EAAIX,EAAO,KAAOoB,EAAIF,GAE1B,OAAIC,IAAOpC,GAAI,QAEdsC,EAAOpC,EAAMA,EAAM,OAAO,CAAC,EAC3BqC,EAAUrB,EAAM,YAAYmB,EAAGR,CAAE,EAE9BX,EAAM,YACRhB,EAAM,KAAK,CAAE,GAAI,OAAQ,KAAM0B,EAAG,MAAOC,EAAGQ,CAAC,EAAG,QAASE,CAAQ,CAAC,EAGhED,IAAS,QAAUA,EAAK,KAAO,OAASA,EAAK,OAASV,GACxDU,EAAK,GAAK,UACVA,EAAK,QAAUC,GAEfrC,EAAM,KAAK,CAAE,GAAI,SAAU,KAAM0B,EAAG,QAASW,CAAQ,CAAC,EAGvDJ,GAAU,GAEAC,IAAOpC,GAAI,KAGrBE,EAAM,KAAK,CAAE,GAAI,MAAO,KAAM0B,EAAG,MAAOE,EAAGL,CAAC,EAC3C,QAASP,EAAM,YAAYmB,EAAGR,CAAE,CACjC,CAAC,EAEDM,GAAU,GAGVvB,GAAciB,EAAGQ,CAAC,EAAGP,EAAGL,CAAC,EAAGG,EAAGV,CAAK,EAG9BA,CAER,EAAGA,EAAOe,CAAS,CACpB,CAUA,SAASZ,GAAmBZ,EAAGC,EAAGO,EAAMC,EAAO,CAC9C,OAAGT,IAAMC,IACLQ,EAAM,YACRA,EAAM,MAAM,KAAK,CAAE,GAAI,OAAQ,KAAMD,EAAM,MAAOR,CAAE,CAAC,EAGtDS,EAAM,MAAM,KAAK,CAAE,GAAI,UAAW,KAAMD,EAAM,MAAOP,CAAE,CAAC,GAGlDQ,CACR,CAQA,SAASJ,GAAO0B,EAAWC,EAAGC,EAAG,CAChC,OAAOF,EAAUC,CAAC,EAAIA,EAAIC,CAC3B,CAMA,SAAS1B,IAAiB,CAE1B,CAMA,SAASD,GAAW0B,EAAG,CACtB,OAAO,OAAOA,GAAM,UACrB,IC/OA,IAAIE,GACH,SAAUA,EAAM,CACbA,EAAK,YAAeC,GAAQA,EAC5B,SAASC,EAASC,EAAM,CAAE,CAC1BH,EAAK,SAAWE,EAChB,SAASE,EAAYC,EAAI,CACrB,MAAM,IAAI,KACd,CACAL,EAAK,YAAcI,EACnBJ,EAAK,YAAeM,GAAU,CAC1B,IAAMC,EAAM,CAAC,EACb,QAAWC,KAAQF,EACfC,EAAIC,CAAI,EAAIA,EAEhB,OAAOD,CACX,EACAP,EAAK,mBAAsBO,GAAQ,CAC/B,IAAME,EAAYT,EAAK,WAAWO,CAAG,EAAE,OAAQG,GAAM,OAAOH,EAAIA,EAAIG,CAAC,CAAC,GAAM,QAAQ,EAC9EC,EAAW,CAAC,EAClB,QAAWD,KAAKD,EACZE,EAASD,CAAC,EAAIH,EAAIG,CAAC,EAEvB,OAAOV,EAAK,aAAaW,CAAQ,CACrC,EACAX,EAAK,aAAgBO,GACVP,EAAK,WAAWO,CAAG,EAAE,IAAI,SAAUK,EAAG,CACzC,OAAOL,EAAIK,CAAC,CAChB,CAAC,EAELZ,EAAK,WAAa,OAAO,OAAO,MAAS,WAClCO,GAAQ,OAAO,KAAKA,CAAG,EACvBM,GAAW,CACV,IAAMC,EAAO,CAAC,EACd,QAAWC,KAAOF,EACV,OAAO,UAAU,eAAe,KAAKA,EAAQE,CAAG,GAChDD,EAAK,KAAKC,CAAG,EAGrB,OAAOD,CACX,EACJd,EAAK,KAAO,CAACgB,EAAKC,IAAY,CAC1B,QAAWT,KAAQQ,EACf,GAAIC,EAAQT,CAAI,EACZ,OAAOA,CAGnB,EACAR,EAAK,UAAY,OAAO,OAAO,WAAc,WACtCC,GAAQ,OAAO,UAAUA,CAAG,EAC5BA,GAAQ,OAAOA,GAAQ,UAAY,SAASA,CAAG,GAAK,KAAK,MAAMA,CAAG,IAAMA,EAC/E,SAASiB,EAAWC,EAAOC,EAAY,MAAO,CAC1C,OAAOD,EACF,IAAKlB,GAAS,OAAOA,GAAQ,SAAW,IAAIA,KAASA,CAAI,EACzD,KAAKmB,CAAS,CACvB,CACApB,EAAK,WAAakB,EAClBlB,EAAK,sBAAwB,CAACqB,EAAGC,IACzB,OAAOA,GAAU,SACVA,EAAM,SAAS,EAEnBA,CAEf,GAAGtB,IAASA,EAAO,CAAC,EAAE,EACtB,IAAIuB,IACH,SAAUA,EAAY,CACnBA,EAAW,YAAc,CAACC,EAAOC,KACtB,CACH,GAAGD,EACH,GAAGC,CACP,EAER,GAAGF,KAAeA,GAAa,CAAC,EAAE,EAClC,IAAMG,EAAgB1B,EAAK,YAAY,CACnC,SACA,MACA,SACA,UACA,QACA,UACA,OACA,SACA,SACA,WACA,YACA,OACA,QACA,SACA,UACA,UACA,OACA,QACA,MACA,KACJ,CAAC,EACK2B,GAAiBC,GAAS,CAE5B,OADU,OAAOA,EACN,CACP,IAAK,YACD,OAAOF,EAAc,UACzB,IAAK,SACD,OAAOA,EAAc,OACzB,IAAK,SACD,OAAO,MAAME,CAAI,EAAIF,EAAc,IAAMA,EAAc,OAC3D,IAAK,UACD,OAAOA,EAAc,QACzB,IAAK,WACD,OAAOA,EAAc,SACzB,IAAK,SACD,OAAOA,EAAc,OACzB,IAAK,SACD,OAAOA,EAAc,OACzB,IAAK,SACD,OAAI,MAAM,QAAQE,CAAI,EACXF,EAAc,MAErBE,IAAS,KACFF,EAAc,KAErBE,EAAK,MACL,OAAOA,EAAK,MAAS,YACrBA,EAAK,OACL,OAAOA,EAAK,OAAU,WACfF,EAAc,QAErB,OAAO,IAAQ,KAAeE,aAAgB,IACvCF,EAAc,IAErB,OAAO,IAAQ,KAAeE,aAAgB,IACvCF,EAAc,IAErB,OAAO,KAAS,KAAeE,aAAgB,KACxCF,EAAc,KAElBA,EAAc,OACzB,QACI,OAAOA,EAAc,OAC7B,CACJ,EAEMG,EAAe7B,EAAK,YAAY,CAClC,eACA,kBACA,SACA,gBACA,8BACA,qBACA,oBACA,oBACA,sBACA,eACA,iBACA,YACA,UACA,6BACA,kBACA,YACJ,CAAC,EACK8B,GAAiBvB,GACN,KAAK,UAAUA,EAAK,KAAM,CAAC,EAC5B,QAAQ,cAAe,KAAK,EAEtCwB,GAAN,cAAuB,KAAM,CACzB,YAAYC,EAAQ,CAChB,MAAM,EACN,KAAK,OAAS,CAAC,EACf,KAAK,SAAYC,GAAQ,CACrB,KAAK,OAAS,CAAC,GAAG,KAAK,OAAQA,CAAG,CACtC,EACA,KAAK,UAAY,CAACC,EAAO,CAAC,IAAM,CAC5B,KAAK,OAAS,CAAC,GAAG,KAAK,OAAQ,GAAGA,CAAI,CAC1C,EACA,IAAMC,EAAc,WAAW,UAC3B,OAAO,eAEP,OAAO,eAAe,KAAMA,CAAW,EAGvC,KAAK,UAAYA,EAErB,KAAK,KAAO,WACZ,KAAK,OAASH,CAClB,CACA,IAAI,QAAS,CACT,OAAO,KAAK,MAChB,CACA,OAAOI,EAAS,CACZ,IAAMC,EAASD,GACX,SAAUE,EAAO,CACb,OAAOA,EAAM,OACjB,EACEC,EAAc,CAAE,QAAS,CAAC,CAAE,EAC5BC,EAAgBC,GAAU,CAC5B,QAAWH,KAASG,EAAM,OACtB,GAAIH,EAAM,OAAS,gBACfA,EAAM,YAAY,IAAIE,CAAY,UAE7BF,EAAM,OAAS,sBACpBE,EAAaF,EAAM,eAAe,UAE7BA,EAAM,OAAS,oBACpBE,EAAaF,EAAM,cAAc,UAE5BA,EAAM,KAAK,SAAW,EAC3BC,EAAY,QAAQ,KAAKF,EAAOC,CAAK,CAAC,MAErC,CACD,IAAII,EAAOH,EACPI,EAAI,EACR,KAAOA,EAAIL,EAAM,KAAK,QAAQ,CAC1B,IAAMM,EAAKN,EAAM,KAAKK,CAAC,EACNA,IAAML,EAAM,KAAK,OAAS,GAYvCI,EAAKE,CAAE,EAAIF,EAAKE,CAAE,GAAK,CAAE,QAAS,CAAC,CAAE,EACrCF,EAAKE,CAAE,EAAE,QAAQ,KAAKP,EAAOC,CAAK,CAAC,GAXnCI,EAAKE,CAAE,EAAIF,EAAKE,CAAE,GAAK,CAAE,QAAS,CAAC,CAAE,EAazCF,EAAOA,EAAKE,CAAE,EACdD,KAIhB,EACA,OAAAH,EAAa,IAAI,EACVD,CACX,CACA,UAAW,CACP,OAAO,KAAK,OAChB,CACA,IAAI,SAAU,CACV,OAAO,KAAK,UAAU,KAAK,OAAQvC,EAAK,sBAAuB,CAAC,CACpE,CACA,IAAI,SAAU,CACV,OAAO,KAAK,OAAO,SAAW,CAClC,CACA,QAAQqC,EAAUC,GAAUA,EAAM,QAAS,CACvC,IAAMC,EAAc,CAAC,EACfM,EAAa,CAAC,EACpB,QAAWZ,KAAO,KAAK,OACfA,EAAI,KAAK,OAAS,GAClBM,EAAYN,EAAI,KAAK,CAAC,CAAC,EAAIM,EAAYN,EAAI,KAAK,CAAC,CAAC,GAAK,CAAC,EACxDM,EAAYN,EAAI,KAAK,CAAC,CAAC,EAAE,KAAKI,EAAOJ,CAAG,CAAC,GAGzCY,EAAW,KAAKR,EAAOJ,CAAG,CAAC,EAGnC,MAAO,CAAE,WAAAY,EAAY,YAAAN,CAAY,CACrC,CACA,IAAI,YAAa,CACb,OAAO,KAAK,QAAQ,CACxB,CACJ,EACAR,GAAS,OAAUC,GACD,IAAID,GAASC,CAAM,EAIrC,IAAMc,GAAW,CAACR,EAAOS,IAAS,CAC9B,IAAIC,EACJ,OAAQV,EAAM,KAAM,CAChB,KAAKT,EAAa,aACVS,EAAM,WAAaZ,EAAc,UACjCsB,EAAU,WAGVA,EAAU,YAAYV,EAAM,sBAAsBA,EAAM,WAE5D,MACJ,KAAKT,EAAa,gBACdmB,EAAU,mCAAmC,KAAK,UAAUV,EAAM,SAAUtC,EAAK,qBAAqB,IACtG,MACJ,KAAK6B,EAAa,kBACdmB,EAAU,kCAAkChD,EAAK,WAAWsC,EAAM,KAAM,IAAI,IAC5E,MACJ,KAAKT,EAAa,cACdmB,EAAU,gBACV,MACJ,KAAKnB,EAAa,4BACdmB,EAAU,yCAAyChD,EAAK,WAAWsC,EAAM,OAAO,IAChF,MACJ,KAAKT,EAAa,mBACdmB,EAAU,gCAAgChD,EAAK,WAAWsC,EAAM,OAAO,gBAAgBA,EAAM,YAC7F,MACJ,KAAKT,EAAa,kBACdmB,EAAU,6BACV,MACJ,KAAKnB,EAAa,oBACdmB,EAAU,+BACV,MACJ,KAAKnB,EAAa,aACdmB,EAAU,eACV,MACJ,KAAKnB,EAAa,eACV,OAAOS,EAAM,YAAe,SACxB,aAAcA,EAAM,YACpBU,EAAU,gCAAgCV,EAAM,WAAW,YACvD,OAAOA,EAAM,WAAW,UAAa,WACrCU,EAAU,GAAGA,uDAA6DV,EAAM,WAAW,aAG1F,eAAgBA,EAAM,WAC3BU,EAAU,mCAAmCV,EAAM,WAAW,cAEzD,aAAcA,EAAM,WACzBU,EAAU,iCAAiCV,EAAM,WAAW,YAG5DtC,EAAK,YAAYsC,EAAM,UAAU,EAGhCA,EAAM,aAAe,QAC1BU,EAAU,WAAWV,EAAM,aAG3BU,EAAU,UAEd,MACJ,KAAKnB,EAAa,UACVS,EAAM,OAAS,QACfU,EAAU,sBAAsBV,EAAM,MAAQ,UAAYA,EAAM,UAAY,WAAa,eAAeA,EAAM,qBACzGA,EAAM,OAAS,SACpBU,EAAU,uBAAuBV,EAAM,MAAQ,UAAYA,EAAM,UAAY,WAAa,UAAUA,EAAM,uBACrGA,EAAM,OAAS,SACpBU,EAAU,kBAAkBV,EAAM,MAC5B,oBACAA,EAAM,UACF,4BACA,kBAAkBA,EAAM,UAC7BA,EAAM,OAAS,OACpBU,EAAU,gBAAgBV,EAAM,MAC1B,oBACAA,EAAM,UACF,4BACA,kBAAkB,IAAI,KAAK,OAAOA,EAAM,OAAO,CAAC,IAE1DU,EAAU,gBACd,MACJ,KAAKnB,EAAa,QACVS,EAAM,OAAS,QACfU,EAAU,sBAAsBV,EAAM,MAAQ,UAAYA,EAAM,UAAY,UAAY,eAAeA,EAAM,qBACxGA,EAAM,OAAS,SACpBU,EAAU,uBAAuBV,EAAM,MAAQ,UAAYA,EAAM,UAAY,UAAY,WAAWA,EAAM,uBACrGA,EAAM,OAAS,SACpBU,EAAU,kBAAkBV,EAAM,MAC5B,UACAA,EAAM,UACF,wBACA,eAAeA,EAAM,UAC1BA,EAAM,OAAS,SACpBU,EAAU,kBAAkBV,EAAM,MAC5B,UACAA,EAAM,UACF,wBACA,eAAeA,EAAM,UAC1BA,EAAM,OAAS,OACpBU,EAAU,gBAAgBV,EAAM,MAC1B,UACAA,EAAM,UACF,2BACA,kBAAkB,IAAI,KAAK,OAAOA,EAAM,OAAO,CAAC,IAE1DU,EAAU,gBACd,MACJ,KAAKnB,EAAa,OACdmB,EAAU,gBACV,MACJ,KAAKnB,EAAa,2BACdmB,EAAU,2CACV,MACJ,KAAKnB,EAAa,gBACdmB,EAAU,gCAAgCV,EAAM,aAChD,MACJ,KAAKT,EAAa,WACdmB,EAAU,wBACV,MACJ,QACIA,EAAUD,EAAK,aACf/C,EAAK,YAAYsC,CAAK,CAC9B,CACA,MAAO,CAAE,QAAAU,CAAQ,CACrB,EAEIC,GAAmBH,GACvB,SAASI,GAAYC,EAAK,CACtBF,GAAmBE,CACvB,CACA,SAASC,IAAc,CACnB,OAAOH,EACX,CAEA,IAAMI,GAAaC,GAAW,CAC1B,GAAM,CAAE,KAAA1B,EAAM,KAAA2B,EAAM,UAAAC,EAAW,UAAAC,CAAU,EAAIH,EACvCI,EAAW,CAAC,GAAGH,EAAM,GAAIE,EAAU,MAAQ,CAAC,CAAE,EAC9CE,EAAY,CACd,GAAGF,EACH,KAAMC,CACV,EACIE,EAAe,GACbC,EAAOL,EACR,OAAQM,GAAM,CAAC,CAACA,CAAC,EACjB,MAAM,EACN,QAAQ,EACb,QAAWX,KAAOU,EACdD,EAAeT,EAAIQ,EAAW,CAAE,KAAA/B,EAAM,aAAcgC,CAAa,CAAC,EAAE,QAExE,MAAO,CACH,GAAGH,EACH,KAAMC,EACN,QAASD,EAAU,SAAWG,CAClC,CACJ,EACMG,GAAa,CAAC,EACpB,SAASC,EAAkBC,EAAKR,EAAW,CACvC,IAAMnB,EAAQe,GAAU,CACpB,UAAWI,EACX,KAAMQ,EAAI,KACV,KAAMA,EAAI,KACV,UAAW,CACPA,EAAI,OAAO,mBACXA,EAAI,eACJb,GAAY,EACZN,EACJ,EAAE,OAAQoB,GAAM,CAAC,CAACA,CAAC,CACvB,CAAC,EACDD,EAAI,OAAO,OAAO,KAAK3B,CAAK,CAChC,CACA,IAAM6B,EAAN,KAAkB,CACd,aAAc,CACV,KAAK,MAAQ,OACjB,CACA,OAAQ,CACA,KAAK,QAAU,UACf,KAAK,MAAQ,QACrB,CACA,OAAQ,CACA,KAAK,QAAU,YACf,KAAK,MAAQ,UACrB,CACA,OAAO,WAAWC,EAAQC,EAAS,CAC/B,IAAMC,EAAa,CAAC,EACpB,QAAWC,KAAKF,EAAS,CACrB,GAAIE,EAAE,SAAW,UACb,OAAOC,EACPD,EAAE,SAAW,SACbH,EAAO,MAAM,EACjBE,EAAW,KAAKC,EAAE,KAAK,EAE3B,MAAO,CAAE,OAAQH,EAAO,MAAO,MAAOE,CAAW,CACrD,CACA,aAAa,iBAAiBF,EAAQK,EAAO,CACzC,IAAMC,EAAY,CAAC,EACnB,QAAWC,KAAQF,EACfC,EAAU,KAAK,CACX,IAAK,MAAMC,EAAK,IAChB,MAAO,MAAMA,EAAK,KACtB,CAAC,EAEL,OAAOR,EAAY,gBAAgBC,EAAQM,CAAS,CACxD,CACA,OAAO,gBAAgBN,EAAQK,EAAO,CAClC,IAAMG,EAAc,CAAC,EACrB,QAAWD,KAAQF,EAAO,CACtB,GAAM,CAAE,IAAA1D,EAAK,MAAAO,CAAM,EAAIqD,EAGvB,GAFI5D,EAAI,SAAW,WAEfO,EAAM,SAAW,UACjB,OAAOkD,EACPzD,EAAI,SAAW,SACfqD,EAAO,MAAM,EACb9C,EAAM,SAAW,SACjB8C,EAAO,MAAM,GACb,OAAO9C,EAAM,MAAU,KAAeqD,EAAK,aAC3CC,EAAY7D,EAAI,KAAK,EAAIO,EAAM,OAGvC,MAAO,CAAE,OAAQ8C,EAAO,MAAO,MAAOQ,CAAY,CACtD,CACJ,EACMJ,EAAU,OAAO,OAAO,CAC1B,OAAQ,SACZ,CAAC,EACKK,GAASvD,IAAW,CAAE,OAAQ,QAAS,MAAAA,CAAM,GAC7CwD,GAAMxD,IAAW,CAAE,OAAQ,QAAS,MAAAA,CAAM,GAC1CyD,GAAab,GAAMA,EAAE,SAAW,UAChCc,GAAWd,GAAMA,EAAE,SAAW,QAC9Be,GAAWf,GAAMA,EAAE,SAAW,QAC9BgB,GAAWhB,GAAM,OAAO,QAAY,KAAeA,aAAa,QAElEiB,GACH,SAAUA,EAAW,CAClBA,EAAU,SAAYnC,GAAY,OAAOA,GAAY,SAAW,CAAE,QAAAA,CAAQ,EAAIA,GAAW,CAAC,EAC1FmC,EAAU,SAAYnC,GAAY,OAAOA,GAAY,SAAWA,EAA4DA,GAAQ,OACxI,GAAGmC,IAAcA,EAAY,CAAC,EAAE,EAEhC,IAAMC,GAAN,KAAyB,CACrB,YAAYC,EAAQ/D,EAAOiC,EAAMxC,EAAK,CAClC,KAAK,YAAc,CAAC,EACpB,KAAK,OAASsE,EACd,KAAK,KAAO/D,EACZ,KAAK,MAAQiC,EACb,KAAK,KAAOxC,CAChB,CACA,IAAI,MAAO,CACP,OAAK,KAAK,YAAY,SACd,KAAK,gBAAgB,MACrB,KAAK,YAAY,KAAK,GAAG,KAAK,MAAO,GAAG,KAAK,IAAI,EAGjD,KAAK,YAAY,KAAK,GAAG,KAAK,MAAO,KAAK,IAAI,GAG/C,KAAK,WAChB,CACJ,EACMuE,GAAe,CAACrB,EAAKsB,IAAW,CAClC,GAAIN,GAAQM,CAAM,EACd,MAAO,CAAE,QAAS,GAAM,KAAMA,EAAO,KAAM,EAG3C,GAAI,CAACtB,EAAI,OAAO,OAAO,OACnB,MAAM,IAAI,MAAM,2CAA2C,EAE/D,MAAO,CACH,QAAS,GACT,IAAI,OAAQ,CACR,GAAI,KAAK,OACL,OAAO,KAAK,OAChB,IAAMxB,EAAQ,IAAIV,GAASkC,EAAI,OAAO,MAAM,EAC5C,YAAK,OAASxB,EACP,KAAK,MAChB,CACJ,CAER,EACA,SAAS+C,EAAoBlC,EAAQ,CACjC,GAAI,CAACA,EACD,MAAO,CAAC,EACZ,GAAM,CAAE,SAAAR,EAAU,mBAAA2C,EAAoB,eAAAC,EAAgB,YAAAC,CAAY,EAAIrC,EACtE,GAAIR,IAAa2C,GAAsBC,GACnC,MAAM,IAAI,MAAM,0FAA0F,EAE9G,OAAI5C,EACO,CAAE,SAAUA,EAAU,YAAA6C,CAAY,EAStC,CAAE,SARS,CAACC,EAAK3B,IAChB2B,EAAI,OAAS,eACN,CAAE,QAAS3B,EAAI,YAAa,EACnC,OAAOA,EAAI,KAAS,IACb,CAAE,QAASyB,GAAwEzB,EAAI,YAAa,EAExG,CAAE,QAASwB,GAAoFxB,EAAI,YAAa,EAE7F,YAAA0B,CAAY,CAC9C,CACA,IAAME,EAAN,KAAc,CACV,YAAYC,EAAK,CAEb,KAAK,IAAM,KAAK,eAChB,KAAK,KAAOA,EACZ,KAAK,MAAQ,KAAK,MAAM,KAAK,IAAI,EACjC,KAAK,UAAY,KAAK,UAAU,KAAK,IAAI,EACzC,KAAK,WAAa,KAAK,WAAW,KAAK,IAAI,EAC3C,KAAK,eAAiB,KAAK,eAAe,KAAK,IAAI,EACnD,KAAK,IAAM,KAAK,IAAI,KAAK,IAAI,EAC7B,KAAK,OAAS,KAAK,OAAO,KAAK,IAAI,EACnC,KAAK,WAAa,KAAK,WAAW,KAAK,IAAI,EAC3C,KAAK,YAAc,KAAK,YAAY,KAAK,IAAI,EAC7C,KAAK,SAAW,KAAK,SAAS,KAAK,IAAI,EACvC,KAAK,SAAW,KAAK,SAAS,KAAK,IAAI,EACvC,KAAK,QAAU,KAAK,QAAQ,KAAK,IAAI,EACrC,KAAK,MAAQ,KAAK,MAAM,KAAK,IAAI,EACjC,KAAK,QAAU,KAAK,QAAQ,KAAK,IAAI,EACrC,KAAK,GAAK,KAAK,GAAG,KAAK,IAAI,EAC3B,KAAK,IAAM,KAAK,IAAI,KAAK,IAAI,EAC7B,KAAK,UAAY,KAAK,UAAU,KAAK,IAAI,EACzC,KAAK,MAAQ,KAAK,MAAM,KAAK,IAAI,EACjC,KAAK,QAAU,KAAK,QAAQ,KAAK,IAAI,EACrC,KAAK,MAAQ,KAAK,MAAM,KAAK,IAAI,EACjC,KAAK,SAAW,KAAK,SAAS,KAAK,IAAI,EACvC,KAAK,KAAO,KAAK,KAAK,KAAK,IAAI,EAC/B,KAAK,WAAa,KAAK,WAAW,KAAK,IAAI,EAC3C,KAAK,WAAa,KAAK,WAAW,KAAK,IAAI,CAC/C,CACA,IAAI,aAAc,CACd,OAAO,KAAK,KAAK,WACrB,CACA,SAASC,EAAO,CACZ,OAAOpE,GAAcoE,EAAM,IAAI,CACnC,CACA,gBAAgBA,EAAO9B,EAAK,CACxB,OAAQA,GAAO,CACX,OAAQ8B,EAAM,OAAO,OACrB,KAAMA,EAAM,KACZ,WAAYpE,GAAcoE,EAAM,IAAI,EACpC,eAAgB,KAAK,KAAK,SAC1B,KAAMA,EAAM,KACZ,OAAQA,EAAM,MAClB,CACJ,CACA,oBAAoBA,EAAO,CACvB,MAAO,CACH,OAAQ,IAAI5B,EACZ,IAAK,CACD,OAAQ4B,EAAM,OAAO,OACrB,KAAMA,EAAM,KACZ,WAAYpE,GAAcoE,EAAM,IAAI,EACpC,eAAgB,KAAK,KAAK,SAC1B,KAAMA,EAAM,KACZ,OAAQA,EAAM,MAClB,CACJ,CACJ,CACA,WAAWA,EAAO,CACd,IAAMR,EAAS,KAAK,OAAOQ,CAAK,EAChC,GAAIb,GAAQK,CAAM,EACd,MAAM,IAAI,MAAM,wCAAwC,EAE5D,OAAOA,CACX,CACA,YAAYQ,EAAO,CACf,IAAMR,EAAS,KAAK,OAAOQ,CAAK,EAChC,OAAO,QAAQ,QAAQR,CAAM,CACjC,CACA,MAAM3D,EAAM0B,EAAQ,CAChB,IAAMiC,EAAS,KAAK,UAAU3D,EAAM0B,CAAM,EAC1C,GAAIiC,EAAO,QACP,OAAOA,EAAO,KAClB,MAAMA,EAAO,KACjB,CACA,UAAU3D,EAAM0B,EAAQ,CACpB,IAAI0C,EACJ,IAAM/B,EAAM,CACR,OAAQ,CACJ,OAAQ,CAAC,EACT,OAAQ+B,EAAqD1C,GAAO,SAAW,MAAQ0C,IAAO,OAASA,EAAK,GAC5G,mBAAoE1C,GAAO,QAC/E,EACA,KAAuDA,GAAO,MAAS,CAAC,EACxE,eAAgB,KAAK,KAAK,SAC1B,OAAQ,KACR,KAAA1B,EACA,WAAYD,GAAcC,CAAI,CAClC,EACM2D,EAAS,KAAK,WAAW,CAAE,KAAA3D,EAAM,KAAMqC,EAAI,KAAM,OAAQA,CAAI,CAAC,EACpE,OAAOqB,GAAarB,EAAKsB,CAAM,CACnC,CACA,MAAM,WAAW3D,EAAM0B,EAAQ,CAC3B,IAAMiC,EAAS,MAAM,KAAK,eAAe3D,EAAM0B,CAAM,EACrD,GAAIiC,EAAO,QACP,OAAOA,EAAO,KAClB,MAAMA,EAAO,KACjB,CACA,MAAM,eAAe3D,EAAM0B,EAAQ,CAC/B,IAAMW,EAAM,CACR,OAAQ,CACJ,OAAQ,CAAC,EACT,mBAAoEX,GAAO,SAC3E,MAAO,EACX,EACA,KAAuDA,GAAO,MAAS,CAAC,EACxE,eAAgB,KAAK,KAAK,SAC1B,OAAQ,KACR,KAAA1B,EACA,WAAYD,GAAcC,CAAI,CAClC,EACMqE,EAAmB,KAAK,OAAO,CAAE,KAAArE,EAAM,KAAMqC,EAAI,KAAM,OAAQA,CAAI,CAAC,EACpEsB,EAAS,MAAOL,GAAQe,CAAgB,EACxCA,EACA,QAAQ,QAAQA,CAAgB,GACtC,OAAOX,GAAarB,EAAKsB,CAAM,CACnC,CACA,OAAOW,EAAOlD,EAAS,CACnB,IAAMmD,EAAsBlG,GACpB,OAAO+C,GAAY,UAAY,OAAOA,EAAY,IAC3C,CAAE,QAAAA,CAAQ,EAEZ,OAAOA,GAAY,WACjBA,EAAQ/C,CAAG,EAGX+C,EAGf,OAAO,KAAK,YAAY,CAAC/C,EAAKgE,IAAQ,CAClC,IAAMsB,EAASW,EAAMjG,CAAG,EAClBmG,EAAW,IAAMnC,EAAI,SAAS,CAChC,KAAMpC,EAAa,OACnB,GAAGsE,EAAmBlG,CAAG,CAC7B,CAAC,EACD,OAAI,OAAO,QAAY,KAAesF,aAAkB,QAC7CA,EAAO,KAAM3D,GACXA,EAKM,IAJPwE,EAAS,EACF,GAKd,EAEAb,EAKM,IAJPa,EAAS,EACF,GAKf,CAAC,CACL,CACA,WAAWF,EAAOG,EAAgB,CAC9B,OAAO,KAAK,YAAY,CAACpG,EAAKgE,IACrBiC,EAAMjG,CAAG,EAOH,IANPgE,EAAI,SAAS,OAAOoC,GAAmB,WACjCA,EAAepG,EAAKgE,CAAG,EACvBoC,CAAc,EACb,GAKd,CACL,CACA,YAAYC,EAAY,CACpB,OAAO,IAAIC,GAAW,CAClB,OAAQ,KACR,SAAUC,EAAsB,WAChC,OAAQ,CAAE,KAAM,aAAc,WAAAF,CAAW,CAC7C,CAAC,CACL,CACA,YAAYA,EAAY,CACpB,OAAO,KAAK,YAAYA,CAAU,CACtC,CACA,UAAW,CACP,OAAOG,GAAY,OAAO,KAAM,KAAK,IAAI,CAC7C,CACA,UAAW,CACP,OAAOC,GAAY,OAAO,KAAM,KAAK,IAAI,CAC7C,CACA,SAAU,CACN,OAAO,KAAK,SAAS,EAAE,SAAS,CACpC,CACA,OAAQ,CACJ,OAAOC,GAAS,OAAO,KAAM,KAAK,IAAI,CAC1C,CACA,SAAU,CACN,OAAOC,GAAW,OAAO,KAAM,KAAK,IAAI,CAC5C,CACA,GAAGC,EAAQ,CACP,OAAOC,GAAS,OAAO,CAAC,KAAMD,CAAM,EAAG,KAAK,IAAI,CACpD,CACA,IAAIE,EAAU,CACV,OAAOC,GAAgB,OAAO,KAAMD,EAAU,KAAK,IAAI,CAC3D,CACA,UAAUE,EAAW,CACjB,OAAO,IAAIV,GAAW,CAClB,GAAGf,EAAoB,KAAK,IAAI,EAChC,OAAQ,KACR,SAAUgB,EAAsB,WAChC,OAAQ,CAAE,KAAM,YAAa,UAAAS,CAAU,CAC3C,CAAC,CACL,CACA,QAAQnB,EAAK,CACT,IAAMoB,EAAmB,OAAOpB,GAAQ,WAAaA,EAAM,IAAMA,EACjE,OAAO,IAAIqB,GAAW,CAClB,GAAG3B,EAAoB,KAAK,IAAI,EAChC,UAAW,KACX,aAAc0B,EACd,SAAUV,EAAsB,UACpC,CAAC,CACL,CACA,OAAQ,CACJ,OAAO,IAAIY,GAAW,CAClB,SAAUZ,EAAsB,WAChC,KAAM,KACN,GAAGhB,EAAoB,KAAK,IAAI,CACpC,CAAC,CACL,CACA,MAAMM,EAAK,CACP,IAAMuB,EAAiB,OAAOvB,GAAQ,WAAaA,EAAM,IAAMA,EAC/D,OAAO,IAAIwB,GAAS,CAChB,GAAG9B,EAAoB,KAAK,IAAI,EAChC,UAAW,KACX,WAAY6B,EACZ,SAAUb,EAAsB,QACpC,CAAC,CACL,CACA,SAASb,EAAa,CAClB,IAAM4B,EAAO,KAAK,YAClB,OAAO,IAAIA,EAAK,CACZ,GAAG,KAAK,KACR,YAAA5B,CACJ,CAAC,CACL,CACA,KAAK6B,EAAQ,CACT,OAAOC,GAAY,OAAO,KAAMD,CAAM,CAC1C,CACA,YAAa,CACT,OAAO,KAAK,UAAU,MAAS,EAAE,OACrC,CACA,YAAa,CACT,OAAO,KAAK,UAAU,IAAI,EAAE,OAChC,CACJ,EACME,GAAY,iBACZC,GAAa,mBACbC,GAAY,yBACZC,GAAY,8GAOZC,GAAa,unBAEbC,GAAa,sDACbC,GAAY,gHACZC,GAAY,+XAEZC,GAAiBC,GACfA,EAAK,UACDA,EAAK,OACE,IAAI,OAAO,oDAAoDA,EAAK,wCAAwC,EAG5G,IAAI,OAAO,oDAAoDA,EAAK,cAAc,EAGxFA,EAAK,YAAc,EACpBA,EAAK,OACE,IAAI,OAAO,wEAAwE,EAGnF,IAAI,OAAO,8CAA8C,EAIhEA,EAAK,OACE,IAAI,OAAO,kFAAkF,EAG7F,IAAI,OAAO,wDAAwD,EAItF,SAASC,GAAUC,EAAIC,EAAS,CAI5B,MAHK,IAAAA,IAAY,MAAQ,CAACA,IAAYN,GAAU,KAAKK,CAAE,IAGlDC,IAAY,MAAQ,CAACA,IAAYL,GAAU,KAAKI,CAAE,EAI3D,CACA,IAAME,GAAN,cAAwB1C,CAAQ,CAC5B,aAAc,CACV,MAAM,GAAG,SAAS,EAClB,KAAK,OAAS,CAAC2C,EAAOC,EAAYzF,IAAY,KAAK,WAAYpB,GAAS4G,EAAM,KAAK5G,CAAI,EAAG,CACtF,WAAA6G,EACA,KAAM5G,EAAa,eACnB,GAAGsD,EAAU,SAASnC,CAAO,CACjC,CAAC,EAKD,KAAK,SAAYA,GAAY,KAAK,IAAI,EAAGmC,EAAU,SAASnC,CAAO,CAAC,EACpE,KAAK,KAAO,IAAM,IAAIuF,GAAU,CAC5B,GAAG,KAAK,KACR,OAAQ,CAAC,GAAG,KAAK,KAAK,OAAQ,CAAE,KAAM,MAAO,CAAC,CAClD,CAAC,EACD,KAAK,YAAc,IAAM,IAAIA,GAAU,CACnC,GAAG,KAAK,KACR,OAAQ,CAAC,GAAG,KAAK,KAAK,OAAQ,CAAE,KAAM,aAAc,CAAC,CACzD,CAAC,EACD,KAAK,YAAc,IAAM,IAAIA,GAAU,CACnC,GAAG,KAAK,KACR,OAAQ,CAAC,GAAG,KAAK,KAAK,OAAQ,CAAE,KAAM,aAAc,CAAC,CACzD,CAAC,CACL,CACA,OAAOxC,EAAO,CAKV,GAJI,KAAK,KAAK,SACVA,EAAM,KAAO,OAAOA,EAAM,IAAI,GAEf,KAAK,SAASA,CAAK,IACnBrE,EAAc,OAAQ,CACrC,IAAMuC,EAAM,KAAK,gBAAgB8B,CAAK,EACtC,OAAA/B,EAAkBC,EAAK,CACnB,KAAMpC,EAAa,aACnB,SAAUH,EAAc,OACxB,SAAUuC,EAAI,UAClB,CAEA,EACOO,EAEX,IAAMJ,EAAS,IAAID,EACfF,EACJ,QAAWiC,KAAS,KAAK,KAAK,OAC1B,GAAIA,EAAM,OAAS,MACXH,EAAM,KAAK,OAASG,EAAM,QAC1BjC,EAAM,KAAK,gBAAgB8B,EAAO9B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,KAAMpC,EAAa,UACnB,QAASqE,EAAM,MACf,KAAM,SACN,UAAW,GACX,MAAO,GACP,QAASA,EAAM,OACnB,CAAC,EACD9B,EAAO,MAAM,WAGZ8B,EAAM,OAAS,MAChBH,EAAM,KAAK,OAASG,EAAM,QAC1BjC,EAAM,KAAK,gBAAgB8B,EAAO9B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,KAAMpC,EAAa,QACnB,QAASqE,EAAM,MACf,KAAM,SACN,UAAW,GACX,MAAO,GACP,QAASA,EAAM,OACnB,CAAC,EACD9B,EAAO,MAAM,WAGZ8B,EAAM,OAAS,SAAU,CAC9B,IAAMwC,EAAS3C,EAAM,KAAK,OAASG,EAAM,MACnCyC,EAAW5C,EAAM,KAAK,OAASG,EAAM,OACvCwC,GAAUC,KACV1E,EAAM,KAAK,gBAAgB8B,EAAO9B,CAAG,EACjCyE,EACA1E,EAAkBC,EAAK,CACnB,KAAMpC,EAAa,QACnB,QAASqE,EAAM,MACf,KAAM,SACN,UAAW,GACX,MAAO,GACP,QAASA,EAAM,OACnB,CAAC,EAEIyC,GACL3E,EAAkBC,EAAK,CACnB,KAAMpC,EAAa,UACnB,QAASqE,EAAM,MACf,KAAM,SACN,UAAW,GACX,MAAO,GACP,QAASA,EAAM,OACnB,CAAC,EAEL9B,EAAO,MAAM,WAGZ8B,EAAM,OAAS,QACf4B,GAAW,KAAK/B,EAAM,IAAI,IAC3B9B,EAAM,KAAK,gBAAgB8B,EAAO9B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,WAAY,QACZ,KAAMpC,EAAa,eACnB,QAASqE,EAAM,OACnB,CAAC,EACD9B,EAAO,MAAM,WAGZ8B,EAAM,OAAS,QACf6B,GAAW,KAAKhC,EAAM,IAAI,IAC3B9B,EAAM,KAAK,gBAAgB8B,EAAO9B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,WAAY,QACZ,KAAMpC,EAAa,eACnB,QAASqE,EAAM,OACnB,CAAC,EACD9B,EAAO,MAAM,WAGZ8B,EAAM,OAAS,OACf2B,GAAU,KAAK9B,EAAM,IAAI,IAC1B9B,EAAM,KAAK,gBAAgB8B,EAAO9B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,WAAY,OACZ,KAAMpC,EAAa,eACnB,QAASqE,EAAM,OACnB,CAAC,EACD9B,EAAO,MAAM,WAGZ8B,EAAM,OAAS,OACfwB,GAAU,KAAK3B,EAAM,IAAI,IAC1B9B,EAAM,KAAK,gBAAgB8B,EAAO9B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,WAAY,OACZ,KAAMpC,EAAa,eACnB,QAASqE,EAAM,OACnB,CAAC,EACD9B,EAAO,MAAM,WAGZ8B,EAAM,OAAS,QACfyB,GAAW,KAAK5B,EAAM,IAAI,IAC3B9B,EAAM,KAAK,gBAAgB8B,EAAO9B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,WAAY,QACZ,KAAMpC,EAAa,eACnB,QAASqE,EAAM,OACnB,CAAC,EACD9B,EAAO,MAAM,WAGZ8B,EAAM,OAAS,OACf0B,GAAU,KAAK7B,EAAM,IAAI,IAC1B9B,EAAM,KAAK,gBAAgB8B,EAAO9B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,WAAY,OACZ,KAAMpC,EAAa,eACnB,QAASqE,EAAM,OACnB,CAAC,EACD9B,EAAO,MAAM,WAGZ8B,EAAM,OAAS,MACpB,GAAI,CACA,IAAI,IAAIH,EAAM,IAAI,CACtB,MACA,CACI9B,EAAM,KAAK,gBAAgB8B,EAAO9B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,WAAY,MACZ,KAAMpC,EAAa,eACnB,QAASqE,EAAM,OACnB,CAAC,EACD9B,EAAO,MAAM,CACjB,MAEK8B,EAAM,OAAS,SACpBA,EAAM,MAAM,UAAY,EACLA,EAAM,MAAM,KAAKH,EAAM,IAAI,IAE1C9B,EAAM,KAAK,gBAAgB8B,EAAO9B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,WAAY,QACZ,KAAMpC,EAAa,eACnB,QAASqE,EAAM,OACnB,CAAC,EACD9B,EAAO,MAAM,IAGZ8B,EAAM,OAAS,OACpBH,EAAM,KAAOA,EAAM,KAAK,KAAK,EAExBG,EAAM,OAAS,WACfH,EAAM,KAAK,SAASG,EAAM,MAAOA,EAAM,QAAQ,IAChDjC,EAAM,KAAK,gBAAgB8B,EAAO9B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,KAAMpC,EAAa,eACnB,WAAY,CAAE,SAAUqE,EAAM,MAAO,SAAUA,EAAM,QAAS,EAC9D,QAASA,EAAM,OACnB,CAAC,EACD9B,EAAO,MAAM,GAGZ8B,EAAM,OAAS,cACpBH,EAAM,KAAOA,EAAM,KAAK,YAAY,EAE/BG,EAAM,OAAS,cACpBH,EAAM,KAAOA,EAAM,KAAK,YAAY,EAE/BG,EAAM,OAAS,aACfH,EAAM,KAAK,WAAWG,EAAM,KAAK,IAClCjC,EAAM,KAAK,gBAAgB8B,EAAO9B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,KAAMpC,EAAa,eACnB,WAAY,CAAE,WAAYqE,EAAM,KAAM,EACtC,QAASA,EAAM,OACnB,CAAC,EACD9B,EAAO,MAAM,GAGZ8B,EAAM,OAAS,WACfH,EAAM,KAAK,SAASG,EAAM,KAAK,IAChCjC,EAAM,KAAK,gBAAgB8B,EAAO9B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,KAAMpC,EAAa,eACnB,WAAY,CAAE,SAAUqE,EAAM,KAAM,EACpC,QAASA,EAAM,OACnB,CAAC,EACD9B,EAAO,MAAM,GAGZ8B,EAAM,OAAS,WACNgC,GAAchC,CAAK,EACtB,KAAKH,EAAM,IAAI,IACtB9B,EAAM,KAAK,gBAAgB8B,EAAO9B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,KAAMpC,EAAa,eACnB,WAAY,WACZ,QAASqE,EAAM,OACnB,CAAC,EACD9B,EAAO,MAAM,GAGZ8B,EAAM,OAAS,KACfkC,GAAUrC,EAAM,KAAMG,EAAM,OAAO,IACpCjC,EAAM,KAAK,gBAAgB8B,EAAO9B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,WAAY,KACZ,KAAMpC,EAAa,eACnB,QAASqE,EAAM,OACnB,CAAC,EACD9B,EAAO,MAAM,GAIjBpE,EAAK,YAAYkG,CAAK,EAG9B,MAAO,CAAE,OAAQ9B,EAAO,MAAO,MAAO2B,EAAM,IAAK,CACrD,CACA,UAAUG,EAAO,CACb,OAAO,IAAIqC,GAAU,CACjB,GAAG,KAAK,KACR,OAAQ,CAAC,GAAG,KAAK,KAAK,OAAQrC,CAAK,CACvC,CAAC,CACL,CACA,MAAMlD,EAAS,CACX,OAAO,KAAK,UAAU,CAAE,KAAM,QAAS,GAAGmC,EAAU,SAASnC,CAAO,CAAE,CAAC,CAC3E,CACA,IAAIA,EAAS,CACT,OAAO,KAAK,UAAU,CAAE,KAAM,MAAO,GAAGmC,EAAU,SAASnC,CAAO,CAAE,CAAC,CACzE,CACA,MAAMA,EAAS,CACX,OAAO,KAAK,UAAU,CAAE,KAAM,QAAS,GAAGmC,EAAU,SAASnC,CAAO,CAAE,CAAC,CAC3E,CACA,KAAKA,EAAS,CACV,OAAO,KAAK,UAAU,CAAE,KAAM,OAAQ,GAAGmC,EAAU,SAASnC,CAAO,CAAE,CAAC,CAC1E,CACA,KAAKA,EAAS,CACV,OAAO,KAAK,UAAU,CAAE,KAAM,OAAQ,GAAGmC,EAAU,SAASnC,CAAO,CAAE,CAAC,CAC1E,CACA,MAAMA,EAAS,CACX,OAAO,KAAK,UAAU,CAAE,KAAM,QAAS,GAAGmC,EAAU,SAASnC,CAAO,CAAE,CAAC,CAC3E,CACA,KAAKA,EAAS,CACV,OAAO,KAAK,UAAU,CAAE,KAAM,OAAQ,GAAGmC,EAAU,SAASnC,CAAO,CAAE,CAAC,CAC1E,CACA,GAAG4F,EAAS,CACR,OAAO,KAAK,UAAU,CAAE,KAAM,KAAM,GAAGzD,EAAU,SAASyD,CAAO,CAAE,CAAC,CACxE,CACA,SAASA,EAAS,CACd,IAAI5C,EACJ,OAAI,OAAO4C,GAAY,SACZ,KAAK,UAAU,CAClB,KAAM,WACN,UAAW,KACX,OAAQ,GACR,QAASA,CACb,CAAC,EAEE,KAAK,UAAU,CAClB,KAAM,WACN,UAAW,OAA0DA,GAAQ,UAAe,IAAc,KAAyDA,GAAQ,UAC3K,QAAS5C,EAAuD4C,GAAQ,UAAY,MAAQ5C,IAAO,OAASA,EAAK,GACjH,GAAGb,EAAU,SAA2DyD,GAAQ,OAAO,CAC3F,CAAC,CACL,CACA,MAAMJ,EAAOxF,EAAS,CAClB,OAAO,KAAK,UAAU,CAClB,KAAM,QACN,MAAOwF,EACP,GAAGrD,EAAU,SAASnC,CAAO,CACjC,CAAC,CACL,CACA,SAAS1B,EAAOsH,EAAS,CACrB,OAAO,KAAK,UAAU,CAClB,KAAM,WACN,MAAOtH,EACP,SAA4DsH,GAAQ,SACpE,GAAGzD,EAAU,SAA2DyD,GAAQ,OAAO,CAC3F,CAAC,CACL,CACA,WAAWtH,EAAO0B,EAAS,CACvB,OAAO,KAAK,UAAU,CAClB,KAAM,aACN,MAAO1B,EACP,GAAG6D,EAAU,SAASnC,CAAO,CACjC,CAAC,CACL,CACA,SAAS1B,EAAO0B,EAAS,CACrB,OAAO,KAAK,UAAU,CAClB,KAAM,WACN,MAAO1B,EACP,GAAG6D,EAAU,SAASnC,CAAO,CACjC,CAAC,CACL,CACA,IAAI6F,EAAW7F,EAAS,CACpB,OAAO,KAAK,UAAU,CAClB,KAAM,MACN,MAAO6F,EACP,GAAG1D,EAAU,SAASnC,CAAO,CACjC,CAAC,CACL,CACA,IAAI8F,EAAW9F,EAAS,CACpB,OAAO,KAAK,UAAU,CAClB,KAAM,MACN,MAAO8F,EACP,GAAG3D,EAAU,SAASnC,CAAO,CACjC,CAAC,CACL,CACA,OAAO+F,EAAK/F,EAAS,CACjB,OAAO,KAAK,UAAU,CAClB,KAAM,SACN,MAAO+F,EACP,GAAG5D,EAAU,SAASnC,CAAO,CACjC,CAAC,CACL,CACA,IAAI,YAAa,CACb,MAAO,CAAC,CAAC,KAAK,KAAK,OAAO,KAAMgG,GAAOA,EAAG,OAAS,UAAU,CACjE,CACA,IAAI,SAAU,CACV,MAAO,CAAC,CAAC,KAAK,KAAK,OAAO,KAAMA,GAAOA,EAAG,OAAS,OAAO,CAC9D,CACA,IAAI,OAAQ,CACR,MAAO,CAAC,CAAC,KAAK,KAAK,OAAO,KAAMA,GAAOA,EAAG,OAAS,KAAK,CAC5D,CACA,IAAI,SAAU,CACV,MAAO,CAAC,CAAC,KAAK,KAAK,OAAO,KAAMA,GAAOA,EAAG,OAAS,OAAO,CAC9D,CACA,IAAI,QAAS,CACT,MAAO,CAAC,CAAC,KAAK,KAAK,OAAO,KAAMA,GAAOA,EAAG,OAAS,MAAM,CAC7D,CACA,IAAI,QAAS,CACT,MAAO,CAAC,CAAC,KAAK,KAAK,OAAO,KAAMA,GAAOA,EAAG,OAAS,MAAM,CAC7D,CACA,IAAI,SAAU,CACV,MAAO,CAAC,CAAC,KAAK,KAAK,OAAO,KAAMA,GAAOA,EAAG,OAAS,OAAO,CAC9D,CACA,IAAI,QAAS,CACT,MAAO,CAAC,CAAC,KAAK,KAAK,OAAO,KAAMA,GAAOA,EAAG,OAAS,MAAM,CAC7D,CACA,IAAI,MAAO,CACP,MAAO,CAAC,CAAC,KAAK,KAAK,OAAO,KAAMA,GAAOA,EAAG,OAAS,IAAI,CAC3D,CACA,IAAI,WAAY,CACZ,IAAIC,EAAM,KACV,QAAWD,KAAM,KAAK,KAAK,OACnBA,EAAG,OAAS,QACRC,IAAQ,MAAQD,EAAG,MAAQC,KAC3BA,EAAMD,EAAG,OAGrB,OAAOC,CACX,CACA,IAAI,WAAY,CACZ,IAAIC,EAAM,KACV,QAAWF,KAAM,KAAK,KAAK,OACnBA,EAAG,OAAS,QACRE,IAAQ,MAAQF,EAAG,MAAQE,KAC3BA,EAAMF,EAAG,OAGrB,OAAOE,CACX,CACJ,EACAX,GAAU,OAAUjF,GAAW,CAC3B,IAAI0C,EACJ,OAAO,IAAIuC,GAAU,CACjB,OAAQ,CAAC,EACT,SAAU/B,EAAsB,UAChC,QAASR,EAAqD1C,GAAO,UAAY,MAAQ0C,IAAO,OAASA,EAAK,GAC9G,GAAGR,EAAoBlC,CAAM,CACjC,CAAC,CACL,EAEA,SAAS6F,GAAmBlJ,EAAKmJ,EAAM,CACnC,IAAMC,GAAepJ,EAAI,SAAS,EAAE,MAAM,GAAG,EAAE,CAAC,GAAK,IAAI,OACnDqJ,GAAgBF,EAAK,SAAS,EAAE,MAAM,GAAG,EAAE,CAAC,GAAK,IAAI,OACrDG,EAAWF,EAAcC,EAAeD,EAAcC,EACtDE,EAAS,SAASvJ,EAAI,QAAQsJ,CAAQ,EAAE,QAAQ,IAAK,EAAE,CAAC,EACxDE,EAAU,SAASL,EAAK,QAAQG,CAAQ,EAAE,QAAQ,IAAK,EAAE,CAAC,EAChE,OAAQC,EAASC,EAAW,KAAK,IAAI,GAAIF,CAAQ,CACrD,CACA,IAAMG,GAAN,cAAwB7D,CAAQ,CAC5B,aAAc,CACV,MAAM,GAAG,SAAS,EAClB,KAAK,IAAM,KAAK,IAChB,KAAK,IAAM,KAAK,IAChB,KAAK,KAAO,KAAK,UACrB,CACA,OAAOE,EAAO,CAKV,GAJI,KAAK,KAAK,SACVA,EAAM,KAAO,OAAOA,EAAM,IAAI,GAEf,KAAK,SAASA,CAAK,IACnBrE,EAAc,OAAQ,CACrC,IAAMuC,EAAM,KAAK,gBAAgB8B,CAAK,EACtC,OAAA/B,EAAkBC,EAAK,CACnB,KAAMpC,EAAa,aACnB,SAAUH,EAAc,OACxB,SAAUuC,EAAI,UAClB,CAAC,EACMO,EAEX,IAAIP,EACEG,EAAS,IAAID,EACnB,QAAW+B,KAAS,KAAK,KAAK,OACtBA,EAAM,OAAS,MACVlG,EAAK,UAAU+F,EAAM,IAAI,IAC1B9B,EAAM,KAAK,gBAAgB8B,EAAO9B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,KAAMpC,EAAa,aACnB,SAAU,UACV,SAAU,QACV,QAASqE,EAAM,OACnB,CAAC,EACD9B,EAAO,MAAM,GAGZ8B,EAAM,OAAS,OACHA,EAAM,UACjBH,EAAM,KAAOG,EAAM,MACnBH,EAAM,MAAQG,EAAM,SAEtBjC,EAAM,KAAK,gBAAgB8B,EAAO9B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,KAAMpC,EAAa,UACnB,QAASqE,EAAM,MACf,KAAM,SACN,UAAWA,EAAM,UACjB,MAAO,GACP,QAASA,EAAM,OACnB,CAAC,EACD9B,EAAO,MAAM,GAGZ8B,EAAM,OAAS,OACLA,EAAM,UACfH,EAAM,KAAOG,EAAM,MACnBH,EAAM,MAAQG,EAAM,SAEtBjC,EAAM,KAAK,gBAAgB8B,EAAO9B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,KAAMpC,EAAa,QACnB,QAASqE,EAAM,MACf,KAAM,SACN,UAAWA,EAAM,UACjB,MAAO,GACP,QAASA,EAAM,OACnB,CAAC,EACD9B,EAAO,MAAM,GAGZ8B,EAAM,OAAS,aAChBiD,GAAmBpD,EAAM,KAAMG,EAAM,KAAK,IAAM,IAChDjC,EAAM,KAAK,gBAAgB8B,EAAO9B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,KAAMpC,EAAa,gBACnB,WAAYqE,EAAM,MAClB,QAASA,EAAM,OACnB,CAAC,EACD9B,EAAO,MAAM,GAGZ8B,EAAM,OAAS,SACf,OAAO,SAASH,EAAM,IAAI,IAC3B9B,EAAM,KAAK,gBAAgB8B,EAAO9B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,KAAMpC,EAAa,WACnB,QAASqE,EAAM,OACnB,CAAC,EACD9B,EAAO,MAAM,GAIjBpE,EAAK,YAAYkG,CAAK,EAG9B,MAAO,CAAE,OAAQ9B,EAAO,MAAO,MAAO2B,EAAM,IAAK,CACrD,CACA,IAAIzE,EAAO0B,EAAS,CAChB,OAAO,KAAK,SAAS,MAAO1B,EAAO,GAAM6D,EAAU,SAASnC,CAAO,CAAC,CACxE,CACA,GAAG1B,EAAO0B,EAAS,CACf,OAAO,KAAK,SAAS,MAAO1B,EAAO,GAAO6D,EAAU,SAASnC,CAAO,CAAC,CACzE,CACA,IAAI1B,EAAO0B,EAAS,CAChB,OAAO,KAAK,SAAS,MAAO1B,EAAO,GAAM6D,EAAU,SAASnC,CAAO,CAAC,CACxE,CACA,GAAG1B,EAAO0B,EAAS,CACf,OAAO,KAAK,SAAS,MAAO1B,EAAO,GAAO6D,EAAU,SAASnC,CAAO,CAAC,CACzE,CACA,SAAS2G,EAAMrI,EAAOsI,EAAW5G,EAAS,CACtC,OAAO,IAAI0G,GAAU,CACjB,GAAG,KAAK,KACR,OAAQ,CACJ,GAAG,KAAK,KAAK,OACb,CACI,KAAAC,EACA,MAAArI,EACA,UAAAsI,EACA,QAASzE,EAAU,SAASnC,CAAO,CACvC,CACJ,CACJ,CAAC,CACL,CACA,UAAUkD,EAAO,CACb,OAAO,IAAIwD,GAAU,CACjB,GAAG,KAAK,KACR,OAAQ,CAAC,GAAG,KAAK,KAAK,OAAQxD,CAAK,CACvC,CAAC,CACL,CACA,IAAIlD,EAAS,CACT,OAAO,KAAK,UAAU,CAClB,KAAM,MACN,QAASmC,EAAU,SAASnC,CAAO,CACvC,CAAC,CACL,CACA,SAASA,EAAS,CACd,OAAO,KAAK,UAAU,CAClB,KAAM,MACN,MAAO,EACP,UAAW,GACX,QAASmC,EAAU,SAASnC,CAAO,CACvC,CAAC,CACL,CACA,SAASA,EAAS,CACd,OAAO,KAAK,UAAU,CAClB,KAAM,MACN,MAAO,EACP,UAAW,GACX,QAASmC,EAAU,SAASnC,CAAO,CACvC,CAAC,CACL,CACA,YAAYA,EAAS,CACjB,OAAO,KAAK,UAAU,CAClB,KAAM,MACN,MAAO,EACP,UAAW,GACX,QAASmC,EAAU,SAASnC,CAAO,CACvC,CAAC,CACL,CACA,YAAYA,EAAS,CACjB,OAAO,KAAK,UAAU,CAClB,KAAM,MACN,MAAO,EACP,UAAW,GACX,QAASmC,EAAU,SAASnC,CAAO,CACvC,CAAC,CACL,CACA,WAAW1B,EAAO0B,EAAS,CACvB,OAAO,KAAK,UAAU,CAClB,KAAM,aACN,MAAO1B,EACP,QAAS6D,EAAU,SAASnC,CAAO,CACvC,CAAC,CACL,CACA,OAAOA,EAAS,CACZ,OAAO,KAAK,UAAU,CAClB,KAAM,SACN,QAASmC,EAAU,SAASnC,CAAO,CACvC,CAAC,CACL,CACA,KAAKA,EAAS,CACV,OAAO,KAAK,UAAU,CAClB,KAAM,MACN,UAAW,GACX,MAAO,OAAO,iBACd,QAASmC,EAAU,SAASnC,CAAO,CACvC,CAAC,EAAE,UAAU,CACT,KAAM,MACN,UAAW,GACX,MAAO,OAAO,iBACd,QAASmC,EAAU,SAASnC,CAAO,CACvC,CAAC,CACL,CACA,IAAI,UAAW,CACX,IAAIiG,EAAM,KACV,QAAWD,KAAM,KAAK,KAAK,OACnBA,EAAG,OAAS,QACRC,IAAQ,MAAQD,EAAG,MAAQC,KAC3BA,EAAMD,EAAG,OAGrB,OAAOC,CACX,CACA,IAAI,UAAW,CACX,IAAIC,EAAM,KACV,QAAWF,KAAM,KAAK,KAAK,OACnBA,EAAG,OAAS,QACRE,IAAQ,MAAQF,EAAG,MAAQE,KAC3BA,EAAMF,EAAG,OAGrB,OAAOE,CACX,CACA,IAAI,OAAQ,CACR,MAAO,CAAC,CAAC,KAAK,KAAK,OAAO,KAAMF,GAAOA,EAAG,OAAS,OAC9CA,EAAG,OAAS,cAAgBhJ,EAAK,UAAUgJ,EAAG,KAAK,CAAE,CAC9D,CACA,IAAI,UAAW,CACX,IAAIE,EAAM,KAAMD,EAAM,KACtB,QAAWD,KAAM,KAAK,KAAK,OAAQ,CAC/B,GAAIA,EAAG,OAAS,UACZA,EAAG,OAAS,OACZA,EAAG,OAAS,aACZ,MAAO,GAEFA,EAAG,OAAS,OACbC,IAAQ,MAAQD,EAAG,MAAQC,KAC3BA,EAAMD,EAAG,OAERA,EAAG,OAAS,QACbE,IAAQ,MAAQF,EAAG,MAAQE,KAC3BA,EAAMF,EAAG,OAGrB,OAAO,OAAO,SAASC,CAAG,GAAK,OAAO,SAASC,CAAG,CACtD,CACJ,EACAQ,GAAU,OAAUpG,GACT,IAAIoG,GAAU,CACjB,OAAQ,CAAC,EACT,SAAUlD,EAAsB,UAChC,OAAyDlD,GAAO,QAAW,GAC3E,GAAGkC,EAAoBlC,CAAM,CACjC,CAAC,EAEL,IAAMuG,GAAN,cAAwBhE,CAAQ,CAC5B,aAAc,CACV,MAAM,GAAG,SAAS,EAClB,KAAK,IAAM,KAAK,IAChB,KAAK,IAAM,KAAK,GACpB,CACA,OAAOE,EAAO,CAKV,GAJI,KAAK,KAAK,SACVA,EAAM,KAAO,OAAOA,EAAM,IAAI,GAEf,KAAK,SAASA,CAAK,IACnBrE,EAAc,OAAQ,CACrC,IAAMuC,EAAM,KAAK,gBAAgB8B,CAAK,EACtC,OAAA/B,EAAkBC,EAAK,CACnB,KAAMpC,EAAa,aACnB,SAAUH,EAAc,OACxB,SAAUuC,EAAI,UAClB,CAAC,EACMO,EAEX,IAAIP,EACEG,EAAS,IAAID,EACnB,QAAW+B,KAAS,KAAK,KAAK,OACtBA,EAAM,OAAS,OACEA,EAAM,UACjBH,EAAM,KAAOG,EAAM,MACnBH,EAAM,MAAQG,EAAM,SAEtBjC,EAAM,KAAK,gBAAgB8B,EAAO9B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,KAAMpC,EAAa,UACnB,KAAM,SACN,QAASqE,EAAM,MACf,UAAWA,EAAM,UACjB,QAASA,EAAM,OACnB,CAAC,EACD9B,EAAO,MAAM,GAGZ8B,EAAM,OAAS,OACLA,EAAM,UACfH,EAAM,KAAOG,EAAM,MACnBH,EAAM,MAAQG,EAAM,SAEtBjC,EAAM,KAAK,gBAAgB8B,EAAO9B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,KAAMpC,EAAa,QACnB,KAAM,SACN,QAASqE,EAAM,MACf,UAAWA,EAAM,UACjB,QAASA,EAAM,OACnB,CAAC,EACD9B,EAAO,MAAM,GAGZ8B,EAAM,OAAS,aAChBH,EAAM,KAAOG,EAAM,QAAU,OAAO,CAAC,IACrCjC,EAAM,KAAK,gBAAgB8B,EAAO9B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,KAAMpC,EAAa,gBACnB,WAAYqE,EAAM,MAClB,QAASA,EAAM,OACnB,CAAC,EACD9B,EAAO,MAAM,GAIjBpE,EAAK,YAAYkG,CAAK,EAG9B,MAAO,CAAE,OAAQ9B,EAAO,MAAO,MAAO2B,EAAM,IAAK,CACrD,CACA,IAAIzE,EAAO0B,EAAS,CAChB,OAAO,KAAK,SAAS,MAAO1B,EAAO,GAAM6D,EAAU,SAASnC,CAAO,CAAC,CACxE,CACA,GAAG1B,EAAO0B,EAAS,CACf,OAAO,KAAK,SAAS,MAAO1B,EAAO,GAAO6D,EAAU,SAASnC,CAAO,CAAC,CACzE,CACA,IAAI1B,EAAO0B,EAAS,CAChB,OAAO,KAAK,SAAS,MAAO1B,EAAO,GAAM6D,EAAU,SAASnC,CAAO,CAAC,CACxE,CACA,GAAG1B,EAAO0B,EAAS,CACf,OAAO,KAAK,SAAS,MAAO1B,EAAO,GAAO6D,EAAU,SAASnC,CAAO,CAAC,CACzE,CACA,SAAS2G,EAAMrI,EAAOsI,EAAW5G,EAAS,CACtC,OAAO,IAAI6G,GAAU,CACjB,GAAG,KAAK,KACR,OAAQ,CACJ,GAAG,KAAK,KAAK,OACb,CACI,KAAAF,EACA,MAAArI,EACA,UAAAsI,EACA,QAASzE,EAAU,SAASnC,CAAO,CACvC,CACJ,CACJ,CAAC,CACL,CACA,UAAUkD,EAAO,CACb,OAAO,IAAI2D,GAAU,CACjB,GAAG,KAAK,KACR,OAAQ,CAAC,GAAG,KAAK,KAAK,OAAQ3D,CAAK,CACvC,CAAC,CACL,CACA,SAASlD,EAAS,CACd,OAAO,KAAK,UAAU,CAClB,KAAM,MACN,MAAO,OAAO,CAAC,EACf,UAAW,GACX,QAASmC,EAAU,SAASnC,CAAO,CACvC,CAAC,CACL,CACA,SAASA,EAAS,CACd,OAAO,KAAK,UAAU,CAClB,KAAM,MACN,MAAO,OAAO,CAAC,EACf,UAAW,GACX,QAASmC,EAAU,SAASnC,CAAO,CACvC,CAAC,CACL,CACA,YAAYA,EAAS,CACjB,OAAO,KAAK,UAAU,CAClB,KAAM,MACN,MAAO,OAAO,CAAC,EACf,UAAW,GACX,QAASmC,EAAU,SAASnC,CAAO,CACvC,CAAC,CACL,CACA,YAAYA,EAAS,CACjB,OAAO,KAAK,UAAU,CAClB,KAAM,MACN,MAAO,OAAO,CAAC,EACf,UAAW,GACX,QAASmC,EAAU,SAASnC,CAAO,CACvC,CAAC,CACL,CACA,WAAW1B,EAAO0B,EAAS,CACvB,OAAO,KAAK,UAAU,CAClB,KAAM,aACN,MAAA1B,EACA,QAAS6D,EAAU,SAASnC,CAAO,CACvC,CAAC,CACL,CACA,IAAI,UAAW,CACX,IAAIiG,EAAM,KACV,QAAWD,KAAM,KAAK,KAAK,OACnBA,EAAG,OAAS,QACRC,IAAQ,MAAQD,EAAG,MAAQC,KAC3BA,EAAMD,EAAG,OAGrB,OAAOC,CACX,CACA,IAAI,UAAW,CACX,IAAIC,EAAM,KACV,QAAWF,KAAM,KAAK,KAAK,OACnBA,EAAG,OAAS,QACRE,IAAQ,MAAQF,EAAG,MAAQE,KAC3BA,EAAMF,EAAG,OAGrB,OAAOE,CACX,CACJ,EACAW,GAAU,OAAUvG,GAAW,CAC3B,IAAI0C,EACJ,OAAO,IAAI6D,GAAU,CACjB,OAAQ,CAAC,EACT,SAAUrD,EAAsB,UAChC,QAASR,EAAqD1C,GAAO,UAAY,MAAQ0C,IAAO,OAASA,EAAK,GAC9G,GAAGR,EAAoBlC,CAAM,CACjC,CAAC,CACL,EACA,IAAMwG,GAAN,cAAyBjE,CAAQ,CAC7B,OAAOE,EAAO,CAKV,GAJI,KAAK,KAAK,SACVA,EAAM,KAAO,EAAQA,EAAM,MAEZ,KAAK,SAASA,CAAK,IACnBrE,EAAc,QAAS,CACtC,IAAMuC,EAAM,KAAK,gBAAgB8B,CAAK,EACtC,OAAA/B,EAAkBC,EAAK,CACnB,KAAMpC,EAAa,aACnB,SAAUH,EAAc,QACxB,SAAUuC,EAAI,UAClB,CAAC,EACMO,EAEX,OAAOM,GAAGiB,EAAM,IAAI,CACxB,CACJ,EACA+D,GAAW,OAAUxG,GACV,IAAIwG,GAAW,CAClB,SAAUtD,EAAsB,WAChC,OAAyDlD,GAAO,QAAW,GAC3E,GAAGkC,EAAoBlC,CAAM,CACjC,CAAC,EAEL,IAAMyG,GAAN,cAAsBlE,CAAQ,CAC1B,OAAOE,EAAO,CAKV,GAJI,KAAK,KAAK,SACVA,EAAM,KAAO,IAAI,KAAKA,EAAM,IAAI,GAEjB,KAAK,SAASA,CAAK,IACnBrE,EAAc,KAAM,CACnC,IAAMuC,EAAM,KAAK,gBAAgB8B,CAAK,EACtC,OAAA/B,EAAkBC,EAAK,CACnB,KAAMpC,EAAa,aACnB,SAAUH,EAAc,KACxB,SAAUuC,EAAI,UAClB,CAAC,EACMO,EAEX,GAAI,MAAMuB,EAAM,KAAK,QAAQ,CAAC,EAAG,CAC7B,IAAM9B,EAAM,KAAK,gBAAgB8B,CAAK,EACtC,OAAA/B,EAAkBC,EAAK,CACnB,KAAMpC,EAAa,YACvB,CAAC,EACM2C,EAEX,IAAMJ,EAAS,IAAID,EACfF,EACJ,QAAWiC,KAAS,KAAK,KAAK,OACtBA,EAAM,OAAS,MACXH,EAAM,KAAK,QAAQ,EAAIG,EAAM,QAC7BjC,EAAM,KAAK,gBAAgB8B,EAAO9B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,KAAMpC,EAAa,UACnB,QAASqE,EAAM,QACf,UAAW,GACX,MAAO,GACP,QAASA,EAAM,MACf,KAAM,MACV,CAAC,EACD9B,EAAO,MAAM,GAGZ8B,EAAM,OAAS,MAChBH,EAAM,KAAK,QAAQ,EAAIG,EAAM,QAC7BjC,EAAM,KAAK,gBAAgB8B,EAAO9B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,KAAMpC,EAAa,QACnB,QAASqE,EAAM,QACf,UAAW,GACX,MAAO,GACP,QAASA,EAAM,MACf,KAAM,MACV,CAAC,EACD9B,EAAO,MAAM,GAIjBpE,EAAK,YAAYkG,CAAK,EAG9B,MAAO,CACH,OAAQ9B,EAAO,MACf,MAAO,IAAI,KAAK2B,EAAM,KAAK,QAAQ,CAAC,CACxC,CACJ,CACA,UAAUG,EAAO,CACb,OAAO,IAAI6D,GAAQ,CACf,GAAG,KAAK,KACR,OAAQ,CAAC,GAAG,KAAK,KAAK,OAAQ7D,CAAK,CACvC,CAAC,CACL,CACA,IAAI8D,EAAShH,EAAS,CAClB,OAAO,KAAK,UAAU,CAClB,KAAM,MACN,MAAOgH,EAAQ,QAAQ,EACvB,QAAS7E,EAAU,SAASnC,CAAO,CACvC,CAAC,CACL,CACA,IAAIiH,EAASjH,EAAS,CAClB,OAAO,KAAK,UAAU,CAClB,KAAM,MACN,MAAOiH,EAAQ,QAAQ,EACvB,QAAS9E,EAAU,SAASnC,CAAO,CACvC,CAAC,CACL,CACA,IAAI,SAAU,CACV,IAAIiG,EAAM,KACV,QAAWD,KAAM,KAAK,KAAK,OACnBA,EAAG,OAAS,QACRC,IAAQ,MAAQD,EAAG,MAAQC,KAC3BA,EAAMD,EAAG,OAGrB,OAAOC,GAAO,KAAO,IAAI,KAAKA,CAAG,EAAI,IACzC,CACA,IAAI,SAAU,CACV,IAAIC,EAAM,KACV,QAAWF,KAAM,KAAK,KAAK,OACnBA,EAAG,OAAS,QACRE,IAAQ,MAAQF,EAAG,MAAQE,KAC3BA,EAAMF,EAAG,OAGrB,OAAOE,GAAO,KAAO,IAAI,KAAKA,CAAG,EAAI,IACzC,CACJ,EACAa,GAAQ,OAAUzG,GACP,IAAIyG,GAAQ,CACf,OAAQ,CAAC,EACT,OAAyDzG,GAAO,QAAW,GAC3E,SAAUkD,EAAsB,QAChC,GAAGhB,EAAoBlC,CAAM,CACjC,CAAC,EAEL,IAAM4G,GAAN,cAAwBrE,CAAQ,CAC5B,OAAOE,EAAO,CAEV,GADmB,KAAK,SAASA,CAAK,IACnBrE,EAAc,OAAQ,CACrC,IAAMuC,EAAM,KAAK,gBAAgB8B,CAAK,EACtC,OAAA/B,EAAkBC,EAAK,CACnB,KAAMpC,EAAa,aACnB,SAAUH,EAAc,OACxB,SAAUuC,EAAI,UAClB,CAAC,EACMO,EAEX,OAAOM,GAAGiB,EAAM,IAAI,CACxB,CACJ,EACAmE,GAAU,OAAU5G,GACT,IAAI4G,GAAU,CACjB,SAAU1D,EAAsB,UAChC,GAAGhB,EAAoBlC,CAAM,CACjC,CAAC,EAEL,IAAM6G,GAAN,cAA2BtE,CAAQ,CAC/B,OAAOE,EAAO,CAEV,GADmB,KAAK,SAASA,CAAK,IACnBrE,EAAc,UAAW,CACxC,IAAMuC,EAAM,KAAK,gBAAgB8B,CAAK,EACtC,OAAA/B,EAAkBC,EAAK,CACnB,KAAMpC,EAAa,aACnB,SAAUH,EAAc,UACxB,SAAUuC,EAAI,UAClB,CAAC,EACMO,EAEX,OAAOM,GAAGiB,EAAM,IAAI,CACxB,CACJ,EACAoE,GAAa,OAAU7G,GACZ,IAAI6G,GAAa,CACpB,SAAU3D,EAAsB,aAChC,GAAGhB,EAAoBlC,CAAM,CACjC,CAAC,EAEL,IAAM8G,GAAN,cAAsBvE,CAAQ,CAC1B,OAAOE,EAAO,CAEV,GADmB,KAAK,SAASA,CAAK,IACnBrE,EAAc,KAAM,CACnC,IAAMuC,EAAM,KAAK,gBAAgB8B,CAAK,EACtC,OAAA/B,EAAkBC,EAAK,CACnB,KAAMpC,EAAa,aACnB,SAAUH,EAAc,KACxB,SAAUuC,EAAI,UAClB,CAAC,EACMO,EAEX,OAAOM,GAAGiB,EAAM,IAAI,CACxB,CACJ,EACAqE,GAAQ,OAAU9G,GACP,IAAI8G,GAAQ,CACf,SAAU5D,EAAsB,QAChC,GAAGhB,EAAoBlC,CAAM,CACjC,CAAC,EAEL,IAAM+G,GAAN,cAAqBxE,CAAQ,CACzB,aAAc,CACV,MAAM,GAAG,SAAS,EAElB,KAAK,KAAO,EAChB,CACA,OAAOE,EAAO,CACV,OAAOjB,GAAGiB,EAAM,IAAI,CACxB,CACJ,EACAsE,GAAO,OAAU/G,GACN,IAAI+G,GAAO,CACd,SAAU7D,EAAsB,OAChC,GAAGhB,EAAoBlC,CAAM,CACjC,CAAC,EAEL,IAAMgH,GAAN,cAAyBzE,CAAQ,CAC7B,aAAc,CACV,MAAM,GAAG,SAAS,EAElB,KAAK,SAAW,EACpB,CACA,OAAOE,EAAO,CACV,OAAOjB,GAAGiB,EAAM,IAAI,CACxB,CACJ,EACAuE,GAAW,OAAUhH,GACV,IAAIgH,GAAW,CAClB,SAAU9D,EAAsB,WAChC,GAAGhB,EAAoBlC,CAAM,CACjC,CAAC,EAEL,IAAMiH,GAAN,cAAuB1E,CAAQ,CAC3B,OAAOE,EAAO,CACV,IAAM9B,EAAM,KAAK,gBAAgB8B,CAAK,EACtC,OAAA/B,EAAkBC,EAAK,CACnB,KAAMpC,EAAa,aACnB,SAAUH,EAAc,MACxB,SAAUuC,EAAI,UAClB,CAAC,EACMO,CACX,CACJ,EACA+F,GAAS,OAAUjH,GACR,IAAIiH,GAAS,CAChB,SAAU/D,EAAsB,SAChC,GAAGhB,EAAoBlC,CAAM,CACjC,CAAC,EAEL,IAAMkH,GAAN,cAAsB3E,CAAQ,CAC1B,OAAOE,EAAO,CAEV,GADmB,KAAK,SAASA,CAAK,IACnBrE,EAAc,UAAW,CACxC,IAAMuC,EAAM,KAAK,gBAAgB8B,CAAK,EACtC,OAAA/B,EAAkBC,EAAK,CACnB,KAAMpC,EAAa,aACnB,SAAUH,EAAc,KACxB,SAAUuC,EAAI,UAClB,CAAC,EACMO,EAEX,OAAOM,GAAGiB,EAAM,IAAI,CACxB,CACJ,EACAyE,GAAQ,OAAUlH,GACP,IAAIkH,GAAQ,CACf,SAAUhE,EAAsB,QAChC,GAAGhB,EAAoBlC,CAAM,CACjC,CAAC,EAEL,IAAMqD,GAAN,cAAuBd,CAAQ,CAC3B,OAAOE,EAAO,CACV,GAAM,CAAE,IAAA9B,EAAK,OAAAG,CAAO,EAAI,KAAK,oBAAoB2B,CAAK,EAChDD,EAAM,KAAK,KACjB,GAAI7B,EAAI,aAAevC,EAAc,MACjC,OAAAsC,EAAkBC,EAAK,CACnB,KAAMpC,EAAa,aACnB,SAAUH,EAAc,MACxB,SAAUuC,EAAI,UAClB,CAAC,EACMO,EAEX,GAAIsB,EAAI,cAAgB,KAAM,CAC1B,IAAM4C,EAASzE,EAAI,KAAK,OAAS6B,EAAI,YAAY,MAC3C6C,EAAW1E,EAAI,KAAK,OAAS6B,EAAI,YAAY,OAC/C4C,GAAUC,KACV3E,EAAkBC,EAAK,CACnB,KAAMyE,EAAS7G,EAAa,QAAUA,EAAa,UACnD,QAAU8G,EAAW7C,EAAI,YAAY,MAAQ,OAC7C,QAAU4C,EAAS5C,EAAI,YAAY,MAAQ,OAC3C,KAAM,QACN,UAAW,GACX,MAAO,GACP,QAASA,EAAI,YAAY,OAC7B,CAAC,EACD1B,EAAO,MAAM,GA6BrB,GA1BI0B,EAAI,YAAc,MACd7B,EAAI,KAAK,OAAS6B,EAAI,UAAU,QAChC9B,EAAkBC,EAAK,CACnB,KAAMpC,EAAa,UACnB,QAASiE,EAAI,UAAU,MACvB,KAAM,QACN,UAAW,GACX,MAAO,GACP,QAASA,EAAI,UAAU,OAC3B,CAAC,EACD1B,EAAO,MAAM,GAGjB0B,EAAI,YAAc,MACd7B,EAAI,KAAK,OAAS6B,EAAI,UAAU,QAChC9B,EAAkBC,EAAK,CACnB,KAAMpC,EAAa,QACnB,QAASiE,EAAI,UAAU,MACvB,KAAM,QACN,UAAW,GACX,MAAO,GACP,QAASA,EAAI,UAAU,OAC3B,CAAC,EACD1B,EAAO,MAAM,GAGjBH,EAAI,OAAO,MACX,OAAO,QAAQ,IAAI,CAAC,GAAGA,EAAI,IAAI,EAAE,IAAI,CAACzD,EAAMmC,IACjCmD,EAAI,KAAK,YAAY,IAAIV,GAAmBnB,EAAKzD,EAAMyD,EAAI,KAAMtB,CAAC,CAAC,CAC7E,CAAC,EAAE,KAAM4C,GACCpB,EAAY,WAAWC,EAAQmB,CAAM,CAC/C,EAEL,IAAMA,EAAS,CAAC,GAAGtB,EAAI,IAAI,EAAE,IAAI,CAACzD,EAAMmC,IAC7BmD,EAAI,KAAK,WAAW,IAAIV,GAAmBnB,EAAKzD,EAAMyD,EAAI,KAAMtB,CAAC,CAAC,CAC5E,EACD,OAAOwB,EAAY,WAAWC,EAAQmB,CAAM,CAChD,CACA,IAAI,SAAU,CACV,OAAO,KAAK,KAAK,IACrB,CACA,IAAIsD,EAAW7F,EAAS,CACpB,OAAO,IAAI2D,GAAS,CAChB,GAAG,KAAK,KACR,UAAW,CAAE,MAAOkC,EAAW,QAAS1D,EAAU,SAASnC,CAAO,CAAE,CACxE,CAAC,CACL,CACA,IAAI8F,EAAW9F,EAAS,CACpB,OAAO,IAAI2D,GAAS,CAChB,GAAG,KAAK,KACR,UAAW,CAAE,MAAOmC,EAAW,QAAS3D,EAAU,SAASnC,CAAO,CAAE,CACxE,CAAC,CACL,CACA,OAAO+F,EAAK/F,EAAS,CACjB,OAAO,IAAI2D,GAAS,CAChB,GAAG,KAAK,KACR,YAAa,CAAE,MAAOoC,EAAK,QAAS5D,EAAU,SAASnC,CAAO,CAAE,CACpE,CAAC,CACL,CACA,SAASA,EAAS,CACd,OAAO,KAAK,IAAI,EAAGA,CAAO,CAC9B,CACJ,EACA2D,GAAS,OAAS,CAAC8D,EAAQnH,IAChB,IAAIqD,GAAS,CAChB,KAAM8D,EACN,UAAW,KACX,UAAW,KACX,YAAa,KACb,SAAUjE,EAAsB,SAChC,GAAGhB,EAAoBlC,CAAM,CACjC,CAAC,EAEL,SAASoH,GAAeD,EAAQ,CAC5B,GAAIA,aAAkBE,EAAW,CAC7B,IAAMC,EAAW,CAAC,EAClB,QAAW7J,KAAO0J,EAAO,MAAO,CAC5B,IAAMI,EAAcJ,EAAO,MAAM1J,CAAG,EACpC6J,EAAS7J,CAAG,EAAI0F,GAAY,OAAOiE,GAAeG,CAAW,CAAC,EAElE,OAAO,IAAIF,EAAU,CACjB,GAAGF,EAAO,KACV,MAAO,IAAMG,CACjB,CAAC,MAEA,QAAIH,aAAkB9D,GAChB,IAAIA,GAAS,CAChB,GAAG8D,EAAO,KACV,KAAMC,GAAeD,EAAO,OAAO,CACvC,CAAC,EAEIA,aAAkBhE,GAChBA,GAAY,OAAOiE,GAAeD,EAAO,OAAO,CAAC,CAAC,EAEpDA,aAAkB/D,GAChBA,GAAY,OAAOgE,GAAeD,EAAO,OAAO,CAAC,CAAC,EAEpDA,aAAkBK,GAChBA,GAAS,OAAOL,EAAO,MAAM,IAAKjK,GAASkK,GAAelK,CAAI,CAAC,CAAC,EAGhEiK,CAEf,CACA,IAAME,EAAN,cAAwB9E,CAAQ,CAC5B,aAAc,CACV,MAAM,GAAG,SAAS,EAClB,KAAK,QAAU,KAKf,KAAK,UAAY,KAAK,YAqCtB,KAAK,QAAU,KAAK,MACxB,CACA,YAAa,CACT,GAAI,KAAK,UAAY,KACjB,OAAO,KAAK,QAChB,IAAMkF,EAAQ,KAAK,KAAK,MAAM,EACxBjK,EAAOd,EAAK,WAAW+K,CAAK,EAClC,OAAQ,KAAK,QAAU,CAAE,MAAAA,EAAO,KAAAjK,CAAK,CACzC,CACA,OAAOiF,EAAO,CAEV,GADmB,KAAK,SAASA,CAAK,IACnBrE,EAAc,OAAQ,CACrC,IAAMuC,EAAM,KAAK,gBAAgB8B,CAAK,EACtC,OAAA/B,EAAkBC,EAAK,CACnB,KAAMpC,EAAa,aACnB,SAAUH,EAAc,OACxB,SAAUuC,EAAI,UAClB,CAAC,EACMO,EAEX,GAAM,CAAE,OAAAJ,EAAQ,IAAAH,CAAI,EAAI,KAAK,oBAAoB8B,CAAK,EAChD,CAAE,MAAAgF,EAAO,KAAMC,CAAU,EAAI,KAAK,WAAW,EAC7CC,EAAY,CAAC,EACnB,GAAI,EAAE,KAAK,KAAK,oBAAoBV,IAChC,KAAK,KAAK,cAAgB,SAC1B,QAAWxJ,KAAOkD,EAAI,KACb+G,EAAU,SAASjK,CAAG,GACvBkK,EAAU,KAAKlK,CAAG,EAI9B,IAAM0D,EAAQ,CAAC,EACf,QAAW1D,KAAOiK,EAAW,CACzB,IAAME,EAAeH,EAAMhK,CAAG,EACxBO,EAAQ2C,EAAI,KAAKlD,CAAG,EAC1B0D,EAAM,KAAK,CACP,IAAK,CAAE,OAAQ,QAAS,MAAO1D,CAAI,EACnC,MAAOmK,EAAa,OAAO,IAAI9F,GAAmBnB,EAAK3C,EAAO2C,EAAI,KAAMlD,CAAG,CAAC,EAC5E,UAAWA,KAAOkD,EAAI,IAC1B,CAAC,EAEL,GAAI,KAAK,KAAK,oBAAoBsG,GAAU,CACxC,IAAMY,EAAc,KAAK,KAAK,YAC9B,GAAIA,IAAgB,cAChB,QAAWpK,KAAOkK,EACdxG,EAAM,KAAK,CACP,IAAK,CAAE,OAAQ,QAAS,MAAO1D,CAAI,EACnC,MAAO,CAAE,OAAQ,QAAS,MAAOkD,EAAI,KAAKlD,CAAG,CAAE,CACnD,CAAC,UAGAoK,IAAgB,SACjBF,EAAU,OAAS,IACnBjH,EAAkBC,EAAK,CACnB,KAAMpC,EAAa,kBACnB,KAAMoJ,CACV,CAAC,EACD7G,EAAO,MAAM,WAGZ+G,IAAgB,QAErB,MAAM,IAAI,MAAM,sDAAsD,MAGzE,CAED,IAAMC,EAAW,KAAK,KAAK,SAC3B,QAAWrK,KAAOkK,EAAW,CACzB,IAAM3J,EAAQ2C,EAAI,KAAKlD,CAAG,EAC1B0D,EAAM,KAAK,CACP,IAAK,CAAE,OAAQ,QAAS,MAAO1D,CAAI,EACnC,MAAOqK,EAAS,OAAO,IAAIhG,GAAmBnB,EAAK3C,EAAO2C,EAAI,KAAMlD,CAAG,CACvE,EACA,UAAWA,KAAOkD,EAAI,IAC1B,CAAC,GAGT,OAAIA,EAAI,OAAO,MACJ,QAAQ,QAAQ,EAClB,KAAK,SAAY,CAClB,IAAMS,EAAY,CAAC,EACnB,QAAWC,KAAQF,EAAO,CACtB,IAAM1D,EAAM,MAAM4D,EAAK,IACvBD,EAAU,KAAK,CACX,IAAA3D,EACA,MAAO,MAAM4D,EAAK,MAClB,UAAWA,EAAK,SACpB,CAAC,EAEL,OAAOD,CACX,CAAC,EACI,KAAMA,GACAP,EAAY,gBAAgBC,EAAQM,CAAS,CACvD,EAGMP,EAAY,gBAAgBC,EAAQK,CAAK,CAExD,CACA,IAAI,OAAQ,CACR,OAAO,KAAK,KAAK,MAAM,CAC3B,CACA,OAAOzB,EAAS,CACZ,OAAAmC,EAAU,SACH,IAAIwF,EAAU,CACjB,GAAG,KAAK,KACR,YAAa,SACb,GAAI3H,IAAY,OACV,CACE,SAAU,CAACV,EAAO2B,IAAQ,CACtB,IAAI+B,EAAIqF,EAAIC,EAAIC,EAChB,IAAMC,GAAgBF,GAAMD,GAAMrF,EAAK,KAAK,MAAM,YAAc,MAAQqF,IAAO,OAAS,OAASA,EAAG,KAAKrF,EAAI1D,EAAO2B,CAAG,EAAE,WAAa,MAAQqH,IAAO,OAASA,EAAKrH,EAAI,aACvK,OAAI3B,EAAM,OAAS,oBACR,CACH,SAAUiJ,EAAKpG,EAAU,SAASnC,CAAO,EAAE,WAAa,MAAQuI,IAAO,OAASA,EAAKC,CACzF,EACG,CACH,QAASA,CACb,CACJ,CACJ,EACE,CAAC,CACX,CAAC,CACL,CACA,OAAQ,CACJ,OAAO,IAAIb,EAAU,CACjB,GAAG,KAAK,KACR,YAAa,OACjB,CAAC,CACL,CACA,aAAc,CACV,OAAO,IAAIA,EAAU,CACjB,GAAG,KAAK,KACR,YAAa,aACjB,CAAC,CACL,CAkBA,OAAOc,EAAc,CACjB,OAAO,IAAId,EAAU,CACjB,GAAG,KAAK,KACR,MAAO,KAAO,CACV,GAAG,KAAK,KAAK,MAAM,EACnB,GAAGc,CACP,EACJ,CAAC,CACL,CAMA,MAAMC,EAAS,CAUX,OATe,IAAIf,EAAU,CACzB,YAAae,EAAQ,KAAK,YAC1B,SAAUA,EAAQ,KAAK,SACvB,MAAO,KAAO,CACV,GAAG,KAAK,KAAK,MAAM,EACnB,GAAGA,EAAQ,KAAK,MAAM,CAC1B,GACA,SAAUlF,EAAsB,SACpC,CAAC,CAEL,CAoCA,OAAOzF,EAAK0J,EAAQ,CAChB,OAAO,KAAK,QAAQ,CAAE,CAAC1J,CAAG,EAAG0J,CAAO,CAAC,CACzC,CAsBA,SAASkB,EAAO,CACZ,OAAO,IAAIhB,EAAU,CACjB,GAAG,KAAK,KACR,SAAUgB,CACd,CAAC,CACL,CACA,KAAKC,EAAM,CACP,IAAMb,EAAQ,CAAC,EACf,OAAA/K,EAAK,WAAW4L,CAAI,EAAE,QAAS7K,GAAQ,CAC/B6K,EAAK7K,CAAG,GAAK,KAAK,MAAMA,CAAG,IAC3BgK,EAAMhK,CAAG,EAAI,KAAK,MAAMA,CAAG,EAEnC,CAAC,EACM,IAAI4J,EAAU,CACjB,GAAG,KAAK,KACR,MAAO,IAAMI,CACjB,CAAC,CACL,CACA,KAAKa,EAAM,CACP,IAAMb,EAAQ,CAAC,EACf,OAAA/K,EAAK,WAAW,KAAK,KAAK,EAAE,QAASe,GAAQ,CACpC6K,EAAK7K,CAAG,IACTgK,EAAMhK,CAAG,EAAI,KAAK,MAAMA,CAAG,EAEnC,CAAC,EACM,IAAI4J,EAAU,CACjB,GAAG,KAAK,KACR,MAAO,IAAMI,CACjB,CAAC,CACL,CAIA,aAAc,CACV,OAAOL,GAAe,IAAI,CAC9B,CACA,QAAQkB,EAAM,CACV,IAAMhB,EAAW,CAAC,EAClB,OAAA5K,EAAK,WAAW,KAAK,KAAK,EAAE,QAASe,GAAQ,CACzC,IAAM8J,EAAc,KAAK,MAAM9J,CAAG,EAC9B6K,GAAQ,CAACA,EAAK7K,CAAG,EACjB6J,EAAS7J,CAAG,EAAI8J,EAGhBD,EAAS7J,CAAG,EAAI8J,EAAY,SAAS,CAE7C,CAAC,EACM,IAAIF,EAAU,CACjB,GAAG,KAAK,KACR,MAAO,IAAMC,CACjB,CAAC,CACL,CACA,SAASgB,EAAM,CACX,IAAMhB,EAAW,CAAC,EAClB,OAAA5K,EAAK,WAAW,KAAK,KAAK,EAAE,QAASe,GAAQ,CACzC,GAAI6K,GAAQ,CAACA,EAAK7K,CAAG,EACjB6J,EAAS7J,CAAG,EAAI,KAAK,MAAMA,CAAG,MAE7B,CAED,IAAI8K,EADgB,KAAK,MAAM9K,CAAG,EAElC,KAAO8K,aAAoBpF,IACvBoF,EAAWA,EAAS,KAAK,UAE7BjB,EAAS7J,CAAG,EAAI8K,EAExB,CAAC,EACM,IAAIlB,EAAU,CACjB,GAAG,KAAK,KACR,MAAO,IAAMC,CACjB,CAAC,CACL,CACA,OAAQ,CACJ,OAAOkB,GAAc9L,EAAK,WAAW,KAAK,KAAK,CAAC,CACpD,CACJ,EACA2K,EAAU,OAAS,CAACI,EAAOzH,IAChB,IAAIqH,EAAU,CACjB,MAAO,IAAMI,EACb,YAAa,QACb,SAAUR,GAAS,OAAO,EAC1B,SAAU/D,EAAsB,UAChC,GAAGhB,EAAoBlC,CAAM,CACjC,CAAC,EAELqH,EAAU,aAAe,CAACI,EAAOzH,IACtB,IAAIqH,EAAU,CACjB,MAAO,IAAMI,EACb,YAAa,SACb,SAAUR,GAAS,OAAO,EAC1B,SAAU/D,EAAsB,UAChC,GAAGhB,EAAoBlC,CAAM,CACjC,CAAC,EAELqH,EAAU,WAAa,CAACI,EAAOzH,IACpB,IAAIqH,EAAU,CACjB,MAAAI,EACA,YAAa,QACb,SAAUR,GAAS,OAAO,EAC1B,SAAU/D,EAAsB,UAChC,GAAGhB,EAAoBlC,CAAM,CACjC,CAAC,EAEL,IAAMwD,GAAN,cAAuBjB,CAAQ,CAC3B,OAAOE,EAAO,CACV,GAAM,CAAE,IAAA9B,CAAI,EAAI,KAAK,oBAAoB8B,CAAK,EACxC6C,EAAU,KAAK,KAAK,QAC1B,SAASmD,EAAc1H,EAAS,CAE5B,QAAWkB,KAAUlB,EACjB,GAAIkB,EAAO,OAAO,SAAW,QACzB,OAAOA,EAAO,OAGtB,QAAWA,KAAUlB,EACjB,GAAIkB,EAAO,OAAO,SAAW,QAEzB,OAAAtB,EAAI,OAAO,OAAO,KAAK,GAAGsB,EAAO,IAAI,OAAO,MAAM,EAC3CA,EAAO,OAItB,IAAMyG,EAAc3H,EAAQ,IAAKkB,GAAW,IAAIxD,GAASwD,EAAO,IAAI,OAAO,MAAM,CAAC,EAClF,OAAAvB,EAAkBC,EAAK,CACnB,KAAMpC,EAAa,cACnB,YAAAmK,CACJ,CAAC,EACMxH,CACX,CACA,GAAIP,EAAI,OAAO,MACX,OAAO,QAAQ,IAAI2E,EAAQ,IAAI,MAAO/B,GAAW,CAC7C,IAAMoF,EAAW,CACb,GAAGhI,EACH,OAAQ,CACJ,GAAGA,EAAI,OACP,OAAQ,CAAC,CACb,EACA,OAAQ,IACZ,EACA,MAAO,CACH,OAAQ,MAAM4C,EAAO,YAAY,CAC7B,KAAM5C,EAAI,KACV,KAAMA,EAAI,KACV,OAAQgI,CACZ,CAAC,EACD,IAAKA,CACT,CACJ,CAAC,CAAC,EAAE,KAAKF,CAAa,EAErB,CACD,IAAIG,EACElK,EAAS,CAAC,EAChB,QAAW6E,KAAU+B,EAAS,CAC1B,IAAMqD,EAAW,CACb,GAAGhI,EACH,OAAQ,CACJ,GAAGA,EAAI,OACP,OAAQ,CAAC,CACb,EACA,OAAQ,IACZ,EACMsB,EAASsB,EAAO,WAAW,CAC7B,KAAM5C,EAAI,KACV,KAAMA,EAAI,KACV,OAAQgI,CACZ,CAAC,EACD,GAAI1G,EAAO,SAAW,QAClB,OAAOA,EAEFA,EAAO,SAAW,SAAW,CAAC2G,IACnCA,EAAQ,CAAE,OAAA3G,EAAQ,IAAK0G,CAAS,GAEhCA,EAAS,OAAO,OAAO,QACvBjK,EAAO,KAAKiK,EAAS,OAAO,MAAM,EAG1C,GAAIC,EACA,OAAAjI,EAAI,OAAO,OAAO,KAAK,GAAGiI,EAAM,IAAI,OAAO,MAAM,EAC1CA,EAAM,OAEjB,IAAMF,EAAchK,EAAO,IAAKA,GAAW,IAAID,GAASC,CAAM,CAAC,EAC/D,OAAAgC,EAAkBC,EAAK,CACnB,KAAMpC,EAAa,cACnB,YAAAmK,CACJ,CAAC,EACMxH,EAEf,CACA,IAAI,SAAU,CACV,OAAO,KAAK,KAAK,OACrB,CACJ,EACAsC,GAAS,OAAS,CAACqF,EAAO7I,IACf,IAAIwD,GAAS,CAChB,QAASqF,EACT,SAAU3F,EAAsB,SAChC,GAAGhB,EAAoBlC,CAAM,CACjC,CAAC,EASL,IAAM8I,GAAoBC,GAClBA,aAAgBC,GACTF,GAAiBC,EAAK,MAAM,EAE9BA,aAAgB9F,GACd6F,GAAiBC,EAAK,UAAU,CAAC,EAEnCA,aAAgBE,GACd,CAACF,EAAK,KAAK,EAEbA,aAAgBG,GACdH,EAAK,QAEPA,aAAgBI,GAEd,OAAO,KAAKJ,EAAK,IAAI,EAEvBA,aAAgBlF,GACdiF,GAAiBC,EAAK,KAAK,SAAS,EAEtCA,aAAgBlC,GACd,CAAC,MAAS,EAEZkC,aAAgBjC,GACd,CAAC,IAAI,EAGL,KAGTsC,GAAN,cAAoC7G,CAAQ,CACxC,OAAOE,EAAO,CACV,GAAM,CAAE,IAAA9B,CAAI,EAAI,KAAK,oBAAoB8B,CAAK,EAC9C,GAAI9B,EAAI,aAAevC,EAAc,OACjC,OAAAsC,EAAkBC,EAAK,CACnB,KAAMpC,EAAa,aACnB,SAAUH,EAAc,OACxB,SAAUuC,EAAI,UAClB,CAAC,EACMO,EAEX,IAAMmI,EAAgB,KAAK,cACrBC,EAAqB3I,EAAI,KAAK0I,CAAa,EAC3C9F,EAAS,KAAK,WAAW,IAAI+F,CAAkB,EACrD,OAAK/F,EAQD5C,EAAI,OAAO,MACJ4C,EAAO,YAAY,CACtB,KAAM5C,EAAI,KACV,KAAMA,EAAI,KACV,OAAQA,CACZ,CAAC,EAGM4C,EAAO,WAAW,CACrB,KAAM5C,EAAI,KACV,KAAMA,EAAI,KACV,OAAQA,CACZ,CAAC,GAnBDD,EAAkBC,EAAK,CACnB,KAAMpC,EAAa,4BACnB,QAAS,MAAM,KAAK,KAAK,WAAW,KAAK,CAAC,EAC1C,KAAM,CAAC8K,CAAa,CACxB,CAAC,EACMnI,EAgBf,CACA,IAAI,eAAgB,CAChB,OAAO,KAAK,KAAK,aACrB,CACA,IAAI,SAAU,CACV,OAAO,KAAK,KAAK,OACrB,CACA,IAAI,YAAa,CACb,OAAO,KAAK,KAAK,UACrB,CASA,OAAO,OAAOmI,EAAe/D,EAAStF,EAAQ,CAE1C,IAAMuJ,EAAa,IAAI,IAEvB,QAAWR,KAAQzD,EAAS,CACxB,IAAMkE,EAAsBV,GAAiBC,EAAK,MAAMM,CAAa,CAAC,EACtE,GAAI,CAACG,EACD,MAAM,IAAI,MAAM,mCAAmCH,oDAAgE,EAEvH,QAAWrL,KAASwL,EAAqB,CACrC,GAAID,EAAW,IAAIvL,CAAK,EACpB,MAAM,IAAI,MAAM,0BAA0B,OAAOqL,CAAa,yBAAyB,OAAOrL,CAAK,GAAG,EAE1GuL,EAAW,IAAIvL,EAAO+K,CAAI,GAGlC,OAAO,IAAIK,GAAsB,CAC7B,SAAUlG,EAAsB,sBAChC,cAAAmG,EACA,QAAA/D,EACA,WAAAiE,EACA,GAAGrH,EAAoBlC,CAAM,CACjC,CAAC,CACL,CACJ,EACA,SAASyJ,GAAYC,EAAGC,EAAG,CACvB,IAAMC,EAAQvL,GAAcqL,CAAC,EACvBG,EAAQxL,GAAcsL,CAAC,EAC7B,GAAID,IAAMC,EACN,MAAO,CAAE,MAAO,GAAM,KAAMD,CAAE,EAE7B,GAAIE,IAAUxL,EAAc,QAAUyL,IAAUzL,EAAc,OAAQ,CACvE,IAAM0L,EAAQpN,EAAK,WAAWiN,CAAC,EACzBI,EAAarN,EACd,WAAWgN,CAAC,EACZ,OAAQjM,GAAQqM,EAAM,QAAQrM,CAAG,IAAM,EAAE,EACxCuM,EAAS,CAAE,GAAGN,EAAG,GAAGC,CAAE,EAC5B,QAAWlM,KAAOsM,EAAY,CAC1B,IAAME,EAAcR,GAAYC,EAAEjM,CAAG,EAAGkM,EAAElM,CAAG,CAAC,EAC9C,GAAI,CAACwM,EAAY,MACb,MAAO,CAAE,MAAO,EAAM,EAE1BD,EAAOvM,CAAG,EAAIwM,EAAY,KAE9B,MAAO,CAAE,MAAO,GAAM,KAAMD,CAAO,UAE9BJ,IAAUxL,EAAc,OAASyL,IAAUzL,EAAc,MAAO,CACrE,GAAIsL,EAAE,SAAWC,EAAE,OACf,MAAO,CAAE,MAAO,EAAM,EAE1B,IAAMO,EAAW,CAAC,EAClB,QAAS7B,EAAQ,EAAGA,EAAQqB,EAAE,OAAQrB,IAAS,CAC3C,IAAM8B,EAAQT,EAAErB,CAAK,EACf+B,EAAQT,EAAEtB,CAAK,EACf4B,EAAcR,GAAYU,EAAOC,CAAK,EAC5C,GAAI,CAACH,EAAY,MACb,MAAO,CAAE,MAAO,EAAM,EAE1BC,EAAS,KAAKD,EAAY,IAAI,EAElC,MAAO,CAAE,MAAO,GAAM,KAAMC,CAAS,MAEpC,QAAIN,IAAUxL,EAAc,MAC7ByL,IAAUzL,EAAc,MACxB,CAACsL,GAAM,CAACC,EACD,CAAE,MAAO,GAAM,KAAMD,CAAE,EAGvB,CAAE,MAAO,EAAM,CAE9B,CACA,IAAMhG,GAAN,cAA8BnB,CAAQ,CAClC,OAAOE,EAAO,CACV,GAAM,CAAE,OAAA3B,EAAQ,IAAAH,CAAI,EAAI,KAAK,oBAAoB8B,CAAK,EAChD4H,EAAe,CAACC,EAAYC,IAAgB,CAC9C,GAAI9I,GAAU6I,CAAU,GAAK7I,GAAU8I,CAAW,EAC9C,OAAOrJ,EAEX,IAAMsJ,EAASf,GAAYa,EAAW,MAAOC,EAAY,KAAK,EAC9D,OAAKC,EAAO,QAMR9I,GAAQ4I,CAAU,GAAK5I,GAAQ6I,CAAW,IAC1CzJ,EAAO,MAAM,EAEV,CAAE,OAAQA,EAAO,MAAO,MAAO0J,EAAO,IAAK,IAR9C9J,EAAkBC,EAAK,CACnB,KAAMpC,EAAa,0BACvB,CAAC,EACM2C,EAMf,EACA,OAAIP,EAAI,OAAO,MACJ,QAAQ,IAAI,CACf,KAAK,KAAK,KAAK,YAAY,CACvB,KAAMA,EAAI,KACV,KAAMA,EAAI,KACV,OAAQA,CACZ,CAAC,EACD,KAAK,KAAK,MAAM,YAAY,CACxB,KAAMA,EAAI,KACV,KAAMA,EAAI,KACV,OAAQA,CACZ,CAAC,CACL,CAAC,EAAE,KAAK,CAAC,CAAC8J,EAAMC,CAAK,IAAML,EAAaI,EAAMC,CAAK,CAAC,EAG7CL,EAAa,KAAK,KAAK,KAAK,WAAW,CAC1C,KAAM1J,EAAI,KACV,KAAMA,EAAI,KACV,OAAQA,CACZ,CAAC,EAAG,KAAK,KAAK,MAAM,WAAW,CAC3B,KAAMA,EAAI,KACV,KAAMA,EAAI,KACV,OAAQA,CACZ,CAAC,CAAC,CAEV,CACJ,EACA+C,GAAgB,OAAS,CAAC+G,EAAMC,EAAO1K,IAC5B,IAAI0D,GAAgB,CACvB,KAAM+G,EACN,MAAOC,EACP,SAAUxH,EAAsB,gBAChC,GAAGhB,EAAoBlC,CAAM,CACjC,CAAC,EAEL,IAAMwH,GAAN,cAAuBjF,CAAQ,CAC3B,OAAOE,EAAO,CACV,GAAM,CAAE,OAAA3B,EAAQ,IAAAH,CAAI,EAAI,KAAK,oBAAoB8B,CAAK,EACtD,GAAI9B,EAAI,aAAevC,EAAc,MACjC,OAAAsC,EAAkBC,EAAK,CACnB,KAAMpC,EAAa,aACnB,SAAUH,EAAc,MACxB,SAAUuC,EAAI,UAClB,CAAC,EACMO,EAEX,GAAIP,EAAI,KAAK,OAAS,KAAK,KAAK,MAAM,OAClC,OAAAD,EAAkBC,EAAK,CACnB,KAAMpC,EAAa,UACnB,QAAS,KAAK,KAAK,MAAM,OACzB,UAAW,GACX,MAAO,GACP,KAAM,OACV,CAAC,EACM2C,EAGP,CADS,KAAK,KAAK,MACVP,EAAI,KAAK,OAAS,KAAK,KAAK,MAAM,SAC3CD,EAAkBC,EAAK,CACnB,KAAMpC,EAAa,QACnB,QAAS,KAAK,KAAK,MAAM,OACzB,UAAW,GACX,MAAO,GACP,KAAM,OACV,CAAC,EACDuC,EAAO,MAAM,GAEjB,IAAM9D,EAAQ,CAAC,GAAG2D,EAAI,IAAI,EACrB,IAAI,CAACzD,EAAMyN,IAAc,CAC1B,IAAMxD,EAAS,KAAK,KAAK,MAAMwD,CAAS,GAAK,KAAK,KAAK,KACvD,OAAKxD,EAEEA,EAAO,OAAO,IAAIrF,GAAmBnB,EAAKzD,EAAMyD,EAAI,KAAMgK,CAAS,CAAC,EADhE,IAEf,CAAC,EACI,OAAQ/J,GAAM,CAAC,CAACA,CAAC,EACtB,OAAID,EAAI,OAAO,MACJ,QAAQ,IAAI3D,CAAK,EAAE,KAAM+D,GACrBF,EAAY,WAAWC,EAAQC,CAAO,CAChD,EAGMF,EAAY,WAAWC,EAAQ9D,CAAK,CAEnD,CACA,IAAI,OAAQ,CACR,OAAO,KAAK,KAAK,KACrB,CACA,KAAK4N,EAAM,CACP,OAAO,IAAIpD,GAAS,CAChB,GAAG,KAAK,KACR,KAAAoD,CACJ,CAAC,CACL,CACJ,EACApD,GAAS,OAAS,CAACqD,EAAS7K,IAAW,CACnC,GAAI,CAAC,MAAM,QAAQ6K,CAAO,EACtB,MAAM,IAAI,MAAM,uDAAuD,EAE3E,OAAO,IAAIrD,GAAS,CAChB,MAAOqD,EACP,SAAU3H,EAAsB,SAChC,KAAM,KACN,GAAGhB,EAAoBlC,CAAM,CACjC,CAAC,CACL,EACA,IAAM8K,GAAN,cAAwBvI,CAAQ,CAC5B,IAAI,WAAY,CACZ,OAAO,KAAK,KAAK,OACrB,CACA,IAAI,aAAc,CACd,OAAO,KAAK,KAAK,SACrB,CACA,OAAOE,EAAO,CACV,GAAM,CAAE,OAAA3B,EAAQ,IAAAH,CAAI,EAAI,KAAK,oBAAoB8B,CAAK,EACtD,GAAI9B,EAAI,aAAevC,EAAc,OACjC,OAAAsC,EAAkBC,EAAK,CACnB,KAAMpC,EAAa,aACnB,SAAUH,EAAc,OACxB,SAAUuC,EAAI,UAClB,CAAC,EACMO,EAEX,IAAMC,EAAQ,CAAC,EACT4J,EAAU,KAAK,KAAK,QACpBC,EAAY,KAAK,KAAK,UAC5B,QAAWvN,KAAOkD,EAAI,KAClBQ,EAAM,KAAK,CACP,IAAK4J,EAAQ,OAAO,IAAIjJ,GAAmBnB,EAAKlD,EAAKkD,EAAI,KAAMlD,CAAG,CAAC,EACnE,MAAOuN,EAAU,OAAO,IAAIlJ,GAAmBnB,EAAKA,EAAI,KAAKlD,CAAG,EAAGkD,EAAI,KAAMlD,CAAG,CAAC,CACrF,CAAC,EAEL,OAAIkD,EAAI,OAAO,MACJE,EAAY,iBAAiBC,EAAQK,CAAK,EAG1CN,EAAY,gBAAgBC,EAAQK,CAAK,CAExD,CACA,IAAI,SAAU,CACV,OAAO,KAAK,KAAK,SACrB,CACA,OAAO,OAAOjD,EAAOC,EAAQ8M,EAAO,CAChC,OAAI9M,aAAkBoE,EACX,IAAIuI,GAAU,CACjB,QAAS5M,EACT,UAAWC,EACX,SAAU+E,EAAsB,UAChC,GAAGhB,EAAoB+I,CAAK,CAChC,CAAC,EAEE,IAAIH,GAAU,CACjB,QAAS7F,GAAU,OAAO,EAC1B,UAAW/G,EACX,SAAUgF,EAAsB,UAChC,GAAGhB,EAAoB/D,CAAM,CACjC,CAAC,CACL,CACJ,EACM+M,GAAN,cAAqB3I,CAAQ,CACzB,OAAOE,EAAO,CACV,GAAM,CAAE,OAAA3B,EAAQ,IAAAH,CAAI,EAAI,KAAK,oBAAoB8B,CAAK,EACtD,GAAI9B,EAAI,aAAevC,EAAc,IACjC,OAAAsC,EAAkBC,EAAK,CACnB,KAAMpC,EAAa,aACnB,SAAUH,EAAc,IACxB,SAAUuC,EAAI,UAClB,CAAC,EACMO,EAEX,IAAM6J,EAAU,KAAK,KAAK,QACpBC,EAAY,KAAK,KAAK,UACtB7J,EAAQ,CAAC,GAAGR,EAAI,KAAK,QAAQ,CAAC,EAAE,IAAI,CAAC,CAAClD,EAAKO,CAAK,EAAGqK,KAC9C,CACH,IAAK0C,EAAQ,OAAO,IAAIjJ,GAAmBnB,EAAKlD,EAAKkD,EAAI,KAAM,CAAC0H,EAAO,KAAK,CAAC,CAAC,EAC9E,MAAO2C,EAAU,OAAO,IAAIlJ,GAAmBnB,EAAK3C,EAAO2C,EAAI,KAAM,CAAC0H,EAAO,OAAO,CAAC,CAAC,CAC1F,EACH,EACD,GAAI1H,EAAI,OAAO,MAAO,CAClB,IAAMwK,EAAW,IAAI,IACrB,OAAO,QAAQ,QAAQ,EAAE,KAAK,SAAY,CACtC,QAAW9J,KAAQF,EAAO,CACtB,IAAM1D,EAAM,MAAM4D,EAAK,IACjBrD,EAAQ,MAAMqD,EAAK,MACzB,GAAI5D,EAAI,SAAW,WAAaO,EAAM,SAAW,UAC7C,OAAOkD,GAEPzD,EAAI,SAAW,SAAWO,EAAM,SAAW,UAC3C8C,EAAO,MAAM,EAEjBqK,EAAS,IAAI1N,EAAI,MAAOO,EAAM,KAAK,EAEvC,MAAO,CAAE,OAAQ8C,EAAO,MAAO,MAAOqK,CAAS,CACnD,CAAC,MAEA,CACD,IAAMA,EAAW,IAAI,IACrB,QAAW9J,KAAQF,EAAO,CACtB,IAAM1D,EAAM4D,EAAK,IACXrD,EAAQqD,EAAK,MACnB,GAAI5D,EAAI,SAAW,WAAaO,EAAM,SAAW,UAC7C,OAAOkD,GAEPzD,EAAI,SAAW,SAAWO,EAAM,SAAW,UAC3C8C,EAAO,MAAM,EAEjBqK,EAAS,IAAI1N,EAAI,MAAOO,EAAM,KAAK,EAEvC,MAAO,CAAE,OAAQ8C,EAAO,MAAO,MAAOqK,CAAS,EAEvD,CACJ,EACAD,GAAO,OAAS,CAACH,EAASC,EAAWhL,IAC1B,IAAIkL,GAAO,CACd,UAAAF,EACA,QAAAD,EACA,SAAU7H,EAAsB,OAChC,GAAGhB,EAAoBlC,CAAM,CACjC,CAAC,EAEL,IAAMoL,GAAN,cAAqB7I,CAAQ,CACzB,OAAOE,EAAO,CACV,GAAM,CAAE,OAAA3B,EAAQ,IAAAH,CAAI,EAAI,KAAK,oBAAoB8B,CAAK,EACtD,GAAI9B,EAAI,aAAevC,EAAc,IACjC,OAAAsC,EAAkBC,EAAK,CACnB,KAAMpC,EAAa,aACnB,SAAUH,EAAc,IACxB,SAAUuC,EAAI,UAClB,CAAC,EACMO,EAEX,IAAMsB,EAAM,KAAK,KACbA,EAAI,UAAY,MACZ7B,EAAI,KAAK,KAAO6B,EAAI,QAAQ,QAC5B9B,EAAkBC,EAAK,CACnB,KAAMpC,EAAa,UACnB,QAASiE,EAAI,QAAQ,MACrB,KAAM,MACN,UAAW,GACX,MAAO,GACP,QAASA,EAAI,QAAQ,OACzB,CAAC,EACD1B,EAAO,MAAM,GAGjB0B,EAAI,UAAY,MACZ7B,EAAI,KAAK,KAAO6B,EAAI,QAAQ,QAC5B9B,EAAkBC,EAAK,CACnB,KAAMpC,EAAa,QACnB,QAASiE,EAAI,QAAQ,MACrB,KAAM,MACN,UAAW,GACX,MAAO,GACP,QAASA,EAAI,QAAQ,OACzB,CAAC,EACD1B,EAAO,MAAM,GAGrB,IAAMkK,EAAY,KAAK,KAAK,UAC5B,SAASK,EAAYC,EAAU,CAC3B,IAAMC,EAAY,IAAI,IACtB,QAAWC,KAAWF,EAAU,CAC5B,GAAIE,EAAQ,SAAW,UACnB,OAAOtK,EACPsK,EAAQ,SAAW,SACnB1K,EAAO,MAAM,EACjByK,EAAU,IAAIC,EAAQ,KAAK,EAE/B,MAAO,CAAE,OAAQ1K,EAAO,MAAO,MAAOyK,CAAU,CACpD,CACA,IAAMD,EAAW,CAAC,GAAG3K,EAAI,KAAK,OAAO,CAAC,EAAE,IAAI,CAACzD,EAAMmC,IAAM2L,EAAU,OAAO,IAAIlJ,GAAmBnB,EAAKzD,EAAMyD,EAAI,KAAMtB,CAAC,CAAC,CAAC,EACzH,OAAIsB,EAAI,OAAO,MACJ,QAAQ,IAAI2K,CAAQ,EAAE,KAAMA,GAAaD,EAAYC,CAAQ,CAAC,EAG9DD,EAAYC,CAAQ,CAEnC,CACA,IAAIG,EAAS/L,EAAS,CAClB,OAAO,IAAI0L,GAAO,CACd,GAAG,KAAK,KACR,QAAS,CAAE,MAAOK,EAAS,QAAS5J,EAAU,SAASnC,CAAO,CAAE,CACpE,CAAC,CACL,CACA,IAAIgM,EAAShM,EAAS,CAClB,OAAO,IAAI0L,GAAO,CACd,GAAG,KAAK,KACR,QAAS,CAAE,MAAOM,EAAS,QAAS7J,EAAU,SAASnC,CAAO,CAAE,CACpE,CAAC,CACL,CACA,KAAKiM,EAAMjM,EAAS,CAChB,OAAO,KAAK,IAAIiM,EAAMjM,CAAO,EAAE,IAAIiM,EAAMjM,CAAO,CACpD,CACA,SAASA,EAAS,CACd,OAAO,KAAK,IAAI,EAAGA,CAAO,CAC9B,CACJ,EACA0L,GAAO,OAAS,CAACJ,EAAWhL,IACjB,IAAIoL,GAAO,CACd,UAAAJ,EACA,QAAS,KACT,QAAS,KACT,SAAU9H,EAAsB,OAChC,GAAGhB,EAAoBlC,CAAM,CACjC,CAAC,EAEL,IAAM4L,GAAN,cAA0BrJ,CAAQ,CAC9B,aAAc,CACV,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,KAAK,SACzB,CACA,OAAOE,EAAO,CACV,GAAM,CAAE,IAAA9B,CAAI,EAAI,KAAK,oBAAoB8B,CAAK,EAC9C,GAAI9B,EAAI,aAAevC,EAAc,SACjC,OAAAsC,EAAkBC,EAAK,CACnB,KAAMpC,EAAa,aACnB,SAAUH,EAAc,SACxB,SAAUuC,EAAI,UAClB,CAAC,EACMO,EAEX,SAAS2K,EAAchH,EAAM1F,EAAO,CAChC,OAAOY,GAAU,CACb,KAAM8E,EACN,KAAMlE,EAAI,KACV,UAAW,CACPA,EAAI,OAAO,mBACXA,EAAI,eACJb,GAAY,EACZN,EACJ,EAAE,OAAQoB,GAAM,CAAC,CAACA,CAAC,EACnB,UAAW,CACP,KAAMrC,EAAa,kBACnB,eAAgBY,CACpB,CACJ,CAAC,CACL,CACA,SAAS2M,EAAiBC,EAAS5M,EAAO,CACtC,OAAOY,GAAU,CACb,KAAMgM,EACN,KAAMpL,EAAI,KACV,UAAW,CACPA,EAAI,OAAO,mBACXA,EAAI,eACJb,GAAY,EACZN,EACJ,EAAE,OAAQoB,GAAM,CAAC,CAACA,CAAC,EACnB,UAAW,CACP,KAAMrC,EAAa,oBACnB,gBAAiBY,CACrB,CACJ,CAAC,CACL,CACA,IAAMa,EAAS,CAAE,SAAUW,EAAI,OAAO,kBAAmB,EACnDqL,EAAKrL,EAAI,KACf,OAAI,KAAK,KAAK,mBAAmB2C,GACtB9B,GAAG,SAAUqD,IAAS,CACzB,IAAM1F,EAAQ,IAAIV,GAAS,CAAC,CAAC,EACvBwN,EAAa,MAAM,KAAK,KAAK,KAC9B,WAAWpH,EAAM7E,CAAM,EACvB,MAAO1C,GAAM,CACd,MAAA6B,EAAM,SAAS0M,EAAchH,EAAMvH,CAAC,CAAC,EAC/B6B,CACV,CAAC,EACK8C,EAAS,MAAM+J,EAAG,GAAGC,CAAU,EAOrC,OANsB,MAAM,KAAK,KAAK,QAAQ,KAAK,KAC9C,WAAWhK,EAAQjC,CAAM,EACzB,MAAO1C,GAAM,CACd,MAAA6B,EAAM,SAAS2M,EAAiB7J,EAAQ3E,CAAC,CAAC,EACpC6B,CACV,CAAC,CAEL,CAAC,EAGMqC,GAAG,IAAIqD,IAAS,CACnB,IAAMoH,EAAa,KAAK,KAAK,KAAK,UAAUpH,EAAM7E,CAAM,EACxD,GAAI,CAACiM,EAAW,QACZ,MAAM,IAAIxN,GAAS,CAACoN,EAAchH,EAAMoH,EAAW,KAAK,CAAC,CAAC,EAE9D,IAAMhK,EAAS+J,EAAG,GAAGC,EAAW,IAAI,EAC9BC,EAAgB,KAAK,KAAK,QAAQ,UAAUjK,EAAQjC,CAAM,EAChE,GAAI,CAACkM,EAAc,QACf,MAAM,IAAIzN,GAAS,CAACqN,EAAiB7J,EAAQiK,EAAc,KAAK,CAAC,CAAC,EAEtE,OAAOA,EAAc,IACzB,CAAC,CAET,CACA,YAAa,CACT,OAAO,KAAK,KAAK,IACrB,CACA,YAAa,CACT,OAAO,KAAK,KAAK,OACrB,CACA,QAAQlP,EAAO,CACX,OAAO,IAAI4O,GAAY,CACnB,GAAG,KAAK,KACR,KAAMpE,GAAS,OAAOxK,CAAK,EAAE,KAAKgK,GAAW,OAAO,CAAC,CACzD,CAAC,CACL,CACA,QAAQmF,EAAY,CAChB,OAAO,IAAIP,GAAY,CACnB,GAAG,KAAK,KACR,QAASO,CACb,CAAC,CACL,CACA,UAAUC,EAAM,CAEZ,OADsB,KAAK,MAAMA,CAAI,CAEzC,CACA,gBAAgBA,EAAM,CAElB,OADsB,KAAK,MAAMA,CAAI,CAEzC,CACA,OAAO,OAAOvH,EAAMkH,EAAS/L,EAAQ,CACjC,OAAO,IAAI4L,GAAY,CACnB,KAAO/G,GAED2C,GAAS,OAAO,CAAC,CAAC,EAAE,KAAKR,GAAW,OAAO,CAAC,EAClD,QAAS+E,GAAW/E,GAAW,OAAO,EACtC,SAAU9D,EAAsB,YAChC,GAAGhB,EAAoBlC,CAAM,CACjC,CAAC,CACL,CACJ,EACMgJ,GAAN,cAAsBzG,CAAQ,CAC1B,IAAI,QAAS,CACT,OAAO,KAAK,KAAK,OAAO,CAC5B,CACA,OAAOE,EAAO,CACV,GAAM,CAAE,IAAA9B,CAAI,EAAI,KAAK,oBAAoB8B,CAAK,EAE9C,OADmB,KAAK,KAAK,OAAO,EAClB,OAAO,CAAE,KAAM9B,EAAI,KAAM,KAAMA,EAAI,KAAM,OAAQA,CAAI,CAAC,CAC5E,CACJ,EACAqI,GAAQ,OAAS,CAACqD,EAAQrM,IACf,IAAIgJ,GAAQ,CACf,OAAQqD,EACR,SAAUnJ,EAAsB,QAChC,GAAGhB,EAAoBlC,CAAM,CACjC,CAAC,EAEL,IAAMiJ,GAAN,cAAyB1G,CAAQ,CAC7B,OAAOE,EAAO,CACV,GAAIA,EAAM,OAAS,KAAK,KAAK,MAAO,CAChC,IAAM9B,EAAM,KAAK,gBAAgB8B,CAAK,EACtC,OAAA/B,EAAkBC,EAAK,CACnB,SAAUA,EAAI,KACd,KAAMpC,EAAa,gBACnB,SAAU,KAAK,KAAK,KACxB,CAAC,EACM2C,EAEX,MAAO,CAAE,OAAQ,QAAS,MAAOuB,EAAM,IAAK,CAChD,CACA,IAAI,OAAQ,CACR,OAAO,KAAK,KAAK,KACrB,CACJ,EACAwG,GAAW,OAAS,CAACjL,EAAOgC,IACjB,IAAIiJ,GAAW,CAClB,MAAOjL,EACP,SAAUkF,EAAsB,WAChC,GAAGhB,EAAoBlC,CAAM,CACjC,CAAC,EAEL,SAASwI,GAAc8D,EAAQtM,EAAQ,CACnC,OAAO,IAAIkJ,GAAQ,CACf,OAAQoD,EACR,SAAUpJ,EAAsB,QAChC,GAAGhB,EAAoBlC,CAAM,CACjC,CAAC,CACL,CACA,IAAMkJ,GAAN,cAAsB3G,CAAQ,CAC1B,OAAOE,EAAO,CACV,GAAI,OAAOA,EAAM,MAAS,SAAU,CAChC,IAAM9B,EAAM,KAAK,gBAAgB8B,CAAK,EAChC8J,EAAiB,KAAK,KAAK,OACjC,OAAA7L,EAAkBC,EAAK,CACnB,SAAUjE,EAAK,WAAW6P,CAAc,EACxC,SAAU5L,EAAI,WACd,KAAMpC,EAAa,YACvB,CAAC,EACM2C,EAEX,GAAI,KAAK,KAAK,OAAO,QAAQuB,EAAM,IAAI,IAAM,GAAI,CAC7C,IAAM9B,EAAM,KAAK,gBAAgB8B,CAAK,EAChC8J,EAAiB,KAAK,KAAK,OACjC,OAAA7L,EAAkBC,EAAK,CACnB,SAAUA,EAAI,KACd,KAAMpC,EAAa,mBACnB,QAASgO,CACb,CAAC,EACMrL,EAEX,OAAOM,GAAGiB,EAAM,IAAI,CACxB,CACA,IAAI,SAAU,CACV,OAAO,KAAK,KAAK,MACrB,CACA,IAAI,MAAO,CACP,IAAM+J,EAAa,CAAC,EACpB,QAAW7P,KAAO,KAAK,KAAK,OACxB6P,EAAW7P,CAAG,EAAIA,EAEtB,OAAO6P,CACX,CACA,IAAI,QAAS,CACT,IAAMA,EAAa,CAAC,EACpB,QAAW7P,KAAO,KAAK,KAAK,OACxB6P,EAAW7P,CAAG,EAAIA,EAEtB,OAAO6P,CACX,CACA,IAAI,MAAO,CACP,IAAMA,EAAa,CAAC,EACpB,QAAW7P,KAAO,KAAK,KAAK,OACxB6P,EAAW7P,CAAG,EAAIA,EAEtB,OAAO6P,CACX,CACA,QAAQF,EAAQ,CACZ,OAAOpD,GAAQ,OAAOoD,CAAM,CAChC,CACA,QAAQA,EAAQ,CACZ,OAAOpD,GAAQ,OAAO,KAAK,QAAQ,OAAQuD,GAAQ,CAACH,EAAO,SAASG,CAAG,CAAC,CAAC,CAC7E,CACJ,EACAvD,GAAQ,OAASV,GACjB,IAAMW,GAAN,cAA4B5G,CAAQ,CAChC,OAAOE,EAAO,CACV,IAAMiK,EAAmBhQ,EAAK,mBAAmB,KAAK,KAAK,MAAM,EAC3DiE,EAAM,KAAK,gBAAgB8B,CAAK,EACtC,GAAI9B,EAAI,aAAevC,EAAc,QACjCuC,EAAI,aAAevC,EAAc,OAAQ,CACzC,IAAMmO,EAAiB7P,EAAK,aAAagQ,CAAgB,EACzD,OAAAhM,EAAkBC,EAAK,CACnB,SAAUjE,EAAK,WAAW6P,CAAc,EACxC,SAAU5L,EAAI,WACd,KAAMpC,EAAa,YACvB,CAAC,EACM2C,EAEX,GAAIwL,EAAiB,QAAQjK,EAAM,IAAI,IAAM,GAAI,CAC7C,IAAM8J,EAAiB7P,EAAK,aAAagQ,CAAgB,EACzD,OAAAhM,EAAkBC,EAAK,CACnB,SAAUA,EAAI,KACd,KAAMpC,EAAa,mBACnB,QAASgO,CACb,CAAC,EACMrL,EAEX,OAAOM,GAAGiB,EAAM,IAAI,CACxB,CACA,IAAI,MAAO,CACP,OAAO,KAAK,KAAK,MACrB,CACJ,EACA0G,GAAc,OAAS,CAACmD,EAAQtM,IACrB,IAAImJ,GAAc,CACrB,OAAQmD,EACR,SAAUpJ,EAAsB,cAChC,GAAGhB,EAAoBlC,CAAM,CACjC,CAAC,EAEL,IAAMsD,GAAN,cAAyBf,CAAQ,CAC7B,QAAS,CACL,OAAO,KAAK,KAAK,IACrB,CACA,OAAOE,EAAO,CACV,GAAM,CAAE,IAAA9B,CAAI,EAAI,KAAK,oBAAoB8B,CAAK,EAC9C,GAAI9B,EAAI,aAAevC,EAAc,SACjCuC,EAAI,OAAO,QAAU,GACrB,OAAAD,EAAkBC,EAAK,CACnB,KAAMpC,EAAa,aACnB,SAAUH,EAAc,QACxB,SAAUuC,EAAI,UAClB,CAAC,EACMO,EAEX,IAAMyL,EAAchM,EAAI,aAAevC,EAAc,QAC/CuC,EAAI,KACJ,QAAQ,QAAQA,EAAI,IAAI,EAC9B,OAAOa,GAAGmL,EAAY,KAAMrO,GACjB,KAAK,KAAK,KAAK,WAAWA,EAAM,CACnC,KAAMqC,EAAI,KACV,SAAUA,EAAI,OAAO,kBACzB,CAAC,CACJ,CAAC,CACN,CACJ,EACA2C,GAAW,OAAS,CAAC6D,EAAQnH,IAClB,IAAIsD,GAAW,CAClB,KAAM6D,EACN,SAAUjE,EAAsB,WAChC,GAAGhB,EAAoBlC,CAAM,CACjC,CAAC,EAEL,IAAMiD,GAAN,cAAyBV,CAAQ,CAC7B,WAAY,CACR,OAAO,KAAK,KAAK,MACrB,CACA,YAAa,CACT,OAAO,KAAK,KAAK,OAAO,KAAK,WAAaW,EAAsB,WAC1D,KAAK,KAAK,OAAO,WAAW,EAC5B,KAAK,KAAK,MACpB,CACA,OAAOT,EAAO,CACV,GAAM,CAAE,OAAA3B,EAAQ,IAAAH,CAAI,EAAI,KAAK,oBAAoB8B,CAAK,EAChDmK,EAAS,KAAK,KAAK,QAAU,KACnC,GAAIA,EAAO,OAAS,aAAc,CAC9B,IAAMC,EAAYD,EAAO,UAAUjM,EAAI,IAAI,EAC3C,OAAIA,EAAI,OAAO,MACJ,QAAQ,QAAQkM,CAAS,EAAE,KAAMA,GAC7B,KAAK,KAAK,OAAO,YAAY,CAChC,KAAMA,EACN,KAAMlM,EAAI,KACV,OAAQA,CACZ,CAAC,CACJ,EAGM,KAAK,KAAK,OAAO,WAAW,CAC/B,KAAMkM,EACN,KAAMlM,EAAI,KACV,OAAQA,CACZ,CAAC,EAGT,IAAMmM,EAAW,CACb,SAAWC,GAAQ,CACfrM,EAAkBC,EAAKoM,CAAG,EACtBA,EAAI,MACJjM,EAAO,MAAM,EAGbA,EAAO,MAAM,CAErB,EACA,IAAI,MAAO,CACP,OAAOH,EAAI,IACf,CACJ,EAEA,GADAmM,EAAS,SAAWA,EAAS,SAAS,KAAKA,CAAQ,EAC/CF,EAAO,OAAS,aAAc,CAC9B,IAAMI,EAAqBC,GAEtB,CACD,IAAMhL,EAAS2K,EAAO,WAAWK,EAAKH,CAAQ,EAC9C,GAAInM,EAAI,OAAO,MACX,OAAO,QAAQ,QAAQsB,CAAM,EAEjC,GAAIA,aAAkB,QAClB,MAAM,IAAI,MAAM,2FAA2F,EAE/G,OAAOgL,CACX,EACA,GAAItM,EAAI,OAAO,QAAU,GAAO,CAC5B,IAAMuM,EAAQ,KAAK,KAAK,OAAO,WAAW,CACtC,KAAMvM,EAAI,KACV,KAAMA,EAAI,KACV,OAAQA,CACZ,CAAC,EACD,OAAIuM,EAAM,SAAW,UACVhM,GACPgM,EAAM,SAAW,SACjBpM,EAAO,MAAM,EAEjBkM,EAAkBE,EAAM,KAAK,EACtB,CAAE,OAAQpM,EAAO,MAAO,MAAOoM,EAAM,KAAM,OAGlD,QAAO,KAAK,KAAK,OACZ,YAAY,CAAE,KAAMvM,EAAI,KAAM,KAAMA,EAAI,KAAM,OAAQA,CAAI,CAAC,EAC3D,KAAMuM,GACHA,EAAM,SAAW,UACVhM,GACPgM,EAAM,SAAW,SACjBpM,EAAO,MAAM,EACVkM,EAAkBE,EAAM,KAAK,EAAE,KAAK,KAChC,CAAE,OAAQpM,EAAO,MAAO,MAAOoM,EAAM,KAAM,EACrD,EACJ,EAGT,GAAIN,EAAO,OAAS,YAChB,GAAIjM,EAAI,OAAO,QAAU,GAAO,CAC5B,IAAMwM,EAAO,KAAK,KAAK,OAAO,WAAW,CACrC,KAAMxM,EAAI,KACV,KAAMA,EAAI,KACV,OAAQA,CACZ,CAAC,EACD,GAAI,CAACgB,GAAQwL,CAAI,EACb,OAAOA,EACX,IAAMlL,EAAS2K,EAAO,UAAUO,EAAK,MAAOL,CAAQ,EACpD,GAAI7K,aAAkB,QAClB,MAAM,IAAI,MAAM,iGAAiG,EAErH,MAAO,CAAE,OAAQnB,EAAO,MAAO,MAAOmB,CAAO,MAG7C,QAAO,KAAK,KAAK,OACZ,YAAY,CAAE,KAAMtB,EAAI,KAAM,KAAMA,EAAI,KAAM,OAAQA,CAAI,CAAC,EAC3D,KAAMwM,GACFxL,GAAQwL,CAAI,EAEV,QAAQ,QAAQP,EAAO,UAAUO,EAAK,MAAOL,CAAQ,CAAC,EAAE,KAAM7K,IAAY,CAAE,OAAQnB,EAAO,MAAO,MAAOmB,CAAO,EAAE,EAD9GkL,CAEd,EAGTzQ,EAAK,YAAYkQ,CAAM,CAC3B,CACJ,EACA3J,GAAW,OAAS,CAACkE,EAAQyF,EAAQ5M,IAC1B,IAAIiD,GAAW,CAClB,OAAAkE,EACA,SAAUjE,EAAsB,WAChC,OAAA0J,EACA,GAAG1K,EAAoBlC,CAAM,CACjC,CAAC,EAELiD,GAAW,qBAAuB,CAACmK,EAAYjG,EAAQnH,IAC5C,IAAIiD,GAAW,CAClB,OAAAkE,EACA,OAAQ,CAAE,KAAM,aAAc,UAAWiG,CAAW,EACpD,SAAUlK,EAAsB,WAChC,GAAGhB,EAAoBlC,CAAM,CACjC,CAAC,EAEL,IAAMmD,GAAN,cAA0BZ,CAAQ,CAC9B,OAAOE,EAAO,CAEV,OADmB,KAAK,SAASA,CAAK,IACnBrE,EAAc,UACtBoD,GAAG,MAAS,EAEhB,KAAK,KAAK,UAAU,OAAOiB,CAAK,CAC3C,CACA,QAAS,CACL,OAAO,KAAK,KAAK,SACrB,CACJ,EACAU,GAAY,OAAS,CAAC4F,EAAM/I,IACjB,IAAImD,GAAY,CACnB,UAAW4F,EACX,SAAU7F,EAAsB,YAChC,GAAGhB,EAAoBlC,CAAM,CACjC,CAAC,EAEL,IAAMoD,GAAN,cAA0Bb,CAAQ,CAC9B,OAAOE,EAAO,CAEV,OADmB,KAAK,SAASA,CAAK,IACnBrE,EAAc,KACtBoD,GAAG,IAAI,EAEX,KAAK,KAAK,UAAU,OAAOiB,CAAK,CAC3C,CACA,QAAS,CACL,OAAO,KAAK,KAAK,SACrB,CACJ,EACAW,GAAY,OAAS,CAAC2F,EAAM/I,IACjB,IAAIoD,GAAY,CACnB,UAAW2F,EACX,SAAU7F,EAAsB,YAChC,GAAGhB,EAAoBlC,CAAM,CACjC,CAAC,EAEL,IAAM6D,GAAN,cAAyBtB,CAAQ,CAC7B,OAAOE,EAAO,CACV,GAAM,CAAE,IAAA9B,CAAI,EAAI,KAAK,oBAAoB8B,CAAK,EAC1CnE,EAAOqC,EAAI,KACf,OAAIA,EAAI,aAAevC,EAAc,YACjCE,EAAO,KAAK,KAAK,aAAa,GAE3B,KAAK,KAAK,UAAU,OAAO,CAC9B,KAAAA,EACA,KAAMqC,EAAI,KACV,OAAQA,CACZ,CAAC,CACL,CACA,eAAgB,CACZ,OAAO,KAAK,KAAK,SACrB,CACJ,EACAkD,GAAW,OAAS,CAACkF,EAAM/I,IAChB,IAAI6D,GAAW,CAClB,UAAWkF,EACX,SAAU7F,EAAsB,WAChC,aAAc,OAAOlD,EAAO,SAAY,WAClCA,EAAO,QACP,IAAMA,EAAO,QACnB,GAAGkC,EAAoBlC,CAAM,CACjC,CAAC,EAEL,IAAMgE,GAAN,cAAuBzB,CAAQ,CAC3B,OAAOE,EAAO,CACV,GAAM,CAAE,IAAA9B,CAAI,EAAI,KAAK,oBAAoB8B,CAAK,EAExC4K,EAAS,CACX,GAAG1M,EACH,OAAQ,CACJ,GAAGA,EAAI,OACP,OAAQ,CAAC,CACb,CACJ,EACMsB,EAAS,KAAK,KAAK,UAAU,OAAO,CACtC,KAAMoL,EAAO,KACb,KAAMA,EAAO,KACb,OAAQ,CACJ,GAAGA,CACP,CACJ,CAAC,EACD,OAAIzL,GAAQK,CAAM,EACPA,EAAO,KAAMA,IACT,CACH,OAAQ,QACR,MAAOA,EAAO,SAAW,QACnBA,EAAO,MACP,KAAK,KAAK,WAAW,CACnB,IAAI,OAAQ,CACR,OAAO,IAAIxD,GAAS4O,EAAO,OAAO,MAAM,CAC5C,EACA,MAAOA,EAAO,IAClB,CAAC,CACT,EACH,EAGM,CACH,OAAQ,QACR,MAAOpL,EAAO,SAAW,QACnBA,EAAO,MACP,KAAK,KAAK,WAAW,CACnB,IAAI,OAAQ,CACR,OAAO,IAAIxD,GAAS4O,EAAO,OAAO,MAAM,CAC5C,EACA,MAAOA,EAAO,IAClB,CAAC,CACT,CAER,CACA,aAAc,CACV,OAAO,KAAK,KAAK,SACrB,CACJ,EACArJ,GAAS,OAAS,CAAC+E,EAAM/I,IACd,IAAIgE,GAAS,CAChB,UAAW+E,EACX,SAAU7F,EAAsB,SAChC,WAAY,OAAOlD,EAAO,OAAU,WAAaA,EAAO,MAAQ,IAAMA,EAAO,MAC7E,GAAGkC,EAAoBlC,CAAM,CACjC,CAAC,EAEL,IAAMsN,GAAN,cAAqB/K,CAAQ,CACzB,OAAOE,EAAO,CAEV,GADmB,KAAK,SAASA,CAAK,IACnBrE,EAAc,IAAK,CAClC,IAAMuC,EAAM,KAAK,gBAAgB8B,CAAK,EACtC,OAAA/B,EAAkBC,EAAK,CACnB,KAAMpC,EAAa,aACnB,SAAUH,EAAc,IACxB,SAAUuC,EAAI,UAClB,CAAC,EACMO,EAEX,MAAO,CAAE,OAAQ,QAAS,MAAOuB,EAAM,IAAK,CAChD,CACJ,EACA6K,GAAO,OAAUtN,GACN,IAAIsN,GAAO,CACd,SAAUpK,EAAsB,OAChC,GAAGhB,EAAoBlC,CAAM,CACjC,CAAC,EAEL,IAAMuN,GAAQ,OAAO,WAAW,EAC1BzJ,GAAN,cAAyBvB,CAAQ,CAC7B,OAAOE,EAAO,CACV,GAAM,CAAE,IAAA9B,CAAI,EAAI,KAAK,oBAAoB8B,CAAK,EACxCnE,EAAOqC,EAAI,KACjB,OAAO,KAAK,KAAK,KAAK,OAAO,CACzB,KAAArC,EACA,KAAMqC,EAAI,KACV,OAAQA,CACZ,CAAC,CACL,CACA,QAAS,CACL,OAAO,KAAK,KAAK,IACrB,CACJ,EACMwD,GAAN,cAA0B5B,CAAQ,CAC9B,OAAOE,EAAO,CACV,GAAM,CAAE,OAAA3B,EAAQ,IAAAH,CAAI,EAAI,KAAK,oBAAoB8B,CAAK,EACtD,GAAI9B,EAAI,OAAO,MAqBX,OApBoB,SAAY,CAC5B,IAAM6M,EAAW,MAAM,KAAK,KAAK,GAAG,YAAY,CAC5C,KAAM7M,EAAI,KACV,KAAMA,EAAI,KACV,OAAQA,CACZ,CAAC,EACD,OAAI6M,EAAS,SAAW,UACbtM,EACPsM,EAAS,SAAW,SACpB1M,EAAO,MAAM,EACNS,GAAMiM,EAAS,KAAK,GAGpB,KAAK,KAAK,IAAI,YAAY,CAC7B,KAAMA,EAAS,MACf,KAAM7M,EAAI,KACV,OAAQA,CACZ,CAAC,CAET,GACmB,EAElB,CACD,IAAM6M,EAAW,KAAK,KAAK,GAAG,WAAW,CACrC,KAAM7M,EAAI,KACV,KAAMA,EAAI,KACV,OAAQA,CACZ,CAAC,EACD,OAAI6M,EAAS,SAAW,UACbtM,EACPsM,EAAS,SAAW,SACpB1M,EAAO,MAAM,EACN,CACH,OAAQ,QACR,MAAO0M,EAAS,KACpB,GAGO,KAAK,KAAK,IAAI,WAAW,CAC5B,KAAMA,EAAS,MACf,KAAM7M,EAAI,KACV,OAAQA,CACZ,CAAC,EAGb,CACA,OAAO,OAAO+I,EAAGC,EAAG,CAChB,OAAO,IAAIxF,GAAY,CACnB,GAAIuF,EACJ,IAAKC,EACL,SAAUzG,EAAsB,WACpC,CAAC,CACL,CACJ,EACMuK,GAAS,CAAC7K,EAAO5C,EAAS,CAAC,EAWjC0N,IACQ9K,EACOmE,GAAO,OAAO,EAAE,YAAY,CAACzI,EAAMqC,IAAQ,CAC9C,IAAI+B,EAAIqF,EACR,GAAI,CAACnF,EAAMtE,CAAI,EAAG,CACd,IAAMqP,EAAI,OAAO3N,GAAW,WACtBA,EAAO1B,CAAI,EACX,OAAO0B,GAAW,SACd,CAAE,QAASA,CAAO,EAClBA,EACJ4N,GAAU7F,GAAMrF,EAAKiL,EAAE,SAAW,MAAQjL,IAAO,OAASA,EAAKgL,KAAW,MAAQ3F,IAAO,OAASA,EAAK,GACvG8F,EAAK,OAAOF,GAAM,SAAW,CAAE,QAASA,CAAE,EAAIA,EACpDhN,EAAI,SAAS,CAAE,KAAM,SAAU,GAAGkN,EAAI,MAAOD,CAAO,CAAC,EAE7D,CAAC,EACE7G,GAAO,OAAO,EAEnB+G,GAAO,CACT,OAAQzG,EAAU,UACtB,EACInE,GACH,SAAUA,EAAuB,CAC9BA,EAAsB,UAAe,YACrCA,EAAsB,UAAe,YACrCA,EAAsB,OAAY,SAClCA,EAAsB,UAAe,YACrCA,EAAsB,WAAgB,aACtCA,EAAsB,QAAa,UACnCA,EAAsB,UAAe,YACrCA,EAAsB,aAAkB,eACxCA,EAAsB,QAAa,UACnCA,EAAsB,OAAY,SAClCA,EAAsB,WAAgB,aACtCA,EAAsB,SAAc,WACpCA,EAAsB,QAAa,UACnCA,EAAsB,SAAc,WACpCA,EAAsB,UAAe,YACrCA,EAAsB,SAAc,WACpCA,EAAsB,sBAA2B,wBACjDA,EAAsB,gBAAqB,kBAC3CA,EAAsB,SAAc,WACpCA,EAAsB,UAAe,YACrCA,EAAsB,OAAY,SAClCA,EAAsB,OAAY,SAClCA,EAAsB,YAAiB,cACvCA,EAAsB,QAAa,UACnCA,EAAsB,WAAgB,aACtCA,EAAsB,QAAa,UACnCA,EAAsB,WAAgB,aACtCA,EAAsB,cAAmB,gBACzCA,EAAsB,YAAiB,cACvCA,EAAsB,YAAiB,cACvCA,EAAsB,WAAgB,aACtCA,EAAsB,SAAc,WACpCA,EAAsB,WAAgB,aACtCA,EAAsB,WAAgB,aACtCA,EAAsB,YAAiB,aAC3C,GAAGA,IAA0BA,EAAwB,CAAC,EAAE,EACxD,IAAM6K,GAAiB,CAEvBC,EAAKhO,EAAS,CACV,QAAS,yBAAyBgO,EAAI,MAC1C,IAAMP,GAAQnP,GAASA,aAAgB0P,EAAKhO,CAAM,EAC5CiO,GAAahJ,GAAU,OACvBiJ,GAAa9H,GAAU,OACvB+H,GAAUb,GAAO,OACjBc,GAAa7H,GAAU,OACvB8H,GAAc7H,GAAW,OACzB8H,GAAW7H,GAAQ,OACnB8H,GAAa3H,GAAU,OACvB4H,GAAgB3H,GAAa,OAC7B4H,GAAW3H,GAAQ,OACnB4H,GAAU3H,GAAO,OACjB4H,GAAc3H,GAAW,OACzB4H,GAAY3H,GAAS,OACrB4H,GAAW3H,GAAQ,OACnB4H,GAAYzL,GAAS,OACrB0L,GAAa1H,EAAU,OACvB2H,GAAmB3H,EAAU,aAC7B4H,GAAYzL,GAAS,OACrB0L,GAAyB9F,GAAsB,OAC/C+F,GAAmBzL,GAAgB,OACnC0L,GAAY5H,GAAS,OACrB6H,GAAavE,GAAU,OACvBwE,GAAUpE,GAAO,OACjBqE,GAAUnE,GAAO,OACjBoE,GAAe5D,GAAY,OAC3B6D,GAAWzG,GAAQ,OACnB0G,GAAczG,GAAW,OACzB0G,GAAWzG,GAAQ,OACnB0G,GAAiBzG,GAAc,OAC/B0G,GAAcvM,GAAW,OACzBwM,GAAc7M,GAAW,OACzB8M,GAAe5M,GAAY,OAC3B6M,GAAe5M,GAAY,OAC3B6M,GAAiBhN,GAAW,qBAC5BiN,GAAe/L,GAAY,OAC3BgM,GAAU,IAAMlC,GAAW,EAAE,SAAS,EACtCmC,GAAU,IAAMlC,GAAW,EAAE,SAAS,EACtCmC,GAAW,IAAMhC,GAAY,EAAE,SAAS,EACxCiC,GAAS,CACX,OAAUvD,GAAQ9H,GAAU,OAAO,CAAE,GAAG8H,EAAK,OAAQ,EAAK,CAAC,EAC3D,OAAUA,GAAQ3G,GAAU,OAAO,CAAE,GAAG2G,EAAK,OAAQ,EAAK,CAAC,EAC3D,QAAWA,GAAQvG,GAAW,OAAO,CACjC,GAAGuG,EACH,OAAQ,EACZ,CAAC,EACD,OAAUA,GAAQxG,GAAU,OAAO,CAAE,GAAGwG,EAAK,OAAQ,EAAK,CAAC,EAC3D,KAAQA,GAAQtG,GAAQ,OAAO,CAAE,GAAGsG,EAAK,OAAQ,EAAK,CAAC,CAC3D,EACMwD,GAAQrP,EAEVsP,EAAiB,OAAO,OAAO,CAC/B,UAAW,KACX,gBAAiBhR,GACjB,YAAaI,GACb,YAAaE,GACb,UAAWC,GACX,WAAYU,GACZ,kBAAmBC,EACnB,YAAaG,EACb,QAASK,EACT,MAAOK,GACP,GAAIC,GACJ,UAAWC,GACX,QAASC,GACT,QAASC,GACT,QAASC,GACT,IAAI,MAAQ,CAAE,OAAOlF,CAAM,EAC3B,IAAI,YAAc,CAAE,OAAOuB,EAAY,EACvC,cAAeG,EACf,cAAeC,GACf,QAASkE,EACT,UAAW0C,GACX,UAAWmB,GACX,UAAWG,GACX,WAAYC,GACZ,QAASC,GACT,UAAWG,GACX,aAAcC,GACd,QAASC,GACT,OAAQC,GACR,WAAYC,GACZ,SAAUC,GACV,QAASC,GACT,SAAU7D,GACV,UAAWgE,EACX,SAAU7D,GACV,sBAAuB4F,GACvB,gBAAiB1F,GACjB,SAAU8D,GACV,UAAWsD,GACX,OAAQI,GACR,OAAQE,GACR,YAAaQ,GACb,QAAS5C,GACT,WAAYC,GACZ,QAASC,GACT,cAAeC,GACf,WAAY7F,GACZ,WAAYL,GACZ,eAAgBA,GAChB,YAAaE,GACb,YAAaC,GACb,WAAYS,GACZ,SAAUG,GACV,OAAQsJ,GACR,MAAOC,GACP,WAAYzJ,GACZ,YAAaK,GACb,OAAQsJ,GACR,OAAQlL,EACR,UAAWA,EACX,KAAMuL,GACN,IAAI,uBAAyB,CAAE,OAAO5K,CAAuB,EAC7D,OAAQoN,GACR,IAAK5B,GACL,MAAOI,GACP,OAAQV,GACR,QAASC,GACT,KAAMC,GACN,mBAAoBY,GACpB,OAAQY,GACR,KAAQH,GACR,SAAYH,GACZ,WAAczB,GACd,aAAcoB,GACd,KAAMM,GACN,QAASC,GACT,IAAKJ,GACL,IAAKnB,GACL,WAAYyB,GACZ,MAAOhB,GACP,KAAQH,GACR,SAAUuB,GACV,OAAQ9B,GACR,OAAQa,GACR,SAAUsB,GACV,QAASD,GACT,SAAUL,GACV,QAASI,GACT,SAAUD,GACV,WAAYD,GACZ,QAASJ,GACT,OAAQR,GACR,IAAKE,GACL,aAAcP,GACd,OAAQf,GACR,OAAQM,GACR,YAAauB,GACb,MAAOV,GACP,UAAaZ,GACb,MAAOS,GACP,QAASN,GACT,KAAQE,GACR,MAAO0B,GACP,aAAchS,EACd,cAAeC,GACf,SAAUC,EACd,CAAC,ECz2HM,IAAMgS,GAAYC,EAAE,OAAO,EAErBC,GAAWD,EAAE,OAAO,EAGpBE,GAAOF,EAAE,OAAO,EAIhBG,GAASH,EAAE,OAAO,EAElBI,GAAcJ,EAAE,OAAO,EAGvBK,GAAWL,EAAE,OAAO,EAEpBM,GAAcN,EAAE,OAAO,EAEvBO,GAAaP,EAAE,WAAW,OAAO,IAAI,EAErCQ,GAAeR,EAAE,KAAK,CAAC,QAAS,KAAK,CAAC,EAEtCS,GAAaT,EAAE,KAAK,CAAC,OAAQ,UAAW,UAAW,OAAO,CAAC,EAE3DU,GAAWV,EAAE,KAAK,CAAC,MAAO,IAAI,CAAC,EAO/BW,GAAWX,EAAE,OAAO,CAC7B,KAAMA,EAAE,OAAO,EACf,IAAKA,EAAE,OAAO,CAClB,CAAC,EAAE,OAAO,EAOGY,GAAmBZ,EAAE,OAAO,CACrC,QAASA,EAAE,OAAO,EAClB,QAASA,EAAE,OAAO,CACtB,CAAC,EAAE,OAAO,EAOGa,GAAOb,EAAE,OAAO,CACzB,MAAOA,EAAE,OAAO,EAChB,OAAQA,EAAE,OAAO,CACrB,CAAC,EAAE,OAAO,EAOGc,GAAQd,EAAE,OAAO,CAC1B,GAAIA,EAAE,OAAO,EACb,GAAIA,EAAE,OAAO,CACjB,CAAC,EAAE,OAAO,EAsBGe,GAAQf,EAAE,KAAK,CAAC,SAAU,SAAU,SAAU,UAAW,OAAQ,OAAQ,MAAO,SAAU,QAAS,SAAU,OAAQ,QAAS,UAAW,OAAQ,OAAQ,MAAO,OAAQ,MAAM,CAAC,EAEtLgB,GAAgBhB,EAAE,MAAM,CAACA,EAAE,OAAO,EAAGA,EAAE,OAAO,EAAGA,EAAE,QAAQ,EAAGA,EAAE,KAAK,CAAC,CAAC,EAGhEiB,GAAwBjB,EAAE,KAAK,IAAMA,EAAE,MAAM,CAACgB,GAAehB,EAAE,MAAMiB,EAAI,EAAGjB,EAAE,OAAOiB,EAAI,CAAC,CAAC,CAAC,EC7FlG,IAAMC,GAAOC,EAAE,OAAO,EAAE,KAAK,EAEvBC,GAAa,uCCDnB,IAAMC,GAAWC,GAMXC,GAAiBC,EAAE,OAAO,CACnC,GAAIH,EACR,CAAC,EAAE,OAAO,ECNH,IAAMI,GAAiBC,GAEjBC,GAAmBC,GAEnBC,GAAmBC,EAAE,OAAO,EAE5BC,GAASD,EAAE,KAAK,CAAC,OAAQ,KAAK,CAAC,EAa/BE,GAAOF,EAAE,OAAO,CACzB,GAAIC,GACJ,KAAMD,EAAE,OAAO,EACf,QAASA,EAAE,OAAO,EAAE,SAAS,EAC7B,MAAOA,EAAE,OAAO,EAAE,SAAS,EAC3B,OAAQA,EAAE,QAAQ,EAClB,cAAeA,EAAE,QAAQ,EACzB,YAAaA,EAAE,QAAQ,EACvB,UAAWA,EAAE,QAAQ,CACzB,CAAC,EAAE,OAAO,EAaGG,GAAeH,EAAE,OAAO,CACjC,GAAIL,GACJ,KAAME,GACN,KAAME,GACN,KAAMG,GACN,KAAMF,EAAE,OAAO,EAAE,IAAI,EACrB,SAAUA,EAAE,OAAO,EAAE,SAAS,EAC9B,YAAaA,EAAE,OAAO,EAAE,SAAS,EACjC,OAAQI,GAAe,SAAS,CACpC,CAAC,EAAE,OAAO,ECxDH,IAAMC,GAAU,CAAyBC,EAAWC,IACvDD,EAAK,OAAO,CAACE,EAAKC,IAAS,CACvB,IAAMC,EAAMH,EAAOE,CAAI,EACvB,OAAKD,EAAIE,CAAG,IAAGF,EAAIE,CAAG,EAAI,CAAC,GAC3BF,EAAIE,CAAG,EAAE,KAAKD,CAAI,EACXD,CACX,EAAG,CAAC,CAAmB,ECJpB,SAASG,GAAaC,EAAUC,EAAmBC,EAAuB,CAC7E,OAAO,KAAK,UAAUC,EAASH,EAAOC,EAAKC,CAAK,CAAC,CACrD,CAEO,SAASC,EAAYH,EAAUC,EAAmBC,EAAkB,CACvE,IAAME,EAAMH,EAAI,UAAUD,CAAK,EAC/B,GAAII,EAAI,QACJ,OAAOA,EAAI,KACR,CACH,IAAMC,EAAaD,EAAI,MAAM,OAAO,IAAIE,GAAKC,GAAYP,EAAOM,CAAC,CAAC,EAC5DE,EAAYJ,EAAI,MAAM,OAAO,IAAIE,GAAKG,GAAcT,EAAOM,CAAC,CAAC,EACnE,cAAQ,MAAM,WAAWJ,IAASG,EAAW,OAAS,EAAIA,EAAaA,EAAW,CAAC,EAAGL,CAAK,EACrF,MAAM,WAAWE,IAAQM,EAAU,OAAS,EAAI,KAAKA,EAAU,iBAAmB,OAAOA,EAAU,KAAK,IAAI,GAAG,EAE7H,CAEA,SAASC,GAAcT,EAAYU,EAA2B,CAC1D,OAAIA,EAAM,OAASC,EAAE,aAAa,kBACvB,MAAMC,GAAaF,EAAM,IAAI,4BAA4BA,EAAM,KAAK,OAAS,EAAI,KAAO,MAAMA,EAAM,KAAK,IAAIG,GAAK,IAAIA,OAAO,KAAK,UAAUC,EAASd,EAAOU,EAAM,KAAK,OAAOG,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,IAAI,IAChMH,EAAM,OAASC,EAAE,aAAa,aAC9B,MAAMC,GAAaF,EAAM,IAAI,cAAcA,EAAM,sBAAsBA,EAAM,cAAc,KAAK,UAAUI,EAASd,EAAOU,EAAM,IAAI,CAAC,KACrIA,EAAM,OAASC,EAAE,aAAa,gBAC9B,MAAMC,GAAaF,EAAM,IAAI,aAAa,KAAK,UAAUA,EAAM,QAAQ,aAAa,KAAK,UAAUI,EAASd,EAAOU,EAAM,IAAI,CAAC,IAC9HA,EAAM,OAASC,EAAE,aAAa,mBAC9B,MAAMC,GAAaF,EAAM,IAAI,eAAeA,EAAM,QAAQ,IAAIK,GAAK,KAAK,UAAUA,CAAC,CAAC,EAAE,KAAK,KAAK,eAAe,KAAK,UAAUD,EAASd,EAAOU,EAAM,IAAI,CAAC,IACzJA,EAAM,OAASC,EAAE,aAAa,4BAC9B,MAAMC,GAAaF,EAAM,IAAI,eAAeA,EAAM,QAAQ,IAAIK,GAAK,KAAK,UAAUA,CAAC,CAAC,EAAE,KAAK,KAAK,eAAe,KAAK,UAAUD,EAASd,EAAOU,EAAM,IAAI,CAAC,IACzJA,EAAM,OAASC,EAAE,aAAa,cAC9B,MAAMC,GAAaF,EAAM,IAAI,wBAAwB,KAAK,UAAUM,GAAQF,EAASd,EAAOU,EAAM,IAAI,EAAG,CAAC,CAAC,IAE3GA,EAAM,OAErB,CAEA,SAASE,GAAaK,EAAmC,CACrD,OAAIA,EAAK,SAAW,EACT,SAEA,IAAIA,EAAK,KAAK,GAAG,GAEhC,CAEA,SAASC,GAAYlB,EAAYmB,EAA6B,CAC1D,OAAOA,EAAM,OAAO,IAAIb,GAAKC,GAAYP,EAAOM,CAAC,CAAC,CACtD,CAEA,SAASC,GAAYP,EAAYU,EAA2B,CAExD,GAAIA,EAAM,OAASC,EAAE,aAAa,aAC9B,MAAO,CAAC,KAAMD,EAAM,KAAM,KAAMA,EAAM,KAAM,MAAOM,GAAQF,EAASd,EAAOU,EAAM,IAAI,EAAG,CAAK,EAAG,QAASA,EAAM,QAAS,SAAUA,EAAM,SAAU,SAAUA,EAAM,QAAQ,EACvK,GAAIA,EAAM,OAASC,EAAE,aAAa,gBACrC,MAAO,CAAC,KAAMD,EAAM,KAAM,KAAMA,EAAM,KAAM,MAAOM,GAAQF,EAASd,EAAOU,EAAM,IAAI,EAAG,CAAK,EAAG,QAASA,EAAM,QAAS,SAAUA,EAAM,QAAQ,EAC7I,GAAIA,EAAM,OAASC,EAAE,aAAa,kBACrC,MAAO,CAAC,KAAMD,EAAM,KAAM,KAAMA,EAAM,KAAM,MAAOM,GAAQF,EAASd,EAAOU,EAAM,IAAI,EAAG,CAAK,EAAG,QAASA,EAAM,QAAS,KAAMA,EAAM,IAAI,EACrI,GAAIA,EAAM,OAASC,EAAE,aAAa,cACrC,MAAO,CAAC,KAAMD,EAAM,KAAM,KAAMA,EAAM,KAAM,MAAOM,GAAQF,EAASd,EAAOU,EAAM,IAAI,EAAG,CAAK,EAAG,QAASA,EAAM,QAAS,YAAaA,EAAM,YAAY,IAAIU,GAAKF,GAAYlB,EAAOoB,CAAC,CAAC,CAAC,EACnL,GAAIV,EAAM,OAASC,EAAE,aAAa,4BACrC,MAAO,CAAC,KAAMD,EAAM,KAAM,KAAMA,EAAM,KAAM,MAAOM,GAAQF,EAASd,EAAOU,EAAM,IAAI,EAAG,CAAK,EAAG,QAASA,EAAM,QAAS,QAASA,EAAM,OAAO,EAC3I,GAAIA,EAAM,OAASC,EAAE,aAAa,mBACrC,MAAO,CAAC,KAAMD,EAAM,KAAM,KAAMA,EAAM,KAAM,MAAOM,GAAQF,EAASd,EAAOU,EAAM,IAAI,EAAG,CAAK,EAAG,QAASA,EAAM,QAAS,QAASA,EAAM,QAAS,SAAUA,EAAM,QAAQ,EACrK,GAAIA,EAAM,OAASC,EAAE,aAAa,kBACrC,MAAO,CAAC,KAAMD,EAAM,KAAM,KAAMA,EAAM,KAAM,MAAOM,GAAQF,EAASd,EAAOU,EAAM,IAAI,EAAG,CAAK,EAAG,QAASA,EAAM,QAAS,eAAgBA,EAAM,cAAc,EACzJ,GAAIA,EAAM,OAASC,EAAE,aAAa,oBACrC,MAAO,CAAC,KAAMD,EAAM,KAAM,KAAMA,EAAM,KAAM,MAAOM,GAAQF,EAASd,EAAOU,EAAM,IAAI,EAAG,CAAK,EAAG,QAASA,EAAM,QAAS,gBAAiBA,EAAM,eAAe,EAC3J,GAAIA,EAAM,OAASC,EAAE,aAAa,aACrC,MAAO,CAAC,KAAMD,EAAM,KAAM,KAAMA,EAAM,KAAM,MAAOM,GAAQF,EAASd,EAAOU,EAAM,IAAI,EAAG,CAAK,EAAG,QAASA,EAAM,OAAO,EACnH,GAAIA,EAAM,OAASC,EAAE,aAAa,eACrC,MAAO,CAAC,KAAMD,EAAM,KAAM,KAAMA,EAAM,KAAM,MAAOM,GAAQF,EAASd,EAAOU,EAAM,IAAI,EAAG,CAAK,EAAG,QAASA,EAAM,QAAS,WAAYA,EAAM,UAAU,EACjJ,GAAIA,EAAM,OAASC,EAAE,aAAa,UACrC,MAAO,CAAC,KAAMD,EAAM,KAAM,KAAMA,EAAM,KAAM,MAAOM,GAAQF,EAASd,EAAOU,EAAM,IAAI,EAAG,CAAK,EAAG,QAASA,EAAM,QAAS,KAAMA,EAAM,KAAM,QAASA,EAAM,QAAS,UAAWA,EAAM,SAAS,EACzL,GAAIA,EAAM,OAASC,EAAE,aAAa,QACrC,MAAO,CAAC,KAAMD,EAAM,KAAM,KAAMA,EAAM,KAAM,MAAOM,GAAQF,EAASd,EAAOU,EAAM,IAAI,EAAG,CAAK,EAAG,QAASA,EAAM,QAAS,KAAMA,EAAM,KAAM,QAASA,EAAM,QAAS,UAAWA,EAAM,SAAS,EACzL,GAAIA,EAAM,OAASC,EAAE,aAAa,2BACrC,MAAO,CAAC,KAAMD,EAAM,KAAM,KAAMA,EAAM,KAAM,MAAOM,GAAQF,EAASd,EAAOU,EAAM,IAAI,EAAG,CAAK,EAAG,QAASA,EAAM,OAAO,EACnH,GAAIA,EAAM,OAASC,EAAE,aAAa,gBACrC,MAAO,CAAC,KAAMD,EAAM,KAAM,KAAMA,EAAM,KAAM,MAAOM,GAAQF,EAASd,EAAOU,EAAM,IAAI,EAAG,CAAK,EAAG,QAASA,EAAM,QAAS,WAAYA,EAAM,UAAU,EACjJ,GAAIA,EAAM,OAASC,EAAE,aAAa,OACrC,MAAO,CAAC,KAAMD,EAAM,KAAM,KAAMA,EAAM,KAAM,MAAOM,GAAQF,EAASd,EAAOU,EAAM,IAAI,EAAG,CAAK,EAAG,QAASA,EAAM,QAAS,OAAQA,EAAM,MAAM,EAE5I,KAAM,qBAEd,CAOA,SAASW,EAASC,EAAYC,EAAgC,CAC1D,GAAIA,EAAK,SAAW,GAAKD,IAAU,QAAaA,IAAU,KACtD,OAAOA,EACJ,CACH,GAAM,CAACE,EAAM,GAAGC,CAAI,EAAIF,EACxB,OAAOF,EAASC,EAAME,CAAI,EAAGC,CAAI,EAEzC,CAEA,SAASC,GAAQJ,EAAYK,EAAoB,CAC7C,OAAI,MAAM,QAAQL,CAAK,EACZK,GAAS,EAAI,KAAOL,EAAM,OAAS,EAAIA,EAAM,MAAM,EAAG,CAAC,EAAE,OAAO,CAAC,KAAK,CAAC,EAAIA,GAAO,IAAIM,GAAKF,GAAQE,EAAGD,EAAQ,CAAC,CAAC,EAChHL,IAAU,KACVA,EACA,OAAOA,GAAU,SACjBK,GAAS,EAAI,IAAM,OAAO,YAAY,OAAO,QAAQL,CAAK,EAAE,IAAI,CAAC,CAACO,EAAKP,CAAK,IAAM,CAACO,EAAKH,GAAQJ,EAAOK,EAAQ,CAAC,CAAC,CAAC,CAAC,EACnH,OAAOL,GAAU,UACjBA,EAAM,OAAS,GAAKA,EAAM,UAAU,EAAG,EAAE,EAAI,MAE7CA,CAEf,CCvGO,IAAMQ,GAAYC,GAEZC,GAAcC,GAEdC,GAAcC,EAAE,OAAO,EAEvBC,GAAWL,GAEXM,GAAaF,EAAE,OAAO,EAEtBG,GAAUH,EAAE,OAAO,EAEnBI,GAAaJ,EAAE,OAAO,EAEtBK,GAAYL,EAAE,OAAO,EAErBM,GAAWN,EAAE,OAAO,EAEpBO,GAAaP,EAAE,OAAO,EAEtBQ,GAAaR,EAAE,OAAO,EAEtBS,GAAcT,EAAE,MAAM,CAACA,EAAE,OAAO,EAAGA,EAAE,OAAO,EAAGA,EAAE,QAAQ,EAAGA,EAAE,KAAK,EAAGU,EAAI,CAAC,EAE3EC,GAAOX,EAAE,OAAO,EAEhBY,GAAYZ,EAAE,OAAO,EAErBa,GAAeb,EAAE,OAAO,EAExBc,GAAWd,EAAE,OAAO,EAEpBe,GAASf,EAAE,OAAO,EAElBgB,GAAahB,EAAE,OAAO,EAEtBiB,GAAYjB,EAAE,OAAO,EAErBkB,GAAiBtB,GAOjBuB,GAAqBnB,EAAE,OAAO,CACvC,KAAMA,EAAE,QAAQ,oBAAoB,EACpC,IAAKA,EAAE,OAAO,CAClB,CAAC,EAAE,OAAO,EASGoB,GAAepB,EAAE,OAAO,CACjC,KAAMA,EAAE,QAAQ,cAAc,EAC9B,KAAMA,EAAE,OAAO,EACf,KAAMA,EAAE,OAAO,EACf,SAAUqB,EACd,CAAC,EAAE,OAAO,EAQGC,GAAgBtB,EAAE,OAAO,CAClC,KAAMA,EAAE,QAAQ,eAAe,EAC/B,IAAKA,EAAE,OAAO,EACd,KAAMA,EAAE,OAAO,CACnB,CAAC,EAAE,OAAO,EASGuB,GAAgBvB,EAAE,OAAO,CAClC,KAAMA,EAAE,QAAQ,eAAe,EAC/B,KAAMA,EAAE,OAAO,EACf,KAAMA,EAAE,OAAO,EACf,SAAUqB,EACd,CAAC,EAAE,OAAO,EAQGG,GAAiBxB,EAAE,OAAO,CACnC,KAAMA,EAAE,QAAQ,gBAAgB,EAChC,IAAKA,EAAE,OAAO,EACd,KAAMA,EAAE,OAAO,CACnB,CAAC,EAAE,OAAO,EAMGyB,GAAYzB,EAAE,OAAO,CAC9B,KAAMA,EAAE,QAAQ,WAAW,CAC/B,CAAC,EAAE,OAAO,EAGG0B,GAAa1B,EAAE,mBAAmB,OAAQ,CAACmB,GAAoBC,GAAcE,GAAeC,GAAeC,GAAgBC,EAAS,CAAC,EAGrIE,GAAe3B,EAAE,KAAK,CAAC,iBAAkB,aAAc,aAAa,CAAC,EAOrE4B,GAAS5B,EAAE,OAAO,CAC3B,GAAIC,GACJ,MAAOW,GAAU,MAAM,CAC3B,CAAC,EAAE,OAAO,EAOGiB,GAAU7B,EAAE,OAAO,CAC5B,KAAMA,EAAE,OAAO,EACf,QAAS4B,GAAO,MAAM,EAAE,SAAS,CACrC,CAAC,EAAE,OAAO,EAYGE,GAA4B9B,EAAE,OAAO,CAC9C,KAAMO,GACN,KAAMC,GACN,SAAUR,EAAE,QAAQ,EAAE,SAAS,EAC/B,QAASA,EAAE,OAAO,EAAE,SAAS,EAC7B,QAAS6B,GAAQ,SAAS,EAC1B,QAAS7B,EAAE,KAAK,IAAM8B,GAAO,MAAM,EAAE,SAAS,CAAC,EAC/C,QAASF,GAAO,MAAM,EAAE,SAAS,CACrC,CAAC,EAAE,OAAO,EAQGG,GAAa/B,EAAE,OAAO,CAC/B,KAAMA,EAAE,OAAO,EAAE,SAAS,EAC1B,QAASO,GAAW,MAAM,EAC1B,QAASqB,GAAO,MAAM,EAAE,SAAS,CACrC,CAAC,EAAE,OAAO,EASGI,GAAShC,EAAE,OAAO,CAC3B,KAAMA,EAAE,OAAO,EACf,QAASO,GAAW,MAAM,EAC1B,WAAYP,EAAE,OAAO,EAAE,SAAS,EAChC,QAAS4B,GAAO,MAAM,EAAE,SAAS,CACrC,CAAC,EAAE,OAAO,EASGK,GAAQjC,EAAE,OAAO,CAC1B,KAAMA,EAAE,OAAO,EACf,QAASO,GAAW,MAAM,EAC1B,WAAYP,EAAE,OAAO,EAAE,SAAS,EAChC,QAAS4B,GAAO,MAAM,EAAE,SAAS,CACrC,CAAC,EAAE,OAAO,EASGM,GAAQlC,EAAE,OAAO,CAC1B,KAAMA,EAAE,OAAO,EACf,QAASO,GAAW,MAAM,EAC1B,UAAWP,EAAE,OAAO,EAAE,SAAS,EAC/B,QAAS4B,GAAO,MAAM,EAAE,SAAS,CACrC,CAAC,EAAE,OAAO,EAeGO,GAAQnC,EAAE,OAAO,CAC1B,OAAQI,GACR,MAAOC,GACP,KAAML,EAAE,QAAQ,EAAE,SAAS,EAC3B,QAAS8B,GAAO,MAAM,EACtB,WAAYC,GAAW,SAAS,EAChC,QAASC,GAAO,MAAM,EAAE,SAAS,EACjC,QAASC,GAAM,MAAM,EAAE,SAAS,EAChC,OAAQC,GAAM,MAAM,EAAE,SAAS,EAC/B,QAASL,GAAQ,SAAS,EAC1B,QAASD,GAAO,MAAM,EAAE,SAAS,CACrC,CAAC,EAAE,OAAO,EAOGQ,GAAYpC,EAAE,OAAO,CAC9B,MAAOG,GACP,OAAQI,EACZ,CAAC,EAAE,OAAO,EASG8B,GAAWrC,EAAE,OAAO,CAC7B,KAAMa,GACN,IAAKuB,GACL,IAAKA,GACL,QAASR,GAAO,MAAM,EAAE,SAAS,CACrC,CAAC,EAAE,OAAO,EASGU,GAAOtC,EAAE,OAAO,CACzB,OAAQI,GACR,KAAMU,GACN,MAAOd,EAAE,MAAM,CAACA,EAAE,OAAO,CAAC,KAAMA,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC,EAAE,OAAO,EAAGA,EAAE,OAAO,CAAC,WAAYA,EAAE,OAAO,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,EAC3G,QAAS4B,GAAO,MAAM,EAAE,SAAS,CACrC,CAAC,EAAE,OAAO,EAgBGW,GAASvC,EAAE,OAAO,CAC3B,GAAIC,GACJ,KAAMC,GACN,KAAMwB,GACN,QAASf,GAAK,MAAM,EACpB,OAAQwB,GAAM,MAAM,EACpB,UAAWE,GAAS,MAAM,EAC1B,MAAOC,GAAK,MAAM,EAAE,SAAS,EAC7B,QAAStC,EAAE,QAAQ,EAAE,SAAS,EAC9B,WAAYA,EAAE,OAAO,EAAE,SAAS,EAChC,UAAWqB,GACX,UAAWA,EACf,CAAC,EAAE,OAAO,EAOGmB,GAAcxC,EAAE,OAAO,CAChC,SAAUyC,GACV,KAAMxB,EACV,CAAC,EAAE,OAAO,EAaGyB,GAAa1C,EAAE,OAAO,CAC/B,GAAIG,GACJ,SAAUsC,GACV,KAAME,GACN,MAAOC,GACP,QAASrC,GAAW,MAAM,EAC1B,SAAUP,EAAE,QAAQ,EAAE,SAAS,EAC/B,UAAWA,EAAE,QAAQ,EAAE,SAAS,EAChC,cAAeA,EAAE,QAAQ,EAAE,SAAS,CACxC,CAAC,EAAE,OAAO,EAUG6C,GAAO7C,EAAE,OAAO,CACzB,GAAIe,GACJ,QAASf,EAAE,OAAO,EAClB,SAAUyC,GACV,KAAME,GACN,MAAOC,GAAM,SAAS,CAC1B,CAAC,EAAE,OAAO,EAUGE,GAAS9C,EAAE,OAAO,CAC3B,OAAQwC,GACR,OAAQE,GAAW,MAAM,EACzB,MAAOG,GAAK,MAAM,EAAE,SAAS,EAC7B,UAAWxB,GACX,UAAWA,EACf,CAAC,EAAE,OAAO,EAeG0B,GAAW/C,EAAE,OAAO,CAC7B,SAAUA,EAAE,OAAO,CACf,cAAeA,EAAE,OAAO,EAAE,SAAS,EACnC,cAAeA,EAAE,OAAO,EAAE,SAAS,EACnC,eAAgBA,EAAE,OAAO,EAAE,SAAS,CACxC,CAAC,EAAE,OAAO,EAAE,SAAS,EACrB,cAAeI,GAAW,SAAS,EACnC,eAAgBA,GAAW,MAAM,EAAE,SAAS,EAC5C,YAAaJ,EAAE,QAAQ,EAAE,SAAS,EAClC,cAAeA,EAAE,OAAO,EAAE,SAAS,EACnC,cAAeA,EAAE,OAAO,CACpB,KAAMA,EAAE,OAAO,EAAE,SAAS,EAC1B,IAAKA,EAAE,OAAO,EAAE,SAAS,EACzB,MAAOA,EAAE,QAAQ,EAAE,SAAS,EAC5B,UAAWA,EAAE,QAAQ,EAAE,SAAS,CACpC,CAAC,EAAE,OAAO,EAAE,SAAS,EACrB,YAAaA,EAAE,KAAK,CAAC,MAAO,WAAY,OAAQ,MAAM,CAAC,EAAE,SAAS,EAClE,cAAeA,EAAE,KAAK,CAAC,SAAU,WAAY,OAAO,CAAC,EAAE,SAAS,EAChE,iBAAkBA,EAAE,QAAQ,EAAE,SAAS,EACvC,qBAAsBA,EAAE,QAAQ,EAAE,SAAS,CAC/C,CAAC,EAAE,OAAO,EAGGgD,EAAiBhD,EAAE,KAAK,CAAC,QAAS,QAAQ,CAAC,EAG3CiD,GAAoBjD,EAAE,KAAK,CAAC,OAAQ,OAAQ,OAAO,CAAC,EAGpDkD,GAAiBlD,EAAE,MAAM,CAACA,EAAE,QAAQ,CAAC,EAAGA,EAAE,QAAQ,CAAC,CAAC,CAAC,EAoBrDmD,GAAUnD,EAAE,OAAO,CAC5B,aAAcoD,GAAa,SAAS,EACpC,GAAIzD,GACJ,KAAME,GACN,KAAME,GACN,YAAaC,EAAE,OAAO,EAAE,SAAS,EACjC,QAASuC,GAAO,MAAM,EACtB,MAAOvC,EAAE,OAAOA,EAAE,OAAO,CAAC,EAAE,SAAS,EACrC,WAAYgB,GACZ,QAAShB,EAAE,OAAOgB,GAAY8B,EAAM,EACpC,SAAUC,GAAS,SAAS,EAC5B,QAASC,EACT,WAAYC,GACZ,UAAW5B,GACX,UAAWA,GACX,QAAS6B,EACb,CAAC,EAAE,OAAO,EAGGG,GAAcF,GAAQ,KAAK,CAAC,aAAc,GAAM,GAAI,GAAM,QAAS,GAAM,WAAY,GAAM,UAAW,GAAM,UAAW,EAAI,CAAC,EAAE,OAAO,CAAC,MAAOnD,EAAE,QAAQ,MAAM,CAAC,CAAC,EAAE,OAAO,EAcxKsD,GAAetD,EAAE,OAAO,CACjC,UAAWA,EAAE,OAAO,EACpB,SAAUA,EAAE,OAAO,EACnB,UAAWA,EAAE,OAAO,EACpB,YAAaA,EAAE,OAAO,EACtB,QAASA,EAAE,OAAO,EAClB,WAAYA,EAAE,OAAO,EACrB,UAAWA,EAAE,OAAO,EACpB,QAASA,EAAE,OAAO,EAClB,QAASA,EAAE,OAAO,CACtB,CAAC,EAAE,OAAO,EAeGuD,GAAmBD,GAAa,OAAO,CAChD,aAAcF,GAAa,SAAS,EACpC,GAAIzD,GACJ,KAAME,GACN,KAAME,GACN,YAAaC,EAAE,OAAO,EAAE,SAAS,EACjC,QAASA,EAAE,QAAQgD,EAAe,KAAK,KAAK,EAC5C,WAAYC,GACZ,gBAAiBC,GACjB,UAAW7B,GACX,UAAWA,EACf,CAAC,EAAE,OAAO,EAGGmC,GAAoBD,GAAiB,KAAK,CAAC,QAAS,EAAI,CAAC,EAAE,OAAO,CAAC,QAASvD,EAAE,QAAQgD,EAAe,KAAK,MAAM,CAAC,CAAC,EAAE,OAAO,EAG3HS,GAAczD,EAAE,mBAAmB,UAAW,CAACuD,GAAkBC,EAAiB,CAAC,EAIzF,SAASE,GAAQC,EAAuC,CAC3D,OAAOA,EAAE,UAAYX,EAAe,KAAK,KAC7C,CAEO,SAASY,GAASD,EAAwC,CAC7D,OAAOA,EAAE,UAAYX,EAAe,KAAK,MAC7C,CAEO,SAASa,GAAaC,EAAqD,CAC9E,GAAM,CAACC,EAAQC,CAAK,EAAIF,EAAG,MAAM,GAAG,EACpC,OAAOE,IAAU,OAAY,CAAC,OAAQ,GAAI,MAAOD,CAAM,EAAI,CAAC,OAAAA,EAAQ,MAAAC,CAAK,CAC7E,CAEO,SAASC,GAAkBH,EAAeI,EAAqC,CAArC,IAAAC,EAAAD,EAAC,OAAAE,CAhhBlD,EAghBiDD,EAAWR,EAAAU,GAAXF,EAAW,CAAV,UAC9C,OAAWG,EAASC,GAAAC,GAAA,GACbb,GADa,CAEhB,GAAAG,EACA,KAAMA,EACN,QAASd,EAAe,KAAK,MAC7B,WAAYC,GAAkB,KAAK,KACnC,UAAW,KAAK,IAAI,EACpB,UAAW,KAAK,IAAI,CACxB,GAAGE,GAAS,SAAS,CACzB,CAEO,SAASsB,GAAkBC,EAAwBR,EAAqC,CAArC,IAAAC,EAAAD,EAAC,OAAAE,CA5hB3D,EA4hB0DD,EAAWR,EAAAU,GAAXF,EAAW,CAAV,UACvD,OAAWG,EAASC,GAAAC,GAAA,GACbb,GADa,CAEhB,aAAce,EAAK,aACnB,GAAIA,EAAK,GACT,QAAS1B,EAAe,KAAK,MAC7B,WAAYC,GAAkB,KAAK,KACnC,UAAWyB,EAAK,UAChB,UAAWA,EAAK,SACpB,GAAGvB,GAAS,SAAS,CACzB,CAEO,SAASwB,GAAmBD,EAAyBR,EAAqC,CAArC,IAAAC,EAAAD,EAAC,OAAAE,CAxiB7D,EAwiB4DD,EAAWR,EAAAU,GAAXF,EAAW,CAAV,UACzD,OAAWG,EAASC,GAAAC,GAAA,GACbb,GADa,CAEhB,aAAce,EAAK,aACnB,GAAIA,EAAK,GACT,KAAMA,EAAK,KACX,QAAS1B,EAAe,KAAK,OAC7B,WAAY0B,EAAK,WACjB,UAAWA,EAAK,UAChB,UAAWA,EAAK,SACpB,GAAGvB,GAAS,SAAS,CACzB,CAEO,SAASyB,GAAiBV,EAA2F,CAA3F,IAAAC,EAAAD,EAAC,cAAAW,EAAc,GAAAf,EAAI,QAAAgB,EAAS,WAAAC,EAAY,UAAAC,EAAW,UAAAC,CArjBpF,EAqjBiCd,EAAiER,EAAAU,GAAjEF,EAAiE,CAAhE,eAAc,KAAI,UAAS,aAAY,YAAW,cAChF,OAAWG,EAASC,GAAAC,GAAA,GAAIb,GAAJ,CAAO,MAAO,MAAM,GAAGN,GAAa,aAAa,CACzE,CAEO,SAAS6B,GAAavB,EAA8B,CAEvD,IAAMwB,EAAeC,GAAQzB,EAAE,QAAQ,QAAQ0B,GAAKA,EAAE,MAAM,EAAGC,GAAK,GAAGA,EAAE,UAAUA,EAAE,OAAO,EACtFC,EAAcH,GAAQzB,EAAE,QAAQ,QAAQ0B,GAAKA,EAAE,OAAS,CAAC,CAAC,EAAGC,GAAK,GAAGA,EAAE,UAAUA,EAAE,MAAM,EAE/F,OAAWhB,EAAS,CAChB,UAAWX,EAAE,QAAQ,OACrB,SAAU,OAAO,KAAKwB,CAAM,EAAE,OAC9B,UAAW,OAAO,OAAOA,CAAM,EAAE,IAAIK,GAAQ,KAAK,IAAI,GAAGA,EAAK,IAAIF,GAAKA,EAAE,QAAQ,MAAM,CAAC,CAAC,EAAE,OAAO,CAACG,EAAKC,IAASD,EAAMC,EAAM,CAAC,EAC9H,YAAa/B,EAAE,QAAQ,OAAO,CAAC8B,EAAKE,IAAQF,EAAME,EAAI,UAAU,OAAQ,CAAC,EACzE,QAAS,OAAO,KAAKJ,CAAK,EAAE,OAC5B,WAAY5B,EAAE,QAAQ,QAAQ0B,GAAKA,EAAE,OAAO,QAAQC,GAAK,CAACA,EAAE,OAAO,EAAE,OAAOA,EAAE,QAAQ,IAAIM,GAAKA,EAAE,OAAO,CAAC,EAAE,OAAOA,GAAK,CAAC,CAACA,CAAC,CAAC,CAAC,EAAE,OAC9H,UAAW,OAAO,KAAKjC,EAAE,OAAO,EAAE,OAClC,QAAS,OAAO,KAAKA,EAAE,OAAS,CAAC,CAAC,EAAE,OACpC,QAAS,OAAO,OAAOA,EAAE,OAAO,EAAE,QAAQkC,GAAKA,EAAE,OAAS,CAAC,CAAC,EAAE,MAClE,EAAGvC,GAAc,cAAc,CACnC,CC9jBO,IAAMwC,GAAaC,EAAE,OAAO,CAC/B,OAAQC,GAAW,SAAS,EAC5B,MAAOC,GACP,KAAMF,EAAE,OAAO,EACf,cAAeA,EAAE,OAAOG,EAAW,CACvC,CAAC,EAAE,OAAO,EAaGC,GAAcJ,EAAE,OAAO,CAChC,OAAQC,GAAW,SAAS,EAC5B,MAAOC,GACP,OAAQG,GACR,KAAMC,GACN,KAAMN,EAAE,OAAO,EACf,MAAOA,EAAE,OAAO,EAChB,YAAaA,EAAE,OAAO,EACtB,cAAeA,EAAE,OAAO,CAAC,MAAOG,GAAa,MAAOH,EAAE,OAAO,CAAC,CAAC,EAAE,MAAM,CAC3E,CAAC,EAAE,OAAO,ECjCH,IAAMO,GAAeC,EAAE,OAAOA,EAAE,MAAM,CAACA,EAAE,OAAO,EAAGA,EAAE,OAAO,EAAGA,EAAE,QAAQ,EAAGA,EAAE,KAAK,CAAC,CAAC,CAAC,EAShFC,GAAaD,EAAE,OAAO,CAC/B,KAAMA,EAAE,OAAO,EACf,QAASD,GAAa,SAAS,EAC/B,aAAcG,GAAe,SAAS,EACtC,QAASC,GAAU,SAAS,CAChC,CAAC,EAAE,OAAO,ECyCH,IAAMC,GAAcC,EAAE,OAAO,CAChC,GAAIC,GACJ,SAAUC,GACV,KAAMC,GACN,MAAOC,EACX,CAAC,EAAE,OAAO,EAGGC,GAAWL,EAAE,OAAO,EAYpBM,GAASN,EAAE,OAAO,CAC3B,IAAKA,EAAE,OAAO,EACd,KAAMA,EAAE,QAAQ,EAChB,MAAOA,EAAE,QAAQ,EACjB,IAAKA,EAAE,QAAQ,EACf,OAAQA,EAAE,OAAO,CACb,GAAIA,EAAE,OAAO,EAAE,SAAS,EACxB,MAAOA,EAAE,OAAO,EAAE,SAAS,EAC3B,IAAKA,EAAE,OAAO,EAAE,SAAS,CAC7B,CAAC,EAAE,OAAO,EAAE,SAAS,EACrB,QAASA,EAAE,QAAQ,EACnB,eAAgBA,EAAE,QAAQ,CAC9B,CAAC,EAAE,OAAO,EAIGO,GAAQP,EAAE,OAAO,CAAC,KAAMA,EAAE,QAAQ,OAAO,EAAG,GAAIC,EAAM,CAAC,EAAE,OAAO,EAEhEO,GAAYR,EAAE,OAAO,CAAC,KAAMA,EAAE,QAAQ,WAAW,EAAG,GAAIC,EAAM,CAAC,EAAE,OAAO,EAExEQ,GAAQT,EAAE,OAAO,CAAC,KAAMA,EAAE,QAAQ,OAAO,EAAG,GAAIC,EAAM,CAAC,EAAE,OAAO,EAEhES,GAAOV,EAAE,OAAO,CAAC,KAAMA,EAAE,QAAQ,MAAM,EAAG,GAAIC,EAAM,CAAC,EAAE,OAAO,EAE9DU,GAAWX,EAAE,OAAO,CAAC,KAAMA,EAAE,QAAQ,UAAU,EAAG,GAAIC,GAAQ,SAAUW,EAAY,CAAC,EAAE,OAAO,EAE9FC,GAAab,EAAE,OAAO,CAAC,KAAMA,EAAE,QAAQ,YAAY,EAAG,GAAIC,GAAO,SAAS,CAAC,CAAC,EAAE,OAAO,EAErFa,GAAUd,EAAE,OAAO,CAAC,KAAMA,EAAE,QAAQ,SAAS,EAAG,MAAOA,EAAE,OAAO,EAAE,SAAS,EAAG,YAAaA,EAAE,OAAO,EAAE,SAAS,EAAG,UAAWA,EAAE,OAAO,EAAE,SAAS,EAAG,KAAMA,EAAE,OAAO,EAAE,SAAS,EAAG,KAAMA,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC,EAAE,OAAO,EAEtNe,GAAkBf,EAAE,OAAO,CAAC,KAAMA,EAAE,QAAQ,iBAAiB,EAAG,GAAIC,EAAM,CAAC,EAAE,OAAO,EAEpFe,GAAQhB,EAAE,OAAO,CAAC,KAAMA,EAAE,QAAQ,OAAO,EAAG,MAAOiB,GAAY,QAASjB,EAAE,OAAO,CAAC,CAAC,EAAE,OAAO,EAE5FkB,GAAalB,EAAE,OAAO,CAAC,KAAMA,EAAE,QAAQ,YAAY,EAAG,aAAcmB,GAAgB,QAASC,GAAW,MAAOC,GAAe,SAAS,CAAC,CAAC,EAAE,OAAO,EAElJC,GAAmBtB,EAAE,OAAO,CAAC,KAAMA,EAAE,QAAQ,kBAAkB,EAAG,QAASuB,EAAO,CAAC,EAAE,OAAO,EAE5FC,GAAmBxB,EAAE,OAAO,CAAC,KAAMA,EAAE,QAAQ,kBAAkB,EAAG,QAASuB,EAAO,CAAC,EAAE,OAAO,EAE5FE,GAAgBzB,EAAE,OAAO,CAAC,KAAMA,EAAE,QAAQ,eAAe,EAAG,aAAcmB,GAAgB,QAASO,EAAgB,QAASH,EAAO,CAAC,EAAE,OAAO,EAE7II,GAAgB3B,EAAE,OAAO,CAAC,KAAMA,EAAE,QAAQ,eAAe,EAAG,QAASuB,EAAO,CAAC,EAAE,OAAO,EAEtFK,GAAgB5B,EAAE,OAAO,CAAC,KAAMA,EAAE,QAAQ,eAAe,EAAG,QAASuB,GAAS,QAASG,CAAc,CAAC,EAAE,OAAO,EAE/GG,GAAgB7B,EAAE,OAAO,CAAC,KAAMA,EAAE,QAAQ,eAAe,EAAG,QAAS8B,GAAa,SAAU9B,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC,EAAE,OAAO,EAE3H+B,GAAe/B,EAAE,OAAO,CAAC,KAAMA,EAAE,QAAQ,cAAc,EAAG,MAAOA,EAAE,QAAQ,CAAC,CAAC,EAAE,OAAO,EAEtFgC,GAAehC,EAAE,OAAO,CAAC,KAAMA,EAAE,QAAQ,cAAc,EAAG,SAAUiC,GAAU,QAASC,EAAW,CAAC,EAAE,OAAO,EAE5GC,GAAenC,EAAE,OAAO,CAAC,KAAMA,EAAE,QAAQ,cAAc,EAAG,WAAYoC,GAAc,KAAMC,EAAU,CAAC,EAAE,OAAO,EAE9GC,GAAgBtC,EAAE,OAAO,CAAC,KAAMA,EAAE,QAAQ,eAAe,EAAG,OAAQuC,GAAU,SAAUC,GAAa,MAAOC,EAAO,CAAC,EAAE,OAAO,EAE7HC,GAAiB1C,EAAE,OAAO,CAAC,KAAMA,EAAE,QAAQ,gBAAgB,EAAG,OAAQuC,GAAU,SAAUC,GAAa,OAAQG,EAAS,CAAC,EAAE,OAAO,EAElIC,GAAe5C,EAAE,OAAO,CAAC,KAAMA,EAAE,QAAQ,cAAc,EAAG,IAAKC,GAAO,MAAM,CAAC,CAAC,EAAE,OAAO,EAEvF4C,GAAa7C,EAAE,OAAO,CAAC,KAAMA,EAAE,QAAQ,YAAY,EAAG,KAAMA,EAAE,OAAOK,GAAUC,GAAO,MAAM,CAAC,CAAC,CAAC,EAAE,OAAO,EAExGwC,GAAW9C,EAAE,OAAO,CAAC,KAAMA,EAAE,QAAQ,UAAU,EAAG,GAAIC,EAAM,CAAC,EAAE,OAAO,EAEtE8C,GAAgB/C,EAAE,OAAO,CAAC,KAAMA,EAAE,QAAQ,eAAe,CAAC,CAAC,EAAE,OAAO,EAEpEgD,GAAYhD,EAAE,OAAO,CAAC,KAAMA,EAAE,QAAQ,WAAW,CAAC,CAAC,EAAE,OAAO,EAE5DiD,GAAQjD,EAAE,OAAO,CAAC,KAAMA,EAAE,QAAQ,OAAO,EAAG,MAAOkD,EAAU,CAAC,EAAE,OAAO,EAEvEC,GAASnD,EAAE,mBAAmB,OAAQ,CAACO,GAAOC,GAAWC,GAAOC,GAAMC,GAAUE,GAAYC,GAASC,GAAiBC,GAAOE,GAAYI,GAAkBE,GAAkBC,GAAeE,GAAeC,GAAeC,GAAeE,GAAcC,GAAcG,GAAcG,GAAeI,GAAgBE,GAAcC,GAAYC,GAAUC,GAAeC,GAAWC,EAAK,CAAC,EAItXG,GAAWpD,EAAE,OAAO,CAAC,KAAMA,EAAE,QAAQ,UAAU,EAAG,MAAOD,GAAY,MAAM,CAAC,CAAC,EAAE,OAAO,EAEtFsD,GAAarD,EAAE,OAAO,CAAC,KAAMA,EAAE,QAAQ,YAAY,EAAG,QAASuB,GAAQ,SAAS,CAAC,CAAC,EAAE,OAAO,EAE3F+B,GAAiBtD,EAAE,OAAO,CAAC,KAAMA,EAAE,QAAQ,gBAAgB,EAAG,GAAIoB,EAAS,CAAC,EAAE,OAAO,EAErFmC,GAAevD,EAAE,OAAO,CAAC,KAAMA,EAAE,QAAQ,cAAc,EAAG,WAAYoC,GAAc,KAAMC,GAAY,QAASrC,EAAE,OAAO,CAAC,CAAC,EAAE,OAAO,EAEnIwD,GAAgBxD,EAAE,OAAO,CAAC,KAAMA,EAAE,QAAQ,eAAe,EAAG,OAAQuC,GAAU,MAAOkB,EAAU,CAAC,EAAE,OAAO,EAEzGC,GAAiB1D,EAAE,OAAO,CAAC,KAAMA,EAAE,QAAQ,gBAAgB,EAAG,OAAQuC,GAAU,MAAOoB,EAAW,CAAC,EAAE,OAAO,EAE5GC,GAAY5D,EAAE,OAAO,CAAC,KAAMA,EAAE,QAAQ,WAAW,EAAG,GAAIA,EAAE,OAAO,CAAC,CAAC,EAAE,OAAO,EAE5E6D,GAAa7D,EAAE,OAAO,CAAC,KAAMA,EAAE,QAAQ,YAAY,EAAG,IAAKA,EAAE,OAAO,EAAG,MAAOA,EAAE,QAAQ,CAAC,CAAC,EAAE,OAAO,EAEnG8D,GAAW9D,EAAE,OAAO,CAAC,KAAMA,EAAE,QAAQ,UAAU,EAAG,MAAOiB,GAAY,QAASjB,EAAE,OAAO,CAAC,CAAC,EAAE,OAAO,EAElG+D,GAAe/D,EAAE,OAAO,CAAC,KAAMA,EAAE,QAAQ,cAAc,EAAG,GAAIyC,GAAS,SAAUuB,GAAS,SAAS,CAAC,CAAC,EAAE,OAAO,EAE9GC,GAAejE,EAAE,OAAO,CAAC,KAAMA,EAAE,QAAQ,cAAc,EAAG,GAAIyC,EAAO,CAAC,EAAE,OAAO,EAE/EyB,GAAwBlE,EAAE,OAAO,CAAC,KAAMA,EAAE,QAAQ,uBAAuB,EAAG,GAAIyC,EAAO,CAAC,EAAE,OAAO,EAEjG0B,GAAmBnE,EAAE,OAAO,CAAC,KAAMA,EAAE,QAAQ,kBAAkB,EAAG,GAAIyC,GAAS,SAAUuB,EAAQ,CAAC,EAAE,OAAO,EAE3GI,GAAepE,EAAE,OAAO,CAAC,KAAMA,EAAE,QAAQ,cAAc,EAAG,GAAIyC,GAAS,MAAOrC,EAAK,CAAC,EAAE,OAAO,EAE7FiE,GAAiBrE,EAAE,OAAO,CAAC,KAAMA,EAAE,QAAQ,gBAAgB,EAAG,GAAIyC,EAAO,CAAC,EAAE,OAAO,EAEnF6B,GAAgBtE,EAAE,OAAO,CAAC,KAAMA,EAAE,QAAQ,eAAe,EAAG,GAAIyC,GAAS,MAAO8B,EAAK,CAAC,EAAE,OAAO,EAE/FC,GAAgBxE,EAAE,OAAO,CAAC,KAAMA,EAAE,QAAQ,eAAe,EAAG,IAAKyE,EAAQ,CAAC,EAAE,OAAO,EAEnFC,GAAgB1E,EAAE,OAAO,CAAC,KAAMA,EAAE,QAAQ,eAAe,EAAG,IAAKyE,EAAQ,CAAC,EAAE,OAAO,EAEnFE,GAAgB3E,EAAE,OAAO,CAAC,KAAMA,EAAE,QAAQ,eAAe,EAAG,IAAKyE,GAAU,MAAOzE,EAAE,OAAO,CAAC,CAAC,EAAE,OAAO,EAEtG4E,GAAiB5E,EAAE,OAAO,CAAC,KAAMA,EAAE,QAAQ,gBAAgB,CAAC,CAAC,EAAE,OAAO,EAEtE6E,GAAQ7E,EAAE,OAAO,CAAC,KAAMA,EAAE,QAAQ,OAAO,EAAG,QAASA,EAAE,OAAO,CAAC,CAAC,EAAE,OAAO,EAEzE8E,GAAQ9E,EAAE,mBAAmB,OAAQ,CAACoD,GAAUC,GAAYC,GAAgBC,GAAcC,GAAeE,GAAgBE,GAAWC,GAAYC,GAAUC,GAAcE,GAAcC,GAAuBC,GAAkBC,GAAcC,GAAgBC,GAAeE,GAAeE,GAAeC,GAAeC,GAAgBC,EAAK,CAAC,ECjMrV,SAASE,GAAYC,EAAe,CACvC,OAAIA,aAAe,MACRA,EAAI,QACJ,OAAOA,GAAQ,SACfA,EACA,OAAOA,GAAQ,UAAYA,EAAI,MAAQ,OAAOA,EAAI,KAAK,SAAY,SACnEA,EAAI,KAAK,QACT,OAAOA,GAAQ,UAAYA,GAAO,OAAOA,EAAI,YAAe,UAAY,OAAOA,EAAI,SAAY,SAC/FA,EAAI,QAEJ,KAAK,UAAUA,CAAG,CAEjC,CCPO,IAAMC,GAAN,KAAa,CAmChB,YAAoBC,EAAwCC,EAAgB,CAAxD,SAAAD,EAAwC,YAAAC,EA9B5D,KAAQ,UAA0D,CAC9D,MAAO,CAAC,EACR,UAAW,CAAC,EACZ,MAAO,CAAC,EACR,KAAM,CAAC,EACP,SAAU,CAAC,EACX,WAAY,CAAC,EACb,QAAS,CAAC,EACV,gBAAiB,CAAC,EAClB,MAAO,CAAC,EACR,WAAY,CAAC,EACb,iBAAkB,CAAC,EACnB,iBAAkB,CAAC,EACnB,cAAe,CAAC,EAChB,cAAe,CAAC,EAChB,cAAe,CAAC,EAChB,cAAe,CAAC,EAChB,aAAc,CAAC,EACf,aAAc,CAAC,EACf,aAAc,CAAC,EACf,cAAe,CAAC,EAChB,eAAgB,CAAC,EACjB,aAAc,CAAC,EACf,WAAY,CAAC,EACb,SAAU,CAAC,EACX,cAAe,CAAC,EAChB,UAAW,CAAC,EACZ,MAAO,CAAC,CACZ,EAwBA,QAAK,CAA2BC,EAAUC,IAAwD,CAC9F,KAAK,UAAUD,CAAK,EAAE,KAAKC,CAAQ,CACvC,EAEA,iBAAc,IAAyB,OAAO,KAAK,KAAK,SAAS,EAAuB,OAAOC,GAAK,KAAK,UAAUA,CAAC,EAAE,SAAW,CAAC,EAElI,iBAAeC,GAA+B,KAAK,KAAK,CAAC,KAAM,WAAY,MAAAA,CAAK,CAAC,EACjF,gBAAcC,GAAuC,CACjD,OAAO,QAAQ,QAAUA,EACzBA,EAAU,KAAK,KAAK,CAAC,KAAM,aAAc,QAAAA,CAAO,CAAC,EAAI,KAAK,KAAK,CAAC,KAAM,YAAY,CAAC,CACvF,EACA,iBAAeC,GAAwB,KAAK,KAAK,CAAC,KAAM,iBAAkB,GAAAA,CAAE,CAAC,EAC7E,kBAAe,CAACC,EAAmBC,IAA0B,KAAK,KAAK,CACnE,KAAM,eACN,WAAYD,EAAI,WAChB,KAAMA,EAAI,KACV,QAAAC,CACJ,CAAC,EACD,mBAAgB,CAACC,EAAkBC,IAA4B,KAAK,KAAK,CAAC,KAAM,gBAAiB,OAAAD,EAAQ,MAAAC,CAAK,CAAC,EAC/G,oBAAiB,CAACD,EAAkBC,IAA6B,KAAK,KAAK,CAAC,KAAM,iBAAkB,OAAAD,EAAQ,MAAAC,CAAK,CAAC,EAClH,eAAaC,GAA4C,KAAK,KAAK,CAAC,KAAM,YAAa,GAAIA,EAAO,EAAE,CAAC,EACrG,gBAAa,CAACC,EAAaC,IAAyB,KAAK,KAAK,CAAC,KAAM,aAAc,IAAAD,EAAK,MAAAC,CAAK,CAAC,EAC9F,WAAQ,CAACC,EAAmBC,IAA0B,KAAK,KAAK,CAAC,KAAM,WAAY,MAAAD,EAAO,QAAAC,CAAO,CAAC,EAClG,eAAY,CAACT,EAAaU,IAA8B,KAAK,KAAK,CAAC,KAAM,eAAgB,GAAAV,EAAI,SAAAU,CAAQ,CAAC,EACtG,eAAaV,GAAsB,KAAK,KAAK,CAAC,KAAM,eAAgB,GAAAA,CAAE,CAAC,EACvE,wBAAsBA,GAAsB,KAAK,KAAK,CAAC,KAAM,wBAAyB,GAAAA,CAAE,CAAC,EACzF,sBAAmB,CAACA,EAAaU,IAA6B,KAAK,KAAK,CAAC,KAAM,mBAAoB,GAAAV,EAAI,SAAAU,CAAQ,CAAC,EAChH,eAAY,CAACV,EAAaW,IAAuB,KAAK,KAAK,CAAC,KAAM,eAAgB,GAAAX,EAAI,MAAAW,CAAK,CAAC,EAC5F,iBAAeX,GAAsB,KAAK,KAAK,CAAC,KAAM,iBAAkB,GAAAA,CAAE,CAAC,EAC3E,mBAAgB,CAACA,EAAaY,IAAuB,KAAK,KAAK,CAAC,KAAM,gBAAiB,GAAAZ,EAAI,MAAAY,CAAK,CAAC,EACjG,gBAAcZ,GAAuB,KAAK,KAAK,CAAC,KAAM,gBAAiB,IAAKA,CAAE,CAAC,EAC/E,gBAAcA,GAAuB,KAAK,KAAK,CAAC,KAAM,gBAAiB,IAAKA,CAAE,CAAC,EAC/E,gBAAa,CAACA,EAAca,IAAwB,KAAK,KAAK,CAAC,KAAM,gBAAiB,IAAKb,EAAI,MAAAa,CAAK,CAAC,EACrG,iBAAc,IAAY,KAAK,KAAK,CAAC,KAAM,gBAAgB,CAAC,EAlGhE,IAAAC,GA4CQA,EAAA,KAAK,IAAI,QAAT,MAAAA,EAAgB,QAAQ,UAAUb,GAAO,CACrC,KAAK,OAAO,MAAM,SAAUA,CAAG,EAC/B,GAAI,CACA,IAAMc,EAAoBC,EAASf,EAAKgB,GAAQ,UAAUhB,EAAI,OAAO,EAGrE,WAAW,IAAM,CACb,IAAMiB,EAAQ,KAAK,UAAUH,EAAM,IAAI,EACnCG,EAAM,OAAS,EAEfA,EAAM,IAAIC,GAAQA,EAAKJ,CAAK,CAAC,EAE7BrB,EAAO,MAAM,YAAYqB,EAAM,oBAAqBA,CAAK,CAEjE,EAAG,GAAG,CACV,OAASK,EAAP,CACE,KAAK,MAAMC,GAAW,KAAK,MAAOC,GAAYF,CAAC,CAAC,CACpD,CACJ,EACJ,CAtDA,OAAO,KAAKG,EAAiB7B,EAAgB,CACzC,OAAO,IAAIF,GAAO,OAAO,IAAI,KAAK,KAAK,CAAC,MAAA+B,CAAK,CAAC,EAAG7B,CAAM,CAC3D,CAyFQ,KAAKO,EAAkB,CApGnC,IAAAa,EAqGQ,KAAK,OAAO,MAAM,QAASb,CAAG,EAC9B,GAAI,CACA,IAAMc,EAAmBC,EAASf,EAAKuB,GAAO,SAASvB,EAAI,OAAO,GAClEa,EAAA,KAAK,IAAI,QAAT,MAAAA,EAAgB,QAAQ,KAAKC,EACjC,OAASK,EAAP,CACE,KAAK,MAAMC,GAAW,KAAK,MAAOC,GAAYF,CAAC,CAAC,CACpD,CACJ,CACJ,ECxGO,IAAMK,GAAN,KAAiB,CACpB,YAAoBC,EACAC,EACDC,EAA+B,OAAW,CAFzC,SAAAF,EACA,YAAAC,EACD,aAAAC,EAGnB,kBAAe,IAAe,CAXlC,IAAAC,EAAAC,EAAAC,EAYQ,IAAMC,KAAiBF,GAAAD,EAAA,KAAK,UAAL,YAAAA,EAAc,WAAd,YAAAC,EAAwB,gBAAiB,IAAI,MAAM,GAAG,EAAE,IAAIG,GAAKA,EAAE,KAAK,CAAC,EAAE,OAAOA,GAAKA,EAAE,OAAS,CAAC,EAC1H,QAAOF,EAAA,KAAK,UAAL,YAAAA,EAAc,QAChB,OAAOG,GAAKA,EAAE,UAAY,IAC1B,QAAQA,GAAKA,EAAE,QACf,OAAOD,GAAK,CAACD,EAAc,KAAKG,GAAKF,EAAE,QAAUE,GAAK,IAAI,OAAOA,CAAC,EAAE,KAAKF,EAAE,KAAK,CAAC,KAAM,CAAC,CACjG,EACA,qBAAkB,IAAe,CAlBrC,IAAAJ,EAkBwC,QAAAA,EAAA,KAAK,UAAL,YAAAA,EAAc,QAAQ,OAAOK,GAAKA,EAAE,UAAY,IAAO,QAAQA,GAAKA,EAAE,aAAc,CAAC,GACzH,sBAAmB,IAAe,CAnBtC,IAAAL,EAAAC,EAoBQ,IAAMM,EAAmC,KAAK,aAAa,EAAE,OAAO,CAACC,EAAKJ,IAAOK,GAAAC,GAAA,GAAIF,GAAJ,CAAS,CAAC,GAAGJ,EAAE,UAAUA,EAAE,OAAO,EAAGA,CAAC,GAAI,CAAC,CAAC,EAC7H,OAAOH,EAAA,KAAK,UAAL,YAAAA,EAAc,SAAQD,EAAA,KAAK,UAAL,YAAAA,EAAc,YAAY,OAAO,IAAII,GAAKG,EAAOH,EAAE,EAAE,GAAG,OAAOA,GAAKA,IAAM,OAC3G,EACA,eAAY,CAACO,EAAaC,EAAWC,IAAmB,KAAK,IAAI,UAAUF,EAAI,OAAOC,GAAS,UAAY,OAAOC,GAAQ,SAAW,CAAC,KAAAD,EAAM,IAAAC,CAAG,EAAI,MAAS,EAC5J,eAAaF,GAAsB,KAAK,IAAI,UAAUA,CAAE,EACxD,wBAAsBA,GAAsB,KAAK,IAAI,mBAAmBA,CAAE,EAC1E,iBAAc,CAACA,EAAaC,EAAUC,IAAkB,KAAK,IAAI,iBAAiBF,EAAI,CAAC,KAAAC,EAAM,IAAAC,CAAG,CAAC,EACjG,eAAY,CAACF,EAAaG,EAAQC,IAAiB,KAAK,IAAI,UAAUJ,EAAI,CAAC,GAAAG,EAAI,GAAAC,CAAE,CAAC,EAClF,iBAAeJ,GAAsB,KAAK,IAAI,YAAYA,CAAE,EAC5D,mBAAgB,CAACA,EAAaK,IAAuB,KAAK,IAAI,cAAcL,EAAIK,CAAK,EACrF,gBAAcL,GAAuB,KAAK,IAAI,WAAWA,CAAE,EAC3D,gBAAcA,GAAuB,KAAK,IAAI,WAAWA,CAAE,EAC3D,gBAAa,CAACA,EAAcM,IAAwB,KAAK,IAAI,WAAWN,EAAIM,CAAK,EACjF,iBAAc,IAAY,KAAK,IAAI,YAAY,EAC/C,UAAO,IAAY,KAAK,OAAO,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0JAKiH,CA9BrJ,CA+BJ,ECrCO,IAAMC,GAAMC,EAAE,KAAK,CAAC,MAAO,UAAW,MAAM,CAAC,EAE7C,SAASC,IAAc,CAC1B,OAAI,OAAO,SAAS,SAAS,SAAS,WAAW,EACtCF,GAAI,KAAK,IACT,OAAO,SAAS,SAAS,SAAS,aAAa,EAC/CA,GAAI,KAAK,QAETA,GAAI,KAAK,IAExB,CCVO,IAAMG,GAAN,KAAa,CAChB,SAASC,EAAmB,CACxB,KAAM,iBACV,CAEA,QAAQA,EAAmB,CACvB,KAAM,iBACV,CAEA,QAAQA,EAAmB,CACvB,KAAM,iBACV,CAEA,OAAOA,EAAmB,CACtB,KAAM,iBACV,CAEA,SAASA,EAAmB,CACxB,KAAM,iBACV,CAEA,cAAuB,CACnB,OAAO,IAAIC,GAAY,KAAMC,GAAY,KAAK,KAAK,CACvD,CACJ,EAEaC,GAAN,cAA4BJ,EAAO,CACtC,YAAoBK,EAAU,CAC1B,MAAM,EADU,SAAAA,CAEpB,CAEA,SAASJ,EAAmB,CACxB,QAAQ,MAAM,GAAGA,CAAI,CACzB,CAEA,QAAQA,EAAmB,CACvB,QAAQ,KAAK,GAAGA,CAAI,CACxB,CAEA,QAAQA,EAAmB,CACvB,QAAQ,KAAK,GAAGA,CAAI,CACxB,CAEA,OAAOA,EAAmB,CACtB,QAAQ,IAAI,GAAGA,CAAI,CACvB,CAEA,SAASA,EAAmB,CACpB,KAAK,MAAQK,GAAI,KAAK,MACtB,QAAQ,MAAM,GAAGL,CAAI,CAE7B,CACJ,EAGaE,GAAcI,EAAE,KAAK,CAAC,QAAS,OAAQ,OAAQ,MAAO,OAAO,CAAC,EAE9DL,GAAN,cAA0BF,EAAO,CACpC,YAAoBQ,EAA4BC,EAAuB,CACnE,MAAM,EADU,gBAAAD,EAA4B,cAAAC,CAEhD,CAEA,SAASR,EAAmB,CACpB,KAAK,WAAaE,GAAY,KAAK,OACnC,KAAK,WAAW,MAAM,GAAGF,CAAI,CAErC,CAEA,QAAQA,EAAmB,CACnB,KAAK,WAAaE,GAAY,KAAK,MACnC,KAAK,WAAW,KAAK,GAAGF,CAAI,CAEpC,CAEA,QAAQA,EAAmB,CACnB,KAAK,WAAaE,GAAY,KAAK,MACnC,KAAK,WAAW,KAAK,GAAGF,CAAI,CAEpC,CAEA,OAAOA,EAAmB,CAClB,KAAK,WAAaE,GAAY,KAAK,KACnC,KAAK,WAAW,IAAI,GAAGF,CAAI,CAEnC,CAEA,SAASA,EAAmB,CACpB,KAAK,WAAaE,GAAY,KAAK,OACnC,KAAK,WAAW,MAAM,GAAGF,CAAI,CAErC,CACJ,EC9FO,SAASS,IAAgB,CAEvB,OAAO,UAAU,WAClB,OAAO,UAAU,SAAW,SAAUC,EAAyBC,EAAO,CAClE,GAAID,aAAkB,OAClB,MAAM,UAAU,qCAAqC,EAEzD,OAAIC,IAAU,SACVA,EAAQ,GAEL,KAAK,QAAQD,EAAQC,CAAK,IAAM,EAC3C,GAIC,OAAO,aACR,OAAO,WAAa,UAAY,CAE5B,OAAQ,CAAC,GAAG,EAAE,KAAK,KAAK,KAAK,OAAO,QAAQ,SAAUC,IAAMA,EAAI,OAAO,gBAAgB,IAAI,WAAW,CAAC,CAAC,EAAE,CAAC,EAAI,IAAMA,EAAI,GAAG,SAAS,EAAE,CAAC,CAC5I,GAIJ,IAAMC,EAAa,QAAQ,IAC3B,QAAQ,IAAM,IAAIC,IAAS,CACvB,IAAMC,EAAMD,EAAK,CAAC,EACd,OAAOC,GAAQ,UAAYA,EAAI,WAAW,WAAW,EACjDA,EAAI,WAAW,gBAAgB,EAC/B,QAAQ,QAAQA,EAAI,MAAM,GAAI,EAAE,CAAC,EAEjC,QAAQ,KAAKA,EAAI,MAAM,GAAI,EAAE,CAAC,EAGlCF,EAAW,GAAGC,CAAI,CAE1B,CACJ,CCnCA,IAAIE,GAAS,CAAC,GAGb,SAASC,EAAKC,EAAQF,EAAQG,EAAUC,EAAY,CACnD,IAAIC,EAAe,CAAC,EAClBH,EAAO,QACPA,EAAO,MACPA,EAAO,SACPA,EAAO,iBACPA,EAAO,mCACPA,EAAO,mBACPA,EAAO,kBAAkB,UAAU,4BACnCA,EAAO,KACPA,EAAO,IAAI,iBAEb,SAASI,GAAO,CAAC,CAIjB,SAASC,EAAQC,EAAM,CACrB,IAAIC,EAAgBT,EAAO,QAAQ,QAC/BU,EAAOD,IAAkB,OAASA,EAAgBP,EAAO,QAE7D,OAAI,OAAOQ,GAAS,WACX,IAAIA,EAAKF,CAAI,GAGtBA,EAAKF,EAAMA,CAAI,EAER,KACT,CAEA,IAAIK,EAAO,UAAY,CACrB,IAAIC,EAAO,KAAK,MAAM,kBAAS,EAC3BC,EAAOC,EACPC,EAAS,CAAC,EACVC,EAAgB,EAEpB,OAAI,OAAO,uBAA0B,YAAc,OAAO,sBAAyB,YACjFH,EAAQ,SAAUI,EAAI,CACpB,IAAIC,EAAK,KAAK,OAAO,EAErB,OAAAH,EAAOG,CAAE,EAAI,sBAAsB,SAASC,EAAQC,EAAM,CACpDJ,IAAkBI,GAAQJ,EAAgBJ,EAAO,EAAIQ,GACvDJ,EAAgBI,EAChB,OAAOL,EAAOG,CAAE,EAEhBD,EAAG,GAEHF,EAAOG,CAAE,EAAI,sBAAsBC,CAAO,CAE9C,CAAC,EAEMD,CACT,EACAJ,EAAS,SAAUI,EAAI,CACjBH,EAAOG,CAAE,GACX,qBAAqBH,EAAOG,CAAE,CAAC,CAEnC,IAEAL,EAAQ,SAAUI,EAAI,CACpB,OAAO,WAAWA,EAAIL,CAAI,CAC5B,EACAE,EAAS,SAAUO,EAAO,CACxB,OAAO,aAAaA,CAAK,CAC3B,GAGK,CAAE,MAAOR,EAAO,OAAQC,CAAO,CACxC,EAAE,EAEEQ,EAAa,UAAY,CAC3B,IAAIC,EACAC,EACAC,EAAW,CAAC,EAEhB,SAASC,EAASH,EAAQ,CACxB,SAASI,EAAQC,EAASC,EAAU,CAClCN,EAAO,YAAY,CAAE,QAASK,GAAW,CAAC,EAAG,SAAUC,CAAS,CAAC,CACnE,CACAN,EAAO,KAAO,SAAoBO,EAAQ,CACxC,IAAIC,EAAYD,EAAO,2BAA2B,EAClDP,EAAO,YAAY,CAAE,OAAQQ,CAAU,EAAG,CAACA,CAAS,CAAC,CACvD,EAEAR,EAAO,KAAO,SAAoBK,EAASI,EAAMC,GAAM,CACrD,GAAIT,EACF,OAAAG,EAAQC,EAAS,IAAI,EACdJ,EAGT,IAAIN,EAAK,KAAK,OAAO,EAAE,SAAS,EAAE,EAAE,MAAM,CAAC,EAE3C,OAAAM,EAAOjB,EAAQ,SAAU2B,GAAS,CAChC,SAASC,GAAWC,EAAK,CACnBA,EAAI,KAAK,WAAalB,IAI1B,OAAOO,EAASP,CAAE,EAClBK,EAAO,oBAAoB,UAAWY,EAAU,EAEhDX,EAAO,KACPS,GAAK,EACLC,GAAQ,EACV,CAEAX,EAAO,iBAAiB,UAAWY,EAAU,EAC7CR,EAAQC,EAASV,CAAE,EAEnBO,EAASP,CAAE,EAAIiB,GAAW,KAAK,KAAM,CAAE,KAAM,CAAE,SAAUjB,CAAG,CAAC,CAAC,CAChE,CAAC,EAEMM,CACT,EAEAD,EAAO,MAAQ,UAAuB,CACpCA,EAAO,YAAY,CAAE,MAAO,EAAK,CAAC,EAElC,QAASL,KAAMO,EACbA,EAASP,CAAE,EAAE,EACb,OAAOO,EAASP,CAAE,CAEtB,CACF,CAEA,OAAO,UAAY,CACjB,GAAIK,EACF,OAAOA,EAGT,GAAI,CAACpB,GAAYE,EAAc,CAC7B,IAAIgC,EAAO,CACT,wCACA,IAAMpC,EAAK,SAAS,EAAI,+BACxB,8BACA,4BACA,oDACA,iCACA,wDACA,UACA,UACA,iCACA,oCACA,kCACA,0CACA,4CACA,kCACA,0CACA,4CACA,yDACA,MACA,GACF,EAAE,KAAK;AAAA,CAAI,EACX,GAAI,CACFsB,EAAS,IAAI,OAAO,IAAI,gBAAgB,IAAI,KAAK,CAACc,CAAI,CAAC,CAAC,CAAC,CAC3D,OAASC,EAAP,CAEA,cAAO,UAAY,QAAa,OAAO,QAAQ,MAAS,YAAa,QAAQ,KAAK,kCAA4BA,CAAC,EAExG,IACT,CAEAZ,EAASH,CAAM,EAGjB,OAAOA,CACT,CACF,EAAG,EAECgB,EAAW,CACb,cAAe,GACf,MAAO,GACP,OAAQ,GACR,cAAe,GACf,MAAO,GACP,QAAS,EACT,MAAO,EACP,MAAO,IACP,EAAG,GACH,EAAG,GACH,OAAQ,CAAC,SAAU,QAAQ,EAC3B,OAAQ,IACR,OAAQ,CACN,UACA,UACA,UACA,UACA,UACA,UACA,SACF,EAEA,wBAAyB,GACzB,OAAQ,CACV,EAEA,SAASC,EAAQC,EAAKC,EAAW,CAC/B,OAAOA,EAAYA,EAAUD,CAAG,EAAIA,CACtC,CAEA,SAASE,EAAKF,EAAK,CACjB,OAASA,GAAQ,IACnB,CAEA,SAASG,EAAKhB,EAASiB,EAAMH,EAAW,CACtC,OAAOF,EACLZ,GAAWe,EAAKf,EAAQiB,CAAI,CAAC,EAAIjB,EAAQiB,CAAI,EAAIN,EAASM,CAAI,EAC9DH,CACF,CACF,CAEA,SAASI,GAAgBC,EAAO,CAC9B,OAAOA,EAAS,EAAI,EAAI,KAAK,MAAMA,CAAM,CAC3C,CAEA,SAASC,GAAUC,EAAKC,EAAK,CAE3B,OAAO,KAAK,MAAM,KAAK,OAAO,GAAKA,EAAMD,EAAI,EAAIA,CACnD,CAEA,SAASE,GAAUC,EAAK,CACtB,OAAO,SAASA,EAAK,EAAE,CACzB,CAEA,SAASC,GAAYC,EAAQ,CAC3B,OAAOA,EAAO,IAAIC,EAAQ,CAC5B,CAEA,SAASA,GAASH,EAAK,CACrB,IAAIX,EAAM,OAAOW,CAAG,EAAE,QAAQ,cAAe,EAAE,EAE/C,OAAIX,EAAI,OAAS,IACbA,EAAMA,EAAI,CAAC,EAAEA,EAAI,CAAC,EAAEA,EAAI,CAAC,EAAEA,EAAI,CAAC,EAAEA,EAAI,CAAC,EAAEA,EAAI,CAAC,GAG3C,CACL,EAAGU,GAAUV,EAAI,UAAU,EAAE,CAAC,CAAC,EAC/B,EAAGU,GAAUV,EAAI,UAAU,EAAE,CAAC,CAAC,EAC/B,EAAGU,GAAUV,EAAI,UAAU,EAAE,CAAC,CAAC,CACjC,CACF,CAEA,SAASe,GAAU5B,EAAS,CAC1B,IAAI6B,EAASb,EAAKhB,EAAS,SAAU,MAAM,EAC3C,OAAA6B,EAAO,EAAIb,EAAKa,EAAQ,IAAK,MAAM,EACnCA,EAAO,EAAIb,EAAKa,EAAQ,IAAK,MAAM,EAE5BA,CACT,CAEA,SAASC,GAAoB5B,EAAQ,CACnCA,EAAO,MAAQ,SAAS,gBAAgB,YACxCA,EAAO,OAAS,SAAS,gBAAgB,YAC3C,CAEA,SAAS6B,GAAkB7B,EAAQ,CACjC,IAAI8B,EAAO9B,EAAO,sBAAsB,EACxCA,EAAO,MAAQ8B,EAAK,MACpB9B,EAAO,OAAS8B,EAAK,MACvB,CAEA,SAASC,GAAUC,EAAQ,CACzB,IAAIhC,EAAS,SAAS,cAAc,QAAQ,EAE5C,OAAAA,EAAO,MAAM,SAAW,QACxBA,EAAO,MAAM,IAAM,MACnBA,EAAO,MAAM,KAAO,MACpBA,EAAO,MAAM,cAAgB,OAC7BA,EAAO,MAAM,OAASgC,EAEfhC,CACT,CAEA,SAASiC,GAAQC,EAASC,EAAGC,EAAGC,EAASC,EAASC,EAAUC,EAAYC,EAAUC,EAAe,CAC/FR,EAAQ,KAAK,EACbA,EAAQ,UAAUC,EAAGC,CAAC,EACtBF,EAAQ,OAAOK,CAAQ,EACvBL,EAAQ,MAAMG,EAASC,CAAO,EAC9BJ,EAAQ,IAAI,EAAG,EAAG,EAAGM,EAAYC,EAAUC,CAAa,EACxDR,EAAQ,QAAQ,CAClB,CAEA,SAASS,GAAcC,EAAM,CAC3B,IAAIC,EAAWD,EAAK,OAAS,KAAK,GAAK,KACnCE,EAAYF,EAAK,QAAU,KAAK,GAAK,KAEzC,MAAO,CACL,EAAGA,EAAK,EACR,EAAGA,EAAK,EACR,OAAQ,KAAK,OAAO,EAAI,GACxB,YAAa,KAAK,IAAI,IAAM,KAAK,OAAO,EAAI,GAAM,GAAI,EACtD,SAAWA,EAAK,cAAgB,GAAQ,KAAK,OAAO,EAAIA,EAAK,cAC7D,QAAS,CAACC,GAAa,GAAMC,EAAc,KAAK,OAAO,EAAIA,GAC3D,WAAY,KAAK,OAAO,GAAK,IAAO,KAAQ,KAAQ,KAAK,GACzD,MAAOF,EAAK,MACZ,MAAOA,EAAK,MACZ,KAAM,EACN,WAAYA,EAAK,MACjB,MAAOA,EAAK,MACZ,MAAOA,EAAK,MACZ,OAAQ,KAAK,OAAO,EAAI,EACxB,QAAS,EACT,QAAS,EACT,QAAS,EACT,QAAS,EACT,QAASA,EAAK,QAAU,EACxB,WAAY,GACZ,OAAQA,EAAK,MACf,CACF,CAEA,SAASG,GAAYb,EAASc,EAAO,CACnCA,EAAM,GAAK,KAAK,IAAIA,EAAM,OAAO,EAAIA,EAAM,SAAWA,EAAM,MAC5DA,EAAM,GAAK,KAAK,IAAIA,EAAM,OAAO,EAAIA,EAAM,SAAWA,EAAM,QAC5DA,EAAM,QAAUA,EAAM,YACtBA,EAAM,UAAYA,EAAM,MACxBA,EAAM,WAAa,GACnBA,EAAM,QAAU,KAAK,IAAIA,EAAM,SAAS,EACxCA,EAAM,QAAU,KAAK,IAAIA,EAAM,SAAS,EACxCA,EAAM,OAAS,KAAK,OAAO,EAAI,EAC/BA,EAAM,QAAUA,EAAM,EAAM,GAAKA,EAAM,OAAU,KAAK,IAAIA,EAAM,MAAM,EACtEA,EAAM,QAAUA,EAAM,EAAM,GAAKA,EAAM,OAAU,KAAK,IAAIA,EAAM,MAAM,EAEtE,IAAIC,EAAYD,EAAM,OAAUA,EAAM,WAElCE,EAAKF,EAAM,EAAKA,EAAM,OAASA,EAAM,QACrCG,EAAKH,EAAM,EAAKA,EAAM,OAASA,EAAM,QACrCI,EAAKJ,EAAM,QAAWA,EAAM,OAASA,EAAM,QAC3CK,EAAKL,EAAM,QAAWA,EAAM,OAASA,EAAM,QAK/C,GAHAd,EAAQ,UAAY,QAAUc,EAAM,MAAM,EAAI,KAAOA,EAAM,MAAM,EAAI,KAAOA,EAAM,MAAM,EAAI,MAAQ,EAAIC,GAAY,IACpHf,EAAQ,UAAU,EAEdc,EAAM,QAAU,SAClBd,EAAQ,QACNA,EAAQ,QAAQc,EAAM,EAAGA,EAAM,EAAG,KAAK,IAAII,EAAKF,CAAE,EAAIF,EAAM,WAAY,KAAK,IAAIK,EAAKF,CAAE,EAAIH,EAAM,WAAY,KAAK,GAAK,GAAKA,EAAM,OAAQ,EAAG,EAAI,KAAK,EAAE,EACzJf,GAAQC,EAASc,EAAM,EAAGA,EAAM,EAAG,KAAK,IAAII,EAAKF,CAAE,EAAIF,EAAM,WAAY,KAAK,IAAIK,EAAKF,CAAE,EAAIH,EAAM,WAAY,KAAK,GAAK,GAAKA,EAAM,OAAQ,EAAG,EAAI,KAAK,EAAE,UACnJA,EAAM,QAAU,OASzB,QARIM,EAAM,KAAK,GAAK,EAAI,EACpBC,EAAc,EAAIP,EAAM,OACxBQ,GAAc,EAAIR,EAAM,OACxBb,EAAIa,EAAM,EACVZ,GAAIY,EAAM,EACVS,GAAS,EACTC,EAAO,KAAK,GAAKD,GAEdA,MACLtB,EAAIa,EAAM,EAAI,KAAK,IAAIM,CAAG,EAAIE,GAC9BpB,GAAIY,EAAM,EAAI,KAAK,IAAIM,CAAG,EAAIE,GAC9BtB,EAAQ,OAAOC,EAAGC,EAAC,EACnBkB,GAAOI,EAEPvB,EAAIa,EAAM,EAAI,KAAK,IAAIM,CAAG,EAAIC,EAC9BnB,GAAIY,EAAM,EAAI,KAAK,IAAIM,CAAG,EAAIC,EAC9BrB,EAAQ,OAAOC,EAAGC,EAAC,EACnBkB,GAAOI,OAGTxB,EAAQ,OAAO,KAAK,MAAMc,EAAM,CAAC,EAAG,KAAK,MAAMA,EAAM,CAAC,CAAC,EACvDd,EAAQ,OAAO,KAAK,MAAMc,EAAM,OAAO,EAAG,KAAK,MAAMG,CAAE,CAAC,EACxDjB,EAAQ,OAAO,KAAK,MAAMkB,CAAE,EAAG,KAAK,MAAMC,CAAE,CAAC,EAC7CnB,EAAQ,OAAO,KAAK,MAAMgB,CAAE,EAAG,KAAK,MAAMF,EAAM,OAAO,CAAC,EAG1D,OAAAd,EAAQ,UAAU,EAClBA,EAAQ,KAAK,EAENc,EAAM,KAAOA,EAAM,UAC5B,CAEA,SAASW,GAAQ3D,EAAQ4D,EAAQC,EAAS3D,EAAMC,EAAM,CACpD,IAAI2D,EAAkBF,EAAO,MAAM,EAC/B1B,EAAUlC,EAAO,WAAW,IAAI,EAChC+D,EACAC,EAEAtE,GAAOjB,EAAQ,SAAU2B,EAAS,CACpC,SAAS6D,IAAS,CAChBF,EAAiBC,EAAU,KAE3B9B,EAAQ,UAAU,EAAG,EAAGhC,EAAK,MAAOA,EAAK,MAAM,EAE/CC,EAAK,EACLC,EAAQ,CACV,CAEA,SAAS8D,IAAS,CACZ7F,GAAY,EAAE6B,EAAK,QAAU5B,EAAW,OAAS4B,EAAK,SAAW5B,EAAW,UAC9E4B,EAAK,MAAQF,EAAO,MAAQ1B,EAAW,MACvC4B,EAAK,OAASF,EAAO,OAAS1B,EAAW,QAGvC,CAAC4B,EAAK,OAAS,CAACA,EAAK,SACvB2D,EAAQ7D,CAAM,EACdE,EAAK,MAAQF,EAAO,MACpBE,EAAK,OAASF,EAAO,QAGvBkC,EAAQ,UAAU,EAAG,EAAGhC,EAAK,MAAOA,EAAK,MAAM,EAE/C4D,EAAkBA,EAAgB,OAAO,SAAUd,EAAO,CACxD,OAAOD,GAAYb,EAASc,CAAK,CACnC,CAAC,EAEGc,EAAgB,OAClBC,EAAiBlF,EAAI,MAAMqF,EAAM,EAEjCD,GAAO,CAEX,CAEAF,EAAiBlF,EAAI,MAAMqF,EAAM,EACjCF,EAAUC,EACZ,CAAC,EAED,MAAO,CACL,UAAW,SAAUL,EAAQ,CAC3B,OAAAE,EAAkBA,EAAgB,OAAOF,CAAM,EAExClE,EACT,EACA,OAAQM,EACR,QAASN,GACT,MAAO,UAAY,CACbqE,GACFlF,EAAI,OAAOkF,CAAc,EAGvBC,GACFA,EAAQ,CAEZ,CACF,CACF,CAEA,SAASG,GAAenE,EAAQoE,EAAY,CAC1C,IAAIC,EAAc,CAACrE,EACfsE,EAAc,CAAC,CAACxD,EAAKsD,GAAc,CAAC,EAAG,QAAQ,EAC/CG,EAAgCzD,EAAKsD,EAAY,0BAA2B,OAAO,EACnFI,EAAkBjG,GAAgB,CAAC,CAACuC,EAAKsD,GAAc,CAAC,EAAG,WAAW,EACtE3E,EAAS+E,EAAkBhF,EAAU,EAAI,KACzCqE,EAAUQ,EAAczC,GAAsBC,GAC9C4C,EAAezE,GAAUP,EAAU,CAAC,CAACO,EAAO,uBAAyB,GACrE0E,GAAmB,OAAO,YAAe,YAAc,WAAW,0BAA0B,EAAE,QAC9FC,EAEJ,SAASC,GAAU9E,EAASI,GAAMC,GAAM,CAoBtC,QAnBI0E,GAAgB/D,EAAKhB,EAAS,gBAAiBkB,EAAe,EAC9D8D,GAAQhE,EAAKhB,EAAS,QAAS,MAAM,EACrCiF,GAASjE,EAAKhB,EAAS,SAAU,MAAM,EACvCkF,GAAgBlE,EAAKhB,EAAS,gBAAiB,MAAM,EACrDmF,GAAQnE,EAAKhB,EAAS,QAAS,MAAM,EACrCoF,GAAUpE,EAAKhB,EAAS,UAAW,MAAM,EACzCqF,GAAQrE,EAAKhB,EAAS,QAAS,MAAM,EACrC0B,GAASV,EAAKhB,EAAS,SAAUyB,EAAW,EAC5C6D,GAAQtE,EAAKhB,EAAS,QAAS,MAAM,EACrCuF,GAASvE,EAAKhB,EAAS,QAAQ,EAC/BwF,GAASxE,EAAKhB,EAAS,QAAQ,EAC/B6B,GAASD,GAAU5B,CAAO,EAE1ByF,GAAOV,GACPjB,GAAS,CAAC,EAEV4B,GAASxF,EAAO,MAAQ2B,GAAO,EAC/B8D,GAASzF,EAAO,OAAS2B,GAAO,EAE7B4D,MACL3B,GAAO,KACLjB,GAAc,CACZ,EAAG6C,GACH,EAAGC,GACH,MAAOX,GACP,OAAQC,GACR,cAAeC,GACf,MAAOxD,GAAO+D,GAAO/D,GAAO,MAAM,EAClC,MAAO6D,GAAOnE,GAAU,EAAGmE,GAAO,MAAM,CAAC,EACzC,MAAOD,GACP,MAAOH,GACP,QAASC,GACT,MAAOC,GACP,OAAQG,EACV,CAAC,CACH,EAKF,OAAIX,EACKA,EAAa,UAAUf,EAAM,GAGtCe,EAAehB,GAAQ3D,EAAQ4D,GAAQC,EAAS3D,GAAOC,EAAI,EAEpDwE,EAAa,QACtB,CAEA,SAASe,GAAK5F,EAAS,CACrB,IAAI6F,GAA0BpB,GAAiCzD,EAAKhB,EAAS,0BAA2B,OAAO,EAC3GkC,GAASlB,EAAKhB,EAAS,SAAU,MAAM,EAE3C,GAAI6F,IAA2BjB,GAC7B,OAAOjG,EAAQ,SAAU2B,GAAS,CAChCA,GAAQ,CACV,CAAC,EAGCiE,GAAeM,EAEjB3E,EAAS2E,EAAa,OACbN,GAAe,CAACrE,IAEzBA,EAAS+B,GAAUC,EAAM,EACzB,SAAS,KAAK,YAAYhC,CAAM,GAG9BsE,GAAe,CAACG,GAElBZ,EAAQ7D,CAAM,EAGhB,IAAIE,GAAO,CACT,MAAOF,EAAO,MACd,OAAQA,EAAO,MACjB,EAEIP,GAAU,CAACgF,GACbhF,EAAO,KAAKO,CAAM,EAGpByE,EAAc,GAEVhF,IACFO,EAAO,uBAAyB,IAGlC,SAAS4F,IAAW,CAClB,GAAInG,EAAQ,CAEV,IAAIoG,GAAM,CACR,sBAAuB,UAAY,CACjC,GAAI,CAACxB,EACH,OAAOrE,EAAO,sBAAsB,CAExC,CACF,EAEA6D,EAAQgC,EAAG,EAEXpG,EAAO,YAAY,CACjB,OAAQ,CACN,MAAOoG,GAAI,MACX,OAAQA,GAAI,MACd,CACF,CAAC,EACD,OAKF3F,GAAK,MAAQA,GAAK,OAAS,IAC7B,CAEA,SAASC,IAAO,CACdwE,EAAe,KAEXL,GACFlG,EAAO,oBAAoB,SAAUwH,EAAQ,EAG3CvB,GAAerE,IACjB,SAAS,KAAK,YAAYA,CAAM,EAChCA,EAAS,KACTyE,EAAc,GAElB,CAMA,OAJIH,GACFlG,EAAO,iBAAiB,SAAUwH,GAAU,EAAK,EAG/CnG,EACKA,EAAO,KAAKK,EAASI,GAAMC,EAAI,EAGjCyE,GAAU9E,EAASI,GAAMC,EAAI,CACtC,CAEA,OAAAuF,GAAK,MAAQ,UAAY,CACnBjG,GACFA,EAAO,MAAM,EAGXkF,GACFA,EAAa,MAAM,CAEvB,EAEOe,EACT,CAGA,IAAII,GACJ,SAASC,IAAiB,CACxB,OAAKD,KACHA,GAAc3B,GAAe,KAAM,CAAE,UAAW,GAAM,OAAQ,EAAK,CAAC,GAE/D2B,EACT,CAEA5H,EAAO,QAAU,UAAW,CAC1B,OAAO6H,GAAe,EAAE,MAAM,KAAM,SAAS,CAC/C,EACA7H,EAAO,QAAQ,MAAQ,UAAW,CAChC6H,GAAe,EAAE,MAAM,CACzB,EACA7H,EAAO,QAAQ,OAASiG,EAC1B,GAAG,UAAY,CACb,OAAI,OAAO,OAAW,IACb,OAGL,OAAO,KAAS,IACX,KAGF,MAAQ,CAAC,CAClB,EAAG,EAAGjG,GAAQ,EAAK,EAInB,IAAO8H,GAAQ9H,GAAO,QACX+H,GAAS/H,GAAO,QAAQ,OCvnB5B,IAAMgI,GAAQ,CACjB,aAAwB,CAEpB,OAAO,OAAO,UAAU,UAAU,QAAQ,UAAU,IAAM,GAAKC,GAAS,KAAK,IAAMA,GAAS,KAAK,EACrG,EACA,UAAW,CACP,OAAO,OAAO,WAAW,CAC7B,EACA,eAAeC,EAAyB,CACpC,IAAMC,EAAO,SAAS,eAAeD,CAAE,EACvC,GAAIC,EACA,OAAOA,EAEP,MAAM,IAAI,MAAM,+BAA+BD,IAAK,CAE5D,EACA,iBAAiBA,EAA2B,CACxC,IAAMC,EAAO,SAAS,eAAeD,CAAE,EACvC,OAAOC,EAAO,CAACA,CAAI,EAAI,CAAC,CAC5B,EACA,WAAWC,EAAiC,CACxC,IAAMC,EAAU,CAACD,CAAG,EAChBE,EAASF,EAAI,cACjB,KAAOE,GACHD,EAAQ,KAAKC,CAAM,EACnBA,EAASA,EAAO,cAEpB,OAAOD,CACX,EACA,WAAWD,EAAkBG,EAAiE,CAC1F,OAAIA,EAAUH,CAAG,EACNA,EACAA,EAAI,cACJJ,GAAM,WAAWI,EAAI,cAAeG,CAAS,EAEpD,MAER,EACA,WAAWL,EAAuC,CAC9C,IAAMM,EAAUN,EAAKF,GAAM,eAAeE,CAAE,EAAI,SAAS,KAEzD,OADeM,EAAQ,kBAAoBA,EAAQ,kBAAkB,EAAI,QAAQ,OAAO,IAAI,MAAM,iCAAiC,CAAC,GACtH,MAAMC,GAAE,CA5C9B,IAAAC,EA4CiC,OAAAA,EAAA,OAAO,KAAK,OAAO,SAAS,KAAM,QAAQ,IAA1C,YAAAA,EAA6C,QAAO,CACjF,EACA,aAAaC,EAAkBC,EAAiB,CAC5C,IAAMJ,EAAU,SAAS,cAAc,GAAG,EAC1CA,EAAQ,aAAa,OAAQ,iCAAmC,mBAAmBI,CAAO,CAAC,EAC3FJ,EAAQ,aAAa,WAAYG,CAAQ,EAEzCH,EAAQ,MAAM,QAAU,OACxB,SAAS,KAAK,YAAYA,CAAO,EAEjCA,EAAQ,MAAM,EAEd,SAAS,KAAK,YAAYA,CAAO,CACrC,EACA,eAAeN,EAAkB,CAE7B,IAAME,EAAM,SAAS,eAAeF,CAAE,EACtC,GAAI,CAACE,EAAK,CACN,QAAQ,KAAK,gBAAgBF,sBAAuB,EACpD,OAGJ,IAAMW,EAAOT,EAAI,sBAAsB,EACjCU,GAAQD,EAAK,KAAOA,EAAK,OAAS,EAClCE,EAAM,IAAMF,EAAK,IAAMA,EAAK,QAAU,EAC5CG,GAAS,CACL,cAAe,IACf,OAAQ,GACR,OAAQ,CAAC,EAAGF,EAAO,OAAO,WAAY,EAAGC,EAAM,OAAO,WAAW,EACjE,wBAAyB,EAC7B,CAAC,CACL,EACA,qBAA4B,CACxB,IAAME,EAAM,KAAK,IAAI,EAAK,IACpBC,EAAS,CAAC,UAAW,SAAS,GAEnC,SAASC,GAAQ,CACdH,GAAS,CACL,cAAe,EACf,MAAO,GACP,OAAQ,GACR,OAAQ,CAAC,EAAG,CAAC,EACb,OAAQE,EACR,OAAQ,GACZ,CAAC,EACDF,GAAS,CACL,cAAe,EACf,MAAO,IACP,OAAQ,GACR,OAAQ,CAAC,EAAG,CAAC,EACb,OAAQE,EACR,OAAQ,GACZ,CAAC,EAEG,KAAK,IAAI,EAAID,GACb,sBAAsBE,CAAK,CAEnC,GAAE,CACN,EACA,iBAAwB,CAEpB,IAAMC,EAAe,KAAK,IAAI,EAAI,IAC5BC,EAAW,CAAE,cAAe,GAAI,OAAQ,IAAK,MAAO,GAAI,OAAQ,KAAsB,EACtFC,EAAgB,CAACC,EAAaC,IAAwB,KAAK,OAAO,GAAKA,EAAMD,GAAOA,EAEpFE,EAAgB,YAAY,IAAM,CACpC,IAAMC,EAAWN,EAAe,KAAK,IAAI,EACzC,GAAIM,GAAY,EAAK,OAAO,cAAcD,CAAQ,EAElD,IAAME,EAAgB,KAAOD,EAAW,KAExCV,GAAS,OAAO,OAAO,CAAC,EAAGK,EAAU,CAAE,cAAAM,EAAe,OAAQ,CAAE,EAAGL,EAAc,GAAK,EAAG,EAAG,EAAG,KAAK,OAAO,EAAI,EAAI,CAAE,CAAC,CAAC,EACvHN,GAAS,OAAO,OAAO,CAAC,EAAGK,EAAU,CAAE,cAAAM,EAAe,OAAQ,CAAE,EAAGL,EAAc,GAAK,EAAG,EAAG,EAAG,KAAK,OAAO,EAAI,EAAI,CAAE,CAAC,CAAC,CAC3H,EAAG,GAAG,CACV,CACJ,EClHO,IAAMM,GAAN,KAA6C,CAqBhD,YAAoBC,EAAyBC,EAAgB,CAAzC,QAAAD,EAAyB,YAAAC,EAF7C,KAAO,KAAoB,YAK3B,iBAAeC,IACX,KAAK,OAAO,MAAM,yBAAyBA,IAAK,EACzC,KAAK,UAAU,UAAU,EAC3B,KAAKC,GAAS,KAAK,WAAWA,EAAOD,CAAE,CAAC,EACxC,KAAKE,GAAKA,GAAQ,QAAQ,OAAO,WAAW,CAAC,GAEtD,mBAAgB,CAACF,EAAeE,KAC5B,KAAK,OAAO,MAAM,2BAA2BF,KAAOE,CAAC,EAC9C,KAAK,UAAU,WAAW,EAAE,KAAKD,GAC7B,KAAK,WAAWA,EAAOD,CAAE,EAAE,KAAKG,GAC/BA,EACO,QAAQ,OAAO,WAAWH,uBAAwB,KAAK,MAAM,EAE7DI,GAAaH,EAAM,IAAII,GAAAC,GAAA,GAAQC,EAASL,EAAGM,GAAa,aAAa,GAA9C,CAAiD,GAAAR,CAAE,EAAC,CAAC,EAAE,KAAKS,GAAKP,CAAC,CAEvG,CACJ,GAEL,mBAAgB,CAACF,EAAeE,KAC5B,KAAK,OAAO,MAAM,2BAA2BF,KAAOE,CAAC,EAC9C,KAAK,UAAU,WAAW,EAAE,KAAKD,GAC7B,KAAK,WAAWA,EAAOD,CAAE,EAAE,KAAKG,GAC/BA,EACOC,GAAaH,EAAM,IAAII,GAAAC,GAAA,GAAQC,EAASL,EAAGM,GAAa,aAAa,GAA9C,CAAiD,GAAAR,CAAE,EAAC,CAAC,EAAE,KAAKS,GAAKP,CAAC,EAEzF,QAAQ,OAAO,WAAWF,uBAAwB,KAAK,MAAM,CAE3E,CACJ,GAEL,mBAAiBA,IACb,KAAK,OAAO,MAAM,2BAA2BA,IAAK,EAC3C,KAAK,UAAU,WAAW,EAAE,KAAKC,GAASG,GAAaH,EAAM,OAAOD,CAAE,CAAC,CAAC,EAlCnF,CAjBA,OAAO,KAAKD,EAA2C,CACnD,OAAO,OAAO,UAAY,IAAI,QAA0B,CAACW,EAASC,IAAW,CACzE,IAAMC,EAAc,OAAO,UAAU,KAAKf,GAAiB,aAAcA,GAAiB,eAAe,EACzGe,EAAY,QAAUH,GAAKE,EAAO,0BAA0B,EAC5DC,EAAY,UAAaC,GAAeH,EAAQ,IAAIb,GAAiBgB,EAAM,OAAO,OAAQd,CAAM,CAAC,EACjGa,EAAY,gBAAmBC,GAAe,CAC1C,IAAMf,EAAKe,EAAM,OAAO,OACnBf,EAAG,iBAAiB,SAASD,GAAiB,UAAU,GACzDC,EAAG,kBAAkBD,GAAiB,WAAY,CAAC,QAAS,IAAI,CAAC,CAEzE,CACJ,CAAC,EAAI,QAAQ,OAAO,yBAAyB,CACjD,CA0CQ,UAAUiB,EAAmD,CACjE,OAAO,IAAI,QAAwBJ,GAAWA,EAAQ,KAAK,GAAG,YAAYb,GAAiB,WAAYiB,CAAI,EAAE,YAAYjB,GAAiB,UAAU,CAAC,CAAC,CAC1J,CAEQ,WAAWI,EAAuBD,EAAiD,CACvF,OAAO,IAAI,QAAiC,CAACU,EAASC,IAAW,CAC7DV,EAAM,IAAID,CAAE,EAAE,UAAaa,GAAe,CACtC,GAAI,CACAH,EAAYH,EAASQ,GAASF,EAAM,OAAO,MAAM,EAAGL,GAAY,SAAS,EAAG,cAAc,CAAC,CAC/F,OAASQ,EAAP,CACEL,EAAOK,CAAC,CACZ,CACJ,EACCf,EAAc,QAAWgB,GAAaN,EAAO,2BAA2BM,GAAK,CAClF,CAAC,CACL,CACJ,EA3EaC,GAANrB,GAAMqB,GACF,aAAe,UADbA,GAEF,gBAAkB,EAFhBA,GAGF,WAAa,WA0ExB,SAASH,GAASI,EAA6B,CAC3C,GAAI,OAAOA,GAAU,UAAYA,IAAU,KAAM,CAC7C,IAAsBC,EAAAD,EAAf,IAAAnB,CApFf,EAoF8BoB,EACtB,OADcC,GAAQD,EAAR,CAAP,WAGP,QAAOD,CAEf,CAEA,SAASf,GAAgBkB,EAAgC,CACrD,OAAO,IAAI,QAAW,CAACZ,EAASC,IAAW,CACvCW,EAAI,QAAUb,GAAKE,EAAOW,EAAI,KAAK,EACnCA,EAAI,UAAYb,GAAKC,EAAQY,EAAI,MAAM,CAC3C,CAAC,CACL,CC9FO,SAASC,GAAMC,EAAoB,CACtC,GAAI,CACA,OAAO,KAAK,MAAMA,CAAK,CAC3B,OAAS,EAAP,CACE,IAAMC,GAAID,GAAA,YAAAA,EAAO,QAAS,GAAKA,EAAM,MAAM,EAAG,EAAE,EAAI,MAAQA,EAC5D,KAAM,GAAG,KAAK,UAAUC,CAAC,0BAA0BC,GAAY,CAAC,IACpE,CACJ,CCFO,IAAMC,GAAN,KAAgD,CAUnD,YAAoBC,EAAgB,CAAhB,YAAAA,EAHpB,KAAO,KAAoB,eAC3B,KAAQ,OAAS,WAKjB,iBAAeC,IACX,KAAK,OAAO,MAAM,4BAA4BA,IAAK,EAC5C,QAAQ,QAAQ,KAAK,WAAW,KAAK,QAAQA,CAAE,CAAC,CAAC,EAAE,KAAKC,GAAKA,GAAQ,QAAQ,OAAO,WAAW,CAAC,GAE3G,mBAAgB,CAACD,EAAeC,IAAyC,CACrE,KAAK,OAAO,MAAM,8BAA8BD,KAAOC,CAAC,EACxD,IAAMC,EAAM,KAAK,QAAQF,CAAE,EAC3B,OAAI,OAAO,aAAa,QAAQE,CAAG,IAAM,KAC9B,KAAK,WAAWA,EAAKD,CAAC,EAEtB,QAAQ,OAAO,WAAWD,uBAAwB,KAAK,MAAM,CAE5E,EACA,mBAAgB,CAACA,EAAeC,IAAyC,CACrE,KAAK,OAAO,MAAM,8BAA8BD,KAAOC,CAAC,EACxD,IAAMC,EAAM,KAAK,QAAQF,CAAE,EAC3B,OAAI,OAAO,aAAa,QAAQE,CAAG,IAAM,KAC9B,QAAQ,OAAO,WAAWF,uBAAwB,KAAK,MAAM,EAE7D,KAAK,WAAWE,EAAKD,CAAC,CAErC,EACA,mBAAiBD,IACb,KAAK,OAAO,MAAM,8BAA8BA,IAAK,EACrD,OAAO,aAAa,WAAW,KAAK,QAAQA,CAAE,CAAC,EACxC,QAAQ,QAAQ,GAG3B,KAAQ,QAAWA,GAA0B,KAAK,OAASA,EAC3D,KAAQ,WAAcE,GAAsC,CACxD,IAAMC,EAAQ,OAAO,aAAa,QAAQD,CAAG,EAC7C,GAAIC,IAAU,KACV,OAAO,QAAQ,OAAO,2BAA2B,KAAK,UAAUD,CAAG,GAAG,EAE1E,GAAI,CACA,OAAO,QAAQ,QAAYE,EAAcC,GAAMF,CAAK,EAAGG,GAAa,aAAa,CAAC,CACtF,OAASC,EAAP,CACE,OAAO,QAAQ,OAAO,gCAAgC,KAAK,UAAUL,CAAG,MAAMM,GAAYD,CAAC,GAAG,CAClG,CACJ,EACA,KAAQ,WAAa,CAACL,EAAaD,IAAyC,CACxE,GAAI,CACA,cAAO,aAAa,QAAQC,EAASO,GAAUR,EAAGK,GAAa,aAAa,CAAC,EACtE,QAAQ,QAAQL,CAAC,CAC5B,OAASM,EAAP,CACE,OAAO,QAAQ,OAAOA,CAAC,CAC3B,CACJ,CAjDA,CAVA,OAAO,KAAKR,EAA8C,CACtD,OAAO,OAAO,aACV,QAAQ,QAAQ,IAAID,GAAoBC,CAAM,CAAC,EAC/C,QAAQ,OAAO,4BAA4B,CACnD,CAwDJ,EC/DO,IAAMW,GAAN,KAA4C,CAG/C,YAAoBC,EAAwBC,EAA0C,CAAC,EAAG,CAAtE,YAAAD,EAAwB,cAAAC,EAF5C,KAAO,KAAoB,WAK3B,iBAAeC,IACX,KAAK,OAAO,MAAM,wBAAwBA,IAAK,EACxC,KAAK,SAASA,CAAE,EAAI,QAAQ,QAAYC,EAAS,KAAK,SAASD,CAAE,EAAGE,GAAa,aAAa,CAAC,EAAI,QAAQ,OAAO,WAAW,GAExI,mBAAgB,CAACF,EAAeG,KAC5B,KAAK,OAAO,MAAM,0BAA0BH,KAAOG,CAAC,EACjD,KAAK,SAASH,CAAE,EACR,QAAQ,OAAO,WAAWA,uBAAwB,KAAK,MAAM,GAEpE,KAAK,SAASA,CAAE,EAAQC,EAASE,EAAGD,GAAa,aAAa,EACvD,QAAQ,QAAQC,CAAC,IAGhC,mBAAgB,CAACH,EAAeG,KAC5B,KAAK,OAAO,MAAM,0BAA0BH,KAAOG,CAAC,EACjD,KAAK,SAASH,CAAE,GACf,KAAK,SAASA,CAAE,EAAQC,EAASE,EAAGD,GAAa,aAAa,EACvD,QAAQ,QAAQC,CAAC,GAEjB,QAAQ,OAAO,WAAWH,uBAAwB,KAAK,MAAM,GAG5E,mBAAiBA,IACb,KAAK,OAAO,MAAM,0BAA0BA,IAAK,EACjD,OAAO,KAAK,SAASA,CAAE,EAChB,QAAQ,QAAQ,EA3B3B,CA6BJ,EClBO,SAASI,GAAaC,EAAiC,CAC1D,OAAOA,EAAI,OAAO,CAACC,EAAKC,IACbD,EAAI,KAAKE,GAAOD,EAAQ,KAAKE,GAAKD,EAAI,OAAO,CAACC,CAAC,CAAC,CAAC,EAAE,MAAMC,GAAKF,CAAG,CAAC,EAC1E,QAAQ,QAAQ,CAAC,CAAQ,CAAC,CACjC,CChBO,IAAMG,GAAN,KAAc,CAMjB,YAAoBC,EAAgB,CAAhB,YAAAA,EALpB,KAAO,KAAoB,UAW3B,gBAAcC,IACV,KAAK,OAAO,MAAM,sBAAsBA,IAAK,EACtC,KAAK,UAAU,KAAKC,GAAKA,EAAE,YAAYD,CAAE,CAAC,EAC5C,MAAME,GAAKA,IAAM,YAAc,KAAK,aAAa,KAAKD,GAAKA,EAAE,YAAYD,CAAE,CAAC,EAAI,QAAQ,OAAOE,CAAC,CAAC,EACjG,MAAMA,GAAKA,IAAM,YAAc,KAAK,SAAS,YAAYF,CAAE,EAAI,QAAQ,OAAOE,CAAC,CAAC,EAChF,MAAMA,GAAK,QAAQ,OAAOA,IAAM,YAAc,qBAAqBF,IAAOE,CAAC,CAAC,GAGrF,mBAAgB,CAACF,EAAeG,KAC5B,KAAK,OAAO,MAAM,yBAAyBH,KAAOG,CAAC,EAC5C,KAAK,UAAU,MAAMC,GAAK,KAAK,YAAY,EAAE,MAAMA,GAAK,KAAK,QAAQ,EACvE,KAAKH,GAAKA,EAAE,cAAcD,EAAIG,CAAC,CAAC,EAChC,KAAKC,GAAE,EAAY,GAG5B,mBAAgB,CAACJ,EAAeG,KAC5B,KAAK,OAAO,MAAM,yBAAyBH,KAAOG,CAAC,EAC5C,KAAK,UAAU,MAAMC,GAAK,KAAK,YAAY,EAAE,MAAMA,GAAK,KAAK,QAAQ,EACvE,KAAKH,GAAKA,EAAE,cAAcD,EAAIG,CAAC,CAAC,EAChC,KAAKC,GAAE,EAAY,GAG5B,mBAAiBJ,IACb,KAAK,OAAO,MAAM,yBAAyBA,IAAK,EACzCK,GAAU,CACb,KAAK,UAAU,KAAKJ,GAAKA,EAAE,cAAcD,CAAE,CAAC,EAC5C,KAAK,aAAa,KAAKC,GAAKA,EAAE,cAAcD,CAAE,CAAC,EAC/C,KAAK,SAAS,cAAcA,CAAE,CAClC,CAAC,EAAE,KAAKI,GAAE,EAAY,GAjCtB,KAAK,UAAYE,GAAiB,KAAKP,EAAO,aAAa,CAAC,EAC5D,KAAK,aAAeQ,GAAoB,KAAKR,EAAO,aAAa,CAAC,EAClE,KAAK,SAAW,IAAIS,GAAgBT,EAAO,aAAa,CAAC,CAC7D,CAgCJ,EC9CO,IAAMU,GAAU,CAAWC,EAAaC,EAAwBC,IAAqC,MAAMF,EAAK,CAAC,YAAa,SAAS,CAAC,EAAE,KAAKG,GAAkBF,EAAKC,CAAK,CAAC,EACtKE,GAAW,CAAiBJ,EAAaK,EAAYJ,EAAwBC,IAAqCI,GAAU,OAAQN,EAAKK,EAAMJ,EAAKC,CAAK,EACzJK,GAAgB,CAAOP,EAAaK,IAA8BG,GAAe,OAAQR,EAAKK,CAAI,EAClGI,GAAgB,CAAWT,EAAaK,EAAgBJ,EAAwBC,IAAqCQ,GAAe,OAAQV,EAAKK,EAAMJ,EAAKC,CAAK,EACjKS,GAAU,CAAiBX,EAAaK,EAAYJ,EAAwBC,IAAqCI,GAAU,MAAON,EAAKK,EAAMJ,EAAKC,CAAK,EACvJU,GAAe,CAAWZ,EAAaK,EAAgBJ,EAAwBC,IAAqCQ,GAAe,MAAOV,EAAKK,EAAMJ,EAAKC,CAAK,EAC/JW,GAAmBb,GAA+B,MAAMA,EAAK,CAAC,OAAQ,SAAU,YAAa,SAAS,CAAC,EAAE,KAAKc,EAAsB,EAKjJ,SAASR,GAA0BS,EAAgBf,EAAaK,EAAYJ,EAAwBC,EAAkC,CAClI,OAAO,MAAMF,EAAK,CACd,OAAAe,EACA,YAAa,UACb,QAAS,CAAC,OAAU,mBAAoB,eAAgB,kBAAkB,EAC1E,KAAM,KAAK,UAAUV,CAAI,CAC7B,CAAC,EAAE,KAAKF,GAAkBF,EAAKC,CAAK,CAAC,CACzC,CAEA,SAASM,GAAqBO,EAAgBf,EAAaK,EAA2B,CAClF,OAAO,MAAML,EAAK,CACd,OAAAe,EACA,YAAa,UACb,QAAS,CAAC,OAAU,mBAAoB,eAAgB,kBAAkB,EAC1E,KAAM,KAAK,UAAUV,CAAI,CAC7B,CAAC,EAAE,KAAKS,EAAsB,CAClC,CAEA,SAASJ,GAAyBK,EAAgBf,EAAaK,EAAgBJ,EAAwBC,EAAkC,CACrI,OAAO,MAAMF,EAAK,CACd,OAAAe,EACA,YAAa,UACb,KAAMV,CACV,CAAC,EAAE,KAAKF,GAAkBF,EAAKC,CAAK,CAAC,CACzC,CAEA,IAAMC,GAAoB,CAAIF,EAAiBC,IAAmBc,GAC9DA,EAAI,GAAKA,EAAI,KAAK,EAAE,KAAKC,GAASC,EAAcC,GAAMF,CAAC,EAAGhB,EAAKC,CAAK,CAAC,EAAIc,EAAI,KAAK,EAAE,KAAKI,GAAO,QAAQ,OAAYD,GAAMC,CAAG,CAAC,CAAC,EAC7HN,GAA0BE,GAC5BA,EAAI,GAAK,QAAQ,QAAQ,EAAIA,EAAI,KAAK,EAAE,KAAKI,GAAO,QAAQ,OAAYD,GAAMC,CAAG,CAAC,CAAC,ECbvF,IAAAC,GAAsB,SAKf,IAAMC,GAAN,KAAc,CAGjB,YAAoBC,EAAkBC,EAAgB,CAAlC,SAAAD,EAAkB,YAAAC,EAFtC,KAAQ,SAA6C,CAAC,EAKtD,cAAYC,GACRA,EAAa,uBAAuB,mBAAmBA,CAAU,IAAM,SAE3E,gBAAa,CAAOC,EAAmBC,EAAcC,IAA8DC,GAAA,sBAC/G,KAAK,OAAO,MAAM,sBAAsBH,MAAMC,MAAMC,IAAI,EACxD,IAAME,EAAU,MAAM,KAAK,aAAaJ,EAAGC,EAAGC,CAAC,EAC/C,OAAIE,EAAQ,UAAYC,EAAe,KAAK,SACxC,KAAK,SAASJ,CAAC,EAAIG,EAAQ,SAExBA,CACX,GAEA,KAAQ,aAAe,CAACJ,EAAmBC,EAAcC,IAA8D,CACnH,IAAMI,EAAQJ,EAAI,SAASA,KAAO,GAC5BK,EAAM,KAAK,YAAY,yBAAyBP,cAAcC,KAAKK,gDAAoD,EAC7H,OAAYE,GAAQD,EAAKE,GAA4B,4BAA4B,EAAE,KAAKC,EAAwB,CACpH,EAEA,wBAAqB,CAACV,EAAmBW,IAAiD,CACtF,KAAK,OAAO,MAAM,8BAA8BX,KAAMW,CAAI,EAC1D,IAAMJ,EAAM,KAAK,YAAY,yBAAyBP,kDAAkD,EACxG,OAAYY,GAASL,EAAKM,GAAcF,EAAMN,EAAe,KAAK,KAAK,EAAGS,GAAiB,iBAAiB,EAAE,KAAKC,EAAa,EAC3H,KAAKC,GAAOC,GAAQD,CAAG,EAAIA,EAAM,QAAQ,OAAO,2BAA2B,CAAC,CACrF,EAEA,yBAAsB,CAAOhB,EAAmBW,IAAkDR,GAAA,sBAC9F,KAAK,OAAO,MAAM,+BAA+BH,KAAMW,CAAI,EAC3D,IAAMJ,EAAM,KAAK,YAAY,yBAAyBP,kDAAkD,EAClGkB,EAAqB,IAAI,SAC/B,OAAO,QAAQL,GAAcF,EAAMN,EAAe,KAAK,MAAM,CAAC,EACzD,OAAO,CAAC,CAACc,EAAGC,CAAK,IAAMA,GAAU,IAA2B,EAC5D,IAAI,CAAC,CAACC,EAAKD,CAAK,IAAMF,EAAS,OAAOG,EAAK,OAAOD,GAAU,SAAWA,EAAQ,KAAK,UAAUA,CAAK,CAAC,CAAC,EAC1GF,EAAS,OAAO,OAAQ,IAAI,KAAK,CAACI,GAAcX,CAAI,CAAC,EAAG,CAAC,KAAM,kBAAkB,CAAC,EAAG,GAAGA,EAAK,WAAW,EACxG,IAAMK,EAAM,MAAWO,GAAchB,EAAKW,EAAUJ,GAAiB,iBAAiB,EAAE,KAAKC,EAAa,EAC1G,YAAK,SAASC,EAAI,EAAE,EAAIL,EACjBa,GAASR,CAAG,EAAIA,EAAM,QAAQ,OAAO,4BAA4B,CAC5E,GAEA,wBAAsBf,GAA0C,CAhFpE,IAAAwB,EAkFQ,GADA,KAAK,OAAO,MAAM,+BAA8BA,EAAAxB,EAAE,eAAF,YAAAwB,EAAgB,OAAOxB,EAAE,MAAOA,CAAC,EAC7E,CAACA,EAAE,aAAc,OAAO,QAAQ,OAAO,6CAA6C,EACxF,GAAIA,EAAE,UAAYI,EAAe,KAAK,MAAO,OAAO,QAAQ,OAAO,2BAA2B,EAC9F,IAAME,EAAM,KAAK,YAAY,yBAAyBN,EAAE,aAAa,eAAeA,EAAE,0CAA0C,EAC1HU,EAAOe,GAAiBzB,CAAC,EAC/B,OAAY0B,GAAQpB,EAAKM,GAAcF,EAAMN,EAAe,KAAK,KAAK,EAAGS,GAAiB,iBAAiB,EAAE,KAAKC,EAAa,EAC1H,KAAKC,GAAOC,GAAQD,CAAG,EAAIA,EAAM,QAAQ,OAAO,2BAA2B,CAAC,CACrF,EAEA,yBAA6Bf,GAA2CE,GAAA,sBA1F5E,IAAAsB,EA4FQ,GADA,KAAK,OAAO,MAAM,gCAA+BA,EAAAxB,EAAE,eAAF,YAAAwB,EAAgB,OAAOxB,EAAE,MAAOA,CAAC,EAC9E,CAACA,EAAE,aAAc,OAAO,QAAQ,OAAO,6CAA6C,EACxF,GAAIA,EAAE,UAAYI,EAAe,KAAK,OAAQ,OAAO,QAAQ,OAAO,4BAA4B,EAEhG,IAAMuB,EAAU,KAAK,SAAS3B,EAAE,EAAE,EAC5B4B,EAAU,MAAM,KAAK,aAAa5B,EAAE,aAAa,GAAIA,EAAE,GAAI,IAAI,EAChE,KAAKA,GAAKuB,GAASvB,CAAC,EAAIA,EAAI,QAAQ,OAAO,4BAA4B,CAAC,EACzEU,EAAOe,GAAiBzB,CAAC,EAC7B,GAAI4B,EAAQ,YAAc5B,EAAE,UACxB,GAAI,CAEA,IAAM6B,EAAa,QAAKF,EAASjB,CAAI,EACrCA,EAAY,SAAMmB,EAAOD,EAAQ,OAAO,CAC5C,OAASE,EAAP,CACE,eAAQ,KAAK,eAAgBA,CAAC,EACvB,QAAQ,OAAO,gDAAgD,CAC1E,CAGJ,GAAI,CAAC9B,EAAE,aAAc,OAAO,QAAQ,OAAO,6CAA6C,EACxF,IAAMM,EAAM,KAAK,YAAY,yBAAyBN,EAAE,aAAa,eAAeA,EAAE,0CAA0C,EAC1HiB,EAAqB,IAAI,SAC/B,OAAO,QAAQL,GAAcF,EAAMN,EAAe,KAAK,MAAM,CAAC,EACzD,OAAO,CAAC,CAACc,EAAGC,CAAK,IAAMA,GAAU,IAA2B,EAC5D,IAAI,CAAC,CAACC,EAAKD,CAAK,IAAMF,EAAS,OAAOG,EAAK,OAAOD,GAAU,SAAWA,EAAQ,KAAK,UAAUA,CAAK,CAAC,CAAC,EAC1GF,EAAS,OAAO,OAAQ,IAAI,KAAK,CAACI,GAAcX,CAAI,CAAC,EAAG,CAAC,KAAM,kBAAkB,CAAC,EAAG,GAAGV,EAAE,aAAa,MAAMA,EAAE,WAAW,EAC1H,IAAMe,EAAM,MAAWgB,GAAazB,EAAKW,EAAUJ,GAAiB,iBAAiB,EAAE,KAAKC,EAAa,EACzG,YAAK,SAASd,EAAE,EAAE,EAAIU,EACfa,GAASR,CAAG,EAAIA,EAAM,QAAQ,OAAO,4BAA4B,CAC5E,GAEA,mBAAgB,CAAOhB,EAAmBC,IAAgCE,GAAA,sBACtE,KAAK,OAAO,MAAM,yBAAyBH,MAAMC,IAAI,EACrD,IAAMM,EAAM,KAAK,YAAY,yBAAyBP,cAAcC,GAAG,EACvE,MAAWgC,GAAgB1B,CAAG,EAC9B,OAAO,KAAK,SAASN,CAAC,CAC1B,GAEA,mBAAgB,CAAOiC,EAAuBC,IAAqChC,GAAA,sBAC/E,KAAK,OAAO,MAAM,yBAAyB+B,MAAaC,IAAK,EAC7D,GAAM,CAAC,OAAAC,EAAQ,MAAAC,CAAK,EAAIC,GAAaH,CAAE,EACjC5B,EAAM,KAAK,YAAY,wBAAwB,EACrD,OAAYK,GAASL,EAAK,CAAC,IAAK2B,EAAU,OAAAE,EAAQ,MAAAC,CAAK,EAAGE,GAAY,YAAY,CACtF,GAEA,oBAAiB,CAAOL,EAAuBM,IAA4CrC,GAAA,sBACvF,KAAK,OAAO,MAAM,0BAA0B+B,MAAa,KAAK,UAAUM,CAAM,IAAI,EAClF,GAAM,CAAC,OAAAJ,EAAQ,MAAAC,CAAK,EAAIC,GAAaE,EAAO,KAAK,EAC3CjC,EAAM,KAAK,YAAY,wBAAwB,EACrD,OAAYK,GAASL,EAAK,CAAC,IAAK2B,EAAU,OAAAE,EAAQ,MAAAC,EAAO,OAAQG,EAAO,MAAM,EAAGC,GAAa,aAAa,CAC/G,GAEA,gBAAcC,GAA4B,CACtC,KAAK,OAAO,MAAM,sBAAsB,KAAK,UAAUA,CAAK,IAAI,EAChE,IAAMnC,EAAM,KAAK,YAAY,gBAAgB,EACxCoC,GAAcpC,EAAKmC,CAAK,EAAE,KAAKvB,GAAE,EAAY,CACtD,CA3GA,CA6GQ,YAAYyB,EAAsB,CACtC,OAAI,KAAK,KAAOC,GAAI,KAAK,IACd,GAAGD,IACH,KAAK,KAAOC,GAAI,KAAK,QACrB,sBAAsBD,IAEtB,sBAAsBA,GAErC,CACJ,EAcaE,GAAuBC,EAAE,OAAO,CACzC,WAAYA,EAAE,OAAO,EACrB,UAAWA,EAAE,OAAO,EACpB,WAAYA,EAAE,OAAO,EACrB,aAAcA,EAAE,OAAO,EACvB,SAAUA,EAAE,OAAO,EACnB,YAAaA,EAAE,OAAO,EACtB,WAAYA,EAAE,OAAO,EACrB,SAAUA,EAAE,OAAO,EACnB,SAAUA,EAAE,OAAO,CACvB,CAAC,EAAE,OAAO,EAoBGC,GAAuBD,EAAE,OAAO,CACzC,GAAIE,GACJ,KAAMC,GACN,KAAMH,EAAE,OAAO,EACf,KAAMI,GACN,KAAMJ,EAAE,OAAO,EACf,SAAUA,EAAE,OAAO,EAAE,SAAS,EAC9B,YAAaA,EAAE,OAAO,EAAE,SAAS,EACjC,OAAQK,GAAe,SAAS,CACpC,CAAC,EAAE,OAAO,EAgBGtC,GAAkBgC,GAAqB,OAAO,CACvD,aAAcE,GACd,GAAIK,GACJ,KAAMC,GACN,KAAMC,GACN,YAAaR,EAAE,OAAO,EAAE,SAAS,EACjC,iBAAkBS,GAClB,aAAcnD,EACd,WAAYoD,GACZ,WAAYC,GACZ,WAAYA,GACZ,YAAaA,GAAS,SAAS,CACnC,CAAC,EAAE,OAAO,EAMGjD,GAA6BK,GAAgB,OAAO,CAC7D,QAASiC,EAAE,OAAO,EAAE,SAAS,CACjC,CAAC,EAAE,OAAO,EAEV,SAASY,GAAQC,EAAuC,CACpD,MAAO,CACH,UAAWA,EAAE,WACb,SAAUA,EAAE,UACZ,UAAWA,EAAE,WACb,YAAaA,EAAE,aACf,QAASA,EAAE,SACX,WAAYA,EAAE,YACd,UAAWA,EAAE,WACb,QAASA,EAAE,SACX,QAASA,EAAE,QACf,CACJ,CAEA,SAASC,GAAgBD,EAAuC,CAC5D,MAAO,CACH,WAAYA,EAAE,UACd,UAAWA,EAAE,SACb,WAAYA,EAAE,UACd,aAAcA,EAAE,YAChB,SAAUA,EAAE,QACZ,YAAaA,EAAE,WACf,WAAYA,EAAE,UACd,SAAUA,EAAE,QACZ,SAAUA,EAAE,OAChB,CACJ,CAEA,SAAS/C,GAAcZ,EAAgB6D,EAAsC,CACzE,OAAOC,GAAA,CACH,KAAM9D,EAAE,KACR,YAAa,OACb,aAAc6D,EACd,iBAAkB7D,EAAE,SACjB4D,GAAgBG,GAAa/D,CAAC,CAAC,EAE1C,CAEA,SAASgE,GAAejE,EAAuC,CAC3D,MAAO,CACH,GAAIA,EAAE,GACN,KAAMA,EAAE,KACR,KAAMA,EAAE,KACR,KAAMA,EAAE,KACR,KAAMA,EAAE,KACR,SAAUA,EAAE,UAAY,OACxB,YAAaA,EAAE,aAAe,OAC9B,OAAQA,EAAE,MACd,CACJ,CAEA,SAASe,GAAcd,EAAiC,CACpD,OAAO8D,GAAA,CACH,aAAcE,GAAehE,EAAE,YAAY,EAC3C,GAAIA,EAAE,GACN,KAAMA,EAAE,KACR,KAAMA,EAAE,KACR,YAAaA,EAAE,aAAe,OAC9B,gBAAiBA,EAAE,iBACnB,QAASA,EAAE,aACX,WAAYA,EAAE,WACd,UAAW,IAAI,KAAKA,EAAE,UAAU,EAAE,QAAQ,EAC1C,UAAW,IAAI,KAAKA,EAAE,UAAU,EAAE,QAAQ,GACvC0D,GAAQ1D,CAAC,EAEpB,CAEA,SAASS,GAAyBT,EAAuD,CACrF,IAAMe,EAAMD,GAAcd,CAAC,EAC3B,OAAOe,EAAI,UAAYX,EAAe,KAAK,OAAS6D,GAAAH,GAAA,GAAI/C,GAAJ,CAAS,QAASmD,GAAclE,EAAE,OAAO,CAAC,GAAIe,CACtG,CAEA,SAASM,GAAcrB,EAAwB,CAC3C,OAAWmE,GAAUnE,EAAGoE,GAAa,aAAa,CACtD,CAEA,SAASF,GAAcG,EAA+B,CAClD,GAAI,OAAOA,GAAY,SACnB,OAAWC,EAAcC,GAAMF,CAAO,EAAGD,GAAa,aAAa,EAEnE,KAAM,sCAEd,CC3UO,IAAMI,GAAYC,GAAwBA,EAAE,SAAWA,EAAE,OAASA,EAAE,KCM3E,IAAAC,GAAA,OAAA,UAAA,SASA,SAAAC,GAAAC,EAAA,CACA,OAAAF,GAAA,KAAAE,CAAA,EAAA,CACA,IAAA,iBACA,IAAA,qBACA,IAAA,wBACA,MAAA,GACA,QACA,OAAAC,GAAAD,EAAA,KAAA,CACA,CACA,CAQA,SAAAE,GAAAF,EAAAG,EAAA,CACA,OAAAL,GAAA,KAAAE,CAAA,IAAA,WAAAG,IACA,CASA,SAAAC,GAAAJ,EAAA,CACA,OAAAE,GAAAF,EAAA,YAAA,CACA,CASA,SAAAK,GAAAL,EAAA,CACA,OAAAE,GAAAF,EAAA,UAAA,CACA,CASA,SAAAM,GAAAN,EAAA,CACA,OAAAE,GAAAF,EAAA,cAAA,CACA,CASA,SAAAO,GAAAP,EAAA,CACA,OAAAE,GAAAF,EAAA,QAAA,CACA,CASA,SAAAQ,GAAAR,EAAA,CACA,OAAAA,IAAA,MAAA,OAAAA,GAAA,UAAA,OAAAA,GAAA,UACA,CASA,SAAAS,GAAAT,EAAA,CACA,OAAAE,GAAAF,EAAA,QAAA,CACA,CASA,SAAAU,GAAAV,EAAA,CACA,OAAA,OAAA,MAAA,KAAAC,GAAAD,EAAA,KAAA,CACA,CASA,SAAAW,GAAAX,EAAA,CACA,OAAA,OAAA,QAAA,KAAAC,GAAAD,EAAA,OAAA,CACA,CASA,SAAAY,GAAAZ,EAAA,CACA,OAAAE,GAAAF,EAAA,QAAA,CACA,CAMA,SAAAa,GAAAb,EAAA,CAEA,MAAA,GAAAA,GAAAA,EAAA,MAAA,OAAAA,EAAA,MAAA,WACA,CASA,SAAAc,GAAAd,EAAA,CACA,OAAAS,GAAAT,CAAA,GAAA,gBAAAA,GAAA,mBAAAA,GAAA,oBAAAA,CACA,CASA,SAAAe,GAAAf,EAAA,CACA,OAAA,OAAAA,GAAA,UAAAA,IAAAA,CACA,CAUA,SAAAC,GAAAD,EAAAgB,EAAA,CACA,GAAA,CACA,OAAAhB,aAAAgB,CACA,MAAA,CACA,MAAA,EACA,CACA,CC1GA,SAAAC,GAAAC,EAAA,CACA,OAAAA,GAAAA,EAAA,MAAA,KAAAA,EAAA,MACA,CAGA,IAAAC,EACA,OAAA,YAAA,UAAAF,GAAA,UAAA,GAEA,OAAA,QAAA,UAAAA,GAAA,MAAA,GACA,OAAA,MAAA,UAAAA,GAAA,IAAA,GACA,OAAA,QAAA,UAAAA,GAAA,MAAA,GACA,UAAA,CACA,OAAA,IACA,EAAA,GACA,CAAA,EAKA,SAAAG,IAAA,CACA,OAAAD,CACA,CAaA,SAAAE,GAAAC,EAAAC,EAAAL,EAAA,CACA,IAAAM,EAAAN,GAAAC,EACAM,EAAAD,EAAA,WAAAA,EAAA,YAAA,CAAA,EAEA,OADAC,EAAAH,CAAA,IAAAG,EAAAH,CAAA,EAAAC,EAAA,EAEA,CC7GA,IAAAG,GAAAC,GAAA,EAEAC,GAAA,GAQA,SAAAC,GACAC,EACAC,EAAA,CAAA,EACA,CASA,GAAA,CACA,IAAAC,EAAAF,EACAG,EAAA,EACAC,EAAA,CAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,MACAC,EAAAD,EAAA,OACAE,EACAC,EAAA,MAAA,QAAAT,CAAA,EAAAA,EAAAA,EAAA,SACAU,EAAA,CAAA,MAAA,QAAAV,CAAA,GAAAA,EAAA,iBAAAH,GAEA,KAAAI,GAAAG,IAAAF,IACAM,EAAAG,GAAAV,EAAAQ,CAAA,EAKA,EAAAD,IAAA,QAAAJ,EAAA,GAAAC,EAAAF,EAAA,OAAAI,EAAAC,EAAA,QAAAE,KAIAP,EAAA,KAAAK,CAAA,EAEAH,GAAAG,EAAA,OACAP,EAAAA,EAAA,WAGA,OAAAE,EAAA,QAAA,EAAA,KAAAG,CAAA,CACA,MAAA,CACA,MAAA,WACA,CACA,CAOA,SAAAK,GAAAC,EAAAH,EAAA,CACA,IAAAV,EAAAa,EAOAT,EAAA,CAAA,EACAU,EACAC,EACAC,EACAC,EACAC,EAEA,GAAA,CAAAlB,GAAA,CAAAA,EAAA,QACA,MAAA,GAGAI,EAAA,KAAAJ,EAAA,QAAA,YAAA,CAAA,EAGA,IAAAmB,EACAT,GAAAA,EAAA,OACAA,EAAA,OAAAU,GAAApB,EAAA,aAAAoB,CAAA,CAAA,EAAA,IAAAA,GAAA,CAAAA,EAAApB,EAAA,aAAAoB,CAAA,CAAA,CAAA,EACA,KAEA,GAAAD,GAAAA,EAAA,OACAA,EAAA,QAAAE,GAAA,CACAjB,EAAA,KAAA,IAAAiB,EAAA,CAAA,MAAAA,EAAA,CAAA,KAAA,CACA,CAAA,UAEArB,EAAA,IACAI,EAAA,KAAA,IAAAJ,EAAA,IAAA,EAIAc,EAAAd,EAAA,UACAc,GAAAQ,GAAAR,CAAA,EAEA,IADAC,EAAAD,EAAA,MAAA,KAAA,EACAI,EAAA,EAAAA,EAAAH,EAAA,OAAAG,IACAd,EAAA,KAAA,IAAAW,EAAAG,CAAA,GAAA,EAIA,IAAAK,EAAA,CAAA,aAAA,OAAA,OAAA,QAAA,KAAA,EACA,IAAAL,EAAA,EAAAA,EAAAK,EAAA,OAAAL,IACAF,EAAAO,EAAAL,CAAA,EACAD,EAAAjB,EAAA,aAAAgB,CAAA,EACAC,GACAb,EAAA,KAAA,IAAAY,MAAAC,KAAA,EAGA,OAAAb,EAAA,KAAA,EAAA,CACA,CAKA,SAAAoB,IAAA,CACA,GAAA,CACA,OAAA5B,GAAA,SAAA,SAAA,IACA,MAAA,CACA,MAAA,EACA,CACA,CAmBA,SAAA6B,GAAAC,EAAA,CACA,OAAA9B,GAAA,UAAAA,GAAA,SAAA,cACAA,GAAA,SAAA,cAAA8B,CAAA,EAEA,IACA,CCvJA,IAAAC,EAAA,cAAA,KAAA,CAMA,YAAAC,EAAAC,EAAA,OAAA,CACA,MAAAD,CAAA,EAAA,KAAA,QAAAA,EAEA,KAAA,KAAA,WAAA,UAAA,YAAA,KAIA,OAAA,eAAA,KAAA,WAAA,SAAA,EACA,KAAA,SAAAC,CACA,CACA,ECdA,IAAAC,GAAA,kEAEA,SAAAC,GAAAC,EAAA,CACA,OAAAA,IAAA,QAAAA,IAAA,OACA,CAWA,SAAAC,GAAAC,EAAAC,EAAA,GAAA,CACA,GAAA,CAAA,KAAAC,EAAA,KAAAC,EAAA,KAAAC,EAAA,KAAAC,EAAA,UAAAC,EAAA,SAAAR,EAAA,UAAAS,CAAA,EAAAP,EACA,MACA,GAAAF,OAAAS,IAAAN,GAAAG,EAAA,IAAAA,IAAA,MACAF,IAAAG,EAAA,IAAAA,IAAA,MAAAF,GAAA,GAAAA,OAAAG,GAEA,CAQA,SAAAE,GAAAC,EAAA,CACA,IAAAC,EAAAd,GAAA,KAAAa,CAAA,EAEA,GAAA,CAAAC,EACA,MAAA,IAAAC,EAAA,uBAAAF,GAAA,EAGA,GAAA,CAAAX,EAAAS,EAAAH,EAAA,GAAAF,EAAAG,EAAA,GAAAO,CAAA,EAAAF,EAAA,MAAA,CAAA,EACAP,EAAA,GACAG,EAAAM,EAEAC,EAAAP,EAAA,MAAA,GAAA,EAMA,GALAO,EAAA,OAAA,IACAV,EAAAU,EAAA,MAAA,EAAA,EAAA,EAAA,KAAA,GAAA,EACAP,EAAAO,EAAA,IAAA,GAGAP,EAAA,CACA,IAAAQ,EAAAR,EAAA,MAAA,MAAA,EACAQ,IACAR,EAAAQ,EAAA,CAAA,GAIA,OAAAC,GAAA,CAAA,KAAAb,EAAA,KAAAE,EAAA,KAAAD,EAAA,UAAAG,EAAA,KAAAD,EAAA,SAAAP,EAAA,UAAAS,CAAA,CAAA,CACA,CAEA,SAAAQ,GAAAC,EAAA,CACA,MAAA,CACA,SAAAA,EAAA,SACA,UAAAA,EAAA,WAAA,GACA,KAAAA,EAAA,MAAA,GACA,KAAAA,EAAA,KACA,KAAAA,EAAA,MAAA,GACA,KAAAA,EAAA,MAAA,GACA,UAAAA,EAAA,SACA,CACA,CAEA,SAAAC,GAAAjB,EAAA,CACA,GAAA,EAAA,OAAA,iBAAA,KAAA,kBACA,OAGA,GAAA,CAAA,KAAAK,EAAA,UAAAC,EAAA,SAAAR,CAAA,EAAAE,EASA,GAPA,CAAA,WAAA,YAAA,OAAA,WAAA,EACA,QAAAkB,GAAA,CACA,GAAA,CAAAlB,EAAAkB,CAAA,EACA,MAAA,IAAAP,EAAA,uBAAAO,WAAA,CAEA,CAAA,EAEA,CAAAZ,EAAA,MAAA,OAAA,EACA,MAAA,IAAAK,EAAA,yCAAAL,GAAA,EAGA,GAAA,CAAAT,GAAAC,CAAA,EACA,MAAA,IAAAa,EAAA,wCAAAb,GAAA,EAGA,GAAAO,GAAA,MAAA,SAAAA,EAAA,EAAA,CAAA,EACA,MAAA,IAAAM,EAAA,oCAAAN,GAAA,EAGA,MAAA,EACA,CAGA,SAAAc,GAAAC,EAAA,CACA,IAAAJ,EAAA,OAAAI,GAAA,SAAAZ,GAAAY,CAAA,EAAAL,GAAAK,CAAA,EACA,OAAAH,GAAAD,CAAA,EACAA,CACA,CCtGA,IAAAK,GAAA,iBAEAC,GAAA,CAAA,QAAA,OAAA,OAAA,QAAA,MAAA,SAAA,OAAA,EAkBA,SAAAC,GAAAC,EAAA,CACA,GAAA,EAAA,YAAAC,GACA,OAAAD,EAAA,EAGA,IAAAE,EAAAD,EAAA,QACAE,EAAA,CAAA,EAGAL,GAAA,QAAAM,GAAA,CAEA,IAAAC,EACAH,EAAAE,CAAA,GAAAF,EAAAE,CAAA,EAAA,oBACAA,KAAAF,GAAAG,IACAF,EAAAC,CAAA,EAAAF,EAAAE,CAAA,EACAF,EAAAE,CAAA,EAAAC,EAEA,CAAA,EAEA,GAAA,CACA,OAAAL,EAAA,CACA,QAAA,CAEA,OAAA,KAAAG,CAAA,EAAA,QAAAC,GAAA,CACAF,EAAAE,CAAA,EAAAD,EAAAC,CAAA,CACA,CAAA,CACA,CACA,CAEA,SAAAE,IAAA,CACA,IAAAC,EAAA,GACAC,EAAA,CACA,OAAA,IAAA,CACAD,EAAA,EACA,EACA,QAAA,IAAA,CACAA,EAAA,EACA,CACA,EAEA,OAAA,OAAA,iBAAA,KAAA,iBACAT,GAAA,QAAAW,GAAA,CAEAD,EAAAC,CAAA,EAAA,IAAAC,IAAA,CACAH,GACAR,GAAA,IAAA,CACAE,EAAA,QAAAQ,CAAA,EAAA,GAAAZ,MAAAY,MAAA,GAAAC,CAAA,CACA,CAAA,CAEA,CACA,CAAA,EAEAZ,GAAA,QAAAW,GAAA,CACAD,EAAAC,CAAA,EAAA,IAAA,EACA,CAAA,EAGAD,CACA,CAGA,IAAAA,EACA,OAAA,iBAAA,KAAA,iBACAA,EAAAG,GAAA,SAAAL,EAAA,EAEAE,EAAAF,GAAA,ECjFA,SAAAM,GAAAC,EAAAC,EAAA,EAAA,CACA,OAAA,OAAAD,GAAA,UAAAC,IAAA,GAGAD,EAAA,QAAAC,EAFAD,EAEA,GAAAA,EAAA,MAAA,EAAAC,CAAA,MACA,CAoDA,SAAAC,GAAAC,EAAAC,EAAA,CACA,GAAA,CAAA,MAAA,QAAAD,CAAA,EACA,MAAA,GAGA,IAAAE,EAAA,CAAA,EAEA,QAAAC,EAAA,EAAAA,EAAAH,EAAA,OAAAG,IAAA,CACA,IAAAC,EAAAJ,EAAAG,CAAA,EACA,GAAA,CACAD,EAAA,KAAA,OAAAE,CAAA,CAAA,CACA,MAAA,CACAF,EAAA,KAAA,8BAAA,CACA,EAGA,OAAAA,EAAA,KAAAD,CAAA,CACA,CAUA,SAAAI,GACAD,EACAE,EACAC,EAAA,GACA,CACA,OAAAC,GAAAJ,CAAA,EAIAK,GAAAH,CAAA,EACAA,EAAA,KAAAF,CAAA,EAEAI,GAAAF,CAAA,EACAC,EAAAH,IAAAE,EAAAF,EAAA,SAAAE,CAAA,EAGA,GAVA,EAWA,CAYA,SAAAI,GACAC,EACAC,EAAA,CAAA,EACAL,EAAA,GACA,CACA,OAAAK,EAAA,KAAAN,GAAAD,GAAAM,EAAAL,EAAAC,CAAA,CAAA,CACA,CC7GA,SAAAM,EAAAC,EAAAC,EAAAC,EAAA,CACA,GAAA,EAAAD,KAAAD,GACA,OAGA,IAAAG,EAAAH,EAAAC,CAAA,EACAG,EAAAF,EAAAC,CAAA,EAIA,GAAA,OAAAC,GAAA,WACA,GAAA,CACAC,GAAAD,EAAAD,CAAA,CACA,MAAA,CAGA,CAGAH,EAAAC,CAAA,EAAAG,CACA,CASA,SAAAE,GAAAC,EAAAN,EAAAO,EAAA,CACA,OAAA,eAAAD,EAAAN,EAAA,CAEA,MAAAO,EACA,SAAA,GACA,aAAA,EACA,CAAA,CACA,CASA,SAAAH,GAAAD,EAAAD,EAAA,CACA,IAAAM,EAAAN,EAAA,WAAA,CAAA,EACAC,EAAA,UAAAD,EAAA,UAAAM,EACAH,GAAAF,EAAA,sBAAAD,CAAA,CACA,CASA,SAAAO,GAAAC,EAAA,CACA,OAAAA,EAAA,mBACA,CAQA,SAAAC,GAAAC,EAAA,CACA,OAAA,OAAA,KAAAA,CAAA,EACA,IAAAC,GAAA,GAAA,mBAAAA,CAAA,KAAA,mBAAAD,EAAAC,CAAA,CAAA,GAAA,EACA,KAAA,GAAA,CACA,CAUA,SAAAC,GAAAP,EAcA,CACA,GAAAQ,GAAAR,CAAA,EACA,MAAA,CACA,QAAAA,EAAA,QACA,KAAAA,EAAA,KACA,MAAAA,EAAA,MACA,GAAAS,GAAAT,CAAA,CACA,EACA,GAAAU,GAAAV,CAAA,EAAA,CACA,IAAAW,EAMA,CACA,KAAAX,EAAA,KACA,OAAAY,GAAAZ,EAAA,MAAA,EACA,cAAAY,GAAAZ,EAAA,aAAA,EACA,GAAAS,GAAAT,CAAA,CACA,EAEA,OAAA,OAAA,YAAA,KAAAa,GAAAb,EAAA,WAAA,IACAW,EAAA,OAAAX,EAAA,QAGAW,MAEA,QAAAX,CAEA,CAGA,SAAAY,GAAAE,EAAA,CACA,GAAA,CACA,OAAAC,GAAAD,CAAA,EAAAE,GAAAF,CAAA,EAAA,OAAA,UAAA,SAAA,KAAAA,CAAA,CACA,MAAA,CACA,MAAA,WACA,CACA,CAGA,SAAAL,GAAAV,EAAA,CACA,GAAA,OAAAA,GAAA,UAAAA,IAAA,KAAA,CACA,IAAAkB,EAAA,CAAA,EACA,QAAAC,KAAAnB,EACA,OAAA,UAAA,eAAA,KAAAA,EAAAmB,CAAA,IACAD,EAAAC,CAAA,EAAAnB,EAAAmB,CAAA,GAGA,OAAAD,MAEA,OAAA,CAAA,CAEA,CAOA,SAAAE,GAAAC,EAAAC,EAAA,GAAA,CACA,IAAAC,EAAA,OAAA,KAAAf,GAAAa,CAAA,CAAA,EAGA,GAFAE,EAAA,KAAA,EAEA,CAAAA,EAAA,OACA,MAAA,uBAGA,GAAAA,EAAA,CAAA,EAAA,QAAAD,EACA,OAAAE,GAAAD,EAAA,CAAA,EAAAD,CAAA,EAGA,QAAAG,EAAAF,EAAA,OAAAE,EAAA,EAAAA,IAAA,CACA,IAAAC,EAAAH,EAAA,MAAA,EAAAE,CAAA,EAAA,KAAA,IAAA,EACA,GAAA,EAAAC,EAAA,OAAAJ,GAGA,OAAAG,IAAAF,EAAA,OACAG,EAEAF,GAAAE,EAAAJ,CAAA,EAGA,MAAA,EACA,CAQA,SAAAK,GAAAC,EAAA,CAOA,OAAAC,GAAAD,EAHA,IAAA,GAGA,CACA,CAEA,SAAAC,GAAAD,EAAAE,EAAA,CACA,GAAAC,GAAAH,CAAA,EAAA,CAEA,IAAAI,EAAAF,EAAA,IAAAF,CAAA,EACA,GAAAI,IAAA,OACA,OAAAA,EAGA,IAAAC,EAAA,CAAA,EAEAH,EAAA,IAAAF,EAAAK,CAAA,EAEA,QAAA1B,KAAA,OAAA,KAAAqB,CAAA,EACA,OAAAA,EAAArB,CAAA,EAAA,MACA0B,EAAA1B,CAAA,EAAAsB,GAAAD,EAAArB,CAAA,EAAAuB,CAAA,GAIA,OAAAG,EAGA,GAAA,MAAA,QAAAL,CAAA,EAAA,CAEA,IAAAI,EAAAF,EAAA,IAAAF,CAAA,EACA,GAAAI,IAAA,OACA,OAAAA,EAGA,IAAAC,EAAA,CAAA,EAEA,OAAAH,EAAA,IAAAF,EAAAK,CAAA,EAEAL,EAAA,QAAAM,GAAA,CACAD,EAAA,KAAAJ,GAAAK,EAAAJ,CAAA,CAAA,CACA,CAAA,EAEAG,EAGA,OAAAL,CACA,CCvPA,SAAAO,MAAAC,EAAA,CACA,IAAAC,EAAAD,EAAA,KAAA,CAAAE,EAAAC,IAAAD,EAAA,CAAA,EAAAC,EAAA,CAAA,CAAA,EAAA,IAAAC,GAAAA,EAAA,CAAA,CAAA,EAEA,MAAA,CAAAC,EAAAC,EAAA,IAAA,CACA,IAAAC,EAAA,CAAA,EACA,QAAAC,KAAAH,EAAA,MAAA;CAAA,EAAA,MAAAC,CAAA,EAAA,CAKA,GAAAE,EAAA,OAAA,KACA,SAKA,IAAAC,EAAAD,EAAA,QAAA,kBAAA,IAAA,EAEA,QAAAE,KAAAT,EAAA,CACA,IAAAU,EAAAD,EAAAD,CAAA,EAEA,GAAAE,EAAA,CACAJ,EAAA,KAAAI,CAAA,EACA,QAKA,OAAAC,GAAAL,CAAA,CACA,CACA,CAQA,SAAAM,GAAAC,EAAA,CACA,OAAA,MAAA,QAAAA,CAAA,EACAf,GAAA,GAAAe,CAAA,EAEAA,CACA,CAKA,SAAAF,GAAAP,EAAA,CACA,GAAA,CAAAA,EAAA,OACA,MAAA,CAAA,EAGA,IAAAU,EAAAV,EAEAW,EAAAD,EAAA,CAAA,EAAA,UAAA,GACAE,EAAAF,EAAAA,EAAA,OAAA,CAAA,EAAA,UAAA,GAGA,OAAAC,EAAA,QAAA,gBAAA,IAAA,IAAAA,EAAA,QAAA,kBAAA,IAAA,MACAD,EAAAA,EAAA,MAAA,CAAA,GAIAE,EAAA,QAAA,eAAA,IAAA,KACAF,EAAAA,EAAA,MAAA,EAAA,EAAA,GAIAA,EACA,MAAA,EAAA,EAAA,EACA,IAAAJ,IAAA,CACA,GAAAA,EACA,SAAAA,EAAA,UAAAI,EAAA,CAAA,EAAA,SACA,SAAAJ,EAAA,UAAA,GACA,EAAA,EACA,QAAA,CACA,CAEA,IAAAO,GAAA,cAKA,SAAAC,GAAAC,EAAA,CACA,GAAA,CACA,MAAA,CAAAA,GAAA,OAAAA,GAAA,WACAF,GAEAE,EAAA,MAAAF,EACA,MAAA,CAGA,OAAAA,EACA,CACA,CCtGA,IAAAG,GAAAC,GAAA,EAwDA,SAAAC,IAAA,CACA,GAAA,EAAA,UAAAC,IACA,MAAA,GAGA,GAAA,CACA,WAAA,QACA,IAAA,QAAA,wBAAA,EACA,IAAA,SACA,EACA,MAAA,CACA,MAAA,EACA,CACA,CAKA,SAAAC,GAAAC,EAAA,CACA,OAAAA,GAAA,mDAAA,KAAAA,EAAA,SAAA,CAAA,CACA,CAQA,SAAAC,IAAA,CACA,GAAA,CAAAJ,GAAA,EACA,MAAA,GAKA,GAAAE,GAAAD,GAAA,KAAA,EACA,MAAA,GAKA,IAAAI,EAAA,GACAC,EAAAL,GAAA,SAEA,GAAAK,GAAA,OAAAA,EAAA,eAAA,WACA,GAAA,CACA,IAAAC,EAAAD,EAAA,cAAA,QAAA,EACAC,EAAA,OAAA,GACAD,EAAA,KAAA,YAAAC,CAAA,EACAA,EAAA,eAAAA,EAAA,cAAA,QAEAF,EAAAH,GAAAK,EAAA,cAAA,KAAA,GAEAD,EAAA,KAAA,YAAAC,CAAA,CACA,OAAAC,EAAA,EACA,OAAA,iBAAA,KAAA,mBACAC,EAAA,KAAA,kFAAAD,CAAA,CACA,CAGA,OAAAH,CACA,CA4CA,SAAAK,IAAA,CAMA,IAAAC,EAAAC,GAAA,OACAC,EAAAF,GAAAA,EAAA,KAAAA,EAAA,IAAA,QAEAG,EAAA,YAAAF,IAAA,CAAA,CAAAA,GAAA,QAAA,WAAA,CAAA,CAAAA,GAAA,QAAA,aAEA,MAAA,CAAAC,GAAAC,CACA,CCpKA,IAAAC,EAAAC,GAAA,EAwBAC,GAAA,CAAA,EACAC,GAAA,CAAA,EAGA,SAAAC,GAAAC,EAAA,CACA,GAAA,CAAAF,GAAAE,CAAA,EAMA,OAFAF,GAAAE,CAAA,EAAA,GAEAA,EAAA,CACA,IAAA,UACAC,GAAA,EACA,MACA,IAAA,MACAC,GAAA,EACA,MACA,IAAA,MACAC,GAAA,EACA,MACA,IAAA,QACAC,GAAA,EACA,MACA,IAAA,UACAC,GAAA,EACA,MACA,IAAA,QACAC,GAAA,EACA,MACA,IAAA,qBACAC,GAAA,EACA,MACA,SACA,OAAA,iBAAA,KAAA,mBAAAC,EAAA,KAAA,gCAAAR,CAAA,EACA,MACA,CACA,CAOA,SAAAS,EAAAT,EAAAU,EAAA,CACAb,GAAAG,CAAA,EAAAH,GAAAG,CAAA,GAAA,CAAA,EACAH,GAAAG,CAAA,EAAA,KAAAU,CAAA,EACAX,GAAAC,CAAA,CACA,CAGA,SAAAW,GAAAX,EAAAY,EAAA,CACA,GAAA,GAAAZ,GAAA,CAAAH,GAAAG,CAAA,GAIA,QAAAa,KAAAhB,GAAAG,CAAA,GAAA,CAAA,EACA,GAAA,CACAa,EAAAD,CAAA,CACA,OAAAE,EAAA,EACA,OAAA,iBAAA,KAAA,mBACAN,EAAA,MACA;QAAAR;QAAAe,GAAAF,CAAA;QACAC,CACA,CACA,CAEA,CAGA,SAAAb,IAAA,CACA,YAAAN,GAIAqB,GAAA,QAAA,SAAAC,EAAA,CACAA,KAAAtB,EAAA,SAIAuB,EAAAvB,EAAA,QAAAsB,EAAA,SAAAE,EAAA,CACA,OAAA,YAAAC,EAAA,CACAT,GAAA,UAAA,CAAA,KAAAS,EAAA,MAAAH,CAAA,CAAA,EAGAE,GACAA,EAAA,MAAAxB,EAAA,QAAAyB,CAAA,CAEA,CACA,CAAA,CACA,CAAA,CACA,CAGA,SAAAhB,IAAA,CACAiB,GAAA,GAIAH,EAAAvB,EAAA,QAAA,SAAA2B,EAAA,CACA,OAAA,YAAAF,EAAA,CACA,IAAAG,EAAA,CACA,KAAAH,EACA,UAAA,CACA,OAAAI,GAAAJ,CAAA,EACA,IAAAK,GAAAL,CAAA,CACA,EACA,eAAA,KAAA,IAAA,CACA,EAEA,OAAAT,GAAA,QAAA,CACA,GAAAY,CACA,CAAA,EAGAD,EAAA,MAAA3B,EAAAyB,CAAA,EAAA,KACAM,IACAf,GAAA,QAAA,CACA,GAAAY,EACA,aAAA,KAAA,IAAA,EACA,SAAAG,CACA,CAAA,EACAA,GAEAC,GAAA,CACA,MAAAhB,GAAA,QAAA,CACA,GAAAY,EACA,aAAA,KAAA,IAAA,EACA,MAAAI,CACA,CAAA,EAIAA,CACA,CACA,CACA,CACA,CAAA,CACA,CAIA,SAAAH,GAAAI,EAAA,CAAA,EAAA,CACA,MAAA,YAAAjC,GAAAkC,GAAAD,EAAA,CAAA,EAAA,OAAA,GAAAA,EAAA,CAAA,EAAA,OACA,OAAAA,EAAA,CAAA,EAAA,MAAA,EAAA,YAAA,EAEAA,EAAA,CAAA,GAAAA,EAAA,CAAA,EAAA,OACA,OAAAA,EAAA,CAAA,EAAA,MAAA,EAAA,YAAA,EAEA,KACA,CAGA,SAAAH,GAAAG,EAAA,CAAA,EAAA,CACA,OAAA,OAAAA,EAAA,CAAA,GAAA,SACAA,EAAA,CAAA,EAEA,YAAAjC,GAAAkC,GAAAD,EAAA,CAAA,EAAA,OAAA,EACAA,EAAA,CAAA,EAAA,IAEA,OAAAA,EAAA,CAAA,CAAA,CACA,CAIA,SAAAzB,IAAA,CACA,GAAA,EAAA,mBAAAR,GACA,OAGA,IAAAmC,EAAA,eAAA,UAEAZ,EAAAY,EAAA,OAAA,SAAAC,EAAA,CACA,OAAA,YAAAX,EAAA,CAEA,IAAAY,EAAA,KACAC,EAAAb,EAAA,CAAA,EACAc,EAAAF,EAAA,eAAA,CAEA,OAAAG,GAAAf,EAAA,CAAA,CAAA,EAAAA,EAAA,CAAA,EAAA,YAAA,EAAAA,EAAA,CAAA,EACA,IAAAA,EAAA,CAAA,CACA,EAIAe,GAAAF,CAAA,GAAAC,EAAA,SAAA,QAAAD,EAAA,MAAA,YAAA,IACAD,EAAA,uBAAA,IAGA,IAAAI,EAAA,UAAA,CACA,GAAAJ,EAAA,aAAA,EAAA,CACA,GAAA,CAGAE,EAAA,YAAAF,EAAA,MACA,MAAA,CAEA,CAEArB,GAAA,MAAA,CACA,KAAAS,EACA,aAAA,KAAA,IAAA,EACA,eAAA,KAAA,IAAA,EACA,IAAAY,CACA,CAAA,EAEA,EAEA,MAAA,uBAAAA,GAAA,OAAAA,EAAA,oBAAA,WACAd,EAAAc,EAAA,qBAAA,SAAAK,EAAA,CACA,OAAA,YAAAC,EAAA,CACA,OAAAF,EAAA,EACAC,EAAA,MAAAL,EAAAM,CAAA,CACA,CACA,CAAA,EAEAN,EAAA,iBAAA,mBAAAI,CAAA,EAGAL,EAAA,MAAAC,EAAAZ,CAAA,CACA,CACA,CAAA,EAEAF,EAAAY,EAAA,OAAA,SAAAS,EAAA,CACA,OAAA,YAAAnB,EAAA,CACA,OAAA,KAAA,gBAAAA,EAAA,CAAA,IAAA,SACA,KAAA,eAAA,KAAAA,EAAA,CAAA,GAGAT,GAAA,MAAA,CACA,KAAAS,EACA,eAAA,KAAA,IAAA,EACA,IAAA,IACA,CAAA,EAEAmB,EAAA,MAAA,KAAAnB,CAAA,CACA,CACA,CAAA,CACA,CAEA,IAAAoB,GAGA,SAAAnC,IAAA,CACA,GAAA,CAAAoC,GAAA,EACA,OAGA,IAAAC,EAAA/C,EAAA,WACAA,EAAA,WAAA,YAAAyB,EAAA,CACA,IAAAuB,EAAAhD,EAAA,SAAA,KAEAiD,EAAAJ,GAMA,GALAA,GAAAG,EACAhC,GAAA,UAAA,CACA,KAAAiC,EACA,GAAAD,CACA,CAAA,EACAD,EAIA,GAAA,CACA,OAAAA,EAAA,MAAA,KAAAtB,CAAA,CACA,MAAA,CAEA,CAEA,EAGA,SAAAyB,EAAAC,EAAA,CACA,OAAA,YAAA1B,EAAA,CACA,IAAAa,EAAAb,EAAA,OAAA,EAAAA,EAAA,CAAA,EAAA,OACA,GAAAa,EAAA,CAEA,IAAAW,EAAAJ,GACAG,EAAA,OAAAV,CAAA,EAEAO,GAAAG,EACAhC,GAAA,UAAA,CACA,KAAAiC,EACA,GAAAD,CACA,CAAA,EAEA,OAAAG,EAAA,MAAA,KAAA1B,CAAA,CACA,CACA,CAEAF,EAAAvB,EAAA,QAAA,YAAAkD,CAAA,EACA3B,EAAAvB,EAAA,QAAA,eAAAkD,CAAA,CACA,CAEA,IAAAE,GAAA,IACAC,GACAC,GAOA,SAAAC,GAAAC,EAAAC,EAAA,CAOA,GALA,CAAAD,GAKAA,EAAA,OAAAC,EAAA,KACA,MAAA,GAGA,GAAA,CAGA,GAAAD,EAAA,SAAAC,EAAA,OACA,MAAA,EAEA,MAAA,CAGA,CAKA,MAAA,EACA,CAMA,SAAAC,GAAAC,EAAA,CAEA,GAAAA,EAAA,OAAA,WACA,MAAA,GAGA,GAAA,CACA,IAAAC,EAAAD,EAAA,OAEA,GAAA,CAAAC,GAAA,CAAAA,EAAA,QACA,MAAA,GAKA,GAAAA,EAAA,UAAA,SAAAA,EAAA,UAAA,YAAAA,EAAA,kBACA,MAAA,EAEA,MAAA,CAGA,CAEA,MAAA,EACA,CASA,SAAAC,GAAA3C,EAAA4C,EAAA,GAAA,CACA,OAAAH,GAAA,CASA,GALA,CAAAA,GAAAL,KAAAK,GAKAD,GAAAC,CAAA,EACA,OAGA,IAAAI,EAAAJ,EAAA,OAAA,WAAA,QAAAA,EAAA,KAGAN,KAAA,QACAnC,EAAA,CACA,MAAAyC,EACA,KAAAI,EACA,OAAAD,CACA,CAAA,EACAR,GAAAK,GAIAJ,GAAAD,GAAAK,CAAA,IACAzC,EAAA,CACA,MAAAyC,EACA,KAAAI,EACA,OAAAD,CACA,CAAA,EACAR,GAAAK,GAIA,aAAAN,EAAA,EACAA,GAAArD,EAAA,WAAA,IAAA,CACAqD,GAAA,MACA,EAAAD,EAAA,CACA,CACA,CAwBA,SAAA7C,IAAA,CACA,GAAA,EAAA,aAAAP,GACA,OAMA,IAAAgE,EAAAhD,GAAA,KAAA,KAAA,KAAA,EACAiD,EAAAJ,GAAAG,EAAA,EAAA,EACAhE,EAAA,SAAA,iBAAA,QAAAiE,EAAA,EAAA,EACAjE,EAAA,SAAA,iBAAA,WAAAiE,EAAA,EAAA,EAOA,CAAA,cAAA,MAAA,EAAA,QAAAL,GAAA,CAEA,IAAAM,EAAAlE,EAAA4D,CAAA,GAAA5D,EAAA4D,CAAA,EAAA,UAEA,CAAAM,GAAA,CAAAA,EAAA,gBAAA,CAAAA,EAAA,eAAA,kBAAA,IAIA3C,EAAA2C,EAAA,mBAAA,SAAAC,EAAA,CACA,OAAA,SAEA9D,EACA+D,EACAC,EACA,CACA,GAAAhE,IAAA,SAAAA,GAAA,WACA,GAAA,CACA,IAAAiE,EAAA,KACApE,EAAAoE,EAAA,oCAAAA,EAAA,qCAAA,CAAA,EACAC,EAAArE,EAAAG,CAAA,EAAAH,EAAAG,CAAA,GAAA,CAAA,SAAA,CAAA,EAEA,GAAA,CAAAkE,EAAA,QAAA,CACA,IAAArD,EAAA2C,GAAAG,CAAA,EACAO,EAAA,QAAArD,EACAiD,EAAA,KAAA,KAAA9D,EAAAa,EAAAmD,CAAA,EAGAE,EAAA,UACA,MAAA,CAGA,CAGA,OAAAJ,EAAA,KAAA,KAAA9D,EAAA+D,EAAAC,CAAA,CACA,CACA,CAAA,EAEA9C,EACA2C,EACA,sBACA,SAAAM,EAAA,CACA,OAAA,SAEAnE,EACA+D,EACAC,EACA,CACA,GAAAhE,IAAA,SAAAA,GAAA,WACA,GAAA,CACA,IAAAiE,EAAA,KACApE,EAAAoE,EAAA,qCAAA,CAAA,EACAC,EAAArE,EAAAG,CAAA,EAEAkE,IACAA,EAAA,WAEAA,EAAA,UAAA,IACAC,EAAA,KAAA,KAAAnE,EAAAkE,EAAA,QAAAF,CAAA,EACAE,EAAA,QAAA,OACA,OAAArE,EAAAG,CAAA,GAIA,OAAA,KAAAH,CAAA,EAAA,SAAA,GACA,OAAAoE,EAAA,oCAGA,MAAA,CAGA,CAGA,OAAAE,EAAA,KAAA,KAAAnE,EAAA+D,EAAAC,CAAA,CACA,CACA,CACA,EACA,CAAA,CACA,CAEA,IAAAI,GAAA,KAEA,SAAA9D,IAAA,CACA8D,GAAAzE,EAAA,QAEAA,EAAA,QAAA,SAAA0E,EAAApC,EAAAqC,EAAAC,EAAA5C,EAAA,CASA,OARAhB,GAAA,QAAA,CACA,OAAA4D,EACA,MAAA5C,EACA,KAAA2C,EACA,IAAAD,EACA,IAAApC,CACA,CAAA,EAEAmC,GAEAA,GAAA,MAAA,KAAA,SAAA,EAGA,EACA,CACA,CAEA,IAAAI,GAAA,KAEA,SAAAjE,IAAA,CACAiE,GAAA7E,EAAA,qBAEAA,EAAA,qBAAA,SAAAmB,EAAA,CAGA,OAFAH,GAAA,qBAAAG,CAAA,EAEA0D,GAEAA,GAAA,MAAA,KAAA,SAAA,EAGA,EACA,CACA,CCllBA,SAAAC,IAAA,CACA,IAAAC,EAAA,OAAA,SAAA,WACAC,EAAAD,EAAA,IAAA,QAAA,CAAA,EACA,SAAAE,EAAAC,EAAA,CACA,GAAAH,EACA,OAAAC,EAAA,IAAAE,CAAA,EACA,IAEAF,EAAA,IAAAE,CAAA,EACA,IAGA,QAAA,EAAA,EAAA,EAAAF,EAAA,OAAA,IAEA,GADAA,EAAA,CAAA,IACAE,EACA,MAAA,GAGA,OAAAF,EAAA,KAAAE,CAAA,EACA,EACA,CAEA,SAAAC,EAAAD,EAAA,CACA,GAAAH,EACAC,EAAA,OAAAE,CAAA,MAEA,SAAA,EAAA,EAAA,EAAAF,EAAA,OAAA,IACA,GAAAA,EAAA,CAAA,IAAAE,EAAA,CACAF,EAAA,OAAA,EAAA,CAAA,EACA,MAIA,CACA,MAAA,CAAAC,EAAAE,CAAA,CACA,CCzBA,SAAAC,IAAA,CACA,IAAAC,EAAAC,EACAC,EAAAF,EAAA,QAAAA,EAAA,SAEA,GAAAE,GAAAA,EAAA,WACA,OAAAA,EAAA,WAAA,EAAA,QAAA,KAAA,EAAA,EAGA,IAAAC,EACAD,GAAAA,EAAA,gBAAA,IAAAA,EAAA,gBAAA,IAAA,WAAA,CAAA,CAAA,EAAA,CAAA,EAAA,IAAA,KAAA,OAAA,EAAA,GAIA,OAAA,CAAA,GAAA,EAAA,IAAA,IAAA,IAAA,MAAA,QAAA,SAAAE,IAEAA,GAAAD,EAAA,EAAA,KAAAC,EAAA,GAAA,SAAA,EAAA,CACA,CACA,CAEA,SAAAC,GAAAC,EAAA,CACA,OAAAA,EAAA,WAAAA,EAAA,UAAA,OAAAA,EAAA,UAAA,OAAA,CAAA,EAAA,MACA,CAMA,SAAAC,GAAAD,EAAA,CACA,GAAA,CAAA,QAAAE,EAAA,SAAAC,CAAA,EAAAH,EACA,GAAAE,EACA,OAAAA,EAGA,IAAAE,EAAAL,GAAAC,CAAA,EACA,OAAAI,EACAA,EAAA,MAAAA,EAAA,MACA,GAAAA,EAAA,SAAAA,EAAA,QAEAA,EAAA,MAAAA,EAAA,OAAAD,GAAA,YAEAA,GAAA,WACA,CASA,SAAAE,GAAAL,EAAAM,EAAAC,EAAA,CACA,IAAAC,EAAAR,EAAA,UAAAA,EAAA,WAAA,CAAA,EACAS,EAAAD,EAAA,OAAAA,EAAA,QAAA,CAAA,EACAJ,EAAAK,EAAA,CAAA,EAAAA,EAAA,CAAA,GAAA,CAAA,EACAL,EAAA,QACAA,EAAA,MAAAE,GAAA,IAEAF,EAAA,OACAA,EAAA,KAAAG,GAAA,QAEA,CASA,SAAAG,GAAAV,EAAAW,EAAA,CACA,IAAAP,EAAAL,GAAAC,CAAA,EACA,GAAA,CAAAI,EACA,OAGA,IAAAQ,EAAA,CAAA,KAAA,UAAA,QAAA,EAAA,EACAC,EAAAT,EAAA,UAGA,GAFAA,EAAA,UAAA,CAAA,GAAAQ,EAAA,GAAAC,EAAA,GAAAF,CAAA,EAEAA,GAAA,SAAAA,EAAA,CACA,IAAAG,EAAA,CAAA,GAAAD,GAAAA,EAAA,KAAA,GAAAF,EAAA,IAAA,EACAP,EAAA,UAAA,KAAAU,EAEA,CAmFA,SAAAC,GAAAC,EAAA,CAEA,GAAAA,GAAAA,EAAA,oBACA,MAAA,GAGA,GAAA,CAGAC,GAAAD,EAAA,sBAAA,EAAA,CACA,MAAA,CAEA,CAEA,MAAA,EACA,CAQA,SAAAE,GAAAC,EAAA,CACA,OAAA,MAAA,QAAAA,CAAA,EAAAA,EAAA,CAAAA,CAAA,CACA,CC9LA,SAAAC,IAAA,CACA,OAAA,OAAA,0BAAA,KAAA,CAAA,CAAA,yBACA,CAKA,SAAAC,IAAA,CAEA,MAAA,KACA,CCtBA,SAAAC,IAAA,CAGA,MACA,CAAAC,GAAA,GACA,OAAA,UAAA,SAAA,KAAA,OAAA,QAAA,IAAA,QAAA,CAAA,IAAA,kBAEA,CAQA,SAAAC,GAAAC,EAAAC,EAAA,CAEA,OAAAD,EAAA,QAAAC,CAAA,CACA,CAeA,SAAAC,GAAAC,EAAA,CACA,IAAAH,EAEA,GAAA,CACAA,EAAAD,GAAA,OAAAI,CAAA,CACA,MAAA,CAEA,CAEA,GAAA,CACA,GAAA,CAAA,IAAAC,CAAA,EAAAL,GAAA,OAAA,SAAA,EACAC,EAAAD,GAAA,OAAA,GAAAK,EAAA,kBAAAD,GAAA,CACA,MAAA,CAEA,CAEA,OAAAH,CACA,CC3BA,SAAAK,GAAAC,EAAAC,EAAA,IAAAC,EAAA,IAAA,CACA,GAAA,CAEA,OAAAC,GAAA,GAAAH,EAAAC,EAAAC,CAAA,CACA,OAAAE,EAAA,CACA,MAAA,CAAA,MAAA,yBAAAA,IAAA,CACA,CACA,CAGA,SAAAC,GAEAC,EAEAL,EAAA,EAEAM,EAAA,IAAA,KACA,CACA,IAAAC,EAAAT,GAAAO,EAAAL,CAAA,EAEA,OAAAQ,GAAAD,CAAA,EAAAD,EACAF,GAAAC,EAAAL,EAAA,EAAAM,CAAA,EAGAC,CACA,CAWA,SAAAL,GACAO,EACAC,EACAV,EAAA,IACAC,EAAA,IACAU,EAAAC,GAAA,EACA,CACA,GAAA,CAAAC,EAAAC,CAAA,EAAAH,EAGA,GAAAD,IAAA,MAAA,CAAA,SAAA,UAAA,QAAA,EAAA,SAAA,OAAAA,CAAA,GAAA,CAAAK,GAAAL,CAAA,EACA,OAAAA,EAGA,IAAAM,EAAAC,GAAAR,EAAAC,CAAA,EAIA,GAAA,CAAAM,EAAA,WAAA,UAAA,EACA,OAAAA,EAQA,GAAAN,EAAA,8BACA,OAAAA,EAMA,IAAAQ,EAAAlB,EAOA,GALA,OAAAU,EAAA,yCAAA,WACAQ,EAAAR,EAAA,yCAIAQ,IAAA,EAEA,OAAAF,EAAA,QAAA,UAAA,EAAA,EAIA,GAAAH,EAAAH,CAAA,EACA,MAAA,eAIA,IAAAS,EAAAT,EACA,GAAAS,GAAA,OAAAA,EAAA,QAAA,WACA,GAAA,CACA,IAAAC,EAAAD,EAAA,OAAA,EAEA,OAAAjB,GAAA,GAAAkB,EAAAF,EAAA,EAAAjB,EAAAU,CAAA,CACA,MAAA,CAEA,CAMA,IAAAJ,EAAA,MAAA,QAAAG,CAAA,EAAA,CAAA,EAAA,CAAA,EACAW,EAAA,EAIAC,EAAAC,GAAAb,CAAA,EAEA,QAAAc,KAAAF,EAAA,CAEA,GAAA,CAAA,OAAA,UAAA,eAAA,KAAAA,EAAAE,CAAA,EACA,SAGA,GAAAH,GAAApB,EAAA,CACAM,EAAAiB,CAAA,EAAA,oBACA,MAIA,IAAAC,GAAAH,EAAAE,CAAA,EACAjB,EAAAiB,CAAA,EAAAtB,GAAAsB,EAAAC,GAAAP,EAAA,EAAAjB,EAAAU,CAAA,EAEAU,IAIA,OAAAP,EAAAJ,CAAA,EAGAH,CACA,CAcA,SAAAU,GACAR,EAGAC,EACA,CACA,GAAA,CACA,OAAAD,IAAA,UAAAC,GAAA,OAAAA,GAAA,UAAAA,EAAA,QACA,WAGAD,IAAA,gBACA,kBAMA,OAAA,OAAA,KAAAC,IAAA,OACA,WAIA,OAAA,OAAA,KAAAA,IAAA,OACA,WAIA,OAAA,SAAA,KAAAA,IAAA,SACA,aAIAgB,GAAAhB,CAAA,EACA,mBAGA,OAAAA,GAAA,UAAAA,IAAAA,EACA,QAIAA,IAAA,OACA,cAGA,OAAAA,GAAA,WACA,cAAAiB,GAAAjB,CAAA,KAGA,OAAAA,GAAA,SACA,IAAA,OAAAA,CAAA,KAIA,OAAAA,GAAA,SACA,YAAA,OAAAA,CAAA,KAOA,WAAAkB,GAAAlB,CAAA,IACA,OAAAP,EAAA,CACA,MAAA,yBAAAA,IACA,CACA,CAEA,SAAAyB,GAAAlB,EAAA,CACA,IAAAmB,EAAA,OAAA,eAAAnB,CAAA,EAEA,OAAAmB,EAAAA,EAAA,YAAA,KAAA,gBACA,CAGA,SAAAC,GAAApB,EAAA,CAEA,MAAA,CAAA,CAAA,UAAAA,CAAA,EAAA,MAAA,OAAA,EAAA,MACA,CAIA,SAAAF,GAAAE,EAAA,CACA,OAAAoB,GAAA,KAAA,UAAApB,CAAA,CAAA,CACA,CCnQA,IAAAqB,IAAA,SAAAA,EAAA,CAEAA,EAAAA,EAAA,QAAA,CAAA,EAAA,UAEA,IAAAC,EAAA,EAAAD,EAAAA,EAAA,SAAAC,CAAA,EAAA,WAEA,IAAAC,EAAA,EAAAF,EAAAA,EAAA,SAAAE,CAAA,EAAA,UACA,GAAAF,KAAAA,GAAA,CAAA,EAAA,EAYA,SAAAG,GAAAC,EAAA,CACA,OAAA,IAAAC,EAAAC,GAAA,CACAA,EAAAF,CAAA,CACA,CAAA,CACA,CAQA,SAAAG,GAAAC,EAAA,CACA,OAAA,IAAAH,EAAA,CAAAI,EAAAC,IAAA,CACAA,EAAAF,CAAA,CACA,CAAA,CACA,CAMA,IAAAH,EAAA,KAAA,CACA,QAAA,CAAA,KAAA,OAAAL,GAAA,OAAA,CACA,SAAA,CAAA,KAAA,UAAA,CAAA,CAAA,CAGA,YACAW,EACA,CAAAN,EAAA,UAAA,OAAA,KAAA,IAAA,EAAAA,EAAA,UAAA,QAAA,KAAA,IAAA,EAAAA,EAAA,UAAA,QAAA,KAAA,IAAA,EAAAA,EAAA,UAAA,QAAA,KAAA,IAAA,EAAAA,EAAA,UAAA,QAAA,KAAA,IAAA,EAAAA,EAAA,UAAA,QAAA,KAAA,IAAA,EACA,GAAA,CACAM,EAAA,KAAA,SAAA,KAAA,OAAA,CACA,OAAAC,EAAA,CACA,KAAA,QAAAA,CAAA,CACA,CACA,CAGA,KACAC,EACAC,EACA,CACA,OAAA,IAAAT,EAAA,CAAAC,EAAAI,IAAA,CACA,KAAA,UAAA,KAAA,CACA,GACAK,GAAA,CACA,GAAA,CAAAF,EAGAP,EAAAS,CAAA,MAEA,IAAA,CACAT,EAAAO,EAAAE,CAAA,CAAA,CACA,OAAAH,EAAA,CACAF,EAAAE,CAAA,CACA,CAEA,EACAJ,GAAA,CACA,GAAA,CAAAM,EACAJ,EAAAF,CAAA,MAEA,IAAA,CACAF,EAAAQ,EAAAN,CAAA,CAAA,CACA,OAAAI,EAAA,CACAF,EAAAE,CAAA,CACA,CAEA,CACA,CAAA,EACA,KAAA,iBAAA,CACA,CAAA,CACA,CAGA,MACAE,EACA,CACA,OAAA,KAAA,KAAAE,GAAAA,EAAAF,CAAA,CACA,CAGA,QAAAG,EAAA,CACA,OAAA,IAAAZ,EAAA,CAAAC,EAAAI,IAAA,CACA,IAAAM,EACAE,EAEA,OAAA,KAAA,KACAd,GAAA,CACAc,EAAA,GACAF,EAAAZ,EACAa,GACAA,EAAA,CAEA,EACAT,GAAA,CACAU,EAAA,GACAF,EAAAR,EACAS,GACAA,EAAA,CAEA,CACA,EAAA,KAAA,IAAA,CACA,GAAAC,EAAA,CACAR,EAAAM,CAAA,EACA,OAGAV,EAAAU,CAAA,CACA,CAAA,CACA,CAAA,CACA,CAGA,SAAA,CAAA,KAAA,SAAAZ,GAAA,CACA,KAAA,WAAAJ,GAAA,SAAAI,CAAA,CACA,CAAA,CAGA,SAAA,CAAA,KAAA,QAAAI,GAAA,CACA,KAAA,WAAAR,GAAA,SAAAQ,CAAA,CACA,CAAA,CAGA,SAAA,CAAA,KAAA,WAAA,CAAAW,EAAAf,IAAA,CACA,GAAA,KAAA,SAAAJ,GAAA,QAIA,IAAAoB,GAAAhB,CAAA,EAAA,CACAA,EAAA,KAAA,KAAA,SAAA,KAAA,OAAA,EACA,OAGA,KAAA,OAAAe,EACA,KAAA,OAAAf,EAEA,KAAA,iBAAA,EACA,CAAA,CAGA,SAAA,CAAA,KAAA,iBAAA,IAAA,CACA,GAAA,KAAA,SAAAJ,GAAA,QACA,OAGA,IAAAqB,EAAA,KAAA,UAAA,MAAA,EACA,KAAA,UAAA,CAAA,EAEAA,EAAA,QAAAC,GAAA,CACAA,EAAA,CAAA,IAIA,KAAA,SAAAtB,GAAA,UAEAsB,EAAA,CAAA,EAAA,KAAA,MAAA,EAGA,KAAA,SAAAtB,GAAA,UACAsB,EAAA,CAAA,EAAA,KAAA,MAAA,EAGAA,EAAA,CAAA,EAAA,GACA,CAAA,CACA,CAAA,CACA,ECjLA,SAAAC,GAAAC,EAAA,CACA,IAAAC,EAAA,CAAA,EAEA,SAAAC,GAAA,CACA,OAAAF,IAAA,QAAAC,EAAA,OAAAD,CACA,CAQA,SAAAG,EAAAC,EAAA,CACA,OAAAH,EAAA,OAAAA,EAAA,QAAAG,CAAA,EAAA,CAAA,EAAA,CAAA,CACA,CAYA,SAAAC,EAAAC,EAAA,CACA,GAAA,CAAAJ,EAAA,EACA,OAAAK,GAAA,IAAAC,EAAA,sDAAA,CAAA,EAIA,IAAAJ,EAAAE,EAAA,EACA,OAAAL,EAAA,QAAAG,CAAA,IAAA,IACAH,EAAA,KAAAG,CAAA,EAEAA,EACA,KAAA,IAAAD,EAAAC,CAAA,CAAA,EAIA,KAAA,KAAA,IACAD,EAAAC,CAAA,EAAA,KAAA,KAAA,IAAA,CAEA,CAAA,CACA,EACAA,CACA,CAWA,SAAAK,EAAAC,EAAA,CACA,OAAA,IAAAC,EAAA,CAAAC,EAAAC,IAAA,CACA,IAAAC,EAAAb,EAAA,OAEA,GAAA,CAAAa,EACA,OAAAF,EAAA,EAAA,EAIA,IAAAG,EAAA,WAAA,IAAA,CACAL,GAAAA,EAAA,GACAE,EAAA,EAAA,CAEA,EAAAF,CAAA,EAGAT,EAAA,QAAAe,GAAA,CACAC,GAAAD,CAAA,EAAA,KAAA,IAAA,CACA,EAAAF,IACA,aAAAC,CAAA,EACAH,EAAA,EAAA,EAEA,EAAAC,CAAA,CACA,CAAA,CACA,CAAA,CACA,CAEA,MAAA,CACA,EAAAZ,EACA,IAAAI,EACA,MAAAI,CACA,CACA,CCnGA,SAAAS,GAAAC,EAKA,CACA,GAAA,CAAAA,EACA,MAAA,CAAA,EAGA,IAAAC,EAAAD,EAAA,MAAA,8DAAA,EAEA,GAAA,CAAAC,EACA,MAAA,CAAA,EAIA,IAAAC,EAAAD,EAAA,CAAA,GAAA,GACAE,EAAAF,EAAA,CAAA,GAAA,GACA,MAAA,CACA,KAAAA,EAAA,CAAA,EACA,KAAAA,EAAA,CAAA,EACA,SAAAA,EAAA,CAAA,EACA,SAAAA,EAAA,CAAA,EAAAC,EAAAC,CACA,CACA,CCnBA,IAAAC,GAAA,CAAA,QAAA,QAAA,UAAA,MAAA,OAAA,OAAA,EAoBA,SAAAC,GAAAC,EAAA,CACA,OAAAA,IAAA,OAAA,UAAAC,GAAA,SAAAD,CAAA,EAAAA,EAAA,KACA,CC/BA,IAAAE,GAAAC,GAAA,EAgBAC,GAAA,CACA,WAAA,IAAA,KAAA,IAAA,EAAA,GACA,EAuBA,SAAAC,IAAA,CACA,GAAA,CAAA,YAAAC,CAAA,EAAAJ,GACA,GAAA,CAAAI,GAAA,CAAAA,EAAA,IACA,OAwBA,IAAAC,EAAA,KAAA,IAAA,EAAAD,EAAA,IAAA,EAEA,MAAA,CACA,IAAA,IAAAA,EAAA,IAAA,EACA,WAAAC,CACA,CACA,CAMA,SAAAC,IAAA,CACA,GAAA,CAEA,OADAC,GAAA,OAAA,YAAA,EACA,WACA,MAAA,CACA,MACA,CACA,CAKA,IAAAC,GAAAC,GAAA,EAAAH,GAAA,EAAAH,GAAA,EAEAO,GACAF,KAAA,OACAN,GACA,CACA,WAAA,KAAAM,GAAA,WAAAA,GAAA,IAAA,GAAA,GACA,EAKAG,GAAAT,GAAA,WAAA,KAAAA,EAAA,EAaAU,GAAAF,GAAA,WAAA,KAAAA,EAAA,EAGAG,GAAAD,GAUA,IAAAE,GAMAC,IAAA,IAAA,CAKA,GAAA,CAAA,YAAAC,CAAA,EAAAC,GACA,GAAA,CAAAD,GAAA,CAAAA,EAAA,IAAA,CACAF,GAAA,OACA,OAGA,IAAAI,EAAA,KAAA,IACAC,EAAAH,EAAA,IAAA,EACAI,EAAA,KAAA,IAAA,EAGAC,EAAAL,EAAA,WACA,KAAA,IAAAA,EAAA,WAAAG,EAAAC,CAAA,EACAF,EACAI,EAAAD,EAAAH,EAQAK,EAAAP,EAAA,QAAAA,EAAA,OAAA,gBAGAQ,EAFA,OAAAD,GAAA,SAEA,KAAA,IAAAA,EAAAJ,EAAAC,CAAA,EAAAF,EACAO,EAAAD,EAAAN,EAEA,OAAAI,GAAAG,EAEAJ,GAAAG,GACAV,GAAA,aACAE,EAAA,aAEAF,GAAA,kBACAS,IAKAT,GAAA,UACAM,EACA,GAAA,ECzLA,IAAAM,GAAA,IAAA,OACA,2DAKA,EASA,SAAAC,GAAAC,EAAA,CACA,IAAAC,EAAAD,EAAA,MAAAF,EAAA,EAEA,GAAA,CAAAE,GAAA,CAAAC,EAEA,OAGA,IAAAC,EACA,OAAAD,EAAA,CAAA,IAAA,IACAC,EAAA,GACAD,EAAA,CAAA,IAAA,MACAC,EAAA,IAGA,CACA,QAAAD,EAAA,CAAA,EACA,cAAAC,EACA,aAAAD,EAAA,CAAA,CACA,CACA,CCZA,SAAAE,GAAAC,EAAAC,EAAA,CAAA,EAAA,CACA,MAAA,CAAAD,EAAAC,CAAA,CACA,CAOA,SAAAC,GAAAC,EAAAC,EAAA,CACA,GAAA,CAAAJ,EAAAC,CAAA,EAAAE,EACA,MAAA,CAAAH,EAAA,CAAA,GAAAC,EAAAG,CAAA,CAAA,CACA,CAQA,SAAAC,GACAF,EACAG,EACA,CACA,IAAAC,EAAAJ,EAAA,CAAA,EAEA,QAAAK,KAAAD,EAAA,CACA,IAAAE,EAAAD,EAAA,CAAA,EAAA,KAGA,GAFAF,EAAAE,EAAAC,CAAA,EAGA,MAAA,GAIA,MAAA,EACA,CAYA,SAAAC,GAAAC,EAAAC,EAAA,CAEA,OADAA,GAAA,IAAA,aACA,OAAAD,CAAA,CACA,CAKA,SAAAE,GAAAC,EAAAF,EAAA,CACA,GAAA,CAAAG,EAAAC,CAAA,EAAAF,EAGAG,EAAA,KAAA,UAAAF,CAAA,EAEA,SAAAG,EAAAC,EAAA,CACA,OAAAF,GAAA,SACAA,EAAA,OAAAE,GAAA,SAAAF,EAAAE,EAAA,CAAAT,GAAAO,EAAAL,CAAA,EAAAO,CAAA,EAEAF,EAAA,KAAA,OAAAE,GAAA,SAAAT,GAAAS,EAAAP,CAAA,EAAAO,CAAA,CAEA,CAEA,QAAAC,KAAAJ,EAAA,CACA,GAAA,CAAAK,EAAAC,CAAA,EAAAF,EAIA,GAFAF,EAAA;EAAA,KAAA,UAAAG,CAAA;CAAA,EAEA,OAAAC,GAAA,UAAAA,aAAA,WACAJ,EAAAI,CAAA,MACA,CACA,IAAAC,EACA,GAAA,CACAA,EAAA,KAAA,UAAAD,CAAA,CACA,MAAA,CAIAC,EAAA,KAAA,UAAAC,GAAAF,CAAA,CAAA,CACA,CACAJ,EAAAK,CAAA,GAIA,OAAA,OAAAN,GAAA,SAAAA,EAAAQ,GAAAR,CAAA,CACA,CAEA,SAAAQ,GAAAC,EAAA,CACA,IAAAC,EAAAD,EAAA,OAAA,CAAAE,EAAAC,IAAAD,EAAAC,EAAA,OAAA,CAAA,EAEAC,EAAA,IAAA,WAAAH,CAAA,EACAI,EAAA,EACA,QAAAC,KAAAN,EACAI,EAAA,IAAAE,EAAAD,CAAA,EACAA,GAAAC,EAAA,OAGA,OAAAF,CACA,CAkDA,SAAAG,GACAC,EACAC,EACA,CACA,IAAAC,EAAA,OAAAF,EAAA,MAAA,SAAAG,GAAAH,EAAA,KAAAC,CAAA,EAAAD,EAAA,KAEA,MAAA,CACAI,GAAA,CACA,KAAA,aACA,OAAAF,EAAA,OACA,SAAAF,EAAA,SACA,aAAAA,EAAA,YACA,gBAAAA,EAAA,cACA,CAAA,EACAE,CACA,CACA,CAEA,IAAAG,GAAA,CACA,QAAA,UACA,SAAA,UACA,WAAA,aACA,YAAA,cACA,MAAA,QACA,cAAA,WACA,YAAA,UACA,QAAA,UACA,aAAA,SACA,iBAAA,QACA,EAKA,SAAAC,GAAAC,EAAA,CACA,OAAAF,GAAAE,CAAA,CACA,CAGA,SAAAC,GAAAC,EAAA,CACA,GAAA,CAAAA,GAAA,CAAAA,EAAA,IACA,OAEA,GAAA,CAAA,KAAAC,EAAA,QAAAC,CAAA,EAAAF,EAAA,IACA,MAAA,CAAA,KAAAC,EAAA,QAAAC,CAAA,CACA,CAMA,SAAAC,GACAC,EACAC,EACAC,EACAC,EACA,CACA,IAAAC,EAAAJ,EAAA,uBAAAA,EAAA,sBAAA,uBAEA,MAAA,CACA,SAAAA,EAAA,SACA,QAAA,IAAA,KAAA,EAAA,YAAA,EACA,GAAAC,GAAA,CAAA,IAAAA,CAAA,EACA,GAAA,CAAA,CAAAC,GAAA,CAAA,IAAAG,GAAAF,CAAA,CAAA,EACA,GAAAH,EAAA,OAAA,eACAI,GAAA,CACA,MAAAb,GAAA,CAAA,GAAAa,CAAA,CAAA,CACA,CACA,CACA,CC/OA,SAAAE,GACAC,EACAC,EACAC,EACA,CACA,IAAAC,EAAA,CACA,CAAA,KAAA,eAAA,EACA,CACA,UAAAD,GAAAE,GAAA,EACA,iBAAAJ,CACA,CACA,EACA,OAAAK,GAAAJ,EAAA,CAAA,IAAAA,CAAA,EAAA,CAAA,EAAA,CAAAE,CAAA,CAAA,CACA,CCVA,SAAAG,GAAAC,EAAAC,EAAA,KAAA,IAAA,EAAA,CACA,IAAAC,EAAA,SAAA,GAAAF,IAAA,EAAA,EACA,GAAA,CAAA,MAAAE,CAAA,EACA,OAAAA,EAAA,IAGA,IAAAC,EAAA,KAAA,MAAA,GAAAH,GAAA,EACA,OAAA,MAAAG,CAAA,EAIA,IAHAA,EAAAF,CAIA,CASA,SAAAG,GAAAC,EAAAC,EAAA,CACA,OAAAD,EAAAC,CAAA,GAAAD,EAAA,KAAA,CACA,CAKA,SAAAE,GAAAF,EAAAC,EAAAL,EAAA,KAAA,IAAA,EAAA,CACA,OAAAG,GAAAC,EAAAC,CAAA,EAAAL,CACA,CAOA,SAAAO,GACAH,EACA,CAAA,WAAAI,EAAA,QAAAC,CAAA,EACAT,EAAA,KAAA,IAAA,EACA,CACA,IAAAU,EAAA,CACA,GAAAN,CACA,EAIAO,EAAAF,GAAAA,EAAA,sBAAA,EACAG,EAAAH,GAAAA,EAAA,aAAA,EAEA,GAAAE,EAaA,QAAAE,KAAAF,EAAA,KAAA,EAAA,MAAA,GAAA,EAAA,CACA,GAAA,CAAAG,EAAAC,CAAA,EAAAF,EAAA,MAAA,IAAA,CAAA,EACAZ,EAAA,SAAAa,EAAA,EAAA,EACAE,GAAA,MAAAf,CAAA,EAAA,GAAAA,GAAA,IACA,GAAA,CAAAc,EACAL,EAAA,IAAAV,EAAAgB,MAEA,SAAAX,KAAAU,EAAA,MAAA,GAAA,EACAL,EAAAL,CAAA,EAAAL,EAAAgB,OAIAJ,EACAF,EAAA,IAAAV,EAAAF,GAAAc,EAAAZ,CAAA,EACAQ,IAAA,MACAE,EAAA,IAAAV,EAAA,GAAA,KAGA,OAAAU,CACA,CC3FA,IAAAO,GAAA,UAEAC,GAAA,UAEAC,GAAA,WAOAC,GAAA,KASA,SAAAC,GAEAC,EACA,CACA,GAAA,CAAAC,GAAAD,CAAA,GAAA,CAAA,MAAA,QAAAA,CAAA,EACA,OAKA,IAAAE,EAAA,CAAA,EAEA,GAAA,MAAA,QAAAF,CAAA,EAEAE,EAAAF,EAAA,OAAA,CAAAG,EAAAC,IAAA,CACA,IAAAC,EAAAC,GAAAF,CAAA,EACA,MAAA,CACA,GAAAD,EACA,GAAAE,CACA,CACA,EAAA,CAAA,CAAA,MACA,CAGA,GAAA,CAAAL,EACA,OAGAE,EAAAI,GAAAN,CAAA,EAIA,IAAAO,EAAA,OAAA,QAAAL,CAAA,EAAA,OAAA,CAAAC,EAAA,CAAAK,EAAAC,CAAA,IAAA,CACA,GAAAD,EAAA,MAAAX,EAAA,EAAA,CACA,IAAAa,EAAAF,EAAA,MAAAZ,GAAA,MAAA,EACAO,EAAAO,CAAA,EAAAD,EAEA,OAAAN,CACA,EAAA,CAAA,CAAA,EAIA,GAAA,OAAA,KAAAI,CAAA,EAAA,OAAA,EACA,OAAAA,CAIA,CAWA,SAAAI,GAEAJ,EACA,CAEA,IAAAK,EAAA,OAAA,QAAAL,CAAA,EAAA,OACA,CAAAJ,EAAA,CAAAU,EAAAC,CAAA,KACAA,IACAX,EAAA,GAAAP,KAAAiB,GAAA,EAAAC,GAEAX,GAEA,CAAA,CACA,EAEA,OAAAY,GAAAH,CAAA,CACA,CAQA,SAAAN,GAAAN,EAAA,CACA,OAAAA,EACA,MAAA,GAAA,EACA,IAAAgB,GAAAA,EAAA,MAAA,GAAA,EAAA,IAAAC,GAAA,mBAAAA,EAAA,KAAA,CAAA,CAAA,CAAA,EACA,OAAA,CAAAd,EAAA,CAAAK,EAAAC,CAAA,KACAN,EAAAK,CAAA,EAAAC,EACAN,GACA,CAAA,CAAA,CACA,CASA,SAAAY,GAAAG,EAAA,CACA,GAAA,OAAA,KAAAA,CAAA,EAAA,SAAA,EAKA,OAAA,OAAA,QAAAA,CAAA,EAAA,OAAA,CAAAlB,EAAA,CAAAmB,EAAAC,CAAA,EAAAC,IAAA,CACA,IAAAL,EAAA,GAAA,mBAAAG,CAAA,KAAA,mBAAAC,CAAA,IACAE,EAAAD,IAAA,EAAAL,EAAA,GAAAhB,KAAAgB,IACA,OAAAM,EAAA,OAAAxB,KACA,OAAA,iBAAA,KAAA,mBACAyB,EAAA,KACA,mBAAAJ,eAAAC,2DACA,EACApB,GAEAsB,CAEA,EAAA,EAAA,CACA,CC/IA,IAAAE,GAAA,aCWA,SAAAC,GAAAC,EAAA,CAEA,IAAAC,EAAAC,GAAA,EAEAC,EAAA,CACA,IAAAC,GAAA,EACA,KAAA,GACA,UAAAH,EACA,QAAAA,EACA,SAAA,EACA,OAAA,KACA,OAAA,EACA,eAAA,GACA,OAAA,IAAAI,GAAAF,CAAA,CACA,EAEA,OAAAH,GACAM,GAAAH,EAAAH,CAAA,EAGAG,CACA,CAcA,SAAAG,GAAAH,EAAAH,EAAA,CAAA,EAAA,CA6BA,GA5BAA,EAAA,OACA,CAAAG,EAAA,WAAAH,EAAA,KAAA,aACAG,EAAA,UAAAH,EAAA,KAAA,YAGA,CAAAG,EAAA,KAAA,CAAAH,EAAA,MACAG,EAAA,IAAAH,EAAA,KAAA,IAAAA,EAAA,KAAA,OAAAA,EAAA,KAAA,WAIAG,EAAA,UAAAH,EAAA,WAAAE,GAAA,EAEAF,EAAA,iBACAG,EAAA,eAAAH,EAAA,gBAEAA,EAAA,MAEAG,EAAA,IAAAH,EAAA,IAAA,SAAA,GAAAA,EAAA,IAAAI,GAAA,GAEAJ,EAAA,OAAA,SACAG,EAAA,KAAAH,EAAA,MAEA,CAAAG,EAAA,KAAAH,EAAA,MACAG,EAAA,IAAA,GAAAH,EAAA,OAEA,OAAAA,EAAA,SAAA,WACAG,EAAA,QAAAH,EAAA,SAEAG,EAAA,eACAA,EAAA,SAAA,eACA,OAAAH,EAAA,UAAA,SACAG,EAAA,SAAAH,EAAA,aACA,CACA,IAAAO,EAAAJ,EAAA,UAAAA,EAAA,QACAA,EAAA,SAAAI,GAAA,EAAAA,EAAA,EAEAP,EAAA,UACAG,EAAA,QAAAH,EAAA,SAEAA,EAAA,cACAG,EAAA,YAAAH,EAAA,aAEA,CAAAG,EAAA,WAAAH,EAAA,YACAG,EAAA,UAAAH,EAAA,WAEA,CAAAG,EAAA,WAAAH,EAAA,YACAG,EAAA,UAAAH,EAAA,WAEA,OAAAA,EAAA,QAAA,WACAG,EAAA,OAAAH,EAAA,QAEAA,EAAA,SACAG,EAAA,OAAAH,EAAA,OAEA,CAaA,SAAAQ,GAAAL,EAAAM,EAAA,CACA,IAAAT,EAAA,CAAA,EACAS,EACAT,EAAA,CAAA,OAAAS,CAAA,EACAN,EAAA,SAAA,OACAH,EAAA,CAAA,OAAA,QAAA,GAGAM,GAAAH,EAAAH,CAAA,CACA,CAWA,SAAAK,GAAAF,EAAA,CACA,OAAAO,GAAA,CACA,IAAA,GAAAP,EAAA,MACA,KAAAA,EAAA,KAEA,QAAA,IAAA,KAAAA,EAAA,QAAA,GAAA,EAAA,YAAA,EACA,UAAA,IAAA,KAAAA,EAAA,UAAA,GAAA,EAAA,YAAA,EACA,OAAAA,EAAA,OACA,OAAAA,EAAA,OACA,IAAA,OAAAA,EAAA,KAAA,UAAA,OAAAA,EAAA,KAAA,SAAA,GAAAA,EAAA,MAAA,OACA,SAAAA,EAAA,SACA,MAAA,CACA,QAAAA,EAAA,QACA,YAAAA,EAAA,YACA,WAAAA,EAAA,UACA,WAAAA,EAAA,SACA,CACA,CAAA,CACA,CClHA,IAAAQ,GAAA,IAMAC,GAAA,KAAA,CAuDA,aAAA,CACA,KAAA,oBAAA,GACA,KAAA,gBAAA,CAAA,EACA,KAAA,iBAAA,CAAA,EACA,KAAA,aAAA,CAAA,EACA,KAAA,aAAA,CAAA,EACA,KAAA,MAAA,CAAA,EACA,KAAA,MAAA,CAAA,EACA,KAAA,OAAA,CAAA,EACA,KAAA,UAAA,CAAA,EACA,KAAA,uBAAA,CAAA,CACA,CAMA,OAAA,MAAAC,EAAA,CACA,IAAAC,EAAA,IAAAF,GACA,OAAAC,IACAC,EAAA,aAAA,CAAA,GAAAD,EAAA,YAAA,EACAC,EAAA,MAAA,CAAA,GAAAD,EAAA,KAAA,EACAC,EAAA,OAAA,CAAA,GAAAD,EAAA,MAAA,EACAC,EAAA,UAAA,CAAA,GAAAD,EAAA,SAAA,EACAC,EAAA,MAAAD,EAAA,MACAC,EAAA,OAAAD,EAAA,OACAC,EAAA,MAAAD,EAAA,MACAC,EAAA,SAAAD,EAAA,SACAC,EAAA,iBAAAD,EAAA,iBACAC,EAAA,aAAAD,EAAA,aACAC,EAAA,iBAAA,CAAA,GAAAD,EAAA,gBAAA,EACAC,EAAA,gBAAAD,EAAA,gBACAC,EAAA,aAAA,CAAA,GAAAD,EAAA,YAAA,EACAC,EAAA,uBAAA,CAAA,GAAAD,EAAA,sBAAA,GAEAC,CACA,CAMA,iBAAAC,EAAA,CACA,KAAA,gBAAA,KAAAA,CAAA,CACA,CAKA,kBAAAA,EAAA,CACA,YAAA,iBAAA,KAAAA,CAAA,EACA,IACA,CAKA,QAAAC,EAAA,CACA,YAAA,MAAAA,GAAA,CAAA,EACA,KAAA,UACAC,GAAA,KAAA,SAAA,CAAA,KAAAD,CAAA,CAAA,EAEA,KAAA,sBAAA,EACA,IACA,CAKA,SAAA,CACA,OAAA,KAAA,KACA,CAKA,mBAAA,CACA,OAAA,KAAA,eACA,CAKA,kBAAAE,EAAA,CACA,YAAA,gBAAAA,EACA,IACA,CAKA,QAAAC,EAAA,CACA,YAAA,MAAA,CACA,GAAA,KAAA,MACA,GAAAA,CACA,EACA,KAAA,sBAAA,EACA,IACA,CAKA,OAAAC,EAAAC,EAAA,CACA,YAAA,MAAA,CAAA,GAAA,KAAA,MAAA,CAAAD,CAAA,EAAAC,CAAA,EACA,KAAA,sBAAA,EACA,IACA,CAKA,UAAAC,EAAA,CACA,YAAA,OAAA,CACA,GAAA,KAAA,OACA,GAAAA,CACA,EACA,KAAA,sBAAA,EACA,IACA,CAKA,SAAAF,EAAAG,EAAA,CACA,YAAA,OAAA,CAAA,GAAA,KAAA,OAAA,CAAAH,CAAA,EAAAG,CAAA,EACA,KAAA,sBAAA,EACA,IACA,CAKA,eAAAC,EAAA,CACA,YAAA,aAAAA,EACA,KAAA,sBAAA,EACA,IACA,CAKA,SAEAC,EACA,CACA,YAAA,OAAAA,EACA,KAAA,sBAAA,EACA,IACA,CAKA,mBAAAC,EAAA,CACA,YAAA,iBAAAA,EACA,KAAA,sBAAA,EACA,IACA,CAKA,WAAAN,EAAAO,EAAA,CACA,OAAAA,IAAA,KAEA,OAAA,KAAA,UAAAP,CAAA,EAEA,KAAA,UAAAA,CAAA,EAAAO,EAGA,KAAA,sBAAA,EACA,IACA,CAKA,QAAAC,EAAA,CACA,YAAA,MAAAA,EACA,KAAA,sBAAA,EACA,IACA,CAKA,SAAA,CACA,OAAA,KAAA,KACA,CAKA,gBAAA,CAGA,IAAAA,EAAA,KAAA,QAAA,EACA,OAAAA,GAAAA,EAAA,WACA,CAKA,WAAAC,EAAA,CACA,OAAAA,EAGA,KAAA,SAAAA,EAFA,OAAA,KAAA,SAIA,KAAA,sBAAA,EACA,IACA,CAKA,YAAA,CACA,OAAA,KAAA,QACA,CAKA,OAAAC,EAAA,CACA,GAAA,CAAAA,EACA,OAAA,KAGA,GAAA,OAAAA,GAAA,WAAA,CACA,IAAAC,EAAAD,EAAA,IAAA,EACA,OAAAC,aAAAnB,GAAAmB,EAAA,KAGA,OAAAD,aAAAlB,IACA,KAAA,MAAA,CAAA,GAAA,KAAA,MAAA,GAAAkB,EAAA,KAAA,EACA,KAAA,OAAA,CAAA,GAAA,KAAA,OAAA,GAAAA,EAAA,MAAA,EACA,KAAA,UAAA,CAAA,GAAA,KAAA,UAAA,GAAAA,EAAA,SAAA,EACAA,EAAA,OAAA,OAAA,KAAAA,EAAA,KAAA,EAAA,SACA,KAAA,MAAAA,EAAA,OAEAA,EAAA,SACA,KAAA,OAAAA,EAAA,QAEAA,EAAA,eACA,KAAA,aAAAA,EAAA,cAEAA,EAAA,kBACA,KAAA,gBAAAA,EAAA,kBAEAE,GAAAF,CAAA,IAEAA,EAAAA,EACA,KAAA,MAAA,CAAA,GAAA,KAAA,MAAA,GAAAA,EAAA,IAAA,EACA,KAAA,OAAA,CAAA,GAAA,KAAA,OAAA,GAAAA,EAAA,KAAA,EACA,KAAA,UAAA,CAAA,GAAA,KAAA,UAAA,GAAAA,EAAA,QAAA,EACAA,EAAA,OACA,KAAA,MAAAA,EAAA,MAEAA,EAAA,QACA,KAAA,OAAAA,EAAA,OAEAA,EAAA,cACA,KAAA,aAAAA,EAAA,aAEAA,EAAA,iBACA,KAAA,gBAAAA,EAAA,iBAIA,IACA,CAKA,OAAA,CACA,YAAA,aAAA,CAAA,EACA,KAAA,MAAA,CAAA,EACA,KAAA,OAAA,CAAA,EACA,KAAA,MAAA,CAAA,EACA,KAAA,UAAA,CAAA,EACA,KAAA,OAAA,OACA,KAAA,iBAAA,OACA,KAAA,aAAA,OACA,KAAA,gBAAA,OACA,KAAA,MAAA,OACA,KAAA,SAAA,OACA,KAAA,sBAAA,EACA,KAAA,aAAA,CAAA,EACA,IACA,CAKA,cAAAG,EAAAC,EAAA,CACA,IAAAC,EAAA,OAAAD,GAAA,SAAAA,EAAAvB,GAGA,GAAAwB,GAAA,EACA,OAAA,KAGA,IAAAC,EAAA,CACA,UAAAC,GAAA,EACA,GAAAJ,CACA,EACA,YAAA,aAAA,CAAA,GAAA,KAAA,aAAAG,CAAA,EAAA,MAAA,CAAAD,CAAA,EACA,KAAA,sBAAA,EAEA,IACA,CAKA,mBAAA,CACA,OAAA,KAAA,aAAA,KAAA,aAAA,OAAA,CAAA,CACA,CAKA,kBAAA,CACA,YAAA,aAAA,CAAA,EACA,KAAA,sBAAA,EACA,IACA,CAKA,cAAAG,EAAA,CACA,YAAA,aAAA,KAAAA,CAAA,EACA,IACA,CAKA,gBAAA,CACA,OAAA,KAAA,YACA,CAKA,kBAAA,CACA,YAAA,aAAA,CAAA,EACA,IACA,CASA,aAAAC,EAAAC,EAAA,CAAA,EAAA,CAuBA,GAtBA,KAAA,QAAA,OAAA,KAAA,KAAA,MAAA,EAAA,SACAD,EAAA,MAAA,CAAA,GAAA,KAAA,OAAA,GAAAA,EAAA,KAAA,GAEA,KAAA,OAAA,OAAA,KAAA,KAAA,KAAA,EAAA,SACAA,EAAA,KAAA,CAAA,GAAA,KAAA,MAAA,GAAAA,EAAA,IAAA,GAEA,KAAA,OAAA,OAAA,KAAA,KAAA,KAAA,EAAA,SACAA,EAAA,KAAA,CAAA,GAAA,KAAA,MAAA,GAAAA,EAAA,IAAA,GAEA,KAAA,WAAA,OAAA,KAAA,KAAA,SAAA,EAAA,SACAA,EAAA,SAAA,CAAA,GAAA,KAAA,UAAA,GAAAA,EAAA,QAAA,GAEA,KAAA,SACAA,EAAA,MAAA,KAAA,QAEA,KAAA,mBACAA,EAAA,YAAA,KAAA,kBAMA,KAAA,MAAA,CACAA,EAAA,SAAA,CAAA,MAAA,KAAA,MAAA,gBAAA,EAAA,GAAAA,EAAA,QAAA,EACA,IAAAE,EAAA,KAAA,MAAA,aAAA,KAAA,MAAA,YAAA,KACAA,IACAF,EAAA,KAAA,CAAA,YAAAE,EAAA,GAAAF,EAAA,IAAA,GAIA,YAAA,kBAAAA,CAAA,EAEAA,EAAA,YAAA,CAAA,GAAAA,EAAA,aAAA,CAAA,EAAA,GAAA,KAAA,YAAA,EACAA,EAAA,YAAAA,EAAA,YAAA,OAAA,EAAAA,EAAA,YAAA,OAEAA,EAAA,sBAAA,CAAA,GAAAA,EAAA,sBAAA,GAAA,KAAA,sBAAA,EAEA,KAAA,uBAAA,CAAA,GAAAG,GAAA,EAAA,GAAA,KAAA,gBAAA,EAAAH,EAAAC,CAAA,CACA,CAKA,yBAAAG,EAAA,CACA,YAAA,uBAAA,CAAA,GAAA,KAAA,uBAAA,GAAAA,CAAA,EAEA,IACA,CAKA,uBACAC,EACAL,EACAC,EACAK,EAAA,EACA,CACA,OAAA,IAAAC,EAAA,CAAAC,EAAAC,IAAA,CACA,IAAAC,EAAAL,EAAAC,CAAA,EACA,GAAAN,IAAA,MAAA,OAAAU,GAAA,WACAF,EAAAR,CAAA,MACA,CACA,IAAAW,EAAAD,EAAA,CAAA,GAAAV,CAAA,EAAAC,CAAA,GAEA,OAAA,iBAAA,KAAA,mBACAS,EAAA,IACAC,IAAA,MACAC,EAAA,IAAA,oBAAAF,EAAA,mBAAA,EAEAG,GAAAF,CAAA,EACAA,EACA,KAAAG,GAAA,KAAA,uBAAAT,EAAAS,EAAAb,EAAAK,EAAA,CAAA,EAAA,KAAAE,CAAA,CAAA,EACA,KAAA,KAAAC,CAAA,EAEA,KAAA,uBAAAJ,EAAAM,EAAAV,EAAAK,EAAA,CAAA,EACA,KAAAE,CAAA,EACA,KAAA,KAAAC,CAAA,EAGA,CAAA,CACA,CAKA,uBAAA,CAIA,KAAA,sBACA,KAAA,oBAAA,GACA,KAAA,gBAAA,QAAAjC,GAAA,CACAA,EAAA,IAAA,CACA,CAAA,EACA,KAAA,oBAAA,GAEA,CAMA,kBAAAwB,EAAA,CAEAA,EAAA,YAAAA,EAAA,YAAAe,GAAAf,EAAA,WAAA,EAAA,CAAA,EAGA,KAAA,eACAA,EAAA,YAAAA,EAAA,YAAA,OAAA,KAAA,YAAA,GAIAA,EAAA,aAAA,CAAAA,EAAA,YAAA,QACA,OAAAA,EAAA,WAEA,CACA,EAKA,SAAAG,IAAA,CACA,OAAAa,GAAA,wBAAA,IAAA,CAAA,CAAA,CACA,CAMA,SAAAC,GAAAzC,EAAA,CACA2B,GAAA,EAAA,KAAA3B,CAAA,CACA,CCpiBA,IAAA0C,GAAA,EAMAC,GAAA,IAqCAC,GAAA,KAAA,CAEA,QAAA,CAAA,KAAA,OAAA,CAAA,CAAA,CAAA,CAAA,CAaA,YAAAC,EAAAC,EAAA,IAAAC,GAAAC,EAAAN,GAAA,CAAA,KAAA,SAAAM,EAAAJ,GAAA,UAAA,OAAA,KAAA,IAAA,EACA,KAAA,YAAA,EAAA,MAAAE,EACAD,GACA,KAAA,WAAAA,CAAA,CAEA,CAKA,YAAAI,EAAA,CACA,OAAA,KAAA,SAAAA,CACA,CAKA,WAAAJ,EAAA,CACA,IAAAK,EAAA,KAAA,YAAA,EACAA,EAAA,OAAAL,EACAA,GAAAA,EAAA,mBACAA,EAAA,kBAAA,CAEA,CAKA,WAAA,CAEA,IAAAC,EAAAC,GAAA,MAAA,KAAA,SAAA,CAAA,EACA,YAAA,SAAA,EAAA,KAAA,CACA,OAAA,KAAA,UAAA,EACA,MAAAD,CACA,CAAA,EACAA,CACA,CAKA,UAAA,CACA,OAAA,KAAA,SAAA,EAAA,QAAA,EAAA,GACA,CAAA,CAAA,KAAA,SAAA,EAAA,IAAA,CACA,CAKA,UAAAK,EAAA,CACA,IAAAL,EAAA,KAAA,UAAA,EACA,GAAA,CACAK,EAAAL,CAAA,CACA,QAAA,CACA,KAAA,SAAA,CACA,CACA,CAKA,WAAA,CACA,OAAA,KAAA,YAAA,EAAA,MACA,CAGA,UAAA,CACA,OAAA,KAAA,YAAA,EAAA,KACA,CAGA,UAAA,CACA,OAAA,KAAA,MACA,CAGA,aAAA,CACA,OAAA,KAAA,OAAA,KAAA,OAAA,OAAA,CAAA,CACA,CAKA,iBAAAM,EAAAC,EAAA,CACA,IAAAC,EAAA,KAAA,aAAAD,GAAAA,EAAA,SAAAA,EAAA,SAAAE,GAAA,EACAC,EAAA,IAAA,MAAA,2BAAA,EACA,YAAA,YAAA,CAAAX,EAAAC,IAAA,CACAD,EAAA,iBACAO,EACA,CACA,kBAAAA,EACA,mBAAAI,EACA,GAAAH,EACA,SAAAC,CACA,EACAR,CACA,CACA,CAAA,EACAQ,CACA,CAKA,eACAG,EAEAC,EACAL,EACA,CACA,IAAAC,EAAA,KAAA,aAAAD,GAAAA,EAAA,SAAAA,EAAA,SAAAE,GAAA,EACAC,EAAA,IAAA,MAAAC,CAAA,EACA,YAAA,YAAA,CAAAZ,EAAAC,IAAA,CACAD,EAAA,eACAY,EACAC,EACA,CACA,kBAAAD,EACA,mBAAAD,EACA,GAAAH,EACA,SAAAC,CACA,EACAR,CACA,CACA,CAAA,EACAQ,CACA,CAKA,aAAAK,EAAAN,EAAA,CACA,IAAAC,EAAAD,GAAAA,EAAA,SAAAA,EAAA,SAAAE,GAAA,EACA,OAAAI,EAAA,OACA,KAAA,aAAAL,GAGA,KAAA,YAAA,CAAAT,EAAAC,IAAA,CACAD,EAAA,aAAAc,EAAA,CAAA,GAAAN,EAAA,SAAAC,CAAA,EAAAR,CAAA,CACA,CAAA,EACAQ,CACA,CAKA,aAAA,CACA,OAAA,KAAA,YACA,CAKA,cAAAM,EAAAP,EAAA,CACA,GAAA,CAAA,MAAAP,EAAA,OAAAD,CAAA,EAAA,KAAA,YAAA,EAEA,GAAA,CAAAC,GAAA,CAAAD,EAAA,OAEA,GAAA,CAAA,iBAAAgB,EAAA,KAAA,eAAAC,EAAAnB,EAAA,EACAE,EAAA,YAAAA,EAAA,WAAA,GAAA,CAAA,EAEA,GAAAiB,GAAA,EAAA,OAGA,IAAAC,EAAA,CAAA,UADAC,GAAA,EACA,GAAAJ,CAAA,EACAK,EAAAJ,EACAK,GAAA,IAAAL,EAAAE,EAAAV,CAAA,CAAA,EACAU,EAEAE,IAAA,MAEAnB,EAAA,cAAAmB,EAAAH,CAAA,CACA,CAKA,QAAAK,EAAA,CACA,IAAArB,EAAA,KAAA,SAAA,EACAA,GAAAA,EAAA,QAAAqB,CAAA,CACA,CAKA,QAAAC,EAAA,CACA,IAAAtB,EAAA,KAAA,SAAA,EACAA,GAAAA,EAAA,QAAAsB,CAAA,CACA,CAKA,UAAAC,EAAA,CACA,IAAAvB,EAAA,KAAA,SAAA,EACAA,GAAAA,EAAA,UAAAuB,CAAA,CACA,CAKA,OAAAC,EAAAC,EAAA,CACA,IAAAzB,EAAA,KAAA,SAAA,EACAA,GAAAA,EAAA,OAAAwB,EAAAC,CAAA,CACA,CAKA,SAAAD,EAAAE,EAAA,CACA,IAAA1B,EAAA,KAAA,SAAA,EACAA,GAAAA,EAAA,SAAAwB,EAAAE,CAAA,CACA,CAMA,WAAAC,EAAAC,EAAA,CACA,IAAA5B,EAAA,KAAA,SAAA,EACAA,GAAAA,EAAA,WAAA2B,EAAAC,CAAA,CACA,CAKA,eAAAvB,EAAA,CACA,GAAA,CAAA,MAAAL,EAAA,OAAAD,CAAA,EAAA,KAAA,YAAA,EACAC,GAAAD,GACAM,EAAAL,CAAA,CAEA,CAKA,IAAAK,EAAA,CACA,IAAAwB,EAAAC,GAAA,IAAA,EACA,GAAA,CACAzB,EAAA,IAAA,CACA,QAAA,CACAyB,GAAAD,CAAA,CACA,CACA,CAKA,eAAAE,EAAA,CACA,IAAAhC,EAAA,KAAA,UAAA,EACA,GAAA,CAAAA,EAAA,OAAA,KACA,GAAA,CACA,OAAAA,EAAA,eAAAgC,CAAA,CACA,MAAA,CACA,OAAA,OAAA,iBAAA,KAAA,mBAAAC,EAAA,KAAA,+BAAAD,EAAA,yBAAA,EACA,IACA,CACA,CAKA,iBAAAH,EAAAK,EAAA,CACA,OAAA,KAAA,qBAAA,mBAAAL,EAAAK,CAAA,CACA,CAKA,cAAA,CACA,OAAA,KAAA,qBAAA,cAAA,CACA,CAKA,eAAAC,EAAA,GAAA,CAEA,GAAAA,EACA,OAAA,KAAA,WAAA,EAIA,KAAA,mBAAA,CACA,CAKA,YAAA,CACA,IAAAC,EAAA,KAAA,YAAA,EACAnC,EAAAmC,GAAAA,EAAA,MACAC,EAAApC,GAAAA,EAAA,WAAA,EACAoC,GACAC,GAAAD,CAAA,EAEA,KAAA,mBAAA,EAGApC,GACAA,EAAA,WAAA,CAEA,CAKA,aAAA4B,EAAA,CACA,GAAA,CAAA,MAAA5B,EAAA,OAAAD,CAAA,EAAA,KAAA,YAAA,EACA,CAAA,QAAAuC,EAAA,YAAAC,EAAAC,EAAA,EAAAzC,GAAAA,EAAA,WAAA,GAAA,CAAA,EAGA,CAAA,UAAA0C,CAAA,EAAAC,EAAA,WAAA,CAAA,EAEAN,EAAAO,GAAA,CACA,QAAAL,EACA,YAAAC,EACA,GAAAvC,GAAA,CAAA,KAAAA,EAAA,QAAA,CAAA,EACA,GAAAyC,GAAA,CAAA,UAAAA,CAAA,EACA,GAAAb,CACA,CAAA,EAEA,GAAA5B,EAAA,CAEA,IAAA4C,EAAA5C,EAAA,YAAAA,EAAA,WAAA,EACA4C,GAAAA,EAAA,SAAA,MACAC,GAAAD,EAAA,CAAA,OAAA,QAAA,CAAA,EAEA,KAAA,WAAA,EAGA5C,EAAA,WAAAoC,CAAA,EAGA,OAAAA,CACA,CAMA,sBAAA,CACA,IAAArC,EAAA,KAAA,UAAA,EACA+C,EAAA/C,GAAAA,EAAA,WAAA,EACA,MAAA,GAAA+C,GAAAA,EAAA,eACA,CAKA,oBAAA,CACA,GAAA,CAAA,MAAA9C,EAAA,OAAAD,CAAA,EAAA,KAAA,YAAA,EACA,GAAA,CAAAC,EAAA,OAEA,IAAAoC,EAAApC,EAAA,WAAA,EACAoC,GACArC,GAAAA,EAAA,gBACAA,EAAA,eAAAqC,CAAA,CAGA,CAQA,YAAA/B,EAAA,CACA,GAAA,CAAA,MAAAL,EAAA,OAAAD,CAAA,EAAA,KAAA,YAAA,EACAA,GACAM,EAAAN,EAAAC,CAAA,CAEA,CAOA,qBAAA+C,KAAAC,EAAA,CAEA,IAAAC,EADAC,GAAA,EACA,WACA,GAAAD,GAAAA,EAAA,YAAA,OAAAA,EAAA,WAAAF,CAAA,GAAA,WACA,OAAAE,EAAA,WAAAF,CAAA,EAAA,MAAA,KAAAC,CAAA,GAEA,OAAA,iBAAA,KAAA,mBAAAhB,EAAA,KAAA,oBAAAe,qCAAA,CACA,CACA,EASA,SAAAG,IAAA,CACA,OAAAR,EAAA,WAAAA,EAAA,YAAA,CACA,WAAA,CAAA,EACA,IAAA,MACA,EACAA,CACA,CAOA,SAAAZ,GAAAqB,EAAA,CACA,IAAAC,EAAAF,GAAA,EACArB,EAAAwB,GAAAD,CAAA,EACA,OAAAE,GAAAF,EAAAD,CAAA,EACAtB,CACA,CASA,SAAA0B,GAAA,CAEA,IAAAH,EAAAF,GAAA,EAQA,OALA,CAAAM,GAAAJ,CAAA,GAAAC,GAAAD,CAAA,EAAA,YAAAxD,EAAA,IACA0D,GAAAF,EAAA,IAAAtD,EAAA,EAIA2D,GAAA,EACAC,GAAAN,CAAA,EAGAC,GAAAD,CAAA,CACA,CAMA,SAAAM,GAAAN,EAAA,CACA,GAAA,CACA,IAAAH,EAAAC,GAAA,EAAA,WACAS,EAAAV,GAAAA,EAAA,YAAAA,EAAA,WAAA,QAAAA,EAAA,WAAA,OAAA,OAGA,GAAA,CAAAU,EACA,OAAAN,GAAAD,CAAA,EAIA,GAAA,CAAAI,GAAAG,CAAA,GAAAN,GAAAM,CAAA,EAAA,YAAA/D,EAAA,EAAA,CACA,IAAAgE,EAAAP,GAAAD,CAAA,EAAA,YAAA,EACAE,GAAAK,EAAA,IAAA7D,GAAA8D,EAAA,OAAA3D,GAAA,MAAA2D,EAAA,KAAA,CAAA,CAAA,EAIA,OAAAP,GAAAM,CAAA,CACA,MAAA,CAEA,OAAAN,GAAAD,CAAA,CACA,CACA,CAMA,SAAAI,GAAAK,EAAA,CACA,MAAA,CAAA,EAAAA,GAAAA,EAAA,YAAAA,EAAA,WAAA,IACA,CAQA,SAAAR,GAAAQ,EAAA,CACA,OAAAC,GAAA,MAAA,IAAA,IAAAhE,GAAA+D,CAAA,CACA,CAQA,SAAAP,GAAAO,EAAAV,EAAA,CACA,GAAA,CAAAU,EAAA,MAAA,GACA,IAAAE,EAAAF,EAAA,WAAAA,EAAA,YAAA,CAAA,EACA,OAAAE,EAAA,IAAAZ,EACA,EACA,CC5kBA,SAAAa,GACAC,EACA,CACA,GAAA,OAAA,oBAAA,WAAA,CAAA,mBACA,MAAA,GAGA,IAAAC,EAAAC,EAAA,EAAA,UAAA,EACAC,EAAAH,GAAAC,GAAAA,EAAA,WAAA,EACA,MAAA,CAAA,CAAAE,IAAAA,EAAA,eAAA,qBAAAA,GAAA,kBAAAA,EACA,CCLA,IAAAC,GAAA,KAAA,CACA,QAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAIA,YAAAC,EAAA,IAAA,CAAAD,GAAA,UAAA,OAAA,KAAA,IAAA,EACA,KAAA,QAAAC,CACA,CAQA,IAAAC,EAAA,CACA,KAAA,MAAA,OAAA,KAAA,QACAA,EAAA,aAAA,OAEA,KAAA,MAAA,KAAAA,CAAA,CAEA,CACA,EAKAC,GAAA,KAAA,CAIA,SAAA,CAAA,KAAA,QAAAC,GAAA,CAAA,CAKA,SAAA,CAAA,KAAA,OAAAA,GAAA,EAAA,UAAA,EAAA,CAAA,CAoBA,SAAA,CAAA,KAAA,eAAAC,GAAA,CAAA,CAoBA,SAAA,CAAA,KAAA,KAAA,CAAA,CAAA,CAMA,SAAA,CAAA,KAAA,KAAA,CAAA,CAAA,CAeA,SAAA,CAAA,KAAA,aAAA,QAAA,CASA,YAAAC,EAAA,CACA,GADAH,GAAA,UAAA,QAAA,KAAA,IAAA,EAAAA,GAAA,UAAA,QAAA,KAAA,IAAA,EAAAA,GAAA,UAAA,QAAA,KAAA,IAAA,EAAAA,GAAA,UAAA,QAAA,KAAA,IAAA,EAAAA,GAAA,UAAA,QAAA,KAAA,IAAA,EAAAA,GAAA,UAAA,QAAA,KAAA,IAAA,EACA,CAAAG,EACA,OAAA,KAEAA,EAAA,UACA,KAAA,QAAAA,EAAA,SAEAA,EAAA,SACA,KAAA,OAAAA,EAAA,QAEAA,EAAA,eACA,KAAA,aAAAA,EAAA,cAGA,YAAAA,IACA,KAAA,QAAAA,EAAA,SAEAA,EAAA,KACA,KAAA,GAAAA,EAAA,IAEAA,EAAA,cACA,KAAA,YAAAA,EAAA,aAEAA,EAAA,OACA,KAAA,KAAAA,EAAA,MAEAA,EAAA,OACA,KAAA,KAAAA,EAAA,MAEAA,EAAA,SACA,KAAA,OAAAA,EAAA,QAEAA,EAAA,iBACA,KAAA,eAAAA,EAAA,gBAEAA,EAAA,eACA,KAAA,aAAAA,EAAA,cAEAA,EAAA,eACA,KAAA,aAAAA,EAAA,aAEA,CAKA,WACAA,EACA,CACA,IAAAC,EAAA,IAAAJ,GAAA,CACA,GAAAG,EACA,aAAA,KAAA,OACA,QAAA,KAAA,QACA,QAAA,KAAA,OACA,CAAA,EASA,GAPAC,EAAA,aAAA,KAAA,aACAA,EAAA,cACAA,EAAA,aAAA,IAAAA,CAAA,EAGAA,EAAA,YAAA,KAAA,aAEA,OAAA,iBAAA,KAAA,mBAAAA,EAAA,YAAA,CACA,IAAAC,EAAAF,GAAAA,EAAA,IAAA,iBACAG,EAAAF,EAAA,YAAA,MAAA,mBACAG,EAAAH,EAAA,YAAA,OAEAI,EAAA,uBAAAH,2BAAAC,OAAAC,MACAH,EAAA,YAAA,SAAA,aAAAA,EAAA,MAAA,EAAA,CAAA,WAAAI,CAAA,EACAC,EAAA,IAAAD,CAAA,EAGA,OAAAJ,CACA,CAKA,OAAAM,EAAAC,EAAA,CACA,YAAA,KAAA,CAAA,GAAA,KAAA,KAAA,CAAAD,CAAA,EAAAC,CAAA,EACA,IACA,CAMA,QAAAD,EAAAC,EAAA,CACA,YAAA,KAAA,CAAA,GAAA,KAAA,KAAA,CAAAD,CAAA,EAAAC,CAAA,EACA,IACA,CAKA,UAAAA,EAAA,CACA,YAAA,OAAAA,EACA,IACA,CAKA,cAAAC,EAAA,CACA,KAAA,OAAA,mBAAA,OAAAA,CAAA,CAAA,EACA,IAAAC,EAAAC,GAAAF,CAAA,EACA,OAAAC,IAAA,iBACA,KAAA,UAAAA,CAAA,EAEA,IACA,CAKA,WAAA,CACA,OAAA,KAAA,SAAA,IACA,CAKA,OAAAE,EAAA,CACA,IACA,OAAA,iBAAA,KAAA,mBAEA,KAAA,aACA,KAAA,YAAA,SAAA,KAAA,OACA,CACA,GAAA,CAAA,WAAAP,CAAA,EAAA,KAAA,YAAA,SAAA,aAAA,KAAA,MAAA,EACAA,GACAC,EAAA,IAAAD,EAAA,QAAA,WAAA,WAAA,CAAA,EAIA,KAAA,aAAA,OAAAO,GAAA,SAAAA,EAAAb,GAAA,CACA,CAKA,eAAA,CACA,IAAAc,EAAA,GACA,OAAA,KAAA,UAAA,SACAA,EAAA,KAAA,QAAA,KAAA,MAEA,GAAA,KAAA,WAAA,KAAA,SAAAA,GACA,CAKA,WAAA,CACA,OAAAC,GAAA,CACA,KAAA,KAAA,KACA,YAAA,KAAA,YACA,aAAA,KAAA,aACA,GAAA,KAAA,GACA,aAAA,KAAA,aACA,QAAA,KAAA,QACA,OAAA,KAAA,OACA,eAAA,KAAA,eACA,OAAA,KAAA,OACA,KAAA,KAAA,KACA,QAAA,KAAA,OACA,CAAA,CACA,CAKA,kBAAAd,EAAA,CACA,YAAA,KAAAA,EAAA,MAAA,CAAA,EACA,KAAA,YAAAA,EAAA,YACA,KAAA,aAAAA,EAAA,aACA,KAAA,GAAAA,EAAA,GACA,KAAA,aAAAA,EAAA,aACA,KAAA,QAAAA,EAAA,QACA,KAAA,OAAAA,EAAA,QAAA,KAAA,OACA,KAAA,eAAAA,EAAA,gBAAA,KAAA,eACA,KAAA,OAAAA,EAAA,OACA,KAAA,KAAAA,EAAA,MAAA,CAAA,EACA,KAAA,QAAAA,EAAA,SAAA,KAAA,QAEA,IACA,CAKA,iBAAA,CACA,OAAAc,GAAA,CACA,KAAA,OAAA,KAAA,KAAA,IAAA,EAAA,OAAA,EAAA,KAAA,KAAA,OACA,YAAA,KAAA,YACA,GAAA,KAAA,GACA,eAAA,KAAA,aACA,QAAA,KAAA,OACA,OAAA,KAAA,OACA,KAAA,OAAA,KAAA,KAAA,IAAA,EAAA,OAAA,EAAA,KAAA,KAAA,OACA,SAAA,KAAA,OACA,CAAA,CACA,CAKA,QAYA,CACA,OAAAA,GAAA,CACA,KAAA,OAAA,KAAA,KAAA,IAAA,EAAA,OAAA,EAAA,KAAA,KAAA,OACA,YAAA,KAAA,YACA,GAAA,KAAA,GACA,eAAA,KAAA,aACA,QAAA,KAAA,OACA,gBAAA,KAAA,eACA,OAAA,KAAA,OACA,KAAA,OAAA,KAAA,KAAA,IAAA,EAAA,OAAA,EAAA,KAAA,KAAA,OACA,UAAA,KAAA,aACA,SAAA,KAAA,OACA,CAAA,CACA,CACA,EA4CA,SAAAH,GAAAF,EAAA,CACA,GAAAA,EAAA,KAAAA,GAAA,IACA,MAAA,KAGA,GAAAA,GAAA,KAAAA,EAAA,IACA,OAAAA,EAAA,CACA,IAAA,KACA,MAAA,kBACA,IAAA,KACA,MAAA,oBACA,IAAA,KACA,MAAA,YACA,IAAA,KACA,MAAA,iBACA,IAAA,KACA,MAAA,sBACA,IAAA,KACA,MAAA,qBACA,QACA,MAAA,kBACA,CAGA,GAAAA,GAAA,KAAAA,EAAA,IACA,OAAAA,EAAA,CACA,IAAA,KACA,MAAA,gBACA,IAAA,KACA,MAAA,cACA,IAAA,KACA,MAAA,oBACA,QACA,MAAA,gBACA,CAGA,MAAA,eACA,CCnaA,IAAAM,GAAA,cAAAC,EAAA,CAUA,QAAA,CAAA,KAAA,cAAA,CAAA,CAAA,CAEA,SAAA,CAAA,KAAA,UAAA,CAAA,CAAA,CAIA,SAAA,CAAA,KAAA,8BAAA,MAAA,CASA,YAAAC,EAAAC,EAAA,CACA,MAAAD,CAAA,EAAAF,GAAA,UAAA,OAAA,KAAA,IAAA,EAAAA,GAAA,UAAA,QAAA,KAAA,IAAA,EAAAA,GAAA,UAAA,QAAA,KAAA,IAAA,EAEA,KAAA,KAAAG,GAAAC,EAAA,EAEA,KAAA,MAAAF,EAAA,MAAA,GAEA,KAAA,SAAA,CACA,OAAA,SACA,GAAAA,EAAA,SACA,aAAA,CAAA,CACA,EAEA,KAAA,SAAAA,EAAA,QAGA,KAAA,YAAA,KAIA,IAAAG,EAAA,KAAA,SAAA,uBACAA,IAEA,KAAA,8BAAA,CAAA,GAAAA,CAAA,EAEA,CAGA,IAAA,MAAA,CACA,OAAA,KAAA,KACA,CAGA,IAAA,KAAAC,EAAA,CACA,KAAA,QAAAA,CAAA,CACA,CAKA,QAAAC,EAAAC,EAAA,SAAA,CACA,KAAA,MAAAD,EACA,KAAA,SAAA,OAAAC,CACA,CAMA,iBAAAC,EAAA,IAAA,CACA,KAAA,eACA,KAAA,aAAA,IAAAC,GAAAD,CAAA,GAEA,KAAA,aAAA,IAAA,IAAA,CACA,CAKA,WAAAE,EAAAC,EAAA,CACAA,IAAA,KAEA,OAAA,KAAA,UAAAD,CAAA,EAEA,KAAA,UAAAA,CAAA,EAAAC,CAEA,CAKA,eAAAL,EAAAM,EAAAC,EAAA,GAAA,CACA,KAAA,cAAAP,CAAA,EAAA,CAAA,MAAAM,EAAA,KAAAC,CAAA,CACA,CAKA,YAAAC,EAAA,CACA,KAAA,SAAA,CAAA,GAAA,KAAA,SAAA,GAAAA,CAAA,CACA,CAKA,OAAAC,EAAA,CAEA,GAAA,KAAA,eAAA,OACA,OAGA,KAAA,QACA,OAAA,iBAAA,KAAA,mBAAAC,EAAA,KAAA,qEAAA,EACA,KAAA,KAAA,2BAIA,MAAA,OAAAD,CAAA,EAEA,IAAAE,EAAA,KAAA,KAAA,UAAA,EAKA,GAJAA,GAAAA,EAAA,MACAA,EAAA,KAAA,oBAAA,IAAA,EAGA,KAAA,UAAA,GAAA,EAEA,OAAA,iBAAA,KAAA,mBAAAD,EAAA,IAAA,kFAAA,EAEAC,GACAA,EAAA,mBAAA,cAAA,aAAA,EAGA,OAGA,IAAAC,EAAA,KAAA,aAAA,KAAA,aAAA,MAAA,OAAAC,GAAAA,IAAA,MAAAA,EAAA,YAAA,EAAA,CAAA,EAEA,KAAA,UAAAD,EAAA,OAAA,IACA,KAAA,aAAAA,EAAA,OAAA,CAAAE,EAAAC,IACAD,EAAA,cAAAC,EAAA,aACAD,EAAA,aAAAC,EAAA,aAAAD,EAAAC,EAEAD,CACA,EAAA,cAGA,IAAAE,EAAA,KAAA,SAEAC,EAAA,CACA,SAAA,CACA,GAAA,KAAA,UAEA,MAAA,KAAA,gBAAA,CACA,EACA,MAAAL,EACA,gBAAA,KAAA,eACA,KAAA,KAAA,KACA,UAAA,KAAA,aACA,YAAA,KAAA,KACA,KAAA,cACA,sBAAA,CACA,GAAAI,EACA,uBAAA,KAAA,0BAAA,CACA,EACA,GAAAA,EAAA,QAAA,CACA,iBAAA,CACA,OAAAA,EAAA,MACA,CACA,CACA,EAIA,OAFA,OAAA,KAAA,KAAA,aAAA,EAAA,OAAA,KAGA,OAAA,iBAAA,KAAA,mBACAN,EAAA,IACA,oDACA,KAAA,UAAA,KAAA,cAAA,OAAA,CAAA,CACA,EACAO,EAAA,aAAA,KAAA,gBAGA,OAAA,iBAAA,KAAA,mBAAAP,EAAA,IAAA,uBAAA,KAAA,mBAAA,KAAA,OAAA,EAEA,KAAA,KAAA,aAAAO,CAAA,CACA,CAKA,WAAA,CACA,IAAAC,EAAA,MAAA,UAAA,EAEA,OAAAC,GAAA,CACA,GAAAD,EACA,KAAA,KAAA,KACA,QAAA,KAAA,QACA,CAAA,CACA,CAKA,kBAAAvB,EAAA,CACA,aAAA,kBAAAA,CAAA,EAEA,KAAA,KAAAA,EAAA,MAAA,GAEA,KAAA,SAAAA,EAAA,QAEA,IACA,CAOA,2BAAA,CACA,GAAA,KAAA,8BACA,OAAA,KAAA,8BAGA,IAAAC,EAAA,KAAA,MAAAC,EAAA,EACAc,EAAAf,GAAAA,EAAA,UAAA,EAEA,GAAA,CAAAe,EAAA,MAAA,CAAA,EAEA,GAAA,CAAA,YAAAS,EAAA,QAAAC,CAAA,EAAAV,EAAA,WAAA,GAAA,CAAA,EACA,CAAA,UAAAW,CAAA,EAAAX,EAAA,OAAA,GAAA,CAAA,EAEAY,EAAA,KAAA,SAAA,WACAC,EAAAD,IAAA,OAAAA,EAAA,SAAA,EAAA,OAEAE,EAAA7B,EAAA,SAAA,EACA,CAAA,QAAA8B,CAAA,EAAAD,GAAAA,EAAA,QAAA,GAAA,CAAA,EAEAxB,EAAA,KAAA,SAAA,OAGAgB,EAAAhB,GAAAA,IAAA,MAAA,KAAA,KAAA,OAeA,OAbAkB,GAAA,CACA,YAAAC,GAAAO,GACA,QAAAN,EACA,YAAAJ,EACA,aAAAS,EACA,WAAAJ,EACA,SAAA,KAAA,QACA,YAAAE,CACA,CAAA,CAMA,CACA,EChRA,IAAAI,GAAA,CACA,YAAA,IACA,aAAA,IACA,kBAAA,GACA,EAKAC,GAAA,cAAAC,EAAA,CACA,YACAC,EACAC,EACAC,EACAC,EACA,CACA,MAAAA,CAAA,EAAA,KAAA,cAAAH,EAAA,KAAA,aAAAC,EAAA,KAAA,kBAAAC,CACA,CAKA,IAAAE,EAAA,CAGAA,EAAA,SAAA,KAAA,oBAEAA,EAAA,OAAAC,GAAA,CACAD,EAAA,aAAA,OAAAC,GAAA,SAAAA,EAAAC,GAAA,EACA,KAAA,aAAAF,EAAA,MAAA,CACA,EAGAA,EAAA,eAAA,QACA,KAAA,cAAAA,EAAA,MAAA,GAIA,MAAA,IAAAA,CAAA,CACA,CACA,EASAG,GAAA,cAAAC,EAAA,CAEA,QAAA,CAAA,KAAA,WAAA,CAAA,CAAA,CAMA,SAAA,CAAA,KAAA,kBAAA,CAAA,CAGA,SAAA,CAAA,KAAA,UAAA,EAAA,CAGA,SAAA,CAAA,KAAA,gCAAA,EAAA,CAEA,SAAA,CAAA,KAAA,uBAAA,CAAA,CAAA,CAOA,YACAC,EACAC,EAKAC,EAAAd,GAAA,YAIAe,EAAAf,GAAA,aACAgB,EAAAhB,GAAA,kBAEAiB,EAAA,GACA,CACA,MAAAL,EAAAC,CAAA,EAAA,KAAA,SAAAA,EAAA,KAAA,aAAAC,EAAA,KAAA,cAAAC,EAAA,KAAA,mBAAAC,EAAA,KAAA,SAAAC,EAAAP,GAAA,UAAA,OAAA,KAAA,IAAA,EAAAA,GAAA,UAAA,QAAA,KAAA,IAAA,EAAAA,GAAA,UAAA,QAAA,KAAA,IAAA,EAAAA,GAAA,UAAA,QAAA,KAAA,IAAA,EAAAA,GAAA,UAAA,QAAA,KAAA,IAAA,EAEAO,IAEAC,GAAAL,CAAA,GAIA,OAAA,iBAAA,KAAA,mBAAAM,EAAA,IAAA,+CAAA,KAAA,QAAA,EACAN,EAAA,eAAAO,GAAAA,EAAA,QAAA,IAAA,CAAA,GAGA,KAAA,oBAAA,EACA,WAAA,IAAA,CACA,KAAA,YACA,KAAA,UAAA,mBAAA,EACA,KAAA,OAAA,EAEA,EAAA,KAAA,aAAA,CACA,CAGA,OAAAZ,EAAAC,GAAA,EAAA,CAIA,GAHA,KAAA,UAAA,GACA,KAAA,WAAA,CAAA,EAEA,KAAA,aAAA,EACA,OAAA,iBAAA,KAAA,mBACAU,EAAA,IAAA,sCAAA,IAAA,KAAAX,EAAA,GAAA,EAAA,YAAA,EAAA,KAAA,EAAA,EAEA,QAAAa,KAAA,KAAA,uBACAA,EAAA,KAAAb,CAAA,EAGA,KAAA,aAAA,MAAA,KAAA,aAAA,MAAA,OAAAD,GAAA,CAEA,GAAAA,EAAA,SAAA,KAAA,OACA,MAAA,GAIAA,EAAA,eACAA,EAAA,aAAAC,EACAD,EAAA,UAAA,WAAA,GACA,OAAA,iBAAA,KAAA,mBACAY,EAAA,IAAA,0DAAA,KAAA,UAAAZ,EAAA,OAAA,CAAA,CAAA,GAGA,IAAAe,EAAAf,EAAA,eAAAC,EACA,OAAAc,IACA,OAAA,iBAAA,KAAA,mBACAH,EAAA,IACA,6EACA,KAAA,UAAAZ,EAAA,OAAA,CAAA,CACA,EAEAe,CACA,CAAA,GAEA,OAAA,iBAAA,KAAA,mBAAAH,EAAA,IAAA,oCAAA,OAEA,OAAA,iBAAA,KAAA,mBAAAA,EAAA,IAAA,qCAAA,EAIA,OAAA,KAAA,UACAD,GAAA,KAAA,QAAA,EAGA,MAAA,OAAAV,CAAA,CACA,CASA,6BAAAa,EAAA,CACA,KAAA,uBAAA,KAAAA,CAAA,CACA,CAKA,iBAAAf,EAAA,CACA,GAAA,CAAA,KAAA,aAAA,CACA,IAAAiB,EAAAC,GAAA,CACA,KAAA,WAGA,KAAA,cAAAA,CAAA,CACA,EACAC,EAAAD,GAAA,CACA,KAAA,WAGA,KAAA,aAAAA,CAAA,CACA,EAEA,KAAA,aAAA,IAAAvB,GAAAsB,EAAAE,EAAA,KAAA,OAAAnB,CAAA,GAGA,OAAA,iBAAA,KAAA,mBAAAa,EAAA,IAAA,oBAAA,EACA,KAAA,eAAA,EAEA,KAAA,aAAA,IAAA,IAAA,CACA,CAQA,kBACAX,EACA,CACA,yBAAAkB,CACA,EAEA,CACA,yBAAA,EACA,EACA,CACA,KAAA,iBACA,aAAA,KAAA,cAAA,EACA,KAAA,eAAA,OACA,KAAA,gCAAAA,IAAA,GAEA,OAAA,KAAA,KAAA,UAAA,EAAA,SAAA,GAAA,KAAA,iCACA,KAAA,OAAAlB,CAAA,EAGA,CAKA,oBAAAA,EAAA,CACA,KAAA,kBAAA,EACA,KAAA,eAAA,WAAA,IAAA,CACA,CAAA,KAAA,WAAA,OAAA,KAAA,KAAA,UAAA,EAAA,SAAA,GACA,KAAA,OAAAA,CAAA,CAEA,EAAA,KAAA,YAAA,CACA,CAMA,cAAAmB,EAAA,CACA,KAAA,kBAAA,GACA,OAAA,iBAAA,KAAA,mBAAAR,EAAA,IAAA,2BAAAQ,GAAA,EACA,KAAA,WAAAA,CAAA,EAAA,IACA,OAAA,iBAAA,KAAA,mBAAAR,EAAA,IAAA,iCAAA,OAAA,KAAA,KAAA,UAAA,EAAA,MAAA,CACA,CAMA,aAAAQ,EAAA,CAQA,GAPA,KAAA,WAAAA,CAAA,KACA,OAAA,iBAAA,KAAA,mBAAAR,EAAA,IAAA,yBAAAQ,GAAA,EAEA,OAAA,KAAA,WAAAA,CAAA,GACA,OAAA,iBAAA,KAAA,mBAAAR,EAAA,IAAA,iCAAA,OAAA,KAAA,KAAA,UAAA,EAAA,MAAA,GAGA,OAAA,KAAA,KAAA,UAAA,EAAA,SAAA,EAAA,CACA,IAAAX,EAAAC,GAAA,EACA,KAAA,gCACA,KAAA,OAAAD,CAAA,EAIA,KAAA,oBAAAA,EAAA,KAAA,aAAA,GAAA,EAGA,CAMA,OAAA,CAEA,GAAA,KAAA,UACA,OAGA,IAAAoB,EAAA,OAAA,KAAA,KAAA,UAAA,EAAA,KAAA,EAAA,EAEAA,IAAA,KAAA,qBACA,KAAA,oBAEA,KAAA,kBAAA,EAGA,KAAA,qBAAAA,EAEA,KAAA,mBAAA,IACA,OAAA,iBAAA,KAAA,mBAAAT,EAAA,IAAA,uEAAA,EACA,KAAA,UAAA,mBAAA,EACA,KAAA,OAAA,GAEA,KAAA,eAAA,CAEA,CAKA,gBAAA,EACA,OAAA,iBAAA,KAAA,mBAAAA,EAAA,IAAA,yCAAA,KAAA,mBAAA,EACA,WAAA,IAAA,CACA,KAAA,MAAA,CACA,EAAA,KAAA,kBAAA,CACA,CACA,EAKA,SAAAD,GAAAW,EAAA,CACA,IAAAT,EAAAS,EAAA,SAAA,EACAT,GACAA,EAAA,eAAA,GAEAA,EAAA,QAAA,MAAA,CAGA,CClUA,SAAAU,IAAA,CACA,IAAAC,EAAA,KAAA,SAAA,EACA,GAAAA,EAAA,CACA,IAAAC,EAAAD,EAAA,QAAA,EACA,GAAAC,EACA,MAAA,CACA,eAAAA,EAAA,cAAA,CACA,EAGA,MAAA,CAAA,CACA,CAcA,SAAAC,GACAC,EACAC,EACAC,EACA,CAEA,GAAA,CAAAC,GAAAF,CAAA,EACA,OAAAD,EAAA,QAAA,GACAA,EAIA,GAAAA,EAAA,UAAA,OACA,OAAAA,EAAA,YAAA,CACA,WAAA,OAAAA,EAAA,OAAA,CACA,CAAA,EACAA,EAKA,IAAAI,EAuBA,OAtBA,OAAAH,EAAA,eAAA,YACAG,EAAAH,EAAA,cAAAC,CAAA,EACAF,EAAA,YAAA,CACA,WAAA,OAAAI,CAAA,CACA,CAAA,GACAF,EAAA,gBAAA,OACAE,EAAAF,EAAA,cACA,OAAAD,EAAA,iBAAA,KACAG,EAAAH,EAAA,iBACAD,EAAA,YAAA,CACA,WAAA,OAAAI,CAAA,CACA,CAAA,IAGAA,EAAA,EACAJ,EAAA,YAAA,CACA,WAAAI,CACA,CAAA,GAKAC,GAAAD,CAAA,EAOAA,GAeAJ,EAAA,QAAA,KAAA,OAAA,EAAAI,EAGAJ,EAAA,UAUA,OAAA,iBAAA,KAAA,mBAAAM,EAAA,IAAA,sBAAAN,EAAA,oBAAAA,EAAA,MAAA,EACAA,KAVA,OAAA,iBAAA,KAAA,mBACAM,EAAA,IACA,oGAAA,OACAF,CACA,IACA,EACAJ,MAxBA,OAAA,iBAAA,KAAA,mBACAM,EAAA,IACA,4CACA,OAAAL,EAAA,eAAA,WACA,oCACA,8EAEA,EACAD,EAAA,QAAA,GACAA,KAhBA,OAAA,iBAAA,KAAA,mBAAAM,EAAA,KAAA,kEAAA,EACAN,EAAA,QAAA,GACAA,EAkCA,CAKA,SAAAK,GAAAE,EAAA,CAGA,OAAAC,GAAAD,CAAA,GAAA,EAAA,OAAAA,GAAA,UAAA,OAAAA,GAAA,aACA,OAAA,iBAAA,KAAA,mBACAD,EAAA,KACA,0GAAA,KAAA,UACAC,CACA,aAAA,KAAA,UAAA,OAAAA,CAAA,IACA,EACA,IAIAA,EAAA,GAAAA,EAAA,IACA,OAAA,iBAAA,KAAA,mBACAD,EAAA,KAAA,oFAAAC,IAAA,EACA,IAEA,EACA,CAiBA,SAAAE,GAEAC,EACAC,EACA,CACA,IAAAC,EAAA,KAAA,UAAA,EACAX,EAAAW,GAAAA,EAAA,WAAA,GAAA,CAAA,EAEAC,EAAAZ,EAAA,cAAA,SACAa,EAAAJ,EAAA,cAAA,SAEAG,IAAAC,KACA,OAAA,iBAAA,KAAA,mBACAR,EAAA,MACA,iDAAAQ,6CAAAD;sDACAA,0CACA,EAEAH,EAAA,QAAA,IAGA,IAAAV,EAAA,IAAAe,GAAAL,EAAA,IAAA,EACA,OAAAV,EAAAD,GAAAC,EAAAC,EAAA,CACA,cAAAS,EAAA,cACA,mBAAAA,EACA,GAAAC,CACA,CAAA,EACAX,EAAA,SACAA,EAAA,iBAAAC,EAAA,cAAAA,EAAA,aAAA,QAAA,EAEAW,GAAAA,EAAA,MACAA,EAAA,KAAA,mBAAAZ,CAAA,EAEAA,CACA,CAKA,SAAAgB,GACAC,EACAP,EACAQ,EACAC,EACAC,EACAT,EACAU,EACA,CACA,IAAAT,EAAAK,EAAA,UAAA,EACAhB,EAAAW,GAAAA,EAAA,WAAA,GAAA,CAAA,EAEAZ,EAAA,IAAAsB,GAAAZ,EAAAO,EAAAC,EAAAC,EAAAE,EAAAD,CAAA,EACA,OAAApB,EAAAD,GAAAC,EAAAC,EAAA,CACA,cAAAS,EAAA,cACA,mBAAAA,EACA,GAAAC,CACA,CAAA,EACAX,EAAA,SACAA,EAAA,iBAAAC,EAAA,cAAAA,EAAA,aAAA,QAAA,EAEAW,GAAAA,EAAA,MACAA,EAAA,KAAA,mBAAAZ,CAAA,EAEAA,CACA,CAKA,SAAAuB,IAAA,CACA,IAAAC,EAAAC,GAAA,EACAD,EAAA,aAGAA,EAAA,WAAA,WAAAA,EAAA,WAAA,YAAA,CAAA,EACAA,EAAA,WAAA,WAAA,mBACAA,EAAA,WAAA,WAAA,iBAAAf,IAEAe,EAAA,WAAA,WAAA,eACAA,EAAA,WAAA,WAAA,aAAA5B,IAEA,CC3NA,SAAA8B,GAAAC,EAAA,CAEA,IAAAC,GADAD,GAAAE,EAAA,GACA,SAAA,EACA,OAAAD,GAAAA,EAAA,eAAA,CACA,CCUA,SAAAE,GAAAC,EAAAC,EAAA,CACA,OAAAC,EAAA,EAAA,iBAAAF,EAAA,CAAA,eAAAC,CAAA,CAAA,CACA,CAwHA,SAAAE,GAAAC,EAAA,CACAC,EAAA,EAAA,UAAAD,CAAA,CACA,CC3JA,IAAAE,GAAA,IAGA,SAAAC,GAAAC,EAAA,CACA,IAAAC,EAAAD,EAAA,SAAA,GAAAA,EAAA,YAAA,GACAE,EAAAF,EAAA,KAAA,IAAAA,EAAA,OAAA,GACA,MAAA,GAAAC,MAAAD,EAAA,OAAAE,IAAAF,EAAA,KAAA,IAAAA,EAAA,OAAA,SACA,CAGA,SAAAG,GAAAH,EAAA,CACA,MAAA,GAAAD,GAAAC,CAAA,IAAAA,EAAA,qBACA,CAGA,SAAAI,GAAAJ,EAAAK,EAAA,CACA,OAAAC,GAAA,CAGA,WAAAN,EAAA,UACA,eAAAF,GACA,GAAAO,GAAA,CAAA,cAAA,GAAAA,EAAA,QAAAA,EAAA,SAAA,CACA,CAAA,CACA,CAOA,SAAAE,GACAP,EAGAQ,EAAA,CAAA,EACA,CAKA,IAAAC,EAAA,OAAAD,GAAA,SAAAA,EAAAA,EAAA,OACAH,EACA,OAAAG,GAAA,UAAA,CAAAA,EAAA,UAAA,OAAAA,EAAA,UAAA,IAEA,OAAAC,GAAA,GAAAN,GAAAH,CAAA,KAAAI,GAAAJ,EAAAK,CAAA,GACA,CCzBA,SAAAK,GAAAC,EAAAC,EAAA,CACA,OAAAA,IAGAD,EAAA,IAAAA,EAAA,KAAA,CAAA,EACAA,EAAA,IAAA,KAAAA,EAAA,IAAA,MAAAC,EAAA,KACAD,EAAA,IAAA,QAAAA,EAAA,IAAA,SAAAC,EAAA,QACAD,EAAA,IAAA,aAAA,CAAA,GAAAA,EAAA,IAAA,cAAA,CAAA,EAAA,GAAAC,EAAA,cAAA,CAAA,CAAA,EACAD,EAAA,IAAA,SAAA,CAAA,GAAAA,EAAA,IAAA,UAAA,CAAA,EAAA,GAAAC,EAAA,UAAA,CAAA,CAAA,GACAD,CACA,CAGA,SAAAE,GACAC,EACAC,EACAC,EACAC,EACA,CACA,IAAAL,EAAAM,GAAAF,CAAA,EACAG,EAAA,CACA,QAAA,IAAA,KAAA,EAAA,YAAA,EACA,GAAAP,GAAA,CAAA,IAAAA,CAAA,EACA,GAAA,CAAA,CAAAK,GAAA,CAAA,IAAAG,GAAAL,CAAA,CAAA,CACA,EAEAM,EACA,eAAAP,EAAA,CAAA,CAAA,KAAA,UAAA,EAAAA,CAAA,EAAA,CAAA,CAAA,KAAA,SAAA,EAAAA,CAAA,EAEA,OAAAQ,GAAAH,EAAA,CAAAE,CAAA,CAAA,CACA,CAKA,SAAAE,GACAZ,EACAI,EACAC,EACAC,EACA,CACA,IAAAL,EAAAM,GAAAF,CAAA,EASAQ,EAAAb,EAAA,MAAAA,EAAA,OAAA,eAAAA,EAAA,KAAA,QAEAD,GAAAC,EAAAK,GAAAA,EAAA,GAAA,EAEA,IAAAG,EAAAM,GAAAd,EAAAC,EAAAK,EAAAF,CAAA,EAMA,cAAAJ,EAAA,sBAGAW,GAAAH,EAAA,CADA,CAAA,CAAA,KAAAK,CAAA,EAAAb,CAAA,CACA,CAAA,CACA,CC3EA,IAAAe,GAAA,CAAA,EAaA,SAAAC,GAAAC,EAAA,CACA,IAAAC,EAAA,CAAA,EAEA,OAAAD,EAAA,QAAAE,GAAA,CACA,GAAA,CAAA,KAAAC,CAAA,EAAAD,EAEAE,EAAAH,EAAAE,CAAA,EAIAC,GAAA,CAAAA,EAAA,mBAAAF,EAAA,oBAIAD,EAAAE,CAAA,EAAAD,EACA,CAAA,EAEA,OAAA,KAAAD,CAAA,EAAA,IAAAI,GAAAJ,EAAAI,CAAA,CAAA,CACA,CAGA,SAAAC,GAAAC,EAAA,CACA,IAAAC,EAAAD,EAAA,qBAAA,CAAA,EACAE,EAAAF,EAAA,aAGAC,EAAA,QAAAE,GAAA,CACAA,EAAA,kBAAA,EACA,CAAA,EAEA,IAAAV,EAEA,MAAA,QAAAS,CAAA,EACAT,EAAA,CAAA,GAAAQ,EAAA,GAAAC,CAAA,EACA,OAAAA,GAAA,WACAT,EAAAW,GAAAF,EAAAD,CAAA,CAAA,EAEAR,EAAAQ,EAGA,IAAAI,EAAAb,GAAAC,CAAA,EAMAa,EAAAD,EAAA,UAAAF,GAAAA,EAAA,OAAA,OAAA,EACA,GAAAG,IAAA,GAAA,CACA,GAAA,CAAAC,CAAA,EAAAF,EAAA,OAAAC,EAAA,CAAA,EACAD,EAAA,KAAAE,CAAA,EAGA,OAAAF,CACA,CAQA,SAAAG,GAAAf,EAAA,CACA,IAAAgB,EAAA,CAAA,EAEA,OAAAhB,EAAA,QAAAU,GAAA,CAEAA,GACAO,GAAAP,EAAAM,CAAA,CAEA,CAAA,EAEAA,CACA,CAGA,SAAAC,GAAAP,EAAAM,EAAA,CACAA,EAAAN,EAAA,IAAA,EAAAA,EAEAZ,GAAA,QAAAY,EAAA,IAAA,IAAA,KACAA,EAAA,UAAAQ,GAAAC,CAAA,EACArB,GAAA,KAAAY,EAAA,IAAA,GACA,OAAA,iBAAA,KAAA,mBAAAU,EAAA,IAAA,0BAAAV,EAAA,MAAA,EAEA,CCrFA,SAAAW,GACAC,EACAC,EACAC,EACAC,EACA,CACA,GAAA,CAAA,eAAAC,EAAA,EAAA,oBAAAC,EAAA,GAAA,EAAAL,EACAM,EAAA,CACA,GAAAL,EACA,SAAAA,EAAA,UAAAC,EAAA,UAAAK,GAAA,EACA,UAAAN,EAAA,WAAAO,GAAA,CACA,EACAC,EAAAP,EAAA,cAAAF,EAAA,aAAA,IAAAU,GAAAA,EAAA,IAAA,EAEAC,GAAAL,EAAAN,CAAA,EACAY,GAAAN,EAAAG,CAAA,EACAI,GAAAP,EAAAN,EAAA,WAAA,EAIA,IAAAc,EAAAX,EACAD,EAAA,iBACAY,EAAAC,GAAA,MAAAD,CAAA,EAAA,OAAAZ,EAAA,cAAA,GAIA,IAAAc,EAAAC,GAAAX,CAAA,EASA,GAAAQ,EAAA,CAEA,GAAAA,EAAA,eAAA,CACA,IAAAI,EAAA,CAAA,GAAAhB,EAAA,aAAA,CAAA,EAAA,GAAAY,EAAA,eAAA,CAAA,EAEAI,EAAA,SACAhB,EAAA,YAAAgB,GAKAF,EAAAF,EAAA,aAAAR,EAAAJ,CAAA,EAGA,OAAAc,EAAA,KAAAG,GACA,OAAAf,GAAA,UAAAA,EAAA,EACAgB,GAAAD,EAAAf,EAAAC,CAAA,EAEAc,CACA,CACA,CAQA,SAAAR,GAAAV,EAAAD,EAAA,CACA,GAAA,CAAA,YAAAqB,EAAA,QAAAC,EAAA,KAAAC,EAAA,eAAAC,EAAA,GAAA,EAAAxB,EAEA,gBAAAC,IACAA,EAAA,YAAA,gBAAAD,EAAAqB,EAAAI,IAGAxB,EAAA,UAAA,QAAAqB,IAAA,SACArB,EAAA,QAAAqB,GAGArB,EAAA,OAAA,QAAAsB,IAAA,SACAtB,EAAA,KAAAsB,GAGAtB,EAAA,UACAA,EAAA,QAAAyB,GAAAzB,EAAA,QAAAuB,CAAA,GAGA,IAAAG,EAAA1B,EAAA,WAAAA,EAAA,UAAA,QAAAA,EAAA,UAAA,OAAA,CAAA,EACA0B,GAAAA,EAAA,QACAA,EAAA,MAAAD,GAAAC,EAAA,MAAAH,CAAA,GAGA,IAAAI,EAAA3B,EAAA,QACA2B,GAAAA,EAAA,MACAA,EAAA,IAAAF,GAAAE,EAAA,IAAAJ,CAAA,EAEA,CAKA,SAAAX,GAAAZ,EAAA4B,EAAA,CACA,IAAAC,EAAAC,EAAA,gBAEA,GAAA,CAAAD,EACA,OAIA,IAAAE,EAAA,OAAA,KAAAF,CAAA,EAAA,OAAA,CAAAG,EAAAC,IAAA,CACA,IAAAC,EAAAN,EAAAK,CAAA,EACA,QAAAE,KAAAD,EACA,GAAAC,EAAA,SAAA,CACAH,EAAAG,EAAA,QAAA,EAAAN,EAAAI,CAAA,EACA,MAGA,OAAAD,CACA,EAAA,CAAA,CAAA,EAGAI,EAAA,IAAA,IACA,GAAA,CAEApC,EAAA,UAAA,OAAA,QAAA0B,GAAA,CAEAA,EAAA,WAAA,OAAA,QAAAW,GAAA,CACAA,EAAA,UACAD,EAAA,IAAAC,EAAA,QAAA,CAEA,CAAA,CACA,CAAA,CACA,MAAA,CAEA,CAGArC,EAAA,WAAAA,EAAA,YAAA,CAAA,EACAA,EAAA,WAAA,OAAAA,EAAA,WAAA,QAAA,CAAA,EACA,IAAAsC,EAAAtC,EAAA,WAAA,OACAoC,EAAA,QAAAG,GAAA,CACAR,EAAAQ,CAAA,GACAD,EAAA,KAAA,CACA,KAAA,YACA,UAAAC,EACA,SAAAR,EAAAQ,CAAA,CACA,CAAA,CAEA,CAAA,CACA,CAMA,SAAA5B,GAAAX,EAAAwC,EAAA,CACAA,EAAA,OAAA,IACAxC,EAAA,IAAAA,EAAA,KAAA,CAAA,EACAA,EAAA,IAAA,aAAA,CAAA,GAAAA,EAAA,IAAA,cAAA,CAAA,EAAA,GAAAwC,CAAA,EAEA,CAYA,SAAArB,GAAAnB,EAAAyC,EAAAC,EAAA,CACA,GAAA,CAAA1C,EACA,OAAA,KAGA,IAAA2C,EAAA,CACA,GAAA3C,EACA,GAAAA,EAAA,aAAA,CACA,YAAAA,EAAA,YAAA,IAAA4C,IAAA,CACA,GAAAA,EACA,GAAAA,EAAA,MAAA,CACA,KAAAC,GAAAD,EAAA,KAAAH,EAAAC,CAAA,CACA,CACA,EAAA,CACA,EACA,GAAA1C,EAAA,MAAA,CACA,KAAA6C,GAAA7C,EAAA,KAAAyC,EAAAC,CAAA,CACA,EACA,GAAA1C,EAAA,UAAA,CACA,SAAA6C,GAAA7C,EAAA,SAAAyC,EAAAC,CAAA,CACA,EACA,GAAA1C,EAAA,OAAA,CACA,MAAA6C,GAAA7C,EAAA,MAAAyC,EAAAC,CAAA,CACA,CACA,EASA,OAAA1C,EAAA,UAAAA,EAAA,SAAA,OAAA2C,EAAA,WACAA,EAAA,SAAA,MAAA3C,EAAA,SAAA,MAGAA,EAAA,SAAA,MAAA,OACA2C,EAAA,SAAA,MAAA,KAAAE,GAAA7C,EAAA,SAAA,MAAA,KAAAyC,EAAAC,CAAA,IAKA1C,EAAA,QACA2C,EAAA,MAAA3C,EAAA,MAAA,IAAA8C,IAEAA,EAAA,OACAA,EAAA,KAAAD,GAAAC,EAAA,KAAAL,EAAAC,CAAA,GAEAI,EACA,GAGAH,CACA,CCtMA,IAAAI,GAAA,8DAiCAC,GAAA,KAAA,CAUA,QAAA,CAAA,KAAA,cAAA,CAAA,CAAA,CAGA,SAAA,CAAA,KAAA,yBAAA,EAAA,CAGA,SAAA,CAAA,KAAA,eAAA,CAAA,CAGA,SAAA,CAAA,KAAA,UAAA,CAAA,CAAA,CAGA,SAAA,CAAA,KAAA,OAAA,CAAA,CAAA,CAOA,YAAAC,EAAA,CAEA,GAFAD,GAAA,UAAA,OAAA,KAAA,IAAA,EAAAA,GAAA,UAAA,QAAA,KAAA,IAAA,EAAAA,GAAA,UAAA,QAAA,KAAA,IAAA,EAAAA,GAAA,UAAA,QAAA,KAAA,IAAA,EAAAA,GAAA,UAAA,QAAA,KAAA,IAAA,EACA,KAAA,SAAAC,EACAA,EAAA,IAAA,CACA,KAAA,KAAAC,GAAAD,EAAA,GAAA,EACA,IAAAE,EAAAC,GAAA,KAAA,KAAAH,CAAA,EACA,KAAA,WAAAA,EAAA,UAAA,CACA,mBAAA,KAAA,mBAAA,KAAA,IAAA,EACA,GAAAA,EAAA,iBACA,IAAAE,CACA,CAAA,OAEA,OAAA,iBAAA,KAAA,mBAAAE,EAAA,KAAA,+CAAA,CAEA,CAMA,iBAAAC,EAAAC,EAAAC,EAAA,CAEA,GAAAC,GAAAH,CAAA,EAAA,EACA,OAAA,iBAAA,KAAA,mBAAAD,EAAA,IAAAN,EAAA,EACA,OAGA,IAAAW,EAAAH,GAAAA,EAAA,SAEA,YAAA,SACA,KAAA,mBAAAD,EAAAC,CAAA,EACA,KAAAI,GAAA,KAAA,cAAAA,EAAAJ,EAAAC,CAAA,CAAA,EACA,KAAAI,GAAA,CACAF,EAAAE,CACA,CAAA,CACA,EAEAF,CACA,CAKA,eACAG,EAEAC,EACAP,EACAC,EACA,CACA,IAAAE,EAAAH,GAAAA,EAAA,SAEAQ,EAAAC,GAAAH,CAAA,EACA,KAAA,iBAAA,OAAAA,CAAA,EAAAC,EAAAP,CAAA,EACA,KAAA,mBAAAM,EAAAN,CAAA,EAEA,YAAA,SACAQ,EACA,KAAAJ,GAAA,KAAA,cAAAA,EAAAJ,EAAAC,CAAA,CAAA,EACA,KAAAI,GAAA,CACAF,EAAAE,CACA,CAAA,CACA,EAEAF,CACA,CAKA,aAAAC,EAAAJ,EAAAC,EAAA,CAEA,GAAAD,GAAAA,EAAA,mBAAAE,GAAAF,EAAA,iBAAA,EAAA,EACA,OAAA,iBAAA,KAAA,mBAAAF,EAAA,IAAAN,EAAA,EACA,OAGA,IAAAW,EAAAH,GAAAA,EAAA,SAEA,YAAA,SACA,KAAA,cAAAI,EAAAJ,EAAAC,CAAA,EAAA,KAAAI,GAAA,CACAF,EAAAE,CACA,CAAA,CACA,EAEAF,CACA,CAKA,eAAAO,EAAA,CACA,GAAA,CAAA,KAAA,WAAA,EAAA,EACA,OAAA,iBAAA,KAAA,mBAAAZ,EAAA,KAAA,4CAAA,EACA,OAGA,OAAAY,EAAA,SAAA,UACA,OAAA,iBAAA,KAAA,mBAAAZ,EAAA,KAAA,4DAAA,GAEA,KAAA,YAAAY,CAAA,EAEAC,GAAAD,EAAA,CAAA,KAAA,EAAA,CAAA,EAEA,CAKA,QAAA,CACA,OAAA,KAAA,IACA,CAKA,YAAA,CACA,OAAA,KAAA,QACA,CAOA,gBAAA,CACA,OAAA,KAAA,SAAA,SACA,CAKA,cAAA,CACA,OAAA,KAAA,UACA,CAKA,MAAAE,EAAA,CACA,IAAAC,EAAA,KAAA,WACA,OAAAA,EACA,KAAA,wBAAAD,CAAA,EAAA,KAAAE,GACAD,EAAA,MAAAD,CAAA,EAAA,KAAAG,GAAAD,GAAAC,CAAA,CACA,EAEAC,GAAA,EAAA,CAEA,CAKA,MAAAJ,EAAA,CACA,OAAA,KAAA,MAAAA,CAAA,EAAA,KAAAP,IACA,KAAA,WAAA,EAAA,QAAA,GACAA,EACA,CACA,CAKA,mBAAA,CACA,KAAA,WAAA,GAAA,CAAA,KAAA,2BACA,KAAA,cAAAY,GAAA,KAAA,SAAA,YAAA,EACA,KAAA,yBAAA,GAEA,CAOA,mBAAAC,EAAA,CACA,OAAA,KAAA,cAAAA,CAAA,CACA,CAKA,eAAAC,EAAA,CACA,GAAA,CACA,OAAA,KAAA,cAAAA,EAAA,EAAA,GAAA,IACA,MAAA,CACA,OAAA,OAAA,iBAAA,KAAA,mBAAArB,EAAA,KAAA,+BAAAqB,EAAA,4BAAA,EACA,IACA,CACA,CAKA,eAAAA,EAAA,CACAC,GAAAD,EAAA,KAAA,aAAA,CACA,CAKA,UAAAf,EAAAJ,EAAA,CAAA,EAAA,CACA,GAAA,KAAA,KAAA,CACA,IAAAqB,EAAAC,GAAAlB,EAAA,KAAA,KAAA,KAAA,SAAA,UAAA,KAAA,SAAA,MAAA,EAEA,QAAAmB,KAAAvB,EAAA,aAAA,CAAA,EACAqB,EAAAG,GACAH,EACAI,GACAF,EACA,KAAA,SAAA,kBAAA,KAAA,SAAA,iBAAA,WACA,CACA,EAGA,KAAA,cAAAF,CAAA,EAEA,CAKA,YAAAX,EAAA,CACA,GAAA,KAAA,KAAA,CACA,IAAAW,EAAAK,GAAAhB,EAAA,KAAA,KAAA,KAAA,SAAA,UAAA,KAAA,SAAA,MAAA,EACA,KAAA,cAAAW,CAAA,EAEA,CAKA,mBAAAM,EAAAC,EAAAC,EAAA,CAGA,GAAA,KAAA,SAAA,kBAAA,CAOA,IAAAC,EAAA,GAAAH,KAAAC,KACA,OAAA,iBAAA,KAAA,mBAAA9B,EAAA,IAAA,oBAAAgC,IAAA,EAGA,KAAA,UAAAA,CAAA,EAAA,KAAA,UAAAA,CAAA,EAAA,GAAA,EAEA,CAWA,GAAAC,EAAAC,EAAA,CACA,KAAA,OAAAD,CAAA,IACA,KAAA,OAAAA,CAAA,EAAA,CAAA,GAIA,KAAA,OAAAA,CAAA,EAAA,KAAAC,CAAA,CACA,CASA,KAAAD,KAAAE,EAAA,CACA,KAAA,OAAAF,CAAA,GAEA,KAAA,OAAAA,CAAA,EAAA,QAAAC,GAAAA,EAAA,GAAAC,CAAA,CAAA,CAEA,CAGA,wBAAAvB,EAAAN,EAAA,CACA,IAAA8B,EAAA,GACAC,EAAA,GACAC,EAAAhC,EAAA,WAAAA,EAAA,UAAA,OAEA,GAAAgC,EAAA,CACAD,EAAA,GAEA,QAAAE,KAAAD,EAAA,CACA,IAAAE,EAAAD,EAAA,UACA,GAAAC,GAAAA,EAAA,UAAA,GAAA,CACAJ,EAAA,GACA,QAQA,IAAAK,EAAA7B,EAAA,SAAA,MACA6B,GAAA7B,EAAA,SAAA,GAAA6B,GAAAL,KAGAvB,GAAAD,EAAA,CACA,GAAAwB,GAAA,CAAA,OAAA,SAAA,EACA,OAAAxB,EAAA,QAAA,OAAAyB,GAAAD,CAAA,CACA,CAAA,EACA,KAAA,eAAAxB,CAAA,EAEA,CAYA,wBAAAE,EAAA,CACA,OAAA,IAAA4B,EAAAC,GAAA,CACA,IAAAC,EAAA,EACAC,EAAA,EAEAC,EAAA,YAAA,IAAA,CACA,KAAA,gBAAA,GACA,cAAAA,CAAA,EACAH,EAAA,EAAA,IAEAC,GAAAC,EACA/B,GAAA8B,GAAA9B,IACA,cAAAgC,CAAA,EACAH,EAAA,EAAA,GAGA,EAAAE,CAAA,CACA,CAAA,CACA,CAGA,YAAA,CACA,OAAA,KAAA,WAAA,EAAA,UAAA,IAAA,KAAA,OAAA,MACA,CAgBA,cAAAvC,EAAAJ,EAAAC,EAAA,CACA,IAAAP,EAAA,KAAA,WAAA,EACAmD,EAAA,OAAA,KAAA,KAAA,aAAA,EACA,MAAA,CAAA7C,EAAA,cAAA6C,EAAA,OAAA,IACA7C,EAAA,aAAA6C,GAEAC,GAAApD,EAAAU,EAAAJ,EAAAC,CAAA,CACA,CAQA,cAAAG,EAAAJ,EAAA,CAAA,EAAAC,EAAA,CACA,OAAA,KAAA,cAAAG,EAAAJ,EAAAC,CAAA,EAAA,KACA8C,GACAA,EAAA,SAEApB,GAAA,CACA,GAAA,OAAA,iBAAA,KAAA,iBAAA,CAGA,IAAAqB,EAAArB,EACAqB,EAAA,WAAA,MACAlD,EAAA,IAAAkD,EAAA,OAAA,EAEAlD,EAAA,KAAAkD,CAAA,EAIA,CACA,CACA,CAeA,cAAA5C,EAAAJ,EAAAC,EAAA,CACA,IAAAP,EAAA,KAAA,WAAA,EACA,CAAA,WAAAuD,CAAA,EAAAvD,EAEA,GAAA,CAAA,KAAA,WAAA,EACA,OAAAwD,GAAA,IAAAC,EAAA,2CAAA,KAAA,CAAA,EAGA,IAAAC,EAAAC,GAAAjD,CAAA,EACAkD,EAAAC,GAAAnD,CAAA,EACAoD,EAAApD,EAAA,MAAA,QACAqD,EAAA,0BAAAD,MAKA,GAAAF,GAAA,OAAAL,GAAA,UAAA,KAAA,OAAA,EAAAA,EACA,YAAA,mBAAA,cAAA,QAAA7C,CAAA,EACA8C,GACA,IAAAC,EACA,oFAAAF,KACA,KACA,CACA,EAGA,IAAAS,EAAAF,IAAA,eAAA,SAAAA,EAEA,OAAA,KAAA,cAAApD,EAAAJ,EAAAC,CAAA,EACA,KAAA0D,GAAA,CACA,GAAAA,IAAA,KACA,WAAA,mBAAA,kBAAAD,EAAAtD,CAAA,EACA,IAAA+C,EAAA,2DAAA,KAAA,EAIA,GADAnD,EAAA,MAAAA,EAAA,KAAA,aAAA,GAEA,OAAA2D,EAGA,IAAAtD,EAAAuD,GAAAlE,EAAAiE,EAAA3D,CAAA,EACA,OAAA6D,GAAAxD,EAAAoD,CAAA,CACA,CAAA,EACA,KAAAK,GAAA,CACA,GAAAA,IAAA,KACA,WAAA,mBAAA,cAAAJ,EAAAtD,CAAA,EACA,IAAA+C,EAAA,GAAAM,4CAAA,KAAA,EAGA,IAAA/C,EAAAT,GAAAA,EAAA,WAAA,EACA,CAAAmD,GAAA1C,GACA,KAAA,wBAAAA,EAAAoD,CAAA,EAMA,IAAAC,EAAAD,EAAA,iBACA,GAAAV,GAAAW,GAAAD,EAAA,cAAA1D,EAAA,YAAA,CACA,IAAA4D,GAAA,SACAF,EAAA,iBAAA,CACA,GAAAC,EACA,OAAAC,EACA,EAGA,YAAA,UAAAF,EAAA9D,CAAA,EACA8D,CACA,CAAA,EACA,KAAA,KAAAnC,GAAA,CACA,MAAAA,aAAAwB,EACAxB,GAGA,KAAA,iBAAAA,EAAA,CACA,KAAA,CACA,WAAA,EACA,EACA,kBAAAA,CACA,CAAA,EACA,IAAAwB,EACA;UAAAxB,GACA,EACA,CAAA,CACA,CAKA,SAAAsC,EAAA,CACA,KAAA,iBACAA,EAAA,KACAC,IACA,KAAA,iBACAA,GAEAvC,IACA,KAAA,iBACAA,EAEA,CACA,CAKA,cAAAwC,EAAA,CACA,KAAA,YAAA,KAAA,KACA,KAAA,WAAA,KAAAA,CAAA,EAAA,KAAA,KAAAxC,GAAA,EACA,OAAA,iBAAA,KAAA,mBAAA7B,EAAA,MAAA,6BAAA6B,CAAA,CACA,CAAA,GAEA,OAAA,iBAAA,KAAA,mBAAA7B,EAAA,MAAA,oBAAA,CAEA,CAKA,gBAAA,CACA,IAAAsE,EAAA,KAAA,UACA,YAAA,UAAA,CAAA,EACA,OAAA,KAAAA,CAAA,EAAA,IAAAtC,GAAA,CACA,GAAA,CAAAH,EAAAC,CAAA,EAAAE,EAAA,MAAA,GAAA,EACA,MAAA,CACA,OAAAH,EACA,SAAAC,EACA,SAAAwC,EAAAtC,CAAA,CACA,CACA,CAAA,CACA,CAiBA,EAKA,SAAA+B,GACAQ,EACAZ,EACA,CACA,IAAAa,EAAA,GAAAb,2CACA,GAAAc,GAAAF,CAAA,EACA,OAAAA,EAAA,KACAjE,GAAA,CACA,GAAA,CAAAoE,GAAApE,CAAA,GAAAA,IAAA,KACA,MAAA,IAAA+C,EAAAmB,CAAA,EAEA,OAAAlE,CACA,EACAqE,GAAA,CACA,MAAA,IAAAtB,EAAA,GAAAM,mBAAAgB,GAAA,CACA,CACA,EACA,GAAA,CAAAD,GAAAH,CAAA,GAAAA,IAAA,KACA,MAAA,IAAAlB,EAAAmB,CAAA,EAEA,OAAAD,CACA,CAKA,SAAAT,GACAlE,EACAU,EACAJ,EACA,CACA,GAAA,CAAA,WAAA0E,EAAA,sBAAAC,CAAA,EAAAjF,EAEA,OAAA6D,GAAAnD,CAAA,GAAAsE,EACAA,EAAAtE,EAAAJ,CAAA,EAGAqD,GAAAjD,CAAA,GAAAuE,EACAA,EAAAvE,EAAAJ,CAAA,EAGAI,CACA,CAEA,SAAAmD,GAAAnD,EAAA,CACA,OAAAA,EAAA,OAAA,MACA,CAEA,SAAAiD,GAAAjD,EAAA,CACA,OAAAA,EAAA,OAAA,aACA,CCnsBA,SAAAwE,GACAC,EACAC,EACA,CACAA,EAAA,QAAA,KACA,OAAA,iBAAA,KAAA,iBACAC,EAAA,OAAA,EAIA,QAAA,KAAA,8EAAA,GAGA,IAAAC,EAAAC,EAAA,EACAC,EAAAF,EAAA,SAAA,EACAE,GACAA,EAAA,OAAAJ,EAAA,YAAA,EAGA,IAAAK,EAAA,IAAAN,EAAAC,CAAA,EACAE,EAAA,WAAAG,CAAA,CACA,CCVA,IAAAC,GAAA,GAQA,SAAAC,GACAC,EACAC,EACAC,EAAAC,GACAH,EAAA,YAAAF,EACA,EACA,CACA,IAAAM,EAAA,CAAA,EAEAC,EAAAC,GAAAJ,EAAA,MAAAI,CAAA,EAEA,SAAAC,EAAAC,EAAA,CACA,IAAAC,EAAA,CAAA,EAcA,GAXAC,GAAAF,EAAA,CAAAG,EAAAC,IAAA,CACA,IAAAC,EAAAC,GAAAF,CAAA,EACA,GAAAG,GAAAX,EAAAS,CAAA,EAAA,CACA,IAAAG,GAAAC,GAAAN,EAAAC,CAAA,EACAZ,EAAA,mBAAA,oBAAAa,EAAAG,EAAA,OAEAP,EAAA,KAAAE,CAAA,CAEA,CAAA,EAGAF,EAAA,SAAA,EACA,OAAAS,GAAA,EAIA,IAAAC,EAAAC,GAAAZ,EAAA,CAAA,EAAAC,CAAA,EAGAY,EAAAC,GAAA,CACAZ,GAAAS,EAAA,CAAAR,EAAAC,IAAA,CACA,IAAAI,GAAAC,GAAAN,EAAAC,CAAA,EACAZ,EAAA,mBAAAsB,EAAAR,GAAAF,CAAA,EAAAI,EAAA,CACA,CAAA,CACA,EAEAO,EAAA,IACAtB,EAAA,CAAA,KAAAuB,GAAAL,EAAAnB,EAAA,WAAA,CAAA,CAAA,EAAA,KACAyB,IAEAA,EAAA,aAAA,SAAAA,EAAA,WAAA,KAAAA,EAAA,YAAA,OACA,OAAA,iBAAA,KAAA,mBAAAC,EAAA,KAAA,qCAAAD,EAAA,2BAAA,EAGArB,EAAAuB,GAAAvB,EAAAqB,CAAA,EACAA,GAEAG,GAAA,CACA,MAAAP,EAAA,eAAA,EACAO,CACA,CACA,EAEA,OAAA1B,EAAA,IAAAqB,CAAA,EAAA,KACAM,GAAAA,EACAD,GAAA,CACA,GAAAA,aAAAE,EACA,OAAA,OAAA,iBAAA,KAAA,mBAAAJ,EAAA,MAAA,+CAAA,EACAL,EAAA,gBAAA,EACAH,GAAA,EAEA,MAAAU,CAEA,CACA,CACA,CAEA,MAAA,CACA,KAAArB,EACA,MAAAF,CACA,CACA,CAEA,SAAAY,GAAAN,EAAAC,EAAA,CACA,GAAA,EAAAA,IAAA,SAAAA,IAAA,eAIA,OAAA,MAAA,QAAAD,CAAA,EAAAA,EAAA,CAAA,EAAA,MACA,CCtHA,IAAAoB,GAAA,SCAA,IAAAC,GAAA,GAAAC,GAAAD,GAAA,sBAAAE,GAAA,mBAAAC,KCGA,IAAAC,GAGAC,GAAA,KAAA,CAAA,aAAA,CAAAA,GAAA,UAAA,OAAA,KAAA,IAAA,CAAA,CAIA,OAAA,cAAA,CAAA,KAAA,GAAA,kBAAA,CAKA,QAAA,CAAA,KAAA,KAAAA,GAAA,EAAA,CAKA,WAAA,CAEAD,GAAA,SAAA,UAAA,SAGA,SAAA,UAAA,SAAA,YAAAE,EAAA,CACA,IAAAC,EAAAC,GAAA,IAAA,GAAA,KACA,OAAAJ,GAAA,MAAAG,EAAAD,CAAA,CACA,CACA,CACA,EAAAD,GAAA,aAAA,ECzBA,IAAAI,GAAA,CAAA,oBAAA,+CAAA,EAWAC,GAAA,KAAA,CAIA,OAAA,cAAA,CAAA,KAAA,GAAA,gBAAA,CAKA,QAAA,CAAA,KAAA,KAAAA,GAAA,EAAA,CAEA,YAAAC,EAAA,CAAA,EAAA,CAAA,KAAA,SAAAA,EAAAD,GAAA,UAAA,OAAA,KAAA,IAAA,CAAA,CAKA,UAAAE,EAAAC,EAAA,CACA,IAAAC,EAAAC,GAAA,CACA,IAAAC,EAAAH,EAAA,EACA,GAAAG,EAAA,CACA,IAAAC,EAAAD,EAAA,eAAAN,EAAA,EACA,GAAAO,EAAA,CACA,IAAAC,EAAAF,EAAA,UAAA,EACAG,EAAAD,EAAAA,EAAA,WAAA,EAAA,CAAA,EACAE,EAAAC,GAAAJ,EAAA,SAAAE,CAAA,EACA,OAAAG,GAAAP,EAAAK,CAAA,EAAA,KAAAL,GAGA,OAAAA,CACA,EAEAD,EAAA,GAAA,KAAA,KACAF,EAAAE,CAAA,CACA,CACA,EAAAJ,GAAA,aAAA,EAGA,SAAAW,GACAE,EAAA,CAAA,EACAJ,EAAA,CAAA,EACA,CACA,MAAA,CACA,UAAA,CAAA,GAAAI,EAAA,WAAA,CAAA,EAAA,GAAAJ,EAAA,WAAA,CAAA,CAAA,EACA,SAAA,CAAA,GAAAI,EAAA,UAAA,CAAA,EAAA,GAAAJ,EAAA,UAAA,CAAA,CAAA,EACA,aAAA,CACA,GAAAI,EAAA,cAAA,CAAA,EACA,GAAAJ,EAAA,cAAA,CAAA,EACA,GAAAV,EACA,EACA,eAAAc,EAAA,iBAAA,OAAAA,EAAA,eAAA,EACA,CACA,CAGA,SAAAD,GAAAP,EAAAK,EAAA,CACA,OAAAA,EAAA,gBAAAI,GAAAT,CAAA,IACA,OAAA,iBAAA,KAAA,mBACAU,EAAA,KAAA;SAAAC,GAAAX,CAAA,GAAA,EACA,IAEAY,GAAAZ,EAAAK,EAAA,YAAA,IACA,OAAA,iBAAA,KAAA,mBACAK,EAAA,KACA;SAAAC,GAAAX,CAAA,GACA,EACA,IAEAa,GAAAb,EAAAK,EAAA,QAAA,IACA,OAAA,iBAAA,KAAA,mBACAK,EAAA,KACA;SAAAC,GACAX,CACA;OAAAc,GAAAd,CAAA,GACA,EACA,IAEAe,GAAAf,EAAAK,EAAA,SAAA,EASA,KARA,OAAA,iBAAA,KAAA,mBACAK,EAAA,KACA;SAAAC,GACAX,CACA;OAAAc,GAAAd,CAAA,GACA,EACA,GAGA,CAEA,SAAAY,GAAAZ,EAAAgB,EAAA,CACA,MAAA,CAAAA,GAAA,CAAAA,EAAA,OACA,GAGAC,GAAAjB,CAAA,EAAA,KAAAkB,GAAAC,GAAAD,EAAAF,CAAA,CAAA,CACA,CAEA,SAAAH,GAAAb,EAAAoB,EAAA,CAEA,GAAA,CAAAA,GAAA,CAAAA,EAAA,OACA,MAAA,GAEA,IAAAC,EAAAP,GAAAd,CAAA,EACA,OAAAqB,EAAAF,GAAAE,EAAAD,CAAA,EAAA,EACA,CAEA,SAAAL,GAAAf,EAAAsB,EAAA,CAEA,GAAA,CAAAA,GAAA,CAAAA,EAAA,OACA,MAAA,GAEA,IAAAD,EAAAP,GAAAd,CAAA,EACA,OAAAqB,EAAAF,GAAAE,EAAAC,CAAA,EAAA,EACA,CAEA,SAAAL,GAAAjB,EAAA,CACA,GAAAA,EAAA,QACA,MAAA,CAAAA,EAAA,OAAA,EAEA,GAAAA,EAAA,UACA,GAAA,CACA,GAAA,CAAA,KAAAuB,EAAA,GAAA,MAAAC,EAAA,EAAA,EAAAxB,EAAA,UAAA,QAAAA,EAAA,UAAA,OAAA,CAAA,GAAA,CAAA,EACA,MAAA,CAAA,GAAAwB,IAAA,GAAAD,MAAAC,GAAA,CACA,MAAA,CACA,OAAA,OAAA,iBAAA,KAAA,mBAAAd,EAAA,MAAA,oCAAAC,GAAAX,CAAA,GAAA,EACA,CAAA,CACA,CAEA,MAAA,CAAA,CACA,CAEA,SAAAS,GAAAT,EAAA,CACA,GAAA,CAGA,OAAAA,EAAA,UAAA,OAAA,CAAA,EAAA,OAAA,aACA,MAAA,CAEA,CACA,MAAA,EACA,CAEA,SAAAyB,GAAAC,EAAA,CAAA,EAAA,CACA,QAAAC,EAAAD,EAAA,OAAA,EAAAC,GAAA,EAAAA,IAAA,CACA,IAAAC,EAAAF,EAAAC,CAAA,EAEA,GAAAC,GAAAA,EAAA,WAAA,eAAAA,EAAA,WAAA,gBACA,OAAAA,EAAA,UAAA,KAIA,OAAA,IACA,CAEA,SAAAd,GAAAd,EAAA,CACA,GAAA,CACA,IAAA0B,EACA,GAAA,CAEAA,EAAA1B,EAAA,UAAA,OAAA,CAAA,EAAA,WAAA,MACA,MAAA,CAEA,CACA,OAAA0B,EAAAD,GAAAC,CAAA,EAAA,IACA,MAAA,CACA,OAAA,OAAA,iBAAA,KAAA,mBAAAhB,EAAA,MAAA,gCAAAC,GAAAX,CAAA,GAAA,EACA,IACA,CACA,CC5KA,IAAA6B,EAAAC,EAEAC,GAAA,EAKA,SAAAC,IAAA,CACA,OAAAD,GAAA,CACA,CAKA,SAAAE,IAAA,CAEAF,KACA,WAAA,IAAA,CACAA,IACA,CAAA,CACA,CAWA,SAAAG,GACAC,EACAC,EAEA,CAAA,EACAC,EAEA,CAQA,GAAA,OAAAF,GAAA,WACA,OAAAA,EAGA,GAAA,CAGA,IAAAG,EAAAH,EAAA,mBACA,GAAAG,EACA,OAAAA,EAIA,GAAAC,GAAAJ,CAAA,EACA,OAAAA,CAEA,MAAA,CAIA,OAAAA,CACA,CAIA,IAAAK,EAAA,UAAA,CACA,IAAAC,EAAA,MAAA,UAAA,MAAA,KAAA,SAAA,EAEA,GAAA,CACAJ,GAAA,OAAAA,GAAA,YACAA,EAAA,MAAA,KAAA,SAAA,EAIA,IAAAK,EAAAD,EAAA,IAAAE,GAAAT,GAAAS,EAAAP,CAAA,CAAA,EAMA,OAAAD,EAAA,MAAA,KAAAO,CAAA,CACA,OAAAE,EAAA,CACA,MAAAX,GAAA,EAEAY,GAAAC,GAAA,CACAA,EAAA,kBAAAC,IACAX,EAAA,YACAY,GAAAD,EAAA,OAAA,MAAA,EACAE,GAAAF,EAAAX,EAAA,SAAA,GAGAW,EAAA,MAAA,CACA,GAAAA,EAAA,MACA,UAAAN,CACA,EAEAM,EACA,EAEAG,GAAAN,CAAA,CACA,CAAA,EAEAA,CACA,CACA,EAKA,GAAA,CACA,QAAAO,KAAAhB,EACA,OAAA,UAAA,eAAA,KAAAA,EAAAgB,CAAA,IACAX,EAAAW,CAAA,EAAAhB,EAAAgB,CAAA,EAGA,MAAA,CAAA,CAIAC,GAAAZ,EAAAL,CAAA,EAEAkB,GAAAlB,EAAA,qBAAAK,CAAA,EAGA,GAAA,CACA,OAAA,yBAAAA,EAAA,MAAA,EACA,cACA,OAAA,eAAAA,EAAA,OAAA,CACA,KAAA,CACA,OAAAL,EAAA,IACA,CACA,CAAA,CAGA,MAAA,CAAA,CAEA,OAAAK,CACA,CCvIA,SAAAc,GAAAC,EAAAC,EAAA,CAEA,IAAAC,EAAAC,GAAAH,EAAAC,CAAA,EAEAG,EAAA,CACA,KAAAH,GAAAA,EAAA,KACA,MAAAI,GAAAJ,CAAA,CACA,EAEA,OAAAC,EAAA,SACAE,EAAA,WAAA,CAAA,OAAAF,CAAA,GAGAE,EAAA,OAAA,QAAAA,EAAA,QAAA,KACAA,EAAA,MAAA,8BAGAA,CACA,CAKA,SAAAE,GACAN,EACAI,EACAG,EACAC,EACA,CAEA,IAAAC,EADAC,EAAA,EACA,UAAA,EACAC,EAAAF,GAAAA,EAAA,WAAA,EAAA,eAEAG,EAAA,CACA,UAAA,CACA,OAAA,CACA,CACA,KAAAC,GAAAT,CAAA,EAAAA,EAAA,YAAA,KAAAI,EAAA,qBAAA,QACA,MAAA,aACAA,EAAA,oBAAA,mCACAM,GAAAV,CAAA,GACA,CACA,CACA,EACA,MAAA,CACA,eAAAW,GAAAX,EAAAO,CAAA,CACA,CACA,EAEA,GAAAJ,EAAA,CACA,IAAAL,EAAAC,GAAAH,EAAAO,CAAA,EACAL,EAAA,SAEAU,EAAA,UAAA,OAAA,CAAA,EAAA,WAAA,CAAA,OAAAV,CAAA,GAIA,OAAAU,CACA,CAKA,SAAAI,GAAAhB,EAAAC,EAAA,CACA,MAAA,CACA,UAAA,CACA,OAAA,CAAAF,GAAAC,EAAAC,CAAA,CAAA,CACA,CACA,CACA,CAGA,SAAAE,GACAH,EACAC,EACA,CAIA,IAAAgB,EAAAhB,EAAA,YAAAA,EAAA,OAAA,GAEAiB,EAAAC,GAAAlB,CAAA,EAEA,GAAA,CACA,OAAAD,EAAAiB,EAAAC,CAAA,CACA,MAAA,CAEA,CAEA,MAAA,CAAA,CACA,CAGA,IAAAE,GAAA,8BAEA,SAAAD,GAAAlB,EAAA,CACA,GAAAA,EAAA,CACA,GAAA,OAAAA,EAAA,aAAA,SACA,OAAAA,EAAA,YAGA,GAAAmB,GAAA,KAAAnB,EAAA,OAAA,EACA,MAAA,GAIA,MAAA,EACA,CAOA,SAAAI,GAAAJ,EAAA,CACA,IAAAoB,EAAApB,GAAAA,EAAA,QACA,OAAAoB,EAGAA,EAAA,OAAA,OAAAA,EAAA,MAAA,SAAA,SACAA,EAAA,MAAA,QAEAA,EALA,kBAMA,CAMA,SAAAC,GACAtB,EACAI,EACAmB,EACAC,EACA,CACA,IAAAjB,EAAAgB,GAAAA,EAAA,oBAAA,OACAX,EAAAa,GAAAzB,EAAAI,EAAAG,EAAAiB,CAAA,EACA,OAAAE,GAAAd,CAAA,EACAA,EAAA,MAAA,QACAW,GAAAA,EAAA,WACAX,EAAA,SAAAW,EAAA,UAEAI,GAAAf,CAAA,CACA,CAMA,SAAAgB,GACA5B,EACAqB,EAEAQ,EAAA,OACAN,EACAC,EACA,CACA,IAAAjB,EAAAgB,GAAAA,EAAA,oBAAA,OACAX,EAAAkB,GAAA9B,EAAAqB,EAAAd,EAAAiB,CAAA,EACA,OAAAZ,EAAA,MAAAiB,EACAN,GAAAA,EAAA,WACAX,EAAA,SAAAW,EAAA,UAEAI,GAAAf,CAAA,CACA,CAKA,SAAAa,GACAzB,EACAI,EACAG,EACAiB,EACAhB,EACA,CACA,IAAAI,EAEA,GAAAmB,GAAA3B,CAAA,GAAAA,EAAA,MAGA,OAAAY,GAAAhB,EADAI,EACA,KAAA,EAUA,GAAA4B,GAAA5B,CAAA,GAAA6B,GAAA7B,CAAA,EAAA,CACA,IAAA8B,EAAA9B,EAEA,GAAA,UAAAA,EACAQ,EAAAI,GAAAhB,EAAAI,CAAA,MACA,CACA,IAAA+B,EAAAD,EAAA,OAAAF,GAAAE,CAAA,EAAA,WAAA,gBACAb,EAAAa,EAAA,QAAA,GAAAC,MAAAD,EAAA,UAAAC,EACAvB,EAAAkB,GAAA9B,EAAAqB,EAAAd,EAAAiB,CAAA,EACAY,GAAAxB,EAAAS,CAAA,EAEA,MAAA,SAAAa,IACAtB,EAAA,KAAA,CAAA,GAAAA,EAAA,KAAA,oBAAA,GAAAsB,EAAA,MAAA,GAGAtB,EAEA,OAAAyB,GAAAjC,CAAA,EAEAY,GAAAhB,EAAAI,CAAA,EAEAkC,GAAAlC,CAAA,GAAAS,GAAAT,CAAA,GAKAQ,EAAAN,GAAAN,EADAI,EACAG,EAAAC,CAAA,EACAkB,GAAAd,EAAA,CACA,UAAA,EACA,CAAA,EACAA,IAYAA,EAAAkB,GAAA9B,EAAAI,EAAAG,EAAAiB,CAAA,EACAY,GAAAxB,EAAA,GAAAR,IAAA,MAAA,EACAsB,GAAAd,EAAA,CACA,UAAA,EACA,CAAA,EAEAA,EACA,CAKA,SAAAkB,GACA9B,EACAuC,EACAhC,EACAiB,EACA,CACA,IAAAZ,EAAA,CACA,QAAA2B,CACA,EAEA,GAAAf,GAAAjB,EAAA,CACA,IAAAL,EAAAC,GAAAH,EAAAO,CAAA,EACAL,EAAA,SACAU,EAAA,UAAA,CACA,OAAA,CAAA,CAAA,MAAA2B,EAAA,WAAA,CAAA,OAAArC,CAAA,CAAA,CAAA,CACA,GAIA,OAAAU,CACA,CC1PA,IAAA4B,GAAA,KAEAC,GAAA,cAMAC,GAAA,KAAA,CAIA,OAAA,cAAA,CAAA,KAAA,GAAAD,EAAA,CAKA,QAAA,CAAA,KAAA,KAAAC,GAAA,EAAA,CAWA,YAAAC,EAAA,CAAAD,GAAA,UAAA,OAAA,KAAA,IAAA,EACA,KAAA,QAAA,CACA,QAAA,GACA,IAAA,GACA,MAAA,GACA,QAAA,GACA,OAAA,GACA,IAAA,GACA,GAAAC,CACA,CACA,CAUA,WAAA,CACA,KAAA,QAAA,SACAC,EAAA,UAAAC,EAAA,EAEA,KAAA,QAAA,KACAD,EAAA,MAAAE,GAAA,KAAA,QAAA,GAAA,CAAA,EAEA,KAAA,QAAA,KACAF,EAAA,MAAAG,EAAA,EAEA,KAAA,QAAA,OACAH,EAAA,QAAAI,EAAA,EAEA,KAAA,QAAA,SACAJ,EAAA,UAAAK,EAAA,CAEA,CAKA,oBAAAC,EAAA,CACA,KAAA,QAAA,QACAC,EAAA,EAAA,cACA,CACA,SAAA,UAAAD,EAAA,OAAA,cAAA,cAAA,UACA,SAAAA,EAAA,SACA,MAAAA,EAAA,MACA,QAAAE,GAAAF,CAAA,CACA,EACA,CACA,MAAAA,CACA,CACA,CAEA,CACA,EAAAR,GAAA,aAAA,EAMA,SAAAI,GAAAO,EAAA,CACA,SAAAC,EAAAC,EAAA,CACA,IAAAC,EACAC,EAAA,OAAAJ,GAAA,SAAAA,EAAA,mBAAA,OAEAK,EACA,OAAAL,GAAA,UAAA,OAAAA,EAAA,iBAAA,SAAAA,EAAA,gBAAA,OACAK,GAAAA,EAAAlB,MACA,OAAA,iBAAA,KAAA,mBACAmB,EAAA,KACA,yCAAAnB,sBAAAkB,qCAAAlB,aACA,EACAkB,EAAAlB,IAGA,OAAAiB,GAAA,WACAA,EAAA,CAAAA,CAAA,GAIA,GAAA,CACA,IAAAP,EAAAK,EAAA,MACAC,EAAAI,GAAAV,CAAA,EACAW,GAAAX,EAAA,OAAA,CAAA,SAAAO,EAAA,gBAAAC,CAAA,CAAA,EACAG,GAAAX,EAAA,CAAA,SAAAO,EAAA,gBAAAC,CAAA,CAAA,CACA,MAAA,CACAF,EAAA,WACA,CAEAA,EAAA,SAAA,GAIAL,EAAA,EAAA,cACA,CACA,SAAA,MAAAI,EAAA,OACA,QAAAC,CACA,EACA,CACA,MAAAD,EAAA,MACA,KAAAA,EAAA,KACA,OAAAA,EAAA,MACA,CACA,CACA,CAEA,OAAAD,CACA,CAKA,SAAAT,GAAAU,EAAA,CAOA,QAAAO,EAAA,EAAAA,EAAAP,EAAA,KAAA,OAAAO,IACA,GAAAP,EAAA,KAAAO,CAAA,IAAA,WAAA,CACAP,EAAA,KAAAO,EAAA,CAAA,EAAA,UACA,MAGA,IAAAC,EAAA,CACA,SAAA,UACA,KAAA,CACA,UAAAR,EAAA,KACA,OAAA,SACA,EACA,MAAAS,GAAAT,EAAA,KAAA,EACA,QAAAU,GAAAV,EAAA,KAAA,GAAA,CACA,EAEA,GAAAA,EAAA,QAAA,SACA,GAAAA,EAAA,KAAA,CAAA,IAAA,GACAQ,EAAA,QAAA,qBAAAE,GAAAV,EAAA,KAAA,MAAA,CAAA,EAAA,GAAA,GAAA,mBACAQ,EAAA,KAAA,UAAAR,EAAA,KAAA,MAAA,CAAA,MAGA,QAIAJ,EAAA,EAAA,cAAAY,EAAA,CACA,MAAAR,EAAA,KACA,MAAAA,EAAA,KACA,CAAA,CACA,CAKA,SAAAR,GAAAQ,EAAA,CACA,GAAAA,EAAA,aAAA,CAEA,GAAAA,EAAA,IAAA,uBACA,OAGA,GAAA,CAAA,OAAAW,EAAA,IAAAC,EAAA,YAAAC,EAAA,KAAAC,CAAA,EAAAd,EAAA,IAAA,gBAAA,CAAA,EAEAJ,EAAA,EAAA,cACA,CACA,SAAA,MACA,KAAA,CACA,OAAAe,EACA,IAAAC,EACA,YAAAC,CACA,EACA,KAAA,MACA,EACA,CACA,IAAAb,EAAA,IACA,MAAAc,CACA,CACA,EAEA,OAEA,CAKA,SAAArB,GAAAO,EAAA,CAEAA,EAAA,eAIAA,EAAA,UAAA,IAAA,MAAA,YAAA,GAAAA,EAAA,UAAA,SAAA,SAKAA,EAAA,MACAJ,EAAA,EAAA,cACA,CACA,SAAA,QACA,KAAAI,EAAA,UACA,MAAA,QACA,KAAA,MACA,EACA,CACA,KAAAA,EAAA,MACA,MAAAA,EAAA,IACA,CACA,EAEAJ,EAAA,EAAA,cACA,CACA,SAAA,QACA,KAAA,CACA,GAAAI,EAAA,UACA,YAAAA,EAAA,UAAAA,EAAA,SAAA,MACA,EACA,KAAA,MACA,EACA,CACA,MAAAA,EAAA,KACA,SAAAA,EAAA,QACA,CACA,GAEA,CAKA,SAAAN,GAAAM,EAAA,CACA,IAAAe,EAAAf,EAAA,KACAgB,EAAAhB,EAAA,GACAiB,EAAAC,GAAAC,EAAA,SAAA,IAAA,EACAC,EAAAF,GAAAH,CAAA,EACAM,EAAAH,GAAAF,CAAA,EAGAI,EAAA,OACAA,EAAAH,GAKAA,EAAA,WAAAI,EAAA,UAAAJ,EAAA,OAAAI,EAAA,OACAL,EAAAK,EAAA,UAEAJ,EAAA,WAAAG,EAAA,UAAAH,EAAA,OAAAG,EAAA,OACAL,EAAAK,EAAA,UAGAxB,EAAA,EAAA,cAAA,CACA,SAAA,aACA,KAAA,CACA,KAAAmB,EACA,GAAAC,CACA,CACA,CAAA,CACA,CAEA,SAAAX,GAAAV,EAAA,CACA,OAAAA,GAAA,CAAA,CAAAA,EAAA,MACA,CClSA,IAAA2B,GAAA,cAAAC,EAAA,CAMA,YAAAC,EAAA,CACA,IAAAC,EAAAC,EAAA,mBAAAC,GAAA,EAEAH,EAAA,UAAAA,EAAA,WAAA,CAAA,EACAA,EAAA,UAAA,IAAAA,EAAA,UAAA,KAAA,CACA,KAAA,4BACA,SAAA,CACA,CACA,KAAA,GAAAC,oBACA,QAAAG,EACA,CACA,EACA,QAAAA,EACA,EAEA,MAAAJ,CAAA,EAEAA,EAAA,mBAAAE,EAAA,UACAA,EAAA,SAAA,iBAAA,mBAAA,IAAA,CACAA,EAAA,SAAA,kBAAA,UACA,KAAA,eAAA,CAEA,CAAA,CAEA,CAKA,mBAAAG,EAAAC,EAAA,CACA,OAAAC,GAAA,KAAA,SAAA,YAAAF,EAAAC,EAAA,KAAA,SAAA,gBAAA,CACA,CAKA,iBACAE,EAEAC,EAAA,OACAH,EACA,CACA,OAAAI,GAAA,KAAA,SAAA,YAAAF,EAAAC,EAAAH,EAAA,KAAA,SAAA,gBAAA,CACA,CAKA,UAAAK,EAAAL,EAAA,CAOA,IAAAM,EAAA,KAAA,mBAAAC,EAAA,EAGAD,GAAAA,EAAA,qBACAA,EAAA,oBAAAD,CAAA,EAGA,MAAA,UAAAA,EAAAL,CAAA,CACA,CAKA,cAAAK,EAAAL,EAAAQ,EAAA,CACA,OAAAH,EAAA,SAAAA,EAAA,UAAA,aACA,MAAA,cAAAA,EAAAL,EAAAQ,CAAA,CACA,CAKA,gBAAA,CACA,IAAAC,EAAA,KAAA,eAAA,EAEA,GAAAA,EAAA,SAAA,EAAA,EACA,OAAA,iBAAA,KAAA,mBAAAC,EAAA,IAAA,qBAAA,EACA,OAGA,GAAA,CAAA,KAAA,KAAA,EACA,OAAA,iBAAA,KAAA,mBAAAA,EAAA,IAAA,yCAAA,EACA,QAGA,OAAA,iBAAA,KAAA,mBAAAA,EAAA,IAAA,oBAAAD,CAAA,EAEA,IAAAE,EAAAC,GAAA,KAAA,KAAA,KAAA,QAAA,EACAC,EAAAC,GAAAL,EAAA,KAAA,SAAA,QAAAM,GAAA,KAAA,IAAA,CAAA,EAEA,GAAA,CACA,OAAA,UAAA,SAAA,KAAAnB,GAAAA,EAAA,SAAA,IAAA,sBACA,OAAAA,EAAA,UAAA,YAAA,YAEA,CAAA,KAAA,SAAA,iBAEAA,EAAA,UAAA,WAAA,KAAAA,EAAA,SAAA,EACAe,EAAAK,GAAAH,CAAA,CAAA,EAIA,KAAA,cAAAA,CAAA,CAEA,OAAAI,EAAA,EACA,OAAA,iBAAA,KAAA,mBAAAP,EAAA,MAAAO,CAAA,CACA,CACA,CACA,ECtJA,IAAAC,GA0CA,SAAAC,IAAA,CACA,GAAAD,GACA,OAAAA,GAMA,GAAAE,GAAAC,EAAA,KAAA,EACA,OAAAH,GAAAG,EAAA,MAAA,KAAAA,CAAA,EAGA,IAAAC,EAAAD,EAAA,SACAE,EAAAF,EAAA,MAEA,GAAAC,GAAA,OAAAA,EAAA,eAAA,WACA,GAAA,CACA,IAAAE,EAAAF,EAAA,cAAA,QAAA,EACAE,EAAA,OAAA,GACAF,EAAA,KAAA,YAAAE,CAAA,EACA,IAAAC,EAAAD,EAAA,cACAC,GAAAA,EAAA,QACAF,EAAAE,EAAA,OAEAH,EAAA,KAAA,YAAAE,CAAA,CACA,OAAAE,EAAA,EACA,OAAA,iBAAA,KAAA,mBACAC,EAAA,KAAA,kFAAAD,CAAA,CACA,CAGA,OAAAR,GAAAK,EAAA,KAAAF,CAAA,CAEA,CAGA,SAAAO,IAAA,CACAV,GAAA,MACA,CCzEA,SAAAW,GACAC,EACAC,EAAAC,GAAA,EACA,CACA,SAAAC,EAAAC,EAAA,CACA,IAAAC,EAAA,CACA,KAAAD,EAAA,KACA,OAAA,OACA,eAAA,SACA,QAAAJ,EAAA,QAUA,UAAAI,EAAA,KAAA,QAAA,MACA,GAAAJ,EAAA,YACA,EAEA,GAAA,CACA,OAAAC,EAAAD,EAAA,IAAAK,CAAA,EAAA,KAAAC,IAAA,CACA,WAAAA,EAAA,OACA,QAAA,CACA,uBAAAA,EAAA,QAAA,IAAA,sBAAA,EACA,cAAAA,EAAA,QAAA,IAAA,aAAA,CACA,CACA,EAAA,CACA,OAAAC,EAAA,CACA,OAAAC,GAAA,EACAC,GAAAF,CAAA,CACA,CACA,CAEA,OAAAG,GAAAV,EAAAG,CAAA,CACA,CCnCA,IAAAQ,GAAA,EAKA,SAAAC,GAAAC,EAAA,CACA,SAAAC,EAAAC,EAAA,CACA,OAAA,IAAAC,EAAA,CAAAC,EAAAC,IAAA,CACA,IAAAC,EAAA,IAAA,eAEAA,EAAA,QAAAD,EAEAC,EAAA,mBAAA,IAAA,CACAA,EAAA,aAAAR,IACAM,EAAA,CACA,WAAAE,EAAA,OACA,QAAA,CACA,uBAAAA,EAAA,kBAAA,sBAAA,EACA,cAAAA,EAAA,kBAAA,aAAA,CACA,CACA,CAAA,CAEA,EAEAA,EAAA,KAAA,OAAAN,EAAA,GAAA,EAEA,QAAAO,KAAAP,EAAA,QACA,OAAA,UAAA,eAAA,KAAAA,EAAA,QAAAO,CAAA,GACAD,EAAA,iBAAAC,EAAAP,EAAA,QAAAO,CAAA,CAAA,EAIAD,EAAA,KAAAJ,EAAA,IAAA,CACA,CAAA,CACA,CAEA,OAAAM,GAAAR,EAAAC,CAAA,CACA,CC/CA,IAAAQ,GAAA,IAIA,IAAAC,GAAA,GACAC,GAAA,GACAC,GAAA,GAEA,SAAAC,GAAAC,EAAAC,EAAAC,EAAAC,EAAA,CACA,IAAAC,EAAA,CACA,SAAAJ,EACA,SAAAA,EACA,SAAAC,EACA,OAAA,EACA,EAEA,OAAAC,IAAA,SACAE,EAAA,OAAAF,GAGAC,IAAA,SACAC,EAAA,MAAAD,GAGAC,CACA,CAGA,IAAAC,GACA,iMACAC,GAAA,gCAEAC,GAAAC,GAAA,CACA,IAAAC,EAAAJ,GAAA,KAAAG,CAAA,EAEA,GAAAC,EAAA,CAGA,GAFAA,EAAA,CAAA,GAAAA,EAAA,CAAA,EAAA,QAAA,MAAA,IAAA,EAEA,CACA,IAAAC,EAAAJ,GAAA,KAAAG,EAAA,CAAA,CAAA,EAEAC,IAEAD,EAAA,CAAA,EAAAC,EAAA,CAAA,EACAD,EAAA,CAAA,EAAAC,EAAA,CAAA,EACAD,EAAA,CAAA,EAAAC,EAAA,CAAA,GAMA,GAAA,CAAAT,EAAAD,CAAA,EAAAW,GAAAF,EAAA,CAAA,GAAAG,GAAAH,EAAA,CAAA,CAAA,EAEA,OAAAV,GAAAC,EAAAC,EAAAQ,EAAA,CAAA,EAAA,CAAAA,EAAA,CAAA,EAAA,OAAAA,EAAA,CAAA,EAAA,CAAAA,EAAA,CAAA,EAAA,MAAA,EAIA,EAEAI,GAAA,CAAAjB,GAAAW,EAAA,EAKAO,GACA,sOACAC,GAAA,gDAEAC,GAAAR,GAAA,CACA,IAAAC,EAAAK,GAAA,KAAAN,CAAA,EAEA,GAAAC,EAAA,CAEA,GADAA,EAAA,CAAA,GAAAA,EAAA,CAAA,EAAA,QAAA,SAAA,EAAA,GACA,CACA,IAAAC,EAAAK,GAAA,KAAAN,EAAA,CAAA,CAAA,EAEAC,IAEAD,EAAA,CAAA,EAAAA,EAAA,CAAA,GAAA,OACAA,EAAA,CAAA,EAAAC,EAAA,CAAA,EACAD,EAAA,CAAA,EAAAC,EAAA,CAAA,EACAD,EAAA,CAAA,EAAA,IAIA,IAAAT,EAAAS,EAAA,CAAA,EACAR,EAAAQ,EAAA,CAAA,GAAAG,GACA,OAAAX,EAAAD,CAAA,EAAAW,GAAAV,EAAAD,CAAA,EAEAD,GAAAC,EAAAC,EAAAQ,EAAA,CAAA,EAAA,CAAAA,EAAA,CAAA,EAAA,OAAAA,EAAA,CAAA,EAAA,CAAAA,EAAA,CAAA,EAAA,MAAA,EAIA,EAEAQ,GAAA,CAAAnB,GAAAkB,EAAA,EAEAE,GACA,gHAEAC,GAAAX,GAAA,CACA,IAAAC,EAAAS,GAAA,KAAAV,CAAA,EAEA,OAAAC,EACAV,GAAAU,EAAA,CAAA,EAAAA,EAAA,CAAA,GAAAG,GAAA,CAAAH,EAAA,CAAA,EAAAA,EAAA,CAAA,EAAA,CAAAA,EAAA,CAAA,EAAA,MAAA,EACA,MACA,EAEAW,GAAA,CAAAvB,GAAAsB,EAAA,EAqBA,IAAAE,GAAA,CAAAC,GAAAC,GAAAC,EAAA,EAEAC,GAAAC,GAAA,GAAAL,EAAA,EAsBAM,GAAA,CAAAC,EAAAC,IAAA,CACA,IAAAC,EAAAF,EAAA,QAAA,kBAAA,IAAA,GACAG,EAAAH,EAAA,QAAA,sBAAA,IAAA,GAEA,OAAAE,GAAAC,EACA,CACAH,EAAA,QAAA,GAAA,IAAA,GAAAA,EAAA,MAAA,GAAA,EAAA,CAAA,EAAAI,GACAF,EAAA,oBAAAD,IAAA,wBAAAA,GACA,EACA,CAAAD,EAAAC,CAAA,CACA,EChJA,IAAAI,GAAA,KAAA,CAIA,OAAA,cAAA,CAAA,KAAA,GAAA,gBAAA,CAKA,QAAA,CAAA,KAAA,KAAAA,GAAA,EAAA,CASA,SAAA,CAAA,KAAA,aAAA,CACA,QAAAC,GACA,qBAAAC,EACA,CAAA,CAGA,YAAAC,EAAA,CAAAH,GAAA,UAAA,OAAA,KAAA,IAAA,EAAAA,GAAA,UAAA,QAAA,KAAA,IAAA,EACA,KAAA,SAAA,CACA,QAAA,GACA,qBAAA,GACA,GAAAG,CACA,CACA,CAIA,WAAA,CACA,MAAA,gBAAA,GACA,IAAAA,EAAA,KAAA,SAKA,QAAAC,KAAAD,EAAA,CACA,IAAAE,EAAA,KAAA,aAAAD,CAAA,EACAC,GAAAF,EAAAC,CAAA,IACAE,GAAAF,CAAA,EACAC,EAAA,EACA,KAAA,aAAAD,CAAA,EAAA,QAGA,CACA,EAAAJ,GAAA,aAAA,EAGA,SAAAC,IAAA,CACAM,EACA,QAEAC,GAAA,CACA,GAAA,CAAAC,EAAAC,EAAAC,CAAA,EAAAC,GAAA,EACA,GAAA,CAAAH,EAAA,eAAAT,EAAA,EACA,OAEA,GAAA,CAAA,IAAAa,EAAA,IAAAC,EAAA,KAAAC,EAAA,OAAAC,EAAA,MAAAC,CAAA,EAAAT,EACA,GAAAU,GAAA,GAAAD,GAAAA,EAAA,uBACA,OAGA,IAAAE,EACAF,IAAA,QAAAG,GAAAP,CAAA,EACAQ,GAAAR,EAAAC,EAAAC,EAAAC,CAAA,EACAM,GACAC,GAAAb,EAAAO,GAAAJ,EAAA,OAAAF,EAAA,EAAA,EACAG,EACAC,EACAC,CACA,EAEAG,EAAA,MAAA,QAEAK,GAAAf,EAAAQ,EAAAE,EAAA,SAAA,CACA,CACA,CACA,CAGA,SAAAjB,IAAA,CACAK,EACA,qBAEAkB,GAAA,CACA,GAAA,CAAAhB,EAAAC,EAAAC,CAAA,EAAAC,GAAA,EACA,GAAA,CAAAH,EAAA,eAAAT,EAAA,EACA,OAEA,IAAAiB,EAAAQ,EAGA,GAAA,CAGA,WAAAA,EACAR,EAAAQ,EAAA,OAOA,WAAAA,GAAA,WAAAA,EAAA,SACAR,EAAAQ,EAAA,OAAA,OAEA,MAAA,CAEA,CAEA,GAAAP,GAAA,GAAAD,GAAAA,EAAA,uBACA,MAAA,GAGA,IAAAE,EAAAO,GAAAT,CAAA,EACAU,GAAAV,CAAA,EACAM,GAAAb,EAAAO,EAAA,OAAAN,EAAA,EAAA,EAEAQ,EAAA,MAAA,QAEAK,GAAAf,EAAAQ,EAAAE,EAAA,sBAAA,CAEA,CACA,CACA,CAQA,SAAAQ,GAAAC,EAAA,CACA,MAAA,CACA,UAAA,CACA,OAAA,CACA,CACA,KAAA,qBAEA,MAAA,oDAAA,OAAAA,CAAA,GACA,CACA,CACA,CACA,CACA,CAMA,SAAAP,GAAAR,EAAAC,EAAAC,EAAAC,EAAA,CACA,IAAAa,EACA,2GAGAC,EAAAC,GAAAlB,CAAA,EAAAA,EAAA,QAAAA,EACAmB,EAAA,QAEAC,EAAAH,EAAA,MAAAD,CAAA,EACA,OAAAI,IACAD,EAAAC,EAAA,CAAA,EACAH,EAAAG,EAAA,CAAA,GAcAX,GAXA,CACA,UAAA,CACA,OAAA,CACA,CACA,KAAAU,EACA,MAAAF,CACA,CACA,CACA,CACA,EAEAhB,EAAAC,EAAAC,CAAA,CACA,CAIA,SAAAM,GAAAH,EAAAL,EAAAC,EAAAC,EAAA,CAEA,IAAAS,EAAAN,EAAA,UAAAA,EAAA,WAAA,CAAA,EAEAe,EAAAT,EAAA,OAAAA,EAAA,QAAA,CAAA,EAEAU,EAAAD,EAAA,CAAA,EAAAA,EAAA,CAAA,GAAA,CAAA,EAEAE,EAAAD,EAAA,WAAAA,EAAA,YAAA,CAAA,EAEAE,EAAAD,EAAA,OAAAA,EAAA,QAAA,CAAA,EAEAE,EAAA,MAAA,SAAAtB,EAAA,EAAA,CAAA,EAAA,OAAAA,EACAuB,EAAA,MAAA,SAAAxB,EAAA,EAAA,CAAA,EAAA,OAAAA,EACAyB,EAAApB,GAAAN,CAAA,GAAAA,EAAA,OAAA,EAAAA,EAAA2B,GAAA,EAGA,OAAAJ,EAAA,SAAA,GACAA,EAAA,KAAA,CACA,MAAAC,EACA,SAAAE,EACA,SAAA,IACA,OAAA,GACA,OAAAD,CACA,CAAA,EAGApB,CACA,CAEA,SAAAb,GAAAoC,EAAA,EACA,OAAA,iBAAA,KAAA,mBAAAC,EAAA,IAAA,4BAAAD,GAAA,CACA,CAEA,SAAAlB,GAAAf,EAAAQ,EAAAE,EAAAuB,EAAA,CACAE,GAAAzB,EAAA,CACA,QAAA,GACA,KAAAuB,CACA,CAAA,EACAjC,EAAA,aAAAU,EAAA,CACA,kBAAAF,CACA,CAAA,CACA,CAEA,SAAAL,IAAA,CACA,IAAAH,EAAAoC,EAAA,EACAC,EAAArC,EAAA,UAAA,EACAN,EAAA2C,GAAAA,EAAA,WAAA,GAAA,CACA,YAAA,IAAA,CAAA,EACA,iBAAA,EACA,EACA,MAAA,CAAArC,EAAAN,EAAA,YAAAA,EAAA,gBAAA,CACA,CC/PA,IAAA4C,GAAA,CACA,cACA,SACA,OACA,mBACA,iBACA,oBACA,kBACA,cACA,aACA,qBACA,cACA,aACA,iBACA,eACA,kBACA,cACA,cACA,eACA,qBACA,SACA,YACA,eACA,gBACA,YACA,kBACA,SACA,iBACA,4BACA,sBACA,EAcAC,GAAA,KAAA,CAIA,OAAA,cAAA,CAAA,KAAA,GAAA,UAAA,CAKA,QAAA,CAAA,KAAA,KAAAA,GAAA,EAAA,CAQA,YAAAC,EAAA,CAAAD,GAAA,UAAA,OAAA,KAAA,IAAA,EACA,KAAA,SAAA,CACA,eAAA,GACA,YAAA,GACA,sBAAA,GACA,YAAA,GACA,WAAA,GACA,GAAAC,CACA,CACA,CAMA,WAAA,CACA,KAAA,SAAA,YACAC,EAAAC,EAAA,aAAAC,EAAA,EAGA,KAAA,SAAA,aACAF,EAAAC,EAAA,cAAAC,EAAA,EAGA,KAAA,SAAA,uBACAF,EAAAC,EAAA,wBAAAE,EAAA,EAGA,KAAA,SAAA,gBAAA,mBAAAF,GACAD,EAAA,eAAA,UAAA,OAAAI,EAAA,EAGA,IAAAC,EAAA,KAAA,SAAA,YACAA,IACA,MAAA,QAAAA,CAAA,EAAAA,EAAAR,IACA,QAAAS,EAAA,CAEA,CACA,EAAAR,GAAA,aAAA,EAGA,SAAAI,GAAAK,EAAA,CAEA,OAAA,YAAAC,EAAA,CACA,IAAAC,EAAAD,EAAA,CAAA,EACA,OAAAA,EAAA,CAAA,EAAAE,GAAAD,EAAA,CACA,UAAA,CACA,KAAA,CAAA,SAAAE,GAAAJ,CAAA,CAAA,EACA,QAAA,GACA,KAAA,YACA,CACA,CAAA,EACAA,EAAA,MAAA,KAAAC,CAAA,CACA,CACA,CAIA,SAAAL,GAAAI,EAAA,CAEA,OAAA,SAAAK,EAAA,CAEA,OAAAL,EAAA,MAAA,KAAA,CACAG,GAAAE,EAAA,CACA,UAAA,CACA,KAAA,CACA,SAAA,wBACA,QAAAD,GAAAJ,CAAA,CACA,EACA,QAAA,GACA,KAAA,YACA,CACA,CAAA,CACA,CAAA,CACA,CACA,CAGA,SAAAH,GAAAS,EAAA,CAEA,OAAA,YAAAL,EAAA,CAEA,IAAAM,EAAA,KAGA,MAFA,CAAA,SAAA,UAAA,aAAA,oBAAA,EAEA,QAAAC,GAAA,CACAA,KAAAD,GAAA,OAAAA,EAAAC,CAAA,GAAA,YAEAf,EAAAc,EAAAC,EAAA,SAAAR,EAAA,CACA,IAAAS,EAAA,CACA,UAAA,CACA,KAAA,CACA,SAAAD,EACA,QAAAJ,GAAAJ,CAAA,CACA,EACA,QAAA,GACA,KAAA,YACA,CACA,EAGAU,EAAAC,GAAAX,CAAA,EACA,OAAAU,IACAD,EAAA,UAAA,KAAA,QAAAL,GAAAM,CAAA,GAIAP,GAAAH,EAAAS,CAAA,CACA,CAAA,CAEA,CAAA,EAEAH,EAAA,MAAA,KAAAL,CAAA,CACA,CACA,CAGA,SAAAF,GAAAa,EAAA,CAEA,IAAAC,EAAAnB,EAEAoB,EAAAD,EAAAD,CAAA,GAAAC,EAAAD,CAAA,EAAA,UAGA,CAAAE,GAAA,CAAAA,EAAA,gBAAA,CAAAA,EAAA,eAAA,kBAAA,IAIArB,EAAAqB,EAAA,mBAAA,SAAAd,EAIA,CACA,OAAA,SAGAe,EACAC,EACAxB,EACA,CACA,GAAA,CACA,OAAAwB,EAAA,aAAA,aAOAA,EAAA,YAAAb,GAAAa,EAAA,YAAA,CACA,UAAA,CACA,KAAA,CACA,SAAA,cACA,QAAAZ,GAAAY,CAAA,EACA,OAAAJ,CACA,EACA,QAAA,GACA,KAAA,YACA,CACA,CAAA,EAEA,MAAA,CAEA,CAEA,OAAAZ,EAAA,MAAA,KAAA,CACAe,EAEAZ,GAAAa,EAAA,CACA,UAAA,CACA,KAAA,CACA,SAAA,mBACA,QAAAZ,GAAAY,CAAA,EACA,OAAAJ,CACA,EACA,QAAA,GACA,KAAA,YACA,CACA,CAAA,EACApB,CACA,CAAA,CACA,CACA,CAAA,EAEAC,EACAqB,EACA,sBACA,SACAG,EAEA,CACA,OAAA,SAGAF,EACAC,EACAxB,EACA,CAkBA,IAAA0B,EAAAF,EACA,GAAA,CACA,IAAAG,EAAAD,GAAAA,EAAA,mBACAC,GACAF,EAAA,KAAA,KAAAF,EAAAI,EAAA3B,CAAA,CAEA,MAAA,CAEA,CACA,OAAAyB,EAAA,KAAA,KAAAF,EAAAG,EAAA1B,CAAA,CACA,CACA,CACA,EACA,CC9RA,IAAA4B,GAAA,QACAC,GAAA,EAQAC,GAAA,KAAA,CAIA,OAAA,cAAA,CAAA,KAAA,GAAA,cAAA,CAKA,QAAA,CAAA,KAAA,KAAAA,GAAA,EAAA,CAeA,YAAAC,EAAA,CAAA,EAAA,CAAAD,GAAA,UAAA,OAAA,KAAA,IAAA,EACA,KAAA,KAAAC,EAAA,KAAAH,GACA,KAAA,OAAAG,EAAA,OAAAF,EACA,CAKA,WAAA,CACA,IAAAG,EAAAC,EAAA,EAAA,UAAA,EACAD,GAGAE,GAAA,CAAAC,EAAAC,IAAA,CACA,IAAAC,EAAAJ,EAAA,EAAA,eAAAH,EAAA,EACA,OAAAO,EAAAC,GAAAN,EAAA,WAAA,EAAA,YAAAK,EAAA,KAAAA,EAAA,OAAAF,EAAAC,CAAA,EAAAD,CACA,CAAA,CACA,CACA,EAAAL,GAAA,aAAA,EAKA,SAAAQ,GACAC,EACAC,EACAC,EACAN,EACAC,EACA,CACA,GAAA,CAAAD,EAAA,WAAA,CAAAA,EAAA,UAAA,QAAA,CAAAC,GAAA,CAAAM,GAAAN,EAAA,kBAAA,KAAA,EACA,OAAAD,EAEA,IAAAQ,EAAAC,GAAAL,EAAAE,EAAAL,EAAA,kBAAAI,CAAA,EACA,OAAAL,EAAA,UAAA,OAAA,CAAA,GAAAQ,EAAA,GAAAR,EAAA,UAAA,MAAA,EACAA,CACA,CAKA,SAAAS,GACAL,EACAE,EACAI,EACAL,EACAM,EAAA,CAAA,EACA,CACA,GAAA,CAAAJ,GAAAG,EAAAL,CAAA,EAAA,KAAA,GAAAM,EAAA,OAAA,GAAAL,EACA,OAAAK,EAEA,IAAAC,EAAAC,GAAAT,EAAAM,EAAAL,CAAA,CAAA,EACA,OAAAI,GAAAL,EAAAE,EAAAI,EAAAL,CAAA,EAAAA,EAAA,CAAAO,EAAA,GAAAD,CAAA,CAAA,CACA,CCvFA,IAAAG,GAAA,KAAA,CAAA,aAAA,CAAAA,GAAA,UAAA,OAAA,KAAA,IAAA,CAAA,CAIA,OAAA,cAAA,CAAA,KAAA,GAAA,aAAA,CAKA,QAAA,CAAA,KAAA,KAAAA,GAAA,EAAA,CAKA,WAAA,CACAC,GAAAC,GAAA,CACA,GAAAC,EAAA,EAAA,eAAAH,EAAA,EAAA,CAEA,GAAA,CAAAI,EAAA,WAAA,CAAAA,EAAA,UAAA,CAAAA,EAAA,SACA,OAAAF,EAIA,IAAAG,EAAAH,EAAA,SAAAA,EAAA,QAAA,KAAAE,EAAA,UAAAA,EAAA,SAAA,KACA,CAAA,SAAAE,CAAA,EAAAF,EAAA,UAAA,CAAA,EACA,CAAA,UAAAG,CAAA,EAAAH,EAAA,WAAA,CAAA,EAEAI,EAAA,CACA,GAAAN,EAAA,SAAAA,EAAA,QAAA,QACA,GAAAI,GAAA,CAAA,QAAAA,CAAA,EACA,GAAAC,GAAA,CAAA,aAAAA,CAAA,CACA,EACAE,EAAA,CAAA,GAAAP,EAAA,QAAA,GAAAG,GAAA,CAAA,IAAAA,CAAA,EAAA,QAAAG,CAAA,EAEA,MAAA,CAAA,GAAAN,EAAA,QAAAO,CAAA,EAEA,OAAAP,CACA,CAAA,CACA,CACA,EAAAF,GAAA,aAAA,ECzCA,IAAAU,GAAA,KAAA,CAAA,aAAA,CAAAA,GAAA,UAAA,OAAA,KAAA,IAAA,CAAA,CAIA,OAAA,cAAA,CAAA,KAAA,GAAA,QAAA,CAKA,QAAA,CAAA,KAAA,KAAAA,GAAA,EAAA,CAUA,UAAAC,EAAAC,EAAA,CACA,IAAAC,EAAAC,GAAA,CAGA,GAAAA,EAAA,KACA,OAAAA,EAGA,IAAAC,EAAAH,EAAA,EAAA,eAAAF,EAAA,EACA,GAAAK,EAAA,CAEA,GAAA,CACA,GAAAC,GAAAF,EAAAC,EAAA,cAAA,EACA,OAAA,OAAA,iBAAA,KAAA,mBAAAE,EAAA,KAAA,sEAAA,EACA,IAEA,MAAA,CACA,OAAAF,EAAA,eAAAD,CACA,CAEA,OAAAC,EAAA,eAAAD,EAEA,OAAAA,CACA,EAEAD,EAAA,GAAA,KAAA,KACAF,EAAAE,CAAA,CACA,CACA,EAAAH,GAAA,aAAA,EAGA,SAAAM,GAAAF,EAAAI,EAAA,CACA,OAAAA,EAIA,GAAAC,GAAAL,EAAAI,CAAA,GAIAE,GAAAN,EAAAI,CAAA,GAPA,EAYA,CAGA,SAAAC,GAAAL,EAAAI,EAAA,CACA,IAAAG,EAAAP,EAAA,QACAQ,EAAAJ,EAAA,QAoBA,MAjBA,GAAAG,GAAA,CAAAC,GAKAD,GAAA,CAAAC,GAAA,CAAAD,GAAAC,GAIAD,IAAAC,GAIA,CAAAC,GAAAT,EAAAI,CAAA,GAIA,CAAAM,GAAAV,EAAAI,CAAA,EAKA,CAGA,SAAAE,GAAAN,EAAAI,EAAA,CACA,IAAAO,EAAAC,GAAAR,CAAA,EACAS,EAAAD,GAAAZ,CAAA,EAcA,MAZA,GAAAW,GAAA,CAAAE,GAIAF,EAAA,OAAAE,EAAA,MAAAF,EAAA,QAAAE,EAAA,OAIA,CAAAJ,GAAAT,EAAAI,CAAA,GAIA,CAAAM,GAAAV,EAAAI,CAAA,EAKA,CAGA,SAAAM,GAAAV,EAAAI,EAAA,CACA,IAAAU,EAAAC,GAAAf,CAAA,EACAgB,EAAAD,GAAAX,CAAA,EAGA,GAAA,CAAAU,GAAA,CAAAE,EACA,MAAA,GAYA,GARAF,GAAA,CAAAE,GAAA,CAAAF,GAAAE,IAIAF,EAAAA,EACAE,EAAAA,EAGAA,EAAA,SAAAF,EAAA,QACA,MAAA,GAIA,QAAAG,EAAA,EAAAA,EAAAD,EAAA,OAAAC,IAAA,CACA,IAAAC,EAAAF,EAAAC,CAAA,EACAE,EAAAL,EAAAG,CAAA,EAEA,GACAC,EAAA,WAAAC,EAAA,UACAD,EAAA,SAAAC,EAAA,QACAD,EAAA,QAAAC,EAAA,OACAD,EAAA,WAAAC,EAAA,SAEA,MAAA,GAIA,MAAA,EACA,CAGA,SAAAV,GAAAT,EAAAI,EAAA,CACA,IAAAgB,EAAApB,EAAA,YACAqB,EAAAjB,EAAA,YAGA,GAAA,CAAAgB,GAAA,CAAAC,EACA,MAAA,GAIA,GAAAD,GAAA,CAAAC,GAAA,CAAAD,GAAAC,EACA,MAAA,GAGAD,EAAAA,EACAC,EAAAA,EAGA,GAAA,CACA,OAAAD,EAAA,KAAA,EAAA,IAAAC,EAAA,KAAA,EAAA,CACA,MAAA,CACA,MAAA,EACA,CACA,CAGA,SAAAT,GAAAU,EAAA,CACA,OAAAA,EAAA,WAAAA,EAAA,UAAA,QAAAA,EAAA,UAAA,OAAA,CAAA,CACA,CAGA,SAAAP,GAAAO,EAAA,CACA,IAAAC,EAAAD,EAAA,UAEA,GAAAC,EACA,GAAA,CAEA,OAAAA,EAAA,OAAA,CAAA,EAAA,WAAA,MACA,MAAA,CACA,MACA,CAGA,CCzLA,IAAAC,GAAA,CACA,IAAAC,GAAA,eACA,IAAAA,GAAA,iBACA,IAAAC,GACA,IAAAC,GACA,IAAAC,GACA,IAAAC,GACA,IAAAC,GACA,IAAAC,EACA,EAgEA,SAAAC,GAAAC,EAAA,CAAA,EAAA,CACAA,EAAA,sBAAA,SACAA,EAAA,oBAAAT,IAEAS,EAAA,UAAA,SAEA,OAAA,oBAAA,WACAA,EAAA,QAAA,oBAIAC,EAAA,gBAAAA,EAAA,eAAA,KACAD,EAAA,QAAAC,EAAA,eAAA,KAGAD,EAAA,sBAAA,SACAA,EAAA,oBAAA,IAEAA,EAAA,oBAAA,SACAA,EAAA,kBAAA,IAGA,IAAAE,EAAA,CACA,GAAAF,EACA,YAAAG,GAAAH,EAAA,aAAAI,EAAA,EACA,aAAAC,GAAAL,CAAA,EACA,UAAAA,EAAA,YAAAM,GAAA,EAAAC,GAAAC,GACA,EAEAC,GAAAC,GAAAR,CAAA,EAEAF,EAAA,qBACAW,GAAA,CAEA,CAuHA,SAAAC,GAAAC,EAAA,CACAA,EAAA,aAAA,CAAA,eAAA,EAAA,CAAA,EACAA,EAAA,eAAA,CACA,CAKA,SAAAC,IAAA,CACA,GAAA,OAAAC,EAAA,SAAA,IAAA,EACA,OAAA,iBAAA,KAAA,mBACAC,EAAA,KAAA,oFAAA,EACA,OAGA,IAAAH,EAAAI,EAAA,EAQAJ,EAAA,iBAQAD,GAAAC,CAAA,EAGAK,EAAA,UAAA,CAAA,CAAA,KAAAC,EAAA,GAAAC,CAAA,IAAA,CAEAD,IAAA,QAAAA,IAAAC,GACAR,GAAAK,EAAA,CAAA,CAEA,CAAA,EACA,CClSA,IAAAI,GAAA,GAAAC,GAAAD,GAAA,iBAAAE,GAAA,WAAAC,GAAA,mBAAAC,GAAA,gBAAAC,GAAA,iBAAAC,GAAA,aAAAC,KCOA,IAAAC,GAAA,CAAA,EAGAC,EAAA,QAAAA,EAAA,OAAA,eACAD,GAAAC,EAAA,OAAA,cAGA,IAAAC,GAAA,CACA,GAAAF,GACA,GAAAG,GACA,GAAAC,EACA,ECXA,SAAAC,IAAA,CACAC,EAAA,QAAAC,EAAA,EACAD,EAAA,qBAAAC,EAAA,CACA,CAKA,SAAAA,IAAA,CACA,IAAAC,EAAAC,GAAA,EACA,GAAAD,EAAA,CACA,IAAAE,EAAA,kBACA,OAAA,iBAAA,KAAA,mBAAAC,EAAA,IAAA,0BAAAD,2BAAA,EACAF,EAAA,UAAAE,CAAA,EAEA,CCbA,SAAAE,IAAA,CACA,IAAAC,EAAAC,GAAA,EACA,GAAA,CAAAD,EAAA,WACA,OAGA,IAAAE,EAAA,CACA,SAAA,CACA,IAAAC,EAAAC,GAAA,OAAA,2BAAA,EAGA,OAAA,IAAAD,EAAA,KACA,EACA,UAAA,CACA,IAAAA,EAAAC,GAAA,OAAA,2BAAA,EAGA,OAAA,IAAAD,EAAA,MAAA,CAAA,SAAA,EAAA,CAAA,CACA,EACA,OAAA,CACA,IAAAA,EAAAC,GAAA,OAAA,2BAAA,EAGA,OAAA,IAAAD,EAAA,KACA,EACA,IAAA,CACA,IAAAA,EAAAC,GAAA,OAAA,8BAAA,EAGA,OAAA,IAAAD,EAAA,QACA,CACA,EAEAE,EAAA,OAAA,KAAAH,CAAA,EACA,OAAAI,GAAA,CAAA,CAAAC,GAAAD,CAAA,CAAA,EACA,IAAAE,GAAA,CACA,GAAA,CACA,OAAAN,EAAAM,CAAA,EAAA,CACA,MAAA,CACA,MACA,CACA,CAAA,EACA,OAAAC,GAAAA,CAAA,EAEAJ,EAAA,OAAA,IACAL,EAAA,WAAA,aAAA,CAAA,GAAAA,EAAA,WAAA,cAAA,CAAA,EAAA,GAAAK,CAAA,EAEA,CAKA,SAAAK,IAAA,CACAC,GAAA,EAGAC,GAAA,GACAb,GAAA,EAIAc,GAAA,CACA,CCrEA,IAAAC,EAAAC,ECQA,SAAAC,IAAA,CACAC,GAAAA,EAAA,SACAA,EAAA,SAAA,iBAAA,mBAAA,IAAA,CACA,IAAAC,EAAAC,GAAA,EACA,GAAAF,EAAA,SAAA,QAAAC,EAAA,CACA,IAAAE,EAAA,aAEA,OAAA,iBAAA,KAAA,mBACAC,EAAA,IACA,0BAAAD,+CAAAF,EAAA,IACA,EAGAA,EAAA,QACAA,EAAA,UAAAE,CAAA,EAEAF,EAAA,OAAA,mBAAA,iBAAA,EACAA,EAAA,OAAA,EAEA,CAAA,GAEA,OAAA,iBAAA,KAAA,mBACAG,EAAA,KAAA,oFAAA,CAEA,CChBA,IAAAC,GAAA,CACAC,EACAC,EACAC,IACA,CACA,IAAAC,EACAC,EACA,OAAAC,GAAA,CACAJ,EAAA,OAAA,IACAI,GAAAH,KACAE,EAAAH,EAAA,OAAAE,GAAA,IAMAC,GAAAD,IAAA,UACAA,EAAAF,EAAA,MACAA,EAAA,MAAAG,EACAJ,EAAAC,CAAA,GAIA,CACA,ECrBA,IAAAK,GAAA,IACA,MAAA,KAAA,IAAA,KAAA,KAAA,MAAA,KAAA,OAAA,EAAA,aAAA,EAAA,OCHA,IAAAC,GAAA,IAAA,CAEA,IAAAC,EAAAC,EAAA,YAAA,OAEAC,EAAAD,EAAA,YAAA,WAAA,KAEAE,EAAA,CACA,UAAA,aACA,UAAA,EACA,KAAAD,GAAA,EAAA,eAAAA,IAAA,EAAA,SAAA,UACA,EAEA,QAAAE,KAAAJ,EACAI,IAAA,mBAAAA,IAAA,WACAD,EAAAC,CAAA,EAAA,KAAA,IAAAJ,EAAAI,CAAA,EAAAJ,EAAA,gBAAA,CAAA,GAGA,OAAAG,CACA,EAEAE,GAAA,IACAJ,EAAA,wBAEAA,EAAA,cACA,YAAA,kBAAA,YAAA,iBAAA,YAAA,EAAA,CAAA,GACAF,GAAA,GAGAE,EAAA,aAAA,YAAA,kBAAA,YAAA,iBAAA,YAAA,EAAA,CAAA,EC7BA,IAAAK,GAAA,IAAA,CACA,IAAAC,EAAAC,GAAA,EACA,OAAAD,GAAAA,EAAA,iBAAA,CACA,ECCA,IAAAE,GAAA,CAAAC,EAAAC,IAAA,CACA,IAAAC,EAAAC,GAAA,EACAC,EAAA,WAEA,OAAAF,IACAG,EAAA,SAAA,cAAAC,GAAA,EAAA,EACAF,EAAA,YAEAA,EAAAF,EAAA,KAAA,QAAA,KAAA,GAAA,GAIA,CACA,KAAAF,EACA,MAAA,OAAAC,EAAA,IAAA,GAAAA,EACA,OAAA,OACA,MAAA,EACA,QAAA,CAAA,EACA,GAAAM,GAAA,EACA,eAAAH,CACA,CACA,ECFA,IAAAI,GAAA,CACAC,EACAC,EACAC,IACA,CACA,GAAA,CACA,GAAA,oBAAA,oBAAA,SAAAF,CAAA,EAAA,CACA,IAAAG,EAAA,IAAA,oBAAAC,GAAA,CACAH,EAAAG,EAAA,WAAA,CAAA,CACA,CAAA,EACA,OAAAD,EAAA,QACA,OAAA,OACA,CACA,KAAAH,EACA,SAAA,EACA,EACAE,GAAA,CAAA,CACA,CACA,EACAC,EAEA,MAAA,CAEA,CAEA,EC5CA,IAAAE,GAAA,CAAAC,EAAAC,IAAA,CACA,IAAAC,EAAAC,GAAA,EACAA,EAAA,OAAA,YAAAC,EAAA,SAAA,kBAAA,YACAJ,EAAAG,CAAA,EACAF,IACA,oBAAA,mBAAAC,EAAA,EAAA,EACA,oBAAA,WAAAA,EAAA,EAAA,GAGA,EACA,iBAAA,mBAAAA,EAAA,EAAA,EAGA,iBAAA,WAAAA,EAAA,EAAA,CACA,ECOA,IAAAG,GAAAC,GAAA,CACA,IAAAC,EAAAC,GAAA,MAAA,CAAA,EACAC,EAEAC,EAAA,EACAC,EAAA,CAAA,EAGAC,EAAAC,GAAA,CACAA,EAAA,QAAAC,GAAA,CAEA,GAAA,CAAAA,EAAA,eAAA,CACA,IAAAC,EAAAJ,EAAA,CAAA,EACAK,EAAAL,EAAAA,EAAA,OAAA,CAAA,EAMAD,GACAC,EAAA,SAAA,GACAG,EAAA,UAAAE,EAAA,UAAA,KACAF,EAAA,UAAAC,EAAA,UAAA,KAEAL,GAAAI,EAAA,MACAH,EAAA,KAAAG,CAAA,IAEAJ,EAAAI,EAAA,MACAH,EAAA,CAAAG,CAAA,GAKAJ,EAAAH,EAAA,QACAA,EAAA,MAAAG,EACAH,EAAA,QAAAI,EACAF,GACAA,EAAA,GAIA,CAAA,CACA,EAEAQ,EAAAC,GAAA,eAAAN,CAAA,EACA,GAAAK,EAAA,CACAR,EAAAU,GAAAb,EAAAC,CAAA,EAEA,IAAAa,EAAA,IAAA,CACAR,EAAAK,EAAA,YAAA,CAAA,EACAR,EAAA,EAAA,CACA,EAEA,OAAAY,GAAAD,CAAA,EAEAA,EAIA,ECnFA,IAAAE,GAAA,GAEAC,GAAA,IAGAC,EAAA,SAAA,kBAAA,UAAA,CAAAA,EAAA,SAAA,aAAA,EAAA,IAGAC,GAAA,IAAA,CAEAC,GAAA,CAAA,CAAA,UAAAC,CAAA,IAAA,CACAL,GAAAK,CACA,EAAA,EAAA,CACA,EAEAC,GAAA,KAGAN,GAAA,IAKAA,GAAAC,GAAA,EACAE,GAAA,GAEA,CACA,IAAA,iBAAA,CACA,OAAAH,EACA,CACA,GCjBA,IAAAO,GAAAC,GAAA,CACA,IAAAC,EAAAC,GAAA,EACAC,EAAAC,GAAA,KAAA,EAEAC,EAEAC,EAAAC,GAAA,CAEAA,EAAA,UAAAN,EAAA,kBACAE,EAAA,MAAAI,EAAA,gBAAAA,EAAA,UACAJ,EAAA,QAAA,KAAAI,CAAA,EACAF,EAAA,EAAA,EAEA,EAEAG,EAAAC,GAAA,CACAA,EAAA,QAAAH,CAAA,CACA,EAEAI,EAAAC,GAAA,cAAAH,CAAA,EACAH,EAAAO,GAAAZ,EAAAG,CAAA,EAEAO,GACAG,GAAA,IAAA,CACAL,EAAAE,EAAA,YAAA,CAAA,EACAA,EAAA,WAAA,CACA,EAAA,EAAA,CAEA,ECpCA,IAAAI,GAAA,CAAA,EAQAC,GAAAC,GAAA,CACA,IAAAC,EAAAC,GAAA,EACAC,EAAAC,GAAA,KAAA,EACAC,EAEAC,EAAAC,GAAA,CACA,IAAAC,EAAAD,EAAAA,EAAA,OAAA,CAAA,EACA,GAAAC,EAAA,CAKA,IAAAC,EAAA,KAAA,IAAAD,EAAA,UAAAE,GAAA,EAAA,CAAA,EAGAD,EAAAR,EAAA,kBACAE,EAAA,MAAAM,EACAN,EAAA,QAAA,CAAAK,CAAA,EACAH,EAAA,GAGA,EAEAM,EAAAC,GAAA,2BAAAN,CAAA,EAEA,GAAAK,EAAA,CACAN,EAAAQ,GAAAb,EAAAG,CAAA,EAEA,IAAAW,EAAA,IAAA,CACAhB,GAAAK,EAAA,EAAA,IACAG,EAAAK,EAAA,YAAA,CAAA,EACAA,EAAA,WAAA,EACAb,GAAAK,EAAA,EAAA,EAAA,GACAE,EAAA,EAAA,EAEA,EAKA,OAAA,UAAA,OAAA,EAAA,QAAAU,GAAA,CACA,iBAAAA,EAAAD,EAAA,CAAA,KAAA,GAAA,QAAA,EAAA,CAAA,CACA,CAAA,EAEAE,GAAAF,EAAA,EAAA,EAEAA,EAIA,EC5EA,SAAAG,GAAAC,EAAA,CACA,OAAA,OAAAA,GAAA,UAAA,SAAAA,CAAA,CACA,CAOA,SAAAC,GAAAC,EAAA,CAAA,eAAAC,EAAA,GAAAC,CAAA,EAAA,CACA,OAAAD,GAAAD,EAAA,eAAAC,IACAD,EAAA,eAAAC,GAGAD,EAAA,WAAA,CACA,eAAAC,EACA,GAAAC,CACA,CAAA,CACA,CCLA,SAAAC,EAAAC,EAAA,CACA,OAAAA,EAAA,GACA,CAEA,SAAAC,IAAA,CACA,OAAAC,GAAAA,EAAA,kBAAAA,EAAA,WACA,CAEA,IAAAC,GAAA,EAEAC,EAAA,CAAA,EACAC,GACAC,GAOA,SAAAC,IAAA,CACA,IAAAC,EAAAP,GAAA,EACA,GAAAO,GAAAC,GAAA,CACAD,EAAA,MACAN,EAAA,YAAA,KAAA,qBAAA,EAEAQ,GAAA,EACA,IAAAC,EAAAC,GAAA,EACAC,EAAAC,GAAA,EAEA,MAAA,IAAA,CACAH,GACAA,EAAA,EAEAE,GACAA,EAAA,CAEA,EAGA,MAAA,IAAA,EACA,CAKA,SAAAE,IAAA,CAmBAC,GAAA,WAlBAC,GAAA,CACA,QAAAC,KAAAD,EAAA,CACA,IAAAE,EAAAC,GAAA,EACA,GAAA,CAAAD,EACA,OAEA,IAAAE,EAAAtB,EAAAU,GAAAS,EAAA,SAAA,EACAI,EAAAvB,EAAAmB,EAAA,QAAA,EAEAC,EAAA,WAAA,CACA,YAAA,yBACA,GAAA,eACA,eAAAE,EACA,aAAAA,EAAAC,CACA,CAAA,EAEA,CAEA,CACA,CAKA,SAAAC,IAAA,CAsBAP,GAAA,QArBAC,GAAA,CACA,QAAAC,KAAAD,EAAA,CACA,IAAAE,EAAAC,GAAA,EACA,GAAA,CAAAD,EACA,OAGA,GAAAD,EAAA,OAAA,QAAA,CACA,IAAAG,EAAAtB,EAAAU,GAAAS,EAAA,SAAA,EACAI,EAAAvB,EAAAmB,EAAA,QAAA,EAEAC,EAAA,WAAA,CACA,YAAAK,GAAAN,EAAA,MAAA,EACA,GAAA,kBAAAA,EAAA,OACA,eAAAG,EACA,aAAAA,EAAAC,CACA,CAAA,GAGA,EAEA,CAAA,kBAAA,CAAA,CAAA,CACA,CAGA,SAAAV,IAAA,CAIA,OAAAa,GAAAC,GAAA,CACA,IAAAR,EAAAQ,EAAA,QAAA,IAAA,EACAR,KAIA,OAAA,iBAAA,KAAA,mBAAAS,EAAA,IAAA,2BAAA,EACAvB,EAAA,IAAA,CAAA,MAAAsB,EAAA,MAAA,KAAA,EAAA,EACApB,GAAAY,EACA,CAAA,CACA,CAGA,SAAAJ,IAAA,CACA,OAAAc,GAAAF,GAAA,CACA,IAAAR,EAAAQ,EAAA,QAAA,IAAA,EACAR,KAIA,OAAA,iBAAA,KAAA,mBAAAS,EAAA,IAAA,2BAAA,EACAvB,EAAA,IAAA,CAAA,MAAAsB,EAAA,MAAA,KAAA,aAAA,EACArB,GAAAa,EACA,CAAA,CACA,CAGA,SAAAR,IAAA,CACAmB,GAAAH,GAAA,CACA,IAAAR,EAAAQ,EAAA,QAAA,IAAA,EACA,GAAA,CAAAR,EACA,OAGA,IAAAY,EAAA/B,EAAAU,EAAA,EACAY,EAAAtB,EAAAmB,EAAA,SAAA,GACA,OAAA,iBAAA,KAAA,mBAAAS,EAAA,IAAA,2BAAA,EACAvB,EAAA,IAAA,CAAA,MAAAsB,EAAA,MAAA,KAAA,aAAA,EACAtB,EAAA,UAAA,EAAA,CAAA,MAAA0B,EAAAT,EAAA,KAAA,QAAA,CACA,CAAA,CACA,CAGA,SAAAU,GAAAZ,EAAA,CACA,IAAAX,EAAAP,GAAA,EACA,GAAA,CAAAO,GAAA,CAAAN,EAAA,YAAA,YAAA,CAAAO,GAEA,QAGA,OAAA,iBAAA,KAAA,mBAAAkB,EAAA,IAAA,0DAAA,EACA,IAAAG,EAAA/B,EAAAU,EAAA,EAEAuB,EAAAxB,EAAA,WAAA,EAEAyB,EACAC,EAqDA,GAlDAF,EAAA,MAAA7B,EAAA,EAAA,QAAAe,GAAA,CACA,IAAAG,EAAAtB,EAAAmB,EAAA,SAAA,EACAI,EAAAvB,EAAAmB,EAAA,QAAA,EAEA,GAAA,EAAAC,EAAA,KAAA,cAAAW,EAAAT,EAAAF,EAAA,gBAIA,OAAAD,EAAA,UAAA,CACA,IAAA,aAAA,CACAiB,GAAAhB,EAAAD,EAAAY,CAAA,EACAG,EAAAH,EAAA/B,EAAAmB,EAAA,aAAA,EACAgB,EAAAJ,EAAA/B,EAAAmB,EAAA,YAAA,EACA,KACA,CACA,IAAA,OACA,IAAA,QACA,IAAA,UAAA,CACAkB,GAAAjB,EAAAD,EAAAG,EAAAC,EAAAQ,CAAA,EAGA,IAAAO,EAAAC,GAAA,EAEAC,EAAArB,EAAA,UAAAmB,EAAA,gBAEAnB,EAAA,OAAA,eAAAqB,KACA,OAAA,iBAAA,KAAA,mBAAAZ,EAAA,IAAA,0BAAA,EACAvB,EAAA,GAAA,CAAA,MAAAc,EAAA,UAAA,KAAA,aAAA,GAEAA,EAAA,OAAA,0BAAAqB,KACA,OAAA,iBAAA,KAAA,mBAAAZ,EAAA,IAAA,2BAAA,EACAvB,EAAA,IAAA,CAAA,MAAAc,EAAA,UAAA,KAAA,aAAA,GAEA,KACA,CACA,IAAA,WAAA,CACA,IAAAsB,EAAAtB,EAAA,KAAA,QAAAhB,EAAA,SAAA,OAAA,EAAA,EACAuC,GAAAtB,EAAAD,EAAAsB,EAAAnB,EAAAC,EAAAQ,CAAA,EACA,KACA,CAGA,CACA,CAAA,EAEA3B,GAAA,KAAA,IAAA6B,EAAA,OAAA,EAAA,CAAA,EAEAU,GAAAvB,CAAA,EAGAA,EAAA,KAAA,WAAA,CAGA,OAAAc,GAAA,YACA,OAAA,iBAAA,KAAA,mBAAAN,EAAA,IAAA,4BAAA,EACAvB,EAAA,KAAA,CACA,OAAA6B,EAAAd,EAAA,gBAAA,IACA,KAAA,aACA,EAEA,OAAAe,GAAA,UAAAA,GAAAD,IAGA7B,EAAA,kBAAA,EAAA,CACA,OAAA6B,EAAAC,GAAA,IACA,KAAA,aACA,IAIA,CAAA,MAAA,KAAA,KAAA,EAAA,QAAAS,GAAA,CACA,GAAA,CAAAvC,EAAAuC,CAAA,GAAAb,GAAAX,EAAA,eACA,OAKA,IAAAyB,EAAAxC,EAAAuC,CAAA,EAAA,MACAE,EAAAf,EAAA/B,EAAA6C,CAAA,EAGAE,EAAA,KAAA,KAAAD,EAAA1B,EAAA,gBAAA,GAAA,EACA4B,EAAAD,EAAAF,GAEA,OAAA,iBAAA,KAAA,mBACAjB,EAAA,IAAA,6BAAAgB,UAAAC,QAAAE,MAAAC,IAAA,EACA3C,EAAAuC,CAAA,EAAA,MAAAG,CACA,CAAA,EAEA,IAAAE,EAAA5C,EAAA,UAAA,EACA4C,GAAA5C,EAAA,MAEA6C,GAAA9B,EAAA,CACA,YAAA,oBACA,aAAA6B,EAAA,MAAAjD,EAAAK,EAAA,IAAA,KAAA,EACA,GAAA,YACA,eAAA4C,EAAA,KACA,CAAA,EAGA,OAAA5C,EAAA,UAAA,GAKA,QAAAA,GACA,OAAAA,EAAA,IAGA,OAAA,KAAAA,CAAA,EAAA,QAAA8C,GAAA,CACA/B,EAAA,eACA+B,EACA9C,EAAA8C,CAAA,EAAA,MACA9C,EAAA8C,CAAA,EAAA,IACA,CACA,CAAA,EAEAC,GAAAhC,CAAA,EAGAd,GAAA,OACAC,GAAA,OACAF,EAAA,CAAA,CACA,CAGA,SAAAgC,GACAjB,EAEAD,EACAG,EACAC,EACAQ,EACA,CACA,IAAAsB,EAAAtB,EAAAT,EACAgC,EAAAD,EAAA9B,EAEA,OAAA2B,GAAA9B,EAAA,CACA,YAAAD,EAAA,KACA,aAAAmC,EACA,GAAAnC,EAAA,UACA,eAAAkC,CACA,CAAA,EAEAA,CACA,CAIA,SAAAjB,GAAAhB,EAAAD,EAAAY,EAAA,CACA,CAAA,cAAA,WAAA,wBAAA,YAAA,SAAA,EAAA,QAAAwB,GAAA,CACAC,GAAApC,EAAAD,EAAAoC,EAAAxB,CAAA,CACA,CAAA,EACAyB,GAAApC,EAAAD,EAAA,mBAAAY,EAAA,UAAA,YAAA,EACAyB,GAAApC,EAAAD,EAAA,QAAAY,EAAA,QAAA,mBAAA,EACAyB,GAAApC,EAAAD,EAAA,eAAAY,EAAA,KAAA,EACA0B,GAAArC,EAAAD,EAAAY,CAAA,CACA,CAGA,SAAAyB,GACApC,EAEAD,EACAoC,EACAxB,EACA2B,EACAC,EACA,CACA,IAAAC,EAAAD,EAAAxC,EAAAwC,CAAA,EAAAxC,EAAA,GAAAoC,MAAA,EACAM,EAAA1C,EAAA,GAAAoC,QAAA,EACA,CAAAM,GAAA,CAAAD,GAGAV,GAAA9B,EAAA,CACA,GAAA,UACA,YAAAsC,GAAAH,EACA,eAAAxB,EAAA/B,EAAA6D,CAAA,EACA,aAAA9B,EAAA/B,EAAA4D,CAAA,CACA,CAAA,CACA,CAIA,SAAAH,GAAArC,EAAAD,EAAAY,EAAA,CACAmB,GAAA9B,EAAA,CACA,GAAA,UACA,YAAA,UACA,eAAAW,EAAA/B,EAAAmB,EAAA,YAAA,EACA,aAAAY,EAAA/B,EAAAmB,EAAA,WAAA,CACA,CAAA,EAEA+B,GAAA9B,EAAA,CACA,GAAA,UACA,YAAA,WACA,eAAAW,EAAA/B,EAAAmB,EAAA,aAAA,EACA,aAAAY,EAAA/B,EAAAmB,EAAA,WAAA,CACA,CAAA,CACA,CAWA,SAAAuB,GACAtB,EACAD,EACAsB,EACAnB,EACAC,EACAQ,EACA,CAGA,GAAAZ,EAAA,gBAAA,kBAAAA,EAAA,gBAAA,QACA,OAIA,IAAA2C,EAAA,CAAA,EACA,iBAAA3C,IACA2C,EAAA,eAAA,EAAA3C,EAAA,cAEA,oBAAAA,IACA2C,EAAA,mBAAA,EAAA3C,EAAA,iBAEA,oBAAAA,IACA2C,EAAA,mBAAA,EAAA3C,EAAA,iBAEA,yBAAAA,IACA2C,EAAA,iCAAA,EAAA3C,EAAA,sBAGA,IAAA4C,EAAAhC,EAAAT,EACA0C,EAAAD,EAAAxC,EAEA2B,GAAA9B,EAAA,CACA,YAAAqB,EACA,aAAAuB,EACA,GAAA7C,EAAA,cAAA,YAAAA,EAAA,gBAAA,iBACA,eAAA4C,EACA,KAAAD,CACA,CAAA,CACA,CAKA,SAAAnB,GAAAvB,EAAA,CACA,IAAA6C,EAAA9D,EAAA,UACA,GAAA,CAAA8D,EACA,OAIA,IAAAC,EAAAD,EAAA,WACAC,IACAA,EAAA,eACA9C,EAAA,OAAA,0BAAA8C,EAAA,aAAA,EAGAA,EAAA,MACA9C,EAAA,OAAA,iBAAA8C,EAAA,IAAA,EAGAC,GAAAD,EAAA,GAAA,IACA7D,EAAA,gBAAA,EAAA,CAAA,MAAA6D,EAAA,IAAA,KAAA,aAAA,IAIAC,GAAAF,EAAA,YAAA,GACA7C,EAAA,OAAA,eAAA,GAAA6C,EAAA,iBAAA,EAGAE,GAAAF,EAAA,mBAAA,GACA7C,EAAA,OAAA,sBAAA,OAAA6C,EAAA,mBAAA,CAAA,CAEA,CAGA,SAAAb,GAAAhC,EAAA,CACAd,MACA,OAAA,iBAAA,KAAA,mBAAAsB,EAAA,IAAA,gCAAA,EAIAtB,GAAA,SACAc,EAAA,OAAA,cAAAK,GAAAnB,GAAA,OAAA,CAAA,EAGAA,GAAA,IACAc,EAAA,OAAA,SAAAd,GAAA,EAAA,EAGAA,GAAA,KAEAc,EAAA,OAAA,UAAAd,GAAA,IAAA,KAAA,EAAA,MAAA,EAAA,GAAA,CAAA,EAGAc,EAAA,OAAA,WAAAd,GAAA,IAAA,GAIAC,IAAAA,GAAA,WACA,OAAA,iBAAA,KAAA,mBAAAqB,EAAA,IAAA,gCAAA,EACArB,GAAA,QAAA,QAAA,CAAA6D,EAAAC,IACAjD,EAAA,OAAA,cAAAiD,EAAA,IAAA5C,GAAA2C,EAAA,IAAA,CAAA,CACA,EAEA,CCjeA,IAAAE,GAAA,CAAA,YAAA,KAAA,EA4FAC,GAAA,CACA,WAAA,GACA,SAAA,GAEA,eAAAD,GACA,wBAAAA,EACA,EAGA,SAAAE,GAAAC,EAAA,CAEA,GAAA,CAAA,WAAAC,EAAA,SAAAC,EAAA,wBAAAC,EAAA,eAAAC,EAAA,2BAAAC,CAAA,EAAA,CACA,WAAAP,GAAA,WACA,SAAAA,GAAA,SACA,GAAAE,CACA,EAEAM,EACA,OAAAD,GAAA,WAAAA,EAAAE,GAAA,GAKAC,EAAAC,GACAC,GAAAD,EAAAN,GAAAC,CAAA,EAEAO,EAAA,CAAA,EAEAV,GACAW,EAAA,QAAAC,GAAA,CACAC,GAAAD,EAAAP,EAAAE,EAAAG,CAAA,CACA,CAAA,EAGAT,GACAU,EAAA,MAAAC,GAAA,CACAE,GAAAF,EAAAP,EAAAE,EAAAG,CAAA,CACA,CAAA,CAEA,CAOA,SAAAD,GAAAD,EAAAN,EAAA,CACA,OAAAa,GAAAP,EAAAN,GAAAN,EAAA,CACA,CAKA,SAAAiB,GACAD,EACAP,EACAI,EACAC,EACA,CACA,GAAA,CAAAM,GAAA,GAAA,EAAAJ,EAAA,WAAAP,EAAAO,EAAA,UAAA,GAAA,GACA,OAGA,GAAAA,EAAA,aAAA,CACA,IAAAK,EAAAL,EAAA,UAAA,OACA,GAAA,CAAAK,EAAA,OAEA,IAAAC,EAAAR,EAAAO,CAAA,EACAC,IACAN,EAAA,SAGAM,EAAA,cAAAN,EAAA,SAAA,MAAA,EACAA,EAAA,OACAM,EAAA,UAAA,gBAAA,EAEAA,EAAA,OAAA,EAGA,OAAAR,EAAAO,CAAA,GAEA,OAGA,IAAAE,EAAAC,EAAA,EAAA,SAAA,EACAC,EAAAF,GAAAA,EAAA,QAAA,EACAG,EAAAD,GAAAA,EAAA,YAEA,GAAAA,GAAAC,EAAA,CACA,IAAAJ,EAAAG,EAAA,WAAA,CACA,KAAA,CACA,GAAAT,EAAA,UACA,KAAA,OACA,EACA,YAAA,GAAAA,EAAA,UAAA,UAAAA,EAAA,UAAA,MACA,GAAA,aACA,CAAA,EAEAA,EAAA,UAAA,OAAAM,EAAA,OACAR,EAAAQ,EAAA,MAAA,EAAAA,EAEA,IAAAK,EAAAX,EAAA,KAAA,CAAA,EAGAA,EAAA,KAAA,CAAA,EAAAA,EAAA,KAAA,CAAA,GAAA,CAAA,EAGA,IAAAY,EAAAZ,EAAA,KAAA,CAAA,EAEAH,EAAAG,EAAA,UAAA,GAAA,IACAY,EAAA,QAAAC,GACAF,EACAD,EAAA,0BAAA,EACAJ,EACAM,CACA,GAGA,CAEA,SAAAC,GACAF,EACAG,EACAR,EACAM,EAOA,CACA,IAAAG,EAAAC,GAAAF,CAAA,EACAG,EAAAX,EAAA,cAAA,EAEAY,EACA,OAAA,QAAA,KAAAC,GAAAR,EAAA,OAAA,EAAAA,EAAA,QAAAC,EAAA,QAEA,GAAAM,EAEA,GAAA,OAAA,QAAA,KAAAC,GAAAD,EAAA,OAAA,EAAA,CACA,IAAAE,EAAA,IAAA,QAAAF,CAAA,EAEA,OAAAE,EAAA,OAAA,eAAAH,CAAA,EAEAF,GAGAK,EAAA,OAAAC,GAAAN,CAAA,EAGAK,UACA,MAAA,QAAAF,CAAA,EAAA,CACA,IAAAE,EAAA,CAAA,GAAAF,EAAA,CAAA,eAAAD,CAAA,CAAA,EAEA,OAAAF,GAGAK,EAAA,KAAA,CAAAC,GAAAN,CAAA,CAAA,EAGAK,MACA,CACA,IAAAE,EAAA,YAAAJ,EAAAA,EAAA,QAAA,OACAK,EAAA,CAAA,EAEA,OAAA,MAAA,QAAAD,CAAA,EACAC,EAAA,KAAA,GAAAD,CAAA,EACAA,GACAC,EAAA,KAAAD,CAAA,EAGAP,GACAQ,EAAA,KAAAR,CAAA,EAGA,CACA,GAAAG,EACA,eAAAD,EACA,QAAAM,EAAA,OAAA,EAAAA,EAAA,KAAA,GAAA,EAAA,MACA,MAzCA,OAAA,CAAA,eAAAN,EAAA,QAAAF,CAAA,CA2CA,CAKA,SAAAb,GACAF,EACAP,EACAI,EACAC,EACA,CACA,GACA,CAAAM,GAAA,GACAJ,EAAA,KAAAA,EAAA,IAAA,wBACA,EAAAA,EAAA,KAAAA,EAAA,IAAA,gBAAAP,EAAAO,EAAA,IAAA,eAAA,GAAA,GAEA,OAGA,IAAAwB,EAAAxB,EAAA,IAAA,eAGA,GAAAA,EAAA,aAAA,CACA,IAAAK,EAAAL,EAAA,IAAA,uBACA,GAAA,CAAAK,EAAA,OAEA,IAAAC,EAAAR,EAAAO,CAAA,EACAC,IACAA,EAAA,cAAAkB,EAAA,WAAA,EACAlB,EAAA,OAAA,EAGA,OAAAR,EAAAO,CAAA,GAEA,OAGA,IAAAE,EAAAC,EAAA,EAAA,SAAA,EACAC,EAAAF,GAAAA,EAAA,QAAA,EACAG,EAAAD,GAAAA,EAAA,YAEA,GAAAA,GAAAC,EAAA,CACA,IAAAJ,EAAAG,EAAA,WAAA,CACA,KAAA,CACA,GAAAe,EAAA,KACA,KAAA,MACA,OAAAA,EAAA,OACA,IAAAA,EAAA,GACA,EACA,YAAA,GAAAA,EAAA,UAAAA,EAAA,MACA,GAAA,aACA,CAAA,EAKA,GAHAxB,EAAA,IAAA,uBAAAM,EAAA,OACAR,EAAAE,EAAA,IAAA,sBAAA,EAAAM,EAEAN,EAAA,IAAA,kBAAAH,EAAAG,EAAA,IAAA,eAAA,GAAA,EACA,GAAA,CACAA,EAAA,IAAA,iBAAA,eAAAM,EAAA,cAAA,CAAA,EAEA,IAAAQ,EAAAJ,EAAA,0BAAA,EACAK,EAAAC,GAAAF,CAAA,EAEAC,GAIAf,EAAA,IAAA,iBAAAqB,GAAAN,CAAA,CAEA,MAAA,CAEA,EAGA,CC/VA,SAAAU,GACAC,EACAC,EAAA,GACAC,EAAA,GACA,CACA,GAAA,CAAAC,GAAA,CAAAA,EAAA,SAAA,EACA,OAAA,iBAAA,KAAA,mBAAAC,EAAA,KAAA,sEAAA,EACA,OAGA,IAAAC,EAAAF,EAAA,SAAA,KAEAG,EACAL,IACAK,EAAAN,EAAA,CACA,KAAAG,EAAA,SAAA,SACA,GAAA,WACA,SAAA,CAAA,OAAA,KAAA,CACA,CAAA,GAGAD,GACAK,EAAA,UAAA,CAAA,CAAA,GAAAC,EAAA,KAAAC,CAAA,IAAA,CAUA,GAAAA,IAAA,QAAAJ,GAAAA,EAAA,QAAAG,CAAA,IAAA,GAAA,CACAH,EAAA,OACA,OAGAI,IAAAD,IACAH,EAAA,OACAC,KACA,OAAA,iBAAA,KAAA,mBAAAF,EAAA,IAAA,oDAAAE,EAAA,IAAA,EAEAA,EAAA,OAAA,GAEAA,EAAAN,EAAA,CACA,KAAAG,EAAA,SAAA,SACA,GAAA,aACA,SAAA,CAAA,OAAA,KAAA,CACA,CAAA,EAEA,CAAA,CAEA,CC1CA,IAAAO,GAAA,iBAoHAC,GAAA,CACA,GAAAC,GACA,2BAAA,GACA,uBAAAC,GACA,iCAAA,GACA,2BAAA,GACA,eAAA,GACA,aAAA,CAAA,EACA,GAAAC,EACA,EASAC,GAAA,KAAA,CAYA,QAAA,CAAA,KAAA,KAAAL,EAAA,CASA,YAAAM,EAAA,CAAAD,GAAA,UAAA,OAAA,KAAA,IAAA,EACA,KAAA,QAAA,CACA,GAAAJ,GACA,GAAAK,CACA,EAIA,KAAA,QAAA,aAAA,iBAAA,SACA,KAAA,QAAA,eAAA,KAAA,QAAA,aAAA,gBAOAA,GAAA,CAAAA,EAAA,yBAAAA,EAAA,iBAEA,KAAA,QAAA,wBAAAA,EAAA,gBAGA,KAAA,kBAAAC,GAAA,EACA,KAAA,QAAA,gBACAC,GAAA,EAEA,KAAA,QAAA,aAAA,oBACAC,GAAA,CAEA,CAKA,UAAAC,EAAAC,EAAA,CACA,KAAA,eAAAA,EAEA,GAAA,CACA,uBAAAC,EACA,iCAAAC,EACA,2BAAAC,EACA,2BAAAC,EACA,WAAAC,EACA,SAAAC,EACA,wBAAAC,EACA,2BAAAC,EACA,aAAAC,CACA,EAAA,KAAA,QAEAR,EACAS,GAAA,CACA,IAAAC,EAAA,KAAA,wBAAAD,CAAA,EAEA,YAAA,QAAA,aAAA,yBACA,KAAA,QAAA,aAAA,wBAAAC,EAAAD,EAAAV,CAAA,EAEAW,CACA,EACAR,EACAD,CACA,EAEAE,GACAQ,GAAA,EAGAH,EAAA,oBACA,KAAA,6BAAA,EAGAI,GAAA,CACA,WAAAR,EACA,SAAAC,EACA,wBAAAC,EACA,2BAAAC,CACA,CAAA,CACA,CAGA,wBAAAE,EAAA,CACA,GAAA,CAAA,KAAA,eAAA,EACA,OAAA,iBAAA,KAAA,mBACAI,EAAA,KAAA,4BAAAJ,EAAA,mDAAA,EACA,OAGA,GAAA,CAAA,eAAAK,EAAA,YAAAC,EAAA,aAAAC,EAAA,kBAAAC,CAAA,EAAA,KAAA,QAEAC,EAAAT,EAAA,KAAA,WAEAU,EAAAD,EAAAE,GAAA,cAAA,EAAA,KACAC,EAAAH,EAAAE,GAAA,SAAA,EAAA,KAEAE,EAAAH,EAAAI,GAAAJ,CAAA,EAAA,OACAK,EAAAH,EACAI,GAAAJ,CAAA,EACA,OAEAK,EAAA,CACA,GAAAjB,EACA,GAAAa,EACA,SAAA,CACA,GAAAb,EAAA,SACA,uBAAAa,GAAA,CAAAE,EAAA,CAAA,EAAAA,CACA,EACA,QAAA,EACA,EAEAG,EAAA,OAAAb,GAAA,WAAAA,EAAAY,CAAA,EAAAA,EAIAE,EAAAD,IAAA,OAAA,CAAA,GAAAD,EAAA,QAAA,EAAA,EAAAC,EAGAC,EAAA,SACAA,EAAA,OAAAF,EAAA,KACA,CAAA,GAAAE,EAAA,SAAA,OAAA,QAAA,EACAA,EAAA,SAEA,KAAA,iBAAAA,EAAA,KACA,KAAA,mBAAAA,EAAA,UAAAA,EAAA,SAAA,OAEAA,EAAA,UAAA,KACA,OAAA,iBAAA,KAAA,mBACAf,EAAA,IAAA,2BAAAe,EAAA,2CAAA,GAGA,OAAA,iBAAA,KAAA,mBAAAf,EAAA,IAAA,sBAAAe,EAAA,yBAAA,EAEA,IAAAC,GAAA,KAAA,eAAA,EACA,CAAA,SAAAC,EAAA,EAAAC,EAEAC,GAAAC,GACAJ,GACAD,EACAb,EACAC,EACA,GACA,CAAA,SAAAc,EAAA,EACAb,CACA,EACA,OAAAe,GAAA,6BAAAtB,IAAA,CACA,KAAA,kBAAA,EACAwB,GAAAxB,EAAA,CACA,CAAA,EAEAsB,EACA,CAGA,8BAAA,CACA,IAAAG,EACAC,EAAA,IAAA,CACA,GAAA,CAAA,YAAArB,EAAA,aAAAC,EAAA,kBAAAC,CAAA,EAAA,KAAA,QAEAoB,EAAA,kBAMA,GALAF,IACAA,EAAA,OAAA,EACAA,EAAA,QAGA,CAAA,KAAA,eAAA,EACA,OAAA,iBAAA,KAAA,mBAAAtB,EAAA,KAAA,4BAAAwB,kDAAA,EACA,OAGA,GAAA,CAAA,KAAA,iBAAA,EACA,OAAA,iBAAA,KAAA,mBACAxB,EAAA,KAAA,4BAAAwB,oDAAA,EACA,OAGA,IAAAR,EAAA,KAAA,eAAA,EACA,CAAA,SAAAC,CAAA,EAAAC,EAEAtB,EAAA,CACA,KAAA,KAAA,iBACA,GAAA4B,EACA,QAAA,GACA,SAAA,CACA,OAAA,KAAA,oBAAA,KACA,CACA,EAEAF,EAAAF,GACAJ,EACApB,EACAM,EACAC,EACA,GACA,CAAA,SAAAc,CAAA,EACAb,CACA,CACA,EAEA,CAAA,OAAA,EAAA,QAAAqB,GAAA,CACA,iBAAAA,EAAAF,EAAA,CAAA,KAAA,GAAA,QAAA,EAAA,CAAA,CACA,CAAA,CACA,CACA,EAGA,SAAAhB,GAAAmB,EAAA,CAIA,IAAAC,EAAAC,GAAA,aAAAF,IAAA,EAEA,OAAAC,EAAAA,EAAA,aAAA,SAAA,EAAA,IACA,EC1VA,OAAA,mBAAA,KAAA,qBAEAE,GAAA,ECGA,IAAMC,GAAMC,GAAO,EACbC,GAAWC,GAAM,YAAY,EAC7BC,GAAS,IAAIC,GAAcL,EAAG,EAC9BM,GAAQ,CAAC,IAAK,KAAK,IAAI,EAAG,KAAM,CAAC,IAAAN,GAAK,SAAAE,EAAQ,CAAC,EACrDE,GAAO,MAAM,QAASE,EAAK,EAC3B,IAAMC,EAAMC,GAAO,KAAKF,GAAOF,EAAM,EAC/BK,GAAU,IAAIC,GAAQN,EAAM,EAC5BO,GAAU,IAAIC,GAAQZ,GAAKI,EAAM,EACvCA,GAAO,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAMgC,EAE5C,OAAO,QAAU,IAAIS,GAAWN,EAAKH,EAAM,EAIvC,kBAAmB,WAAaJ,KAAQc,GAAI,KAAK,MACjD,UAAU,cAAc,SAAS,oBAAoB,EAOzDP,EAAI,GAAG,QAASQ,GAAOZ,GAAM,eAAeY,EAAI,EAAE,EAAE,MAAM,CAAC,EAC3DR,EAAI,GAAG,YAAaQ,GAAOZ,GAAM,eAAeY,EAAI,EAAE,EAAE,cAAc,IAAI,MAAM,WAAW,CAAC,CAAC,EAC7FR,EAAI,GAAG,QAASQ,GAAOZ,GAAM,eAAeY,EAAI,EAAE,EAAE,MAAM,CAAC,EAC3DR,EAAI,GAAG,OAAQQ,GAAOZ,GAAM,eAAeY,EAAI,EAAE,EAAE,KAAK,CAAC,EACzDR,EAAI,GAAG,WAAYQ,GAAOZ,GAAM,iBAAiBY,EAAI,EAAE,EAAE,QAAQ,GAAK,EAAE,eAAeA,EAAI,WAAaC,GAAa,KAAK,GAAG,CAAC,CAAC,EAC/HT,EAAI,GAAG,aAAcQ,GAAOZ,GAAM,WAAWY,EAAI,EAAE,EAAE,KAAK,IAAMR,EAAI,YAAY,CAAC,CAAC,EAClFA,EAAI,GAAG,UAAWU,EAAO,EACzBV,EAAI,GAAG,kBAAmBQ,GAAI,CA5E9B,IAAAG,EA4EkC,OAAAA,EAAAf,GAAM,eAAeY,EAAI,EAAE,EAAE,cAA2B,aAAa,IAArE,YAAAG,EAAyE,QAAO,EAClHX,EAAI,GAAG,QAASQ,GAAOR,EAAI,MAAMQ,EAAI,MAAOA,EAAI,OAAO,CAAC,EACxDR,EAAI,GAAG,aAAcY,EAAU,EAC/BZ,EAAI,GAAG,mBAAoBa,EAAgB,EAC3Cb,EAAI,GAAG,mBAAoBc,EAAgB,EAC3Cd,EAAI,GAAG,gBAAiBe,EAAa,EACrCf,EAAI,GAAG,gBAAiBgB,EAAa,EAErChB,EAAI,GAAG,gBAAiBiB,EAAa,EACrCjB,EAAI,GAAG,eAAgBkB,EAAY,EACnClB,EAAI,GAAG,eAAgBQ,GAAOZ,GAAM,aAAaY,EAAI,SAAUA,EAAI,OAAO,CAAC,EAC3ER,EAAI,GAAG,eAAgBmB,EAAY,EACnCnB,EAAI,GAAG,gBAAiBoB,EAAa,EACrCpB,EAAI,GAAG,iBAAkBqB,EAAc,EACvCrB,EAAI,GAAG,eAAgBsB,EAAY,EACnCtB,EAAI,GAAG,aAAcuB,EAAa,EAClCvB,EAAI,GAAG,WAAYQ,GAAOZ,GAAM,eAAeY,EAAI,EAAE,CAAC,EACtDR,EAAI,GAAG,gBAAiBwB,GAAK5B,GAAM,oBAAoB,CAAC,EACxDI,EAAI,GAAG,YAAawB,GAAK5B,GAAM,gBAAgB,CAAC,EAChDI,EAAI,GAAG,QAASQ,GAAOJ,GAAQ,WAAWI,EAAI,KAAK,CAAC,EAChDR,EAAI,YAAY,EAAE,OAAS,GAAKP,KAAQc,GAAI,KAAK,MACjDV,GAAO,MAAM,gCAAgCG,EAAI,YAAY,EAAE,KAAK,IAAI,GAAG,EAG/E,SAASU,GAAQe,EAAe,CApGhC,IAAAd,EAAAe,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EA+GI,GAVI,OAAOR,EAAK,OAAU,WACtB,SAAS,MAAQA,EAAK,OACtBd,EAAA,SAAS,cAAc,2BAA2B,IAAlD,MAAAA,EAAqD,aAAa,UAAWc,EAAK,QAClFC,EAAA,SAAS,cAAc,4BAA4B,IAAnD,MAAAA,EAAsD,aAAa,UAAWD,EAAK,QAEnF,OAAOA,EAAK,aAAgB,YAC5BE,EAAA,SAAS,cAAc,0BAA0B,IAAjD,MAAAA,EAAoD,aAAa,UAAWF,EAAK,cACjFG,EAAA,SAAS,cAAc,iCAAiC,IAAxD,MAAAA,EAA2D,aAAa,UAAWH,EAAK,cACxFI,EAAA,SAAS,cAAc,kCAAkC,IAAzD,MAAAA,EAA4D,aAAa,UAAWJ,EAAK,cAEzF,OAAOA,EAAK,WAAc,SAAU,CACpC,IAAMS,EAAY,SAAS,cAAc,uBAAuB,EAChEA,EAAYA,EAAU,aAAa,OAAQT,EAAK,SAAS,EAAI,SAAS,KAAK,OAAO,+BAA+BA,EAAK,aAAa,GACnIK,EAAA,SAAS,cAAc,yBAAyB,IAAhD,MAAAA,EAAmD,aAAa,UAAWL,EAAK,YAChFM,EAAA,SAAS,cAAc,0BAA0B,IAAjD,MAAAA,EAAoD,aAAa,UAAWN,EAAK,WAEjF,OAAOA,EAAK,MAAS,YACrBO,EAAA,SAAS,qBAAqB,MAAM,EAAE,CAAC,IAAvC,MAAAA,EAA0C,aAAa,QAASP,EAAK,OAErE,OAAOA,EAAK,MAAS,YACrBQ,EAAA,SAAS,qBAAqB,MAAM,EAAE,CAAC,IAAvC,MAAAA,EAA0C,aAAa,QAASR,EAAK,MAE7E,CAEA,SAASb,GAAWJ,EAAiB,EAChCA,EAAI,UAAiB2B,GACdjC,GAAQ,WAAWM,EAAI,OAAO,EAAE,KAAK4B,GAAKC,GAAkB7B,EAAI,QAAS4B,CAAC,CAAC,EAC3EhC,GAAQ,WAAWI,EAAI,aAAcA,EAAI,QAASA,EAAI,KAAK,EAAE,KAAK8B,GAC1DA,EAAI,UAAYC,EAAe,KAAK,OAC7BC,GAAmBF,EAAKA,EAAI,OAAO,EACnCA,EAAI,UAAYC,EAAe,KAAK,MACpCrC,GAAQ,WAAWM,EAAI,OAAO,EAAE,KAAK4B,GAAKK,GAAkBH,EAAKF,CAAC,CAAC,EAEnE,QAAQ,OAAO,iBAAiB,CAE9C,GACP,KAAKM,GAAW1C,EAAI,WAAW0C,CAAO,EAAGC,GAAO,CAC1CA,EAAI,aAAe,IACnB,OAAO,SAAS,QAAQvC,GAAQ,SAAawC,GAAS,OAAO,QAAQ,CAAC,CAAC,GAEvEC,EAAY,qBAAsBF,CAAG,EACrC3C,EAAI,WAAW,MAAS,EAEhC,CAAC,CACL,CAEA,SAASa,GAAiBL,EAA6B,CACnD,IAAMsC,EAAOC,GAAiBvC,EAAI,OAAO,EACzCN,GAAQ,cAAmBiC,EAAI,EAC1B,KAAKX,GAAKtB,GAAQ,cAAmBiC,GAAMW,CAAI,CAAC,EAChD,KAAKtB,GAAKxB,EAAI,WAAWqC,GAAkB7B,EAAI,QAAQ,GAAIsC,CAAI,CAAC,EAC7DH,GAAOE,EAAY,2BAA4BF,CAAG,CAAC,CAC/D,CAEA,SAAS7B,GAAiBN,EAA6B,CACnD,IAAMsC,EAAOC,GAAiBvC,EAAI,OAAO,EACzCN,GAAQ,cAAmBiC,GAAMW,CAAI,EAChC,KAAKtB,GAAK,KAAMmB,GAAOE,EAAY,6BAA8BF,CAAG,CAAC,CAC9E,CAEA,SAAS5B,GAAcP,EAA0B,CAC7C,IAAMsC,EAAOC,GAAiBvC,EAAI,OAAO,EACrCA,EAAI,SAAW+B,EAAe,KAAK,MACnCnC,GAAQ,mBAAmBI,EAAI,aAAcsC,CAAI,EAAE,KAAKR,GAC7CpC,GAAQ,cAAcoC,EAAI,GAAIQ,CAAI,EAAE,KAAKtB,GAAKiB,GAAkBH,EAAKQ,CAAI,EAAGH,IAC/EE,EAAY,6BAA8BF,CAAG,EACtCvC,GAAQ,cAAcI,EAAI,aAAc8B,EAAI,EAAE,EAAE,KAAKd,GAAK,QAAQ,OAAOmB,CAAG,CAAC,EACvF,EACFA,IACCE,EAAY,gCAAiCF,CAAG,EACzC,QAAQ,OAAOA,CAAG,EAC5B,EAAE,KAAKP,GAEG,QAAQ,IAAI,CAAClC,GAAQ,cAAmBiC,EAAI,EAAGjC,GAAQ,cAAcM,EAAI,QAAQ,EAAE,CAAC,CAAC,EAAE,MAAMmC,IAChGE,EAAY,iCAAkCF,CAAG,EAC1C,QAAQ,QAAQ,EAC1B,EAAE,KAAKnB,GAAK,CACTxB,EAAI,MAAMgD,GAAW,KAAK,QAAS,kBAAkB,EACrD,OAAO,QAAQ,aAAa,GAAI,GAAI,IAAIxC,EAAI,gBAAgB4B,EAAE,IAAI,EAClEpC,EAAI,WAAWoC,CAAC,CACpB,CAAC,CACJ,EACM5B,EAAI,SAAW+B,EAAe,KAAK,OAC1CnC,GAAQ,oBAAoBI,EAAI,aAAcsC,CAAI,EAAE,KAAKV,GAE9C,QAAQ,IAAI,CAAClC,GAAQ,cAAmBiC,EAAI,EAAGjC,GAAQ,cAAcM,EAAI,QAAQ,EAAE,CAAC,CAAC,EAAE,MAAMmC,IAChGE,EAAY,iCAAkCF,CAAG,EAC1C,QAAQ,QAAQ,EAC1B,EAAE,KAAKnB,GAAK,CACTxB,EAAI,MAAMgD,GAAW,KAAK,QAAS,kBAAkB,EACrD,OAAO,QAAQ,aAAa,GAAI,GAAI,IAAIxC,EAAI,gBAAgB4B,EAAE,IAAI,EAClEpC,EAAI,WAAWwC,GAAmBJ,EAAGU,CAAI,CAAC,CAC9C,CAAC,EACFH,GAAOE,EAAY,gCAAiCF,CAAG,CAAC,EAE3DE,EAAY,yBAA0BrC,EAAI,OAAO,CAEzD,CAEA,SAASQ,GAAcR,EAA0B,CAC7C,IAAMsC,EAAOC,GAAiBvC,EAAI,OAAO,EACzC,GAAI,CAACA,EAAI,QAAQ,aAAc,OAAOqC,EAAY,6CAA6C,EAC3FrC,EAAI,QAAQ,SAAW+B,EAAe,KAAK,MAC3CnC,GAAQ,mBAAmBI,EAAI,OAAO,EAAE,KAAK8B,GAClCpC,GAAQ,cAAcoC,EAAI,GAAIQ,CAAI,EAAE,KAAKtB,GAAK,CACjDxB,EAAI,MAAMgD,GAAW,KAAK,QAAS,eAAe,EAClDhD,EAAI,WAAWyC,GAAkBH,EAAKQ,CAAI,CAAC,CAC/C,EAAGH,GAAOE,EAAY,+BAAgCF,CAAG,CAAC,EAC3DA,GAAOE,EAAY,kCAAmCF,CAAG,CAAC,EACtDnC,EAAI,QAAQ,SAAW+B,EAAe,KAAK,OAClDnC,GAAQ,oBAAoBI,EAAI,OAAO,EAAE,KAAK8B,GAAO,CACjDtC,EAAI,MAAMgD,GAAW,KAAK,QAAS,eAAe,EAClDhD,EAAI,WAAWwC,GAAmBF,EAAKQ,CAAI,CAAC,CAChD,EAAGH,GAAOE,EAAY,uBAAwBF,CAAG,CAAC,EAElDE,EAAY,yBAA0BrC,EAAI,QAAQ,OAAO,CAEjE,CAEA,SAASS,GAAcT,EAA0B,CACzCA,EAAI,QAAQ,aACZJ,GAAQ,cAAcI,EAAI,QAAQ,aAAa,GAAIA,EAAI,QAAQ,EAAE,EAAE,MAAMmC,IACrEE,EAAY,kCAAmCF,CAAG,EAC3C,QAAQ,OAAOA,CAAG,EAC5B,EAAE,KAAKnB,GAAK,CACT,GAAIhB,EAAI,QAAQ,SAAW+B,EAAe,KAAK,MAC3C,OAAOrC,GAAQ,cAAcM,EAAI,QAAQ,EAAE,EAAE,MAAMmC,IAC/CE,EAAY,+BAAgCF,CAAG,EACxC,QAAQ,OAAOA,CAAG,EAC5B,CAET,CAAC,EAAE,KAAKnB,GAAKhB,EAAI,SAAW,OAAO,SAAS,KAAOA,EAAI,SAAWR,EAAI,YAAYQ,EAAI,QAAQ,EAAE,CAAC,EAEjGN,GAAQ,cAAcM,EAAI,QAAQ,EAAE,EAAE,MAAMmC,IACxCE,EAAY,+BAAgCF,CAAG,EACxC,QAAQ,OAAOA,CAAG,EAC5B,EAAE,KAAKnB,GAAKhB,EAAI,SAAW,OAAO,SAAS,KAAOA,EAAI,SAAWR,EAAI,YAAYQ,EAAI,QAAQ,EAAE,CAAC,CAEzG,CAGA,OAAO,QAAU,GACjB,OAAO,iBAAiB,eAAgB,SAAUyC,EAAsB,CACpE,GAAI,OAAO,QAAS,CAChB,IAAMC,EAAU,4CAChB,OAAAD,EAAE,YAAcC,EACTA,EAEf,CAAC,EAED,SAAShC,GAAaV,EAAyB,CAC3C,OAAO,QAAUA,EAAI,KACzB,CAEA,SAASW,GAAaX,EAAmB,CACrC,IAAM2C,EAAS,IAAI,WACnBA,EAAO,OAAUF,GAAWjD,EAAI,aAAaQ,EAAKyC,EAAE,OAAO,MAAM,EACjEE,EAAO,WAAW3C,EAAI,IAAW,CACrC,CAEA,IAAM4C,GAAiD,CAAC,EAExD,SAAShC,GAAcZ,EAAoB,CACvC,IAAM6C,EAAM,GAAG7C,EAAI,UAAUA,EAAI,QAC7B4C,GAAgBC,CAAG,EACnBrD,EAAI,cAAcQ,EAAI,OAAQ4C,GAAgBC,CAAG,CAAC,EAElDjD,GAAQ,cAAcI,EAAI,SAAUA,EAAI,KAAK,EAAE,KAC3C8C,GAAStD,EAAI,cAAcQ,EAAI,OAAQ4C,GAAgBC,CAAG,EAAIC,CAAK,EACnEX,GAAOA,EAAI,aAAe,KAAOE,EAAY,uBAAuBrC,EAAI,QAASmC,CAAG,CACxF,CAER,CAEA,IAAMY,GAAmD,CAAC,EAE1D,SAASlC,GAAeb,EAAqB,CACzC,IAAM6C,EAAM,GAAG7C,EAAI,UAAUA,EAAI,OAAO,SAASA,EAAI,OAAO,SACxD+C,GAAiBF,CAAG,EACpBrD,EAAI,eAAeQ,EAAI,OAAQ+C,GAAiBF,CAAG,CAAC,EAEpDjD,GAAQ,eAAeI,EAAI,SAAUA,EAAI,MAAM,EAAE,KAC7C8C,GAAStD,EAAI,eAAeQ,EAAI,OAAQ+C,GAAiBF,CAAG,EAAIC,CAAK,EACrEX,GAAOA,EAAI,aAAe,KAAOE,EAAY,uBAAuBrC,EAAI,SAAUmC,CAAG,CACzF,CAER,CAEA,IAAMa,GAAiB,IAAI,eAAeC,GAAW,CACjDzD,EAAI,YAAYyD,EAAQ,IAAIC,GAAS,CACjC,IAAMC,EAAOD,EAAM,OAAO,sBAAsB,EAE1CE,EAAe,CAAC,MAAOD,EAAK,MAAO,OAAQA,EAAK,MAAM,EAC5D,MAAO,CACH,GAAID,EAAM,OAAO,GACjB,SAAU,CAAC,QAASC,EAAK,KAAM,QAASA,EAAK,GAAG,EAChD,KAAMC,EACN,MAAO,CAAC,GAAI,KAAK,OAAO,EAAG,GAAI,KAAK,OAAO,CAAC,CAChD,CACJ,CAAC,CAAC,CACN,CAAC,EAED,SAAStC,GAAad,EAAmB,CACrCA,EAAI,IAAI,QAAQqD,GAAM,CAClB,IAAMC,EAAM,SAAS,eAAeD,CAAE,EACtCC,EAAMN,GAAe,QAAQM,CAAG,EAAIC,GAAkBF,EAAI,EAAE,CAChE,CAAC,CACL,CAEA,SAASE,GAAkBF,EAAYG,EAA2B,CAC1DA,EAAoB,GACpB,WAAW,IAAM,CACb,IAAMF,EAAM,SAAS,eAAeD,CAAE,EACtCC,EAAMN,GAAe,QAAQM,CAAG,EAAIC,GAAkBF,EAAIG,EAAoB,CAAC,CACnF,EAAG,GAAG,CAEd,CAEA,IAAMC,GAA4D,CAAC,EAGnE,SAASC,GAAQJ,EAAc,CAC3B,OAAOA,EAAI,YAAc,SAAWA,EAAI,YAAc,UAC1D,CAEA,SAASK,GAAclB,EAAkB,CACrC,IAAMmB,EAASnB,EAAE,OACXoB,GAAWJ,GAAQhB,EAAE,GAAG,GAAK,CAAC,GAAG,OAAOqB,IAClC1E,GAAM,YAAY,IAAM2E,GAAS,KAAK,GAAKD,EAAO,OAASrB,EAAE,QAAUqB,EAAO,OAASrB,EAAE,WAC5F,CAACqB,EAAO,OAASrB,EAAE,WACnBqB,EAAO,MAAQrB,EAAE,SAChB,CAACqB,EAAO,SAAWA,EAAO,SAAW,CAACJ,GAAQE,CAAM,IACjDE,EAAO,SACH,CAACA,EAAO,OAAO,IAAMA,EAAO,OAAO,KAAOF,EAAO,MACjD,CAACE,EAAO,OAAO,OAASF,EAAO,UAAU,MAAM,GAAG,EAAE,SAASE,EAAO,OAAO,KAAK,KAChF,CAACA,EAAO,OAAO,KAAOA,EAAO,OAAO,MAAQF,EAAO,WACnE,EACDC,EAAQ,IAAIC,GAAU,CACdA,EAAO,gBAAgBrB,EAAE,eAAe,EAC5CjD,EAAI,UAAUsE,CAAM,CACxB,CAAC,EACGD,EAAQ,SAAW,GAAKpB,EAAE,MAAQ,UAAYiB,GAAQE,CAAM,GAAGA,EAAO,KAAK,CACnF,CAEA,SAAS7C,GAAcf,EAAiB,CACpC,OAAO,KAAKyD,EAAO,EAAE,QAAQZ,GAAOY,GAAQZ,CAAG,EAAI,CAAC,CAAC,EACrD,OAAO,QAAQ7C,EAAI,IAAI,EAAE,QAAQ,CAAC,CAACqD,EAAIW,CAAY,IAAM,CACrDA,EAAa,QAAQF,GAAU,CACtBL,GAAQK,EAAO,GAAG,IACnBL,GAAQK,EAAO,GAAG,EAAI,CAAC,GAE3BL,GAAQK,EAAO,GAAG,EAAE,KAAKG,GAAAC,GAAA,GAAIJ,GAAJ,CAAY,GAAAT,CAAE,EAAC,CAC5C,CAAC,CACL,CAAC,CACL,CAIA,IAAMc,GAAe,CAAC,KAAM,EAAK,EAEjC,SAASC,GAAe3B,EAAkB,CAClCA,EAAE,OAAS,UACP,CAAC0B,GAAa,MAAS1B,EAAE,OAAmB,YAAc,SAC1DjD,EAAI,WAAWiD,EAAE,KAAM,EAAI,EAE/B0B,GAAa,KAAO,GAE5B,CAEA,SAASE,GAAa5B,EAAkB,CAChCA,EAAE,OAAS,UACP0B,GAAa,MACb3E,EAAI,WAAWiD,EAAE,KAAM,EAAK,EAEhC0B,GAAa,KAAO,GAE5B,CAEA,SAAS9B,EAAYiC,EAAeC,EAAkB,CAC9CA,IAAU,QACVlF,GAAO,MAAMiF,CAAK,EAClB9E,EAAI,MAAMgD,GAAW,KAAK,MAAO8B,CAAK,IAEtCjF,GAAO,MAAMiF,EAAOC,CAAK,EACzB/E,EAAI,MAAMgD,GAAW,KAAK,MAAO,GAAG8B,MAAUE,GAAYD,CAAK,GAAG,EAE1E,CAKA,SAASE,GAAWhC,EAAe,CAC/B,IAAMmB,EAASnB,EAAE,OACXiC,EAAUtF,GAAM,WAAWwE,EAAQnB,GAAK,CAAC,CAACA,EAAE,aAAa,kBAAkB,CAAC,EAClF,GAAIiC,EAAS,CACT,IAAMC,EAAOD,EAAQ,aAAa,kBAAkB,GAAK,QACnDE,EAA0C,CAAC,OAAQF,EAAQ,aAAe,IAAI,KAAK,CAAC,EACpFG,EAAQH,EAAQ,WACtB,QAASI,EAAI,EAAGA,EAAID,EAAM,OAAQC,IAAK,CACnC,IAAMC,EAAOF,EAAMC,CAAC,EAChBC,EAAK,KAAK,WAAW,mBAAmB,IACxCH,EAAaG,EAAK,KAAK,QAAQ,oBAAqB,EAAE,CAAC,EAAIA,EAAK,OAGxE,IAA4C5E,EAAAyE,EAArC,cAAAI,EAAc,QAAA9C,CArZ7B,EAqZoD/B,EAAX8E,EAAAC,GAAW/E,EAAX,CAA1B,eAAc,YACrBP,GAAQ,WAAW,CAAC,KAAA+E,EAAM,QAAAM,EAAS,aAAAD,EAAc,QAAA9C,CAAO,CAAC,EAEjE,CAGA,SAAS,iBAAiB,QAAUO,GAAkB,CAClDgC,GAAWhC,CAAC,CAChB,CAAC,EACD,SAAS,iBAAiB,UAAYA,GAAqB,CACvDkB,GAAclB,CAAC,EACf2B,GAAe3B,CAAC,CACpB,CAAC,EACD,SAAS,iBAAiB,QAAUA,GAAqB,CACrD4B,GAAa5B,CAAC,CAClB,CAAC,EAEGxD,KAAQc,GAAI,KAAK,MACVoF,GAAK,CACR,IAAK,sFACL,aAAc,CAAC,IAAIC,EAAgB,EACnC,iBAAkB,CACtB,CAAC,EAGLC,GAAc",
  "names": ["require_lcs", "__commonJSMin", "exports", "compare", "reduce", "REMOVE", "RIGHT", "ADD", "DOWN", "SKIP", "a", "b", "cols", "rows", "prefix", "findPrefix", "suffix", "findSuffix", "remove", "matrix", "createMatrix", "j", "i", "backtrack", "f", "r", "lcs", "k", "op", "m", "l", "al", "bl", "start", "lastrow", "require_array", "__commonJSMin", "exports", "cons", "tail", "map", "x", "a", "l", "b", "i", "f", "require_jsonPointerParse", "__commonJSMin", "exports", "module", "jsonPointerParse", "parseRx", "separator", "escapeChar", "encodedSeparator", "path", "onSegment", "pos", "accum", "matches", "match", "require_jsonPointer", "__commonJSMin", "exports", "_parse", "find", "join", "absolute", "parse", "contains", "encodeSegment", "decodeSegment", "parseArrayIndex", "isValidArrayIndex", "separator", "separatorRx", "encodedSeparator", "encodedSeparatorRx", "escapeChar", "escapeRx", "encodedEscape", "encodedEscapeRx", "x", "path", "findContext", "context", "parent", "key", "hasContext", "segment", "findIndex", "segments", "a", "b", "s", "arrayIndexRx", "start", "array", "index", "require_clone", "__commonJSMin", "exports", "module", "clone", "x", "cloneArray", "cloneObject", "l", "y", "i", "keys", "k", "require_deepEquals", "__commonJSMin", "exports", "module", "deepEquals", "a", "b", "compareArrays", "compareObjects", "i", "akeys", "bkeys", "k", "require_commutePaths", "__commonJSMin", "exports", "module", "jsonPointer", "a", "b", "left", "right", "prefix", "getCommonPathPrefix", "isArray", "isArrayPath", "ac", "copyPatch", "bc", "commuteArrayPaths", "commuteTreePaths", "commuteArraySiblings", "commuteArrayAncestor", "index", "l", "lpath", "rpath", "target", "lindex", "rindex", "commuted", "direction", "rc", "p1", "p2", "p1l", "p2l", "p", "require_TestFailedError", "__commonJSMin", "exports", "module", "TestFailedError", "message", "require_InvalidPatchOperationError", "__commonJSMin", "exports", "module", "InvalidPatchOperationError", "message", "require_PatchNotInvertibleError", "__commonJSMin", "exports", "module", "PatchNotInvertibleError", "message", "require_patches", "__commonJSMin", "exports", "jsonPointer", "clone", "deepEquals", "commutePaths", "array", "TestFailedError", "InvalidPatchOperationError", "PatchNotInvertibleError", "find", "parseArrayIndex", "applyTest", "invertTest", "commuteTest", "applyAdd", "invertAdd", "commuteAddOrCopy", "applyRemove", "invertRemove", "commuteRemove", "applyReplace", "invertReplace", "commuteReplace", "applyMove", "invertMove", "commuteMove", "applyCopy", "notInvertible", "x", "test", "options", "pointer", "target", "index", "value", "pr", "b", "change", "notFound", "val", "_add", "isValidObject", "add", "context", "missingValue", "c", "i", "patch", "prev", "replace", "_remove", "removed", "remove", "pto", "pfrom", "move", "_", "require_jsonPatch", "__commonJSMin", "exports", "patches", "clone", "InvalidPatchOperationError", "patch", "patchInPlace", "isValidObject", "defaultHash", "defaultOptions", "changes", "x", "options", "p", "isArray", "require_inverse", "__commonJSMin", "exports", "module", "patches", "p", "pr", "i", "skip", "invertOp", "patch", "c", "context", "op", "require_jiff", "__commonJSMin", "exports", "lcs", "array", "patch", "inverse", "jsonPointer", "encodeSegment", "diff", "isValidObject", "defaultHash", "a", "b", "options", "appendChanges", "initState", "orElse", "isFunction", "defaultContext", "path", "state", "appendArrayChanges", "appendObjectChanges", "appendValueChanges", "o1", "o2", "keys", "i", "key", "keyPath", "p", "a1", "a2", "a1hash", "a2hash", "lcsMatrix", "lcsToJsonPatch", "offset", "op", "j", "last", "context", "predicate", "x", "y", "util", "val", "assertIs", "_arg", "assertNever", "_x", "items", "obj", "item", "validKeys", "k", "filtered", "e", "object", "keys", "key", "arr", "checker", "joinValues", "array", "separator", "_", "value", "objectUtil", "first", "second", "ZodParsedType", "getParsedType", "data", "ZodIssueCode", "quotelessJson", "ZodError", "issues", "sub", "subs", "actualProto", "_mapper", "mapper", "issue", "fieldErrors", "processError", "error", "curr", "i", "el", "formErrors", "errorMap", "_ctx", "message", "overrideErrorMap", "setErrorMap", "map", "getErrorMap", "makeIssue", "params", "path", "errorMaps", "issueData", "fullPath", "fullIssue", "errorMessage", "maps", "m", "EMPTY_PATH", "addIssueToContext", "ctx", "x", "ParseStatus", "status", "results", "arrayValue", "s", "INVALID", "pairs", "syncPairs", "pair", "finalObject", "DIRTY", "OK", "isAborted", "isDirty", "isValid", "isAsync", "errorUtil", "ParseInputLazyPath", "parent", "handleResult", "result", "processCreateParams", "invalid_type_error", "required_error", "description", "iss", "ZodType", "def", "input", "_a", "maybeAsyncResult", "check", "getIssueProperties", "setError", "refinementData", "refinement", "ZodEffects", "ZodFirstPartyTypeKind", "ZodOptional", "ZodNullable", "ZodArray", "ZodPromise", "option", "ZodUnion", "incoming", "ZodIntersection", "transform", "defaultValueFunc", "ZodDefault", "ZodBranded", "catchValueFunc", "ZodCatch", "This", "target", "ZodPipeline", "cuidRegex", "cuid2Regex", "ulidRegex", "uuidRegex", "emailRegex", "emojiRegex", "ipv4Regex", "ipv6Regex", "datetimeRegex", "args", "isValidIP", "ip", "version", "ZodString", "regex", "validation", "tooBig", "tooSmall", "options", "minLength", "maxLength", "len", "ch", "min", "max", "floatSafeRemainder", "step", "valDecCount", "stepDecCount", "decCount", "valInt", "stepInt", "ZodNumber", "kind", "inclusive", "ZodBigInt", "ZodBoolean", "ZodDate", "minDate", "maxDate", "ZodSymbol", "ZodUndefined", "ZodNull", "ZodAny", "ZodUnknown", "ZodNever", "ZodVoid", "schema", "deepPartialify", "ZodObject", "newShape", "fieldSchema", "ZodTuple", "shape", "shapeKeys", "extraKeys", "keyValidator", "unknownKeys", "catchall", "_b", "_c", "_d", "defaultError", "augmentation", "merging", "index", "mask", "newField", "createZodEnum", "handleResults", "unionErrors", "childCtx", "dirty", "types", "getDiscriminator", "type", "ZodLazy", "ZodLiteral", "ZodEnum", "ZodNativeEnum", "ZodDiscriminatedUnion", "discriminator", "discriminatorValue", "optionsMap", "discriminatorValues", "mergeValues", "a", "b", "aType", "bType", "bKeys", "sharedKeys", "newObj", "sharedValue", "newArray", "itemA", "itemB", "handleParsed", "parsedLeft", "parsedRight", "merged", "left", "right", "itemIndex", "rest", "schemas", "ZodRecord", "keyType", "valueType", "third", "ZodMap", "finalMap", "ZodSet", "finalizeSet", "elements", "parsedSet", "element", "minSize", "maxSize", "size", "ZodFunction", "makeArgsIssue", "makeReturnsIssue", "returns", "fn", "parsedArgs", "parsedReturns", "returnType", "func", "getter", "values", "expectedValues", "enumValues", "opt", "nativeEnumValues", "promisified", "effect", "processed", "checkCtx", "arg", "executeRefinement", "acc", "inner", "base", "preprocess", "newCtx", "ZodNaN", "BRAND", "inResult", "custom", "fatal", "p", "_fatal", "p2", "late", "instanceOfType", "cls", "stringType", "numberType", "nanType", "bigIntType", "booleanType", "dateType", "symbolType", "undefinedType", "nullType", "anyType", "unknownType", "neverType", "voidType", "arrayType", "objectType", "strictObjectType", "unionType", "discriminatedUnionType", "intersectionType", "tupleType", "recordType", "mapType", "setType", "functionType", "lazyType", "literalType", "enumType", "nativeEnumType", "promiseType", "effectsType", "optionalType", "nullableType", "preprocessType", "pipelineType", "ostring", "onumber", "oboolean", "coerce", "NEVER", "z", "Timestamp", "z", "DateTime", "Slug", "HtmlId", "DatabaseUrl", "FileName", "FileContent", "FileObject", "ViewPosition", "ToastLevel", "Platform", "Position", "PositionViewport", "Size", "Delta", "Color", "literalSchema", "Json", "Uuid", "z", "zero", "HerokuId", "Uuid", "HerokuResource", "z", "OrganizationId", "Uuid", "OrganizationSlug", "Slug", "OrganizationName", "z", "PlanId", "Plan", "Organization", "HerokuResource", "groupBy", "list", "getKey", "acc", "item", "key", "stringify", "value", "zod", "label", "validate", "res", "jsonErrors", "i", "issueToJson", "strErrors", "issueToString", "issue", "z", "pathToString", "k", "getValue", "o", "anyTrim", "path", "errorToJson", "error", "e", "getValue", "value", "path", "head", "tail", "anyTrim", "depth", "v", "key", "ProjectId", "Uuid", "ProjectSlug", "Slug", "ProjectName", "z", "SourceId", "SourceName", "TableId", "SchemaName", "TableName", "ColumnId", "ColumnName", "ColumnType", "ColumnValue", "Json", "Line", "LineIndex", "RelationName", "TypeName", "MemoId", "LayoutName", "ZoomLevel", "ProjectTokenId", "DatabaseConnection", "SqlLocalFile", "Timestamp", "SqlRemoteFile", "JsonLocalFile", "JsonRemoteFile", "AmlEditor", "SourceKind", "SourceOrigin", "Origin", "Comment", "Column", "PrimaryKey", "Unique", "Index", "Check", "Table", "ColumnRef", "Relation", "Type", "Source", "CanvasProps", "Position", "TableProps", "Size", "Color", "Memo", "Layout", "Settings", "ProjectStorage", "ProjectVisibility", "ProjectVersion", "Project", "Organization", "ProjectJson", "ProjectStats", "ProjectInfoLocal", "ProjectInfoRemote", "ProjectInfo", "isLocal", "p", "isRemote", "parseTableId", "id", "schema", "table", "buildProjectDraft", "_a", "_b", "_type", "__objRest", "validate", "__spreadProps", "__spreadValues", "buildProjectLocal", "info", "buildProjectRemote", "buildProjectJson", "organization", "storage", "visibility", "createdAt", "updatedAt", "computeStats", "tables", "groupBy", "s", "t", "types", "same", "acc", "cols", "src", "c", "l", "TableStats", "z", "SchemaName", "TableName", "ColumnValue", "ColumnStats", "ColumnName", "ColumnType", "TrackDetails", "z", "TrackEvent", "OrganizationId", "ProjectId", "ElementSize", "z", "HtmlId", "PositionViewport", "Size", "Delta", "HotkeyId", "Hotkey", "Click", "MouseDown", "Focus", "Blur", "ScrollTo", "ViewPosition", "Fullscreen", "SetMeta", "AutofocusWithin", "Toast", "ToastLevel", "GetProject", "OrganizationId", "ProjectId", "ProjectTokenId", "CreateProjectTmp", "Project", "UpdateProjectTmp", "CreateProject", "ProjectStorage", "UpdateProject", "MoveProjectTo", "DeleteProject", "ProjectInfo", "ProjectDirty", "DownloadFile", "FileName", "FileContent", "GetLocalFile", "SourceOrigin", "FileObject", "GetTableStats", "SourceId", "DatabaseUrl", "TableId", "GetColumnStats", "ColumnRef", "ObserveSizes", "ListenKeys", "Confetti", "ConfettiPride", "Fireworks", "Track", "TrackEvent", "ElmMsg", "GotSizes", "GotProject", "ProjectDeleted", "GotLocalFile", "GotTableStats", "TableStats", "GotColumnStats", "ColumnStats", "GotHotkey", "GotKeyHold", "GotToast", "GotTableShow", "Position", "GotTableHide", "GotTableToggleColumns", "GotTablePosition", "GotTableMove", "GotTableSelect", "GotTableColor", "Color", "GotColumnShow", "ColumnId", "GotColumnHide", "GotColumnMove", "GotFitToScreen", "Error", "JsMsg", "formatError", "err", "ElmApp", "elm", "logger", "event", "callback", "c", "sizes", "project", "id", "msg", "content", "source", "stats", "hotkey", "key", "start", "level", "message", "position", "delta", "color", "index", "_a", "valid", "validate", "ElmMsg", "calls", "call", "e", "ToastLevel", "formatError", "flags", "JsMsg", "AzimuttApi", "app", "logger", "project", "_a", "_b", "_c", "removedTables", "t", "s", "r", "tables", "acc", "__spreadProps", "__spreadValues", "id", "left", "top", "dx", "dy", "color", "index", "Env", "z", "getEnv", "Logger", "args", "ProxyLogger", "LoggerLevel", "ConsoleLogger", "env", "Env", "z", "underlying", "disabled", "loadPolyfills", "search", "start", "c", "consoleLog", "args", "msg", "module", "main", "global", "isWorker", "workerSize", "canUseWorker", "noop", "promise", "func", "ModulePromise", "Prom", "raf", "TIME", "frame", "cancel", "frames", "lastFrameTime", "cb", "id", "onFrame", "time", "timer", "getWorker", "worker", "prom", "resolves", "decorate", "execute", "options", "callback", "canvas", "offscreen", "size", "done", "resolve", "workerDone", "msg", "code", "e", "defaults", "convert", "val", "transform", "isOk", "prop", "name", "onlyPositiveInt", "number", "randomInt", "min", "max", "toDecimal", "str", "colorsToRgb", "colors", "hexToRgb", "getOrigin", "origin", "setCanvasWindowSize", "setCanvasRectSize", "rect", "getCanvas", "zIndex", "ellipse", "context", "x", "y", "radiusX", "radiusY", "rotation", "startAngle", "endAngle", "antiClockwise", "randomPhysics", "opts", "radAngle", "radSpread", "updateFetti", "fetti", "progress", "x1", "y1", "x2", "y2", "rot", "innerRadius", "outerRadius", "spikes", "step", "animate", "fettis", "resizer", "animatingFettis", "animationFrame", "destroy", "onDone", "update", "confettiCannon", "globalOpts", "isLibCanvas", "allowResize", "globalDisableForReducedMotion", "shouldUseWorker", "initialized", "preferLessMotion", "animationObj", "fireLocal", "particleCount", "angle", "spread", "startVelocity", "decay", "gravity", "drift", "ticks", "shapes", "scalar", "temp", "startX", "startY", "fire", "disableForReducedMotion", "onResize", "obj", "defaultFire", "getDefaultFire", "confetti_module_default", "create", "Utils", "Platform", "id", "elem", "elt", "parents", "parent", "predicate", "element", "_", "_a", "filename", "content", "rect", "left", "top", "confetti_module_default", "end", "colors", "frame", "animationEnd", "defaults", "randomInRange", "min", "max", "interval", "timeLeft", "particleCount", "_IndexedDBStorage", "db", "logger", "id", "store", "p", "project", "reqToPromise", "__spreadProps", "__spreadValues", "validate", "ProjectJson", "_", "resolve", "reject", "openRequest", "event", "mode", "removeId", "e", "err", "IndexedDBStorage", "value", "_a", "__objRest", "req", "parse", "value", "v", "formatError", "LocalStorageStorage", "logger", "id", "p", "key", "value", "validate", "parse", "ProjectJson", "e", "formatError", "stringify", "InMemoryStorage", "logger", "projects", "id", "validate", "ProjectJson", "p", "successes", "arr", "acc", "promise", "res", "p", "_", "Storage", "logger", "id", "s", "e", "p", "_", "successes", "IndexedDBStorage", "LocalStorageStorage", "InMemoryStorage", "getJson", "url", "zod", "label", "buildJsonResponse", "postJson", "body", "fetchJson", "postNoContent", "fetchNoContent", "postMultipart", "fetchMultipart", "putJson", "putMultipart", "deleteNoContent", "buildNoContentResponse", "method", "res", "v", "validate", "parse", "err", "jiff", "Backend", "env", "logger", "currentUrl", "o", "p", "t", "__async", "project", "ProjectStorage", "token", "url", "getJson", "ProjectWithContentResponse", "toProjectInfoWithContent", "json", "postJson", "toProjectBody", "ProjectResponse", "toProjectInfo", "res", "isLocal", "formData", "_", "value", "key", "encodeContent", "postMultipart", "isRemote", "_a", "buildProjectJson", "putJson", "initial", "current", "patch", "e", "putMultipart", "deleteNoContent", "database", "id", "schema", "table", "parseTableId", "TableStats", "column", "ColumnStats", "event", "postNoContent", "path", "Env", "ProjectStatsResponse", "z", "OrganizationResponse", "OrganizationId", "OrganizationSlug", "Plan", "HerokuResource", "ProjectId", "ProjectSlug", "ProjectName", "ProjectVersion", "ProjectVisibility", "DateTime", "toStats", "s", "toStatsResponse", "storage", "__spreadValues", "computeStats", "toOrganization", "__spreadProps", "decodeContent", "stringify", "ProjectJson", "content", "validate", "parse", "relative", "l", "objectToString", "isError", "wat", "isInstanceOf", "isBuiltin", "className", "isErrorEvent", "isDOMError", "isDOMException", "isString", "isPrimitive", "isPlainObject", "isEvent", "isElement", "isRegExp", "isThenable", "isSyntheticEvent", "isNaN", "base", "isGlobalObj", "obj", "GLOBAL_OBJ", "getGlobalObject", "getGlobalSingleton", "name", "creator", "gbl", "__SENTRY__", "WINDOW", "getGlobalObject", "DEFAULT_MAX_STRING_LENGTH", "htmlTreeAsString", "elem", "options", "currentElem", "MAX_TRAVERSE_HEIGHT", "out", "height", "len", "separator", "sepLength", "nextStr", "keyAttrs", "maxStringLength", "_htmlElementAsString", "el", "className", "classes", "key", "attr", "i", "keyAttrPairs", "keyAttr", "keyAttrPair", "isString", "allowedAttrs", "getLocationHref", "getDomElement", "selector", "SentryError", "message", "logLevel", "DSN_REGEX", "isValidProtocol", "protocol", "dsnToString", "dsn", "withPassword", "host", "path", "pass", "port", "projectId", "publicKey", "dsnFromString", "str", "match", "SentryError", "lastPath", "split", "projectMatch", "dsnFromComponents", "components", "validateDsn", "component", "makeDsn", "from", "PREFIX", "CONSOLE_LEVELS", "consoleSandbox", "callback", "GLOBAL_OBJ", "originalConsole", "wrappedLevels", "level", "originalWrappedFunc", "makeLogger", "enabled", "logger", "name", "args", "getGlobalSingleton", "truncate", "str", "max", "safeJoin", "input", "delimiter", "output", "i", "value", "isMatchingPattern", "pattern", "requireExactStringMatch", "isString", "isRegExp", "stringMatchesSomePattern", "testString", "patterns", "fill", "source", "name", "replacementFactory", "original", "wrapped", "markFunctionWrapped", "addNonEnumerableProperty", "obj", "value", "proto", "getOriginalFunction", "func", "urlEncode", "object", "key", "convertToPlainObject", "isError", "getOwnProperties", "isEvent", "newObj", "serializeEventTarget", "isInstanceOf", "target", "isElement", "htmlTreeAsString", "extractedProps", "property", "extractExceptionKeysForMessage", "exception", "maxLength", "keys", "truncate", "includedKeys", "serialized", "dropUndefinedKeys", "inputValue", "_dropUndefinedKeys", "memoizationMap", "isPlainObject", "memoVal", "returnValue", "item", "createStackParser", "parsers", "sortedParsers", "a", "b", "p", "stack", "skipFirst", "frames", "line", "cleanedLine", "parser", "frame", "stripSentryFramesAndReverse", "stackParserFromStackParserOptions", "stackParser", "localStack", "firstFrameFunction", "lastFrameFunction", "defaultFunctionName", "getFunctionName", "fn", "WINDOW", "getGlobalObject", "supportsFetch", "WINDOW", "isNativeFetch", "func", "supportsNativeFetch", "result", "doc", "sandbox", "err", "logger", "supportsHistory", "chrome", "WINDOW", "isChromePackagedApp", "hasHistoryApi", "WINDOW", "getGlobalObject", "handlers", "instrumented", "instrument", "type", "instrumentConsole", "instrumentDOM", "instrumentXHR", "instrumentFetch", "instrumentHistory", "instrumentError", "instrumentUnhandledRejection", "logger", "addInstrumentationHandler", "callback", "triggerHandlers", "data", "handler", "e", "getFunctionName", "CONSOLE_LEVELS", "level", "fill", "originalConsoleMethod", "args", "supportsNativeFetch", "originalFetch", "handlerData", "getFetchMethod", "getFetchUrl", "response", "error", "fetchArgs", "isInstanceOf", "xhrproto", "originalOpen", "xhr", "url", "xhrInfo", "isString", "onreadystatechangeHandler", "original", "readyStateArgs", "originalSend", "lastHref", "supportsHistory", "oldOnPopState", "to", "from", "historyReplacementFunction", "originalHistoryFunction", "debounceDuration", "debounceTimerID", "lastCapturedEvent", "shouldShortcircuitPreviousDebounce", "previous", "current", "shouldSkipDOMEvent", "event", "target", "makeDOMEventHandler", "globalListener", "name", "triggerDOMHandler", "globalDOMEventHandler", "proto", "originalAddEventListener", "listener", "options", "el", "handlerForType", "originalRemoveEventListener", "_oldOnErrorHandler", "msg", "line", "column", "_oldOnUnhandledRejectionHandler", "memoBuilder", "hasWeakSet", "inner", "memoize", "obj", "unmemoize", "uuid4", "gbl", "GLOBAL_OBJ", "crypto", "getRandomByte", "c", "getFirstException", "event", "getEventDescription", "message", "eventId", "firstException", "addExceptionTypeValue", "value", "type", "exception", "values", "addExceptionMechanism", "newMechanism", "defaultMechanism", "currentMechanism", "mergedData", "checkOrSetAlreadyCaught", "exception", "addNonEnumerableProperty", "arrayify", "maybeArray", "isBrowserBundle", "getSDKSource", "isNodeEnv", "isBrowserBundle", "dynamicRequire", "mod", "request", "loadModule", "moduleName", "cwd", "normalize", "input", "depth", "maxProperties", "visit", "err", "normalizeToSize", "object", "maxSize", "normalized", "jsonSize", "key", "value", "memo", "memoBuilder", "memoize", "unmemoize", "isNaN", "stringified", "stringifyValue", "overriddenDepth", "valueWithToJSON", "jsonValue", "numAdded", "visitable", "convertToPlainObject", "visitKey", "visitValue", "isSyntheticEvent", "getFunctionName", "getConstructorName", "prototype", "utf8Length", "States", "RESOLVED", "REJECTED", "resolvedSyncPromise", "value", "SyncPromise", "resolve", "rejectedSyncPromise", "reason", "_", "reject", "executor", "e", "onfulfilled", "onrejected", "result", "val", "onfinally", "isRejected", "state", "isThenable", "cachedHandlers", "handler", "makePromiseBuffer", "limit", "buffer", "isReady", "remove", "task", "add", "taskProducer", "rejectedSyncPromise", "SentryError", "drain", "timeout", "SyncPromise", "resolve", "reject", "counter", "capturedSetTimeout", "item", "resolvedSyncPromise", "parseUrl", "url", "match", "query", "fragment", "validSeverityLevels", "severityLevelFromString", "level", "validSeverityLevels", "WINDOW", "getGlobalObject", "dateTimestampSource", "getBrowserPerformance", "performance", "timeOrigin", "getNodePerformance", "dynamicRequire", "platformPerformance", "isNodeEnv", "timestampSource", "dateTimestampInSeconds", "timestampInSeconds", "timestampWithMs", "_browserPerformanceTimeOriginMode", "browserPerformanceTimeOrigin", "performance", "WINDOW", "threshold", "performanceNow", "dateNow", "timeOriginDelta", "timeOriginIsReliable", "navigationStart", "navigationStartDelta", "navigationStartIsReliable", "TRACEPARENT_REGEXP", "extractTraceparentData", "traceparent", "matches", "parentSampled", "createEnvelope", "headers", "items", "addItemToEnvelope", "envelope", "newItem", "forEachEnvelopeItem", "callback", "envelopeItems", "envelopeItem", "envelopeItemType", "encodeUTF8", "input", "textEncoder", "serializeEnvelope", "envelope", "envHeaders", "items", "parts", "append", "next", "item", "itemHeaders", "payload", "stringifiedPayload", "normalize", "concatBuffers", "buffers", "totalLength", "acc", "buf", "merged", "offset", "buffer", "createAttachmentEnvelopeItem", "attachment", "textEncoder", "buffer", "encodeUTF8", "dropUndefinedKeys", "ITEM_TYPE_TO_DATA_CATEGORY_MAP", "envelopeItemTypeToDataCategory", "type", "getSdkMetadataForEnvelopeHeader", "metadataOrEvent", "name", "version", "createEventEnvelopeHeaders", "event", "sdkInfo", "tunnel", "dsn", "dynamicSamplingContext", "dsnToString", "createClientReportEnvelope", "discarded_events", "dsn", "timestamp", "clientReportItem", "dateTimestampInSeconds", "createEnvelope", "parseRetryAfterHeader", "header", "now", "headerDelay", "headerDate", "disabledUntil", "limits", "category", "isRateLimited", "updateRateLimits", "statusCode", "headers", "updatedRateLimits", "rateLimitHeader", "retryAfterHeader", "limit", "retryAfter", "categories", "delay", "BAGGAGE_HEADER_NAME", "SENTRY_BAGGAGE_KEY_PREFIX", "SENTRY_BAGGAGE_KEY_PREFIX_REGEX", "MAX_BAGGAGE_STRING_LENGTH", "baggageHeaderToDynamicSamplingContext", "baggageHeader", "isString", "baggageObject", "acc", "curr", "currBaggageObject", "baggageHeaderToObject", "dynamicSamplingContext", "key", "value", "nonPrefixedKey", "dynamicSamplingContextToSentryBaggageHeader", "sentryPrefixedDSC", "dscKey", "dscValue", "objectToBaggageHeader", "baggageEntry", "keyOrValue", "object", "objectKey", "objectValue", "currentIndex", "newBaggageHeader", "logger", "DEFAULT_ENVIRONMENT", "makeSession", "context", "startingTime", "timestampInSeconds", "session", "uuid4", "sessionToJSON", "updateSession", "duration", "closeSession", "status", "dropUndefinedKeys", "DEFAULT_MAX_BREADCRUMBS", "Scope", "scope", "newScope", "callback", "user", "updateSession", "requestSession", "tags", "key", "value", "extras", "extra", "fingerprint", "level", "name", "context", "span", "session", "captureContext", "updatedScope", "isPlainObject", "breadcrumb", "maxBreadcrumbs", "maxCrumbs", "mergedBreadcrumb", "dateTimestampInSeconds", "attachment", "event", "hint", "transactionName", "getGlobalEventProcessors", "newData", "processors", "index", "SyncPromise", "resolve", "reject", "processor", "result", "logger", "isThenable", "final", "arrayify", "getGlobalSingleton", "addGlobalEventProcessor", "API_VERSION", "DEFAULT_BREADCRUMBS", "Hub", "client", "scope", "Scope", "_version", "version", "top", "callback", "exception", "hint", "eventId", "uuid4", "syntheticException", "message", "level", "event", "breadcrumb", "beforeBreadcrumb", "maxBreadcrumbs", "mergedBreadcrumb", "dateTimestampInSeconds", "finalBreadcrumb", "consoleSandbox", "user", "tags", "extras", "key", "value", "extra", "name", "context", "oldHub", "makeMain", "integration", "logger", "customSamplingContext", "endSession", "layer", "session", "closeSession", "release", "environment", "DEFAULT_ENVIRONMENT", "userAgent", "GLOBAL_OBJ", "makeSession", "currentSession", "updateSession", "options", "method", "args", "sentry", "getMainCarrier", "hub", "registry", "getHubFromCarrier", "setHubOnCarrier", "getCurrentHub", "hasHubOnCarrier", "isNodeEnv", "getHubFromActiveDomain", "activeDomain", "registryHubTopStack", "carrier", "getGlobalSingleton", "__SENTRY__", "hasTracingEnabled", "maybeOptions", "client", "getCurrentHub", "options", "SpanRecorder", "maxlen", "span", "Span", "uuid4", "timestampWithMs", "spanContext", "childSpan", "opStr", "nameStr", "idStr", "logMessage", "logger", "key", "value", "httpStatus", "spanStatus", "spanStatusfromHttpCode", "endTimestamp", "sampledString", "dropUndefinedKeys", "Transaction", "SpanClass", "transactionContext", "hub", "getCurrentHub", "incomingDynamicSamplingContext", "newName", "name", "source", "maxlen", "SpanRecorder", "key", "context", "value", "unit", "newMetadata", "endTimestamp", "logger", "client", "finishedSpans", "s", "prev", "current", "metadata", "transaction", "spanContext", "dropUndefinedKeys", "environment", "release", "public_key", "maybeSampleRate", "sample_rate", "scope", "user_segment", "DEFAULT_ENVIRONMENT", "TRACING_DEFAULTS", "IdleTransactionSpanRecorder", "SpanRecorder", "_pushActivity", "_popActivity", "transactionSpanId", "maxlen", "span", "endTimestamp", "timestampWithMs", "IdleTransaction", "Transaction", "transactionContext", "_idleHub", "_idleTimeout", "_finalTimeout", "_heartbeatInterval", "_onScope", "clearActiveTransaction", "logger", "scope", "callback", "keepSpan", "pushActivity", "id", "popActivity", "restartOnChildSpanChange", "spanId", "heartbeatString", "hub", "traceHeaders", "scope", "span", "sample", "transaction", "options", "samplingContext", "hasTracingEnabled", "sampleRate", "isValidSampleRate", "logger", "rate", "isNaN", "_startTransaction", "transactionContext", "customSamplingContext", "client", "configInstrumenter", "transactionInstrumenter", "Transaction", "startIdleTransaction", "hub", "idleTimeout", "finalTimeout", "onScope", "heartbeatInterval", "IdleTransaction", "addTracingExtensions", "carrier", "getMainCarrier", "getActiveTransaction", "maybeHub", "scope", "getCurrentHub", "captureException", "exception", "captureContext", "getCurrentHub", "withScope", "callback", "getCurrentHub", "SENTRY_API_VERSION", "getBaseApiEndpoint", "dsn", "protocol", "port", "_getIngestEndpoint", "_encodedAuth", "sdkInfo", "urlEncode", "getEnvelopeEndpointWithUrlEncodedAuth", "tunnelOrOptions", "tunnel", "enhanceEventWithSdkInfo", "event", "sdkInfo", "createSessionEnvelope", "session", "dsn", "metadata", "tunnel", "getSdkMetadataForEnvelopeHeader", "envelopeHeaders", "dsnToString", "envelopeItem", "createEnvelope", "createEventEnvelope", "eventType", "createEventEnvelopeHeaders", "installedIntegrations", "filterDuplicates", "integrations", "integrationsByName", "currentInstance", "name", "existingInstance", "k", "getIntegrationsToSetup", "options", "defaultIntegrations", "userIntegrations", "integration", "arrayify", "finalIntegrations", "debugIndex", "debugInstance", "setupIntegrations", "integrationIndex", "setupIntegration", "addGlobalEventProcessor", "getCurrentHub", "logger", "prepareEvent", "options", "event", "hint", "scope", "normalizeDepth", "normalizeMaxBreadth", "prepared", "uuid4", "dateTimestampInSeconds", "integrations", "i", "applyClientOptions", "applyIntegrationsMetadata", "applyDebugMetadata", "finalScope", "Scope", "result", "resolvedSyncPromise", "attachments", "evt", "normalizeEvent", "environment", "release", "dist", "maxValueLength", "DEFAULT_ENVIRONMENT", "truncate", "exception", "request", "stackParser", "debugIdMap", "GLOBAL_OBJ", "absPathDebugIdMap", "acc", "debugIdStackTrace", "parsedStack", "stackFrame", "errorAbsPaths", "frame", "images", "absPath", "integrationNames", "depth", "maxBreadth", "normalized", "b", "normalize", "span", "ALREADY_SEEN_ERROR", "BaseClient", "options", "makeDsn", "url", "getEnvelopeEndpointWithUrlEncodedAuth", "logger", "exception", "hint", "scope", "checkOrSetAlreadyCaught", "eventId", "event", "result", "message", "level", "promisedEvent", "isPrimitive", "session", "updateSession", "timeout", "transport", "clientFinished", "transportFlushed", "resolvedSyncPromise", "setupIntegrations", "integrationId", "integration", "setupIntegration", "env", "createEventEnvelope", "attachment", "addItemToEnvelope", "createAttachmentEnvelopeItem", "createSessionEnvelope", "reason", "category", "_event", "key", "hook", "callback", "rest", "crashed", "errored", "exceptions", "ex", "mechanism", "sessionNonTerminal", "SyncPromise", "resolve", "ticked", "tick", "interval", "integrations", "prepareEvent", "finalEvent", "sentryError", "sampleRate", "rejectedSyncPromise", "SentryError", "isTransaction", "isTransactionEvent", "isError", "isErrorEvent", "eventType", "beforeSendLabel", "dataCategory", "prepared", "processBeforeSend", "_validateBeforeSendResult", "processedEvent", "transactionInfo", "source", "promise", "value", "envelope", "outcomes", "beforeSendResult", "invalidValueError", "isThenable", "isPlainObject", "e", "beforeSend", "beforeSendTransaction", "initAndBind", "clientClass", "options", "logger", "hub", "getCurrentHub", "scope", "client", "DEFAULT_TRANSPORT_BUFFER_SIZE", "createTransport", "options", "makeRequest", "buffer", "makePromiseBuffer", "rateLimits", "flush", "timeout", "send", "envelope", "filteredEnvelopeItems", "forEachEnvelopeItem", "item", "type", "envelopeItemDataCategory", "envelopeItemTypeToDataCategory", "isRateLimited", "event", "getEventForEnvelopeItem", "resolvedSyncPromise", "filteredEnvelope", "createEnvelope", "recordEnvelopeLoss", "reason", "requestTask", "serializeEnvelope", "response", "logger", "updateRateLimits", "error", "result", "SentryError", "SDK_VERSION", "integrations_exports", "__export", "FunctionToString", "InboundFilters", "originalFunctionToString", "FunctionToString", "args", "context", "getOriginalFunction", "DEFAULT_IGNORE_ERRORS", "InboundFilters", "_options", "addGlobalEventProcessor", "getCurrentHub", "eventProcess", "event", "hub", "self", "client", "clientOptions", "options", "_mergeOptions", "_shouldDropEvent", "internalOptions", "_isSentryError", "logger", "getEventDescription", "_isIgnoredError", "_isDeniedUrl", "_getEventFilterUrl", "_isAllowedUrl", "ignoreErrors", "_getPossibleEventMessages", "message", "stringMatchesSomePattern", "denyUrls", "url", "allowUrls", "type", "value", "_getLastValidUrl", "frames", "i", "frame", "WINDOW", "GLOBAL_OBJ", "ignoreOnError", "shouldIgnoreOnError", "ignoreNextOnError", "wrap", "fn", "options", "before", "wrapper", "getOriginalFunction", "sentryWrapped", "args", "wrappedArguments", "arg", "ex", "withScope", "scope", "event", "addExceptionTypeValue", "addExceptionMechanism", "captureException", "property", "markFunctionWrapped", "addNonEnumerableProperty", "exceptionFromError", "stackParser", "ex", "frames", "parseStackFrames", "exception", "extractMessage", "eventFromPlainObject", "syntheticException", "isUnhandledRejection", "client", "getCurrentHub", "normalizeDepth", "event", "isEvent", "extractExceptionKeysForMessage", "normalizeToSize", "eventFromError", "stacktrace", "popSize", "getPopSize", "reactMinifiedRegexp", "message", "eventFromException", "hint", "attachStacktrace", "eventFromUnknownInput", "addExceptionMechanism", "resolvedSyncPromise", "eventFromMessage", "level", "eventFromString", "isErrorEvent", "isDOMError", "isDOMException", "domException", "name", "addExceptionTypeValue", "isError", "isPlainObject", "input", "MAX_ALLOWED_STRING_LENGTH", "BREADCRUMB_INTEGRATION_ID", "Breadcrumbs", "options", "addInstrumentationHandler", "_consoleBreadcrumb", "_domBreadcrumb", "_xhrBreadcrumb", "_fetchBreadcrumb", "_historyBreadcrumb", "event", "getCurrentHub", "getEventDescription", "dom", "_innerDomBreadcrumb", "handlerData", "target", "keyAttrs", "maxStringLength", "logger", "_isEvent", "htmlTreeAsString", "i", "breadcrumb", "severityLevelFromString", "safeJoin", "method", "url", "status_code", "body", "from", "to", "parsedLoc", "parseUrl", "WINDOW", "parsedFrom", "parsedTo", "BrowserClient", "BaseClient", "options", "sdkSource", "WINDOW", "getSDKSource", "SDK_VERSION", "exception", "hint", "eventFromException", "message", "level", "eventFromMessage", "event", "breadcrumbIntegration", "BREADCRUMB_INTEGRATION_ID", "scope", "outcomes", "logger", "url", "getEnvelopeEndpointWithUrlEncodedAuth", "envelope", "createClientReportEnvelope", "dsnToString", "serializeEnvelope", "e", "cachedFetchImpl", "getNativeFetchImplementation", "isNativeFetch", "WINDOW", "document", "fetchImpl", "sandbox", "contentWindow", "e", "logger", "clearCachedFetchImplementation", "makeFetchTransport", "options", "nativeFetch", "getNativeFetchImplementation", "makeRequest", "request", "requestOptions", "response", "e", "clearCachedFetchImplementation", "rejectedSyncPromise", "createTransport", "XHR_READYSTATE_DONE", "makeXHRTransport", "options", "makeRequest", "request", "SyncPromise", "resolve", "reject", "xhr", "header", "createTransport", "UNKNOWN_FUNCTION", "CHROME_PRIORITY", "WINJS_PRIORITY", "GECKO_PRIORITY", "createFrame", "filename", "func", "lineno", "colno", "frame", "chromeRegex", "chromeEvalRegex", "chrome", "line", "parts", "subMatch", "extractSafariExtensionDetails", "UNKNOWN_FUNCTION", "chromeStackLineParser", "geckoREgex", "geckoEvalRegex", "gecko", "geckoStackLineParser", "winjsRegex", "winjs", "winjsStackLineParser", "defaultStackLineParsers", "chromeStackLineParser", "geckoStackLineParser", "winjsStackLineParser", "defaultStackParser", "createStackParser", "extractSafariExtensionDetails", "func", "filename", "isSafariExtension", "isSafariWebExtension", "UNKNOWN_FUNCTION", "GlobalHandlers", "_installGlobalOnErrorHandler", "_installGlobalOnUnhandledRejectionHandler", "options", "key", "installFunc", "globalHandlerLog", "addInstrumentationHandler", "data", "hub", "stackParser", "attachStacktrace", "getHubAndOptions", "msg", "url", "line", "column", "error", "shouldIgnoreOnError", "event", "isString", "_eventFromIncompleteOnError", "_enhanceEventWithInitialFrame", "eventFromUnknownInput", "addMechanismAndCapture", "e", "isPrimitive", "_eventFromRejectionWithPrimitive", "reason", "ERROR_TYPES_RE", "message", "isErrorEvent", "name", "groups", "ev", "ev0", "ev0s", "ev0sf", "colno", "lineno", "filename", "getLocationHref", "type", "logger", "addExceptionMechanism", "getCurrentHub", "client", "DEFAULT_EVENT_TARGET", "TryCatch", "options", "fill", "WINDOW", "_wrapTimeFunction", "_wrapRAF", "_wrapXHR", "eventTargetOption", "_wrapEventTarget", "original", "args", "originalCallback", "wrap", "getFunctionName", "callback", "originalSend", "xhr", "prop", "wrapOptions", "originalFunction", "getOriginalFunction", "target", "globalObject", "proto", "eventName", "fn", "originalRemoveEventListener", "wrappedEventHandler", "originalEventHandler", "DEFAULT_KEY", "DEFAULT_LIMIT", "LinkedErrors", "options", "client", "getCurrentHub", "addGlobalEventProcessor", "event", "hint", "self", "_handler", "parser", "key", "limit", "isInstanceOf", "linkedErrors", "_walkErrorTree", "error", "stack", "exception", "exceptionFromError", "HttpContext", "addGlobalEventProcessor", "event", "getCurrentHub", "WINDOW", "url", "referrer", "userAgent", "headers", "request", "Dedupe", "addGlobalEventProcessor", "getCurrentHub", "eventProcessor", "currentEvent", "self", "_shouldDropEvent", "logger", "previousEvent", "_isSameMessageEvent", "_isSameExceptionEvent", "currentMessage", "previousMessage", "_isSameFingerprint", "_isSameStacktrace", "previousException", "_getExceptionFromEvent", "currentException", "currentFrames", "_getFramesFromEvent", "previousFrames", "i", "frameA", "frameB", "currentFingerprint", "previousFingerprint", "event", "exception", "defaultIntegrations", "CoreIntegrations", "TryCatch", "Breadcrumbs", "GlobalHandlers", "LinkedErrors", "Dedupe", "HttpContext", "init", "options", "WINDOW", "clientOptions", "stackParserFromStackParserOptions", "defaultStackParser", "getIntegrationsToSetup", "supportsFetch", "makeFetchTransport", "makeXHRTransport", "initAndBind", "BrowserClient", "startSessionTracking", "startSessionOnHub", "hub", "startSessionTracking", "WINDOW", "logger", "getCurrentHub", "addInstrumentationHandler", "from", "to", "integrations_exports", "__export", "Breadcrumbs", "Dedupe", "GlobalHandlers", "HttpContext", "LinkedErrors", "TryCatch", "windowIntegrations", "WINDOW", "INTEGRATIONS", "CoreIntegrations", "BrowserIntegrations", "registerErrorInstrumentation", "addInstrumentationHandler", "errorCallback", "activeTransaction", "getActiveTransaction", "status", "logger", "_autoloadDatabaseIntegrations", "carrier", "getMainCarrier", "packageToIntegrationMapping", "integration", "dynamicRequire", "mappedPackages", "moduleName", "loadModule", "pkg", "p", "addExtensionMethods", "addTracingExtensions", "isNodeEnv", "registerErrorInstrumentation", "WINDOW", "GLOBAL_OBJ", "registerBackgroundTabDetection", "WINDOW", "activeTransaction", "getActiveTransaction", "statusType", "logger", "bindReporter", "callback", "metric", "reportAllChanges", "prevValue", "delta", "forceReport", "generateUniqueID", "getNavigationEntryFromPerformanceTiming", "timing", "WINDOW", "type", "navigationEntry", "key", "getNavigationEntry", "getActivationStart", "navEntry", "getNavigationEntry", "initMetric", "name", "value", "navEntry", "getNavigationEntry", "navigationType", "WINDOW", "getActivationStart", "generateUniqueID", "observe", "type", "callback", "opts", "po", "list", "onHidden", "cb", "once", "onHiddenOrPageHide", "event", "WINDOW", "onCLS", "onReport", "metric", "initMetric", "report", "sessionValue", "sessionEntries", "handleEntries", "entries", "entry", "firstSessionEntry", "lastSessionEntry", "po", "observe", "bindReporter", "stopListening", "onHidden", "firstHiddenTime", "initHiddenTime", "WINDOW", "trackChanges", "onHidden", "timeStamp", "getVisibilityWatcher", "onFID", "onReport", "visibilityWatcher", "getVisibilityWatcher", "metric", "initMetric", "report", "handleEntry", "entry", "handleEntries", "entries", "po", "observe", "bindReporter", "onHidden", "reportedMetricIDs", "onLCP", "onReport", "visibilityWatcher", "getVisibilityWatcher", "metric", "initMetric", "report", "handleEntries", "entries", "lastEntry", "value", "getActivationStart", "po", "observe", "bindReporter", "stopListening", "type", "onHidden", "isMeasurementValue", "value", "_startChild", "transaction", "startTimestamp", "ctx", "msToSec", "time", "getBrowserPerformanceAPI", "WINDOW", "_performanceCursor", "_measurements", "_lcpEntry", "_clsEntry", "startTrackingWebVitals", "performance", "browserPerformanceTimeOrigin", "_trackFID", "clsCallback", "_trackCLS", "lcpCallback", "_trackLCP", "startTrackingLongTasks", "observe", "entries", "entry", "transaction", "getActiveTransaction", "startTime", "duration", "startTrackingInteractions", "htmlTreeAsString", "onCLS", "metric", "logger", "onLCP", "onFID", "timeOrigin", "addPerformanceEntries", "performanceEntries", "responseStartTimestamp", "requestStartTimestamp", "_addNavigationSpans", "_addMeasureSpans", "firstHidden", "getVisibilityWatcher", "shouldRecord", "resourceName", "_addResourceSpans", "_trackNavigator", "name", "oldValue", "measurementTimestamp", "normalizedValue", "delta", "fidMark", "_startChild", "measurementName", "_tagMetricInfo", "measureStartTimestamp", "measureEndTimestamp", "event", "_addPerformanceNavigationTiming", "_addRequest", "description", "eventEnd", "end", "start", "data", "startTimestamp", "endTimestamp", "navigator", "connection", "isMeasurementValue", "source", "index", "DEFAULT_TRACE_PROPAGATION_TARGETS", "defaultRequestInstrumentationOptions", "instrumentOutgoingRequests", "_options", "traceFetch", "traceXHR", "tracePropagationTargets", "tracingOrigins", "shouldCreateSpanForRequest", "shouldCreateSpan", "_", "shouldAttachHeadersWithTargets", "url", "shouldAttachHeaders", "spans", "addInstrumentationHandler", "handlerData", "fetchCallback", "xhrCallback", "stringMatchesSomePattern", "hasTracingEnabled", "spanId", "span", "currentScope", "getCurrentHub", "currentSpan", "activeTransaction", "request", "options", "addTracingHeadersToFetchRequest", "dynamicSamplingContext", "sentryBaggageHeader", "dynamicSamplingContextToSentryBaggageHeader", "sentryTraceHeader", "headers", "isInstanceOf", "newHeaders", "BAGGAGE_HEADER_NAME", "existingBaggageHeader", "newBaggageHeaders", "xhr", "instrumentRoutingWithDefaults", "customStartTransaction", "startTransactionOnPageLoad", "startTransactionOnLocationChange", "WINDOW", "logger", "startingUrl", "activeTransaction", "addInstrumentationHandler", "to", "from", "BROWSER_TRACING_INTEGRATION_ID", "DEFAULT_BROWSER_TRACING_OPTIONS", "TRACING_DEFAULTS", "instrumentRoutingWithDefaults", "defaultRequestInstrumentationOptions", "BrowserTracing", "_options", "startTrackingWebVitals", "startTrackingLongTasks", "startTrackingInteractions", "_", "getCurrentHub", "instrumentRouting", "startTransactionOnLocationChange", "startTransactionOnPageLoad", "markBackgroundTransactions", "traceFetch", "traceXHR", "tracePropagationTargets", "shouldCreateSpanForRequest", "_experiments", "context", "transaction", "registerBackgroundTabDetection", "instrumentOutgoingRequests", "logger", "beforeNavigate", "idleTimeout", "finalTimeout", "heartbeatInterval", "isPageloadTransaction", "sentryTraceMetaTagValue", "getMetaContent", "baggageMetaTagValue", "traceParentData", "extractTraceparentData", "dynamicSamplingContext", "baggageHeaderToDynamicSamplingContext", "expandedContext", "modifiedContext", "finalContext", "hub", "location", "WINDOW", "idleTransaction", "startIdleTransaction", "addPerformanceEntries", "inflightInteractionTransaction", "registerInteractionTransaction", "op", "type", "metaName", "metaTag", "getDomElement", "addExtensionMethods", "env", "getEnv", "platform", "Utils", "logger", "ConsoleLogger", "flags", "app", "ElmApp", "storage", "Storage", "backend", "Backend", "AzimuttApi", "Env", "msg", "ViewPosition", "setMeta", "_a", "getProject", "createProjectTmp", "updateProjectTmp", "createProject", "updateProject", "deleteProject", "projectDirty", "getLocalFile", "getTableStats", "getColumnStats", "observeSizes", "listenHotkeys", "_", "meta", "_b", "_c", "_d", "_e", "_f", "_g", "_h", "_i", "canonical", "zero", "p", "buildProjectDraft", "res", "ProjectStorage", "buildProjectRemote", "buildProjectLocal", "project", "err", "relative", "reportError", "json", "buildProjectJson", "ToastLevel", "e", "message", "reader", "tableStatsCache", "key", "stats", "columnStatsCache", "resizeObserver", "entries", "entry", "rect", "sizeViewport", "id", "elt", "observeSizesRetry", "remainingAttempts", "hotkeys", "isInput", "keydownHotkey", "target", "matches", "hotkey", "Platform", "alternatives", "__spreadProps", "__spreadValues", "holdKeyState", "keydownHoldKey", "keyupHoldKey", "label", "error", "formatError", "trackClick", "tracked", "name", "trackDetails", "attrs", "i", "attr", "organization", "details", "__objRest", "init", "BrowserTracing", "loadPolyfills"]
}
