(function(scope){
'use strict';

function F(arity, fun, wrapper) {
  wrapper.a = arity;
  wrapper.f = fun;
  return wrapper;
}

function F2(fun) {
  return F(2, fun, function(a) { return function(b) { return fun(a,b); }; })
}
function F3(fun) {
  return F(3, fun, function(a) {
    return function(b) { return function(c) { return fun(a, b, c); }; };
  });
}
function F4(fun) {
  return F(4, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return fun(a, b, c, d); }; }; };
  });
}
function F5(fun) {
  return F(5, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return fun(a, b, c, d, e); }; }; }; };
  });
}
function F6(fun) {
  return F(6, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return function(f) {
    return fun(a, b, c, d, e, f); }; }; }; }; };
  });
}
function F7(fun) {
  return F(7, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return function(f) {
    return function(g) { return fun(a, b, c, d, e, f, g); }; }; }; }; }; };
  });
}
function F8(fun) {
  return F(8, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return function(f) {
    return function(g) { return function(h) {
    return fun(a, b, c, d, e, f, g, h); }; }; }; }; }; }; };
  });
}
function F9(fun) {
  return F(9, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return function(f) {
    return function(g) { return function(h) { return function(i) {
    return fun(a, b, c, d, e, f, g, h, i); }; }; }; }; }; }; }; };
  });
}

function A2(fun, a, b) {
  return fun.a === 2 ? fun.f(a, b) : fun(a)(b);
}
function A3(fun, a, b, c) {
  return fun.a === 3 ? fun.f(a, b, c) : fun(a)(b)(c);
}
function A4(fun, a, b, c, d) {
  return fun.a === 4 ? fun.f(a, b, c, d) : fun(a)(b)(c)(d);
}
function A5(fun, a, b, c, d, e) {
  return fun.a === 5 ? fun.f(a, b, c, d, e) : fun(a)(b)(c)(d)(e);
}
function A6(fun, a, b, c, d, e, f) {
  return fun.a === 6 ? fun.f(a, b, c, d, e, f) : fun(a)(b)(c)(d)(e)(f);
}
function A7(fun, a, b, c, d, e, f, g) {
  return fun.a === 7 ? fun.f(a, b, c, d, e, f, g) : fun(a)(b)(c)(d)(e)(f)(g);
}
function A8(fun, a, b, c, d, e, f, g, h) {
  return fun.a === 8 ? fun.f(a, b, c, d, e, f, g, h) : fun(a)(b)(c)(d)(e)(f)(g)(h);
}
function A9(fun, a, b, c, d, e, f, g, h, i) {
  return fun.a === 9 ? fun.f(a, b, c, d, e, f, g, h, i) : fun(a)(b)(c)(d)(e)(f)(g)(h)(i);
}




var _JsArray_empty = [];

function _JsArray_singleton(value)
{
    return [value];
}

function _JsArray_length(array)
{
    return array.length;
}

var _JsArray_initialize = F3(function(size, offset, func)
{
    var result = new Array(size);

    for (var i = 0; i < size; i++)
    {
        result[i] = func(offset + i);
    }

    return result;
});

var _JsArray_initializeFromList = F2(function (max, ls)
{
    var result = new Array(max);

    for (var i = 0; i < max && ls.b; i++)
    {
        result[i] = ls.a;
        ls = ls.b;
    }

    result.length = i;
    return _Utils_Tuple2(result, ls);
});

var _JsArray_unsafeGet = F2(function(index, array)
{
    return array[index];
});

var _JsArray_unsafeSet = F3(function(index, value, array)
{
    var length = array.length;
    var result = new Array(length);

    for (var i = 0; i < length; i++)
    {
        result[i] = array[i];
    }

    result[index] = value;
    return result;
});

var _JsArray_push = F2(function(value, array)
{
    var length = array.length;
    var result = new Array(length + 1);

    for (var i = 0; i < length; i++)
    {
        result[i] = array[i];
    }

    result[length] = value;
    return result;
});

var _JsArray_foldl = F3(function(func, acc, array)
{
    var length = array.length;

    for (var i = 0; i < length; i++)
    {
        acc = A2(func, array[i], acc);
    }

    return acc;
});

var _JsArray_foldr = F3(function(func, acc, array)
{
    for (var i = array.length - 1; i >= 0; i--)
    {
        acc = A2(func, array[i], acc);
    }

    return acc;
});

var _JsArray_map = F2(function(func, array)
{
    var length = array.length;
    var result = new Array(length);

    for (var i = 0; i < length; i++)
    {
        result[i] = func(array[i]);
    }

    return result;
});

var _JsArray_indexedMap = F3(function(func, offset, array)
{
    var length = array.length;
    var result = new Array(length);

    for (var i = 0; i < length; i++)
    {
        result[i] = A2(func, offset + i, array[i]);
    }

    return result;
});

var _JsArray_slice = F3(function(from, to, array)
{
    return array.slice(from, to);
});

var _JsArray_appendN = F3(function(n, dest, source)
{
    var destLen = dest.length;
    var itemsToCopy = n - destLen;

    if (itemsToCopy > source.length)
    {
        itemsToCopy = source.length;
    }

    var size = destLen + itemsToCopy;
    var result = new Array(size);

    for (var i = 0; i < destLen; i++)
    {
        result[i] = dest[i];
    }

    for (var i = 0; i < itemsToCopy; i++)
    {
        result[i + destLen] = source[i];
    }

    return result;
});



// LOG

var _Debug_log = F2(function(tag, value)
{
	return value;
});

var _Debug_log_UNUSED = F2(function(tag, value)
{
	console.log(tag + ': ' + _Debug_toString(value));
	return value;
});


// TODOS

function _Debug_todo(moduleName, region)
{
	return function(message) {
		_Debug_crash(8, moduleName, region, message);
	};
}

function _Debug_todoCase(moduleName, region, value)
{
	return function(message) {
		_Debug_crash(9, moduleName, region, value, message);
	};
}


// TO STRING

function _Debug_toString(value)
{
	return '<internals>';
}

function _Debug_toString_UNUSED(value)
{
	return _Debug_toAnsiString(false, value);
}

function _Debug_toAnsiString(ansi, value)
{
	if (typeof value === 'function')
	{
		return _Debug_internalColor(ansi, '<function>');
	}

	if (typeof value === 'boolean')
	{
		return _Debug_ctorColor(ansi, value ? 'True' : 'False');
	}

	if (typeof value === 'number')
	{
		return _Debug_numberColor(ansi, value + '');
	}

	if (value instanceof String)
	{
		return _Debug_charColor(ansi, "'" + _Debug_addSlashes(value, true) + "'");
	}

	if (typeof value === 'string')
	{
		return _Debug_stringColor(ansi, '"' + _Debug_addSlashes(value, false) + '"');
	}

	if (typeof value === 'object' && '$' in value)
	{
		var tag = value.$;

		if (typeof tag === 'number')
		{
			return _Debug_internalColor(ansi, '<internals>');
		}

		if (tag[0] === '#')
		{
			var output = [];
			for (var k in value)
			{
				if (k === '$') continue;
				output.push(_Debug_toAnsiString(ansi, value[k]));
			}
			return '(' + output.join(',') + ')';
		}

		if (tag === 'Set_elm_builtin')
		{
			return _Debug_ctorColor(ansi, 'Set')
				+ _Debug_fadeColor(ansi, '.fromList') + ' '
				+ _Debug_toAnsiString(ansi, $elm$core$Set$toList(value));
		}

		if (tag === 'RBNode_elm_builtin' || tag === 'RBEmpty_elm_builtin')
		{
			return _Debug_ctorColor(ansi, 'Dict')
				+ _Debug_fadeColor(ansi, '.fromList') + ' '
				+ _Debug_toAnsiString(ansi, $elm$core$Dict$toList(value));
		}

		if (tag === 'Array_elm_builtin')
		{
			return _Debug_ctorColor(ansi, 'Array')
				+ _Debug_fadeColor(ansi, '.fromList') + ' '
				+ _Debug_toAnsiString(ansi, $elm$core$Array$toList(value));
		}

		if (tag === '::' || tag === '[]')
		{
			var output = '[';

			value.b && (output += _Debug_toAnsiString(ansi, value.a), value = value.b)

			for (; value.b; value = value.b) // WHILE_CONS
			{
				output += ',' + _Debug_toAnsiString(ansi, value.a);
			}
			return output + ']';
		}

		var output = '';
		for (var i in value)
		{
			if (i === '$') continue;
			var str = _Debug_toAnsiString(ansi, value[i]);
			var c0 = str[0];
			var parenless = c0 === '{' || c0 === '(' || c0 === '[' || c0 === '<' || c0 === '"' || str.indexOf(' ') < 0;
			output += ' ' + (parenless ? str : '(' + str + ')');
		}
		return _Debug_ctorColor(ansi, tag) + output;
	}

	if (typeof DataView === 'function' && value instanceof DataView)
	{
		return _Debug_stringColor(ansi, '<' + value.byteLength + ' bytes>');
	}

	if (typeof File !== 'undefined' && value instanceof File)
	{
		return _Debug_internalColor(ansi, '<' + value.name + '>');
	}

	if (typeof value === 'object')
	{
		var output = [];
		for (var key in value)
		{
			var field = key[0] === '_' ? key.slice(1) : key;
			output.push(_Debug_fadeColor(ansi, field) + ' = ' + _Debug_toAnsiString(ansi, value[key]));
		}
		if (output.length === 0)
		{
			return '{}';
		}
		return '{ ' + output.join(', ') + ' }';
	}

	return _Debug_internalColor(ansi, '<internals>');
}

function _Debug_addSlashes(str, isChar)
{
	var s = str
		.replace(/\\/g, '\\\\')
		.replace(/\n/g, '\\n')
		.replace(/\t/g, '\\t')
		.replace(/\r/g, '\\r')
		.replace(/\v/g, '\\v')
		.replace(/\0/g, '\\0');

	if (isChar)
	{
		return s.replace(/\'/g, '\\\'');
	}
	else
	{
		return s.replace(/\"/g, '\\"');
	}
}

function _Debug_ctorColor(ansi, string)
{
	return ansi ? '\x1b[96m' + string + '\x1b[0m' : string;
}

function _Debug_numberColor(ansi, string)
{
	return ansi ? '\x1b[95m' + string + '\x1b[0m' : string;
}

function _Debug_stringColor(ansi, string)
{
	return ansi ? '\x1b[93m' + string + '\x1b[0m' : string;
}

function _Debug_charColor(ansi, string)
{
	return ansi ? '\x1b[92m' + string + '\x1b[0m' : string;
}

function _Debug_fadeColor(ansi, string)
{
	return ansi ? '\x1b[37m' + string + '\x1b[0m' : string;
}

function _Debug_internalColor(ansi, string)
{
	return ansi ? '\x1b[36m' + string + '\x1b[0m' : string;
}

function _Debug_toHexDigit(n)
{
	return String.fromCharCode(n < 10 ? 48 + n : 55 + n);
}


// CRASH


function _Debug_crash(identifier)
{
	throw new Error('https://github.com/elm/core/blob/1.0.0/hints/' + identifier + '.md');
}


function _Debug_crash_UNUSED(identifier, fact1, fact2, fact3, fact4)
{
	switch(identifier)
	{
		case 0:
			throw new Error('What node should I take over? In JavaScript I need something like:\n\n    Elm.Main.init({\n        node: document.getElementById("elm-node")\n    })\n\nYou need to do this with any Browser.sandbox or Browser.element program.');

		case 1:
			throw new Error('Browser.application programs cannot handle URLs like this:\n\n    ' + document.location.href + '\n\nWhat is the root? The root of your file system? Try looking at this program with `elm reactor` or some other server.');

		case 2:
			var jsonErrorString = fact1;
			throw new Error('Problem with the flags given to your Elm program on initialization.\n\n' + jsonErrorString);

		case 3:
			var portName = fact1;
			throw new Error('There can only be one port named `' + portName + '`, but your program has multiple.');

		case 4:
			var portName = fact1;
			var problem = fact2;
			throw new Error('Trying to send an unexpected type of value through port `' + portName + '`:\n' + problem);

		case 5:
			throw new Error('Trying to use `(==)` on functions.\nThere is no way to know if functions are "the same" in the Elm sense.\nRead more about this at https://package.elm-lang.org/packages/elm/core/latest/Basics#== which describes why it is this way and what the better version will look like.');

		case 6:
			var moduleName = fact1;
			throw new Error('Your page is loading multiple Elm scripts with a module named ' + moduleName + '. Maybe a duplicate script is getting loaded accidentally? If not, rename one of them so I know which is which!');

		case 8:
			var moduleName = fact1;
			var region = fact2;
			var message = fact3;
			throw new Error('TODO in module `' + moduleName + '` ' + _Debug_regionToString(region) + '\n\n' + message);

		case 9:
			var moduleName = fact1;
			var region = fact2;
			var value = fact3;
			var message = fact4;
			throw new Error(
				'TODO in module `' + moduleName + '` from the `case` expression '
				+ _Debug_regionToString(region) + '\n\nIt received the following value:\n\n    '
				+ _Debug_toString(value).replace('\n', '\n    ')
				+ '\n\nBut the branch that handles it says:\n\n    ' + message.replace('\n', '\n    ')
			);

		case 10:
			throw new Error('Bug in https://github.com/elm/virtual-dom/issues');

		case 11:
			throw new Error('Cannot perform mod 0. Division by zero error.');
	}
}

function _Debug_regionToString(region)
{
	if (region.hu.dm === region.ir.dm)
	{
		return 'on line ' + region.hu.dm;
	}
	return 'on lines ' + region.hu.dm + ' through ' + region.ir.dm;
}



// EQUALITY

function _Utils_eq(x, y)
{
	for (
		var pair, stack = [], isEqual = _Utils_eqHelp(x, y, 0, stack);
		isEqual && (pair = stack.pop());
		isEqual = _Utils_eqHelp(pair.a, pair.b, 0, stack)
		)
	{}

	return isEqual;
}

function _Utils_eqHelp(x, y, depth, stack)
{
	if (x === y)
	{
		return true;
	}

	if (typeof x !== 'object' || x === null || y === null)
	{
		typeof x === 'function' && _Debug_crash(5);
		return false;
	}

	if (depth > 100)
	{
		stack.push(_Utils_Tuple2(x,y));
		return true;
	}

	/**_UNUSED/
	if (x.$ === 'Set_elm_builtin')
	{
		x = $elm$core$Set$toList(x);
		y = $elm$core$Set$toList(y);
	}
	if (x.$ === 'RBNode_elm_builtin' || x.$ === 'RBEmpty_elm_builtin')
	{
		x = $elm$core$Dict$toList(x);
		y = $elm$core$Dict$toList(y);
	}
	//*/

	/**/
	if (x.$ < 0)
	{
		x = $elm$core$Dict$toList(x);
		y = $elm$core$Dict$toList(y);
	}
	//*/

	for (var key in x)
	{
		if (!_Utils_eqHelp(x[key], y[key], depth + 1, stack))
		{
			return false;
		}
	}
	return true;
}

var _Utils_equal = F2(_Utils_eq);
var _Utils_notEqual = F2(function(a, b) { return !_Utils_eq(a,b); });



// COMPARISONS

// Code in Generate/JavaScript.hs, Basics.js, and List.js depends on
// the particular integer values assigned to LT, EQ, and GT.

function _Utils_cmp(x, y, ord)
{
	if (typeof x !== 'object')
	{
		return x === y ? /*EQ*/ 0 : x < y ? /*LT*/ -1 : /*GT*/ 1;
	}

	/**_UNUSED/
	if (x instanceof String)
	{
		var a = x.valueOf();
		var b = y.valueOf();
		return a === b ? 0 : a < b ? -1 : 1;
	}
	//*/

	/**/
	if (typeof x.$ === 'undefined')
	//*/
	/**_UNUSED/
	if (x.$[0] === '#')
	//*/
	{
		return (ord = _Utils_cmp(x.a, y.a))
			? ord
			: (ord = _Utils_cmp(x.b, y.b))
				? ord
				: _Utils_cmp(x.c, y.c);
	}

	// traverse conses until end of a list or a mismatch
	for (; x.b && y.b && !(ord = _Utils_cmp(x.a, y.a)); x = x.b, y = y.b) {} // WHILE_CONSES
	return ord || (x.b ? /*GT*/ 1 : y.b ? /*LT*/ -1 : /*EQ*/ 0);
}

var _Utils_lt = F2(function(a, b) { return _Utils_cmp(a, b) < 0; });
var _Utils_le = F2(function(a, b) { return _Utils_cmp(a, b) < 1; });
var _Utils_gt = F2(function(a, b) { return _Utils_cmp(a, b) > 0; });
var _Utils_ge = F2(function(a, b) { return _Utils_cmp(a, b) >= 0; });

var _Utils_compare = F2(function(x, y)
{
	var n = _Utils_cmp(x, y);
	return n < 0 ? $elm$core$Basics$LT : n ? $elm$core$Basics$GT : $elm$core$Basics$EQ;
});


// COMMON VALUES

var _Utils_Tuple0 = 0;
var _Utils_Tuple0_UNUSED = { $: '#0' };

function _Utils_Tuple2(a, b) { return { a: a, b: b }; }
function _Utils_Tuple2_UNUSED(a, b) { return { $: '#2', a: a, b: b }; }

function _Utils_Tuple3(a, b, c) { return { a: a, b: b, c: c }; }
function _Utils_Tuple3_UNUSED(a, b, c) { return { $: '#3', a: a, b: b, c: c }; }

function _Utils_chr(c) { return c; }
function _Utils_chr_UNUSED(c) { return new String(c); }


// RECORDS

function _Utils_update(oldRecord, updatedFields)
{
	var newRecord = {};

	for (var key in oldRecord)
	{
		newRecord[key] = oldRecord[key];
	}

	for (var key in updatedFields)
	{
		newRecord[key] = updatedFields[key];
	}

	return newRecord;
}


// APPEND

var _Utils_append = F2(_Utils_ap);

function _Utils_ap(xs, ys)
{
	// append Strings
	if (typeof xs === 'string')
	{
		return xs + ys;
	}

	// append Lists
	if (!xs.b)
	{
		return ys;
	}
	var root = _List_Cons(xs.a, ys);
	xs = xs.b
	for (var curr = root; xs.b; xs = xs.b) // WHILE_CONS
	{
		curr = curr.b = _List_Cons(xs.a, ys);
	}
	return root;
}



var _List_Nil = { $: 0 };
var _List_Nil_UNUSED = { $: '[]' };

function _List_Cons(hd, tl) { return { $: 1, a: hd, b: tl }; }
function _List_Cons_UNUSED(hd, tl) { return { $: '::', a: hd, b: tl }; }


var _List_cons = F2(_List_Cons);

function _List_fromArray(arr)
{
	var out = _List_Nil;
	for (var i = arr.length; i--; )
	{
		out = _List_Cons(arr[i], out);
	}
	return out;
}

function _List_toArray(xs)
{
	for (var out = []; xs.b; xs = xs.b) // WHILE_CONS
	{
		out.push(xs.a);
	}
	return out;
}

var _List_map2 = F3(function(f, xs, ys)
{
	for (var arr = []; xs.b && ys.b; xs = xs.b, ys = ys.b) // WHILE_CONSES
	{
		arr.push(A2(f, xs.a, ys.a));
	}
	return _List_fromArray(arr);
});

var _List_map3 = F4(function(f, xs, ys, zs)
{
	for (var arr = []; xs.b && ys.b && zs.b; xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES
	{
		arr.push(A3(f, xs.a, ys.a, zs.a));
	}
	return _List_fromArray(arr);
});

var _List_map4 = F5(function(f, ws, xs, ys, zs)
{
	for (var arr = []; ws.b && xs.b && ys.b && zs.b; ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES
	{
		arr.push(A4(f, ws.a, xs.a, ys.a, zs.a));
	}
	return _List_fromArray(arr);
});

var _List_map5 = F6(function(f, vs, ws, xs, ys, zs)
{
	for (var arr = []; vs.b && ws.b && xs.b && ys.b && zs.b; vs = vs.b, ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES
	{
		arr.push(A5(f, vs.a, ws.a, xs.a, ys.a, zs.a));
	}
	return _List_fromArray(arr);
});

var _List_sortBy = F2(function(f, xs)
{
	return _List_fromArray(_List_toArray(xs).sort(function(a, b) {
		return _Utils_cmp(f(a), f(b));
	}));
});

var _List_sortWith = F2(function(f, xs)
{
	return _List_fromArray(_List_toArray(xs).sort(function(a, b) {
		var ord = A2(f, a, b);
		return ord === $elm$core$Basics$EQ ? 0 : ord === $elm$core$Basics$LT ? -1 : 1;
	}));
});



// MATH

var _Basics_add = F2(function(a, b) { return a + b; });
var _Basics_sub = F2(function(a, b) { return a - b; });
var _Basics_mul = F2(function(a, b) { return a * b; });
var _Basics_fdiv = F2(function(a, b) { return a / b; });
var _Basics_idiv = F2(function(a, b) { return (a / b) | 0; });
var _Basics_pow = F2(Math.pow);

var _Basics_remainderBy = F2(function(b, a) { return a % b; });

// https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/divmodnote-letter.pdf
var _Basics_modBy = F2(function(modulus, x)
{
	var answer = x % modulus;
	return modulus === 0
		? _Debug_crash(11)
		:
	((answer > 0 && modulus < 0) || (answer < 0 && modulus > 0))
		? answer + modulus
		: answer;
});


// TRIGONOMETRY

var _Basics_pi = Math.PI;
var _Basics_e = Math.E;
var _Basics_cos = Math.cos;
var _Basics_sin = Math.sin;
var _Basics_tan = Math.tan;
var _Basics_acos = Math.acos;
var _Basics_asin = Math.asin;
var _Basics_atan = Math.atan;
var _Basics_atan2 = F2(Math.atan2);


// MORE MATH

function _Basics_toFloat(x) { return x; }
function _Basics_truncate(n) { return n | 0; }
function _Basics_isInfinite(n) { return n === Infinity || n === -Infinity; }

var _Basics_ceiling = Math.ceil;
var _Basics_floor = Math.floor;
var _Basics_round = Math.round;
var _Basics_sqrt = Math.sqrt;
var _Basics_log = Math.log;
var _Basics_isNaN = isNaN;


// BOOLEANS

function _Basics_not(bool) { return !bool; }
var _Basics_and = F2(function(a, b) { return a && b; });
var _Basics_or  = F2(function(a, b) { return a || b; });
var _Basics_xor = F2(function(a, b) { return a !== b; });



var _String_cons = F2(function(chr, str)
{
	return chr + str;
});

function _String_uncons(string)
{
	var word = string.charCodeAt(0);
	return !isNaN(word)
		? $elm$core$Maybe$Just(
			0xD800 <= word && word <= 0xDBFF
				? _Utils_Tuple2(_Utils_chr(string[0] + string[1]), string.slice(2))
				: _Utils_Tuple2(_Utils_chr(string[0]), string.slice(1))
		)
		: $elm$core$Maybe$Nothing;
}

var _String_append = F2(function(a, b)
{
	return a + b;
});

function _String_length(str)
{
	return str.length;
}

var _String_map = F2(function(func, string)
{
	var len = string.length;
	var array = new Array(len);
	var i = 0;
	while (i < len)
	{
		var word = string.charCodeAt(i);
		if (0xD800 <= word && word <= 0xDBFF)
		{
			array[i] = func(_Utils_chr(string[i] + string[i+1]));
			i += 2;
			continue;
		}
		array[i] = func(_Utils_chr(string[i]));
		i++;
	}
	return array.join('');
});

var _String_filter = F2(function(isGood, str)
{
	var arr = [];
	var len = str.length;
	var i = 0;
	while (i < len)
	{
		var char = str[i];
		var word = str.charCodeAt(i);
		i++;
		if (0xD800 <= word && word <= 0xDBFF)
		{
			char += str[i];
			i++;
		}

		if (isGood(_Utils_chr(char)))
		{
			arr.push(char);
		}
	}
	return arr.join('');
});

function _String_reverse(str)
{
	var len = str.length;
	var arr = new Array(len);
	var i = 0;
	while (i < len)
	{
		var word = str.charCodeAt(i);
		if (0xD800 <= word && word <= 0xDBFF)
		{
			arr[len - i] = str[i + 1];
			i++;
			arr[len - i] = str[i - 1];
			i++;
		}
		else
		{
			arr[len - i] = str[i];
			i++;
		}
	}
	return arr.join('');
}

var _String_foldl = F3(function(func, state, string)
{
	var len = string.length;
	var i = 0;
	while (i < len)
	{
		var char = string[i];
		var word = string.charCodeAt(i);
		i++;
		if (0xD800 <= word && word <= 0xDBFF)
		{
			char += string[i];
			i++;
		}
		state = A2(func, _Utils_chr(char), state);
	}
	return state;
});

var _String_foldr = F3(function(func, state, string)
{
	var i = string.length;
	while (i--)
	{
		var char = string[i];
		var word = string.charCodeAt(i);
		if (0xDC00 <= word && word <= 0xDFFF)
		{
			i--;
			char = string[i] + char;
		}
		state = A2(func, _Utils_chr(char), state);
	}
	return state;
});

var _String_split = F2(function(sep, str)
{
	return str.split(sep);
});

var _String_join = F2(function(sep, strs)
{
	return strs.join(sep);
});

var _String_slice = F3(function(start, end, str) {
	return str.slice(start, end);
});

function _String_trim(str)
{
	return str.trim();
}

function _String_trimLeft(str)
{
	return str.replace(/^\s+/, '');
}

function _String_trimRight(str)
{
	return str.replace(/\s+$/, '');
}

function _String_words(str)
{
	return _List_fromArray(str.trim().split(/\s+/g));
}

function _String_lines(str)
{
	return _List_fromArray(str.split(/\r\n|\r|\n/g));
}

function _String_toUpper(str)
{
	return str.toUpperCase();
}

function _String_toLower(str)
{
	return str.toLowerCase();
}

var _String_any = F2(function(isGood, string)
{
	var i = string.length;
	while (i--)
	{
		var char = string[i];
		var word = string.charCodeAt(i);
		if (0xDC00 <= word && word <= 0xDFFF)
		{
			i--;
			char = string[i] + char;
		}
		if (isGood(_Utils_chr(char)))
		{
			return true;
		}
	}
	return false;
});

var _String_all = F2(function(isGood, string)
{
	var i = string.length;
	while (i--)
	{
		var char = string[i];
		var word = string.charCodeAt(i);
		if (0xDC00 <= word && word <= 0xDFFF)
		{
			i--;
			char = string[i] + char;
		}
		if (!isGood(_Utils_chr(char)))
		{
			return false;
		}
	}
	return true;
});

var _String_contains = F2(function(sub, str)
{
	return str.indexOf(sub) > -1;
});

var _String_startsWith = F2(function(sub, str)
{
	return str.indexOf(sub) === 0;
});

var _String_endsWith = F2(function(sub, str)
{
	return str.length >= sub.length &&
		str.lastIndexOf(sub) === str.length - sub.length;
});

var _String_indexes = F2(function(sub, str)
{
	var subLen = sub.length;

	if (subLen < 1)
	{
		return _List_Nil;
	}

	var i = 0;
	var is = [];

	while ((i = str.indexOf(sub, i)) > -1)
	{
		is.push(i);
		i = i + subLen;
	}

	return _List_fromArray(is);
});


// TO STRING

function _String_fromNumber(number)
{
	return number + '';
}


// INT CONVERSIONS

function _String_toInt(str)
{
	var total = 0;
	var code0 = str.charCodeAt(0);
	var start = code0 == 0x2B /* + */ || code0 == 0x2D /* - */ ? 1 : 0;

	for (var i = start; i < str.length; ++i)
	{
		var code = str.charCodeAt(i);
		if (code < 0x30 || 0x39 < code)
		{
			return $elm$core$Maybe$Nothing;
		}
		total = 10 * total + code - 0x30;
	}

	return i == start
		? $elm$core$Maybe$Nothing
		: $elm$core$Maybe$Just(code0 == 0x2D ? -total : total);
}


// FLOAT CONVERSIONS

function _String_toFloat(s)
{
	// check if it is a hex, octal, or binary number
	if (s.length === 0 || /[\sxbo]/.test(s))
	{
		return $elm$core$Maybe$Nothing;
	}
	var n = +s;
	// faster isNaN check
	return n === n ? $elm$core$Maybe$Just(n) : $elm$core$Maybe$Nothing;
}

function _String_fromList(chars)
{
	return _List_toArray(chars).join('');
}




function _Char_toCode(char)
{
	var code = char.charCodeAt(0);
	if (0xD800 <= code && code <= 0xDBFF)
	{
		return (code - 0xD800) * 0x400 + char.charCodeAt(1) - 0xDC00 + 0x10000
	}
	return code;
}

function _Char_fromCode(code)
{
	return _Utils_chr(
		(code < 0 || 0x10FFFF < code)
			? '\uFFFD'
			:
		(code <= 0xFFFF)
			? String.fromCharCode(code)
			:
		(code -= 0x10000,
			String.fromCharCode(Math.floor(code / 0x400) + 0xD800, code % 0x400 + 0xDC00)
		)
	);
}

function _Char_toUpper(char)
{
	return _Utils_chr(char.toUpperCase());
}

function _Char_toLower(char)
{
	return _Utils_chr(char.toLowerCase());
}

function _Char_toLocaleUpper(char)
{
	return _Utils_chr(char.toLocaleUpperCase());
}

function _Char_toLocaleLower(char)
{
	return _Utils_chr(char.toLocaleLowerCase());
}



/**_UNUSED/
function _Json_errorToString(error)
{
	return $elm$json$Json$Decode$errorToString(error);
}
//*/


// CORE DECODERS

function _Json_succeed(msg)
{
	return {
		$: 0,
		a: msg
	};
}

function _Json_fail(msg)
{
	return {
		$: 1,
		a: msg
	};
}

function _Json_decodePrim(decoder)
{
	return { $: 2, b: decoder };
}

var _Json_decodeInt = _Json_decodePrim(function(value) {
	return (typeof value !== 'number')
		? _Json_expecting('an INT', value)
		:
	(-2147483647 < value && value < 2147483647 && (value | 0) === value)
		? $elm$core$Result$Ok(value)
		:
	(isFinite(value) && !(value % 1))
		? $elm$core$Result$Ok(value)
		: _Json_expecting('an INT', value);
});

var _Json_decodeBool = _Json_decodePrim(function(value) {
	return (typeof value === 'boolean')
		? $elm$core$Result$Ok(value)
		: _Json_expecting('a BOOL', value);
});

var _Json_decodeFloat = _Json_decodePrim(function(value) {
	return (typeof value === 'number')
		? $elm$core$Result$Ok(value)
		: _Json_expecting('a FLOAT', value);
});

var _Json_decodeValue = _Json_decodePrim(function(value) {
	return $elm$core$Result$Ok(_Json_wrap(value));
});

var _Json_decodeString = _Json_decodePrim(function(value) {
	return (typeof value === 'string')
		? $elm$core$Result$Ok(value)
		: (value instanceof String)
			? $elm$core$Result$Ok(value + '')
			: _Json_expecting('a STRING', value);
});

function _Json_decodeList(decoder) { return { $: 3, b: decoder }; }
function _Json_decodeArray(decoder) { return { $: 4, b: decoder }; }

function _Json_decodeNull(value) { return { $: 5, c: value }; }

var _Json_decodeField = F2(function(field, decoder)
{
	return {
		$: 6,
		d: field,
		b: decoder
	};
});

var _Json_decodeIndex = F2(function(index, decoder)
{
	return {
		$: 7,
		e: index,
		b: decoder
	};
});

function _Json_decodeKeyValuePairs(decoder)
{
	return {
		$: 8,
		b: decoder
	};
}

function _Json_mapMany(f, decoders)
{
	return {
		$: 9,
		f: f,
		g: decoders
	};
}

var _Json_andThen = F2(function(callback, decoder)
{
	return {
		$: 10,
		b: decoder,
		h: callback
	};
});

function _Json_oneOf(decoders)
{
	return {
		$: 11,
		g: decoders
	};
}


// DECODING OBJECTS

var _Json_map1 = F2(function(f, d1)
{
	return _Json_mapMany(f, [d1]);
});

var _Json_map2 = F3(function(f, d1, d2)
{
	return _Json_mapMany(f, [d1, d2]);
});

var _Json_map3 = F4(function(f, d1, d2, d3)
{
	return _Json_mapMany(f, [d1, d2, d3]);
});

var _Json_map4 = F5(function(f, d1, d2, d3, d4)
{
	return _Json_mapMany(f, [d1, d2, d3, d4]);
});

var _Json_map5 = F6(function(f, d1, d2, d3, d4, d5)
{
	return _Json_mapMany(f, [d1, d2, d3, d4, d5]);
});

var _Json_map6 = F7(function(f, d1, d2, d3, d4, d5, d6)
{
	return _Json_mapMany(f, [d1, d2, d3, d4, d5, d6]);
});

var _Json_map7 = F8(function(f, d1, d2, d3, d4, d5, d6, d7)
{
	return _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7]);
});

var _Json_map8 = F9(function(f, d1, d2, d3, d4, d5, d6, d7, d8)
{
	return _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7, d8]);
});


// DECODE

var _Json_runOnString = F2(function(decoder, string)
{
	try
	{
		var value = JSON.parse(string);
		return _Json_runHelp(decoder, value);
	}
	catch (e)
	{
		return $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, 'This is not valid JSON! ' + e.message, _Json_wrap(string)));
	}
});

var _Json_run = F2(function(decoder, value)
{
	return _Json_runHelp(decoder, _Json_unwrap(value));
});

function _Json_runHelp(decoder, value)
{
	switch (decoder.$)
	{
		case 2:
			return decoder.b(value);

		case 5:
			return (value === null)
				? $elm$core$Result$Ok(decoder.c)
				: _Json_expecting('null', value);

		case 3:
			if (!_Json_isArray(value))
			{
				return _Json_expecting('a LIST', value);
			}
			return _Json_runArrayDecoder(decoder.b, value, _List_fromArray);

		case 4:
			if (!_Json_isArray(value))
			{
				return _Json_expecting('an ARRAY', value);
			}
			return _Json_runArrayDecoder(decoder.b, value, _Json_toElmArray);

		case 6:
			var field = decoder.d;
			if (typeof value !== 'object' || value === null || !(field in value))
			{
				return _Json_expecting('an OBJECT with a field named `' + field + '`', value);
			}
			var result = _Json_runHelp(decoder.b, value[field]);
			return ($elm$core$Result$isOk(result)) ? result : $elm$core$Result$Err(A2($elm$json$Json$Decode$Field, field, result.a));

		case 7:
			var index = decoder.e;
			if (!_Json_isArray(value))
			{
				return _Json_expecting('an ARRAY', value);
			}
			if (index >= value.length)
			{
				return _Json_expecting('a LONGER array. Need index ' + index + ' but only see ' + value.length + ' entries', value);
			}
			var result = _Json_runHelp(decoder.b, value[index]);
			return ($elm$core$Result$isOk(result)) ? result : $elm$core$Result$Err(A2($elm$json$Json$Decode$Index, index, result.a));

		case 8:
			if (typeof value !== 'object' || value === null || _Json_isArray(value))
			{
				return _Json_expecting('an OBJECT', value);
			}

			var keyValuePairs = _List_Nil;
			// TODO test perf of Object.keys and switch when support is good enough
			for (var key in value)
			{
				if (value.hasOwnProperty(key))
				{
					var result = _Json_runHelp(decoder.b, value[key]);
					if (!$elm$core$Result$isOk(result))
					{
						return $elm$core$Result$Err(A2($elm$json$Json$Decode$Field, key, result.a));
					}
					keyValuePairs = _List_Cons(_Utils_Tuple2(key, result.a), keyValuePairs);
				}
			}
			return $elm$core$Result$Ok($elm$core$List$reverse(keyValuePairs));

		case 9:
			var answer = decoder.f;
			var decoders = decoder.g;
			for (var i = 0; i < decoders.length; i++)
			{
				var result = _Json_runHelp(decoders[i], value);
				if (!$elm$core$Result$isOk(result))
				{
					return result;
				}
				answer = answer(result.a);
			}
			return $elm$core$Result$Ok(answer);

		case 10:
			var result = _Json_runHelp(decoder.b, value);
			return (!$elm$core$Result$isOk(result))
				? result
				: _Json_runHelp(decoder.h(result.a), value);

		case 11:
			var errors = _List_Nil;
			for (var temp = decoder.g; temp.b; temp = temp.b) // WHILE_CONS
			{
				var result = _Json_runHelp(temp.a, value);
				if ($elm$core$Result$isOk(result))
				{
					return result;
				}
				errors = _List_Cons(result.a, errors);
			}
			return $elm$core$Result$Err($elm$json$Json$Decode$OneOf($elm$core$List$reverse(errors)));

		case 1:
			return $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, decoder.a, _Json_wrap(value)));

		case 0:
			return $elm$core$Result$Ok(decoder.a);
	}
}

function _Json_runArrayDecoder(decoder, value, toElmValue)
{
	var len = value.length;
	var array = new Array(len);
	for (var i = 0; i < len; i++)
	{
		var result = _Json_runHelp(decoder, value[i]);
		if (!$elm$core$Result$isOk(result))
		{
			return $elm$core$Result$Err(A2($elm$json$Json$Decode$Index, i, result.a));
		}
		array[i] = result.a;
	}
	return $elm$core$Result$Ok(toElmValue(array));
}

function _Json_isArray(value)
{
	return Array.isArray(value) || (typeof FileList !== 'undefined' && value instanceof FileList);
}

function _Json_toElmArray(array)
{
	return A2($elm$core$Array$initialize, array.length, function(i) { return array[i]; });
}

function _Json_expecting(type, value)
{
	return $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, 'Expecting ' + type, _Json_wrap(value)));
}


// EQUALITY

function _Json_equality(x, y)
{
	if (x === y)
	{
		return true;
	}

	if (x.$ !== y.$)
	{
		return false;
	}

	switch (x.$)
	{
		case 0:
		case 1:
			return x.a === y.a;

		case 2:
			return x.b === y.b;

		case 5:
			return x.c === y.c;

		case 3:
		case 4:
		case 8:
			return _Json_equality(x.b, y.b);

		case 6:
			return x.d === y.d && _Json_equality(x.b, y.b);

		case 7:
			return x.e === y.e && _Json_equality(x.b, y.b);

		case 9:
			return x.f === y.f && _Json_listEquality(x.g, y.g);

		case 10:
			return x.h === y.h && _Json_equality(x.b, y.b);

		case 11:
			return _Json_listEquality(x.g, y.g);
	}
}

function _Json_listEquality(aDecoders, bDecoders)
{
	var len = aDecoders.length;
	if (len !== bDecoders.length)
	{
		return false;
	}
	for (var i = 0; i < len; i++)
	{
		if (!_Json_equality(aDecoders[i], bDecoders[i]))
		{
			return false;
		}
	}
	return true;
}


// ENCODE

var _Json_encode = F2(function(indentLevel, value)
{
	return JSON.stringify(_Json_unwrap(value), null, indentLevel) + '';
});

function _Json_wrap_UNUSED(value) { return { $: 0, a: value }; }
function _Json_unwrap_UNUSED(value) { return value.a; }

function _Json_wrap(value) { return value; }
function _Json_unwrap(value) { return value; }

function _Json_emptyArray() { return []; }
function _Json_emptyObject() { return {}; }

var _Json_addField = F3(function(key, value, object)
{
	object[key] = _Json_unwrap(value);
	return object;
});

function _Json_addEntry(func)
{
	return F2(function(entry, array)
	{
		array.push(_Json_unwrap(func(entry)));
		return array;
	});
}

var _Json_encodeNull = _Json_wrap(null);



// TASKS

function _Scheduler_succeed(value)
{
	return {
		$: 0,
		a: value
	};
}

function _Scheduler_fail(error)
{
	return {
		$: 1,
		a: error
	};
}

function _Scheduler_binding(callback)
{
	return {
		$: 2,
		b: callback,
		c: null
	};
}

var _Scheduler_andThen = F2(function(callback, task)
{
	return {
		$: 3,
		b: callback,
		d: task
	};
});

var _Scheduler_onError = F2(function(callback, task)
{
	return {
		$: 4,
		b: callback,
		d: task
	};
});

function _Scheduler_receive(callback)
{
	return {
		$: 5,
		b: callback
	};
}


// PROCESSES

var _Scheduler_guid = 0;

function _Scheduler_rawSpawn(task)
{
	var proc = {
		$: 0,
		e: _Scheduler_guid++,
		f: task,
		g: null,
		h: []
	};

	_Scheduler_enqueue(proc);

	return proc;
}

function _Scheduler_spawn(task)
{
	return _Scheduler_binding(function(callback) {
		callback(_Scheduler_succeed(_Scheduler_rawSpawn(task)));
	});
}

function _Scheduler_rawSend(proc, msg)
{
	proc.h.push(msg);
	_Scheduler_enqueue(proc);
}

var _Scheduler_send = F2(function(proc, msg)
{
	return _Scheduler_binding(function(callback) {
		_Scheduler_rawSend(proc, msg);
		callback(_Scheduler_succeed(_Utils_Tuple0));
	});
});

function _Scheduler_kill(proc)
{
	return _Scheduler_binding(function(callback) {
		var task = proc.f;
		if (task.$ === 2 && task.c)
		{
			task.c();
		}

		proc.f = null;

		callback(_Scheduler_succeed(_Utils_Tuple0));
	});
}


/* STEP PROCESSES

type alias Process =
  { $ : tag
  , id : unique_id
  , root : Task
  , stack : null | { $: SUCCEED | FAIL, a: callback, b: stack }
  , mailbox : [msg]
  }

*/


var _Scheduler_working = false;
var _Scheduler_queue = [];


function _Scheduler_enqueue(proc)
{
	_Scheduler_queue.push(proc);
	if (_Scheduler_working)
	{
		return;
	}
	_Scheduler_working = true;
	while (proc = _Scheduler_queue.shift())
	{
		_Scheduler_step(proc);
	}
	_Scheduler_working = false;
}


function _Scheduler_step(proc)
{
	while (proc.f)
	{
		var rootTag = proc.f.$;
		if (rootTag === 0 || rootTag === 1)
		{
			while (proc.g && proc.g.$ !== rootTag)
			{
				proc.g = proc.g.i;
			}
			if (!proc.g)
			{
				return;
			}
			proc.f = proc.g.b(proc.f.a);
			proc.g = proc.g.i;
		}
		else if (rootTag === 2)
		{
			proc.f.c = proc.f.b(function(newRoot) {
				proc.f = newRoot;
				_Scheduler_enqueue(proc);
			});
			return;
		}
		else if (rootTag === 5)
		{
			if (proc.h.length === 0)
			{
				return;
			}
			proc.f = proc.f.b(proc.h.shift());
		}
		else // if (rootTag === 3 || rootTag === 4)
		{
			proc.g = {
				$: rootTag === 3 ? 0 : 1,
				b: proc.f.b,
				i: proc.g
			};
			proc.f = proc.f.d;
		}
	}
}



function _Process_sleep(time)
{
	return _Scheduler_binding(function(callback) {
		var id = setTimeout(function() {
			callback(_Scheduler_succeed(_Utils_Tuple0));
		}, time);

		return function() { clearTimeout(id); };
	});
}




// PROGRAMS


var _Platform_worker = F4(function(impl, flagDecoder, debugMetadata, args)
{
	return _Platform_initialize(
		flagDecoder,
		args,
		impl.bl,
		impl.fv,
		impl.by,
		function() { return function() {} }
	);
});



// INITIALIZE A PROGRAM


function _Platform_initialize(flagDecoder, args, init, update, subscriptions, stepperBuilder)
{
	var result = A2(_Json_run, flagDecoder, _Json_wrap(args ? args['flags'] : undefined));
	$elm$core$Result$isOk(result) || _Debug_crash(2 /**_UNUSED/, _Json_errorToString(result.a) /**/);
	var managers = {};
	var initPair = init(result.a);
	var model = initPair.a;
	var stepper = stepperBuilder(sendToApp, model);
	var ports = _Platform_setupEffects(managers, sendToApp);

	function sendToApp(msg, viewMetadata)
	{
		var pair = A2(update, msg, model);
		stepper(model = pair.a, viewMetadata);
		_Platform_enqueueEffects(managers, pair.b, subscriptions(model));
	}

	_Platform_enqueueEffects(managers, initPair.b, subscriptions(model));

	return ports ? { ports: ports } : {};
}



// TRACK PRELOADS
//
// This is used by code in elm/browser and elm/http
// to register any HTTP requests that are triggered by init.
//


var _Platform_preload;


function _Platform_registerPreload(url)
{
	_Platform_preload.add(url);
}



// EFFECT MANAGERS


var _Platform_effectManagers = {};


function _Platform_setupEffects(managers, sendToApp)
{
	var ports;

	// setup all necessary effect managers
	for (var key in _Platform_effectManagers)
	{
		var manager = _Platform_effectManagers[key];

		if (manager.a)
		{
			ports = ports || {};
			ports[key] = manager.a(key, sendToApp);
		}

		managers[key] = _Platform_instantiateManager(manager, sendToApp);
	}

	return ports;
}


function _Platform_createManager(init, onEffects, onSelfMsg, cmdMap, subMap)
{
	return {
		b: init,
		c: onEffects,
		d: onSelfMsg,
		e: cmdMap,
		f: subMap
	};
}


function _Platform_instantiateManager(info, sendToApp)
{
	var router = {
		g: sendToApp,
		h: undefined
	};

	var onEffects = info.c;
	var onSelfMsg = info.d;
	var cmdMap = info.e;
	var subMap = info.f;

	function loop(state)
	{
		return A2(_Scheduler_andThen, loop, _Scheduler_receive(function(msg)
		{
			var value = msg.a;

			if (msg.$ === 0)
			{
				return A3(onSelfMsg, router, value, state);
			}

			return cmdMap && subMap
				? A4(onEffects, router, value.i, value.j, state)
				: A3(onEffects, router, cmdMap ? value.i : value.j, state);
		}));
	}

	return router.h = _Scheduler_rawSpawn(A2(_Scheduler_andThen, loop, info.b));
}



// ROUTING


var _Platform_sendToApp = F2(function(router, msg)
{
	return _Scheduler_binding(function(callback)
	{
		router.g(msg);
		callback(_Scheduler_succeed(_Utils_Tuple0));
	});
});


var _Platform_sendToSelf = F2(function(router, msg)
{
	return A2(_Scheduler_send, router.h, {
		$: 0,
		a: msg
	});
});



// BAGS


function _Platform_leaf(home)
{
	return function(value)
	{
		return {
			$: 1,
			k: home,
			l: value
		};
	};
}


function _Platform_batch(list)
{
	return {
		$: 2,
		m: list
	};
}


var _Platform_map = F2(function(tagger, bag)
{
	return {
		$: 3,
		n: tagger,
		o: bag
	}
});



// PIPE BAGS INTO EFFECT MANAGERS
//
// Effects must be queued!
//
// Say your init contains a synchronous command, like Time.now or Time.here
//
//   - This will produce a batch of effects (FX_1)
//   - The synchronous task triggers the subsequent `update` call
//   - This will produce a batch of effects (FX_2)
//
// If we just start dispatching FX_2, subscriptions from FX_2 can be processed
// before subscriptions from FX_1. No good! Earlier versions of this code had
// this problem, leading to these reports:
//
//   https://github.com/elm/core/issues/980
//   https://github.com/elm/core/pull/981
//   https://github.com/elm/compiler/issues/1776
//
// The queue is necessary to avoid ordering issues for synchronous commands.


// Why use true/false here? Why not just check the length of the queue?
// The goal is to detect "are we currently dispatching effects?" If we
// are, we need to bail and let the ongoing while loop handle things.
//
// Now say the queue has 1 element. When we dequeue the final element,
// the queue will be empty, but we are still actively dispatching effects.
// So you could get queue jumping in a really tricky category of cases.
//
var _Platform_effectsQueue = [];
var _Platform_effectsActive = false;


function _Platform_enqueueEffects(managers, cmdBag, subBag)
{
	_Platform_effectsQueue.push({ p: managers, q: cmdBag, r: subBag });

	if (_Platform_effectsActive) return;

	_Platform_effectsActive = true;
	for (var fx; fx = _Platform_effectsQueue.shift(); )
	{
		_Platform_dispatchEffects(fx.p, fx.q, fx.r);
	}
	_Platform_effectsActive = false;
}


function _Platform_dispatchEffects(managers, cmdBag, subBag)
{
	var effectsDict = {};
	_Platform_gatherEffects(true, cmdBag, effectsDict, null);
	_Platform_gatherEffects(false, subBag, effectsDict, null);

	for (var home in managers)
	{
		_Scheduler_rawSend(managers[home], {
			$: 'fx',
			a: effectsDict[home] || { i: _List_Nil, j: _List_Nil }
		});
	}
}


function _Platform_gatherEffects(isCmd, bag, effectsDict, taggers)
{
	switch (bag.$)
	{
		case 1:
			var home = bag.k;
			var effect = _Platform_toEffect(isCmd, home, taggers, bag.l);
			effectsDict[home] = _Platform_insert(isCmd, effect, effectsDict[home]);
			return;

		case 2:
			for (var list = bag.m; list.b; list = list.b) // WHILE_CONS
			{
				_Platform_gatherEffects(isCmd, list.a, effectsDict, taggers);
			}
			return;

		case 3:
			_Platform_gatherEffects(isCmd, bag.o, effectsDict, {
				s: bag.n,
				t: taggers
			});
			return;
	}
}


function _Platform_toEffect(isCmd, home, taggers, value)
{
	function applyTaggers(x)
	{
		for (var temp = taggers; temp; temp = temp.t)
		{
			x = temp.s(x);
		}
		return x;
	}

	var map = isCmd
		? _Platform_effectManagers[home].e
		: _Platform_effectManagers[home].f;

	return A2(map, applyTaggers, value)
}


function _Platform_insert(isCmd, newEffect, effects)
{
	effects = effects || { i: _List_Nil, j: _List_Nil };

	isCmd
		? (effects.i = _List_Cons(newEffect, effects.i))
		: (effects.j = _List_Cons(newEffect, effects.j));

	return effects;
}



// PORTS


function _Platform_checkPortName(name)
{
	if (_Platform_effectManagers[name])
	{
		_Debug_crash(3, name)
	}
}



// OUTGOING PORTS


function _Platform_outgoingPort(name, converter)
{
	_Platform_checkPortName(name);
	_Platform_effectManagers[name] = {
		e: _Platform_outgoingPortMap,
		u: converter,
		a: _Platform_setupOutgoingPort
	};
	return _Platform_leaf(name);
}


var _Platform_outgoingPortMap = F2(function(tagger, value) { return value; });


function _Platform_setupOutgoingPort(name)
{
	var subs = [];
	var converter = _Platform_effectManagers[name].u;

	// CREATE MANAGER

	var init = _Process_sleep(0);

	_Platform_effectManagers[name].b = init;
	_Platform_effectManagers[name].c = F3(function(router, cmdList, state)
	{
		for ( ; cmdList.b; cmdList = cmdList.b) // WHILE_CONS
		{
			// grab a separate reference to subs in case unsubscribe is called
			var currentSubs = subs;
			var value = _Json_unwrap(converter(cmdList.a));
			for (var i = 0; i < currentSubs.length; i++)
			{
				currentSubs[i](value);
			}
		}
		return init;
	});

	// PUBLIC API

	function subscribe(callback)
	{
		subs.push(callback);
	}

	function unsubscribe(callback)
	{
		// copy subs into a new array in case unsubscribe is called within a
		// subscribed callback
		subs = subs.slice();
		var index = subs.indexOf(callback);
		if (index >= 0)
		{
			subs.splice(index, 1);
		}
	}

	return {
		subscribe: subscribe,
		unsubscribe: unsubscribe
	};
}



// INCOMING PORTS


function _Platform_incomingPort(name, converter)
{
	_Platform_checkPortName(name);
	_Platform_effectManagers[name] = {
		f: _Platform_incomingPortMap,
		u: converter,
		a: _Platform_setupIncomingPort
	};
	return _Platform_leaf(name);
}


var _Platform_incomingPortMap = F2(function(tagger, finalTagger)
{
	return function(value)
	{
		return tagger(finalTagger(value));
	};
});


function _Platform_setupIncomingPort(name, sendToApp)
{
	var subs = _List_Nil;
	var converter = _Platform_effectManagers[name].u;

	// CREATE MANAGER

	var init = _Scheduler_succeed(null);

	_Platform_effectManagers[name].b = init;
	_Platform_effectManagers[name].c = F3(function(router, subList, state)
	{
		subs = subList;
		return init;
	});

	// PUBLIC API

	function send(incomingValue)
	{
		var result = A2(_Json_run, converter, _Json_wrap(incomingValue));

		$elm$core$Result$isOk(result) || _Debug_crash(4, name, result.a);

		var value = result.a;
		for (var temp = subs; temp.b; temp = temp.b) // WHILE_CONS
		{
			sendToApp(temp.a(value));
		}
	}

	return { send: send };
}



// EXPORT ELM MODULES
//
// Have DEBUG and PROD versions so that we can (1) give nicer errors in
// debug mode and (2) not pay for the bits needed for that in prod mode.
//


function _Platform_export(exports)
{
	scope['Elm']
		? _Platform_mergeExportsProd(scope['Elm'], exports)
		: scope['Elm'] = exports;
}


function _Platform_mergeExportsProd(obj, exports)
{
	for (var name in exports)
	{
		(name in obj)
			? (name == 'init')
				? _Debug_crash(6)
				: _Platform_mergeExportsProd(obj[name], exports[name])
			: (obj[name] = exports[name]);
	}
}


function _Platform_export_UNUSED(exports)
{
	scope['Elm']
		? _Platform_mergeExportsDebug('Elm', scope['Elm'], exports)
		: scope['Elm'] = exports;
}


function _Platform_mergeExportsDebug(moduleName, obj, exports)
{
	for (var name in exports)
	{
		(name in obj)
			? (name == 'init')
				? _Debug_crash(6, moduleName)
				: _Platform_mergeExportsDebug(moduleName + '.' + name, obj[name], exports[name])
			: (obj[name] = exports[name]);
	}
}




// HELPERS


var _VirtualDom_divertHrefToApp;

var _VirtualDom_doc = typeof document !== 'undefined' ? document : {};


function _VirtualDom_appendChild(parent, child)
{
	parent.appendChild(child);
}

var _VirtualDom_init = F4(function(virtualNode, flagDecoder, debugMetadata, args)
{
	// NOTE: this function needs _Platform_export available to work

	/**/
	var node = args['node'];
	//*/
	/**_UNUSED/
	var node = args && args['node'] ? args['node'] : _Debug_crash(0);
	//*/

	node.parentNode.replaceChild(
		_VirtualDom_render(virtualNode, function() {}),
		node
	);

	return {};
});



// TEXT


function _VirtualDom_text(string)
{
	return {
		$: 0,
		a: string
	};
}



// NODE


var _VirtualDom_nodeNS = F2(function(namespace, tag)
{
	return F2(function(factList, kidList)
	{
		for (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS
		{
			var kid = kidList.a;
			descendantsCount += (kid.b || 0);
			kids.push(kid);
		}
		descendantsCount += kids.length;

		return {
			$: 1,
			c: tag,
			d: _VirtualDom_organizeFacts(factList),
			e: kids,
			f: namespace,
			b: descendantsCount
		};
	});
});


var _VirtualDom_node = _VirtualDom_nodeNS(undefined);



// KEYED NODE


var _VirtualDom_keyedNodeNS = F2(function(namespace, tag)
{
	return F2(function(factList, kidList)
	{
		for (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS
		{
			var kid = kidList.a;
			descendantsCount += (kid.b.b || 0);
			kids.push(kid);
		}
		descendantsCount += kids.length;

		return {
			$: 2,
			c: tag,
			d: _VirtualDom_organizeFacts(factList),
			e: kids,
			f: namespace,
			b: descendantsCount
		};
	});
});


var _VirtualDom_keyedNode = _VirtualDom_keyedNodeNS(undefined);



// CUSTOM


function _VirtualDom_custom(factList, model, render, diff)
{
	return {
		$: 3,
		d: _VirtualDom_organizeFacts(factList),
		g: model,
		h: render,
		i: diff
	};
}



// MAP


var _VirtualDom_map = F2(function(tagger, node)
{
	return {
		$: 4,
		j: tagger,
		k: node,
		b: 1 + (node.b || 0)
	};
});



// LAZY


function _VirtualDom_thunk(refs, thunk)
{
	return {
		$: 5,
		l: refs,
		m: thunk,
		k: undefined
	};
}

var _VirtualDom_lazy = F2(function(func, a)
{
	return _VirtualDom_thunk([func, a], function() {
		return func(a);
	});
});

var _VirtualDom_lazy2 = F3(function(func, a, b)
{
	return _VirtualDom_thunk([func, a, b], function() {
		return A2(func, a, b);
	});
});

var _VirtualDom_lazy3 = F4(function(func, a, b, c)
{
	return _VirtualDom_thunk([func, a, b, c], function() {
		return A3(func, a, b, c);
	});
});

var _VirtualDom_lazy4 = F5(function(func, a, b, c, d)
{
	return _VirtualDom_thunk([func, a, b, c, d], function() {
		return A4(func, a, b, c, d);
	});
});

var _VirtualDom_lazy5 = F6(function(func, a, b, c, d, e)
{
	return _VirtualDom_thunk([func, a, b, c, d, e], function() {
		return A5(func, a, b, c, d, e);
	});
});

var _VirtualDom_lazy6 = F7(function(func, a, b, c, d, e, f)
{
	return _VirtualDom_thunk([func, a, b, c, d, e, f], function() {
		return A6(func, a, b, c, d, e, f);
	});
});

var _VirtualDom_lazy7 = F8(function(func, a, b, c, d, e, f, g)
{
	return _VirtualDom_thunk([func, a, b, c, d, e, f, g], function() {
		return A7(func, a, b, c, d, e, f, g);
	});
});

var _VirtualDom_lazy8 = F9(function(func, a, b, c, d, e, f, g, h)
{
	return _VirtualDom_thunk([func, a, b, c, d, e, f, g, h], function() {
		return A8(func, a, b, c, d, e, f, g, h);
	});
});



// FACTS


var _VirtualDom_on = F2(function(key, handler)
{
	return {
		$: 'a0',
		n: key,
		o: handler
	};
});
var _VirtualDom_style = F2(function(key, value)
{
	return {
		$: 'a1',
		n: key,
		o: value
	};
});
var _VirtualDom_property = F2(function(key, value)
{
	return {
		$: 'a2',
		n: key,
		o: value
	};
});
var _VirtualDom_attribute = F2(function(key, value)
{
	return {
		$: 'a3',
		n: key,
		o: value
	};
});
var _VirtualDom_attributeNS = F3(function(namespace, key, value)
{
	return {
		$: 'a4',
		n: key,
		o: { f: namespace, o: value }
	};
});



// XSS ATTACK VECTOR CHECKS
//
// For some reason, tabs can appear in href protocols and it still works.
// So '\tjava\tSCRIPT:alert("!!!")' and 'javascript:alert("!!!")' are the same
// in practice. That is why _VirtualDom_RE_js and _VirtualDom_RE_js_html look
// so freaky.
//
// Pulling the regular expressions out to the top level gives a slight speed
// boost in small benchmarks (4-10%) but hoisting values to reduce allocation
// can be unpredictable in large programs where JIT may have a harder time with
// functions are not fully self-contained. The benefit is more that the js and
// js_html ones are so weird that I prefer to see them near each other.


var _VirtualDom_RE_script = /^script$/i;
var _VirtualDom_RE_on_formAction = /^(on|formAction$)/i;
var _VirtualDom_RE_js = /^\s*j\s*a\s*v\s*a\s*s\s*c\s*r\s*i\s*p\s*t\s*:/i;
var _VirtualDom_RE_js_html = /^\s*(j\s*a\s*v\s*a\s*s\s*c\s*r\s*i\s*p\s*t\s*:|d\s*a\s*t\s*a\s*:\s*t\s*e\s*x\s*t\s*\/\s*h\s*t\s*m\s*l\s*(,|;))/i;


function _VirtualDom_noScript(tag)
{
	return _VirtualDom_RE_script.test(tag) ? 'p' : tag;
}

function _VirtualDom_noOnOrFormAction(key)
{
	return _VirtualDom_RE_on_formAction.test(key) ? 'data-' + key : key;
}

function _VirtualDom_noInnerHtmlOrFormAction(key)
{
	return key == 'innerHTML' || key == 'formAction' ? 'data-' + key : key;
}

function _VirtualDom_noJavaScriptUri(value)
{
	return _VirtualDom_RE_js.test(value)
		? /**/''//*//**_UNUSED/'javascript:alert("This is an XSS vector. Please use ports or web components instead.")'//*/
		: value;
}

function _VirtualDom_noJavaScriptOrHtmlUri(value)
{
	return _VirtualDom_RE_js_html.test(value)
		? /**/''//*//**_UNUSED/'javascript:alert("This is an XSS vector. Please use ports or web components instead.")'//*/
		: value;
}

function _VirtualDom_noJavaScriptOrHtmlJson(value)
{
	return (typeof _Json_unwrap(value) === 'string' && _VirtualDom_RE_js_html.test(_Json_unwrap(value)))
		? _Json_wrap(
			/**/''//*//**_UNUSED/'javascript:alert("This is an XSS vector. Please use ports or web components instead.")'//*/
		) : value;
}



// MAP FACTS


var _VirtualDom_mapAttribute = F2(function(func, attr)
{
	return (attr.$ === 'a0')
		? A2(_VirtualDom_on, attr.n, _VirtualDom_mapHandler(func, attr.o))
		: attr;
});

function _VirtualDom_mapHandler(func, handler)
{
	var tag = $elm$virtual_dom$VirtualDom$toHandlerInt(handler);

	// 0 = Normal
	// 1 = MayStopPropagation
	// 2 = MayPreventDefault
	// 3 = Custom

	return {
		$: handler.$,
		a:
			!tag
				? A2($elm$json$Json$Decode$map, func, handler.a)
				:
			A3($elm$json$Json$Decode$map2,
				tag < 3
					? _VirtualDom_mapEventTuple
					: _VirtualDom_mapEventRecord,
				$elm$json$Json$Decode$succeed(func),
				handler.a
			)
	};
}

var _VirtualDom_mapEventTuple = F2(function(func, tuple)
{
	return _Utils_Tuple2(func(tuple.a), tuple.b);
});

var _VirtualDom_mapEventRecord = F2(function(func, record)
{
	return {
		cq: func(record.cq),
		hw: record.hw,
		jy: record.jy
	}
});



// ORGANIZE FACTS


function _VirtualDom_organizeFacts(factList)
{
	for (var facts = {}; factList.b; factList = factList.b) // WHILE_CONS
	{
		var entry = factList.a;

		var tag = entry.$;
		var key = entry.n;
		var value = entry.o;

		if (tag === 'a2')
		{
			(key === 'className')
				? _VirtualDom_addClass(facts, key, _Json_unwrap(value))
				: facts[key] = _Json_unwrap(value);

			continue;
		}

		var subFacts = facts[tag] || (facts[tag] = {});
		(tag === 'a3' && key === 'class')
			? _VirtualDom_addClass(subFacts, key, value)
			: subFacts[key] = value;
	}

	return facts;
}

function _VirtualDom_addClass(object, key, newClass)
{
	var classes = object[key];
	object[key] = classes ? classes + ' ' + newClass : newClass;
}



// RENDER


function _VirtualDom_render(vNode, eventNode)
{
	var tag = vNode.$;

	if (tag === 5)
	{
		return _VirtualDom_render(vNode.k || (vNode.k = vNode.m()), eventNode);
	}

	if (tag === 0)
	{
		return _VirtualDom_doc.createTextNode(vNode.a);
	}

	if (tag === 4)
	{
		var subNode = vNode.k;
		var tagger = vNode.j;

		while (subNode.$ === 4)
		{
			typeof tagger !== 'object'
				? tagger = [tagger, subNode.j]
				: tagger.push(subNode.j);

			subNode = subNode.k;
		}

		var subEventRoot = { j: tagger, p: eventNode };
		var domNode = _VirtualDom_render(subNode, subEventRoot);
		domNode.elm_event_node_ref = subEventRoot;
		return domNode;
	}

	if (tag === 3)
	{
		var domNode = vNode.h(vNode.g);
		_VirtualDom_applyFacts(domNode, eventNode, vNode.d);
		return domNode;
	}

	// at this point `tag` must be 1 or 2

	var domNode = vNode.f
		? _VirtualDom_doc.createElementNS(vNode.f, vNode.c)
		: _VirtualDom_doc.createElement(vNode.c);

	if (_VirtualDom_divertHrefToApp && vNode.c == 'a')
	{
		domNode.addEventListener('click', _VirtualDom_divertHrefToApp(domNode));
	}

	_VirtualDom_applyFacts(domNode, eventNode, vNode.d);

	for (var kids = vNode.e, i = 0; i < kids.length; i++)
	{
		_VirtualDom_appendChild(domNode, _VirtualDom_render(tag === 1 ? kids[i] : kids[i].b, eventNode));
	}

	return domNode;
}



// APPLY FACTS


function _VirtualDom_applyFacts(domNode, eventNode, facts)
{
	for (var key in facts)
	{
		var value = facts[key];

		key === 'a1'
			? _VirtualDom_applyStyles(domNode, value)
			:
		key === 'a0'
			? _VirtualDom_applyEvents(domNode, eventNode, value)
			:
		key === 'a3'
			? _VirtualDom_applyAttrs(domNode, value)
			:
		key === 'a4'
			? _VirtualDom_applyAttrsNS(domNode, value)
			:
		((key !== 'value' && key !== 'checked') || domNode[key] !== value) && (domNode[key] = value);
	}
}



// APPLY STYLES


function _VirtualDom_applyStyles(domNode, styles)
{
	var domNodeStyle = domNode.style;

	for (var key in styles)
	{
		domNodeStyle[key] = styles[key];
	}
}



// APPLY ATTRS


function _VirtualDom_applyAttrs(domNode, attrs)
{
	for (var key in attrs)
	{
		var value = attrs[key];
		typeof value !== 'undefined'
			? domNode.setAttribute(key, value)
			: domNode.removeAttribute(key);
	}
}



// APPLY NAMESPACED ATTRS


function _VirtualDom_applyAttrsNS(domNode, nsAttrs)
{
	for (var key in nsAttrs)
	{
		var pair = nsAttrs[key];
		var namespace = pair.f;
		var value = pair.o;

		typeof value !== 'undefined'
			? domNode.setAttributeNS(namespace, key, value)
			: domNode.removeAttributeNS(namespace, key);
	}
}



// APPLY EVENTS


function _VirtualDom_applyEvents(domNode, eventNode, events)
{
	var allCallbacks = domNode.elmFs || (domNode.elmFs = {});

	for (var key in events)
	{
		var newHandler = events[key];
		var oldCallback = allCallbacks[key];

		if (!newHandler)
		{
			domNode.removeEventListener(key, oldCallback);
			allCallbacks[key] = undefined;
			continue;
		}

		if (oldCallback)
		{
			var oldHandler = oldCallback.q;
			if (oldHandler.$ === newHandler.$)
			{
				oldCallback.q = newHandler;
				continue;
			}
			domNode.removeEventListener(key, oldCallback);
		}

		oldCallback = _VirtualDom_makeCallback(eventNode, newHandler);
		domNode.addEventListener(key, oldCallback,
			_VirtualDom_passiveSupported
			&& { passive: $elm$virtual_dom$VirtualDom$toHandlerInt(newHandler) < 2 }
		);
		allCallbacks[key] = oldCallback;
	}
}



// PASSIVE EVENTS


var _VirtualDom_passiveSupported;

try
{
	window.addEventListener('t', null, Object.defineProperty({}, 'passive', {
		get: function() { _VirtualDom_passiveSupported = true; }
	}));
}
catch(e) {}



// EVENT HANDLERS


function _VirtualDom_makeCallback(eventNode, initialHandler)
{
	function callback(event)
	{
		var handler = callback.q;
		var result = _Json_runHelp(handler.a, event);

		if (!$elm$core$Result$isOk(result))
		{
			return;
		}

		var tag = $elm$virtual_dom$VirtualDom$toHandlerInt(handler);

		// 0 = Normal
		// 1 = MayStopPropagation
		// 2 = MayPreventDefault
		// 3 = Custom

		var value = result.a;
		var message = !tag ? value : tag < 3 ? value.a : value.cq;
		var stopPropagation = tag == 1 ? value.b : tag == 3 && value.hw;
		var currentEventNode = (
			stopPropagation && event.stopPropagation(),
			(tag == 2 ? value.b : tag == 3 && value.jy) && event.preventDefault(),
			eventNode
		);
		var tagger;
		var i;
		while (tagger = currentEventNode.j)
		{
			if (typeof tagger == 'function')
			{
				message = tagger(message);
			}
			else
			{
				for (var i = tagger.length; i--; )
				{
					message = tagger[i](message);
				}
			}
			currentEventNode = currentEventNode.p;
		}
		currentEventNode(message, stopPropagation); // stopPropagation implies isSync
	}

	callback.q = initialHandler;

	return callback;
}

function _VirtualDom_equalEvents(x, y)
{
	return x.$ == y.$ && _Json_equality(x.a, y.a);
}



// DIFF


// TODO: Should we do patches like in iOS?
//
// type Patch
//   = At Int Patch
//   | Batch (List Patch)
//   | Change ...
//
// How could it not be better?
//
function _VirtualDom_diff(x, y)
{
	var patches = [];
	_VirtualDom_diffHelp(x, y, patches, 0);
	return patches;
}


function _VirtualDom_pushPatch(patches, type, index, data)
{
	var patch = {
		$: type,
		r: index,
		s: data,
		t: undefined,
		u: undefined
	};
	patches.push(patch);
	return patch;
}


function _VirtualDom_diffHelp(x, y, patches, index)
{
	if (x === y)
	{
		return;
	}

	var xType = x.$;
	var yType = y.$;

	// Bail if you run into different types of nodes. Implies that the
	// structure has changed significantly and it's not worth a diff.
	if (xType !== yType)
	{
		if (xType === 1 && yType === 2)
		{
			y = _VirtualDom_dekey(y);
			yType = 1;
		}
		else
		{
			_VirtualDom_pushPatch(patches, 0, index, y);
			return;
		}
	}

	// Now we know that both nodes are the same $.
	switch (yType)
	{
		case 5:
			var xRefs = x.l;
			var yRefs = y.l;
			var i = xRefs.length;
			var same = i === yRefs.length;
			while (same && i--)
			{
				same = xRefs[i] === yRefs[i];
			}
			if (same)
			{
				y.k = x.k;
				return;
			}
			y.k = y.m();
			var subPatches = [];
			_VirtualDom_diffHelp(x.k, y.k, subPatches, 0);
			subPatches.length > 0 && _VirtualDom_pushPatch(patches, 1, index, subPatches);
			return;

		case 4:
			// gather nested taggers
			var xTaggers = x.j;
			var yTaggers = y.j;
			var nesting = false;

			var xSubNode = x.k;
			while (xSubNode.$ === 4)
			{
				nesting = true;

				typeof xTaggers !== 'object'
					? xTaggers = [xTaggers, xSubNode.j]
					: xTaggers.push(xSubNode.j);

				xSubNode = xSubNode.k;
			}

			var ySubNode = y.k;
			while (ySubNode.$ === 4)
			{
				nesting = true;

				typeof yTaggers !== 'object'
					? yTaggers = [yTaggers, ySubNode.j]
					: yTaggers.push(ySubNode.j);

				ySubNode = ySubNode.k;
			}

			// Just bail if different numbers of taggers. This implies the
			// structure of the virtual DOM has changed.
			if (nesting && xTaggers.length !== yTaggers.length)
			{
				_VirtualDom_pushPatch(patches, 0, index, y);
				return;
			}

			// check if taggers are "the same"
			if (nesting ? !_VirtualDom_pairwiseRefEqual(xTaggers, yTaggers) : xTaggers !== yTaggers)
			{
				_VirtualDom_pushPatch(patches, 2, index, yTaggers);
			}

			// diff everything below the taggers
			_VirtualDom_diffHelp(xSubNode, ySubNode, patches, index + 1);
			return;

		case 0:
			if (x.a !== y.a)
			{
				_VirtualDom_pushPatch(patches, 3, index, y.a);
			}
			return;

		case 1:
			_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKids);
			return;

		case 2:
			_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKeyedKids);
			return;

		case 3:
			if (x.h !== y.h)
			{
				_VirtualDom_pushPatch(patches, 0, index, y);
				return;
			}

			var factsDiff = _VirtualDom_diffFacts(x.d, y.d);
			factsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);

			var patch = y.i(x.g, y.g);
			patch && _VirtualDom_pushPatch(patches, 5, index, patch);

			return;
	}
}

// assumes the incoming arrays are the same length
function _VirtualDom_pairwiseRefEqual(as, bs)
{
	for (var i = 0; i < as.length; i++)
	{
		if (as[i] !== bs[i])
		{
			return false;
		}
	}

	return true;
}

function _VirtualDom_diffNodes(x, y, patches, index, diffKids)
{
	// Bail if obvious indicators have changed. Implies more serious
	// structural changes such that it's not worth it to diff.
	if (x.c !== y.c || x.f !== y.f)
	{
		_VirtualDom_pushPatch(patches, 0, index, y);
		return;
	}

	var factsDiff = _VirtualDom_diffFacts(x.d, y.d);
	factsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);

	diffKids(x, y, patches, index);
}



// DIFF FACTS


// TODO Instead of creating a new diff object, it's possible to just test if
// there *is* a diff. During the actual patch, do the diff again and make the
// modifications directly. This way, there's no new allocations. Worth it?
function _VirtualDom_diffFacts(x, y, category)
{
	var diff;

	// look for changes and removals
	for (var xKey in x)
	{
		if (xKey === 'a1' || xKey === 'a0' || xKey === 'a3' || xKey === 'a4')
		{
			var subDiff = _VirtualDom_diffFacts(x[xKey], y[xKey] || {}, xKey);
			if (subDiff)
			{
				diff = diff || {};
				diff[xKey] = subDiff;
			}
			continue;
		}

		// remove if not in the new facts
		if (!(xKey in y))
		{
			diff = diff || {};
			diff[xKey] =
				!category
					? (typeof x[xKey] === 'string' ? '' : null)
					:
				(category === 'a1')
					? ''
					:
				(category === 'a0' || category === 'a3')
					? undefined
					:
				{ f: x[xKey].f, o: undefined };

			continue;
		}

		var xValue = x[xKey];
		var yValue = y[xKey];

		// reference equal, so don't worry about it
		if (xValue === yValue && xKey !== 'value' && xKey !== 'checked'
			|| category === 'a0' && _VirtualDom_equalEvents(xValue, yValue))
		{
			continue;
		}

		diff = diff || {};
		diff[xKey] = yValue;
	}

	// add new stuff
	for (var yKey in y)
	{
		if (!(yKey in x))
		{
			diff = diff || {};
			diff[yKey] = y[yKey];
		}
	}

	return diff;
}



// DIFF KIDS


function _VirtualDom_diffKids(xParent, yParent, patches, index)
{
	var xKids = xParent.e;
	var yKids = yParent.e;

	var xLen = xKids.length;
	var yLen = yKids.length;

	// FIGURE OUT IF THERE ARE INSERTS OR REMOVALS

	if (xLen > yLen)
	{
		_VirtualDom_pushPatch(patches, 6, index, {
			v: yLen,
			i: xLen - yLen
		});
	}
	else if (xLen < yLen)
	{
		_VirtualDom_pushPatch(patches, 7, index, {
			v: xLen,
			e: yKids
		});
	}

	// PAIRWISE DIFF EVERYTHING ELSE

	for (var minLen = xLen < yLen ? xLen : yLen, i = 0; i < minLen; i++)
	{
		var xKid = xKids[i];
		_VirtualDom_diffHelp(xKid, yKids[i], patches, ++index);
		index += xKid.b || 0;
	}
}



// KEYED DIFF


function _VirtualDom_diffKeyedKids(xParent, yParent, patches, rootIndex)
{
	var localPatches = [];

	var changes = {}; // Dict String Entry
	var inserts = []; // Array { index : Int, entry : Entry }
	// type Entry = { tag : String, vnode : VNode, index : Int, data : _ }

	var xKids = xParent.e;
	var yKids = yParent.e;
	var xLen = xKids.length;
	var yLen = yKids.length;
	var xIndex = 0;
	var yIndex = 0;

	var index = rootIndex;

	while (xIndex < xLen && yIndex < yLen)
	{
		var x = xKids[xIndex];
		var y = yKids[yIndex];

		var xKey = x.a;
		var yKey = y.a;
		var xNode = x.b;
		var yNode = y.b;

		var newMatch = undefined;
		var oldMatch = undefined;

		// check if keys match

		if (xKey === yKey)
		{
			index++;
			_VirtualDom_diffHelp(xNode, yNode, localPatches, index);
			index += xNode.b || 0;

			xIndex++;
			yIndex++;
			continue;
		}

		// look ahead 1 to detect insertions and removals.

		var xNext = xKids[xIndex + 1];
		var yNext = yKids[yIndex + 1];

		if (xNext)
		{
			var xNextKey = xNext.a;
			var xNextNode = xNext.b;
			oldMatch = yKey === xNextKey;
		}

		if (yNext)
		{
			var yNextKey = yNext.a;
			var yNextNode = yNext.b;
			newMatch = xKey === yNextKey;
		}


		// swap x and y
		if (newMatch && oldMatch)
		{
			index++;
			_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);
			_VirtualDom_insertNode(changes, localPatches, xKey, yNode, yIndex, inserts);
			index += xNode.b || 0;

			index++;
			_VirtualDom_removeNode(changes, localPatches, xKey, xNextNode, index);
			index += xNextNode.b || 0;

			xIndex += 2;
			yIndex += 2;
			continue;
		}

		// insert y
		if (newMatch)
		{
			index++;
			_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);
			_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);
			index += xNode.b || 0;

			xIndex += 1;
			yIndex += 2;
			continue;
		}

		// remove x
		if (oldMatch)
		{
			index++;
			_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);
			index += xNode.b || 0;

			index++;
			_VirtualDom_diffHelp(xNextNode, yNode, localPatches, index);
			index += xNextNode.b || 0;

			xIndex += 2;
			yIndex += 1;
			continue;
		}

		// remove x, insert y
		if (xNext && xNextKey === yNextKey)
		{
			index++;
			_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);
			_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);
			index += xNode.b || 0;

			index++;
			_VirtualDom_diffHelp(xNextNode, yNextNode, localPatches, index);
			index += xNextNode.b || 0;

			xIndex += 2;
			yIndex += 2;
			continue;
		}

		break;
	}

	// eat up any remaining nodes with removeNode and insertNode

	while (xIndex < xLen)
	{
		index++;
		var x = xKids[xIndex];
		var xNode = x.b;
		_VirtualDom_removeNode(changes, localPatches, x.a, xNode, index);
		index += xNode.b || 0;
		xIndex++;
	}

	while (yIndex < yLen)
	{
		var endInserts = endInserts || [];
		var y = yKids[yIndex];
		_VirtualDom_insertNode(changes, localPatches, y.a, y.b, undefined, endInserts);
		yIndex++;
	}

	if (localPatches.length > 0 || inserts.length > 0 || endInserts)
	{
		_VirtualDom_pushPatch(patches, 8, rootIndex, {
			w: localPatches,
			x: inserts,
			y: endInserts
		});
	}
}



// CHANGES FROM KEYED DIFF


var _VirtualDom_POSTFIX = '_elmW6BL';


function _VirtualDom_insertNode(changes, localPatches, key, vnode, yIndex, inserts)
{
	var entry = changes[key];

	// never seen this key before
	if (!entry)
	{
		entry = {
			c: 0,
			z: vnode,
			r: yIndex,
			s: undefined
		};

		inserts.push({ r: yIndex, A: entry });
		changes[key] = entry;

		return;
	}

	// this key was removed earlier, a match!
	if (entry.c === 1)
	{
		inserts.push({ r: yIndex, A: entry });

		entry.c = 2;
		var subPatches = [];
		_VirtualDom_diffHelp(entry.z, vnode, subPatches, entry.r);
		entry.r = yIndex;
		entry.s.s = {
			w: subPatches,
			A: entry
		};

		return;
	}

	// this key has already been inserted or moved, a duplicate!
	_VirtualDom_insertNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, yIndex, inserts);
}


function _VirtualDom_removeNode(changes, localPatches, key, vnode, index)
{
	var entry = changes[key];

	// never seen this key before
	if (!entry)
	{
		var patch = _VirtualDom_pushPatch(localPatches, 9, index, undefined);

		changes[key] = {
			c: 1,
			z: vnode,
			r: index,
			s: patch
		};

		return;
	}

	// this key was inserted earlier, a match!
	if (entry.c === 0)
	{
		entry.c = 2;
		var subPatches = [];
		_VirtualDom_diffHelp(vnode, entry.z, subPatches, index);

		_VirtualDom_pushPatch(localPatches, 9, index, {
			w: subPatches,
			A: entry
		});

		return;
	}

	// this key has already been removed or moved, a duplicate!
	_VirtualDom_removeNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, index);
}



// ADD DOM NODES
//
// Each DOM node has an "index" assigned in order of traversal. It is important
// to minimize our crawl over the actual DOM, so these indexes (along with the
// descendantsCount of virtual nodes) let us skip touching entire subtrees of
// the DOM if we know there are no patches there.


function _VirtualDom_addDomNodes(domNode, vNode, patches, eventNode)
{
	_VirtualDom_addDomNodesHelp(domNode, vNode, patches, 0, 0, vNode.b, eventNode);
}


// assumes `patches` is non-empty and indexes increase monotonically.
function _VirtualDom_addDomNodesHelp(domNode, vNode, patches, i, low, high, eventNode)
{
	var patch = patches[i];
	var index = patch.r;

	while (index === low)
	{
		var patchType = patch.$;

		if (patchType === 1)
		{
			_VirtualDom_addDomNodes(domNode, vNode.k, patch.s, eventNode);
		}
		else if (patchType === 8)
		{
			patch.t = domNode;
			patch.u = eventNode;

			var subPatches = patch.s.w;
			if (subPatches.length > 0)
			{
				_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);
			}
		}
		else if (patchType === 9)
		{
			patch.t = domNode;
			patch.u = eventNode;

			var data = patch.s;
			if (data)
			{
				data.A.s = domNode;
				var subPatches = data.w;
				if (subPatches.length > 0)
				{
					_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);
				}
			}
		}
		else
		{
			patch.t = domNode;
			patch.u = eventNode;
		}

		i++;

		if (!(patch = patches[i]) || (index = patch.r) > high)
		{
			return i;
		}
	}

	var tag = vNode.$;

	if (tag === 4)
	{
		var subNode = vNode.k;

		while (subNode.$ === 4)
		{
			subNode = subNode.k;
		}

		return _VirtualDom_addDomNodesHelp(domNode, subNode, patches, i, low + 1, high, domNode.elm_event_node_ref);
	}

	// tag must be 1 or 2 at this point

	var vKids = vNode.e;
	var childNodes = domNode.childNodes;
	for (var j = 0; j < vKids.length; j++)
	{
		low++;
		var vKid = tag === 1 ? vKids[j] : vKids[j].b;
		var nextLow = low + (vKid.b || 0);
		if (low <= index && index <= nextLow)
		{
			i = _VirtualDom_addDomNodesHelp(childNodes[j], vKid, patches, i, low, nextLow, eventNode);
			if (!(patch = patches[i]) || (index = patch.r) > high)
			{
				return i;
			}
		}
		low = nextLow;
	}
	return i;
}



// APPLY PATCHES


function _VirtualDom_applyPatches(rootDomNode, oldVirtualNode, patches, eventNode)
{
	if (patches.length === 0)
	{
		return rootDomNode;
	}

	_VirtualDom_addDomNodes(rootDomNode, oldVirtualNode, patches, eventNode);
	return _VirtualDom_applyPatchesHelp(rootDomNode, patches);
}

function _VirtualDom_applyPatchesHelp(rootDomNode, patches)
{
	for (var i = 0; i < patches.length; i++)
	{
		var patch = patches[i];
		var localDomNode = patch.t
		var newNode = _VirtualDom_applyPatch(localDomNode, patch);
		if (localDomNode === rootDomNode)
		{
			rootDomNode = newNode;
		}
	}
	return rootDomNode;
}

function _VirtualDom_applyPatch(domNode, patch)
{
	switch (patch.$)
	{
		case 0:
			return _VirtualDom_applyPatchRedraw(domNode, patch.s, patch.u);

		case 4:
			_VirtualDom_applyFacts(domNode, patch.u, patch.s);
			return domNode;

		case 3:
			domNode.replaceData(0, domNode.length, patch.s);
			return domNode;

		case 1:
			return _VirtualDom_applyPatchesHelp(domNode, patch.s);

		case 2:
			if (domNode.elm_event_node_ref)
			{
				domNode.elm_event_node_ref.j = patch.s;
			}
			else
			{
				domNode.elm_event_node_ref = { j: patch.s, p: patch.u };
			}
			return domNode;

		case 6:
			var data = patch.s;
			for (var i = 0; i < data.i; i++)
			{
				domNode.removeChild(domNode.childNodes[data.v]);
			}
			return domNode;

		case 7:
			var data = patch.s;
			var kids = data.e;
			var i = data.v;
			var theEnd = domNode.childNodes[i];
			for (; i < kids.length; i++)
			{
				domNode.insertBefore(_VirtualDom_render(kids[i], patch.u), theEnd);
			}
			return domNode;

		case 9:
			var data = patch.s;
			if (!data)
			{
				domNode.parentNode.removeChild(domNode);
				return domNode;
			}
			var entry = data.A;
			if (typeof entry.r !== 'undefined')
			{
				domNode.parentNode.removeChild(domNode);
			}
			entry.s = _VirtualDom_applyPatchesHelp(domNode, data.w);
			return domNode;

		case 8:
			return _VirtualDom_applyPatchReorder(domNode, patch);

		case 5:
			return patch.s(domNode);

		default:
			_Debug_crash(10); // 'Ran into an unknown patch!'
	}
}


function _VirtualDom_applyPatchRedraw(domNode, vNode, eventNode)
{
	var parentNode = domNode.parentNode;
	var newNode = _VirtualDom_render(vNode, eventNode);

	if (!newNode.elm_event_node_ref)
	{
		newNode.elm_event_node_ref = domNode.elm_event_node_ref;
	}

	if (parentNode && newNode !== domNode)
	{
		parentNode.replaceChild(newNode, domNode);
	}
	return newNode;
}


function _VirtualDom_applyPatchReorder(domNode, patch)
{
	var data = patch.s;

	// remove end inserts
	var frag = _VirtualDom_applyPatchReorderEndInsertsHelp(data.y, patch);

	// removals
	domNode = _VirtualDom_applyPatchesHelp(domNode, data.w);

	// inserts
	var inserts = data.x;
	for (var i = 0; i < inserts.length; i++)
	{
		var insert = inserts[i];
		var entry = insert.A;
		var node = entry.c === 2
			? entry.s
			: _VirtualDom_render(entry.z, patch.u);
		domNode.insertBefore(node, domNode.childNodes[insert.r]);
	}

	// add end inserts
	if (frag)
	{
		_VirtualDom_appendChild(domNode, frag);
	}

	return domNode;
}


function _VirtualDom_applyPatchReorderEndInsertsHelp(endInserts, patch)
{
	if (!endInserts)
	{
		return;
	}

	var frag = _VirtualDom_doc.createDocumentFragment();
	for (var i = 0; i < endInserts.length; i++)
	{
		var insert = endInserts[i];
		var entry = insert.A;
		_VirtualDom_appendChild(frag, entry.c === 2
			? entry.s
			: _VirtualDom_render(entry.z, patch.u)
		);
	}
	return frag;
}


function _VirtualDom_virtualize(node)
{
	// TEXT NODES

	if (node.nodeType === 3)
	{
		return _VirtualDom_text(node.textContent);
	}


	// WEIRD NODES

	if (node.nodeType !== 1)
	{
		return _VirtualDom_text('');
	}


	// ELEMENT NODES

	var attrList = _List_Nil;
	var attrs = node.attributes;
	for (var i = attrs.length; i--; )
	{
		var attr = attrs[i];
		var name = attr.name;
		var value = attr.value;
		attrList = _List_Cons( A2(_VirtualDom_attribute, name, value), attrList );
	}

	var tag = node.tagName.toLowerCase();
	var kidList = _List_Nil;
	var kids = node.childNodes;

	for (var i = kids.length; i--; )
	{
		kidList = _List_Cons(_VirtualDom_virtualize(kids[i]), kidList);
	}
	return A3(_VirtualDom_node, tag, attrList, kidList);
}

function _VirtualDom_dekey(keyedNode)
{
	var keyedKids = keyedNode.e;
	var len = keyedKids.length;
	var kids = new Array(len);
	for (var i = 0; i < len; i++)
	{
		kids[i] = keyedKids[i].b;
	}

	return {
		$: 1,
		c: keyedNode.c,
		d: keyedNode.d,
		e: kids,
		f: keyedNode.f,
		b: keyedNode.b
	};
}




// ELEMENT


var _Debugger_element;

var _Browser_element = _Debugger_element || F4(function(impl, flagDecoder, debugMetadata, args)
{
	return _Platform_initialize(
		flagDecoder,
		args,
		impl.bl,
		impl.fv,
		impl.by,
		function(sendToApp, initialModel) {
			var view = impl.o3;
			/**/
			var domNode = args['node'];
			//*/
			/**_UNUSED/
			var domNode = args && args['node'] ? args['node'] : _Debug_crash(0);
			//*/
			var currNode = _VirtualDom_virtualize(domNode);

			return _Browser_makeAnimator(initialModel, function(model)
			{
				var nextNode = view(model);
				var patches = _VirtualDom_diff(currNode, nextNode);
				domNode = _VirtualDom_applyPatches(domNode, currNode, patches, sendToApp);
				currNode = nextNode;
			});
		}
	);
});



// DOCUMENT


var _Debugger_document;

var _Browser_document = _Debugger_document || F4(function(impl, flagDecoder, debugMetadata, args)
{
	return _Platform_initialize(
		flagDecoder,
		args,
		impl.bl,
		impl.fv,
		impl.by,
		function(sendToApp, initialModel) {
			var divertHrefToApp = impl.ho && impl.ho(sendToApp)
			var view = impl.o3;
			var title = _VirtualDom_doc.title;
			var bodyNode = _VirtualDom_doc.body;
			var currNode = _VirtualDom_virtualize(bodyNode);
			return _Browser_makeAnimator(initialModel, function(model)
			{
				_VirtualDom_divertHrefToApp = divertHrefToApp;
				var doc = view(model);
				var nextNode = _VirtualDom_node('body')(_List_Nil)(doc.kM);
				var patches = _VirtualDom_diff(currNode, nextNode);
				bodyNode = _VirtualDom_applyPatches(bodyNode, currNode, patches, sendToApp);
				currNode = nextNode;
				_VirtualDom_divertHrefToApp = 0;
				(title !== doc.a4) && (_VirtualDom_doc.title = title = doc.a4);
			});
		}
	);
});



// ANIMATION


var _Browser_cancelAnimationFrame =
	typeof cancelAnimationFrame !== 'undefined'
		? cancelAnimationFrame
		: function(id) { clearTimeout(id); };

var _Browser_requestAnimationFrame =
	typeof requestAnimationFrame !== 'undefined'
		? requestAnimationFrame
		: function(callback) { return setTimeout(callback, 1000 / 60); };


function _Browser_makeAnimator(model, draw)
{
	draw(model);

	var state = 0;

	function updateIfNeeded()
	{
		state = state === 1
			? 0
			: ( _Browser_requestAnimationFrame(updateIfNeeded), draw(model), 1 );
	}

	return function(nextModel, isSync)
	{
		model = nextModel;

		isSync
			? ( draw(model),
				state === 2 && (state = 1)
				)
			: ( state === 0 && _Browser_requestAnimationFrame(updateIfNeeded),
				state = 2
				);
	};
}



// APPLICATION


function _Browser_application(impl)
{
	var onUrlChange = impl.np;
	var onUrlRequest = impl.nq;
	var key = function() { key.a(onUrlChange(_Browser_getUrl())); };

	return _Browser_document({
		ho: function(sendToApp)
		{
			key.a = sendToApp;
			_Browser_window.addEventListener('popstate', key);
			_Browser_window.navigator.userAgent.indexOf('Trident') < 0 || _Browser_window.addEventListener('hashchange', key);

			return F2(function(domNode, event)
			{
				if (!event.ctrlKey && !event.metaKey && !event.shiftKey && event.button < 1 && !domNode.target && !domNode.hasAttribute('download'))
				{
					event.preventDefault();
					var href = domNode.href;
					var curr = _Browser_getUrl();
					var next = $elm$url$Url$fromString(href).a;
					sendToApp(onUrlRequest(
						(next
							&& curr.jB === next.jB
							&& curr.iK === next.iK
							&& curr.jw.a === next.jw.a
						)
							? $elm$browser$Browser$Internal(next)
							: $elm$browser$Browser$External(href)
					));
				}
			});
		},
		bl: function(flags)
		{
			return A3(impl.bl, flags, _Browser_getUrl(), key);
		},
		o3: impl.o3,
		fv: impl.fv,
		by: impl.by
	});
}

function _Browser_getUrl()
{
	return $elm$url$Url$fromString(_VirtualDom_doc.location.href).a || _Debug_crash(1);
}

var _Browser_go = F2(function(key, n)
{
	return A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function() {
		n && history.go(n);
		key();
	}));
});

var _Browser_pushUrl = F2(function(key, url)
{
	return A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function() {
		history.pushState({}, '', url);
		key();
	}));
});

var _Browser_replaceUrl = F2(function(key, url)
{
	return A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function() {
		history.replaceState({}, '', url);
		key();
	}));
});



// GLOBAL EVENTS


var _Browser_fakeNode = { addEventListener: function() {}, removeEventListener: function() {} };
var _Browser_doc = typeof document !== 'undefined' ? document : _Browser_fakeNode;
var _Browser_window = typeof window !== 'undefined' ? window : _Browser_fakeNode;

var _Browser_on = F3(function(node, eventName, sendToSelf)
{
	return _Scheduler_spawn(_Scheduler_binding(function(callback)
	{
		function handler(event)	{ _Scheduler_rawSpawn(sendToSelf(event)); }
		node.addEventListener(eventName, handler, _VirtualDom_passiveSupported && { passive: true });
		return function() { node.removeEventListener(eventName, handler); };
	}));
});

var _Browser_decodeEvent = F2(function(decoder, event)
{
	var result = _Json_runHelp(decoder, event);
	return $elm$core$Result$isOk(result) ? $elm$core$Maybe$Just(result.a) : $elm$core$Maybe$Nothing;
});



// PAGE VISIBILITY


function _Browser_visibilityInfo()
{
	return (typeof _VirtualDom_doc.hidden !== 'undefined')
		? { gc: 'hidden', kU: 'visibilitychange' }
		:
	(typeof _VirtualDom_doc.mozHidden !== 'undefined')
		? { gc: 'mozHidden', kU: 'mozvisibilitychange' }
		:
	(typeof _VirtualDom_doc.msHidden !== 'undefined')
		? { gc: 'msHidden', kU: 'msvisibilitychange' }
		:
	(typeof _VirtualDom_doc.webkitHidden !== 'undefined')
		? { gc: 'webkitHidden', kU: 'webkitvisibilitychange' }
		: { gc: 'hidden', kU: 'visibilitychange' };
}



// ANIMATION FRAMES


function _Browser_rAF()
{
	return _Scheduler_binding(function(callback)
	{
		var id = _Browser_requestAnimationFrame(function() {
			callback(_Scheduler_succeed(Date.now()));
		});

		return function() {
			_Browser_cancelAnimationFrame(id);
		};
	});
}


function _Browser_now()
{
	return _Scheduler_binding(function(callback)
	{
		callback(_Scheduler_succeed(Date.now()));
	});
}



// DOM STUFF


function _Browser_withNode(id, doStuff)
{
	return _Scheduler_binding(function(callback)
	{
		_Browser_requestAnimationFrame(function() {
			var node = document.getElementById(id);
			callback(node
				? _Scheduler_succeed(doStuff(node))
				: _Scheduler_fail($elm$browser$Browser$Dom$NotFound(id))
			);
		});
	});
}


function _Browser_withWindow(doStuff)
{
	return _Scheduler_binding(function(callback)
	{
		_Browser_requestAnimationFrame(function() {
			callback(_Scheduler_succeed(doStuff()));
		});
	});
}


// FOCUS and BLUR


var _Browser_call = F2(function(functionName, id)
{
	return _Browser_withNode(id, function(node) {
		node[functionName]();
		return _Utils_Tuple0;
	});
});



// WINDOW VIEWPORT


function _Browser_getViewport()
{
	return {
		jM: _Browser_getScene(),
		ke: {
			kj: _Browser_window.pageXOffset,
			kl: _Browser_window.pageYOffset,
			bB: _Browser_doc.documentElement.clientWidth,
			bj: _Browser_doc.documentElement.clientHeight
		}
	};
}

function _Browser_getScene()
{
	var body = _Browser_doc.body;
	var elem = _Browser_doc.documentElement;
	return {
		bB: Math.max(body.scrollWidth, body.offsetWidth, elem.scrollWidth, elem.offsetWidth, elem.clientWidth),
		bj: Math.max(body.scrollHeight, body.offsetHeight, elem.scrollHeight, elem.offsetHeight, elem.clientHeight)
	};
}

var _Browser_setViewport = F2(function(x, y)
{
	return _Browser_withWindow(function()
	{
		_Browser_window.scroll(x, y);
		return _Utils_Tuple0;
	});
});



// ELEMENT VIEWPORT


function _Browser_getViewportOf(id)
{
	return _Browser_withNode(id, function(node)
	{
		return {
			jM: {
				bB: node.scrollWidth,
				bj: node.scrollHeight
			},
			ke: {
				kj: node.scrollLeft,
				kl: node.scrollTop,
				bB: node.clientWidth,
				bj: node.clientHeight
			}
		};
	});
}


var _Browser_setViewportOf = F3(function(id, x, y)
{
	return _Browser_withNode(id, function(node)
	{
		node.scrollLeft = x;
		node.scrollTop = y;
		return _Utils_Tuple0;
	});
});



// ELEMENT


function _Browser_getElement(id)
{
	return _Browser_withNode(id, function(node)
	{
		var rect = node.getBoundingClientRect();
		var x = _Browser_window.pageXOffset;
		var y = _Browser_window.pageYOffset;
		return {
			jM: _Browser_getScene(),
			ke: {
				kj: x,
				kl: y,
				bB: _Browser_doc.documentElement.clientWidth,
				bj: _Browser_doc.documentElement.clientHeight
			},
			lz: {
				kj: x + rect.left,
				kl: y + rect.top,
				bB: rect.width,
				bj: rect.height
			}
		};
	});
}



// LOAD and RELOAD


function _Browser_reload(skipCache)
{
	return A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function(callback)
	{
		_VirtualDom_doc.location.reload(skipCache);
	}));
}

function _Browser_load(url)
{
	return A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function(callback)
	{
		try
		{
			_Browser_window.location = url;
		}
		catch(err)
		{
			// Only Firefox can throw a NS_ERROR_MALFORMED_URI exception here.
			// Other browsers reload the page, so let's be consistent about that.
			_VirtualDom_doc.location.reload(false);
		}
	}));
}


function _Url_percentEncode(string)
{
	return encodeURIComponent(string);
}

function _Url_percentDecode(string)
{
	try
	{
		return $elm$core$Maybe$Just(decodeURIComponent(string));
	}
	catch (e)
	{
		return $elm$core$Maybe$Nothing;
	}
}



// STRINGS


var _Parser_isSubString = F5(function(smallString, offset, row, col, bigString)
{
	var smallLength = smallString.length;
	var isGood = offset + smallLength <= bigString.length;

	for (var i = 0; isGood && i < smallLength; )
	{
		var code = bigString.charCodeAt(offset);
		isGood =
			smallString[i++] === bigString[offset++]
			&& (
				code === 0x000A /* \n */
					? ( row++, col=1 )
					: ( col++, (code & 0xF800) === 0xD800 ? smallString[i++] === bigString[offset++] : 1 )
			)
	}

	return _Utils_Tuple3(isGood ? offset : -1, row, col);
});



// CHARS


var _Parser_isSubChar = F3(function(predicate, offset, string)
{
	return (
		string.length <= offset
			? -1
			:
		(string.charCodeAt(offset) & 0xF800) === 0xD800
			? (predicate(_Utils_chr(string.substr(offset, 2))) ? offset + 2 : -1)
			:
		(predicate(_Utils_chr(string[offset]))
			? ((string[offset] === '\n') ? -2 : (offset + 1))
			: -1
		)
	);
});


var _Parser_isAsciiCode = F3(function(code, offset, string)
{
	return string.charCodeAt(offset) === code;
});



// NUMBERS


var _Parser_chompBase10 = F2(function(offset, string)
{
	for (; offset < string.length; offset++)
	{
		var code = string.charCodeAt(offset);
		if (code < 0x30 || 0x39 < code)
		{
			return offset;
		}
	}
	return offset;
});


var _Parser_consumeBase = F3(function(base, offset, string)
{
	for (var total = 0; offset < string.length; offset++)
	{
		var digit = string.charCodeAt(offset) - 0x30;
		if (digit < 0 || base <= digit) break;
		total = base * total + digit;
	}
	return _Utils_Tuple2(offset, total);
});


var _Parser_consumeBase16 = F2(function(offset, string)
{
	for (var total = 0; offset < string.length; offset++)
	{
		var code = string.charCodeAt(offset);
		if (0x30 <= code && code <= 0x39)
		{
			total = 16 * total + code - 0x30;
		}
		else if (0x41 <= code && code <= 0x46)
		{
			total = 16 * total + code - 55;
		}
		else if (0x61 <= code && code <= 0x66)
		{
			total = 16 * total + code - 87;
		}
		else
		{
			break;
		}
	}
	return _Utils_Tuple2(offset, total);
});



// FIND STRING


var _Parser_findSubString = F5(function(smallString, offset, row, col, bigString)
{
	var newOffset = bigString.indexOf(smallString, offset);
	var target = newOffset < 0 ? bigString.length : newOffset + smallString.length;

	while (offset < target)
	{
		var code = bigString.charCodeAt(offset++);
		code === 0x000A /* \n */
			? ( col=1, row++ )
			: ( col++, (code & 0xF800) === 0xD800 && offset++ )
	}

	return _Utils_Tuple3(newOffset, row, col);
});


// CREATE

var _Regex_never = /.^/;

var _Regex_fromStringWith = F2(function(options, string)
{
	var flags = 'g';
	if (options.jd) { flags += 'm'; }
	if (options.h$) { flags += 'i'; }

	try
	{
		return $elm$core$Maybe$Just(new RegExp(string, flags));
	}
	catch(error)
	{
		return $elm$core$Maybe$Nothing;
	}
});


// USE

var _Regex_contains = F2(function(re, string)
{
	return string.match(re) !== null;
});


var _Regex_findAtMost = F3(function(n, re, str)
{
	var out = [];
	var number = 0;
	var string = str;
	var lastIndex = re.lastIndex;
	var prevLastIndex = -1;
	var result;
	while (number++ < n && (result = re.exec(string)))
	{
		if (prevLastIndex == re.lastIndex) break;
		var i = result.length - 1;
		var subs = new Array(i);
		while (i > 0)
		{
			var submatch = result[i];
			subs[--i] = submatch
				? $elm$core$Maybe$Just(submatch)
				: $elm$core$Maybe$Nothing;
		}
		out.push(A4($elm$regex$Regex$Match, result[0], result.index, number, _List_fromArray(subs)));
		prevLastIndex = re.lastIndex;
	}
	re.lastIndex = lastIndex;
	return _List_fromArray(out);
});


var _Regex_replaceAtMost = F4(function(n, re, replacer, string)
{
	var count = 0;
	function jsReplacer(match)
	{
		if (count++ >= n)
		{
			return match;
		}
		var i = arguments.length - 3;
		var submatches = new Array(i);
		while (i > 0)
		{
			var submatch = arguments[i];
			submatches[--i] = submatch
				? $elm$core$Maybe$Just(submatch)
				: $elm$core$Maybe$Nothing;
		}
		return replacer(A4($elm$regex$Regex$Match, match, arguments[arguments.length - 2], count, _List_fromArray(submatches)));
	}
	return string.replace(re, jsReplacer);
});

var _Regex_splitAtMost = F3(function(n, re, str)
{
	var string = str;
	var out = [];
	var start = re.lastIndex;
	var restoreLastIndex = re.lastIndex;
	while (n--)
	{
		var result = re.exec(string);
		if (!result) break;
		out.push(string.slice(start, result.index));
		start = re.lastIndex;
	}
	out.push(string.slice(start));
	re.lastIndex = restoreLastIndex;
	return _List_fromArray(out);
});

var _Regex_infinity = Infinity;



var _Bitwise_and = F2(function(a, b)
{
	return a & b;
});

var _Bitwise_or = F2(function(a, b)
{
	return a | b;
});

var _Bitwise_xor = F2(function(a, b)
{
	return a ^ b;
});

function _Bitwise_complement(a)
{
	return ~a;
};

var _Bitwise_shiftLeftBy = F2(function(offset, a)
{
	return a << offset;
});

var _Bitwise_shiftRightBy = F2(function(offset, a)
{
	return a >> offset;
});

var _Bitwise_shiftRightZfBy = F2(function(offset, a)
{
	return a >>> offset;
});



function _Time_now(millisToPosix)
{
	return _Scheduler_binding(function(callback)
	{
		callback(_Scheduler_succeed(millisToPosix(Date.now())));
	});
}

var _Time_setInterval = F2(function(interval, task)
{
	return _Scheduler_binding(function(callback)
	{
		var id = setInterval(function() { _Scheduler_rawSpawn(task); }, interval);
		return function() { clearInterval(id); };
	});
});

function _Time_here()
{
	return _Scheduler_binding(function(callback)
	{
		callback(_Scheduler_succeed(
			A2($elm$time$Time$customZone, -(new Date().getTimezoneOffset()), _List_Nil)
		));
	});
}


function _Time_getZoneName()
{
	return _Scheduler_binding(function(callback)
	{
		try
		{
			var name = $elm$time$Time$Name(Intl.DateTimeFormat().resolvedOptions().timeZone);
		}
		catch (e)
		{
			var name = $elm$time$Time$Offset(new Date().getTimezoneOffset());
		}
		callback(_Scheduler_succeed(name));
	});
}



// SEND REQUEST

var _Http_toTask = F3(function(router, toTask, request)
{
	return _Scheduler_binding(function(callback)
	{
		function done(response) {
			callback(toTask(request.lI.a(response)));
		}

		var xhr = new XMLHttpRequest();
		xhr.addEventListener('error', function() { done($elm$http$Http$NetworkError_); });
		xhr.addEventListener('timeout', function() { done($elm$http$Http$Timeout_); });
		xhr.addEventListener('load', function() { done(_Http_toResponse(request.lI.b, xhr)); });
		$elm$core$Maybe$isJust(request.hM) && _Http_track(router, xhr, request.hM.a);

		try {
			xhr.open(request.gy, request.o1, true);
		} catch (e) {
			return done($elm$http$Http$BadUrl_(request.o1));
		}

		_Http_configureRequest(xhr, request);

		request.kM.a && xhr.setRequestHeader('Content-Type', request.kM.a);
		xhr.send(request.kM.b);

		return function() { xhr.c = true; xhr.abort(); };
	});
});


// CONFIGURE

function _Http_configureRequest(xhr, request)
{
	for (var headers = request.f9; headers.b; headers = headers.b) // WHILE_CONS
	{
		xhr.setRequestHeader(headers.a.a, headers.a.b);
	}
	xhr.timeout = request.hK.a || 0;
	xhr.responseType = request.lI.d;
	xhr.withCredentials = request.kp;
}


// RESPONSES

function _Http_toResponse(toBody, xhr)
{
	return A2(
		200 <= xhr.status && xhr.status < 300 ? $elm$http$Http$GoodStatus_ : $elm$http$Http$BadStatus_,
		_Http_toMetadata(xhr),
		toBody(xhr.response)
	);
}


// METADATA

function _Http_toMetadata(xhr)
{
	return {
		o1: xhr.responseURL,
		hv: xhr.status,
		oE: xhr.statusText,
		f9: _Http_parseHeaders(xhr.getAllResponseHeaders())
	};
}


// HEADERS

function _Http_parseHeaders(rawHeaders)
{
	if (!rawHeaders)
	{
		return $elm$core$Dict$empty;
	}

	var headers = $elm$core$Dict$empty;
	var headerPairs = rawHeaders.split('\r\n');
	for (var i = headerPairs.length; i--; )
	{
		var headerPair = headerPairs[i];
		var index = headerPair.indexOf(': ');
		if (index > 0)
		{
			var key = headerPair.substring(0, index);
			var value = headerPair.substring(index + 2);

			headers = A3($elm$core$Dict$update, key, function(oldValue) {
				return $elm$core$Maybe$Just($elm$core$Maybe$isJust(oldValue)
					? value + ', ' + oldValue.a
					: value
				);
			}, headers);
		}
	}
	return headers;
}


// EXPECT

var _Http_expect = F3(function(type, toBody, toValue)
{
	return {
		$: 0,
		d: type,
		b: toBody,
		a: toValue
	};
});

var _Http_mapExpect = F2(function(func, expect)
{
	return {
		$: 0,
		d: expect.d,
		b: expect.b,
		a: function(x) { return func(expect.a(x)); }
	};
});

function _Http_toDataView(arrayBuffer)
{
	return new DataView(arrayBuffer);
}


// BODY and PARTS

var _Http_emptyBody = { $: 0 };
var _Http_pair = F2(function(a, b) { return { $: 0, a: a, b: b }; });

function _Http_toFormData(parts)
{
	for (var formData = new FormData(); parts.b; parts = parts.b) // WHILE_CONS
	{
		var part = parts.a;
		formData.append(part.a, part.b);
	}
	return formData;
}

var _Http_bytesToBlob = F2(function(mime, bytes)
{
	return new Blob([bytes], { type: mime });
});


// PROGRESS

function _Http_track(router, xhr, tracker)
{
	// TODO check out lengthComputable on loadstart event

	xhr.upload.addEventListener('progress', function(event) {
		if (xhr.c) { return; }
		_Scheduler_rawSpawn(A2($elm$core$Platform$sendToSelf, router, _Utils_Tuple2(tracker, $elm$http$Http$Sending({
			oq: event.loaded,
			ox: event.total
		}))));
	});
	xhr.addEventListener('progress', function(event) {
		if (xhr.c) { return; }
		_Scheduler_rawSpawn(A2($elm$core$Platform$sendToSelf, router, _Utils_Tuple2(tracker, $elm$http$Http$Receiving({
			nY: event.loaded,
			ox: event.lengthComputable ? $elm$core$Maybe$Just(event.total) : $elm$core$Maybe$Nothing
		}))));
	});
}



// VIRTUAL-DOM WIDGETS


var _Markdown_toHtml = F3(function(options, factList, rawMarkdown)
{
	return _VirtualDom_custom(
		factList,
		{
			a: options,
			b: rawMarkdown
		},
		_Markdown_render,
		_Markdown_diff
	);
});



// WIDGET IMPLEMENTATION


function _Markdown_render(model)
{
	return A2(_Markdown_replace, model, _VirtualDom_doc.createElement('div'));
}


function _Markdown_diff(x, y)
{
	return x.b === y.b && x.a === y.a
		? false
		: _Markdown_replace(y);
}


var _Markdown_replace = F2(function(model, div)
{
	div.innerHTML = _Markdown_marked(model.b, _Markdown_formatOptions(model.a));
	return div;
});



// ACTUAL MARKDOWN PARSER


var _Markdown_marked = function() {
	// catch the `marked` object regardless of the outer environment.
	// (ex. a CommonJS module compatible environment.)
	// note that this depends on marked's implementation of environment detection.
	var module = {};
	var exports = module.exports = {};

	/**
	 * marked - a markdown parser
	 * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)
	 * https://github.com/chjj/marked
	 * commit cd2f6f5b7091154c5526e79b5f3bfb4d15995a51
	 */
	(function(){var block={newline:/^\n+/,code:/^( {4}[^\n]+\n*)+/,fences:noop,hr:/^( *[-*_]){3,} *(?:\n+|$)/,heading:/^ *(#{1,6}) *([^\n]+?) *#* *(?:\n+|$)/,nptable:noop,lheading:/^([^\n]+)\n *(=|-){2,} *(?:\n+|$)/,blockquote:/^( *>[^\n]+(\n(?!def)[^\n]+)*\n*)+/,list:/^( *)(bull) [\s\S]+?(?:hr|def|\n{2,}(?! )(?!\1bull )\n*|\s*$)/,html:/^ *(?:comment *(?:\n|\s*$)|closed *(?:\n{2,}|\s*$)|closing *(?:\n{2,}|\s*$))/,def:/^ *\[([^\]]+)\]: *<?([^\s>]+)>?(?: +["(]([^\n]+)[")])? *(?:\n+|$)/,table:noop,paragraph:/^((?:[^\n]+\n?(?!hr|heading|lheading|blockquote|tag|def))+)\n*/,text:/^[^\n]+/};block.bullet=/(?:[*+-]|\d+\.)/;block.item=/^( *)(bull) [^\n]*(?:\n(?!\1bull )[^\n]*)*/;block.item=replace(block.item,"gm")(/bull/g,block.bullet)();block.list=replace(block.list)(/bull/g,block.bullet)("hr","\\n+(?=\\1?(?:[-*_] *){3,}(?:\\n+|$))")("def","\\n+(?="+block.def.source+")")();block.blockquote=replace(block.blockquote)("def",block.def)();block._tag="(?!(?:"+"a|em|strong|small|s|cite|q|dfn|abbr|data|time|code"+"|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo"+"|span|br|wbr|ins|del|img)\\b)\\w+(?!:/|[^\\w\\s@]*@)\\b";block.html=replace(block.html)("comment",/<!--[\s\S]*?-->/)("closed",/<(tag)[\s\S]+?<\/\1>/)("closing",/<tag(?:"[^"]*"|'[^']*'|[^'">])*?>/)(/tag/g,block._tag)();block.paragraph=replace(block.paragraph)("hr",block.hr)("heading",block.heading)("lheading",block.lheading)("blockquote",block.blockquote)("tag","<"+block._tag)("def",block.def)();block.normal=merge({},block);block.gfm=merge({},block.normal,{fences:/^ *(`{3,}|~{3,})[ \.]*(\S+)? *\n([\s\S]*?)\s*\1 *(?:\n+|$)/,paragraph:/^/,heading:/^ *(#{1,6}) +([^\n]+?) *#* *(?:\n+|$)/});block.gfm.paragraph=replace(block.paragraph)("(?!","(?!"+block.gfm.fences.source.replace("\\1","\\2")+"|"+block.list.source.replace("\\1","\\3")+"|")();block.tables=merge({},block.gfm,{nptable:/^ *(\S.*\|.*)\n *([-:]+ *\|[-| :]*)\n((?:.*\|.*(?:\n|$))*)\n*/,table:/^ *\|(.+)\n *\|( *[-:]+[-| :]*)\n((?: *\|.*(?:\n|$))*)\n*/});function Lexer(options){this.tokens=[];this.tokens.links={};this.options=options||marked.defaults;this.rules=block.normal;if(this.options.gfm){if(this.options.tables){this.rules=block.tables}else{this.rules=block.gfm}}}Lexer.rules=block;Lexer.lex=function(src,options){var lexer=new Lexer(options);return lexer.lex(src)};Lexer.prototype.lex=function(src){src=src.replace(/\r\n|\r/g,"\n").replace(/\t/g,"    ").replace(/\u00a0/g," ").replace(/\u2424/g,"\n");return this.token(src,true)};Lexer.prototype.token=function(src,top,bq){var src=src.replace(/^ +$/gm,""),next,loose,cap,bull,b,item,space,i,l;while(src){if(cap=this.rules.newline.exec(src)){src=src.substring(cap[0].length);if(cap[0].length>1){this.tokens.push({type:"space"})}}if(cap=this.rules.code.exec(src)){src=src.substring(cap[0].length);cap=cap[0].replace(/^ {4}/gm,"");this.tokens.push({type:"code",text:!this.options.pedantic?cap.replace(/\n+$/,""):cap});continue}if(cap=this.rules.fences.exec(src)){src=src.substring(cap[0].length);this.tokens.push({type:"code",lang:cap[2],text:cap[3]||""});continue}if(cap=this.rules.heading.exec(src)){src=src.substring(cap[0].length);this.tokens.push({type:"heading",depth:cap[1].length,text:cap[2]});continue}if(top&&(cap=this.rules.nptable.exec(src))){src=src.substring(cap[0].length);item={type:"table",header:cap[1].replace(/^ *| *\| *$/g,"").split(/ *\| */),align:cap[2].replace(/^ *|\| *$/g,"").split(/ *\| */),cells:cap[3].replace(/\n$/,"").split("\n")};for(i=0;i<item.align.length;i++){if(/^ *-+: *$/.test(item.align[i])){item.align[i]="right"}else if(/^ *:-+: *$/.test(item.align[i])){item.align[i]="center"}else if(/^ *:-+ *$/.test(item.align[i])){item.align[i]="left"}else{item.align[i]=null}}for(i=0;i<item.cells.length;i++){item.cells[i]=item.cells[i].split(/ *\| */)}this.tokens.push(item);continue}if(cap=this.rules.lheading.exec(src)){src=src.substring(cap[0].length);this.tokens.push({type:"heading",depth:cap[2]==="="?1:2,text:cap[1]});continue}if(cap=this.rules.hr.exec(src)){src=src.substring(cap[0].length);this.tokens.push({type:"hr"});continue}if(cap=this.rules.blockquote.exec(src)){src=src.substring(cap[0].length);this.tokens.push({type:"blockquote_start"});cap=cap[0].replace(/^ *> ?/gm,"");this.token(cap,top,true);this.tokens.push({type:"blockquote_end"});continue}if(cap=this.rules.list.exec(src)){src=src.substring(cap[0].length);bull=cap[2];this.tokens.push({type:"list_start",ordered:bull.length>1});cap=cap[0].match(this.rules.item);next=false;l=cap.length;i=0;for(;i<l;i++){item=cap[i];space=item.length;item=item.replace(/^ *([*+-]|\d+\.) +/,"");if(~item.indexOf("\n ")){space-=item.length;item=!this.options.pedantic?item.replace(new RegExp("^ {1,"+space+"}","gm"),""):item.replace(/^ {1,4}/gm,"")}if(this.options.smartLists&&i!==l-1){b=block.bullet.exec(cap[i+1])[0];if(bull!==b&&!(bull.length>1&&b.length>1)){src=cap.slice(i+1).join("\n")+src;i=l-1}}loose=next||/\n\n(?!\s*$)/.test(item);if(i!==l-1){next=item.charAt(item.length-1)==="\n";if(!loose)loose=next}this.tokens.push({type:loose?"loose_item_start":"list_item_start"});this.token(item,false,bq);this.tokens.push({type:"list_item_end"})}this.tokens.push({type:"list_end"});continue}if(cap=this.rules.html.exec(src)){src=src.substring(cap[0].length);this.tokens.push({type:this.options.sanitize?"paragraph":"html",pre:!this.options.sanitizer&&(cap[1]==="pre"||cap[1]==="script"||cap[1]==="style"),text:cap[0]});continue}if(!bq&&top&&(cap=this.rules.def.exec(src))){src=src.substring(cap[0].length);this.tokens.links[cap[1].toLowerCase()]={href:cap[2],title:cap[3]};continue}if(top&&(cap=this.rules.table.exec(src))){src=src.substring(cap[0].length);item={type:"table",header:cap[1].replace(/^ *| *\| *$/g,"").split(/ *\| */),align:cap[2].replace(/^ *|\| *$/g,"").split(/ *\| */),cells:cap[3].replace(/(?: *\| *)?\n$/,"").split("\n")};for(i=0;i<item.align.length;i++){if(/^ *-+: *$/.test(item.align[i])){item.align[i]="right"}else if(/^ *:-+: *$/.test(item.align[i])){item.align[i]="center"}else if(/^ *:-+ *$/.test(item.align[i])){item.align[i]="left"}else{item.align[i]=null}}for(i=0;i<item.cells.length;i++){item.cells[i]=item.cells[i].replace(/^ *\| *| *\| *$/g,"").split(/ *\| */)}this.tokens.push(item);continue}if(top&&(cap=this.rules.paragraph.exec(src))){src=src.substring(cap[0].length);this.tokens.push({type:"paragraph",text:cap[1].charAt(cap[1].length-1)==="\n"?cap[1].slice(0,-1):cap[1]});continue}if(cap=this.rules.text.exec(src)){src=src.substring(cap[0].length);this.tokens.push({type:"text",text:cap[0]});continue}if(src){throw new Error("Infinite loop on byte: "+src.charCodeAt(0))}}return this.tokens};var inline={escape:/^\\([\\`*{}\[\]()#+\-.!_>])/,autolink:/^<([^ >]+(@|:\/)[^ >]+)>/,url:noop,tag:/^<!--[\s\S]*?-->|^<\/?\w+(?:"[^"]*"|'[^']*'|[^'">])*?>/,link:/^!?\[(inside)\]\(href\)/,reflink:/^!?\[(inside)\]\s*\[([^\]]*)\]/,nolink:/^!?\[((?:\[[^\]]*\]|[^\[\]])*)\]/,strong:/^_\_([\s\S]+?)_\_(?!_)|^\*\*([\s\S]+?)\*\*(?!\*)/,em:/^\b_((?:[^_]|_\_)+?)_\b|^\*((?:\*\*|[\s\S])+?)\*(?!\*)/,code:/^(`+)\s*([\s\S]*?[^`])\s*\1(?!`)/,br:/^ {2,}\n(?!\s*$)/,del:noop,text:/^[\s\S]+?(?=[\\<!\[_*`]| {2,}\n|$)/};inline._inside=/(?:\[[^\]]*\]|[^\[\]]|\](?=[^\[]*\]))*/;inline._href=/\s*<?([\s\S]*?)>?(?:\s+['"]([\s\S]*?)['"])?\s*/;inline.link=replace(inline.link)("inside",inline._inside)("href",inline._href)();inline.reflink=replace(inline.reflink)("inside",inline._inside)();inline.normal=merge({},inline);inline.pedantic=merge({},inline.normal,{strong:/^_\_(?=\S)([\s\S]*?\S)_\_(?!_)|^\*\*(?=\S)([\s\S]*?\S)\*\*(?!\*)/,em:/^_(?=\S)([\s\S]*?\S)_(?!_)|^\*(?=\S)([\s\S]*?\S)\*(?!\*)/});inline.gfm=merge({},inline.normal,{escape:replace(inline.escape)("])","~|])")(),url:/^(https?:\/\/[^\s<]+[^<.,:;"')\]\s])/,del:/^~~(?=\S)([\s\S]*?\S)~~/,text:replace(inline.text)("]|","~]|")("|","|https?://|")()});inline.breaks=merge({},inline.gfm,{br:replace(inline.br)("{2,}","*")(),text:replace(inline.gfm.text)("{2,}","*")()});function InlineLexer(links,options){this.options=options||marked.defaults;this.links=links;this.rules=inline.normal;this.renderer=this.options.renderer||new Renderer;this.renderer.options=this.options;if(!this.links){throw new Error("Tokens array requires a `links` property.")}if(this.options.gfm){if(this.options.breaks){this.rules=inline.breaks}else{this.rules=inline.gfm}}else if(this.options.pedantic){this.rules=inline.pedantic}}InlineLexer.rules=inline;InlineLexer.output=function(src,links,options){var inline=new InlineLexer(links,options);return inline.output(src)};InlineLexer.prototype.output=function(src){var out="",link,text,href,cap;while(src){if(cap=this.rules.escape.exec(src)){src=src.substring(cap[0].length);out+=cap[1];continue}if(cap=this.rules.autolink.exec(src)){src=src.substring(cap[0].length);if(cap[2]==="@"){text=cap[1].charAt(6)===":"?this.mangle(cap[1].substring(7)):this.mangle(cap[1]);href=this.mangle("mailto:")+text}else{text=escape(cap[1]);href=text}out+=this.renderer.link(href,null,text);continue}if(!this.inLink&&(cap=this.rules.url.exec(src))){src=src.substring(cap[0].length);text=escape(cap[1]);href=text;out+=this.renderer.link(href,null,text);continue}if(cap=this.rules.tag.exec(src)){if(!this.inLink&&/^<a /i.test(cap[0])){this.inLink=true}else if(this.inLink&&/^<\/a>/i.test(cap[0])){this.inLink=false}src=src.substring(cap[0].length);out+=this.options.sanitize?this.options.sanitizer?this.options.sanitizer(cap[0]):escape(cap[0]):cap[0];continue}if(cap=this.rules.link.exec(src)){src=src.substring(cap[0].length);this.inLink=true;out+=this.outputLink(cap,{href:cap[2],title:cap[3]});this.inLink=false;continue}if((cap=this.rules.reflink.exec(src))||(cap=this.rules.nolink.exec(src))){src=src.substring(cap[0].length);link=(cap[2]||cap[1]).replace(/\s+/g," ");link=this.links[link.toLowerCase()];if(!link||!link.href){out+=cap[0].charAt(0);src=cap[0].substring(1)+src;continue}this.inLink=true;out+=this.outputLink(cap,link);this.inLink=false;continue}if(cap=this.rules.strong.exec(src)){src=src.substring(cap[0].length);out+=this.renderer.strong(this.output(cap[2]||cap[1]));continue}if(cap=this.rules.em.exec(src)){src=src.substring(cap[0].length);out+=this.renderer.em(this.output(cap[2]||cap[1]));continue}if(cap=this.rules.code.exec(src)){src=src.substring(cap[0].length);out+=this.renderer.codespan(escape(cap[2],true));continue}if(cap=this.rules.br.exec(src)){src=src.substring(cap[0].length);out+=this.renderer.br();continue}if(cap=this.rules.del.exec(src)){src=src.substring(cap[0].length);out+=this.renderer.del(this.output(cap[1]));continue}if(cap=this.rules.text.exec(src)){src=src.substring(cap[0].length);out+=this.renderer.text(escape(this.smartypants(cap[0])));continue}if(src){throw new Error("Infinite loop on byte: "+src.charCodeAt(0))}}return out};InlineLexer.prototype.outputLink=function(cap,link){var href=escape(link.href),title=link.title?escape(link.title):null;return cap[0].charAt(0)!=="!"?this.renderer.link(href,title,this.output(cap[1])):this.renderer.image(href,title,escape(cap[1]))};InlineLexer.prototype.smartypants=function(text){if(!this.options.smartypants)return text;return text.replace(/---/g,"—").replace(/--/g,"–").replace(/(^|[-\u2014\/(\[{"\s])'/g,"$1‘").replace(/'/g,"’").replace(/(^|[-\u2014\/(\[{\u2018\s])"/g,"$1“").replace(/"/g,"”").replace(/\.{3}/g,"…")};InlineLexer.prototype.mangle=function(text){if(!this.options.mangle)return text;var out="",l=text.length,i=0,ch;for(;i<l;i++){ch=text.charCodeAt(i);if(Math.random()>.5){ch="x"+ch.toString(16)}out+="&#"+ch+";"}return out};function Renderer(options){this.options=options||{}}Renderer.prototype.code=function(code,lang,escaped){if(this.options.highlight){var out=this.options.highlight(code,lang);if(out!=null&&out!==code){escaped=true;code=out}}if(!lang){return"<pre><code>"+(escaped?code:escape(code,true))+"\n</code></pre>"}return'<pre><code class="'+this.options.langPrefix+escape(lang,true)+'">'+(escaped?code:escape(code,true))+"\n</code></pre>\n"};Renderer.prototype.blockquote=function(quote){return"<blockquote>\n"+quote+"</blockquote>\n"};Renderer.prototype.html=function(html){return html};Renderer.prototype.heading=function(text,level,raw){return"<h"+level+' id="'+this.options.headerPrefix+raw.toLowerCase().replace(/[^\w]+/g,"-")+'">'+text+"</h"+level+">\n"};Renderer.prototype.hr=function(){return this.options.xhtml?"<hr/>\n":"<hr>\n"};Renderer.prototype.list=function(body,ordered){var type=ordered?"ol":"ul";return"<"+type+">\n"+body+"</"+type+">\n"};Renderer.prototype.listitem=function(text){return"<li>"+text+"</li>\n"};Renderer.prototype.paragraph=function(text){return"<p>"+text+"</p>\n"};Renderer.prototype.table=function(header,body){return"<table>\n"+"<thead>\n"+header+"</thead>\n"+"<tbody>\n"+body+"</tbody>\n"+"</table>\n"};Renderer.prototype.tablerow=function(content){return"<tr>\n"+content+"</tr>\n"};Renderer.prototype.tablecell=function(content,flags){var type=flags.header?"th":"td";var tag=flags.align?"<"+type+' style="text-align:'+flags.align+'">':"<"+type+">";return tag+content+"</"+type+">\n"};Renderer.prototype.strong=function(text){return"<strong>"+text+"</strong>"};Renderer.prototype.em=function(text){return"<em>"+text+"</em>"};Renderer.prototype.codespan=function(text){return"<code>"+text+"</code>"};Renderer.prototype.br=function(){return this.options.xhtml?"<br/>":"<br>"};Renderer.prototype.del=function(text){return"<del>"+text+"</del>"};Renderer.prototype.link=function(href,title,text){if(this.options.sanitize){try{var prot=decodeURIComponent(unescape(href)).replace(/[^\w:]/g,"").toLowerCase()}catch(e){return""}if(prot.indexOf("javascript:")===0||prot.indexOf("vbscript:")===0||prot.indexOf("data:")===0){return""}}var out='<a href="'+href+'"';if(title){out+=' title="'+title+'"'}out+=">"+text+"</a>";return out};Renderer.prototype.image=function(href,title,text){var out='<img src="'+href+'" alt="'+text+'"';if(title){out+=' title="'+title+'"'}out+=this.options.xhtml?"/>":">";return out};Renderer.prototype.text=function(text){return text};function Parser(options){this.tokens=[];this.token=null;this.options=options||marked.defaults;this.options.renderer=this.options.renderer||new Renderer;this.renderer=this.options.renderer;this.renderer.options=this.options}Parser.parse=function(src,options,renderer){var parser=new Parser(options,renderer);return parser.parse(src)};Parser.prototype.parse=function(src){this.inline=new InlineLexer(src.links,this.options,this.renderer);this.tokens=src.reverse();var out="";while(this.next()){out+=this.tok()}return out};Parser.prototype.next=function(){return this.token=this.tokens.pop()};Parser.prototype.peek=function(){return this.tokens[this.tokens.length-1]||0};Parser.prototype.parseText=function(){var body=this.token.text;while(this.peek().type==="text"){body+="\n"+this.next().text}return this.inline.output(body)};Parser.prototype.tok=function(){switch(this.token.type){case"space":{return""}case"hr":{return this.renderer.hr()}case"heading":{return this.renderer.heading(this.inline.output(this.token.text),this.token.depth,this.token.text)}case"code":{return this.renderer.code(this.token.text,this.token.lang,this.token.escaped)}case"table":{var header="",body="",i,row,cell,flags,j;cell="";for(i=0;i<this.token.header.length;i++){flags={header:true,align:this.token.align[i]};cell+=this.renderer.tablecell(this.inline.output(this.token.header[i]),{header:true,align:this.token.align[i]})}header+=this.renderer.tablerow(cell);for(i=0;i<this.token.cells.length;i++){row=this.token.cells[i];cell="";for(j=0;j<row.length;j++){cell+=this.renderer.tablecell(this.inline.output(row[j]),{header:false,align:this.token.align[j]})}body+=this.renderer.tablerow(cell)}return this.renderer.table(header,body)}case"blockquote_start":{var body="";while(this.next().type!=="blockquote_end"){body+=this.tok()}return this.renderer.blockquote(body)}case"list_start":{var body="",ordered=this.token.ordered;while(this.next().type!=="list_end"){body+=this.tok()}return this.renderer.list(body,ordered)}case"list_item_start":{var body="";while(this.next().type!=="list_item_end"){body+=this.token.type==="text"?this.parseText():this.tok()}return this.renderer.listitem(body)}case"loose_item_start":{var body="";while(this.next().type!=="list_item_end"){body+=this.tok()}return this.renderer.listitem(body)}case"html":{var html=!this.token.pre&&!this.options.pedantic?this.inline.output(this.token.text):this.token.text;return this.renderer.html(html)}case"paragraph":{return this.renderer.paragraph(this.inline.output(this.token.text))}case"text":{return this.renderer.paragraph(this.parseText())}}};function escape(html,encode){return html.replace(!encode?/&(?!#?\w+;)/g:/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#39;")}function unescape(html){return html.replace(/&(#(?:\d+)|(?:#x[0-9A-Fa-f]+)|(?:\w+));?/g,function(_,n){n=n.toLowerCase();if(n==="colon")return":";if(n.charAt(0)==="#"){return n.charAt(1)==="x"?String.fromCharCode(parseInt(n.substring(2),16)):String.fromCharCode(+n.substring(1))}return""})}function replace(regex,opt){regex=regex.source;opt=opt||"";return function self(name,val){if(!name)return new RegExp(regex,opt);val=val.source||val;val=val.replace(/(^|[^\[])\^/g,"$1");regex=regex.replace(name,val);return self}}function noop(){}noop.exec=noop;function merge(obj){var i=1,target,key;for(;i<arguments.length;i++){target=arguments[i];for(key in target){if(Object.prototype.hasOwnProperty.call(target,key)){obj[key]=target[key]}}}return obj}function marked(src,opt,callback){if(callback||typeof opt==="function"){if(!callback){callback=opt;opt=null}opt=merge({},marked.defaults,opt||{});var highlight=opt.highlight,tokens,pending,i=0;try{tokens=Lexer.lex(src,opt)}catch(e){return callback(e)}pending=tokens.length;var done=function(err){if(err){opt.highlight=highlight;return callback(err)}var out;try{out=Parser.parse(tokens,opt)}catch(e){err=e}opt.highlight=highlight;return err?callback(err):callback(null,out)};if(!highlight||highlight.length<3){return done()}delete opt.highlight;if(!pending)return done();for(;i<tokens.length;i++){(function(token){if(token.type!=="code"){return--pending||done()}return highlight(token.text,token.lang,function(err,code){if(err)return done(err);if(code==null||code===token.text){return--pending||done()}token.text=code;token.escaped=true;--pending||done()})})(tokens[i])}return}try{if(opt)opt=merge({},marked.defaults,opt);return Parser.parse(Lexer.lex(src,opt),opt)}catch(e){e.message+="\nPlease report this to https://github.com/chjj/marked.";if((opt||marked.defaults).silent){return"<p>An error occured:</p><pre>"+escape(e.message+"",true)+"</pre>"}throw e}}marked.options=marked.setOptions=function(opt){merge(marked.defaults,opt);return marked};marked.defaults={gfm:true,tables:true,breaks:false,pedantic:false,sanitize:false,sanitizer:null,mangle:true,smartLists:false,silent:false,highlight:null,langPrefix:"lang-",smartypants:false,headerPrefix:"",renderer:new Renderer,xhtml:false};marked.Parser=Parser;marked.parser=Parser.parse;marked.Renderer=Renderer;marked.Lexer=Lexer;marked.lexer=Lexer.lex;marked.InlineLexer=InlineLexer;marked.inlineLexer=InlineLexer.output;marked.parse=marked;if(typeof module!=="undefined"&&typeof exports==="object"){module.exports=marked}else if(typeof define==="function"&&define.amd){define(function(){return marked})}else{this.marked=marked}}).call(function(){return this||(typeof window!=="undefined"?window:global)}());

	return module.exports;
}();


// FORMAT OPTIONS FOR MARKED IMPLEMENTATION

function _Markdown_formatOptions(options)
{
	function toHighlight(code, lang)
	{
		if (!lang && $elm$core$Maybe$isJust(options.$8))
		{
			lang = options.$8.a;
		}

		if (typeof hljs !== 'undefined' && lang && hljs.listLanguages().indexOf(lang) >= 0)
		{
			return hljs.highlight(lang, code, true).value;
		}

		return code;
	}

	var gfm = options.iF.a;

	return {
		highlight: toHighlight,
		gfm: gfm,
		tables: gfm && gfm.oM,
		breaks: gfm && gfm.kN,
		sanitize: options.hm,
		smartypants: options.jY
	};
}
var $author$project$Main$ChangedUrl = function (a) {
	return {$: 0, a: a};
};
var $author$project$Main$ClickedLink = function (a) {
	return {$: 1, a: a};
};
var $elm$core$List$cons = _List_cons;
var $elm$core$Elm$JsArray$foldr = _JsArray_foldr;
var $elm$core$Array$foldr = F3(
	function (func, baseCase, _v0) {
		var tree = _v0.c;
		var tail = _v0.d;
		var helper = F2(
			function (node, acc) {
				if (!node.$) {
					var subTree = node.a;
					return A3($elm$core$Elm$JsArray$foldr, helper, acc, subTree);
				} else {
					var values = node.a;
					return A3($elm$core$Elm$JsArray$foldr, func, acc, values);
				}
			});
		return A3(
			$elm$core$Elm$JsArray$foldr,
			helper,
			A3($elm$core$Elm$JsArray$foldr, func, baseCase, tail),
			tree);
	});
var $elm$core$Array$toList = function (array) {
	return A3($elm$core$Array$foldr, $elm$core$List$cons, _List_Nil, array);
};
var $elm$core$Dict$foldr = F3(
	function (func, acc, t) {
		foldr:
		while (true) {
			if (t.$ === -2) {
				return acc;
			} else {
				var key = t.b;
				var value = t.c;
				var left = t.d;
				var right = t.e;
				var $temp$func = func,
					$temp$acc = A3(
					func,
					key,
					value,
					A3($elm$core$Dict$foldr, func, acc, right)),
					$temp$t = left;
				func = $temp$func;
				acc = $temp$acc;
				t = $temp$t;
				continue foldr;
			}
		}
	});
var $elm$core$Dict$toList = function (dict) {
	return A3(
		$elm$core$Dict$foldr,
		F3(
			function (key, value, list) {
				return A2(
					$elm$core$List$cons,
					_Utils_Tuple2(key, value),
					list);
			}),
		_List_Nil,
		dict);
};
var $elm$core$Dict$keys = function (dict) {
	return A3(
		$elm$core$Dict$foldr,
		F3(
			function (key, value, keyList) {
				return A2($elm$core$List$cons, key, keyList);
			}),
		_List_Nil,
		dict);
};
var $elm$core$Set$toList = function (_v0) {
	var dict = _v0;
	return $elm$core$Dict$keys(dict);
};
var $elm$core$Basics$EQ = 1;
var $elm$core$Basics$GT = 2;
var $elm$core$Basics$LT = 0;
var $elm$core$Result$Err = function (a) {
	return {$: 1, a: a};
};
var $elm$json$Json$Decode$Failure = F2(
	function (a, b) {
		return {$: 3, a: a, b: b};
	});
var $elm$json$Json$Decode$Field = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $elm$json$Json$Decode$Index = F2(
	function (a, b) {
		return {$: 1, a: a, b: b};
	});
var $elm$core$Result$Ok = function (a) {
	return {$: 0, a: a};
};
var $elm$json$Json$Decode$OneOf = function (a) {
	return {$: 2, a: a};
};
var $elm$core$Basics$False = 1;
var $elm$core$Basics$add = _Basics_add;
var $elm$core$Maybe$Just = function (a) {
	return {$: 0, a: a};
};
var $elm$core$Maybe$Nothing = {$: 1};
var $elm$core$String$all = _String_all;
var $elm$core$Basics$and = _Basics_and;
var $elm$core$Basics$append = _Utils_append;
var $elm$json$Json$Encode$encode = _Json_encode;
var $elm$core$String$fromInt = _String_fromNumber;
var $elm$core$String$join = F2(
	function (sep, chunks) {
		return A2(
			_String_join,
			sep,
			_List_toArray(chunks));
	});
var $elm$core$String$split = F2(
	function (sep, string) {
		return _List_fromArray(
			A2(_String_split, sep, string));
	});
var $elm$json$Json$Decode$indent = function (str) {
	return A2(
		$elm$core$String$join,
		'\n    ',
		A2($elm$core$String$split, '\n', str));
};
var $elm$core$List$foldl = F3(
	function (func, acc, list) {
		foldl:
		while (true) {
			if (!list.b) {
				return acc;
			} else {
				var x = list.a;
				var xs = list.b;
				var $temp$func = func,
					$temp$acc = A2(func, x, acc),
					$temp$list = xs;
				func = $temp$func;
				acc = $temp$acc;
				list = $temp$list;
				continue foldl;
			}
		}
	});
var $elm$core$List$length = function (xs) {
	return A3(
		$elm$core$List$foldl,
		F2(
			function (_v0, i) {
				return i + 1;
			}),
		0,
		xs);
};
var $elm$core$List$map2 = _List_map2;
var $elm$core$Basics$le = _Utils_le;
var $elm$core$Basics$sub = _Basics_sub;
var $elm$core$List$rangeHelp = F3(
	function (lo, hi, list) {
		rangeHelp:
		while (true) {
			if (_Utils_cmp(lo, hi) < 1) {
				var $temp$lo = lo,
					$temp$hi = hi - 1,
					$temp$list = A2($elm$core$List$cons, hi, list);
				lo = $temp$lo;
				hi = $temp$hi;
				list = $temp$list;
				continue rangeHelp;
			} else {
				return list;
			}
		}
	});
var $elm$core$List$range = F2(
	function (lo, hi) {
		return A3($elm$core$List$rangeHelp, lo, hi, _List_Nil);
	});
var $elm$core$List$indexedMap = F2(
	function (f, xs) {
		return A3(
			$elm$core$List$map2,
			f,
			A2(
				$elm$core$List$range,
				0,
				$elm$core$List$length(xs) - 1),
			xs);
	});
var $elm$core$Char$toCode = _Char_toCode;
var $elm$core$Char$isLower = function (_char) {
	var code = $elm$core$Char$toCode(_char);
	return (97 <= code) && (code <= 122);
};
var $elm$core$Char$isUpper = function (_char) {
	var code = $elm$core$Char$toCode(_char);
	return (code <= 90) && (65 <= code);
};
var $elm$core$Basics$or = _Basics_or;
var $elm$core$Char$isAlpha = function (_char) {
	return $elm$core$Char$isLower(_char) || $elm$core$Char$isUpper(_char);
};
var $elm$core$Char$isDigit = function (_char) {
	var code = $elm$core$Char$toCode(_char);
	return (code <= 57) && (48 <= code);
};
var $elm$core$Char$isAlphaNum = function (_char) {
	return $elm$core$Char$isLower(_char) || ($elm$core$Char$isUpper(_char) || $elm$core$Char$isDigit(_char));
};
var $elm$core$List$reverse = function (list) {
	return A3($elm$core$List$foldl, $elm$core$List$cons, _List_Nil, list);
};
var $elm$core$String$uncons = _String_uncons;
var $elm$json$Json$Decode$errorOneOf = F2(
	function (i, error) {
		return '\n\n(' + ($elm$core$String$fromInt(i + 1) + (') ' + $elm$json$Json$Decode$indent(
			$elm$json$Json$Decode$errorToString(error))));
	});
var $elm$json$Json$Decode$errorToString = function (error) {
	return A2($elm$json$Json$Decode$errorToStringHelp, error, _List_Nil);
};
var $elm$json$Json$Decode$errorToStringHelp = F2(
	function (error, context) {
		errorToStringHelp:
		while (true) {
			switch (error.$) {
				case 0:
					var f = error.a;
					var err = error.b;
					var isSimple = function () {
						var _v1 = $elm$core$String$uncons(f);
						if (_v1.$ === 1) {
							return false;
						} else {
							var _v2 = _v1.a;
							var _char = _v2.a;
							var rest = _v2.b;
							return $elm$core$Char$isAlpha(_char) && A2($elm$core$String$all, $elm$core$Char$isAlphaNum, rest);
						}
					}();
					var fieldName = isSimple ? ('.' + f) : ('[\'' + (f + '\']'));
					var $temp$error = err,
						$temp$context = A2($elm$core$List$cons, fieldName, context);
					error = $temp$error;
					context = $temp$context;
					continue errorToStringHelp;
				case 1:
					var i = error.a;
					var err = error.b;
					var indexName = '[' + ($elm$core$String$fromInt(i) + ']');
					var $temp$error = err,
						$temp$context = A2($elm$core$List$cons, indexName, context);
					error = $temp$error;
					context = $temp$context;
					continue errorToStringHelp;
				case 2:
					var errors = error.a;
					if (!errors.b) {
						return 'Ran into a Json.Decode.oneOf with no possibilities' + function () {
							if (!context.b) {
								return '!';
							} else {
								return ' at json' + A2(
									$elm$core$String$join,
									'',
									$elm$core$List$reverse(context));
							}
						}();
					} else {
						if (!errors.b.b) {
							var err = errors.a;
							var $temp$error = err,
								$temp$context = context;
							error = $temp$error;
							context = $temp$context;
							continue errorToStringHelp;
						} else {
							var starter = function () {
								if (!context.b) {
									return 'Json.Decode.oneOf';
								} else {
									return 'The Json.Decode.oneOf at json' + A2(
										$elm$core$String$join,
										'',
										$elm$core$List$reverse(context));
								}
							}();
							var introduction = starter + (' failed in the following ' + ($elm$core$String$fromInt(
								$elm$core$List$length(errors)) + ' ways:'));
							return A2(
								$elm$core$String$join,
								'\n\n',
								A2(
									$elm$core$List$cons,
									introduction,
									A2($elm$core$List$indexedMap, $elm$json$Json$Decode$errorOneOf, errors)));
						}
					}
				default:
					var msg = error.a;
					var json = error.b;
					var introduction = function () {
						if (!context.b) {
							return 'Problem with the given value:\n\n';
						} else {
							return 'Problem with the value at json' + (A2(
								$elm$core$String$join,
								'',
								$elm$core$List$reverse(context)) + ':\n\n    ');
						}
					}();
					return introduction + ($elm$json$Json$Decode$indent(
						A2($elm$json$Json$Encode$encode, 4, json)) + ('\n\n' + msg));
			}
		}
	});
var $elm$core$Array$branchFactor = 32;
var $elm$core$Array$Array_elm_builtin = F4(
	function (a, b, c, d) {
		return {$: 0, a: a, b: b, c: c, d: d};
	});
var $elm$core$Elm$JsArray$empty = _JsArray_empty;
var $elm$core$Basics$ceiling = _Basics_ceiling;
var $elm$core$Basics$fdiv = _Basics_fdiv;
var $elm$core$Basics$logBase = F2(
	function (base, number) {
		return _Basics_log(number) / _Basics_log(base);
	});
var $elm$core$Basics$toFloat = _Basics_toFloat;
var $elm$core$Array$shiftStep = $elm$core$Basics$ceiling(
	A2($elm$core$Basics$logBase, 2, $elm$core$Array$branchFactor));
var $elm$core$Array$empty = A4($elm$core$Array$Array_elm_builtin, 0, $elm$core$Array$shiftStep, $elm$core$Elm$JsArray$empty, $elm$core$Elm$JsArray$empty);
var $elm$core$Elm$JsArray$initialize = _JsArray_initialize;
var $elm$core$Array$Leaf = function (a) {
	return {$: 1, a: a};
};
var $elm$core$Basics$apL = F2(
	function (f, x) {
		return f(x);
	});
var $elm$core$Basics$apR = F2(
	function (x, f) {
		return f(x);
	});
var $elm$core$Basics$eq = _Utils_equal;
var $elm$core$Basics$floor = _Basics_floor;
var $elm$core$Elm$JsArray$length = _JsArray_length;
var $elm$core$Basics$gt = _Utils_gt;
var $elm$core$Basics$max = F2(
	function (x, y) {
		return (_Utils_cmp(x, y) > 0) ? x : y;
	});
var $elm$core$Basics$mul = _Basics_mul;
var $elm$core$Array$SubTree = function (a) {
	return {$: 0, a: a};
};
var $elm$core$Elm$JsArray$initializeFromList = _JsArray_initializeFromList;
var $elm$core$Array$compressNodes = F2(
	function (nodes, acc) {
		compressNodes:
		while (true) {
			var _v0 = A2($elm$core$Elm$JsArray$initializeFromList, $elm$core$Array$branchFactor, nodes);
			var node = _v0.a;
			var remainingNodes = _v0.b;
			var newAcc = A2(
				$elm$core$List$cons,
				$elm$core$Array$SubTree(node),
				acc);
			if (!remainingNodes.b) {
				return $elm$core$List$reverse(newAcc);
			} else {
				var $temp$nodes = remainingNodes,
					$temp$acc = newAcc;
				nodes = $temp$nodes;
				acc = $temp$acc;
				continue compressNodes;
			}
		}
	});
var $elm$core$Tuple$first = function (_v0) {
	var x = _v0.a;
	return x;
};
var $elm$core$Array$treeFromBuilder = F2(
	function (nodeList, nodeListSize) {
		treeFromBuilder:
		while (true) {
			var newNodeSize = $elm$core$Basics$ceiling(nodeListSize / $elm$core$Array$branchFactor);
			if (newNodeSize === 1) {
				return A2($elm$core$Elm$JsArray$initializeFromList, $elm$core$Array$branchFactor, nodeList).a;
			} else {
				var $temp$nodeList = A2($elm$core$Array$compressNodes, nodeList, _List_Nil),
					$temp$nodeListSize = newNodeSize;
				nodeList = $temp$nodeList;
				nodeListSize = $temp$nodeListSize;
				continue treeFromBuilder;
			}
		}
	});
var $elm$core$Array$builderToArray = F2(
	function (reverseNodeList, builder) {
		if (!builder.K) {
			return A4(
				$elm$core$Array$Array_elm_builtin,
				$elm$core$Elm$JsArray$length(builder.oO),
				$elm$core$Array$shiftStep,
				$elm$core$Elm$JsArray$empty,
				builder.oO);
		} else {
			var treeLen = builder.K * $elm$core$Array$branchFactor;
			var depth = $elm$core$Basics$floor(
				A2($elm$core$Basics$logBase, $elm$core$Array$branchFactor, treeLen - 1));
			var correctNodeList = reverseNodeList ? $elm$core$List$reverse(builder.P) : builder.P;
			var tree = A2($elm$core$Array$treeFromBuilder, correctNodeList, builder.K);
			return A4(
				$elm$core$Array$Array_elm_builtin,
				$elm$core$Elm$JsArray$length(builder.oO) + treeLen,
				A2($elm$core$Basics$max, 5, depth * $elm$core$Array$shiftStep),
				tree,
				builder.oO);
		}
	});
var $elm$core$Basics$idiv = _Basics_idiv;
var $elm$core$Basics$lt = _Utils_lt;
var $elm$core$Array$initializeHelp = F5(
	function (fn, fromIndex, len, nodeList, tail) {
		initializeHelp:
		while (true) {
			if (fromIndex < 0) {
				return A2(
					$elm$core$Array$builderToArray,
					false,
					{P: nodeList, K: (len / $elm$core$Array$branchFactor) | 0, oO: tail});
			} else {
				var leaf = $elm$core$Array$Leaf(
					A3($elm$core$Elm$JsArray$initialize, $elm$core$Array$branchFactor, fromIndex, fn));
				var $temp$fn = fn,
					$temp$fromIndex = fromIndex - $elm$core$Array$branchFactor,
					$temp$len = len,
					$temp$nodeList = A2($elm$core$List$cons, leaf, nodeList),
					$temp$tail = tail;
				fn = $temp$fn;
				fromIndex = $temp$fromIndex;
				len = $temp$len;
				nodeList = $temp$nodeList;
				tail = $temp$tail;
				continue initializeHelp;
			}
		}
	});
var $elm$core$Basics$remainderBy = _Basics_remainderBy;
var $elm$core$Array$initialize = F2(
	function (len, fn) {
		if (len <= 0) {
			return $elm$core$Array$empty;
		} else {
			var tailLen = len % $elm$core$Array$branchFactor;
			var tail = A3($elm$core$Elm$JsArray$initialize, tailLen, len - tailLen, fn);
			var initialFromIndex = (len - tailLen) - $elm$core$Array$branchFactor;
			return A5($elm$core$Array$initializeHelp, fn, initialFromIndex, len, _List_Nil, tail);
		}
	});
var $elm$core$Basics$True = 0;
var $elm$core$Result$isOk = function (result) {
	if (!result.$) {
		return true;
	} else {
		return false;
	}
};
var $elm$json$Json$Decode$andThen = _Json_andThen;
var $elm$json$Json$Decode$map = _Json_map1;
var $elm$json$Json$Decode$map2 = _Json_map2;
var $elm$json$Json$Decode$succeed = _Json_succeed;
var $elm$virtual_dom$VirtualDom$toHandlerInt = function (handler) {
	switch (handler.$) {
		case 0:
			return 0;
		case 1:
			return 1;
		case 2:
			return 2;
		default:
			return 3;
	}
};
var $elm$browser$Browser$External = function (a) {
	return {$: 1, a: a};
};
var $elm$browser$Browser$Internal = function (a) {
	return {$: 0, a: a};
};
var $elm$core$Basics$identity = function (x) {
	return x;
};
var $elm$browser$Browser$Dom$NotFound = $elm$core$Basics$identity;
var $elm$url$Url$Http = 0;
var $elm$url$Url$Https = 1;
var $elm$url$Url$Url = F6(
	function (protocol, host, port_, path, query, fragment) {
		return {iA: fragment, iK: host, aA: path, jw: port_, jB: protocol, e1: query};
	});
var $elm$core$String$contains = _String_contains;
var $elm$core$String$length = _String_length;
var $elm$core$String$slice = _String_slice;
var $elm$core$String$dropLeft = F2(
	function (n, string) {
		return (n < 1) ? string : A3(
			$elm$core$String$slice,
			n,
			$elm$core$String$length(string),
			string);
	});
var $elm$core$String$indexes = _String_indexes;
var $elm$core$String$isEmpty = function (string) {
	return string === '';
};
var $elm$core$String$left = F2(
	function (n, string) {
		return (n < 1) ? '' : A3($elm$core$String$slice, 0, n, string);
	});
var $elm$core$String$toInt = _String_toInt;
var $elm$url$Url$chompBeforePath = F5(
	function (protocol, path, params, frag, str) {
		if ($elm$core$String$isEmpty(str) || A2($elm$core$String$contains, '@', str)) {
			return $elm$core$Maybe$Nothing;
		} else {
			var _v0 = A2($elm$core$String$indexes, ':', str);
			if (!_v0.b) {
				return $elm$core$Maybe$Just(
					A6($elm$url$Url$Url, protocol, str, $elm$core$Maybe$Nothing, path, params, frag));
			} else {
				if (!_v0.b.b) {
					var i = _v0.a;
					var _v1 = $elm$core$String$toInt(
						A2($elm$core$String$dropLeft, i + 1, str));
					if (_v1.$ === 1) {
						return $elm$core$Maybe$Nothing;
					} else {
						var port_ = _v1;
						return $elm$core$Maybe$Just(
							A6(
								$elm$url$Url$Url,
								protocol,
								A2($elm$core$String$left, i, str),
								port_,
								path,
								params,
								frag));
					}
				} else {
					return $elm$core$Maybe$Nothing;
				}
			}
		}
	});
var $elm$url$Url$chompBeforeQuery = F4(
	function (protocol, params, frag, str) {
		if ($elm$core$String$isEmpty(str)) {
			return $elm$core$Maybe$Nothing;
		} else {
			var _v0 = A2($elm$core$String$indexes, '/', str);
			if (!_v0.b) {
				return A5($elm$url$Url$chompBeforePath, protocol, '/', params, frag, str);
			} else {
				var i = _v0.a;
				return A5(
					$elm$url$Url$chompBeforePath,
					protocol,
					A2($elm$core$String$dropLeft, i, str),
					params,
					frag,
					A2($elm$core$String$left, i, str));
			}
		}
	});
var $elm$url$Url$chompBeforeFragment = F3(
	function (protocol, frag, str) {
		if ($elm$core$String$isEmpty(str)) {
			return $elm$core$Maybe$Nothing;
		} else {
			var _v0 = A2($elm$core$String$indexes, '?', str);
			if (!_v0.b) {
				return A4($elm$url$Url$chompBeforeQuery, protocol, $elm$core$Maybe$Nothing, frag, str);
			} else {
				var i = _v0.a;
				return A4(
					$elm$url$Url$chompBeforeQuery,
					protocol,
					$elm$core$Maybe$Just(
						A2($elm$core$String$dropLeft, i + 1, str)),
					frag,
					A2($elm$core$String$left, i, str));
			}
		}
	});
var $elm$url$Url$chompAfterProtocol = F2(
	function (protocol, str) {
		if ($elm$core$String$isEmpty(str)) {
			return $elm$core$Maybe$Nothing;
		} else {
			var _v0 = A2($elm$core$String$indexes, '#', str);
			if (!_v0.b) {
				return A3($elm$url$Url$chompBeforeFragment, protocol, $elm$core$Maybe$Nothing, str);
			} else {
				var i = _v0.a;
				return A3(
					$elm$url$Url$chompBeforeFragment,
					protocol,
					$elm$core$Maybe$Just(
						A2($elm$core$String$dropLeft, i + 1, str)),
					A2($elm$core$String$left, i, str));
			}
		}
	});
var $elm$core$String$startsWith = _String_startsWith;
var $elm$url$Url$fromString = function (str) {
	return A2($elm$core$String$startsWith, 'http://', str) ? A2(
		$elm$url$Url$chompAfterProtocol,
		0,
		A2($elm$core$String$dropLeft, 7, str)) : (A2($elm$core$String$startsWith, 'https://', str) ? A2(
		$elm$url$Url$chompAfterProtocol,
		1,
		A2($elm$core$String$dropLeft, 8, str)) : $elm$core$Maybe$Nothing);
};
var $elm$core$Basics$never = function (_v0) {
	never:
	while (true) {
		var nvr = _v0;
		var $temp$_v0 = nvr;
		_v0 = $temp$_v0;
		continue never;
	}
};
var $elm$core$Task$Perform = $elm$core$Basics$identity;
var $elm$core$Task$succeed = _Scheduler_succeed;
var $elm$core$Task$init = $elm$core$Task$succeed(0);
var $elm$core$List$foldrHelper = F4(
	function (fn, acc, ctr, ls) {
		if (!ls.b) {
			return acc;
		} else {
			var a = ls.a;
			var r1 = ls.b;
			if (!r1.b) {
				return A2(fn, a, acc);
			} else {
				var b = r1.a;
				var r2 = r1.b;
				if (!r2.b) {
					return A2(
						fn,
						a,
						A2(fn, b, acc));
				} else {
					var c = r2.a;
					var r3 = r2.b;
					if (!r3.b) {
						return A2(
							fn,
							a,
							A2(
								fn,
								b,
								A2(fn, c, acc)));
					} else {
						var d = r3.a;
						var r4 = r3.b;
						var res = (ctr > 500) ? A3(
							$elm$core$List$foldl,
							fn,
							acc,
							$elm$core$List$reverse(r4)) : A4($elm$core$List$foldrHelper, fn, acc, ctr + 1, r4);
						return A2(
							fn,
							a,
							A2(
								fn,
								b,
								A2(
									fn,
									c,
									A2(fn, d, res))));
					}
				}
			}
		}
	});
var $elm$core$List$foldr = F3(
	function (fn, acc, ls) {
		return A4($elm$core$List$foldrHelper, fn, acc, 0, ls);
	});
var $elm$core$List$map = F2(
	function (f, xs) {
		return A3(
			$elm$core$List$foldr,
			F2(
				function (x, acc) {
					return A2(
						$elm$core$List$cons,
						f(x),
						acc);
				}),
			_List_Nil,
			xs);
	});
var $elm$core$Task$andThen = _Scheduler_andThen;
var $elm$core$Task$map = F2(
	function (func, taskA) {
		return A2(
			$elm$core$Task$andThen,
			function (a) {
				return $elm$core$Task$succeed(
					func(a));
			},
			taskA);
	});
var $elm$core$Task$map2 = F3(
	function (func, taskA, taskB) {
		return A2(
			$elm$core$Task$andThen,
			function (a) {
				return A2(
					$elm$core$Task$andThen,
					function (b) {
						return $elm$core$Task$succeed(
							A2(func, a, b));
					},
					taskB);
			},
			taskA);
	});
var $elm$core$Task$sequence = function (tasks) {
	return A3(
		$elm$core$List$foldr,
		$elm$core$Task$map2($elm$core$List$cons),
		$elm$core$Task$succeed(_List_Nil),
		tasks);
};
var $elm$core$Platform$sendToApp = _Platform_sendToApp;
var $elm$core$Task$spawnCmd = F2(
	function (router, _v0) {
		var task = _v0;
		return _Scheduler_spawn(
			A2(
				$elm$core$Task$andThen,
				$elm$core$Platform$sendToApp(router),
				task));
	});
var $elm$core$Task$onEffects = F3(
	function (router, commands, state) {
		return A2(
			$elm$core$Task$map,
			function (_v0) {
				return 0;
			},
			$elm$core$Task$sequence(
				A2(
					$elm$core$List$map,
					$elm$core$Task$spawnCmd(router),
					commands)));
	});
var $elm$core$Task$onSelfMsg = F3(
	function (_v0, _v1, _v2) {
		return $elm$core$Task$succeed(0);
	});
var $elm$core$Task$cmdMap = F2(
	function (tagger, _v0) {
		var task = _v0;
		return A2($elm$core$Task$map, tagger, task);
	});
_Platform_effectManagers['Task'] = _Platform_createManager($elm$core$Task$init, $elm$core$Task$onEffects, $elm$core$Task$onSelfMsg, $elm$core$Task$cmdMap);
var $elm$core$Task$command = _Platform_leaf('Task');
var $elm$core$Task$perform = F2(
	function (toMessage, task) {
		return $elm$core$Task$command(
			A2($elm$core$Task$map, toMessage, task));
	});
var $elm$browser$Browser$application = _Browser_application;
var $elm$json$Json$Decode$field = _Json_decodeField;
var $author$project$Main$Model = F4(
	function (url, key, shared, page) {
		return {dk: key, nA: page, a1: shared, o1: url};
	});
var $author$project$Main$Page = function (a) {
	return {$: 3, a: a};
};
var $author$project$Main$Shared = function (a) {
	return {$: 2, a: a};
};
var $elm$core$Platform$Cmd$batch = _Platform_batch;
var $elm$core$Dict$RBEmpty_elm_builtin = {$: -2};
var $elm$core$Dict$empty = $elm$core$Dict$RBEmpty_elm_builtin;
var $elm$core$Maybe$map = F2(
	function (f, maybe) {
		if (!maybe.$) {
			var value = maybe.a;
			return $elm$core$Maybe$Just(
				f(value));
		} else {
			return $elm$core$Maybe$Nothing;
		}
	});
var $elm$core$Basics$composeR = F3(
	function (f, g, x) {
		return g(
			f(x));
	});
var $elm$core$List$drop = F2(
	function (n, list) {
		drop:
		while (true) {
			if (n <= 0) {
				return list;
			} else {
				if (!list.b) {
					return list;
				} else {
					var x = list.a;
					var xs = list.b;
					var $temp$n = n - 1,
						$temp$list = xs;
					n = $temp$n;
					list = $temp$list;
					continue drop;
				}
			}
		}
	});
var $elm$core$List$maybeCons = F3(
	function (f, mx, xs) {
		var _v0 = f(mx);
		if (!_v0.$) {
			var x = _v0.a;
			return A2($elm$core$List$cons, x, xs);
		} else {
			return xs;
		}
	});
var $elm$core$List$filterMap = F2(
	function (f, xs) {
		return A3(
			$elm$core$List$foldr,
			$elm$core$List$maybeCons(f),
			_List_Nil,
			xs);
	});
var $elm$core$Dict$Black = 1;
var $elm$core$Dict$RBNode_elm_builtin = F5(
	function (a, b, c, d, e) {
		return {$: -1, a: a, b: b, c: c, d: d, e: e};
	});
var $elm$core$Dict$Red = 0;
var $elm$core$Dict$balance = F5(
	function (color, key, value, left, right) {
		if ((right.$ === -1) && (!right.a)) {
			var _v1 = right.a;
			var rK = right.b;
			var rV = right.c;
			var rLeft = right.d;
			var rRight = right.e;
			if ((left.$ === -1) && (!left.a)) {
				var _v3 = left.a;
				var lK = left.b;
				var lV = left.c;
				var lLeft = left.d;
				var lRight = left.e;
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					0,
					key,
					value,
					A5($elm$core$Dict$RBNode_elm_builtin, 1, lK, lV, lLeft, lRight),
					A5($elm$core$Dict$RBNode_elm_builtin, 1, rK, rV, rLeft, rRight));
			} else {
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					color,
					rK,
					rV,
					A5($elm$core$Dict$RBNode_elm_builtin, 0, key, value, left, rLeft),
					rRight);
			}
		} else {
			if ((((left.$ === -1) && (!left.a)) && (left.d.$ === -1)) && (!left.d.a)) {
				var _v5 = left.a;
				var lK = left.b;
				var lV = left.c;
				var _v6 = left.d;
				var _v7 = _v6.a;
				var llK = _v6.b;
				var llV = _v6.c;
				var llLeft = _v6.d;
				var llRight = _v6.e;
				var lRight = left.e;
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					0,
					lK,
					lV,
					A5($elm$core$Dict$RBNode_elm_builtin, 1, llK, llV, llLeft, llRight),
					A5($elm$core$Dict$RBNode_elm_builtin, 1, key, value, lRight, right));
			} else {
				return A5($elm$core$Dict$RBNode_elm_builtin, color, key, value, left, right);
			}
		}
	});
var $elm$core$Basics$compare = _Utils_compare;
var $elm$core$Dict$insertHelp = F3(
	function (key, value, dict) {
		if (dict.$ === -2) {
			return A5($elm$core$Dict$RBNode_elm_builtin, 0, key, value, $elm$core$Dict$RBEmpty_elm_builtin, $elm$core$Dict$RBEmpty_elm_builtin);
		} else {
			var nColor = dict.a;
			var nKey = dict.b;
			var nValue = dict.c;
			var nLeft = dict.d;
			var nRight = dict.e;
			var _v1 = A2($elm$core$Basics$compare, key, nKey);
			switch (_v1) {
				case 0:
					return A5(
						$elm$core$Dict$balance,
						nColor,
						nKey,
						nValue,
						A3($elm$core$Dict$insertHelp, key, value, nLeft),
						nRight);
				case 1:
					return A5($elm$core$Dict$RBNode_elm_builtin, nColor, nKey, value, nLeft, nRight);
				default:
					return A5(
						$elm$core$Dict$balance,
						nColor,
						nKey,
						nValue,
						nLeft,
						A3($elm$core$Dict$insertHelp, key, value, nRight));
			}
		}
	});
var $elm$core$Dict$insert = F3(
	function (key, value, dict) {
		var _v0 = A3($elm$core$Dict$insertHelp, key, value, dict);
		if ((_v0.$ === -1) && (!_v0.a)) {
			var _v1 = _v0.a;
			var k = _v0.b;
			var v = _v0.c;
			var l = _v0.d;
			var r = _v0.e;
			return A5($elm$core$Dict$RBNode_elm_builtin, 1, k, v, l, r);
		} else {
			var x = _v0;
			return x;
		}
	});
var $elm$core$Dict$fromList = function (assocs) {
	return A3(
		$elm$core$List$foldl,
		F2(
			function (_v0, dict) {
				var key = _v0.a;
				var value = _v0.b;
				return A3($elm$core$Dict$insert, key, value, dict);
			}),
		$elm$core$Dict$empty,
		assocs);
};
var $elm$core$List$head = function (list) {
	if (list.b) {
		var x = list.a;
		var xs = list.b;
		return $elm$core$Maybe$Just(x);
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $elm$core$Maybe$map2 = F3(
	function (func, ma, mb) {
		if (ma.$ === 1) {
			return $elm$core$Maybe$Nothing;
		} else {
			var a = ma.a;
			if (mb.$ === 1) {
				return $elm$core$Maybe$Nothing;
			} else {
				var b = mb.a;
				return $elm$core$Maybe$Just(
					A2(func, a, b));
			}
		}
	});
var $elm$core$Tuple$mapBoth = F3(
	function (funcA, funcB, _v0) {
		var x = _v0.a;
		var y = _v0.b;
		return _Utils_Tuple2(
			funcA(x),
			funcB(y));
	});
var $elm$core$Tuple$pair = F2(
	function (a, b) {
		return _Utils_Tuple2(a, b);
	});
var $elm$url$Url$percentDecode = _Url_percentDecode;
var $elm$core$Maybe$withDefault = F2(
	function (_default, maybe) {
		if (!maybe.$) {
			var value = maybe.a;
			return value;
		} else {
			return _default;
		}
	});
var $ryannhg$elm_spa$ElmSpa$Request$query = function (str) {
	if ($elm$core$String$isEmpty(str)) {
		return $elm$core$Dict$empty;
	} else {
		var decode = function (val) {
			return A2(
				$elm$core$Maybe$withDefault,
				val,
				$elm$url$Url$percentDecode(val));
		};
		return $elm$core$Dict$fromList(
			A2(
				$elm$core$List$map,
				A2($elm$core$Tuple$mapBoth, decode, decode),
				A2(
					$elm$core$List$filterMap,
					A2(
						$elm$core$Basics$composeR,
						$elm$core$String$split('='),
						function (eq) {
							return A3(
								$elm$core$Maybe$map2,
								$elm$core$Tuple$pair,
								$elm$core$List$head(eq),
								$elm$core$Maybe$Just(
									A2(
										$elm$core$Maybe$withDefault,
										'',
										$elm$core$List$head(
											A2($elm$core$List$drop, 1, eq)))));
						}),
					A2($elm$core$String$split, '&', str))));
	}
};
var $ryannhg$elm_spa$ElmSpa$Request$create = F4(
	function (route, params, url, key) {
		return {
			dk: key,
			nB: params,
			e1: A2(
				$elm$core$Maybe$withDefault,
				$elm$core$Dict$empty,
				A2($elm$core$Maybe$map, $ryannhg$elm_spa$ElmSpa$Request$query, url.e1)),
			hk: route,
			o1: url
		};
	});
var $author$project$Gen$Route$NotFound = {$: 3};
var $elm$url$Url$Parser$Parser = $elm$core$Basics$identity;
var $elm$core$List$append = F2(
	function (xs, ys) {
		if (!ys.b) {
			return xs;
		} else {
			return A3($elm$core$List$foldr, $elm$core$List$cons, ys, xs);
		}
	});
var $elm$core$List$concat = function (lists) {
	return A3($elm$core$List$foldr, $elm$core$List$append, _List_Nil, lists);
};
var $elm$core$List$concatMap = F2(
	function (f, list) {
		return $elm$core$List$concat(
			A2($elm$core$List$map, f, list));
	});
var $elm$url$Url$Parser$oneOf = function (parsers) {
	return function (state) {
		return A2(
			$elm$core$List$concatMap,
			function (_v0) {
				var parser = _v0;
				return parser(state);
			},
			parsers);
	};
};
var $elm$url$Url$Parser$State = F5(
	function (visited, unvisited, params, frag, value) {
		return {bJ: frag, nB: params, bz: unvisited, a5: value, b$: visited};
	});
var $elm$url$Url$Parser$getFirstMatch = function (states) {
	getFirstMatch:
	while (true) {
		if (!states.b) {
			return $elm$core$Maybe$Nothing;
		} else {
			var state = states.a;
			var rest = states.b;
			var _v1 = state.bz;
			if (!_v1.b) {
				return $elm$core$Maybe$Just(state.a5);
			} else {
				if ((_v1.a === '') && (!_v1.b.b)) {
					return $elm$core$Maybe$Just(state.a5);
				} else {
					var $temp$states = rest;
					states = $temp$states;
					continue getFirstMatch;
				}
			}
		}
	}
};
var $elm$url$Url$Parser$removeFinalEmpty = function (segments) {
	if (!segments.b) {
		return _List_Nil;
	} else {
		if ((segments.a === '') && (!segments.b.b)) {
			return _List_Nil;
		} else {
			var segment = segments.a;
			var rest = segments.b;
			return A2(
				$elm$core$List$cons,
				segment,
				$elm$url$Url$Parser$removeFinalEmpty(rest));
		}
	}
};
var $elm$url$Url$Parser$preparePath = function (path) {
	var _v0 = A2($elm$core$String$split, '/', path);
	if (_v0.b && (_v0.a === '')) {
		var segments = _v0.b;
		return $elm$url$Url$Parser$removeFinalEmpty(segments);
	} else {
		var segments = _v0;
		return $elm$url$Url$Parser$removeFinalEmpty(segments);
	}
};
var $elm$url$Url$Parser$addToParametersHelp = F2(
	function (value, maybeList) {
		if (maybeList.$ === 1) {
			return $elm$core$Maybe$Just(
				_List_fromArray(
					[value]));
		} else {
			var list = maybeList.a;
			return $elm$core$Maybe$Just(
				A2($elm$core$List$cons, value, list));
		}
	});
var $elm$core$Dict$get = F2(
	function (targetKey, dict) {
		get:
		while (true) {
			if (dict.$ === -2) {
				return $elm$core$Maybe$Nothing;
			} else {
				var key = dict.b;
				var value = dict.c;
				var left = dict.d;
				var right = dict.e;
				var _v1 = A2($elm$core$Basics$compare, targetKey, key);
				switch (_v1) {
					case 0:
						var $temp$targetKey = targetKey,
							$temp$dict = left;
						targetKey = $temp$targetKey;
						dict = $temp$dict;
						continue get;
					case 1:
						return $elm$core$Maybe$Just(value);
					default:
						var $temp$targetKey = targetKey,
							$temp$dict = right;
						targetKey = $temp$targetKey;
						dict = $temp$dict;
						continue get;
				}
			}
		}
	});
var $elm$core$Dict$getMin = function (dict) {
	getMin:
	while (true) {
		if ((dict.$ === -1) && (dict.d.$ === -1)) {
			var left = dict.d;
			var $temp$dict = left;
			dict = $temp$dict;
			continue getMin;
		} else {
			return dict;
		}
	}
};
var $elm$core$Dict$moveRedLeft = function (dict) {
	if (((dict.$ === -1) && (dict.d.$ === -1)) && (dict.e.$ === -1)) {
		if ((dict.e.d.$ === -1) && (!dict.e.d.a)) {
			var clr = dict.a;
			var k = dict.b;
			var v = dict.c;
			var _v1 = dict.d;
			var lClr = _v1.a;
			var lK = _v1.b;
			var lV = _v1.c;
			var lLeft = _v1.d;
			var lRight = _v1.e;
			var _v2 = dict.e;
			var rClr = _v2.a;
			var rK = _v2.b;
			var rV = _v2.c;
			var rLeft = _v2.d;
			var _v3 = rLeft.a;
			var rlK = rLeft.b;
			var rlV = rLeft.c;
			var rlL = rLeft.d;
			var rlR = rLeft.e;
			var rRight = _v2.e;
			return A5(
				$elm$core$Dict$RBNode_elm_builtin,
				0,
				rlK,
				rlV,
				A5(
					$elm$core$Dict$RBNode_elm_builtin,
					1,
					k,
					v,
					A5($elm$core$Dict$RBNode_elm_builtin, 0, lK, lV, lLeft, lRight),
					rlL),
				A5($elm$core$Dict$RBNode_elm_builtin, 1, rK, rV, rlR, rRight));
		} else {
			var clr = dict.a;
			var k = dict.b;
			var v = dict.c;
			var _v4 = dict.d;
			var lClr = _v4.a;
			var lK = _v4.b;
			var lV = _v4.c;
			var lLeft = _v4.d;
			var lRight = _v4.e;
			var _v5 = dict.e;
			var rClr = _v5.a;
			var rK = _v5.b;
			var rV = _v5.c;
			var rLeft = _v5.d;
			var rRight = _v5.e;
			if (clr === 1) {
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					1,
					k,
					v,
					A5($elm$core$Dict$RBNode_elm_builtin, 0, lK, lV, lLeft, lRight),
					A5($elm$core$Dict$RBNode_elm_builtin, 0, rK, rV, rLeft, rRight));
			} else {
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					1,
					k,
					v,
					A5($elm$core$Dict$RBNode_elm_builtin, 0, lK, lV, lLeft, lRight),
					A5($elm$core$Dict$RBNode_elm_builtin, 0, rK, rV, rLeft, rRight));
			}
		}
	} else {
		return dict;
	}
};
var $elm$core$Dict$moveRedRight = function (dict) {
	if (((dict.$ === -1) && (dict.d.$ === -1)) && (dict.e.$ === -1)) {
		if ((dict.d.d.$ === -1) && (!dict.d.d.a)) {
			var clr = dict.a;
			var k = dict.b;
			var v = dict.c;
			var _v1 = dict.d;
			var lClr = _v1.a;
			var lK = _v1.b;
			var lV = _v1.c;
			var _v2 = _v1.d;
			var _v3 = _v2.a;
			var llK = _v2.b;
			var llV = _v2.c;
			var llLeft = _v2.d;
			var llRight = _v2.e;
			var lRight = _v1.e;
			var _v4 = dict.e;
			var rClr = _v4.a;
			var rK = _v4.b;
			var rV = _v4.c;
			var rLeft = _v4.d;
			var rRight = _v4.e;
			return A5(
				$elm$core$Dict$RBNode_elm_builtin,
				0,
				lK,
				lV,
				A5($elm$core$Dict$RBNode_elm_builtin, 1, llK, llV, llLeft, llRight),
				A5(
					$elm$core$Dict$RBNode_elm_builtin,
					1,
					k,
					v,
					lRight,
					A5($elm$core$Dict$RBNode_elm_builtin, 0, rK, rV, rLeft, rRight)));
		} else {
			var clr = dict.a;
			var k = dict.b;
			var v = dict.c;
			var _v5 = dict.d;
			var lClr = _v5.a;
			var lK = _v5.b;
			var lV = _v5.c;
			var lLeft = _v5.d;
			var lRight = _v5.e;
			var _v6 = dict.e;
			var rClr = _v6.a;
			var rK = _v6.b;
			var rV = _v6.c;
			var rLeft = _v6.d;
			var rRight = _v6.e;
			if (clr === 1) {
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					1,
					k,
					v,
					A5($elm$core$Dict$RBNode_elm_builtin, 0, lK, lV, lLeft, lRight),
					A5($elm$core$Dict$RBNode_elm_builtin, 0, rK, rV, rLeft, rRight));
			} else {
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					1,
					k,
					v,
					A5($elm$core$Dict$RBNode_elm_builtin, 0, lK, lV, lLeft, lRight),
					A5($elm$core$Dict$RBNode_elm_builtin, 0, rK, rV, rLeft, rRight));
			}
		}
	} else {
		return dict;
	}
};
var $elm$core$Dict$removeHelpPrepEQGT = F7(
	function (targetKey, dict, color, key, value, left, right) {
		if ((left.$ === -1) && (!left.a)) {
			var _v1 = left.a;
			var lK = left.b;
			var lV = left.c;
			var lLeft = left.d;
			var lRight = left.e;
			return A5(
				$elm$core$Dict$RBNode_elm_builtin,
				color,
				lK,
				lV,
				lLeft,
				A5($elm$core$Dict$RBNode_elm_builtin, 0, key, value, lRight, right));
		} else {
			_v2$2:
			while (true) {
				if ((right.$ === -1) && (right.a === 1)) {
					if (right.d.$ === -1) {
						if (right.d.a === 1) {
							var _v3 = right.a;
							var _v4 = right.d;
							var _v5 = _v4.a;
							return $elm$core$Dict$moveRedRight(dict);
						} else {
							break _v2$2;
						}
					} else {
						var _v6 = right.a;
						var _v7 = right.d;
						return $elm$core$Dict$moveRedRight(dict);
					}
				} else {
					break _v2$2;
				}
			}
			return dict;
		}
	});
var $elm$core$Dict$removeMin = function (dict) {
	if ((dict.$ === -1) && (dict.d.$ === -1)) {
		var color = dict.a;
		var key = dict.b;
		var value = dict.c;
		var left = dict.d;
		var lColor = left.a;
		var lLeft = left.d;
		var right = dict.e;
		if (lColor === 1) {
			if ((lLeft.$ === -1) && (!lLeft.a)) {
				var _v3 = lLeft.a;
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					color,
					key,
					value,
					$elm$core$Dict$removeMin(left),
					right);
			} else {
				var _v4 = $elm$core$Dict$moveRedLeft(dict);
				if (_v4.$ === -1) {
					var nColor = _v4.a;
					var nKey = _v4.b;
					var nValue = _v4.c;
					var nLeft = _v4.d;
					var nRight = _v4.e;
					return A5(
						$elm$core$Dict$balance,
						nColor,
						nKey,
						nValue,
						$elm$core$Dict$removeMin(nLeft),
						nRight);
				} else {
					return $elm$core$Dict$RBEmpty_elm_builtin;
				}
			}
		} else {
			return A5(
				$elm$core$Dict$RBNode_elm_builtin,
				color,
				key,
				value,
				$elm$core$Dict$removeMin(left),
				right);
		}
	} else {
		return $elm$core$Dict$RBEmpty_elm_builtin;
	}
};
var $elm$core$Dict$removeHelp = F2(
	function (targetKey, dict) {
		if (dict.$ === -2) {
			return $elm$core$Dict$RBEmpty_elm_builtin;
		} else {
			var color = dict.a;
			var key = dict.b;
			var value = dict.c;
			var left = dict.d;
			var right = dict.e;
			if (_Utils_cmp(targetKey, key) < 0) {
				if ((left.$ === -1) && (left.a === 1)) {
					var _v4 = left.a;
					var lLeft = left.d;
					if ((lLeft.$ === -1) && (!lLeft.a)) {
						var _v6 = lLeft.a;
						return A5(
							$elm$core$Dict$RBNode_elm_builtin,
							color,
							key,
							value,
							A2($elm$core$Dict$removeHelp, targetKey, left),
							right);
					} else {
						var _v7 = $elm$core$Dict$moveRedLeft(dict);
						if (_v7.$ === -1) {
							var nColor = _v7.a;
							var nKey = _v7.b;
							var nValue = _v7.c;
							var nLeft = _v7.d;
							var nRight = _v7.e;
							return A5(
								$elm$core$Dict$balance,
								nColor,
								nKey,
								nValue,
								A2($elm$core$Dict$removeHelp, targetKey, nLeft),
								nRight);
						} else {
							return $elm$core$Dict$RBEmpty_elm_builtin;
						}
					}
				} else {
					return A5(
						$elm$core$Dict$RBNode_elm_builtin,
						color,
						key,
						value,
						A2($elm$core$Dict$removeHelp, targetKey, left),
						right);
				}
			} else {
				return A2(
					$elm$core$Dict$removeHelpEQGT,
					targetKey,
					A7($elm$core$Dict$removeHelpPrepEQGT, targetKey, dict, color, key, value, left, right));
			}
		}
	});
var $elm$core$Dict$removeHelpEQGT = F2(
	function (targetKey, dict) {
		if (dict.$ === -1) {
			var color = dict.a;
			var key = dict.b;
			var value = dict.c;
			var left = dict.d;
			var right = dict.e;
			if (_Utils_eq(targetKey, key)) {
				var _v1 = $elm$core$Dict$getMin(right);
				if (_v1.$ === -1) {
					var minKey = _v1.b;
					var minValue = _v1.c;
					return A5(
						$elm$core$Dict$balance,
						color,
						minKey,
						minValue,
						left,
						$elm$core$Dict$removeMin(right));
				} else {
					return $elm$core$Dict$RBEmpty_elm_builtin;
				}
			} else {
				return A5(
					$elm$core$Dict$balance,
					color,
					key,
					value,
					left,
					A2($elm$core$Dict$removeHelp, targetKey, right));
			}
		} else {
			return $elm$core$Dict$RBEmpty_elm_builtin;
		}
	});
var $elm$core$Dict$remove = F2(
	function (key, dict) {
		var _v0 = A2($elm$core$Dict$removeHelp, key, dict);
		if ((_v0.$ === -1) && (!_v0.a)) {
			var _v1 = _v0.a;
			var k = _v0.b;
			var v = _v0.c;
			var l = _v0.d;
			var r = _v0.e;
			return A5($elm$core$Dict$RBNode_elm_builtin, 1, k, v, l, r);
		} else {
			var x = _v0;
			return x;
		}
	});
var $elm$core$Dict$update = F3(
	function (targetKey, alter, dictionary) {
		var _v0 = alter(
			A2($elm$core$Dict$get, targetKey, dictionary));
		if (!_v0.$) {
			var value = _v0.a;
			return A3($elm$core$Dict$insert, targetKey, value, dictionary);
		} else {
			return A2($elm$core$Dict$remove, targetKey, dictionary);
		}
	});
var $elm$url$Url$Parser$addParam = F2(
	function (segment, dict) {
		var _v0 = A2($elm$core$String$split, '=', segment);
		if ((_v0.b && _v0.b.b) && (!_v0.b.b.b)) {
			var rawKey = _v0.a;
			var _v1 = _v0.b;
			var rawValue = _v1.a;
			var _v2 = $elm$url$Url$percentDecode(rawKey);
			if (_v2.$ === 1) {
				return dict;
			} else {
				var key = _v2.a;
				var _v3 = $elm$url$Url$percentDecode(rawValue);
				if (_v3.$ === 1) {
					return dict;
				} else {
					var value = _v3.a;
					return A3(
						$elm$core$Dict$update,
						key,
						$elm$url$Url$Parser$addToParametersHelp(value),
						dict);
				}
			}
		} else {
			return dict;
		}
	});
var $elm$url$Url$Parser$prepareQuery = function (maybeQuery) {
	if (maybeQuery.$ === 1) {
		return $elm$core$Dict$empty;
	} else {
		var qry = maybeQuery.a;
		return A3(
			$elm$core$List$foldr,
			$elm$url$Url$Parser$addParam,
			$elm$core$Dict$empty,
			A2($elm$core$String$split, '&', qry));
	}
};
var $elm$url$Url$Parser$parse = F2(
	function (_v0, url) {
		var parser = _v0;
		return $elm$url$Url$Parser$getFirstMatch(
			parser(
				A5(
					$elm$url$Url$Parser$State,
					_List_Nil,
					$elm$url$Url$Parser$preparePath(url.aA),
					$elm$url$Url$Parser$prepareQuery(url.e1),
					url.iA,
					$elm$core$Basics$identity)));
	});
var $author$project$Gen$Route$Create = {$: 0};
var $author$project$Gen$Route$Embed = {$: 1};
var $author$project$Gen$Route$New = {$: 2};
var $author$project$Gen$Route$Organization___Create = function (a) {
	return {$: 4, a: a};
};
var $author$project$Gen$Route$Organization___New = function (a) {
	return {$: 5, a: a};
};
var $author$project$Gen$Route$Organization___Project_ = function (a) {
	return {$: 6, a: a};
};
var $elm$url$Url$Parser$mapState = F2(
	function (func, _v0) {
		var visited = _v0.b$;
		var unvisited = _v0.bz;
		var params = _v0.nB;
		var frag = _v0.bJ;
		var value = _v0.a5;
		return A5(
			$elm$url$Url$Parser$State,
			visited,
			unvisited,
			params,
			frag,
			func(value));
	});
var $elm$url$Url$Parser$map = F2(
	function (subValue, _v0) {
		var parseArg = _v0;
		return function (_v1) {
			var visited = _v1.b$;
			var unvisited = _v1.bz;
			var params = _v1.nB;
			var frag = _v1.bJ;
			var value = _v1.a5;
			return A2(
				$elm$core$List$map,
				$elm$url$Url$Parser$mapState(value),
				parseArg(
					A5($elm$url$Url$Parser$State, visited, unvisited, params, frag, subValue)));
		};
	});
var $elm$url$Url$Parser$s = function (str) {
	return function (_v0) {
		var visited = _v0.b$;
		var unvisited = _v0.bz;
		var params = _v0.nB;
		var frag = _v0.bJ;
		var value = _v0.a5;
		if (!unvisited.b) {
			return _List_Nil;
		} else {
			var next = unvisited.a;
			var rest = unvisited.b;
			return _Utils_eq(next, str) ? _List_fromArray(
				[
					A5(
					$elm$url$Url$Parser$State,
					A2($elm$core$List$cons, next, visited),
					rest,
					params,
					frag,
					value)
				]) : _List_Nil;
		}
	};
};
var $author$project$Gen$Params$Create$parser = $elm$url$Url$Parser$s('create');
var $author$project$Gen$Params$Embed$parser = $elm$url$Url$Parser$s('embed');
var $author$project$Gen$Params$New$parser = $elm$url$Url$Parser$s('new');
var $author$project$Gen$Params$NotFound$parser = $elm$url$Url$Parser$s('not-found');
var $author$project$Gen$Params$Organization_$Create$Params = function (organization) {
	return {nx: organization};
};
var $elm$url$Url$Parser$slash = F2(
	function (_v0, _v1) {
		var parseBefore = _v0;
		var parseAfter = _v1;
		return function (state) {
			return A2(
				$elm$core$List$concatMap,
				parseAfter,
				parseBefore(state));
		};
	});
var $elm$url$Url$Parser$custom = F2(
	function (tipe, stringToSomething) {
		return function (_v0) {
			var visited = _v0.b$;
			var unvisited = _v0.bz;
			var params = _v0.nB;
			var frag = _v0.bJ;
			var value = _v0.a5;
			if (!unvisited.b) {
				return _List_Nil;
			} else {
				var next = unvisited.a;
				var rest = unvisited.b;
				var _v2 = stringToSomething(next);
				if (!_v2.$) {
					var nextValue = _v2.a;
					return _List_fromArray(
						[
							A5(
							$elm$url$Url$Parser$State,
							A2($elm$core$List$cons, next, visited),
							rest,
							params,
							frag,
							value(nextValue))
						]);
				} else {
					return _List_Nil;
				}
			}
		};
	});
var $elm$url$Url$Parser$string = A2($elm$url$Url$Parser$custom, 'STRING', $elm$core$Maybe$Just);
var $author$project$Gen$Params$Organization_$Create$parser = A2(
	$elm$url$Url$Parser$map,
	$author$project$Gen$Params$Organization_$Create$Params,
	A2(
		$elm$url$Url$Parser$slash,
		$elm$url$Url$Parser$string,
		$elm$url$Url$Parser$s('create')));
var $author$project$Gen$Params$Organization_$New$Params = function (organization) {
	return {nx: organization};
};
var $author$project$Gen$Params$Organization_$New$parser = A2(
	$elm$url$Url$Parser$map,
	$author$project$Gen$Params$Organization_$New$Params,
	A2(
		$elm$url$Url$Parser$slash,
		$elm$url$Url$Parser$string,
		$elm$url$Url$Parser$s('new')));
var $author$project$Gen$Params$Organization_$Project_$Params = F2(
	function (organization, project) {
		return {nx: organization, nN: project};
	});
var $author$project$Gen$Params$Organization_$Project_$parser = A2(
	$elm$url$Url$Parser$map,
	$author$project$Gen$Params$Organization_$Project_$Params,
	A2($elm$url$Url$Parser$slash, $elm$url$Url$Parser$string, $elm$url$Url$Parser$string));
var $author$project$Gen$Route$routes = _List_fromArray(
	[
		A2($elm$url$Url$Parser$map, $author$project$Gen$Route$Create, $author$project$Gen$Params$Create$parser),
		A2($elm$url$Url$Parser$map, $author$project$Gen$Route$Embed, $author$project$Gen$Params$Embed$parser),
		A2($elm$url$Url$Parser$map, $author$project$Gen$Route$New, $author$project$Gen$Params$New$parser),
		A2($elm$url$Url$Parser$map, $author$project$Gen$Route$NotFound, $author$project$Gen$Params$NotFound$parser),
		A2($elm$url$Url$Parser$map, $author$project$Gen$Route$Organization___Create, $author$project$Gen$Params$Organization_$Create$parser),
		A2($elm$url$Url$Parser$map, $author$project$Gen$Route$Organization___New, $author$project$Gen$Params$Organization_$New$parser),
		A2($elm$url$Url$Parser$map, $author$project$Gen$Route$Organization___Project_, $author$project$Gen$Params$Organization_$Project_$parser)
	]);
var $author$project$Gen$Route$fromUrl = A2(
	$elm$core$Basics$composeR,
	$elm$url$Url$Parser$parse(
		$elm$url$Url$Parser$oneOf($author$project$Gen$Route$routes)),
	$elm$core$Maybe$withDefault($author$project$Gen$Route$NotFound));
var $author$project$Request$create = F3(
	function (params, url, key) {
		return A4(
			$ryannhg$elm_spa$ElmSpa$Request$create,
			$author$project$Gen$Route$fromUrl(url),
			params,
			url,
			key);
	});
var $author$project$Gen$Model$Create = F2(
	function (a, b) {
		return {$: 1, a: a, b: b};
	});
var $author$project$Gen$Msg$Create = function (a) {
	return {$: 0, a: a};
};
var $author$project$Gen$Model$Embed = F2(
	function (a, b) {
		return {$: 2, a: a, b: b};
	});
var $author$project$Gen$Msg$Embed = function (a) {
	return {$: 1, a: a};
};
var $author$project$Gen$Model$New = F2(
	function (a, b) {
		return {$: 3, a: a, b: b};
	});
var $author$project$Gen$Msg$New = function (a) {
	return {$: 2, a: a};
};
var $author$project$Gen$Model$NotFound = F2(
	function (a, b) {
		return {$: 4, a: a, b: b};
	});
var $author$project$Gen$Msg$NotFound = function (a) {
	return {$: 3, a: a};
};
var $author$project$Gen$Model$Organization___Create = F2(
	function (a, b) {
		return {$: 5, a: a, b: b};
	});
var $author$project$Gen$Msg$Organization___Create = function (a) {
	return {$: 4, a: a};
};
var $author$project$Gen$Model$Organization___New = F2(
	function (a, b) {
		return {$: 6, a: a, b: b};
	});
var $author$project$Gen$Msg$Organization___New = function (a) {
	return {$: 5, a: a};
};
var $author$project$Gen$Model$Organization___Project_ = F2(
	function (a, b) {
		return {$: 7, a: a, b: b};
	});
var $author$project$Gen$Msg$Organization___Project_ = function (a) {
	return {$: 6, a: a};
};
var $author$project$Gen$Model$Redirecting_ = {$: 0};
var $elm$core$Platform$Sub$map = _Platform_map;
var $elm$core$Platform$Sub$batch = _Platform_batch;
var $elm$core$Platform$Sub$none = $elm$core$Platform$Sub$batch(_List_Nil);
var $elm$browser$Browser$Navigation$replaceUrl = _Browser_replaceUrl;
var $ryannhg$elm_spa$ElmSpa$Page$toResult = F3(
	function (toPage, shared, req) {
		var _v0 = A2(toPage, shared, req);
		var toResult_ = _v0;
		return A2(
			toResult_,
			shared,
			A4($ryannhg$elm_spa$ElmSpa$Request$create, req.hk, 0, req.o1, req.dk));
	});
var $ryannhg$elm_spa$ElmSpa$Page$bundle = function (_v0) {
	var redirecting = _v0.nZ;
	var toRoute = _v0.oX;
	var toUrl = _v0.oY;
	var fromCmd = _v0.lT;
	var mapEffect = _v0.mz;
	var mapView = _v0.mA;
	var page = _v0.nA;
	var toModel = _v0.oV;
	var toMsg = _v0.oW;
	return {
		bl: F4(
			function (params, shared, url, key) {
				var req = A4(
					$ryannhg$elm_spa$ElmSpa$Request$create,
					toRoute(url),
					params,
					url,
					key);
				var _v1 = A3($ryannhg$elm_spa$ElmSpa$Page$toResult, page, shared, req);
				if (!_v1.$) {
					var record = _v1.a;
					return A3(
						$elm$core$Tuple$mapBoth,
						toModel(req.nB),
						mapEffect,
						record.bl(0));
				} else {
					var route = _v1.a;
					return _Utils_Tuple2(
						redirecting.mT,
						fromCmd(
							A2(
								$elm$browser$Browser$Navigation$replaceUrl,
								req.dk,
								toUrl(route))));
				}
			}),
		by: F5(
			function (params, model, shared, url, key) {
				var req = A4(
					$ryannhg$elm_spa$ElmSpa$Request$create,
					toRoute(url),
					params,
					url,
					key);
				var _v2 = A3($ryannhg$elm_spa$ElmSpa$Page$toResult, page, shared, req);
				if (!_v2.$) {
					var record = _v2.a;
					return A2(
						$elm$core$Platform$Sub$map,
						toMsg,
						record.by(model));
				} else {
					return $elm$core$Platform$Sub$none;
				}
			}),
		fv: F6(
			function (params, msg, model, shared, url, key) {
				var req = A4(
					$ryannhg$elm_spa$ElmSpa$Request$create,
					toRoute(url),
					params,
					url,
					key);
				var _v3 = A3($ryannhg$elm_spa$ElmSpa$Page$toResult, page, shared, req);
				if (!_v3.$) {
					var record = _v3.a;
					return A3(
						$elm$core$Tuple$mapBoth,
						toModel(req.nB),
						mapEffect,
						A2(record.fv, msg, model));
				} else {
					var route = _v3.a;
					return _Utils_Tuple2(
						redirecting.mT,
						fromCmd(
							A2(
								$elm$browser$Browser$Navigation$replaceUrl,
								req.dk,
								toUrl(route))));
				}
			}),
		o3: F5(
			function (params, model, shared, url, key) {
				var req = A4(
					$ryannhg$elm_spa$ElmSpa$Request$create,
					toRoute(url),
					params,
					url,
					key);
				var _v4 = A3($ryannhg$elm_spa$ElmSpa$Page$toResult, page, shared, req);
				if (!_v4.$) {
					var record = _v4.a;
					return mapView(
						record.o3(model));
				} else {
					return redirecting.o3;
				}
			})
	};
};
var $author$project$Effect$Cmd = function (a) {
	return {$: 1, a: a};
};
var $author$project$Effect$fromCmd = $author$project$Effect$Cmd;
var $author$project$Effect$Batch = function (a) {
	return {$: 3, a: a};
};
var $author$project$Effect$None = {$: 0};
var $author$project$Effect$Shared = function (a) {
	return {$: 2, a: a};
};
var $elm$core$Platform$Cmd$map = _Platform_map;
var $author$project$Effect$map = F2(
	function (fn, effect) {
		switch (effect.$) {
			case 0:
				return $author$project$Effect$None;
			case 1:
				var cmd = effect.a;
				return $author$project$Effect$Cmd(
					A2($elm$core$Platform$Cmd$map, fn, cmd));
			case 2:
				var msg = effect.a;
				return $author$project$Effect$Shared(msg);
			default:
				var list = effect.a;
				return $author$project$Effect$Batch(
					A2(
						$elm$core$List$map,
						$author$project$Effect$map(fn),
						list));
		}
	});
var $elm$virtual_dom$VirtualDom$map = _VirtualDom_map;
var $elm$html$Html$map = $elm$virtual_dom$VirtualDom$map;
var $author$project$View$map = F2(
	function (fn, view) {
		return {
			kM: A2(
				$elm$core$List$map,
				$elm$html$Html$map(fn),
				view.kM),
			a4: view.a4
		};
	});
var $elm$virtual_dom$VirtualDom$text = _VirtualDom_text;
var $elm$html$Html$text = $elm$virtual_dom$VirtualDom$text;
var $author$project$View$placeholder = function (str) {
	return {
		kM: _List_fromArray(
			[
				$elm$html$Html$text(str)
			]),
		a4: str
	};
};
var $author$project$View$none = $author$project$View$placeholder('');
var $author$project$Gen$Route$toHref = function (route) {
	var joinAsHref = function (segments) {
		return '/' + A2($elm$core$String$join, '/', segments);
	};
	switch (route.$) {
		case 0:
			return joinAsHref(
				_List_fromArray(
					['create']));
		case 1:
			return joinAsHref(
				_List_fromArray(
					['embed']));
		case 2:
			return joinAsHref(
				_List_fromArray(
					['new']));
		case 3:
			return joinAsHref(
				_List_fromArray(
					['not-found']));
		case 4:
			var params = route.a;
			return joinAsHref(
				_List_fromArray(
					[params.nx, 'create']));
		case 5:
			var params = route.a;
			return joinAsHref(
				_List_fromArray(
					[params.nx, 'new']));
		default:
			var params = route.a;
			return joinAsHref(
				_List_fromArray(
					[params.nx, params.nN]));
	}
};
var $author$project$Gen$Pages$bundle = F3(
	function (page, toModel, toMsg) {
		return $ryannhg$elm_spa$ElmSpa$Page$bundle(
			{
				lT: $author$project$Effect$fromCmd,
				mz: $author$project$Effect$map(toMsg),
				mA: $author$project$View$map(toMsg),
				nA: page,
				nZ: {mT: $author$project$Gen$Model$Redirecting_, o3: $author$project$View$none},
				oV: toModel,
				oW: toMsg,
				oX: $author$project$Gen$Route$fromUrl,
				oY: $author$project$Gen$Route$toHref
			});
	});
var $ryannhg$elm_spa$ElmSpa$Page$Page = $elm$core$Basics$identity;
var $elm$core$Basics$always = F2(
	function (a, _v0) {
		return a;
	});
var $elm$core$Tuple$mapSecond = F2(
	function (func, _v0) {
		var x = _v0.a;
		var y = _v0.b;
		return _Utils_Tuple2(
			x,
			func(y));
	});
var $ryannhg$elm_spa$ElmSpa$Page$adapters = {
	d7: function (page) {
		return {
			bl: $elm$core$Basics$always(page.bl),
			by: page.by,
			fv: page.fv,
			o3: page.o3
		};
	},
	lz: F2(
		function (fromCmd, page) {
			return {
				bl: function (_v0) {
					return A2($elm$core$Tuple$mapSecond, fromCmd, page.bl);
				},
				by: page.by,
				fv: F2(
					function (msg, model) {
						return A2(
							$elm$core$Tuple$mapSecond,
							fromCmd,
							A2(page.fv, msg, model));
					}),
				o3: page.o3
			};
		}),
	e9: F2(
		function (none, page) {
			return {
				bl: function (_v1) {
					return _Utils_Tuple2(page.bl, none);
				},
				by: function (_v2) {
					return $elm$core$Platform$Sub$none;
				},
				fv: F2(
					function (msg, model) {
						return _Utils_Tuple2(
							A2(page.fv, msg, model),
							none);
					}),
				o3: page.o3
			};
		}),
	fk: F2(
		function (none, page) {
			return {
				bl: function (_v3) {
					return _Utils_Tuple2(0, none);
				},
				by: function (_v4) {
					return $elm$core$Platform$Sub$none;
				},
				fv: F2(
					function (_v5, _v6) {
						return _Utils_Tuple2(0, none);
					}),
				o3: function (_v7) {
					return page.o3;
				}
			};
		})
};
var $ryannhg$elm_spa$ElmSpa$Page$element = F2(
	function (fromCmd, page) {
		return F2(
			function (_v0, _v1) {
				return $elm$core$Result$Ok(
					A2($ryannhg$elm_spa$ElmSpa$Page$adapters.lz, fromCmd, page));
			});
	});
var $author$project$Page$element = $ryannhg$elm_spa$ElmSpa$Page$element($author$project$Effect$fromCmd);
var $author$project$PagesComponents$Create$Models$InitProject = {$: 0};
var $elm$url$Url$percentEncode = _Url_percentEncode;
var $author$project$Libs$Url$buildQueryString = function (params) {
	return A2(
		$elm$core$String$join,
		'&',
		A2(
			$elm$core$List$map,
			function (_v0) {
				var key = _v0.a;
				var value = _v0.b;
				return key + ('=' + $elm$url$Url$percentEncode(value));
			},
			params));
};
var $elm$core$List$filter = F2(
	function (isGood, list) {
		return A3(
			$elm$core$List$foldr,
			F2(
				function (x, xs) {
					return isGood(x) ? A2($elm$core$List$cons, x, xs) : xs;
				}),
			_List_Nil,
			list);
	});
var $author$project$Conf$github = 'https://github.com/azimuttapp/azimutt';
var $elm$core$Basics$neq = _Utils_notEqual;
var $author$project$Conf$twitter = 'azimuttapp';
var $author$project$Conf$constants = {
	kw: $author$project$Conf$github + '/issues',
	kx: $author$project$Conf$github + '/discussions/9',
	ky: $author$project$Conf$github + '/discussions/7',
	kz: $author$project$Conf$github + '/discussions/8',
	kA: $author$project$Conf$github + '/discussions',
	kB: 'hey@azimutt.app',
	kC: $author$project$Conf$github + '/issues?q=is%3Aissue+is%3Aopen+label%3A%22feature+request%22',
	kD: $author$project$Conf$github,
	kE: F2(
		function (title, body) {
			return $author$project$Conf$github + ('/issues/new/?' + $author$project$Libs$Url$buildQueryString(
				A2(
					$elm$core$List$filter,
					function (_v0) {
						var v = _v0.b;
						return v !== '';
					},
					_List_fromArray(
						[
							_Utils_Tuple2('title', title),
							_Utils_Tuple2('body', body)
						]))));
		}),
	kF: $author$project$Conf$github + '/projects/1',
	kG: 'https://twitter.com/' + $author$project$Conf$twitter,
	kH: 'https://azimutt.app',
	kR: 20,
	kZ: 'Hi team, I really like what you\'ve done with @' + ($author$project$Conf$twitter + '. Keep up the good work 💪'),
	lg: 'Next-Gen ERD: Design, Explore, Document and Analyze your database.',
	lh: 'initial layout',
	li: 'Azimutt · Database explorer and analyzer',
	m4: 'New Project',
	ou: 'Hi @' + ($author$project$Conf$twitter + ', I just published my schema at ..., I would love if you can share 🚀'),
	o5: 'default'
};
var $author$project$Services$Toasts$init = {l7: 0, bX: _List_Nil};
var $author$project$Libs$Maybe$mapOrElse = F3(
	function (f, _default, maybe) {
		return A2(
			$elm$core$Maybe$withDefault,
			_default,
			A2($elm$core$Maybe$map, f, maybe));
	});
var $author$project$Libs$Task$send = function (msg) {
	return A2(
		$elm$core$Task$perform,
		$elm$core$Basics$identity,
		$elm$core$Task$succeed(msg));
};
var $author$project$Ports$SetMeta = function (a) {
	return {$: 6, a: a};
};
var $elm$json$Json$Encode$bool = _Json_wrap;
var $elm$core$Dict$foldl = F3(
	function (func, acc, dict) {
		foldl:
		while (true) {
			if (dict.$ === -2) {
				return acc;
			} else {
				var key = dict.b;
				var value = dict.c;
				var left = dict.d;
				var right = dict.e;
				var $temp$func = func,
					$temp$acc = A3(
					func,
					key,
					value,
					A3($elm$core$Dict$foldl, func, acc, left)),
					$temp$dict = right;
				func = $temp$func;
				acc = $temp$acc;
				dict = $temp$dict;
				continue foldl;
			}
		}
	});
var $elm$json$Json$Encode$dict = F3(
	function (toKey, toValue, dictionary) {
		return _Json_wrap(
			A3(
				$elm$core$Dict$foldl,
				F3(
					function (key, value, obj) {
						return A3(
							_Json_addField,
							toKey(key),
							toValue(value),
							obj);
					}),
				_Json_emptyObject(0),
				dictionary));
	});
var $mpizenberg$elm_file$FileValue$encode = function (file) {
	return file.a5;
};
var $elm$json$Json$Encode$string = _Json_wrap;
var $author$project$Libs$Models$DatabaseUrl$encode = function (value) {
	return $elm$json$Json$Encode$string(value);
};
var $elm$json$Json$Encode$null = _Json_encodeNull;
var $author$project$Libs$Json$Encode$maybe = F2(
	function (encoder, value) {
		return A3($author$project$Libs$Maybe$mapOrElse, encoder, $elm$json$Json$Encode$null, value);
	});
var $elm$json$Json$Encode$object = function (pairs) {
	return _Json_wrap(
		A3(
			$elm$core$List$foldl,
			F2(
				function (_v0, obj) {
					var k = _v0.a;
					var v = _v0.b;
					return A3(_Json_addField, k, v, obj);
				}),
			_Json_emptyObject(0),
			pairs));
};
var $author$project$Libs$Models$Hotkey$targetEncoder = function (t) {
	return $elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'id',
				A2($author$project$Libs$Json$Encode$maybe, $elm$json$Json$Encode$string, t.H)),
				_Utils_Tuple2(
				'class',
				A2($author$project$Libs$Json$Encode$maybe, $elm$json$Json$Encode$string, t.fL)),
				_Utils_Tuple2(
				'tag',
				A2($author$project$Libs$Json$Encode$maybe, $elm$json$Json$Encode$string, t.hG))
			]));
};
var $author$project$Libs$Models$Hotkey$encode = function (key) {
	return $elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'key',
				$elm$json$Json$Encode$string(key.dk)),
				_Utils_Tuple2(
				'ctrl',
				$elm$json$Json$Encode$bool(key.at)),
				_Utils_Tuple2(
				'shift',
				$elm$json$Json$Encode$bool(key.hp)),
				_Utils_Tuple2(
				'alt',
				$elm$json$Json$Encode$bool(key.fA)),
				_Utils_Tuple2(
				'target',
				A2($author$project$Libs$Json$Encode$maybe, $author$project$Libs$Models$Hotkey$targetEncoder, key.hH)),
				_Utils_Tuple2(
				'onInput',
				$elm$json$Json$Encode$bool(key.nn)),
				_Utils_Tuple2(
				'preventDefault',
				$elm$json$Json$Encode$bool(key.jy))
			]));
};
var $author$project$Libs$Models$Uuid$encode = function (value) {
	return $elm$json$Json$Encode$string(value);
};
var $author$project$Models$OrganizationId$encode = function (value) {
	return $author$project$Libs$Models$Uuid$encode(value);
};
var $author$project$Models$Project$ProjectEncodingVersion$current = 2;
var $elm$json$Json$Encode$int = _Json_wrap;
var $elm$time$Time$posixToMillis = function (_v0) {
	var millis = _v0;
	return millis;
};
var $author$project$Libs$Time$encode = function (value) {
	return $elm$json$Json$Encode$int(
		$elm$time$Time$posixToMillis(value));
};
var $author$project$Models$HerokuId$encode = function (value) {
	return $author$project$Libs$Models$Uuid$encode(value);
};
var $author$project$Libs$Json$Encode$notNullObject = function (attrs) {
	return $elm$json$Json$Encode$object(
		A2(
			$elm$core$List$filter,
			function (_v0) {
				var value = _v0.b;
				return !_Utils_eq(value, $elm$json$Json$Encode$null);
			},
			attrs));
};
var $author$project$Models$HerokuResource$encode = function (value) {
	return $author$project$Libs$Json$Encode$notNullObject(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'id',
				$author$project$Models$HerokuId$encode(value.H))
			]));
};
var $author$project$Models$OrganizationName$encode = function (value) {
	return $elm$json$Json$Encode$string(value);
};
var $author$project$Libs$Models$Slug$encode = function (value) {
	return $elm$json$Json$Encode$string(value);
};
var $author$project$Models$OrganizationSlug$encode = function (value) {
	return $author$project$Libs$Models$Slug$encode(value);
};
var $author$project$Models$Plan$encode = function (value) {
	return $elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'id',
				$elm$json$Json$Encode$string(value.H)),
				_Utils_Tuple2(
				'name',
				$elm$json$Json$Encode$string(value.eS)),
				_Utils_Tuple2(
				'layouts',
				A2($author$project$Libs$Json$Encode$maybe, $elm$json$Json$Encode$int, value.i$)),
				_Utils_Tuple2(
				'memos',
				A2($author$project$Libs$Json$Encode$maybe, $elm$json$Json$Encode$int, value.gw)),
				_Utils_Tuple2(
				'colors',
				$elm$json$Json$Encode$bool(value.eg)),
				_Utils_Tuple2(
				'private_links',
				$elm$json$Json$Encode$bool(value.nM)),
				_Utils_Tuple2(
				'db_analysis',
				$elm$json$Json$Encode$bool(value.fR)),
				_Utils_Tuple2(
				'db_access',
				$elm$json$Json$Encode$bool(value.ld))
			]));
};
var $author$project$Models$Organization$encode = function (value) {
	return $author$project$Libs$Json$Encode$notNullObject(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'id',
				$author$project$Models$OrganizationId$encode(value.H)),
				_Utils_Tuple2(
				'slug',
				$author$project$Models$OrganizationSlug$encode(value.hr)),
				_Utils_Tuple2(
				'name',
				$author$project$Models$OrganizationName$encode(value.eS)),
				_Utils_Tuple2(
				'plan',
				$author$project$Models$Plan$encode(value.jv)),
				_Utils_Tuple2(
				'logo',
				$elm$json$Json$Encode$string(value.gv)),
				_Utils_Tuple2(
				'location',
				A2($author$project$Libs$Json$Encode$maybe, $elm$json$Json$Encode$string, value.gu)),
				_Utils_Tuple2(
				'description',
				A2($author$project$Libs$Json$Encode$maybe, $elm$json$Json$Encode$string, value.bf)),
				_Utils_Tuple2(
				'heroku',
				A2($author$project$Libs$Json$Encode$maybe, $author$project$Models$HerokuResource$encode, value.gb))
			]));
};
var $elm$json$Json$Encode$float = _Json_wrap;
var $author$project$Libs$Models$ZoomLevel$encode = function (value) {
	return $elm$json$Json$Encode$float(value);
};
var $author$project$Libs$Models$Position$encode = function (value) {
	return $author$project$Libs$Json$Encode$notNullObject(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'left',
				$elm$json$Json$Encode$float(value.C)),
				_Utils_Tuple2(
				'top',
				$elm$json$Json$Encode$float(value.ad))
			]));
};
var $author$project$Models$Position$encodeDiagram = function (_v0) {
	var pos = _v0;
	return $author$project$Libs$Models$Position$encode(pos);
};
var $author$project$Models$Project$CanvasProps$encode = function (value) {
	return $author$project$Libs$Json$Encode$notNullObject(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'position',
				$author$project$Models$Position$encodeDiagram(value.e$)),
				_Utils_Tuple2(
				'zoom',
				$author$project$Libs$Models$ZoomLevel$encode(value.hU))
			]));
};
var $author$project$Models$Project$ColumnPath$separator = ':';
var $author$project$Libs$Nel$toList = function (xs) {
	return A2($elm$core$List$cons, xs.ev, xs.oO);
};
var $author$project$Models$Project$ColumnPath$toString = function (path) {
	return A2(
		$elm$core$String$join,
		$author$project$Models$Project$ColumnPath$separator,
		$author$project$Libs$Nel$toList(path));
};
var $author$project$Models$Project$ColumnPath$encode = function (value) {
	return $elm$json$Json$Encode$string(
		$author$project$Models$Project$ColumnPath$toString(value));
};
var $author$project$Models$Project$TableId$toString = function (_v0) {
	var s = _v0.a;
	var t = _v0.b;
	return s + ('.' + t);
};
var $author$project$Models$Project$TableId$encode = function (value) {
	return $elm$json$Json$Encode$string(
		$author$project$Models$Project$TableId$toString(value));
};
var $author$project$Libs$Models$Size$encode = function (value) {
	return $author$project$Libs$Json$Encode$notNullObject(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'width',
				$elm$json$Json$Encode$float(value.bB)),
				_Utils_Tuple2(
				'height',
				$elm$json$Json$Encode$float(value.bj))
			]));
};
var $author$project$Models$Size$encodeCanvas = function (_v0) {
	var size = _v0;
	return $author$project$Libs$Models$Size$encode(size);
};
var $author$project$Libs$Tailwind$encodeColor = function (_v0) {
	var color = _v0;
	return $elm$json$Json$Encode$string(color);
};
var $author$project$Models$Position$encodeGrid = function (_v0) {
	var pos = _v0;
	return $author$project$Libs$Models$Position$encode(pos);
};
var $elm$json$Json$Encode$list = F2(
	function (func, entries) {
		return _Json_wrap(
			A3(
				$elm$core$List$foldl,
				_Json_addEntry(func),
				_Json_emptyArray(0),
				entries));
	});
var $elm$core$Maybe$andThen = F2(
	function (callback, maybeValue) {
		if (!maybeValue.$) {
			var value = maybeValue.a;
			return callback(value);
		} else {
			return $elm$core$Maybe$Nothing;
		}
	});
var $author$project$Libs$Bool$cond = F3(
	function (predicate, _true, _false) {
		return predicate ? _true : _false;
	});
var $author$project$Libs$Maybe$filter = F2(
	function (predicate, maybe) {
		return A2(
			$elm$core$Maybe$andThen,
			function (a) {
				return A3(
					$author$project$Libs$Bool$cond,
					predicate(a),
					maybe,
					$elm$core$Maybe$Nothing);
			},
			maybe);
	});
var $elm$core$Basics$not = _Basics_not;
var $author$project$Libs$Json$Encode$withDefault = F3(
	function (encode, _default, value) {
		return A2(
			$author$project$Libs$Json$Encode$maybe,
			encode,
			A2(
				$author$project$Libs$Maybe$filter,
				function (v) {
					return !_Utils_eq(v, _default);
				},
				$elm$core$Maybe$Just(value)));
	});
var $author$project$Models$Project$TableProps$encode = function (value) {
	return $author$project$Libs$Json$Encode$notNullObject(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'id',
				$author$project$Models$Project$TableId$encode(value.H)),
				_Utils_Tuple2(
				'position',
				$author$project$Models$Position$encodeGrid(value.e$)),
				_Utils_Tuple2(
				'size',
				$author$project$Models$Size$encodeCanvas(value.ox)),
				_Utils_Tuple2(
				'color',
				$author$project$Libs$Tailwind$encodeColor(value.A)),
				_Utils_Tuple2(
				'columns',
				A2($elm$json$Json$Encode$list, $author$project$Models$Project$ColumnPath$encode, value.M)),
				_Utils_Tuple2(
				'selected',
				A3($author$project$Libs$Json$Encode$withDefault, $elm$json$Json$Encode$bool, false, value.cy)),
				_Utils_Tuple2(
				'collapsed',
				A3($author$project$Libs$Json$Encode$withDefault, $elm$json$Json$Encode$bool, false, value.cS)),
				_Utils_Tuple2(
				'hiddenColumns',
				A3($author$project$Libs$Json$Encode$withDefault, $elm$json$Json$Encode$bool, false, value.ay))
			]));
};
var $author$project$PagesComponents$Organization_$Project_$Models$Memo$encode = function (value) {
	return $author$project$Libs$Json$Encode$notNullObject(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'id',
				$elm$json$Json$Encode$int(value.H)),
				_Utils_Tuple2(
				'content',
				$elm$json$Json$Encode$string(value.cX)),
				_Utils_Tuple2(
				'position',
				$author$project$Models$Position$encodeGrid(value.e$)),
				_Utils_Tuple2(
				'size',
				$author$project$Models$Size$encodeCanvas(value.ox)),
				_Utils_Tuple2(
				'color',
				A2($author$project$Libs$Json$Encode$maybe, $author$project$Libs$Tailwind$encodeColor, value.A))
			]));
};
var $author$project$Models$Project$Layout$encode = function (value) {
	return $author$project$Libs$Json$Encode$notNullObject(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'canvas',
				$author$project$Models$Project$CanvasProps$encode(value.fJ)),
				_Utils_Tuple2(
				'tables',
				A2($elm$json$Json$Encode$list, $author$project$Models$Project$TableProps$encode, value.oM)),
				_Utils_Tuple2(
				'memos',
				A3(
					$author$project$Libs$Json$Encode$withDefault,
					$elm$json$Json$Encode$list($author$project$PagesComponents$Organization_$Project_$Models$Memo$encode),
					_List_Nil,
					value.gw)),
				_Utils_Tuple2(
				'createdAt',
				$author$project$Libs$Time$encode(value.ic)),
				_Utils_Tuple2(
				'updatedAt',
				$author$project$Libs$Time$encode(value.kb))
			]));
};
var $author$project$Models$Project$LayoutName$encode = function (value) {
	return $elm$json$Json$Encode$string(value);
};
var $author$project$Models$Project$ProjectId$encode = function (value) {
	return $author$project$Libs$Models$Uuid$encode(value);
};
var $author$project$Models$Project$ProjectName$encode = function (value) {
	return $elm$json$Json$Encode$string(value);
};
var $author$project$Models$ColumnOrder$toString = function (order) {
	switch (order) {
		case 0:
			return 'sql';
		case 1:
			return 'property';
		case 2:
			return 'name';
		default:
			return 'type';
	}
};
var $author$project$Models$ColumnOrder$encode = function (value) {
	return $elm$json$Json$Encode$string(
		$author$project$Models$ColumnOrder$toString(value));
};
var $author$project$Models$Project$FindPathSettings$encode = F2(
	function (_default, value) {
		return $author$project$Libs$Json$Encode$notNullObject(
			_List_fromArray(
				[
					_Utils_Tuple2(
					'maxPathLength',
					A3($author$project$Libs$Json$Encode$withDefault, $elm$json$Json$Encode$int, _default.eN, value.eN)),
					_Utils_Tuple2(
					'ignoredTables',
					A3($author$project$Libs$Json$Encode$withDefault, $elm$json$Json$Encode$string, _default.eD, value.eD)),
					_Utils_Tuple2(
					'ignoredColumns',
					A3($author$project$Libs$Json$Encode$withDefault, $elm$json$Json$Encode$string, _default.eC, value.eC))
				]));
	});
var $author$project$Models$Project$SchemaName$encode = function (value) {
	return $elm$json$Json$Encode$string(value);
};
var $author$project$Models$RelationStyle$toString = function (order) {
	switch (order) {
		case 0:
			return 'Bezier';
		case 1:
			return 'Straight';
		default:
			return 'Steps';
	}
};
var $author$project$Models$RelationStyle$encode = function (value) {
	return $elm$json$Json$Encode$string(
		$author$project$Models$RelationStyle$toString(value));
};
var $author$project$Models$Project$ProjectSettings$encodeHiddenColumns = F2(
	function (_default, value) {
		return $author$project$Libs$Json$Encode$notNullObject(
			_List_fromArray(
				[
					_Utils_Tuple2(
					'list',
					A3($author$project$Libs$Json$Encode$withDefault, $elm$json$Json$Encode$string, _default.bn, value.bn)),
					_Utils_Tuple2(
					'max',
					A3($author$project$Libs$Json$Encode$withDefault, $elm$json$Json$Encode$int, _default.mE, value.mE)),
					_Utils_Tuple2(
					'props',
					A3($author$project$Libs$Json$Encode$withDefault, $elm$json$Json$Encode$bool, _default.nU, value.nU)),
					_Utils_Tuple2(
					'relations',
					A3($author$project$Libs$Json$Encode$withDefault, $elm$json$Json$Encode$bool, _default.bT, value.bT))
				]));
	});
var $author$project$Libs$Json$Encode$withDefaultDeep = F3(
	function (encode, _default, value) {
		return A2(
			$author$project$Libs$Json$Encode$maybe,
			encode(_default),
			A2(
				$author$project$Libs$Maybe$filter,
				function (v) {
					return !_Utils_eq(v, _default);
				},
				$elm$core$Maybe$Just(value)));
	});
var $author$project$Models$Project$ProjectSettings$encode = F2(
	function (_default, value) {
		return $author$project$Libs$Json$Encode$notNullObject(
			_List_fromArray(
				[
					_Utils_Tuple2(
					'findPath',
					A3($author$project$Libs$Json$Encode$withDefaultDeep, $author$project$Models$Project$FindPathSettings$encode, _default.c8, value.c8)),
					_Utils_Tuple2(
					'defaultSchema',
					A3($author$project$Libs$Json$Encode$withDefault, $author$project$Models$Project$SchemaName$encode, _default.cb, value.cb)),
					_Utils_Tuple2(
					'removedSchemas',
					A3(
						$author$project$Libs$Json$Encode$withDefault,
						$elm$json$Json$Encode$list($author$project$Models$Project$SchemaName$encode),
						_default.n3,
						value.n3)),
					_Utils_Tuple2(
					'removeViews',
					A3($author$project$Libs$Json$Encode$withDefault, $elm$json$Json$Encode$bool, _default.n2, value.n2)),
					_Utils_Tuple2(
					'removedTables',
					A3($author$project$Libs$Json$Encode$withDefault, $elm$json$Json$Encode$string, _default.n4, value.n4)),
					_Utils_Tuple2(
					'hiddenColumns',
					A3($author$project$Libs$Json$Encode$withDefaultDeep, $author$project$Models$Project$ProjectSettings$encodeHiddenColumns, _default.ay, value.ay)),
					_Utils_Tuple2(
					'columnOrder',
					A3($author$project$Libs$Json$Encode$withDefault, $author$project$Models$ColumnOrder$encode, _default.cW, value.cW)),
					_Utils_Tuple2(
					'relationStyle',
					A3($author$project$Libs$Json$Encode$withDefault, $author$project$Models$RelationStyle$encode, _default.dH, value.dH)),
					_Utils_Tuple2(
					'columnBasicTypes',
					A3($author$project$Libs$Json$Encode$withDefault, $elm$json$Json$Encode$bool, _default.cT, value.cT)),
					_Utils_Tuple2(
					'collapseTableColumns',
					A3($author$project$Libs$Json$Encode$withDefault, $elm$json$Json$Encode$bool, _default.cR, value.cR))
				]));
	});
var $author$project$Models$Project$ProjectSlug$encode = function (value) {
	return $author$project$Libs$Models$Slug$encode(value);
};
var $author$project$Models$Project$ProjectStorage$toString = function (value) {
	if (!value) {
		return 'local';
	} else {
		return 'remote';
	}
};
var $author$project$Models$Project$ProjectStorage$encode = function (value) {
	return $elm$json$Json$Encode$string(
		$author$project$Models$Project$ProjectStorage$toString(value));
};
var $author$project$Models$Project$ProjectVisibility$encode = function (value) {
	switch (value) {
		case 0:
			return $elm$json$Json$Encode$string('none');
		case 1:
			return $elm$json$Json$Encode$string('read');
		default:
			return $elm$json$Json$Encode$string('write');
	}
};
var $elm$core$Elm$JsArray$foldl = _JsArray_foldl;
var $elm$core$Array$foldl = F3(
	function (func, baseCase, _v0) {
		var tree = _v0.c;
		var tail = _v0.d;
		var helper = F2(
			function (node, acc) {
				if (!node.$) {
					var subTree = node.a;
					return A3($elm$core$Elm$JsArray$foldl, helper, acc, subTree);
				} else {
					var values = node.a;
					return A3($elm$core$Elm$JsArray$foldl, func, acc, values);
				}
			});
		return A3(
			$elm$core$Elm$JsArray$foldl,
			func,
			A3($elm$core$Elm$JsArray$foldl, helper, baseCase, tree),
			tail);
	});
var $elm$json$Json$Encode$array = F2(
	function (func, entries) {
		return _Json_wrap(
			A3(
				$elm$core$Array$foldl,
				_Json_addEntry(func),
				_Json_emptyArray(0),
				entries));
	});
var $author$project$Models$Project$CustomTypeName$encode = function (value) {
	return $elm$json$Json$Encode$string(value);
};
var $author$project$Models$Project$CustomTypeValue$encode = function (value) {
	if (!value.$) {
		var values = value.a;
		return $author$project$Libs$Json$Encode$notNullObject(
			_List_fromArray(
				[
					_Utils_Tuple2(
					'enum',
					A2($elm$json$Json$Encode$list, $elm$json$Json$Encode$string, values))
				]));
	} else {
		var definition = value.a;
		return $author$project$Libs$Json$Encode$notNullObject(
			_List_fromArray(
				[
					_Utils_Tuple2(
					'definition',
					$elm$json$Json$Encode$string(definition))
				]));
	}
};
var $author$project$Libs$Models$FileLineIndex$encode = function (value) {
	return $elm$json$Json$Encode$int(value);
};
var $author$project$Models$Project$SourceId$toString = function (_v0) {
	var id = _v0;
	return id;
};
var $author$project$Models$Project$SourceId$encode = function (value) {
	return $author$project$Libs$Models$Uuid$encode(
		$author$project$Models$Project$SourceId$toString(value));
};
var $author$project$Models$Project$Origin$encode = function (value) {
	return $author$project$Libs$Json$Encode$notNullObject(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'id',
				$author$project$Models$Project$SourceId$encode(value.H)),
				_Utils_Tuple2(
				'lines',
				A2($elm$json$Json$Encode$list, $author$project$Libs$Models$FileLineIndex$encode, value.a$))
			]));
};
var $author$project$Libs$Nel$Nel = F2(
	function (head, tail) {
		return {ev: head, oO: tail};
	});
var $author$project$Libs$Nel$fromList = function (list) {
	if (list.b) {
		var head = list.a;
		var tail = list.b;
		return $elm$core$Maybe$Just(
			A2($author$project$Libs$Nel$Nel, head, tail));
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $author$project$Libs$Json$Encode$nel = F2(
	function (encoder, value) {
		return A2(
			$elm$json$Json$Encode$list,
			encoder,
			$author$project$Libs$Nel$toList(value));
	});
var $author$project$Models$Project$Origin$encodeList = function (origins) {
	return A2(
		$author$project$Libs$Json$Encode$maybe,
		$author$project$Libs$Json$Encode$nel($author$project$Models$Project$Origin$encode),
		$author$project$Libs$Nel$fromList(origins));
};
var $author$project$Models$Project$CustomType$encode = function (value) {
	return $author$project$Libs$Json$Encode$notNullObject(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'schema',
				$author$project$Models$Project$SchemaName$encode(value.H.a)),
				_Utils_Tuple2(
				'name',
				$author$project$Models$Project$CustomTypeName$encode(value.eS)),
				_Utils_Tuple2(
				'value',
				$author$project$Models$Project$CustomTypeValue$encode(value.a5)),
				_Utils_Tuple2(
				'origins',
				$author$project$Models$Project$Origin$encodeList(value.jq))
			]));
};
var $author$project$Models$Project$ColumnRef$encode = function (value) {
	return $author$project$Libs$Json$Encode$notNullObject(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'table',
				$author$project$Models$Project$TableId$encode(value.aq)),
				_Utils_Tuple2(
				'column',
				$author$project$Models$Project$ColumnPath$encode(value.bH))
			]));
};
var $author$project$Models$Project$RelationName$encode = function (value) {
	return $elm$json$Json$Encode$string(value);
};
var $author$project$Models$Project$Relation$encode = function (value) {
	return $author$project$Libs$Json$Encode$notNullObject(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'name',
				$author$project$Models$Project$RelationName$encode(value.eS)),
				_Utils_Tuple2(
				'src',
				$author$project$Models$Project$ColumnRef$encode(value.ht)),
				_Utils_Tuple2(
				'ref',
				$author$project$Models$Project$ColumnRef$encode(value.dG)),
				_Utils_Tuple2(
				'origins',
				$author$project$Models$Project$Origin$encodeList(value.jq))
			]));
};
var $author$project$Models$Project$SampleKey$encode = function (value) {
	return $elm$json$Json$Encode$string(value);
};
var $author$project$Libs$Models$FileName$encode = function (value) {
	return $elm$json$Json$Encode$string(value);
};
var $author$project$Libs$Models$FileSize$encode = function (value) {
	return $elm$json$Json$Encode$int(value);
};
var $author$project$Libs$Models$FileUpdatedAt$encode = function (value) {
	return $author$project$Libs$Time$encode(value);
};
var $author$project$Libs$Models$FileUrl$encode = function (value) {
	return $elm$json$Json$Encode$string(value);
};
var $author$project$Models$Project$SourceKind$encode = function (value) {
	switch (value.$) {
		case 0:
			var url = value.a;
			return $author$project$Libs$Json$Encode$notNullObject(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'kind',
						$elm$json$Json$Encode$string('DatabaseConnection')),
						_Utils_Tuple2(
						'url',
						$author$project$Libs$Models$DatabaseUrl$encode(url))
					]));
		case 1:
			var name = value.a;
			var size = value.b;
			var modified = value.c;
			return $author$project$Libs$Json$Encode$notNullObject(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'kind',
						$elm$json$Json$Encode$string('SqlLocalFile')),
						_Utils_Tuple2(
						'name',
						$author$project$Libs$Models$FileName$encode(name)),
						_Utils_Tuple2(
						'size',
						$author$project$Libs$Models$FileSize$encode(size)),
						_Utils_Tuple2(
						'modified',
						$author$project$Libs$Models$FileUpdatedAt$encode(modified))
					]));
		case 2:
			var name = value.a;
			var size = value.b;
			return $author$project$Libs$Json$Encode$notNullObject(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'kind',
						$elm$json$Json$Encode$string('SqlRemoteFile')),
						_Utils_Tuple2(
						'url',
						$author$project$Libs$Models$FileUrl$encode(name)),
						_Utils_Tuple2(
						'size',
						$author$project$Libs$Models$FileSize$encode(size))
					]));
		case 3:
			var name = value.a;
			var size = value.b;
			var modified = value.c;
			return $author$project$Libs$Json$Encode$notNullObject(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'kind',
						$elm$json$Json$Encode$string('JsonLocalFile')),
						_Utils_Tuple2(
						'name',
						$author$project$Libs$Models$FileName$encode(name)),
						_Utils_Tuple2(
						'size',
						$author$project$Libs$Models$FileSize$encode(size)),
						_Utils_Tuple2(
						'modified',
						$author$project$Libs$Models$FileUpdatedAt$encode(modified))
					]));
		case 4:
			var name = value.a;
			var size = value.b;
			return $author$project$Libs$Json$Encode$notNullObject(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'kind',
						$elm$json$Json$Encode$string('JsonRemoteFile')),
						_Utils_Tuple2(
						'url',
						$author$project$Libs$Models$FileUrl$encode(name)),
						_Utils_Tuple2(
						'size',
						$author$project$Libs$Models$FileSize$encode(size))
					]));
		default:
			return $author$project$Libs$Json$Encode$notNullObject(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'kind',
						$elm$json$Json$Encode$string('AmlEditor'))
					]));
	}
};
var $author$project$Models$Project$SourceLine$encode = function (value) {
	return $elm$json$Json$Encode$string(value);
};
var $author$project$Models$Project$SourceName$encode = function (value) {
	return $elm$json$Json$Encode$string(value);
};
var $author$project$Models$Project$CheckName$encode = function (value) {
	return $elm$json$Json$Encode$string(value);
};
var $author$project$Models$Project$Check$encode = function (value) {
	return $author$project$Libs$Json$Encode$notNullObject(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'name',
				$author$project$Models$Project$CheckName$encode(value.eS)),
				_Utils_Tuple2(
				'columns',
				A2($elm$json$Json$Encode$list, $author$project$Models$Project$ColumnPath$encode, value.M)),
				_Utils_Tuple2(
				'predicate',
				A2($author$project$Libs$Json$Encode$maybe, $elm$json$Json$Encode$string, value.nI)),
				_Utils_Tuple2(
				'origins',
				$author$project$Models$Project$Origin$encodeList(value.jq))
			]));
};
var $author$project$Models$Project$ColumnName$encode = function (value) {
	return $elm$json$Json$Encode$string(value);
};
var $author$project$Models$Project$ColumnType$encode = function (value) {
	return $elm$json$Json$Encode$string(value);
};
var $author$project$Models$Project$ColumnValue$encode = function (value) {
	return $elm$json$Json$Encode$string(value);
};
var $author$project$Models$Project$Comment$encode = function (value) {
	return $author$project$Libs$Json$Encode$notNullObject(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'text',
				$elm$json$Json$Encode$string(value.fp)),
				_Utils_Tuple2(
				'origins',
				$author$project$Models$Project$Origin$encodeList(value.jq))
			]));
};
var $elm$core$List$sortBy = _List_sortBy;
var $elm$core$Tuple$second = function (_v0) {
	var y = _v0.b;
	return y;
};
var $elm$core$Dict$values = function (dict) {
	return A3(
		$elm$core$Dict$foldr,
		F3(
			function (key, value, valueList) {
				return A2($elm$core$List$cons, value, valueList);
			}),
		_List_Nil,
		dict);
};
var $author$project$Libs$Ned$values = function (ned) {
	return A2(
		$author$project$Libs$Nel$Nel,
		ned.ev.b,
		$elm$core$Dict$values(ned.oO));
};
var $author$project$Models$Project$Column$encode = function (value) {
	return $author$project$Libs$Json$Encode$notNullObject(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'name',
				$author$project$Models$Project$ColumnName$encode(value.eS)),
				_Utils_Tuple2(
				'type',
				$author$project$Models$Project$ColumnType$encode(value.gi)),
				_Utils_Tuple2(
				'nullable',
				A3($author$project$Libs$Json$Encode$withDefault, $elm$json$Json$Encode$bool, false, value.nf)),
				_Utils_Tuple2(
				'default',
				A2($author$project$Libs$Json$Encode$maybe, $author$project$Models$Project$ColumnValue$encode, value.lf)),
				_Utils_Tuple2(
				'comment',
				A2($author$project$Libs$Json$Encode$maybe, $author$project$Models$Project$Comment$encode, value.h4)),
				_Utils_Tuple2(
				'columns',
				A2(
					$author$project$Libs$Json$Encode$maybe,
					function (_v0) {
						var d = _v0;
						return A2(
							$elm$json$Json$Encode$list,
							$author$project$Models$Project$Column$encode,
							A2(
								$elm$core$List$sortBy,
								function ($) {
									return $.l7;
								},
								$author$project$Libs$Nel$toList(
									$author$project$Libs$Ned$values(d))));
					},
					value.M)),
				_Utils_Tuple2(
				'origins',
				$author$project$Models$Project$Origin$encodeList(value.jq))
			]));
};
var $author$project$Models$Project$IndexName$encode = function (value) {
	return $elm$json$Json$Encode$string(value);
};
var $author$project$Models$Project$Index$encode = function (value) {
	return $author$project$Libs$Json$Encode$notNullObject(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'name',
				$author$project$Models$Project$IndexName$encode(value.eS)),
				_Utils_Tuple2(
				'columns',
				A2($author$project$Libs$Json$Encode$nel, $author$project$Models$Project$ColumnPath$encode, value.M)),
				_Utils_Tuple2(
				'definition',
				A2($author$project$Libs$Json$Encode$maybe, $elm$json$Json$Encode$string, value.ii)),
				_Utils_Tuple2(
				'origins',
				$author$project$Models$Project$Origin$encodeList(value.jq))
			]));
};
var $author$project$Models$Project$PrimaryKeyName$encode = function (value) {
	return $elm$json$Json$Encode$string(value);
};
var $author$project$Models$Project$PrimaryKey$encode = function (value) {
	return $author$project$Libs$Json$Encode$notNullObject(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'name',
				A2($author$project$Libs$Json$Encode$maybe, $author$project$Models$Project$PrimaryKeyName$encode, value.eS)),
				_Utils_Tuple2(
				'columns',
				A2($author$project$Libs$Json$Encode$nel, $author$project$Models$Project$ColumnPath$encode, value.M)),
				_Utils_Tuple2(
				'origins',
				$author$project$Models$Project$Origin$encodeList(value.jq))
			]));
};
var $author$project$Models$Project$TableName$encode = function (value) {
	return $elm$json$Json$Encode$string(value);
};
var $author$project$Models$Project$UniqueName$encode = function (value) {
	return $elm$json$Json$Encode$string(value);
};
var $author$project$Models$Project$Unique$encode = function (value) {
	return $author$project$Libs$Json$Encode$notNullObject(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'name',
				$author$project$Models$Project$UniqueName$encode(value.eS)),
				_Utils_Tuple2(
				'columns',
				A2($author$project$Libs$Json$Encode$nel, $author$project$Models$Project$ColumnPath$encode, value.M)),
				_Utils_Tuple2(
				'definition',
				A2($author$project$Libs$Json$Encode$maybe, $elm$json$Json$Encode$string, value.ii)),
				_Utils_Tuple2(
				'origins',
				$author$project$Models$Project$Origin$encodeList(value.jq))
			]));
};
var $author$project$Models$Project$Table$encode = function (value) {
	return $author$project$Libs$Json$Encode$notNullObject(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'schema',
				$author$project$Models$Project$SchemaName$encode(value.aI)),
				_Utils_Tuple2(
				'table',
				$author$project$Models$Project$TableName$encode(value.eS)),
				_Utils_Tuple2(
				'view',
				A3($author$project$Libs$Json$Encode$withDefault, $elm$json$Json$Encode$bool, false, value.o3)),
				_Utils_Tuple2(
				'columns',
				A2(
					$elm$json$Json$Encode$list,
					$author$project$Models$Project$Column$encode,
					A2(
						$elm$core$List$sortBy,
						function ($) {
							return $.l7;
						},
						$elm$core$Dict$values(value.M)))),
				_Utils_Tuple2(
				'primaryKey',
				A2($author$project$Libs$Json$Encode$maybe, $author$project$Models$Project$PrimaryKey$encode, value.nL)),
				_Utils_Tuple2(
				'uniques',
				A3(
					$author$project$Libs$Json$Encode$withDefault,
					$elm$json$Json$Encode$list($author$project$Models$Project$Unique$encode),
					_List_Nil,
					value.d5)),
				_Utils_Tuple2(
				'indexes',
				A3(
					$author$project$Libs$Json$Encode$withDefault,
					$elm$json$Json$Encode$list($author$project$Models$Project$Index$encode),
					_List_Nil,
					value.dg)),
				_Utils_Tuple2(
				'checks',
				A3(
					$author$project$Libs$Json$Encode$withDefault,
					$elm$json$Json$Encode$list($author$project$Models$Project$Check$encode),
					_List_Nil,
					value.cQ)),
				_Utils_Tuple2(
				'comment',
				A2($author$project$Libs$Json$Encode$maybe, $author$project$Models$Project$Comment$encode, value.h4)),
				_Utils_Tuple2(
				'origins',
				$author$project$Models$Project$Origin$encodeList(value.jq))
			]));
};
var $author$project$Models$Project$Source$encode = function (value) {
	return $author$project$Libs$Json$Encode$notNullObject(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'id',
				$author$project$Models$Project$SourceId$encode(value.H)),
				_Utils_Tuple2(
				'name',
				$author$project$Models$Project$SourceName$encode(value.eS)),
				_Utils_Tuple2(
				'kind',
				$author$project$Models$Project$SourceKind$encode(value.gi)),
				_Utils_Tuple2(
				'content',
				A2($elm$json$Json$Encode$array, $author$project$Models$Project$SourceLine$encode, value.cX)),
				_Utils_Tuple2(
				'tables',
				A2(
					$elm$json$Json$Encode$list,
					$author$project$Models$Project$Table$encode,
					$elm$core$Dict$values(value.oM))),
				_Utils_Tuple2(
				'relations',
				A2($elm$json$Json$Encode$list, $author$project$Models$Project$Relation$encode, value.bT)),
				_Utils_Tuple2(
				'types',
				A3(
					$author$project$Libs$Json$Encode$withDefault,
					$elm$json$Json$Encode$list($author$project$Models$Project$CustomType$encode),
					_List_Nil,
					$elm$core$Dict$values(value.d3))),
				_Utils_Tuple2(
				'enabled',
				A3($author$project$Libs$Json$Encode$withDefault, $elm$json$Json$Encode$bool, true, value.ip)),
				_Utils_Tuple2(
				'fromSample',
				A2($author$project$Libs$Json$Encode$maybe, $author$project$Models$Project$SampleKey$encode, value.iB)),
				_Utils_Tuple2(
				'createdAt',
				$author$project$Libs$Time$encode(value.ic)),
				_Utils_Tuple2(
				'updatedAt',
				$author$project$Libs$Time$encode(value.kb))
			]));
};
var $author$project$Models$RelationStyle$Bezier = 0;
var $author$project$Models$ColumnOrder$OrderByProperty = 1;
var $author$project$Models$Project$FindPathSettings$FindPathSettings = F3(
	function (maxPathLength, ignoredTables, ignoredColumns) {
		return {eC: ignoredColumns, eD: ignoredTables, eN: maxPathLength};
	});
var $author$project$Models$Project$FindPathSettings$init = A3($author$project$Models$Project$FindPathSettings$FindPathSettings, 3, '', '');
var $author$project$Models$Project$ProjectSettings$init = function (defaultSchema) {
	return {
		cR: false,
		cT: true,
		cW: 1,
		cb: defaultSchema,
		c8: $author$project$Models$Project$FindPathSettings$init,
		ay: {bn: 'created_.+, updated_.+', mE: 15, nU: false, bT: false},
		dH: 0,
		n2: false,
		n3: _List_Nil,
		n4: ''
	};
};
var $author$project$Conf$schema = {
	bH: {o0: 'unknown'},
	lf: 'public',
	lC: ''
};
var $author$project$Models$Project$LayoutName$toString = function (name) {
	return name;
};
var $author$project$Models$Project$encode = function (value) {
	return $author$project$Libs$Json$Encode$notNullObject(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'organization',
				A2($author$project$Libs$Json$Encode$maybe, $author$project$Models$Organization$encode, value.nx)),
				_Utils_Tuple2(
				'id',
				$author$project$Models$Project$ProjectId$encode(value.H)),
				_Utils_Tuple2(
				'slug',
				$author$project$Models$Project$ProjectSlug$encode(value.hr)),
				_Utils_Tuple2(
				'name',
				$author$project$Models$Project$ProjectName$encode(value.eS)),
				_Utils_Tuple2(
				'description',
				A2($author$project$Libs$Json$Encode$maybe, $elm$json$Json$Encode$string, value.bf)),
				_Utils_Tuple2(
				'sources',
				A2($elm$json$Json$Encode$list, $author$project$Models$Project$Source$encode, value.hs)),
				_Utils_Tuple2(
				'notes',
				A3(
					$author$project$Libs$Json$Encode$withDefault,
					A2($elm$json$Json$Encode$dict, $elm$core$Basics$identity, $elm$json$Json$Encode$string),
					$elm$core$Dict$empty,
					value.bP)),
				_Utils_Tuple2(
				'usedLayout',
				$author$project$Models$Project$LayoutName$encode(value.fw)),
				_Utils_Tuple2(
				'layouts',
				A3($elm$json$Json$Encode$dict, $author$project$Models$Project$LayoutName$toString, $author$project$Models$Project$Layout$encode, value.i$)),
				_Utils_Tuple2(
				'settings',
				A3(
					$author$project$Libs$Json$Encode$withDefaultDeep,
					$author$project$Models$Project$ProjectSettings$encode,
					$author$project$Models$Project$ProjectSettings$init($author$project$Conf$schema.lC),
					value.dM)),
				_Utils_Tuple2(
				'storage',
				$author$project$Models$Project$ProjectStorage$encode(value.cD)),
				_Utils_Tuple2(
				'visibility',
				$author$project$Models$Project$ProjectVisibility$encode(value.hQ)),
				_Utils_Tuple2(
				'createdAt',
				$author$project$Libs$Time$encode(value.ic)),
				_Utils_Tuple2(
				'updatedAt',
				$author$project$Libs$Time$encode(value.kb)),
				_Utils_Tuple2(
				'version',
				$elm$json$Json$Encode$int($author$project$Models$Project$ProjectEncodingVersion$current))
			]));
};
var $author$project$Models$Project$ProjectEncodingVersion$encode = $elm$json$Json$Encode$int;
var $author$project$Models$ProjectInfo$encode = function (value) {
	return $author$project$Libs$Json$Encode$notNullObject(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'organization',
				A2($author$project$Libs$Json$Encode$maybe, $author$project$Models$Organization$encode, value.nx)),
				_Utils_Tuple2(
				'id',
				$author$project$Models$Project$ProjectId$encode(value.H)),
				_Utils_Tuple2(
				'slug',
				$author$project$Models$Project$ProjectSlug$encode(value.hr)),
				_Utils_Tuple2(
				'name',
				$author$project$Models$Project$ProjectName$encode(value.eS)),
				_Utils_Tuple2(
				'description',
				A2($author$project$Libs$Json$Encode$maybe, $elm$json$Json$Encode$string, value.bf)),
				_Utils_Tuple2(
				'storage',
				$author$project$Models$Project$ProjectStorage$encode(value.cD)),
				_Utils_Tuple2(
				'visibility',
				$author$project$Models$Project$ProjectVisibility$encode(value.hQ)),
				_Utils_Tuple2(
				'encodingVersion',
				$author$project$Models$Project$ProjectEncodingVersion$encode(value.kd)),
				_Utils_Tuple2(
				'nbSources',
				$elm$json$Json$Encode$int(value.gM)),
				_Utils_Tuple2(
				'nbTables',
				$elm$json$Json$Encode$int(value.gN)),
				_Utils_Tuple2(
				'nbColumns',
				$elm$json$Json$Encode$int(value.gG)),
				_Utils_Tuple2(
				'nbRelations',
				$elm$json$Json$Encode$int(value.gL)),
				_Utils_Tuple2(
				'nbTypes',
				$elm$json$Json$Encode$int(value.gO)),
				_Utils_Tuple2(
				'nbComments',
				$elm$json$Json$Encode$int(value.gH)),
				_Utils_Tuple2(
				'nbLayouts',
				$elm$json$Json$Encode$int(value.gI)),
				_Utils_Tuple2(
				'nbNotes',
				$elm$json$Json$Encode$int(value.gK)),
				_Utils_Tuple2(
				'nbMemos',
				$elm$json$Json$Encode$int(value.gJ)),
				_Utils_Tuple2(
				'createdAt',
				$author$project$Libs$Time$encode(value.ic)),
				_Utils_Tuple2(
				'updatedAt',
				$author$project$Libs$Time$encode(value.kb))
			]));
};
var $author$project$Models$ProjectTokenId$encode = function (value) {
	return $author$project$Libs$Models$Uuid$encode(value);
};
var $author$project$Models$TrackEvent$encode = function (key) {
	return $author$project$Libs$Json$Encode$notNullObject(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'name',
				$elm$json$Json$Encode$string(key.eS)),
				_Utils_Tuple2(
				'details',
				A2(
					$author$project$Libs$Json$Encode$maybe,
					$elm$json$Json$Encode$object,
					A2(
						$elm$core$Maybe$map,
						$author$project$Libs$Nel$toList,
						$author$project$Libs$Nel$fromList(key.lp)))),
				_Utils_Tuple2(
				'organization',
				A2($author$project$Libs$Json$Encode$maybe, $author$project$Models$OrganizationId$encode, key.nx)),
				_Utils_Tuple2(
				'project',
				A2($author$project$Libs$Json$Encode$maybe, $author$project$Models$Project$ProjectId$encode, key.nN))
			]));
};
var $elm$core$Dict$isEmpty = function (dict) {
	if (dict.$ === -2) {
		return true;
	} else {
		return false;
	}
};
var $author$project$Models$Route$buildQueryString = function (query) {
	return $elm$core$Dict$isEmpty(query) ? '' : ('?' + A2(
		$elm$core$String$join,
		'&',
		A2(
			$elm$core$List$map,
			function (_v0) {
				var key = _v0.a;
				var value = _v0.b;
				return key + ('=' + $elm$url$Url$percentEncode(value));
			},
			A2(
				$elm$core$List$sortBy,
				$elm$core$Tuple$first,
				$elm$core$Dict$toList(query)))));
};
var $elm$core$Basics$negate = function (n) {
	return -n;
};
var $elm$core$String$dropRight = F2(
	function (n, string) {
		return (n < 1) ? string : A3($elm$core$String$slice, 0, -n, string);
	});
var $elm$core$String$endsWith = _String_endsWith;
var $author$project$Libs$String$stripRight = F2(
	function (suffix, str) {
		return A2($elm$core$String$endsWith, suffix, str) ? A2(
			$elm$core$String$dropRight,
			$elm$core$String$length(suffix),
			str) : str;
	});
var $author$project$Models$Route$toUrl = function (route) {
	return _Utils_ap(
		A2(
			$author$project$Libs$String$stripRight,
			'/',
			_Utils_ap(
				$author$project$Conf$constants.kH,
				$author$project$Gen$Route$toHref(route.hk))),
		$author$project$Models$Route$buildQueryString(route.e1));
};
var $author$project$Ports$elmEncoder = function (elm) {
	switch (elm.$) {
		case 0:
			var id = elm.a;
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'kind',
						$elm$json$Json$Encode$string('Click')),
						_Utils_Tuple2(
						'id',
						$elm$json$Json$Encode$string(id))
					]));
		case 1:
			var id = elm.a;
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'kind',
						$elm$json$Json$Encode$string('MouseDown')),
						_Utils_Tuple2(
						'id',
						$elm$json$Json$Encode$string(id))
					]));
		case 2:
			var id = elm.a;
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'kind',
						$elm$json$Json$Encode$string('Focus')),
						_Utils_Tuple2(
						'id',
						$elm$json$Json$Encode$string(id))
					]));
		case 3:
			var id = elm.a;
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'kind',
						$elm$json$Json$Encode$string('Blur')),
						_Utils_Tuple2(
						'id',
						$elm$json$Json$Encode$string(id))
					]));
		case 4:
			var id = elm.a;
			var position = elm.b;
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'kind',
						$elm$json$Json$Encode$string('ScrollTo')),
						_Utils_Tuple2(
						'id',
						$elm$json$Json$Encode$string(id)),
						_Utils_Tuple2(
						'position',
						$elm$json$Json$Encode$string(position))
					]));
		case 5:
			var id = elm.a;
			return $author$project$Libs$Json$Encode$notNullObject(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'kind',
						$elm$json$Json$Encode$string('Fullscreen')),
						_Utils_Tuple2(
						'id',
						A2($author$project$Libs$Json$Encode$maybe, $elm$json$Json$Encode$string, id))
					]));
		case 6:
			var meta = elm.a;
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'kind',
						$elm$json$Json$Encode$string('SetMeta')),
						_Utils_Tuple2(
						'title',
						A2($author$project$Libs$Json$Encode$maybe, $elm$json$Json$Encode$string, meta.a4)),
						_Utils_Tuple2(
						'description',
						A2($author$project$Libs$Json$Encode$maybe, $elm$json$Json$Encode$string, meta.bf)),
						_Utils_Tuple2(
						'canonical',
						A2(
							$author$project$Libs$Json$Encode$maybe,
							$elm$json$Json$Encode$string,
							A2($elm$core$Maybe$map, $author$project$Models$Route$toUrl, meta.kQ))),
						_Utils_Tuple2(
						'html',
						A2($author$project$Libs$Json$Encode$maybe, $elm$json$Json$Encode$string, meta.l4)),
						_Utils_Tuple2(
						'body',
						A2($author$project$Libs$Json$Encode$maybe, $elm$json$Json$Encode$string, meta.kM))
					]));
		case 7:
			var id = elm.a;
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'kind',
						$elm$json$Json$Encode$string('AutofocusWithin')),
						_Utils_Tuple2(
						'id',
						$elm$json$Json$Encode$string(id))
					]));
		case 8:
			var level = elm.a;
			var message = elm.b;
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'kind',
						$elm$json$Json$Encode$string('Toast')),
						_Utils_Tuple2(
						'level',
						$elm$json$Json$Encode$string(level)),
						_Utils_Tuple2(
						'message',
						$elm$json$Json$Encode$string(message))
					]));
		case 9:
			var organization = elm.a;
			var project = elm.b;
			var token = elm.c;
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'kind',
						$elm$json$Json$Encode$string('GetProject')),
						_Utils_Tuple2(
						'organization',
						$author$project$Models$OrganizationId$encode(organization)),
						_Utils_Tuple2(
						'project',
						$author$project$Models$Project$ProjectId$encode(project)),
						_Utils_Tuple2(
						'token',
						A2($author$project$Libs$Json$Encode$maybe, $author$project$Models$ProjectTokenId$encode, token))
					]));
		case 10:
			var project = elm.a;
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'kind',
						$elm$json$Json$Encode$string('CreateProjectTmp')),
						_Utils_Tuple2(
						'project',
						$author$project$Models$Project$encode(project))
					]));
		case 11:
			var project = elm.a;
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'kind',
						$elm$json$Json$Encode$string('UpdateProjectTmp')),
						_Utils_Tuple2(
						'project',
						$author$project$Models$Project$encode(project))
					]));
		case 12:
			var organization = elm.a;
			var storage = elm.b;
			var project = elm.c;
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'kind',
						$elm$json$Json$Encode$string('CreateProject')),
						_Utils_Tuple2(
						'organization',
						$author$project$Models$OrganizationId$encode(organization)),
						_Utils_Tuple2(
						'storage',
						$author$project$Models$Project$ProjectStorage$encode(storage)),
						_Utils_Tuple2(
						'project',
						$author$project$Models$Project$encode(project))
					]));
		case 13:
			var project = elm.a;
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'kind',
						$elm$json$Json$Encode$string('UpdateProject')),
						_Utils_Tuple2(
						'project',
						$author$project$Models$Project$encode(project))
					]));
		case 14:
			var project = elm.a;
			var storage = elm.b;
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'kind',
						$elm$json$Json$Encode$string('MoveProjectTo')),
						_Utils_Tuple2(
						'project',
						$author$project$Models$Project$encode(project)),
						_Utils_Tuple2(
						'storage',
						$author$project$Models$Project$ProjectStorage$encode(storage))
					]));
		case 15:
			var project = elm.a;
			var redirect = elm.b;
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'kind',
						$elm$json$Json$Encode$string('DeleteProject')),
						_Utils_Tuple2(
						'project',
						$author$project$Models$ProjectInfo$encode(project)),
						_Utils_Tuple2(
						'redirect',
						A2($author$project$Libs$Json$Encode$maybe, $elm$json$Json$Encode$string, redirect))
					]));
		case 16:
			var dirty = elm.a;
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'kind',
						$elm$json$Json$Encode$string('ProjectDirty')),
						_Utils_Tuple2(
						'dirty',
						$elm$json$Json$Encode$bool(dirty))
					]));
		case 17:
			var filename = elm.a;
			var content = elm.b;
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'kind',
						$elm$json$Json$Encode$string('DownloadFile')),
						_Utils_Tuple2(
						'filename',
						$elm$json$Json$Encode$string(filename)),
						_Utils_Tuple2(
						'content',
						$elm$json$Json$Encode$string(content))
					]));
		case 18:
			var sourceKind = elm.a;
			var file = elm.b;
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'kind',
						$elm$json$Json$Encode$string('GetLocalFile')),
						_Utils_Tuple2(
						'sourceKind',
						$elm$json$Json$Encode$string(sourceKind)),
						_Utils_Tuple2(
						'file',
						$mpizenberg$elm_file$FileValue$encode(file))
					]));
		case 19:
			var source = elm.a;
			var database = elm.b;
			var table = elm.c;
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'kind',
						$elm$json$Json$Encode$string('GetTableStats')),
						_Utils_Tuple2(
						'source',
						$author$project$Models$Project$SourceId$encode(source)),
						_Utils_Tuple2(
						'database',
						$author$project$Libs$Models$DatabaseUrl$encode(database)),
						_Utils_Tuple2(
						'table',
						$author$project$Models$Project$TableId$encode(table))
					]));
		case 20:
			var source = elm.a;
			var database = elm.b;
			var column = elm.c;
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'kind',
						$elm$json$Json$Encode$string('GetColumnStats')),
						_Utils_Tuple2(
						'source',
						$author$project$Models$Project$SourceId$encode(source)),
						_Utils_Tuple2(
						'database',
						$author$project$Libs$Models$DatabaseUrl$encode(database)),
						_Utils_Tuple2(
						'column',
						$author$project$Models$Project$ColumnRef$encode(column))
					]));
		case 21:
			var ids = elm.a;
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'kind',
						$elm$json$Json$Encode$string('ObserveSizes')),
						_Utils_Tuple2(
						'ids',
						A2($elm$json$Json$Encode$list, $elm$json$Json$Encode$string, ids))
					]));
		case 22:
			var keys = elm.a;
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'kind',
						$elm$json$Json$Encode$string('ListenKeys')),
						_Utils_Tuple2(
						'keys',
						A3(
							$elm$json$Json$Encode$dict,
							$elm$core$Basics$identity,
							$elm$json$Json$Encode$list($author$project$Libs$Models$Hotkey$encode),
							keys))
					]));
		case 23:
			var id = elm.a;
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'kind',
						$elm$json$Json$Encode$string('Confetti')),
						_Utils_Tuple2(
						'id',
						$elm$json$Json$Encode$string(id))
					]));
		case 24:
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'kind',
						$elm$json$Json$Encode$string('ConfettiPride'))
					]));
		case 25:
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'kind',
						$elm$json$Json$Encode$string('Fireworks'))
					]));
		default:
			var event = elm.a;
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'kind',
						$elm$json$Json$Encode$string('Track')),
						_Utils_Tuple2(
						'event',
						$author$project$Models$TrackEvent$encode(event))
					]));
	}
};
var $author$project$Ports$elmToJs = _Platform_outgoingPort('elmToJs', $elm$core$Basics$identity);
var $author$project$Ports$messageToJs = function (message) {
	return $author$project$Ports$elmToJs(
		$author$project$Ports$elmEncoder(message));
};
var $author$project$Ports$setMeta = function (payload) {
	return $author$project$Ports$messageToJs(
		$author$project$Ports$SetMeta(payload));
};
var $author$project$PagesComponents$Create$Views$title = 'Creating project...';
var $author$project$PagesComponents$Create$Init$init = function (urlOrganization) {
	return _Utils_Tuple2(
		{ca: $elm$core$Maybe$Nothing, cm: $elm$core$Maybe$Nothing, cA: $elm$core$Maybe$Nothing, bX: $author$project$Services$Toasts$init},
		$elm$core$Platform$Cmd$batch(
			_List_fromArray(
				[
					$author$project$Ports$setMeta(
					{
						kM: $elm$core$Maybe$Just('h-full'),
						kQ: $elm$core$Maybe$Just(
							{
								e1: $elm$core$Dict$empty,
								hk: A3(
									$author$project$Libs$Maybe$mapOrElse,
									function (id) {
										return $author$project$Gen$Route$Organization___Create(
											{nx: id});
									},
									$author$project$Gen$Route$Create,
									urlOrganization)
							}),
						bf: $elm$core$Maybe$Just($author$project$Conf$constants.lg),
						l4: $elm$core$Maybe$Just('h-full'),
						a4: $elm$core$Maybe$Just($author$project$PagesComponents$Create$Views$title)
					}),
					$author$project$Libs$Task$send($author$project$PagesComponents$Create$Models$InitProject)
				])));
};
var $author$project$PagesComponents$Create$Models$JsMessage = function (a) {
	return {$: 7, a: a};
};
var $author$project$Ports$Error = F2(
	function (a, b) {
		return {$: 20, a: a, b: b};
	});
var $elm$json$Json$Decode$decodeValue = _Json_run;
var $author$project$Ports$GotColumnHide = function (a) {
	return {$: 17, a: a};
};
var $author$project$Ports$GotColumnMove = F2(
	function (a, b) {
		return {$: 18, a: a, b: b};
	});
var $author$project$Ports$GotColumnShow = function (a) {
	return {$: 16, a: a};
};
var $author$project$Ports$GotColumnStats = F2(
	function (a, b) {
		return {$: 5, a: a, b: b};
	});
var $author$project$Ports$GotFitToScreen = {$: 19};
var $author$project$Ports$GotHotkey = function (a) {
	return {$: 6, a: a};
};
var $author$project$Ports$GotKeyHold = F2(
	function (a, b) {
		return {$: 7, a: a, b: b};
	});
var $author$project$Ports$GotLocalFile = F3(
	function (a, b, c) {
		return {$: 3, a: a, b: b, c: c};
	});
var $author$project$Ports$GotProject = function (a) {
	return {$: 1, a: a};
};
var $author$project$Ports$GotSizes = function (a) {
	return {$: 0, a: a};
};
var $author$project$Ports$GotTableColor = F2(
	function (a, b) {
		return {$: 15, a: a, b: b};
	});
var $author$project$Ports$GotTableHide = function (a) {
	return {$: 10, a: a};
};
var $author$project$Ports$GotTableMove = F2(
	function (a, b) {
		return {$: 13, a: a, b: b};
	});
var $author$project$Ports$GotTablePosition = F2(
	function (a, b) {
		return {$: 12, a: a, b: b};
	});
var $author$project$Ports$GotTableSelect = function (a) {
	return {$: 14, a: a};
};
var $author$project$Ports$GotTableShow = F2(
	function (a, b) {
		return {$: 9, a: a, b: b};
	});
var $author$project$Ports$GotTableStats = F2(
	function (a, b) {
		return {$: 4, a: a, b: b};
	});
var $author$project$Ports$GotTableToggleColumns = function (a) {
	return {$: 11, a: a};
};
var $author$project$Ports$GotToast = F2(
	function (a, b) {
		return {$: 8, a: a, b: b};
	});
var $author$project$Ports$ProjectDeleted = function (a) {
	return {$: 2, a: a};
};
var $author$project$Libs$Models$SizeChange = F4(
	function (id, position, size, seeds) {
		return {H: id, e$: position, ol: seeds, ox: size};
	});
var $elm$json$Json$Decode$bool = _Json_decodeBool;
var $author$project$Libs$Models$Delta$Delta = F2(
	function (dx, dy) {
		return {aY: dx, aZ: dy};
	});
var $elm$json$Json$Decode$float = _Json_decodeFloat;
var $author$project$Libs$Models$Delta$decode = A3(
	$elm$json$Json$Decode$map2,
	$author$project$Libs$Models$Delta$Delta,
	A2($elm$json$Json$Decode$field, 'dx', $elm$json$Json$Decode$float),
	A2($elm$json$Json$Decode$field, 'dy', $elm$json$Json$Decode$float));
var $author$project$Models$Project$ColumnStats$ColumnStats = F6(
	function (id, kind, rows, nulls, cardinality, commonValues) {
		return {kS: cardinality, h5: commonValues, H: id, gi: kind, ji: nulls, bV: rows};
	});
var $elm$json$Json$Decode$string = _Json_decodeString;
var $author$project$Models$Project$ColumnType$decode = $elm$json$Json$Decode$string;
var $author$project$Models$Project$ColumnName$decode = $elm$json$Json$Decode$string;
var $author$project$Models$Project$SchemaName$decode = $elm$json$Json$Decode$string;
var $author$project$Models$Project$TableName$decode = $elm$json$Json$Decode$string;
var $elm$json$Json$Decode$map3 = _Json_map3;
var $author$project$Models$Project$ColumnStats$decodeColumnId = A4(
	$elm$json$Json$Decode$map3,
	F3(
		function (s, t, c) {
			return _Utils_Tuple2(
				_Utils_Tuple2(s, t),
				c);
		}),
	A2($elm$json$Json$Decode$field, 'schema', $author$project$Models$Project$SchemaName$decode),
	A2($elm$json$Json$Decode$field, 'table', $author$project$Models$Project$TableName$decode),
	A2($elm$json$Json$Decode$field, 'column', $author$project$Models$Project$ColumnName$decode));
var $author$project$Models$Project$ColumnStats$ColumnValueCount = F2(
	function (value, count) {
		return {ib: count, a5: value};
	});
var $elm$core$String$fromFloat = _String_fromNumber;
var $elm$json$Json$Decode$int = _Json_decodeInt;
var $elm$json$Json$Decode$null = _Json_decodeNull;
var $elm$json$Json$Decode$oneOf = _Json_oneOf;
var $author$project$Libs$Bool$toString = function (bool) {
	if (bool) {
		return 'True';
	} else {
		return 'False';
	}
};
var $elm$json$Json$Decode$value = _Json_decodeValue;
var $author$project$Models$Project$ColumnValue$decodeAny = $elm$json$Json$Decode$oneOf(
	_List_fromArray(
		[
			$elm$json$Json$Decode$string,
			$elm$json$Json$Decode$null('null'),
			A2($elm$json$Json$Decode$map, $author$project$Libs$Bool$toString, $elm$json$Json$Decode$bool),
			A2($elm$json$Json$Decode$map, $elm$core$String$fromInt, $elm$json$Json$Decode$int),
			A2($elm$json$Json$Decode$map, $elm$core$String$fromFloat, $elm$json$Json$Decode$float),
			A2(
			$elm$json$Json$Decode$map,
			$elm$json$Json$Encode$encode(0),
			$elm$json$Json$Decode$value)
		]));
var $author$project$Models$Project$ColumnStats$decodeColumnValueCount = A3(
	$elm$json$Json$Decode$map2,
	$author$project$Models$Project$ColumnStats$ColumnValueCount,
	A2($elm$json$Json$Decode$field, 'value', $author$project$Models$Project$ColumnValue$decodeAny),
	A2($elm$json$Json$Decode$field, 'count', $elm$json$Json$Decode$int));
var $elm$json$Json$Decode$list = _Json_decodeList;
var $elm$json$Json$Decode$map6 = _Json_map6;
var $author$project$Models$Project$ColumnStats$decode = A7(
	$elm$json$Json$Decode$map6,
	$author$project$Models$Project$ColumnStats$ColumnStats,
	$author$project$Models$Project$ColumnStats$decodeColumnId,
	A2($elm$json$Json$Decode$field, 'type', $author$project$Models$Project$ColumnType$decode),
	A2($elm$json$Json$Decode$field, 'rows', $elm$json$Json$Decode$int),
	A2($elm$json$Json$Decode$field, 'nulls', $elm$json$Json$Decode$int),
	A2($elm$json$Json$Decode$field, 'cardinality', $elm$json$Json$Decode$int),
	A2(
		$elm$json$Json$Decode$field,
		'common_values',
		$elm$json$Json$Decode$list($author$project$Models$Project$ColumnStats$decodeColumnValueCount)));
var $elm$json$Json$Decode$fail = _Json_fail;
var $author$project$Libs$Models$Uuid$isValid = function (value) {
	return $elm$core$String$length(value) === 36;
};
var $author$project$Libs$Models$Uuid$decode = A2(
	$elm$json$Json$Decode$andThen,
	function (v) {
		return $author$project$Libs$Models$Uuid$isValid(v) ? $elm$json$Json$Decode$succeed(v) : $elm$json$Json$Decode$fail('\'' + (v + '\' is not a valid Uuid'));
	},
	$elm$json$Json$Decode$string);
var $author$project$Models$Project$ProjectId$decode = $author$project$Libs$Models$Uuid$decode;
var $author$project$Models$Project$SourceId$SourceId = $elm$core$Basics$identity;
var $author$project$Models$Project$SourceId$new = function (id) {
	return id;
};
var $author$project$Models$Project$SourceId$decode = A2($elm$json$Json$Decode$map, $author$project$Models$Project$SourceId$new, $author$project$Libs$Models$Uuid$decode);
var $author$project$Models$Project$TableId$fromString = function (id) {
	var _v0 = A2($elm$core$String$split, '.', id);
	if ((_v0.b && _v0.b.b) && (!_v0.b.b.b)) {
		var s = _v0.a;
		var _v1 = _v0.b;
		var t = _v1.a;
		return $elm$core$Maybe$Just(
			_Utils_Tuple2(s, t));
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $author$project$Models$Project$TableId$decode = A2(
	$elm$json$Json$Decode$andThen,
	function (str) {
		return A3(
			$author$project$Libs$Maybe$mapOrElse,
			$elm$json$Json$Decode$succeed,
			$elm$json$Json$Decode$fail('Invalid TableId \'' + (str + '\'')),
			$author$project$Models$Project$TableId$fromString(str));
	},
	$elm$json$Json$Decode$string);
var $author$project$Models$Project$TableStats$TableStats = F3(
	function (id, rows, sampleValues) {
		return {H: id, bV: rows, jK: sampleValues};
	});
var $author$project$Models$Project$TableStats$decodeTableId = A3(
	$elm$json$Json$Decode$map2,
	F2(
		function (s, t) {
			return _Utils_Tuple2(s, t);
		}),
	A2($elm$json$Json$Decode$field, 'schema', $author$project$Models$Project$SchemaName$decode),
	A2($elm$json$Json$Decode$field, 'table', $author$project$Models$Project$TableName$decode));
var $elm$json$Json$Decode$keyValuePairs = _Json_decodeKeyValuePairs;
var $elm$json$Json$Decode$dict = function (decoder) {
	return A2(
		$elm$json$Json$Decode$map,
		$elm$core$Dict$fromList,
		$elm$json$Json$Decode$keyValuePairs(decoder));
};
var $author$project$Models$Project$TableStats$decode = A4(
	$elm$json$Json$Decode$map3,
	$author$project$Models$Project$TableStats$TableStats,
	$author$project$Models$Project$TableStats$decodeTableId,
	A2($elm$json$Json$Decode$field, 'rows', $elm$json$Json$Decode$int),
	A2(
		$elm$json$Json$Decode$field,
		'sample_values',
		$elm$json$Json$Decode$dict($author$project$Models$Project$ColumnValue$decodeAny)));
var $author$project$Libs$Tailwind$Color = $elm$core$Basics$identity;
var $author$project$Libs$Tailwind$black = 'black';
var $author$project$Libs$Tailwind$default = 'default';
var $author$project$Libs$Tailwind$gray = 'gray';
var $author$project$Libs$Tailwind$amber = 'amber';
var $author$project$Libs$Tailwind$blue = 'blue';
var $author$project$Libs$Tailwind$cyan = 'cyan';
var $author$project$Libs$Tailwind$emerald = 'emerald';
var $author$project$Libs$Tailwind$fuchsia = 'fuchsia';
var $author$project$Libs$Tailwind$green = 'green';
var $author$project$Libs$Tailwind$indigo = 'indigo';
var $author$project$Libs$Tailwind$lime = 'lime';
var $author$project$Libs$Tailwind$orange = 'orange';
var $author$project$Libs$Tailwind$pink = 'pink';
var $author$project$Libs$Tailwind$purple = 'purple';
var $author$project$Libs$Tailwind$red = 'red';
var $author$project$Libs$Tailwind$rose = 'rose';
var $author$project$Libs$Tailwind$sky = 'sky';
var $author$project$Libs$Tailwind$teal = 'teal';
var $author$project$Libs$Tailwind$violet = 'violet';
var $author$project$Libs$Tailwind$yellow = 'yellow';
var $author$project$Libs$Tailwind$list = _List_fromArray(
	[$author$project$Libs$Tailwind$indigo, $author$project$Libs$Tailwind$violet, $author$project$Libs$Tailwind$purple, $author$project$Libs$Tailwind$fuchsia, $author$project$Libs$Tailwind$pink, $author$project$Libs$Tailwind$rose, $author$project$Libs$Tailwind$red, $author$project$Libs$Tailwind$orange, $author$project$Libs$Tailwind$amber, $author$project$Libs$Tailwind$yellow, $author$project$Libs$Tailwind$lime, $author$project$Libs$Tailwind$green, $author$project$Libs$Tailwind$emerald, $author$project$Libs$Tailwind$teal, $author$project$Libs$Tailwind$cyan, $author$project$Libs$Tailwind$sky, $author$project$Libs$Tailwind$blue]);
var $author$project$Libs$Tailwind$primary = 'primary';
var $author$project$Libs$Tailwind$white = 'white';
var $author$project$Libs$Tailwind$all = _Utils_ap(
	$author$project$Libs$Tailwind$list,
	_List_fromArray(
		[$author$project$Libs$Tailwind$primary, $author$project$Libs$Tailwind$default, $author$project$Libs$Tailwind$black, $author$project$Libs$Tailwind$white, $author$project$Libs$Tailwind$gray]));
var $author$project$Libs$List$find = F2(
	function (predicate, list) {
		find:
		while (true) {
			if (!list.b) {
				return $elm$core$Maybe$Nothing;
			} else {
				var first = list.a;
				var rest = list.b;
				if (predicate(first)) {
					return $elm$core$Maybe$Just(first);
				} else {
					var $temp$predicate = predicate,
						$temp$list = rest;
					predicate = $temp$predicate;
					list = $temp$list;
					continue find;
				}
			}
		}
	});
var $author$project$Libs$Tailwind$decodeColor = A2(
	$elm$json$Json$Decode$andThen,
	function (name) {
		return A3(
			$author$project$Libs$Maybe$mapOrElse,
			$elm$json$Json$Decode$succeed,
			$elm$json$Json$Decode$fail('Unknown color: \'' + (name + '\'')),
			A2(
				$author$project$Libs$List$find,
				function (_v0) {
					var c = _v0;
					return _Utils_eq(c, name);
				},
				$author$project$Libs$Tailwind$all));
	},
	$elm$json$Json$Decode$string);
var $author$project$Libs$Models$Position$Position = F2(
	function (left, top) {
		return {C: left, ad: top};
	});
var $author$project$Libs$Models$Position$decode = A3(
	$elm$json$Json$Decode$map2,
	$author$project$Libs$Models$Position$Position,
	A2($elm$json$Json$Decode$field, 'left', $elm$json$Json$Decode$float),
	A2($elm$json$Json$Decode$field, 'top', $elm$json$Json$Decode$float));
var $author$project$Models$Position$Grid = $elm$core$Basics$identity;
var $author$project$Models$Position$gridStep = 10;
var $elm$core$Basics$modBy = _Basics_modBy;
var $elm$core$Basics$round = _Basics_round;
var $author$project$Models$Position$alignCoord = function (value) {
	return function (v) {
		return v - A2($elm$core$Basics$modBy, $author$project$Models$Position$gridStep, v);
	}(
		$elm$core$Basics$round(value));
};
var $author$project$Models$Position$alignPos = function (pos) {
	return A2(
		$author$project$Libs$Models$Position$Position,
		$author$project$Models$Position$alignCoord(pos.C),
		$author$project$Models$Position$alignCoord(pos.ad));
};
var $author$project$Models$Position$grid = function (pos) {
	return $author$project$Models$Position$alignPos(pos);
};
var $author$project$Models$Position$decodeGrid = A2($elm$json$Json$Decode$map, $author$project$Models$Position$grid, $author$project$Libs$Models$Position$decode);
var $author$project$Models$Position$Viewport = $elm$core$Basics$identity;
var $author$project$Models$Position$viewport = function (pos) {
	return pos;
};
var $author$project$Models$Position$decodeViewport = A3(
	$elm$json$Json$Decode$map2,
	F2(
		function (x, y) {
			return $author$project$Models$Position$viewport(
				A2($author$project$Libs$Models$Position$Position, x, y));
		}),
	A2($elm$json$Json$Decode$field, 'clientX', $elm$json$Json$Decode$float),
	A2($elm$json$Json$Decode$field, 'clientY', $elm$json$Json$Decode$float));
var $author$project$Libs$Models$Size$Size = F2(
	function (width, height) {
		return {bj: height, bB: width};
	});
var $author$project$Libs$Models$Size$decode = A3(
	$elm$json$Json$Decode$map2,
	$author$project$Libs$Models$Size$Size,
	A2($elm$json$Json$Decode$field, 'width', $elm$json$Json$Decode$float),
	A2($elm$json$Json$Decode$field, 'height', $elm$json$Json$Decode$float));
var $author$project$Models$Size$Viewport = $elm$core$Basics$identity;
var $author$project$Models$Size$viewport = function (pos) {
	return pos;
};
var $author$project$Models$Size$decodeViewport = A2($elm$json$Json$Decode$map, $author$project$Models$Size$viewport, $author$project$Libs$Models$Size$decode);
var $mpizenberg$elm_file$FileValue$File = F5(
	function (value, name, mime, size, lastModified) {
		return {mo: lastModified, i8: mime, eS: name, ox: size, a5: value};
	});
var $elm$json$Json$Decode$map5 = _Json_map5;
var $elm$time$Time$Posix = $elm$core$Basics$identity;
var $elm$time$Time$millisToPosix = $elm$core$Basics$identity;
var $mpizenberg$elm_file$FileValue$decoder = A6(
	$elm$json$Json$Decode$map5,
	$mpizenberg$elm_file$FileValue$File,
	$elm$json$Json$Decode$value,
	A2($elm$json$Json$Decode$field, 'name', $elm$json$Json$Decode$string),
	A2($elm$json$Json$Decode$field, 'type', $elm$json$Json$Decode$string),
	A2($elm$json$Json$Decode$field, 'size', $elm$json$Json$Decode$int),
	A2(
		$elm$json$Json$Decode$map,
		$elm$time$Time$millisToPosix,
		A2($elm$json$Json$Decode$field, 'lastModified', $elm$json$Json$Decode$int)));
var $author$project$Models$Project$ColumnPath$fromString = function (path) {
	return A2(
		$elm$core$Maybe$withDefault,
		A2($author$project$Libs$Nel$Nel, path, _List_Nil),
		$author$project$Libs$Nel$fromList(
			A2($elm$core$String$split, $author$project$Models$Project$ColumnPath$separator, path)));
};
var $author$project$Models$Project$ColumnRef$fromString = function (id) {
	var _v0 = A2($elm$core$String$split, '.', id);
	_v0$2:
	while (true) {
		if (_v0.b && _v0.b.b) {
			if (_v0.b.b.b) {
				if (!_v0.b.b.b.b) {
					var schema = _v0.a;
					var _v1 = _v0.b;
					var table = _v1.a;
					var _v2 = _v1.b;
					var column = _v2.a;
					return {
						bH: $author$project$Models$Project$ColumnPath$fromString(column),
						aq: _Utils_Tuple2(schema, table)
					};
				} else {
					break _v0$2;
				}
			} else {
				var table = _v0.a;
				var _v3 = _v0.b;
				var column = _v3.a;
				return {
					bH: $author$project$Models$Project$ColumnPath$fromString(column),
					aq: _Utils_Tuple2($author$project$Conf$schema.lC, table)
				};
			}
		} else {
			break _v0$2;
		}
	}
	return {
		bH: $author$project$Models$Project$ColumnPath$fromString(''),
		aq: _Utils_Tuple2($author$project$Conf$schema.lC, id)
	};
};
var $elm$json$Json$Decode$map4 = _Json_map4;
var $author$project$Libs$Json$Decode$matchOn = F2(
	function (field, decode) {
		return A2(
			$elm$json$Json$Decode$andThen,
			decode,
			A2($elm$json$Json$Decode$field, field, $elm$json$Json$Decode$string));
	});
var $elm$json$Json$Decode$maybe = function (decoder) {
	return $elm$json$Json$Decode$oneOf(
		_List_fromArray(
			[
				A2($elm$json$Json$Decode$map, $elm$core$Maybe$Just, decoder),
				$elm$json$Json$Decode$succeed($elm$core$Maybe$Nothing)
			]));
};
var $author$project$Libs$Json$Decode$maybeField = F2(
	function (field, decoder) {
		return $elm$json$Json$Decode$maybe(
			A2($elm$json$Json$Decode$field, field, decoder));
	});
var $author$project$Models$Project$ProjectStorage$Local = 0;
var $author$project$Models$Project$ProjectVisibility$None = 0;
var $author$project$Libs$Json$Decode$customDict = F2(
	function (buildKey, decoder) {
		return A2(
			$elm$json$Json$Decode$map,
			function (d) {
				return $elm$core$Dict$fromList(
					A2(
						$elm$core$List$map,
						function (_v0) {
							var k = _v0.a;
							var a = _v0.b;
							return _Utils_Tuple2(
								buildKey(k),
								a);
						},
						$elm$core$Dict$toList(d)));
			},
			$elm$json$Json$Decode$dict(decoder));
	});
var $elm$core$String$concat = function (strings) {
	return A2($elm$core$String$join, '', strings);
};
var $rtfeldman$elm_iso8601_date_strings$DeadEnds$problemToString = function (p) {
	switch (p.$) {
		case 0:
			var s = p.a;
			return 'expecting \'' + (s + '\'');
		case 1:
			return 'expecting int';
		case 2:
			return 'expecting hex';
		case 3:
			return 'expecting octal';
		case 4:
			return 'expecting binary';
		case 5:
			return 'expecting float';
		case 6:
			return 'expecting number';
		case 7:
			return 'expecting variable';
		case 8:
			var s = p.a;
			return 'expecting symbol \'' + (s + '\'');
		case 9:
			var s = p.a;
			return 'expecting keyword \'' + (s + '\'');
		case 10:
			return 'expecting end';
		case 11:
			return 'unexpected char';
		case 12:
			var s = p.a;
			return 'problem ' + s;
		default:
			return 'bad repeat';
	}
};
var $rtfeldman$elm_iso8601_date_strings$DeadEnds$deadEndToString = function (deadend) {
	return $rtfeldman$elm_iso8601_date_strings$DeadEnds$problemToString(deadend.hc) + (' at row ' + ($elm$core$String$fromInt(deadend.hl) + (', col ' + $elm$core$String$fromInt(deadend.fO))));
};
var $elm$core$List$intersperse = F2(
	function (sep, xs) {
		if (!xs.b) {
			return _List_Nil;
		} else {
			var hd = xs.a;
			var tl = xs.b;
			var step = F2(
				function (x, rest) {
					return A2(
						$elm$core$List$cons,
						sep,
						A2($elm$core$List$cons, x, rest));
				});
			var spersed = A3($elm$core$List$foldr, step, _List_Nil, tl);
			return A2($elm$core$List$cons, hd, spersed);
		}
	});
var $rtfeldman$elm_iso8601_date_strings$DeadEnds$deadEndsToString = function (deadEnds) {
	return $elm$core$String$concat(
		A2(
			$elm$core$List$intersperse,
			'; ',
			A2($elm$core$List$map, $rtfeldman$elm_iso8601_date_strings$DeadEnds$deadEndToString, deadEnds)));
};
var $elm$parser$Parser$Advanced$Bad = F2(
	function (a, b) {
		return {$: 1, a: a, b: b};
	});
var $elm$parser$Parser$Advanced$Good = F3(
	function (a, b, c) {
		return {$: 0, a: a, b: b, c: c};
	});
var $elm$parser$Parser$Advanced$Parser = $elm$core$Basics$identity;
var $elm$parser$Parser$Advanced$andThen = F2(
	function (callback, _v0) {
		var parseA = _v0;
		return function (s0) {
			var _v1 = parseA(s0);
			if (_v1.$ === 1) {
				var p = _v1.a;
				var x = _v1.b;
				return A2($elm$parser$Parser$Advanced$Bad, p, x);
			} else {
				var p1 = _v1.a;
				var a = _v1.b;
				var s1 = _v1.c;
				var _v2 = callback(a);
				var parseB = _v2;
				var _v3 = parseB(s1);
				if (_v3.$ === 1) {
					var p2 = _v3.a;
					var x = _v3.b;
					return A2($elm$parser$Parser$Advanced$Bad, p1 || p2, x);
				} else {
					var p2 = _v3.a;
					var b = _v3.b;
					var s2 = _v3.c;
					return A3($elm$parser$Parser$Advanced$Good, p1 || p2, b, s2);
				}
			}
		};
	});
var $elm$parser$Parser$andThen = $elm$parser$Parser$Advanced$andThen;
var $elm$parser$Parser$ExpectingEnd = {$: 10};
var $elm$parser$Parser$Advanced$AddRight = F2(
	function (a, b) {
		return {$: 1, a: a, b: b};
	});
var $elm$parser$Parser$Advanced$DeadEnd = F4(
	function (row, col, problem, contextStack) {
		return {fO: col, k4: contextStack, hc: problem, hl: row};
	});
var $elm$parser$Parser$Advanced$Empty = {$: 0};
var $elm$parser$Parser$Advanced$fromState = F2(
	function (s, x) {
		return A2(
			$elm$parser$Parser$Advanced$AddRight,
			$elm$parser$Parser$Advanced$Empty,
			A4($elm$parser$Parser$Advanced$DeadEnd, s.hl, s.fO, x, s.n));
	});
var $elm$parser$Parser$Advanced$end = function (x) {
	return function (s) {
		return _Utils_eq(
			$elm$core$String$length(s.ht),
			s.g) ? A3($elm$parser$Parser$Advanced$Good, false, 0, s) : A2(
			$elm$parser$Parser$Advanced$Bad,
			false,
			A2($elm$parser$Parser$Advanced$fromState, s, x));
	};
};
var $elm$parser$Parser$end = $elm$parser$Parser$Advanced$end($elm$parser$Parser$ExpectingEnd);
var $elm$parser$Parser$Advanced$isSubChar = _Parser_isSubChar;
var $elm$parser$Parser$Advanced$chompWhileHelp = F5(
	function (isGood, offset, row, col, s0) {
		chompWhileHelp:
		while (true) {
			var newOffset = A3($elm$parser$Parser$Advanced$isSubChar, isGood, offset, s0.ht);
			if (_Utils_eq(newOffset, -1)) {
				return A3(
					$elm$parser$Parser$Advanced$Good,
					_Utils_cmp(s0.g, offset) < 0,
					0,
					{fO: col, n: s0.n, w: s0.w, g: offset, hl: row, ht: s0.ht});
			} else {
				if (_Utils_eq(newOffset, -2)) {
					var $temp$isGood = isGood,
						$temp$offset = offset + 1,
						$temp$row = row + 1,
						$temp$col = 1,
						$temp$s0 = s0;
					isGood = $temp$isGood;
					offset = $temp$offset;
					row = $temp$row;
					col = $temp$col;
					s0 = $temp$s0;
					continue chompWhileHelp;
				} else {
					var $temp$isGood = isGood,
						$temp$offset = newOffset,
						$temp$row = row,
						$temp$col = col + 1,
						$temp$s0 = s0;
					isGood = $temp$isGood;
					offset = $temp$offset;
					row = $temp$row;
					col = $temp$col;
					s0 = $temp$s0;
					continue chompWhileHelp;
				}
			}
		}
	});
var $elm$parser$Parser$Advanced$chompWhile = function (isGood) {
	return function (s) {
		return A5($elm$parser$Parser$Advanced$chompWhileHelp, isGood, s.g, s.hl, s.fO, s);
	};
};
var $elm$parser$Parser$chompWhile = $elm$parser$Parser$Advanced$chompWhile;
var $elm$parser$Parser$Advanced$mapChompedString = F2(
	function (func, _v0) {
		var parse = _v0;
		return function (s0) {
			var _v1 = parse(s0);
			if (_v1.$ === 1) {
				var p = _v1.a;
				var x = _v1.b;
				return A2($elm$parser$Parser$Advanced$Bad, p, x);
			} else {
				var p = _v1.a;
				var a = _v1.b;
				var s1 = _v1.c;
				return A3(
					$elm$parser$Parser$Advanced$Good,
					p,
					A2(
						func,
						A3($elm$core$String$slice, s0.g, s1.g, s0.ht),
						a),
					s1);
			}
		};
	});
var $elm$parser$Parser$Advanced$getChompedString = function (parser) {
	return A2($elm$parser$Parser$Advanced$mapChompedString, $elm$core$Basics$always, parser);
};
var $elm$parser$Parser$getChompedString = $elm$parser$Parser$Advanced$getChompedString;
var $elm$parser$Parser$Problem = function (a) {
	return {$: 12, a: a};
};
var $elm$parser$Parser$Advanced$problem = function (x) {
	return function (s) {
		return A2(
			$elm$parser$Parser$Advanced$Bad,
			false,
			A2($elm$parser$Parser$Advanced$fromState, s, x));
	};
};
var $elm$parser$Parser$problem = function (msg) {
	return $elm$parser$Parser$Advanced$problem(
		$elm$parser$Parser$Problem(msg));
};
var $elm$parser$Parser$Advanced$succeed = function (a) {
	return function (s) {
		return A3($elm$parser$Parser$Advanced$Good, false, a, s);
	};
};
var $elm$parser$Parser$succeed = $elm$parser$Parser$Advanced$succeed;
var $elm$core$String$toFloat = _String_toFloat;
var $rtfeldman$elm_iso8601_date_strings$Iso8601$fractionsOfASecondInMs = A2(
	$elm$parser$Parser$andThen,
	function (str) {
		if ($elm$core$String$length(str) <= 9) {
			var _v0 = $elm$core$String$toFloat('0.' + str);
			if (!_v0.$) {
				var floatVal = _v0.a;
				return $elm$parser$Parser$succeed(
					$elm$core$Basics$round(floatVal * 1000));
			} else {
				return $elm$parser$Parser$problem('Invalid float: \"' + (str + '\"'));
			}
		} else {
			return $elm$parser$Parser$problem(
				'Expected at most 9 digits, but got ' + $elm$core$String$fromInt(
					$elm$core$String$length(str)));
		}
	},
	$elm$parser$Parser$getChompedString(
		$elm$parser$Parser$chompWhile($elm$core$Char$isDigit)));
var $rtfeldman$elm_iso8601_date_strings$Iso8601$fromParts = F6(
	function (monthYearDayMs, hour, minute, second, ms, utcOffsetMinutes) {
		return $elm$time$Time$millisToPosix((((monthYearDayMs + (((hour * 60) * 60) * 1000)) + (((minute - utcOffsetMinutes) * 60) * 1000)) + (second * 1000)) + ms);
	});
var $elm$parser$Parser$Advanced$map2 = F3(
	function (func, _v0, _v1) {
		var parseA = _v0;
		var parseB = _v1;
		return function (s0) {
			var _v2 = parseA(s0);
			if (_v2.$ === 1) {
				var p = _v2.a;
				var x = _v2.b;
				return A2($elm$parser$Parser$Advanced$Bad, p, x);
			} else {
				var p1 = _v2.a;
				var a = _v2.b;
				var s1 = _v2.c;
				var _v3 = parseB(s1);
				if (_v3.$ === 1) {
					var p2 = _v3.a;
					var x = _v3.b;
					return A2($elm$parser$Parser$Advanced$Bad, p1 || p2, x);
				} else {
					var p2 = _v3.a;
					var b = _v3.b;
					var s2 = _v3.c;
					return A3(
						$elm$parser$Parser$Advanced$Good,
						p1 || p2,
						A2(func, a, b),
						s2);
				}
			}
		};
	});
var $elm$parser$Parser$Advanced$ignorer = F2(
	function (keepParser, ignoreParser) {
		return A3($elm$parser$Parser$Advanced$map2, $elm$core$Basics$always, keepParser, ignoreParser);
	});
var $elm$parser$Parser$ignorer = $elm$parser$Parser$Advanced$ignorer;
var $elm$parser$Parser$Advanced$keeper = F2(
	function (parseFunc, parseArg) {
		return A3($elm$parser$Parser$Advanced$map2, $elm$core$Basics$apL, parseFunc, parseArg);
	});
var $elm$parser$Parser$keeper = $elm$parser$Parser$Advanced$keeper;
var $elm$parser$Parser$Advanced$Append = F2(
	function (a, b) {
		return {$: 2, a: a, b: b};
	});
var $elm$parser$Parser$Advanced$oneOfHelp = F3(
	function (s0, bag, parsers) {
		oneOfHelp:
		while (true) {
			if (!parsers.b) {
				return A2($elm$parser$Parser$Advanced$Bad, false, bag);
			} else {
				var parse = parsers.a;
				var remainingParsers = parsers.b;
				var _v1 = parse(s0);
				if (!_v1.$) {
					var step = _v1;
					return step;
				} else {
					var step = _v1;
					var p = step.a;
					var x = step.b;
					if (p) {
						return step;
					} else {
						var $temp$s0 = s0,
							$temp$bag = A2($elm$parser$Parser$Advanced$Append, bag, x),
							$temp$parsers = remainingParsers;
						s0 = $temp$s0;
						bag = $temp$bag;
						parsers = $temp$parsers;
						continue oneOfHelp;
					}
				}
			}
		}
	});
var $elm$parser$Parser$Advanced$oneOf = function (parsers) {
	return function (s) {
		return A3($elm$parser$Parser$Advanced$oneOfHelp, s, $elm$parser$Parser$Advanced$Empty, parsers);
	};
};
var $elm$parser$Parser$oneOf = $elm$parser$Parser$Advanced$oneOf;
var $elm$parser$Parser$Done = function (a) {
	return {$: 1, a: a};
};
var $elm$parser$Parser$Loop = function (a) {
	return {$: 0, a: a};
};
var $elm$core$String$append = _String_append;
var $elm$parser$Parser$UnexpectedChar = {$: 11};
var $elm$parser$Parser$Advanced$chompIf = F2(
	function (isGood, expecting) {
		return function (s) {
			var newOffset = A3($elm$parser$Parser$Advanced$isSubChar, isGood, s.g, s.ht);
			return _Utils_eq(newOffset, -1) ? A2(
				$elm$parser$Parser$Advanced$Bad,
				false,
				A2($elm$parser$Parser$Advanced$fromState, s, expecting)) : (_Utils_eq(newOffset, -2) ? A3(
				$elm$parser$Parser$Advanced$Good,
				true,
				0,
				{fO: 1, n: s.n, w: s.w, g: s.g + 1, hl: s.hl + 1, ht: s.ht}) : A3(
				$elm$parser$Parser$Advanced$Good,
				true,
				0,
				{fO: s.fO + 1, n: s.n, w: s.w, g: newOffset, hl: s.hl, ht: s.ht}));
		};
	});
var $elm$parser$Parser$chompIf = function (isGood) {
	return A2($elm$parser$Parser$Advanced$chompIf, isGood, $elm$parser$Parser$UnexpectedChar);
};
var $elm$parser$Parser$Advanced$loopHelp = F4(
	function (p, state, callback, s0) {
		loopHelp:
		while (true) {
			var _v0 = callback(state);
			var parse = _v0;
			var _v1 = parse(s0);
			if (!_v1.$) {
				var p1 = _v1.a;
				var step = _v1.b;
				var s1 = _v1.c;
				if (!step.$) {
					var newState = step.a;
					var $temp$p = p || p1,
						$temp$state = newState,
						$temp$callback = callback,
						$temp$s0 = s1;
					p = $temp$p;
					state = $temp$state;
					callback = $temp$callback;
					s0 = $temp$s0;
					continue loopHelp;
				} else {
					var result = step.a;
					return A3($elm$parser$Parser$Advanced$Good, p || p1, result, s1);
				}
			} else {
				var p1 = _v1.a;
				var x = _v1.b;
				return A2($elm$parser$Parser$Advanced$Bad, p || p1, x);
			}
		}
	});
var $elm$parser$Parser$Advanced$loop = F2(
	function (state, callback) {
		return function (s) {
			return A4($elm$parser$Parser$Advanced$loopHelp, false, state, callback, s);
		};
	});
var $elm$parser$Parser$Advanced$map = F2(
	function (func, _v0) {
		var parse = _v0;
		return function (s0) {
			var _v1 = parse(s0);
			if (!_v1.$) {
				var p = _v1.a;
				var a = _v1.b;
				var s1 = _v1.c;
				return A3(
					$elm$parser$Parser$Advanced$Good,
					p,
					func(a),
					s1);
			} else {
				var p = _v1.a;
				var x = _v1.b;
				return A2($elm$parser$Parser$Advanced$Bad, p, x);
			}
		};
	});
var $elm$parser$Parser$map = $elm$parser$Parser$Advanced$map;
var $elm$parser$Parser$Advanced$Done = function (a) {
	return {$: 1, a: a};
};
var $elm$parser$Parser$Advanced$Loop = function (a) {
	return {$: 0, a: a};
};
var $elm$parser$Parser$toAdvancedStep = function (step) {
	if (!step.$) {
		var s = step.a;
		return $elm$parser$Parser$Advanced$Loop(s);
	} else {
		var a = step.a;
		return $elm$parser$Parser$Advanced$Done(a);
	}
};
var $elm$parser$Parser$loop = F2(
	function (state, callback) {
		return A2(
			$elm$parser$Parser$Advanced$loop,
			state,
			function (s) {
				return A2(
					$elm$parser$Parser$map,
					$elm$parser$Parser$toAdvancedStep,
					callback(s));
			});
	});
var $rtfeldman$elm_iso8601_date_strings$Iso8601$paddedInt = function (quantity) {
	var helper = function (str) {
		if (_Utils_eq(
			$elm$core$String$length(str),
			quantity)) {
			var _v0 = $elm$core$String$toInt(str);
			if (!_v0.$) {
				var intVal = _v0.a;
				return A2(
					$elm$parser$Parser$map,
					$elm$parser$Parser$Done,
					$elm$parser$Parser$succeed(intVal));
			} else {
				return $elm$parser$Parser$problem('Invalid integer: \"' + (str + '\"'));
			}
		} else {
			return A2(
				$elm$parser$Parser$map,
				function (nextChar) {
					return $elm$parser$Parser$Loop(
						A2($elm$core$String$append, str, nextChar));
				},
				$elm$parser$Parser$getChompedString(
					$elm$parser$Parser$chompIf($elm$core$Char$isDigit)));
		}
	};
	return A2($elm$parser$Parser$loop, '', helper);
};
var $elm$parser$Parser$ExpectingSymbol = function (a) {
	return {$: 8, a: a};
};
var $elm$parser$Parser$Advanced$Token = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $elm$parser$Parser$Advanced$isSubString = _Parser_isSubString;
var $elm$parser$Parser$Advanced$token = function (_v0) {
	var str = _v0.a;
	var expecting = _v0.b;
	var progress = !$elm$core$String$isEmpty(str);
	return function (s) {
		var _v1 = A5($elm$parser$Parser$Advanced$isSubString, str, s.g, s.hl, s.fO, s.ht);
		var newOffset = _v1.a;
		var newRow = _v1.b;
		var newCol = _v1.c;
		return _Utils_eq(newOffset, -1) ? A2(
			$elm$parser$Parser$Advanced$Bad,
			false,
			A2($elm$parser$Parser$Advanced$fromState, s, expecting)) : A3(
			$elm$parser$Parser$Advanced$Good,
			progress,
			0,
			{fO: newCol, n: s.n, w: s.w, g: newOffset, hl: newRow, ht: s.ht});
	};
};
var $elm$parser$Parser$Advanced$symbol = $elm$parser$Parser$Advanced$token;
var $elm$parser$Parser$symbol = function (str) {
	return $elm$parser$Parser$Advanced$symbol(
		A2(
			$elm$parser$Parser$Advanced$Token,
			str,
			$elm$parser$Parser$ExpectingSymbol(str)));
};
var $rtfeldman$elm_iso8601_date_strings$Iso8601$epochYear = 1970;
var $rtfeldman$elm_iso8601_date_strings$Iso8601$invalidDay = function (day) {
	return $elm$parser$Parser$problem(
		'Invalid day: ' + $elm$core$String$fromInt(day));
};
var $rtfeldman$elm_iso8601_date_strings$Iso8601$isLeapYear = function (year) {
	return (!A2($elm$core$Basics$modBy, 4, year)) && ((!(!A2($elm$core$Basics$modBy, 100, year))) || (!A2($elm$core$Basics$modBy, 400, year)));
};
var $rtfeldman$elm_iso8601_date_strings$Iso8601$leapYearsBefore = function (y1) {
	var y = y1 - 1;
	return (((y / 4) | 0) - ((y / 100) | 0)) + ((y / 400) | 0);
};
var $rtfeldman$elm_iso8601_date_strings$Iso8601$msPerDay = 86400000;
var $rtfeldman$elm_iso8601_date_strings$Iso8601$msPerYear = 31536000000;
var $rtfeldman$elm_iso8601_date_strings$Iso8601$yearMonthDay = function (_v0) {
	var year = _v0.a;
	var month = _v0.b;
	var dayInMonth = _v0.c;
	if (dayInMonth < 0) {
		return $rtfeldman$elm_iso8601_date_strings$Iso8601$invalidDay(dayInMonth);
	} else {
		var succeedWith = function (extraMs) {
			var yearMs = $rtfeldman$elm_iso8601_date_strings$Iso8601$msPerYear * (year - $rtfeldman$elm_iso8601_date_strings$Iso8601$epochYear);
			var days = ((month < 3) || (!$rtfeldman$elm_iso8601_date_strings$Iso8601$isLeapYear(year))) ? (dayInMonth - 1) : dayInMonth;
			var dayMs = $rtfeldman$elm_iso8601_date_strings$Iso8601$msPerDay * (days + ($rtfeldman$elm_iso8601_date_strings$Iso8601$leapYearsBefore(year) - $rtfeldman$elm_iso8601_date_strings$Iso8601$leapYearsBefore($rtfeldman$elm_iso8601_date_strings$Iso8601$epochYear)));
			return $elm$parser$Parser$succeed((extraMs + yearMs) + dayMs);
		};
		switch (month) {
			case 1:
				return (dayInMonth > 31) ? $rtfeldman$elm_iso8601_date_strings$Iso8601$invalidDay(dayInMonth) : succeedWith(0);
			case 2:
				return ((dayInMonth > 29) || ((dayInMonth === 29) && (!$rtfeldman$elm_iso8601_date_strings$Iso8601$isLeapYear(year)))) ? $rtfeldman$elm_iso8601_date_strings$Iso8601$invalidDay(dayInMonth) : succeedWith(2678400000);
			case 3:
				return (dayInMonth > 31) ? $rtfeldman$elm_iso8601_date_strings$Iso8601$invalidDay(dayInMonth) : succeedWith(5097600000);
			case 4:
				return (dayInMonth > 30) ? $rtfeldman$elm_iso8601_date_strings$Iso8601$invalidDay(dayInMonth) : succeedWith(7776000000);
			case 5:
				return (dayInMonth > 31) ? $rtfeldman$elm_iso8601_date_strings$Iso8601$invalidDay(dayInMonth) : succeedWith(10368000000);
			case 6:
				return (dayInMonth > 30) ? $rtfeldman$elm_iso8601_date_strings$Iso8601$invalidDay(dayInMonth) : succeedWith(13046400000);
			case 7:
				return (dayInMonth > 31) ? $rtfeldman$elm_iso8601_date_strings$Iso8601$invalidDay(dayInMonth) : succeedWith(15638400000);
			case 8:
				return (dayInMonth > 31) ? $rtfeldman$elm_iso8601_date_strings$Iso8601$invalidDay(dayInMonth) : succeedWith(18316800000);
			case 9:
				return (dayInMonth > 30) ? $rtfeldman$elm_iso8601_date_strings$Iso8601$invalidDay(dayInMonth) : succeedWith(20995200000);
			case 10:
				return (dayInMonth > 31) ? $rtfeldman$elm_iso8601_date_strings$Iso8601$invalidDay(dayInMonth) : succeedWith(23587200000);
			case 11:
				return (dayInMonth > 30) ? $rtfeldman$elm_iso8601_date_strings$Iso8601$invalidDay(dayInMonth) : succeedWith(26265600000);
			case 12:
				return (dayInMonth > 31) ? $rtfeldman$elm_iso8601_date_strings$Iso8601$invalidDay(dayInMonth) : succeedWith(28857600000);
			default:
				return $elm$parser$Parser$problem(
					'Invalid month: \"' + ($elm$core$String$fromInt(month) + '\"'));
		}
	}
};
var $rtfeldman$elm_iso8601_date_strings$Iso8601$monthYearDayInMs = A2(
	$elm$parser$Parser$andThen,
	$rtfeldman$elm_iso8601_date_strings$Iso8601$yearMonthDay,
	A2(
		$elm$parser$Parser$keeper,
		A2(
			$elm$parser$Parser$keeper,
			A2(
				$elm$parser$Parser$keeper,
				$elm$parser$Parser$succeed(
					F3(
						function (year, month, day) {
							return _Utils_Tuple3(year, month, day);
						})),
				$rtfeldman$elm_iso8601_date_strings$Iso8601$paddedInt(4)),
			$elm$parser$Parser$oneOf(
				_List_fromArray(
					[
						A2(
						$elm$parser$Parser$keeper,
						A2(
							$elm$parser$Parser$ignorer,
							$elm$parser$Parser$succeed($elm$core$Basics$identity),
							$elm$parser$Parser$symbol('-')),
						$rtfeldman$elm_iso8601_date_strings$Iso8601$paddedInt(2)),
						$rtfeldman$elm_iso8601_date_strings$Iso8601$paddedInt(2)
					]))),
		$elm$parser$Parser$oneOf(
			_List_fromArray(
				[
					A2(
					$elm$parser$Parser$keeper,
					A2(
						$elm$parser$Parser$ignorer,
						$elm$parser$Parser$succeed($elm$core$Basics$identity),
						$elm$parser$Parser$symbol('-')),
					$rtfeldman$elm_iso8601_date_strings$Iso8601$paddedInt(2)),
					$rtfeldman$elm_iso8601_date_strings$Iso8601$paddedInt(2)
				]))));
var $rtfeldman$elm_iso8601_date_strings$Iso8601$utcOffsetInMinutes = function () {
	var utcOffsetMinutesFromParts = F3(
		function (multiplier, hours, minutes) {
			return (multiplier * (hours * 60)) + minutes;
		});
	return A2(
		$elm$parser$Parser$keeper,
		$elm$parser$Parser$succeed($elm$core$Basics$identity),
		$elm$parser$Parser$oneOf(
			_List_fromArray(
				[
					A2(
					$elm$parser$Parser$map,
					function (_v0) {
						return 0;
					},
					$elm$parser$Parser$symbol('Z')),
					A2(
					$elm$parser$Parser$keeper,
					A2(
						$elm$parser$Parser$keeper,
						A2(
							$elm$parser$Parser$keeper,
							$elm$parser$Parser$succeed(utcOffsetMinutesFromParts),
							$elm$parser$Parser$oneOf(
								_List_fromArray(
									[
										A2(
										$elm$parser$Parser$map,
										function (_v1) {
											return 1;
										},
										$elm$parser$Parser$symbol('+')),
										A2(
										$elm$parser$Parser$map,
										function (_v2) {
											return -1;
										},
										$elm$parser$Parser$symbol('-'))
									]))),
						$rtfeldman$elm_iso8601_date_strings$Iso8601$paddedInt(2)),
					$elm$parser$Parser$oneOf(
						_List_fromArray(
							[
								A2(
								$elm$parser$Parser$keeper,
								A2(
									$elm$parser$Parser$ignorer,
									$elm$parser$Parser$succeed($elm$core$Basics$identity),
									$elm$parser$Parser$symbol(':')),
								$rtfeldman$elm_iso8601_date_strings$Iso8601$paddedInt(2)),
								$rtfeldman$elm_iso8601_date_strings$Iso8601$paddedInt(2),
								$elm$parser$Parser$succeed(0)
							]))),
					A2(
					$elm$parser$Parser$ignorer,
					$elm$parser$Parser$succeed(0),
					$elm$parser$Parser$end)
				])));
}();
var $rtfeldman$elm_iso8601_date_strings$Iso8601$iso8601 = A2(
	$elm$parser$Parser$andThen,
	function (datePart) {
		return $elm$parser$Parser$oneOf(
			_List_fromArray(
				[
					A2(
					$elm$parser$Parser$keeper,
					A2(
						$elm$parser$Parser$keeper,
						A2(
							$elm$parser$Parser$keeper,
							A2(
								$elm$parser$Parser$keeper,
								A2(
									$elm$parser$Parser$keeper,
									A2(
										$elm$parser$Parser$ignorer,
										$elm$parser$Parser$succeed(
											$rtfeldman$elm_iso8601_date_strings$Iso8601$fromParts(datePart)),
										$elm$parser$Parser$symbol('T')),
									$rtfeldman$elm_iso8601_date_strings$Iso8601$paddedInt(2)),
								$elm$parser$Parser$oneOf(
									_List_fromArray(
										[
											A2(
											$elm$parser$Parser$keeper,
											A2(
												$elm$parser$Parser$ignorer,
												$elm$parser$Parser$succeed($elm$core$Basics$identity),
												$elm$parser$Parser$symbol(':')),
											$rtfeldman$elm_iso8601_date_strings$Iso8601$paddedInt(2)),
											$rtfeldman$elm_iso8601_date_strings$Iso8601$paddedInt(2)
										]))),
							$elm$parser$Parser$oneOf(
								_List_fromArray(
									[
										A2(
										$elm$parser$Parser$keeper,
										A2(
											$elm$parser$Parser$ignorer,
											$elm$parser$Parser$succeed($elm$core$Basics$identity),
											$elm$parser$Parser$symbol(':')),
										$rtfeldman$elm_iso8601_date_strings$Iso8601$paddedInt(2)),
										$rtfeldman$elm_iso8601_date_strings$Iso8601$paddedInt(2),
										$elm$parser$Parser$succeed(0)
									]))),
						$elm$parser$Parser$oneOf(
							_List_fromArray(
								[
									A2(
									$elm$parser$Parser$keeper,
									A2(
										$elm$parser$Parser$ignorer,
										$elm$parser$Parser$succeed($elm$core$Basics$identity),
										$elm$parser$Parser$symbol('.')),
									$rtfeldman$elm_iso8601_date_strings$Iso8601$fractionsOfASecondInMs),
									$elm$parser$Parser$succeed(0)
								]))),
					A2($elm$parser$Parser$ignorer, $rtfeldman$elm_iso8601_date_strings$Iso8601$utcOffsetInMinutes, $elm$parser$Parser$end)),
					A2(
					$elm$parser$Parser$ignorer,
					$elm$parser$Parser$succeed(
						A6($rtfeldman$elm_iso8601_date_strings$Iso8601$fromParts, datePart, 0, 0, 0, 0, 0)),
					$elm$parser$Parser$end)
				]));
	},
	$rtfeldman$elm_iso8601_date_strings$Iso8601$monthYearDayInMs);
var $elm$parser$Parser$DeadEnd = F3(
	function (row, col, problem) {
		return {fO: col, hc: problem, hl: row};
	});
var $elm$parser$Parser$problemToDeadEnd = function (p) {
	return A3($elm$parser$Parser$DeadEnd, p.hl, p.fO, p.hc);
};
var $elm$parser$Parser$Advanced$bagToList = F2(
	function (bag, list) {
		bagToList:
		while (true) {
			switch (bag.$) {
				case 0:
					return list;
				case 1:
					var bag1 = bag.a;
					var x = bag.b;
					var $temp$bag = bag1,
						$temp$list = A2($elm$core$List$cons, x, list);
					bag = $temp$bag;
					list = $temp$list;
					continue bagToList;
				default:
					var bag1 = bag.a;
					var bag2 = bag.b;
					var $temp$bag = bag1,
						$temp$list = A2($elm$parser$Parser$Advanced$bagToList, bag2, list);
					bag = $temp$bag;
					list = $temp$list;
					continue bagToList;
			}
		}
	});
var $elm$parser$Parser$Advanced$run = F2(
	function (_v0, src) {
		var parse = _v0;
		var _v1 = parse(
			{fO: 1, n: _List_Nil, w: 1, g: 0, hl: 1, ht: src});
		if (!_v1.$) {
			var value = _v1.b;
			return $elm$core$Result$Ok(value);
		} else {
			var bag = _v1.b;
			return $elm$core$Result$Err(
				A2($elm$parser$Parser$Advanced$bagToList, bag, _List_Nil));
		}
	});
var $elm$parser$Parser$run = F2(
	function (parser, source) {
		var _v0 = A2($elm$parser$Parser$Advanced$run, parser, source);
		if (!_v0.$) {
			var a = _v0.a;
			return $elm$core$Result$Ok(a);
		} else {
			var problems = _v0.a;
			return $elm$core$Result$Err(
				A2($elm$core$List$map, $elm$parser$Parser$problemToDeadEnd, problems));
		}
	});
var $rtfeldman$elm_iso8601_date_strings$Iso8601$toTime = function (str) {
	return A2($elm$parser$Parser$run, $rtfeldman$elm_iso8601_date_strings$Iso8601$iso8601, str);
};
var $rtfeldman$elm_iso8601_date_strings$Iso8601$decoder = A2(
	$elm$json$Json$Decode$andThen,
	function (str) {
		var _v0 = $rtfeldman$elm_iso8601_date_strings$Iso8601$toTime(str);
		if (_v0.$ === 1) {
			var deadEnds = _v0.a;
			return $elm$json$Json$Decode$fail(
				$rtfeldman$elm_iso8601_date_strings$DeadEnds$deadEndsToString(deadEnds));
		} else {
			var time = _v0.a;
			return $elm$json$Json$Decode$succeed(time);
		}
	},
	$elm$json$Json$Decode$string);
var $author$project$Libs$Time$decode = $elm$json$Json$Decode$oneOf(
	_List_fromArray(
		[
			A2($elm$json$Json$Decode$map, $elm$time$Time$millisToPosix, $elm$json$Json$Decode$int),
			$rtfeldman$elm_iso8601_date_strings$Iso8601$decoder
		]));
var $author$project$Models$Organization$Organization = F8(
	function (id, slug, name, plan, logo, location, description, heroku) {
		return {bf: description, gb: heroku, H: id, gu: location, gv: logo, eS: name, jv: plan, hr: slug};
	});
var $author$project$Models$HerokuResource$HerokuResource = function (id) {
	return {H: id};
};
var $author$project$Models$HerokuId$decode = $author$project$Libs$Models$Uuid$decode;
var $author$project$Models$HerokuResource$decode = A2(
	$elm$json$Json$Decode$map,
	$author$project$Models$HerokuResource$HerokuResource,
	A2($elm$json$Json$Decode$field, 'id', $author$project$Models$HerokuId$decode));
var $author$project$Models$OrganizationId$decode = $author$project$Libs$Models$Uuid$decode;
var $author$project$Models$OrganizationName$decode = $elm$json$Json$Decode$string;
var $author$project$Libs$Models$Slug$decode = $elm$json$Json$Decode$string;
var $author$project$Models$OrganizationSlug$decode = $author$project$Libs$Models$Slug$decode;
var $author$project$Models$Plan$Plan = F8(
	function (id, name, layouts, memos, colors, privateLinks, dbAnalysis, dbAccess) {
		return {eg: colors, ld: dbAccess, fR: dbAnalysis, H: id, i$: layouts, gw: memos, eS: name, nM: privateLinks};
	});
var $elm$json$Json$Decode$map8 = _Json_map8;
var $author$project$Models$Plan$decode = A9(
	$elm$json$Json$Decode$map8,
	$author$project$Models$Plan$Plan,
	A2($elm$json$Json$Decode$field, 'id', $elm$json$Json$Decode$string),
	A2($elm$json$Json$Decode$field, 'name', $elm$json$Json$Decode$string),
	A2($author$project$Libs$Json$Decode$maybeField, 'layouts', $elm$json$Json$Decode$int),
	A2($author$project$Libs$Json$Decode$maybeField, 'memos', $elm$json$Json$Decode$int),
	A2($elm$json$Json$Decode$field, 'colors', $elm$json$Json$Decode$bool),
	A2($elm$json$Json$Decode$field, 'private_links', $elm$json$Json$Decode$bool),
	A2($elm$json$Json$Decode$field, 'db_analysis', $elm$json$Json$Decode$bool),
	A2($elm$json$Json$Decode$field, 'db_access', $elm$json$Json$Decode$bool));
var $author$project$Models$Organization$decode = A9(
	$elm$json$Json$Decode$map8,
	$author$project$Models$Organization$Organization,
	A2($elm$json$Json$Decode$field, 'id', $author$project$Models$OrganizationId$decode),
	A2($elm$json$Json$Decode$field, 'slug', $author$project$Models$OrganizationSlug$decode),
	A2($elm$json$Json$Decode$field, 'name', $author$project$Models$OrganizationName$decode),
	A2($elm$json$Json$Decode$field, 'plan', $author$project$Models$Plan$decode),
	A2($elm$json$Json$Decode$field, 'logo', $elm$json$Json$Decode$string),
	A2($author$project$Libs$Json$Decode$maybeField, 'location', $elm$json$Json$Decode$string),
	A2($author$project$Libs$Json$Decode$maybeField, 'description', $elm$json$Json$Decode$string),
	A2($author$project$Libs$Json$Decode$maybeField, 'heroku', $author$project$Models$HerokuResource$decode));
var $author$project$Models$Project$Layout$Layout = F5(
	function (canvas, tables, memos, createdAt, updatedAt) {
		return {fJ: canvas, ic: createdAt, gw: memos, oM: tables, kb: updatedAt};
	});
var $author$project$Models$Project$CanvasProps$CanvasProps = F2(
	function (position, zoom) {
		return {e$: position, hU: zoom};
	});
var $author$project$Libs$Models$ZoomLevel$decode = $elm$json$Json$Decode$float;
var $author$project$Models$Position$Diagram = $elm$core$Basics$identity;
var $author$project$Models$Position$diagram = function (pos) {
	return pos;
};
var $author$project$Models$Position$decodeDiagram = A2($elm$json$Json$Decode$map, $author$project$Models$Position$diagram, $author$project$Libs$Models$Position$decode);
var $author$project$Models$Project$CanvasProps$decode = A3(
	$elm$json$Json$Decode$map2,
	$author$project$Models$Project$CanvasProps$CanvasProps,
	A2($elm$json$Json$Decode$field, 'position', $author$project$Models$Position$decodeDiagram),
	A2($elm$json$Json$Decode$field, 'zoom', $author$project$Libs$Models$ZoomLevel$decode));
var $author$project$Models$Project$TableProps$TableProps = F8(
	function (id, position, size, color, columns, selected, collapsed, hiddenColumns) {
		return {cS: collapsed, A: color, M: columns, ay: hiddenColumns, H: id, e$: position, cy: selected, ox: size};
	});
var $author$project$Models$Project$ColumnPath$decode = A2($elm$json$Json$Decode$map, $author$project$Models$Project$ColumnPath$fromString, $elm$json$Json$Decode$string);
var $author$project$Models$Size$Canvas = $elm$core$Basics$identity;
var $author$project$Models$Size$canvas = function (pos) {
	return {bj: pos.bj, bB: pos.bB};
};
var $author$project$Models$Size$decodeCanvas = A2($elm$json$Json$Decode$map, $author$project$Models$Size$canvas, $author$project$Libs$Models$Size$decode);
var $author$project$Libs$Json$Decode$maybeWithDefault = F2(
	function (decoder, a) {
		return A2(
			$elm$json$Json$Decode$map,
			$elm$core$Maybe$withDefault(a),
			$elm$json$Json$Decode$maybe(
				decoder(a)));
	});
var $author$project$Libs$Json$Decode$defaultField = F3(
	function (name, decoder, _default) {
		return A2(
			$author$project$Libs$Json$Decode$maybeWithDefault,
			function (_v0) {
				return A2($elm$json$Json$Decode$field, name, decoder);
			},
			_default);
	});
var $author$project$Libs$Models$Size$zero = {bj: 0, bB: 0};
var $author$project$Models$Size$zeroCanvas = $author$project$Libs$Models$Size$zero;
var $author$project$Models$Project$TableProps$decode = A9(
	$elm$json$Json$Decode$map8,
	$author$project$Models$Project$TableProps$TableProps,
	A2($elm$json$Json$Decode$field, 'id', $author$project$Models$Project$TableId$decode),
	A2($elm$json$Json$Decode$field, 'position', $author$project$Models$Position$decodeGrid),
	A3($author$project$Libs$Json$Decode$defaultField, 'size', $author$project$Models$Size$decodeCanvas, $author$project$Models$Size$zeroCanvas),
	A2($elm$json$Json$Decode$field, 'color', $author$project$Libs$Tailwind$decodeColor),
	A3(
		$author$project$Libs$Json$Decode$defaultField,
		'columns',
		$elm$json$Json$Decode$list($author$project$Models$Project$ColumnPath$decode),
		_List_Nil),
	A3($author$project$Libs$Json$Decode$defaultField, 'selected', $elm$json$Json$Decode$bool, false),
	A3($author$project$Libs$Json$Decode$defaultField, 'collapsed', $elm$json$Json$Decode$bool, false),
	A3($author$project$Libs$Json$Decode$defaultField, 'hiddenColumns', $elm$json$Json$Decode$bool, false));
var $author$project$PagesComponents$Organization_$Project_$Models$Memo$Memo = F5(
	function (id, content, position, size, color) {
		return {A: color, cX: content, H: id, e$: position, ox: size};
	});
var $author$project$PagesComponents$Organization_$Project_$Models$Memo$decode = A6(
	$elm$json$Json$Decode$map5,
	$author$project$PagesComponents$Organization_$Project_$Models$Memo$Memo,
	A2($elm$json$Json$Decode$field, 'id', $elm$json$Json$Decode$int),
	A2($elm$json$Json$Decode$field, 'content', $elm$json$Json$Decode$string),
	A2($elm$json$Json$Decode$field, 'position', $author$project$Models$Position$decodeGrid),
	A2($elm$json$Json$Decode$field, 'size', $author$project$Models$Size$decodeCanvas),
	A2($author$project$Libs$Json$Decode$maybeField, 'color', $author$project$Libs$Tailwind$decodeColor));
var $author$project$Models$Project$Layout$decode = A6(
	$elm$json$Json$Decode$map5,
	$author$project$Models$Project$Layout$Layout,
	A2($elm$json$Json$Decode$field, 'canvas', $author$project$Models$Project$CanvasProps$decode),
	A2(
		$elm$json$Json$Decode$field,
		'tables',
		$elm$json$Json$Decode$list($author$project$Models$Project$TableProps$decode)),
	A3(
		$author$project$Libs$Json$Decode$defaultField,
		'memos',
		$elm$json$Json$Decode$list($author$project$PagesComponents$Organization_$Project_$Models$Memo$decode),
		_List_Nil),
	A2($elm$json$Json$Decode$field, 'createdAt', $author$project$Libs$Time$decode),
	A2($elm$json$Json$Decode$field, 'updatedAt', $author$project$Libs$Time$decode));
var $author$project$Models$Project$LayoutName$decode = $elm$json$Json$Decode$string;
var $author$project$Models$Project$ProjectEncodingVersion$decode = $elm$json$Json$Decode$int;
var $author$project$Models$Project$ProjectName$decode = $elm$json$Json$Decode$string;
var $author$project$Models$Project$ProjectSettings$ProjectSettings = function (findPath) {
	return function (defaultSchema) {
		return function (removedSchemas) {
			return function (removeViews) {
				return function (removedTables) {
					return function (hiddenColumns) {
						return function (columnOrder) {
							return function (relationStyle) {
								return function (columnBasicTypes) {
									return function (collapseTableColumns) {
										return {cR: collapseTableColumns, cT: columnBasicTypes, cW: columnOrder, cb: defaultSchema, c8: findPath, ay: hiddenColumns, dH: relationStyle, n2: removeViews, n3: removedSchemas, n4: removedTables};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var $author$project$Models$ColumnOrder$OderByName = 2;
var $author$project$Models$ColumnOrder$OderByType = 3;
var $author$project$Models$ColumnOrder$OrderByIndex = 0;
var $author$project$Models$ColumnOrder$fromString = function (order) {
	switch (order) {
		case 'sql':
			return 0;
		case 'property':
			return 1;
		case 'name':
			return 2;
		case 'type':
			return 3;
		default:
			return 0;
	}
};
var $author$project$Models$ColumnOrder$decode = A2($elm$json$Json$Decode$map, $author$project$Models$ColumnOrder$fromString, $elm$json$Json$Decode$string);
var $author$project$Models$Project$FindPathSettings$decodeColumns = $elm$json$Json$Decode$oneOf(
	_List_fromArray(
		[
			$elm$json$Json$Decode$string,
			A2(
			$elm$json$Json$Decode$map,
			$elm$core$String$join(', '),
			$elm$json$Json$Decode$list($author$project$Models$Project$ColumnName$decode))
		]));
var $author$project$Models$Project$TableId$decodeWith = function (defaultSchema) {
	return A2(
		$elm$json$Json$Decode$map,
		function (str) {
			return A2(
				$elm$core$Maybe$withDefault,
				_Utils_Tuple2(defaultSchema, str),
				$author$project$Models$Project$TableId$fromString(str));
		},
		$elm$json$Json$Decode$string);
};
var $author$project$Models$Project$TableId$show = F2(
	function (defaultSchema, _v0) {
		var s = _v0.a;
		var t = _v0.b;
		return (_Utils_eq(s, $author$project$Conf$schema.lC) || _Utils_eq(s, defaultSchema)) ? t : (s + ('.' + t));
	});
var $author$project$Models$Project$FindPathSettings$decodeTables = $elm$json$Json$Decode$oneOf(
	_List_fromArray(
		[
			$elm$json$Json$Decode$string,
			A2(
			$elm$json$Json$Decode$map,
			A2(
				$elm$core$Basics$composeR,
				$elm$core$List$map(
					$author$project$Models$Project$TableId$show($author$project$Conf$schema.lf)),
				$elm$core$String$join(', ')),
			$elm$json$Json$Decode$list(
				$author$project$Models$Project$TableId$decodeWith($author$project$Conf$schema.lf)))
		]));
var $author$project$Models$Project$FindPathSettings$decode = function (_default) {
	return A4(
		$elm$json$Json$Decode$map3,
		$author$project$Models$Project$FindPathSettings$FindPathSettings,
		A3($author$project$Libs$Json$Decode$defaultField, 'maxPathLength', $elm$json$Json$Decode$int, _default.eN),
		A3($author$project$Libs$Json$Decode$defaultField, 'ignoredTables', $author$project$Models$Project$FindPathSettings$decodeTables, _default.eD),
		A3($author$project$Libs$Json$Decode$defaultField, 'ignoredColumns', $author$project$Models$Project$FindPathSettings$decodeColumns, _default.eC));
};
var $author$project$Models$RelationStyle$Steps = 2;
var $author$project$Models$RelationStyle$Straight = 1;
var $author$project$Models$RelationStyle$fromString = function (order) {
	switch (order) {
		case 'Bezier':
			return 0;
		case 'Straight':
			return 1;
		case 'Steps':
			return 2;
		default:
			return 0;
	}
};
var $author$project$Models$RelationStyle$decode = A2($elm$json$Json$Decode$map, $author$project$Models$RelationStyle$fromString, $elm$json$Json$Decode$string);
var $author$project$Models$Project$ProjectSettings$HiddenColumns = F4(
	function (list, max, props, relations) {
		return {bn: list, mE: max, nU: props, bT: relations};
	});
var $author$project$Models$Project$ProjectSettings$decodeHiddenColumns = function (_default) {
	return $elm$json$Json$Decode$oneOf(
		_List_fromArray(
			[
				A5(
				$elm$json$Json$Decode$map4,
				$author$project$Models$Project$ProjectSettings$HiddenColumns,
				A3($author$project$Libs$Json$Decode$defaultField, 'list', $elm$json$Json$Decode$string, _default.bn),
				A3($author$project$Libs$Json$Decode$defaultField, 'max', $elm$json$Json$Decode$int, _default.mE),
				A3($author$project$Libs$Json$Decode$defaultField, 'props', $elm$json$Json$Decode$bool, _default.nU),
				A3($author$project$Libs$Json$Decode$defaultField, 'relations', $elm$json$Json$Decode$bool, _default.bT)),
				A2(
				$elm$json$Json$Decode$map,
				function (list) {
					return {bn: list, mE: _default.mE, nU: _default.nU, bT: _default.bT};
				},
				$elm$json$Json$Decode$string)
			]));
};
var $author$project$Libs$Json$Decode$defaultFieldDeep = F3(
	function (name, decoder, _default) {
		return A2(
			$author$project$Libs$Json$Decode$maybeWithDefault,
			function (_v0) {
				return A2(
					$elm$json$Json$Decode$field,
					name,
					decoder(_default));
			},
			_default);
	});
var $author$project$Libs$Json$Decode$map10 = function (callback) {
	return function (da) {
		return function (db) {
			return function (dc) {
				return function (dd) {
					return function (de) {
						return function (df) {
							return function (dg) {
								return function (dh) {
									return function (di) {
										return function (dj) {
											return A3(
												$elm$json$Json$Decode$map2,
												F2(
													function (_v0, _v3) {
														var _v1 = _v0.a;
														var a = _v1.a;
														var b = _v1.b;
														var c = _v1.c;
														var _v2 = _v0.b;
														var d = _v2.a;
														var e = _v2.b;
														var f = _v2.c;
														var _v4 = _v3.a;
														var g = _v4.a;
														var h = _v4.b;
														var _v5 = _v3.b;
														var i = _v5.a;
														var j = _v5.b;
														return callback(a)(b)(c)(d)(e)(f)(g)(h)(i)(j);
													}),
												A7(
													$elm$json$Json$Decode$map6,
													F6(
														function (a, b, c, d, e, f) {
															return _Utils_Tuple2(
																_Utils_Tuple3(a, b, c),
																_Utils_Tuple3(d, e, f));
														}),
													da,
													db,
													dc,
													dd,
													de,
													df),
												A5(
													$elm$json$Json$Decode$map4,
													F4(
														function (g, h, i, j) {
															return _Utils_Tuple2(
																_Utils_Tuple2(g, h),
																_Utils_Tuple2(i, j));
														}),
													dg,
													dh,
													di,
													dj));
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var $author$project$Models$Project$ProjectSettings$decode = function (_default) {
	return $author$project$Libs$Json$Decode$map10($author$project$Models$Project$ProjectSettings$ProjectSettings)(
		A3($author$project$Libs$Json$Decode$defaultFieldDeep, 'findPath', $author$project$Models$Project$FindPathSettings$decode, _default.c8))(
		A3($author$project$Libs$Json$Decode$defaultField, 'defaultSchema', $author$project$Models$Project$SchemaName$decode, _default.cb))(
		A3(
			$author$project$Libs$Json$Decode$defaultField,
			'removedSchemas',
			$elm$json$Json$Decode$list($author$project$Models$Project$SchemaName$decode),
			_default.n3))(
		A3($author$project$Libs$Json$Decode$defaultField, 'removeViews', $elm$json$Json$Decode$bool, _default.n2))(
		A3($author$project$Libs$Json$Decode$defaultField, 'removedTables', $elm$json$Json$Decode$string, _default.n4))(
		A3($author$project$Libs$Json$Decode$defaultFieldDeep, 'hiddenColumns', $author$project$Models$Project$ProjectSettings$decodeHiddenColumns, _default.ay))(
		A3($author$project$Libs$Json$Decode$defaultField, 'columnOrder', $author$project$Models$ColumnOrder$decode, _default.cW))(
		A3($author$project$Libs$Json$Decode$defaultField, 'relationStyle', $author$project$Models$RelationStyle$decode, _default.dH))(
		A3($author$project$Libs$Json$Decode$defaultField, 'columnBasicTypes', $elm$json$Json$Decode$bool, _default.cT))(
		A3($author$project$Libs$Json$Decode$defaultField, 'collapseTableColumns', $elm$json$Json$Decode$bool, _default.cR));
};
var $author$project$Models$Project$ProjectSlug$decode = $author$project$Libs$Models$Slug$decode;
var $author$project$Models$Project$ProjectStorage$Remote = 1;
var $author$project$Models$Project$ProjectStorage$fromString = function (value) {
	switch (value) {
		case 'local':
			return $elm$core$Maybe$Just(0);
		case 'remote':
			return $elm$core$Maybe$Just(1);
		case 'browser':
			return $elm$core$Maybe$Just(0);
		case 'cloud':
			return $elm$core$Maybe$Just(1);
		default:
			return $elm$core$Maybe$Nothing;
	}
};
var $author$project$Models$Project$ProjectStorage$decode = A2(
	$elm$json$Json$Decode$andThen,
	function (v) {
		return A3(
			$author$project$Libs$Maybe$mapOrElse,
			$elm$json$Json$Decode$succeed,
			$elm$json$Json$Decode$fail('invalid ProjectStorage \'' + (v + '\'')),
			$author$project$Models$Project$ProjectStorage$fromString(v));
	},
	$elm$json$Json$Decode$string);
var $author$project$Models$Project$ProjectVisibility$Read = 1;
var $author$project$Models$Project$ProjectVisibility$Write = 2;
var $author$project$Models$Project$ProjectVisibility$decode = A2(
	$elm$json$Json$Decode$andThen,
	function (value) {
		switch (value) {
			case 'none':
				return $elm$json$Json$Decode$succeed(0);
			case 'read':
				return $elm$json$Json$Decode$succeed(1);
			case 'write':
				return $elm$json$Json$Decode$succeed(2);
			default:
				return $elm$json$Json$Decode$fail('invalid ProjectVisibility \'' + (value + '\''));
		}
	},
	$elm$json$Json$Decode$string);
var $elm$json$Json$Decode$array = _Json_decodeArray;
var $author$project$Models$Project$CustomTypeName$decode = $elm$json$Json$Decode$string;
var $author$project$Models$Project$CustomTypeValue$Definition = function (a) {
	return {$: 1, a: a};
};
var $author$project$Models$Project$CustomTypeValue$Enum = function (a) {
	return {$: 0, a: a};
};
var $author$project$Models$Project$CustomTypeValue$decode = $elm$json$Json$Decode$oneOf(
	_List_fromArray(
		[
			A2(
			$elm$json$Json$Decode$map,
			$author$project$Models$Project$CustomTypeValue$Enum,
			A2(
				$elm$json$Json$Decode$field,
				'enum',
				$elm$json$Json$Decode$list($elm$json$Json$Decode$string))),
			A2(
			$elm$json$Json$Decode$map,
			$author$project$Models$Project$CustomTypeValue$Definition,
			A2($elm$json$Json$Decode$field, 'definition', $elm$json$Json$Decode$string))
		]));
var $author$project$Models$Project$Origin$Origin = F2(
	function (id, lines) {
		return {H: id, a$: lines};
	});
var $author$project$Libs$Models$FileLineIndex$decode = $elm$json$Json$Decode$int;
var $author$project$Models$Project$Origin$decode = A3(
	$elm$json$Json$Decode$map2,
	$author$project$Models$Project$Origin$Origin,
	A2($elm$json$Json$Decode$field, 'id', $author$project$Models$Project$SourceId$decode),
	A2(
		$elm$json$Json$Decode$field,
		'lines',
		$elm$json$Json$Decode$list($author$project$Libs$Models$FileLineIndex$decode)));
var $author$project$Models$Project$CustomType$CustomType = F4(
	function (id, name, value, origins) {
		return {H: id, eS: name, jq: origins, a5: value};
	});
var $author$project$Models$Project$CustomType$new = F4(
	function (schema, name, value, origins) {
		return A4(
			$author$project$Models$Project$CustomType$CustomType,
			_Utils_Tuple2(schema, name),
			name,
			value,
			origins);
	});
var $author$project$Models$Project$CustomType$decode = A5(
	$elm$json$Json$Decode$map4,
	$author$project$Models$Project$CustomType$new,
	A2($elm$json$Json$Decode$field, 'schema', $author$project$Models$Project$SchemaName$decode),
	A2($elm$json$Json$Decode$field, 'name', $author$project$Models$Project$CustomTypeName$decode),
	A2($elm$json$Json$Decode$field, 'value', $author$project$Models$Project$CustomTypeValue$decode),
	A3(
		$author$project$Libs$Json$Decode$defaultField,
		'origins',
		$elm$json$Json$Decode$list($author$project$Models$Project$Origin$decode),
		_List_Nil));
var $author$project$Models$Project$ColumnRef$ColumnRef = F2(
	function (table, column) {
		return {bH: column, aq: table};
	});
var $author$project$Models$Project$ColumnRef$decode = A3(
	$elm$json$Json$Decode$map2,
	$author$project$Models$Project$ColumnRef$ColumnRef,
	A2($elm$json$Json$Decode$field, 'table', $author$project$Models$Project$TableId$decode),
	A2($elm$json$Json$Decode$field, 'column', $author$project$Models$Project$ColumnPath$decode));
var $author$project$Models$Project$RelationName$decode = $elm$json$Json$Decode$string;
var $author$project$Models$Project$Relation$Relation = F5(
	function (id, name, src, ref, origins) {
		return {H: id, eS: name, jq: origins, dG: ref, ht: src};
	});
var $author$project$Models$Project$ColumnId$fromRef = function (ref) {
	return _Utils_Tuple2(
		ref.aq,
		$author$project$Models$Project$ColumnPath$toString(ref.bH));
};
var $author$project$Models$Project$RelationId$new = F2(
	function (src, ref) {
		return _Utils_Tuple2(
			$author$project$Models$Project$ColumnId$fromRef(src),
			$author$project$Models$Project$ColumnId$fromRef(ref));
	});
var $author$project$Models$Project$Relation$new = F4(
	function (name, src, ref, origins) {
		return A5(
			$author$project$Models$Project$Relation$Relation,
			A2($author$project$Models$Project$RelationId$new, src, ref),
			name,
			src,
			ref,
			origins);
	});
var $author$project$Models$Project$Relation$decode = A5(
	$elm$json$Json$Decode$map4,
	$author$project$Models$Project$Relation$new,
	A2($elm$json$Json$Decode$field, 'name', $author$project$Models$Project$RelationName$decode),
	A2($elm$json$Json$Decode$field, 'src', $author$project$Models$Project$ColumnRef$decode),
	A2($elm$json$Json$Decode$field, 'ref', $author$project$Models$Project$ColumnRef$decode),
	A3(
		$author$project$Libs$Json$Decode$defaultField,
		'origins',
		$elm$json$Json$Decode$list($author$project$Models$Project$Origin$decode),
		_List_Nil));
var $author$project$Models$Project$SampleKey$decode = $elm$json$Json$Decode$string;
var $author$project$Models$Project$SourceKind$AmlEditor = {$: 5};
var $author$project$Models$Project$SourceKind$decodeAmlEditor = $elm$json$Json$Decode$succeed($author$project$Models$Project$SourceKind$AmlEditor);
var $author$project$Models$Project$SourceKind$DatabaseConnection = function (a) {
	return {$: 0, a: a};
};
var $author$project$Libs$Models$DatabaseUrl$decode = $elm$json$Json$Decode$string;
var $author$project$Models$Project$SourceKind$decodeDatabaseConnection = A2(
	$elm$json$Json$Decode$map,
	$author$project$Models$Project$SourceKind$DatabaseConnection,
	A2($elm$json$Json$Decode$field, 'url', $author$project$Libs$Models$DatabaseUrl$decode));
var $author$project$Models$Project$SourceKind$JsonLocalFile = F3(
	function (a, b, c) {
		return {$: 3, a: a, b: b, c: c};
	});
var $author$project$Libs$Models$FileName$decode = $elm$json$Json$Decode$string;
var $author$project$Libs$Models$FileSize$decode = $elm$json$Json$Decode$int;
var $author$project$Libs$Models$FileUpdatedAt$decode = $author$project$Libs$Time$decode;
var $author$project$Models$Project$SourceKind$decodeJsonLocalFile = A4(
	$elm$json$Json$Decode$map3,
	$author$project$Models$Project$SourceKind$JsonLocalFile,
	A2($elm$json$Json$Decode$field, 'name', $author$project$Libs$Models$FileName$decode),
	A2($elm$json$Json$Decode$field, 'size', $author$project$Libs$Models$FileSize$decode),
	A2($elm$json$Json$Decode$field, 'modified', $author$project$Libs$Models$FileUpdatedAt$decode));
var $author$project$Models$Project$SourceKind$JsonRemoteFile = F2(
	function (a, b) {
		return {$: 4, a: a, b: b};
	});
var $author$project$Libs$Models$FileUrl$decode = $elm$json$Json$Decode$string;
var $author$project$Models$Project$SourceKind$decodeJsonRemoteFile = A3(
	$elm$json$Json$Decode$map2,
	$author$project$Models$Project$SourceKind$JsonRemoteFile,
	A2($elm$json$Json$Decode$field, 'url', $author$project$Libs$Models$FileUrl$decode),
	A2($elm$json$Json$Decode$field, 'size', $author$project$Libs$Models$FileSize$decode));
var $author$project$Models$Project$SourceKind$SqlLocalFile = F3(
	function (a, b, c) {
		return {$: 1, a: a, b: b, c: c};
	});
var $author$project$Models$Project$SourceKind$decodeSqlLocalFile = A4(
	$elm$json$Json$Decode$map3,
	$author$project$Models$Project$SourceKind$SqlLocalFile,
	A2($elm$json$Json$Decode$field, 'name', $author$project$Libs$Models$FileName$decode),
	A2($elm$json$Json$Decode$field, 'size', $author$project$Libs$Models$FileSize$decode),
	A2($elm$json$Json$Decode$field, 'modified', $author$project$Libs$Models$FileUpdatedAt$decode));
var $author$project$Models$Project$SourceKind$SqlRemoteFile = F2(
	function (a, b) {
		return {$: 2, a: a, b: b};
	});
var $author$project$Models$Project$SourceKind$decodeSqlRemoteFile = A3(
	$elm$json$Json$Decode$map2,
	$author$project$Models$Project$SourceKind$SqlRemoteFile,
	A2($elm$json$Json$Decode$field, 'url', $author$project$Libs$Models$FileUrl$decode),
	A2($elm$json$Json$Decode$field, 'size', $author$project$Libs$Models$FileSize$decode));
var $author$project$Models$Project$SourceKind$decode = A2(
	$author$project$Libs$Json$Decode$matchOn,
	'kind',
	function (kind) {
		switch (kind) {
			case 'DatabaseConnection':
				return $author$project$Models$Project$SourceKind$decodeDatabaseConnection;
			case 'SqlLocalFile':
				return $author$project$Models$Project$SourceKind$decodeSqlLocalFile;
			case 'SqlRemoteFile':
				return $author$project$Models$Project$SourceKind$decodeSqlRemoteFile;
			case 'JsonLocalFile':
				return $author$project$Models$Project$SourceKind$decodeJsonLocalFile;
			case 'JsonRemoteFile':
				return $author$project$Models$Project$SourceKind$decodeJsonRemoteFile;
			case 'AmlEditor':
				return $author$project$Models$Project$SourceKind$decodeAmlEditor;
			case 'LocalFile':
				return $author$project$Models$Project$SourceKind$decodeSqlLocalFile;
			case 'RemoteFile':
				return $author$project$Models$Project$SourceKind$decodeSqlRemoteFile;
			case 'UserDefined':
				return $author$project$Models$Project$SourceKind$decodeAmlEditor;
			default:
				var other = kind;
				return $elm$json$Json$Decode$fail('Not supported kind of SourceKind \'' + (other + '\''));
		}
	});
var $author$project$Models$Project$SourceLine$decode = $elm$json$Json$Decode$string;
var $author$project$Models$Project$SourceName$decode = $elm$json$Json$Decode$string;
var $author$project$Models$Project$Check$Check = F4(
	function (name, columns, predicate, origins) {
		return {M: columns, eS: name, jq: origins, nI: predicate};
	});
var $author$project$Models$Project$CheckName$decode = $elm$json$Json$Decode$string;
var $author$project$Models$Project$Check$decode = A5(
	$elm$json$Json$Decode$map4,
	$author$project$Models$Project$Check$Check,
	A2($elm$json$Json$Decode$field, 'name', $author$project$Models$Project$CheckName$decode),
	A3(
		$author$project$Libs$Json$Decode$defaultField,
		'columns',
		$elm$json$Json$Decode$list($author$project$Models$Project$ColumnPath$decode),
		_List_Nil),
	A2($author$project$Libs$Json$Decode$maybeField, 'predicate', $elm$json$Json$Decode$string),
	A3(
		$author$project$Libs$Json$Decode$defaultField,
		'origins',
		$elm$json$Json$Decode$list($author$project$Models$Project$Origin$decode),
		_List_Nil));
var $author$project$Models$Project$Column$Column = F8(
	function (index, name, kind, nullable, _default, comment, columns, origins) {
		return {M: columns, h4: comment, lf: _default, l7: index, gi: kind, eS: name, nf: nullable, jq: origins};
	});
var $author$project$Models$Project$Column$NestedColumns = $elm$core$Basics$identity;
var $author$project$Models$Project$ColumnValue$decode = $elm$json$Json$Decode$string;
var $author$project$Models$Project$Comment$Comment = F2(
	function (text, origins) {
		return {jq: origins, fp: text};
	});
var $author$project$Models$Project$Comment$decode = A3(
	$elm$json$Json$Decode$map2,
	$author$project$Models$Project$Comment$Comment,
	A2($elm$json$Json$Decode$field, 'text', $elm$json$Json$Decode$string),
	A3(
		$author$project$Libs$Json$Decode$defaultField,
		'origins',
		$elm$json$Json$Decode$list($author$project$Models$Project$Origin$decode),
		_List_Nil));
var $author$project$Libs$Ned$Ned = F2(
	function (head, tail) {
		return {ev: head, oO: tail};
	});
var $author$project$Libs$Ned$build = F2(
	function (head, tail) {
		return A2(
			$author$project$Libs$Ned$Ned,
			head,
			A2(
				$elm$core$Dict$remove,
				head.a,
				$elm$core$Dict$fromList(tail)));
	});
var $author$project$Libs$Ned$fromNel = function (nel) {
	return A2($author$project$Libs$Ned$build, nel.ev, nel.oO);
};
var $author$project$Libs$Nel$map = F2(
	function (f, xs) {
		return {
			ev: f(xs.ev),
			oO: A2($elm$core$List$map, f, xs.oO)
		};
	});
var $author$project$Libs$Ned$fromNelMap = F2(
	function (getKey, nel) {
		return $author$project$Libs$Ned$fromNel(
			A2(
				$author$project$Libs$Nel$map,
				function (item) {
					return _Utils_Tuple2(
						getKey(item),
						item);
				},
				nel));
	});
var $author$project$Libs$Nel$indexedMap = F2(
	function (f, xs) {
		return {
			ev: A2(f, 0, xs.ev),
			oO: A2(
				$elm$core$List$indexedMap,
				F2(
					function (i, a) {
						return A2(f, i + 1, a);
					}),
				xs.oO)
		};
	});
var $elm$json$Json$Decode$lazy = function (thunk) {
	return A2(
		$elm$json$Json$Decode$andThen,
		thunk,
		$elm$json$Json$Decode$succeed(0));
};
var $elm$json$Json$Decode$map7 = _Json_map7;
var $elm$json$Json$Decode$oneOrMoreHelp = F2(
	function (toValue, xs) {
		if (!xs.b) {
			return $elm$json$Json$Decode$fail('a ARRAY with at least ONE element');
		} else {
			var y = xs.a;
			var ys = xs.b;
			return $elm$json$Json$Decode$succeed(
				A2(toValue, y, ys));
		}
	});
var $elm$json$Json$Decode$oneOrMore = F2(
	function (toValue, decoder) {
		return A2(
			$elm$json$Json$Decode$andThen,
			$elm$json$Json$Decode$oneOrMoreHelp(toValue),
			$elm$json$Json$Decode$list(decoder));
	});
var $author$project$Libs$Json$Decode$nel = function (decoder) {
	return A2($elm$json$Json$Decode$oneOrMore, $author$project$Libs$Nel$Nel, decoder);
};
function $author$project$Models$Project$Column$cyclic$decode() {
	return A8(
		$elm$json$Json$Decode$map7,
		F7(
			function (n, t, nu, d, c, cols, o) {
				return function (i) {
					return A8($author$project$Models$Project$Column$Column, i, n, t, nu, d, c, cols, o);
				};
			}),
		A2($elm$json$Json$Decode$field, 'name', $author$project$Models$Project$ColumnName$decode),
		A2($elm$json$Json$Decode$field, 'type', $author$project$Models$Project$ColumnType$decode),
		A3($author$project$Libs$Json$Decode$defaultField, 'nullable', $elm$json$Json$Decode$bool, false),
		A2($author$project$Libs$Json$Decode$maybeField, 'default', $author$project$Models$Project$ColumnValue$decode),
		A2($author$project$Libs$Json$Decode$maybeField, 'comment', $author$project$Models$Project$Comment$decode),
		A2(
			$author$project$Libs$Json$Decode$maybeField,
			'columns',
			$author$project$Models$Project$Column$cyclic$decodeNestedColumns()),
		A3(
			$author$project$Libs$Json$Decode$defaultField,
			'origins',
			$elm$json$Json$Decode$list($author$project$Models$Project$Origin$decode),
			_List_Nil));
}
function $author$project$Models$Project$Column$cyclic$decodeNestedColumns() {
	return A2(
		$elm$json$Json$Decode$map,
		$elm$core$Basics$identity,
		A2(
			$elm$json$Json$Decode$map,
			A2(
				$elm$core$Basics$composeR,
				$author$project$Libs$Nel$indexedMap(
					F2(
						function (i, c) {
							return c(i);
						})),
				$author$project$Libs$Ned$fromNelMap(
					function ($) {
						return $.eS;
					})),
			$author$project$Libs$Json$Decode$nel(
				$elm$json$Json$Decode$lazy(
					function (_v0) {
						return $author$project$Models$Project$Column$cyclic$decode();
					}))));
}
var $author$project$Models$Project$Column$decode = $author$project$Models$Project$Column$cyclic$decode();
$author$project$Models$Project$Column$cyclic$decode = function () {
	return $author$project$Models$Project$Column$decode;
};
var $author$project$Models$Project$Column$decodeNestedColumns = $author$project$Models$Project$Column$cyclic$decodeNestedColumns();
$author$project$Models$Project$Column$cyclic$decodeNestedColumns = function () {
	return $author$project$Models$Project$Column$decodeNestedColumns;
};
var $author$project$Models$Project$Index$Index = F4(
	function (name, columns, definition, origins) {
		return {M: columns, ii: definition, eS: name, jq: origins};
	});
var $author$project$Models$Project$IndexName$decode = $elm$json$Json$Decode$string;
var $author$project$Models$Project$Index$decode = A5(
	$elm$json$Json$Decode$map4,
	$author$project$Models$Project$Index$Index,
	A2($elm$json$Json$Decode$field, 'name', $author$project$Models$Project$IndexName$decode),
	A2(
		$elm$json$Json$Decode$field,
		'columns',
		$author$project$Libs$Json$Decode$nel($author$project$Models$Project$ColumnPath$decode)),
	A2($author$project$Libs$Json$Decode$maybeField, 'definition', $elm$json$Json$Decode$string),
	A3(
		$author$project$Libs$Json$Decode$defaultField,
		'origins',
		$elm$json$Json$Decode$list($author$project$Models$Project$Origin$decode),
		_List_Nil));
var $author$project$Models$Project$PrimaryKey$PrimaryKey = F3(
	function (name, columns, origins) {
		return {M: columns, eS: name, jq: origins};
	});
var $author$project$Models$Project$PrimaryKeyName$decode = $elm$json$Json$Decode$string;
var $author$project$Models$Project$PrimaryKey$decode = A4(
	$elm$json$Json$Decode$map3,
	$author$project$Models$Project$PrimaryKey$PrimaryKey,
	A2($author$project$Libs$Json$Decode$maybeField, 'name', $author$project$Models$Project$PrimaryKeyName$decode),
	A2(
		$elm$json$Json$Decode$field,
		'columns',
		$author$project$Libs$Json$Decode$nel($author$project$Models$Project$ColumnPath$decode)),
	A3(
		$author$project$Libs$Json$Decode$defaultField,
		'origins',
		$elm$json$Json$Decode$list($author$project$Models$Project$Origin$decode),
		_List_Nil));
var $author$project$Models$Project$Unique$Unique = F4(
	function (name, columns, definition, origins) {
		return {M: columns, ii: definition, eS: name, jq: origins};
	});
var $author$project$Models$Project$UniqueName$decode = $elm$json$Json$Decode$string;
var $author$project$Models$Project$Unique$decode = A5(
	$elm$json$Json$Decode$map4,
	$author$project$Models$Project$Unique$Unique,
	A2($elm$json$Json$Decode$field, 'name', $author$project$Models$Project$UniqueName$decode),
	A2(
		$elm$json$Json$Decode$field,
		'columns',
		$author$project$Libs$Json$Decode$nel($author$project$Models$Project$ColumnPath$decode)),
	A2($author$project$Libs$Json$Decode$maybeField, 'definition', $elm$json$Json$Decode$string),
	A3(
		$author$project$Libs$Json$Decode$defaultField,
		'origins',
		$elm$json$Json$Decode$list($author$project$Models$Project$Origin$decode),
		_List_Nil));
var $author$project$Libs$Dict$fromListMap = F2(
	function (getKey, list) {
		return $elm$core$Dict$fromList(
			A2(
				$elm$core$List$map,
				function (item) {
					return _Utils_Tuple2(
						getKey(item),
						item);
				},
				list));
	});
var $author$project$Models$Project$Table$Table = function (id) {
	return function (schema) {
		return function (name) {
			return function (view) {
				return function (columns) {
					return function (primaryKey) {
						return function (uniques) {
							return function (indexes) {
								return function (checks) {
									return function (comment) {
										return function (origins) {
											return {cQ: checks, M: columns, h4: comment, H: id, dg: indexes, eS: name, jq: origins, nL: primaryKey, aI: schema, d5: uniques, o3: view};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var $author$project$Models$Project$Table$new = function (schema) {
	return function (name) {
		return function (view) {
			return function (columns) {
				return function (primaryKey) {
					return function (uniques) {
						return function (indexes) {
							return function (checks) {
								return function (comment) {
									return function (origins) {
										return $author$project$Models$Project$Table$Table(
											_Utils_Tuple2(schema, name))(schema)(name)(view)(columns)(primaryKey)(uniques)(indexes)(checks)(comment)(origins);
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var $author$project$Models$Project$Table$decode = $author$project$Libs$Json$Decode$map10($author$project$Models$Project$Table$new)(
	A2($elm$json$Json$Decode$field, 'schema', $author$project$Models$Project$SchemaName$decode))(
	A2($elm$json$Json$Decode$field, 'table', $author$project$Models$Project$TableName$decode))(
	A3($author$project$Libs$Json$Decode$defaultField, 'view', $elm$json$Json$Decode$bool, false))(
	A2(
		$elm$json$Json$Decode$field,
		'columns',
		A2(
			$elm$json$Json$Decode$map,
			A2(
				$elm$core$Basics$composeR,
				$elm$core$List$indexedMap(
					F2(
						function (i, c) {
							return c(i);
						})),
				$author$project$Libs$Dict$fromListMap(
					function ($) {
						return $.eS;
					})),
			$elm$json$Json$Decode$list($author$project$Models$Project$Column$decode))))(
	A2($author$project$Libs$Json$Decode$maybeField, 'primaryKey', $author$project$Models$Project$PrimaryKey$decode))(
	A3(
		$author$project$Libs$Json$Decode$defaultField,
		'uniques',
		$elm$json$Json$Decode$list($author$project$Models$Project$Unique$decode),
		_List_Nil))(
	A3(
		$author$project$Libs$Json$Decode$defaultField,
		'indexes',
		$elm$json$Json$Decode$list($author$project$Models$Project$Index$decode),
		_List_Nil))(
	A3(
		$author$project$Libs$Json$Decode$defaultField,
		'checks',
		$elm$json$Json$Decode$list($author$project$Models$Project$Check$decode),
		_List_Nil))(
	A2($author$project$Libs$Json$Decode$maybeField, 'comment', $author$project$Models$Project$Comment$decode))(
	A3(
		$author$project$Libs$Json$Decode$defaultField,
		'origins',
		$elm$json$Json$Decode$list($author$project$Models$Project$Origin$decode),
		_List_Nil));
var $elm$core$Array$fromListHelp = F3(
	function (list, nodeList, nodeListSize) {
		fromListHelp:
		while (true) {
			var _v0 = A2($elm$core$Elm$JsArray$initializeFromList, $elm$core$Array$branchFactor, list);
			var jsArray = _v0.a;
			var remainingItems = _v0.b;
			if (_Utils_cmp(
				$elm$core$Elm$JsArray$length(jsArray),
				$elm$core$Array$branchFactor) < 0) {
				return A2(
					$elm$core$Array$builderToArray,
					true,
					{P: nodeList, K: nodeListSize, oO: jsArray});
			} else {
				var $temp$list = remainingItems,
					$temp$nodeList = A2(
					$elm$core$List$cons,
					$elm$core$Array$Leaf(jsArray),
					nodeList),
					$temp$nodeListSize = nodeListSize + 1;
				list = $temp$list;
				nodeList = $temp$nodeList;
				nodeListSize = $temp$nodeListSize;
				continue fromListHelp;
			}
		}
	});
var $elm$core$Array$fromList = function (list) {
	if (!list.b) {
		return $elm$core$Array$empty;
	} else {
		return A3($elm$core$Array$fromListHelp, list, _List_Nil, 0);
	}
};
var $elm$core$Array$isEmpty = function (_v0) {
	var len = _v0.a;
	return !len;
};
var $elm$core$List$isEmpty = function (xs) {
	if (!xs.b) {
		return true;
	} else {
		return false;
	}
};
var $author$project$Libs$List$nonEmpty = function (list) {
	return !$elm$core$List$isEmpty(list);
};
var $author$project$DataSources$AmlMiner$AmlGenerator$quotesWhenNeeded = function (name) {
	return A2($elm$core$String$contains, ' ', name) ? ('\"' + (name + '\"')) : name;
};
var $author$project$DataSources$AmlMiner$AmlGenerator$tableId = function (_v0) {
	var schema = _v0.a;
	var table = _v0.b;
	return (schema === '') ? $author$project$DataSources$AmlMiner$AmlGenerator$quotesWhenNeeded(table) : ($author$project$DataSources$AmlMiner$AmlGenerator$quotesWhenNeeded(schema) + ('.' + $author$project$DataSources$AmlMiner$AmlGenerator$quotesWhenNeeded(table)));
};
var $author$project$DataSources$AmlMiner$AmlGenerator$columnRef = function (_v0) {
	var table = _v0.aq;
	var column = _v0.bH;
	return $author$project$DataSources$AmlMiner$AmlGenerator$tableId(table) + ('.' + $author$project$DataSources$AmlMiner$AmlGenerator$quotesWhenNeeded(
		$author$project$Models$Project$ColumnPath$toString(column)));
};
var $author$project$DataSources$AmlMiner$AmlGenerator$relation = F2(
	function (src, ref) {
		return 'fk ' + ($author$project$DataSources$AmlMiner$AmlGenerator$columnRef(src) + (' -> ' + $author$project$DataSources$AmlMiner$AmlGenerator$columnRef(ref)));
	});
var $author$project$Models$Project$Source$decodeSource = function (id) {
	return function (name) {
		return function (kind) {
			return function (content) {
				return function (tables) {
					return function (relations) {
						return function (types) {
							return function (enabled) {
								return function (fromSample) {
									return function (createdAt) {
										return function (updatedAt) {
											var _v0 = (_Utils_eq(kind, $author$project$Models$Project$SourceKind$AmlEditor) && ($elm$core$Array$isEmpty(content) && ($elm$core$Dict$isEmpty(tables) && $author$project$Libs$List$nonEmpty(relations)))) ? _Utils_Tuple2(
												$author$project$Conf$constants.o5,
												$elm$core$Array$fromList(
													A2(
														$elm$core$List$map,
														function (r) {
															return A2($author$project$DataSources$AmlMiner$AmlGenerator$relation, r.ht, r.dG);
														},
														relations))) : _Utils_Tuple2(name, content);
											var n = _v0.a;
											var c = _v0.b;
											return {cX: c, ic: createdAt, ip: enabled, iB: fromSample, H: id, gi: kind, eS: n, bT: relations, oM: tables, d3: types, kb: updatedAt};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var $author$project$Libs$Json$Decode$map11 = function (callback) {
	return function (da) {
		return function (db) {
			return function (dc) {
				return function (dd) {
					return function (de) {
						return function (df) {
							return function (dg) {
								return function (dh) {
									return function (di) {
										return function (dj) {
											return function (dk) {
												return A3(
													$elm$json$Json$Decode$map2,
													F2(
														function (_v0, _v3) {
															var _v1 = _v0.a;
															var a = _v1.a;
															var b = _v1.b;
															var c = _v1.c;
															var _v2 = _v0.b;
															var d = _v2.a;
															var e = _v2.b;
															var f = _v2.c;
															var _v4 = _v3.a;
															var g = _v4.a;
															var h = _v4.b;
															var i = _v4.c;
															var _v5 = _v3.b;
															var j = _v5.a;
															var k = _v5.b;
															return callback(a)(b)(c)(d)(e)(f)(g)(h)(i)(j)(k);
														}),
													A7(
														$elm$json$Json$Decode$map6,
														F6(
															function (a, b, c, d, e, f) {
																return _Utils_Tuple2(
																	_Utils_Tuple3(a, b, c),
																	_Utils_Tuple3(d, e, f));
															}),
														da,
														db,
														dc,
														dd,
														de,
														df),
													A6(
														$elm$json$Json$Decode$map5,
														F5(
															function (g, h, i, j, k) {
																return _Utils_Tuple2(
																	_Utils_Tuple3(g, h, i),
																	_Utils_Tuple2(j, k));
															}),
														dg,
														dh,
														di,
														dj,
														dk));
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var $author$project$Models$Project$Source$decode = $author$project$Libs$Json$Decode$map11($author$project$Models$Project$Source$decodeSource)(
	A2($elm$json$Json$Decode$field, 'id', $author$project$Models$Project$SourceId$decode))(
	A2($elm$json$Json$Decode$field, 'name', $author$project$Models$Project$SourceName$decode))(
	A2($elm$json$Json$Decode$field, 'kind', $author$project$Models$Project$SourceKind$decode))(
	A2(
		$elm$json$Json$Decode$field,
		'content',
		$elm$json$Json$Decode$array($author$project$Models$Project$SourceLine$decode)))(
	A2(
		$elm$json$Json$Decode$map,
		$author$project$Libs$Dict$fromListMap(
			function ($) {
				return $.H;
			}),
		A2(
			$elm$json$Json$Decode$field,
			'tables',
			$elm$json$Json$Decode$list($author$project$Models$Project$Table$decode))))(
	A2(
		$elm$json$Json$Decode$field,
		'relations',
		$elm$json$Json$Decode$list($author$project$Models$Project$Relation$decode)))(
	A3(
		$author$project$Libs$Json$Decode$defaultField,
		'types',
		A2(
			$elm$json$Json$Decode$map,
			$author$project$Libs$Dict$fromListMap(
				function ($) {
					return $.H;
				}),
			$elm$json$Json$Decode$list($author$project$Models$Project$CustomType$decode)),
		$elm$core$Dict$empty))(
	A3($author$project$Libs$Json$Decode$defaultField, 'enabled', $elm$json$Json$Decode$bool, true))(
	A2($author$project$Libs$Json$Decode$maybeField, 'fromSample', $author$project$Models$Project$SampleKey$decode))(
	A2($elm$json$Json$Decode$field, 'createdAt', $author$project$Libs$Time$decode))(
	A2($elm$json$Json$Decode$field, 'updatedAt', $author$project$Libs$Time$decode));
var $author$project$Libs$Models$Position$zero = {C: 0, ad: 0};
var $author$project$Models$Position$zeroDiagram = $author$project$Libs$Models$Position$zero;
var $author$project$Models$Project$CanvasProps$empty = {e$: $author$project$Models$Position$zeroDiagram, hU: 1};
var $author$project$Models$Project$Layout$empty = function (now) {
	return {fJ: $author$project$Models$Project$CanvasProps$empty, ic: now, gw: _List_Nil, oM: _List_Nil, kb: now};
};
var $elm$core$List$any = F2(
	function (isOkay, list) {
		any:
		while (true) {
			if (!list.b) {
				return false;
			} else {
				var x = list.a;
				var xs = list.b;
				if (isOkay(x)) {
					return true;
				} else {
					var $temp$isOkay = isOkay,
						$temp$list = xs;
					isOkay = $temp$isOkay;
					list = $temp$list;
					continue any;
				}
			}
		}
	});
var $author$project$Libs$List$filterNot = F2(
	function (predicate, list) {
		return A2(
			$elm$core$List$filter,
			function (a) {
				return !predicate(a);
			},
			list);
	});
var $author$project$Libs$List$merge = F4(
	function (getKey, mergeValue, l1, l2) {
		return _Utils_ap(
			A2(
				$elm$core$List$map,
				function (a1) {
					return A3(
						$author$project$Libs$Maybe$mapOrElse,
						mergeValue(a1),
						a1,
						A2(
							$author$project$Libs$List$find,
							function (a2) {
								return _Utils_eq(
									getKey(a1),
									getKey(a2));
							},
							l2));
				},
				l1),
			A2(
				$author$project$Libs$List$filterNot,
				function (a2) {
					return A2(
						$elm$core$List$any,
						function (a1) {
							return _Utils_eq(
								getKey(a1),
								getKey(a2));
						},
						l1);
				},
				l2));
	});
var $author$project$Models$Project$Relation$merge = F2(
	function (r1, r2) {
		return {
			H: r1.H,
			eS: r1.eS,
			jq: _Utils_ap(r1.jq, r2.jq),
			dG: r1.dG,
			ht: r1.ht
		};
	});
var $elm$core$Dict$member = F2(
	function (key, dict) {
		var _v0 = A2($elm$core$Dict$get, key, dict);
		if (!_v0.$) {
			return true;
		} else {
			return false;
		}
	});
var $author$project$Models$Project$shouldDisplayRelation = F2(
	function (tables, relation) {
		return A2($elm$core$Dict$member, relation.ht.aq, tables) && A2($elm$core$Dict$member, relation.dG.aq, tables);
	});
var $author$project$Models$Project$computeRelations = F2(
	function (tables, sources) {
		return A3(
			$elm$core$List$foldr,
			A2(
				$author$project$Libs$List$merge,
				function ($) {
					return $.H;
				},
				$author$project$Models$Project$Relation$merge),
			_List_Nil,
			A2(
				$elm$core$List$map,
				function (s) {
					return A2(
						$elm$core$List$filter,
						$author$project$Models$Project$shouldDisplayRelation(tables),
						s.bT);
				},
				A2(
					$elm$core$List$filter,
					function ($) {
						return $.ip;
					},
					sources)));
	});
var $elm$core$Dict$filter = F2(
	function (isGood, dict) {
		return A3(
			$elm$core$Dict$foldl,
			F3(
				function (k, v, d) {
					return A2(isGood, k, v) ? A3($elm$core$Dict$insert, k, v, d) : d;
				}),
			$elm$core$Dict$empty,
			dict);
	});
var $elm$core$Dict$merge = F6(
	function (leftStep, bothStep, rightStep, leftDict, rightDict, initialResult) {
		var stepState = F3(
			function (rKey, rValue, _v0) {
				stepState:
				while (true) {
					var list = _v0.a;
					var result = _v0.b;
					if (!list.b) {
						return _Utils_Tuple2(
							list,
							A3(rightStep, rKey, rValue, result));
					} else {
						var _v2 = list.a;
						var lKey = _v2.a;
						var lValue = _v2.b;
						var rest = list.b;
						if (_Utils_cmp(lKey, rKey) < 0) {
							var $temp$rKey = rKey,
								$temp$rValue = rValue,
								$temp$_v0 = _Utils_Tuple2(
								rest,
								A3(leftStep, lKey, lValue, result));
							rKey = $temp$rKey;
							rValue = $temp$rValue;
							_v0 = $temp$_v0;
							continue stepState;
						} else {
							if (_Utils_cmp(lKey, rKey) > 0) {
								return _Utils_Tuple2(
									list,
									A3(rightStep, rKey, rValue, result));
							} else {
								return _Utils_Tuple2(
									rest,
									A4(bothStep, lKey, lValue, rValue, result));
							}
						}
					}
				}
			});
		var _v3 = A3(
			$elm$core$Dict$foldl,
			stepState,
			_Utils_Tuple2(
				$elm$core$Dict$toList(leftDict),
				initialResult),
			rightDict);
		var leftovers = _v3.a;
		var intermediateResult = _v3.b;
		return A3(
			$elm$core$List$foldl,
			F2(
				function (_v4, result) {
					var k = _v4.a;
					var v = _v4.b;
					return A3(leftStep, k, v, result);
				}),
			intermediateResult,
			leftovers);
	});
var $author$project$Libs$Dict$fuse = F3(
	function (mergeValue, d1, d2) {
		return A6(
			$elm$core$Dict$merge,
			$elm$core$Dict$insert,
			F4(
				function (k, a1, a2, acc) {
					return A3(
						$elm$core$Dict$insert,
						k,
						A2(mergeValue, a1, a2),
						acc);
				}),
			$elm$core$Dict$insert,
			d1,
			d2,
			$elm$core$Dict$empty);
	});
var $author$project$Libs$Maybe$orElse = F2(
	function (other, item) {
		var _v0 = _Utils_Tuple2(item, other);
		if (!_v0.a.$) {
			var a1 = _v0.a.a;
			return $elm$core$Maybe$Just(a1);
		} else {
			var _v1 = _v0.a;
			var res = _v0.b;
			return res;
		}
	});
var $author$project$Libs$Maybe$merge = F3(
	function (mergeValue, m1, m2) {
		return A2(
			$author$project$Libs$Maybe$orElse,
			m2,
			A2(
				$elm$core$Maybe$map,
				function (a1) {
					return A3(
						$author$project$Libs$Maybe$mapOrElse,
						mergeValue(a1),
						a1,
						m2);
				},
				m1));
	});
var $author$project$Models$Project$ColumnPath$merge = F2(
	function (n1, _v0) {
		return n1;
	});
var $author$project$Models$Project$Check$merge = F2(
	function (c1, c2) {
		return {
			M: A4($author$project$Libs$List$merge, $author$project$Models$Project$ColumnPath$toString, $author$project$Models$Project$ColumnPath$merge, c1.M, c2.M),
			eS: c1.eS,
			jq: _Utils_ap(c1.jq, c2.jq),
			nI: c1.nI
		};
	});
var $author$project$Libs$Ned$fromDict = function (dict) {
	var _v0 = $elm$core$Dict$toList(dict);
	if (_v0.b) {
		var head = _v0.a;
		var tail = _v0.b;
		return $elm$core$Maybe$Just(
			A2($author$project$Libs$Ned$build, head, tail));
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $author$project$Libs$Ned$toDict = function (ned) {
	return A3($elm$core$Dict$insert, ned.ev.a, ned.ev.b, ned.oO);
};
var $author$project$Libs$Ned$merge = F3(
	function (mergeValue, d1, d2) {
		return A2(
			$elm$core$Maybe$withDefault,
			d1,
			$author$project$Libs$Ned$fromDict(
				A6(
					$elm$core$Dict$merge,
					$elm$core$Dict$insert,
					F4(
						function (k, a1, a2, acc) {
							return A3(
								$elm$core$Dict$insert,
								k,
								A2(mergeValue, a1, a2),
								acc);
						}),
					$elm$core$Dict$insert,
					$author$project$Libs$Ned$toDict(d1),
					$author$project$Libs$Ned$toDict(d2),
					$elm$core$Dict$empty)));
	});
var $author$project$Models$Project$ColumnValue$merge = F2(
	function (v1, _v0) {
		return v1;
	});
var $author$project$Models$Project$Comment$merge = F2(
	function (c1, c2) {
		return {
			jq: _Utils_ap(c1.jq, c2.jq),
			fp: c1.fp
		};
	});
var $author$project$Models$Project$Column$merge = F2(
	function (c1, c2) {
		return {
			M: A3($author$project$Libs$Maybe$merge, $author$project$Models$Project$Column$mergeNested, c1.M, c2.M),
			h4: A3($author$project$Libs$Maybe$merge, $author$project$Models$Project$Comment$merge, c1.h4, c2.h4),
			lf: A3($author$project$Libs$Maybe$merge, $author$project$Models$Project$ColumnValue$merge, c1.lf, c2.lf),
			l7: c1.l7,
			gi: _Utils_eq(c1.gi, $author$project$Conf$schema.bH.o0) ? c2.gi : c1.gi,
			eS: c1.eS,
			nf: c1.nf && c2.nf,
			jq: _Utils_ap(c1.jq, c2.jq)
		};
	});
var $author$project$Models$Project$Column$mergeNested = F2(
	function (_v0, _v1) {
		var c1 = _v0;
		var c2 = _v1;
		return A3($author$project$Libs$Ned$merge, $author$project$Models$Project$Column$merge, c1, c2);
	});
var $author$project$Libs$Nel$merge = F4(
	function (getKey, mergeValue, l1, l2) {
		return A2(
			$elm$core$Maybe$withDefault,
			l1,
			$author$project$Libs$Nel$fromList(
				A4(
					$author$project$Libs$List$merge,
					getKey,
					mergeValue,
					$author$project$Libs$Nel$toList(l1),
					$author$project$Libs$Nel$toList(l2))));
	});
var $author$project$Models$Project$Index$merge = F2(
	function (i1, i2) {
		return {
			M: A4($author$project$Libs$Nel$merge, $author$project$Models$Project$ColumnPath$toString, $author$project$Models$Project$ColumnPath$merge, i1.M, i2.M),
			ii: i1.ii,
			eS: i1.eS,
			jq: _Utils_ap(i1.jq, i2.jq)
		};
	});
var $author$project$Models$Project$PrimaryKey$merge = F2(
	function (pk1, pk2) {
		return {
			M: A4($author$project$Libs$Nel$merge, $author$project$Models$Project$ColumnPath$toString, $author$project$Models$Project$ColumnPath$merge, pk1.M, pk2.M),
			eS: pk1.eS,
			jq: _Utils_ap(pk1.jq, pk2.jq)
		};
	});
var $author$project$Models$Project$Unique$merge = F2(
	function (u1, u2) {
		return {
			M: A4($author$project$Libs$Nel$merge, $author$project$Models$Project$ColumnPath$toString, $author$project$Models$Project$ColumnPath$merge, u1.M, u2.M),
			ii: u1.ii,
			eS: u1.eS,
			jq: _Utils_ap(u1.jq, u2.jq)
		};
	});
var $author$project$Models$Project$Table$merge = F2(
	function (t1, t2) {
		return {
			cQ: A4(
				$author$project$Libs$List$merge,
				function ($) {
					return $.eS;
				},
				$author$project$Models$Project$Check$merge,
				t1.cQ,
				t2.cQ),
			M: A3($author$project$Libs$Dict$fuse, $author$project$Models$Project$Column$merge, t1.M, t2.M),
			h4: A3($author$project$Libs$Maybe$merge, $author$project$Models$Project$Comment$merge, t1.h4, t2.h4),
			H: t1.H,
			dg: A4(
				$author$project$Libs$List$merge,
				function ($) {
					return $.eS;
				},
				$author$project$Models$Project$Index$merge,
				t1.dg,
				t2.dg),
			eS: t1.eS,
			jq: _Utils_ap(t1.jq, t2.jq),
			nL: A3($author$project$Libs$Maybe$merge, $author$project$Models$Project$PrimaryKey$merge, t1.nL, t2.nL),
			aI: t1.aI,
			d5: A4(
				$author$project$Libs$List$merge,
				function ($) {
					return $.eS;
				},
				$author$project$Models$Project$Unique$merge,
				t1.d5,
				t2.d5),
			o3: t1.o3
		};
	});
var $elm$core$List$member = F2(
	function (x, xs) {
		return A2(
			$elm$core$List$any,
			function (a) {
				return _Utils_eq(a, x);
			},
			xs);
	});
var $elm$regex$Regex$Match = F4(
	function (match, index, number, submatches) {
		return {l7: index, dn: match, ng: number, oG: submatches};
	});
var $elm$regex$Regex$fromStringWith = _Regex_fromStringWith;
var $elm$regex$Regex$never = _Regex_never;
var $author$project$Libs$Regex$asRegexI = function (regex) {
	return A2(
		$elm$core$Maybe$withDefault,
		$elm$regex$Regex$never,
		A2(
			$elm$regex$Regex$fromStringWith,
			{h$: true, jd: false},
			regex));
};
var $elm$regex$Regex$contains = _Regex_contains;
var $author$project$Libs$Regex$matchI = F2(
	function (regex, text) {
		return function (r) {
			return A2($elm$regex$Regex$contains, r, text);
		}(
			$author$project$Libs$Regex$asRegexI(regex));
	});
var $elm$core$String$trim = _String_trim;
var $author$project$Models$Project$ProjectSettings$removeTable = function (removedTables) {
	var names = A2(
		$author$project$Libs$List$filterNot,
		$elm$core$String$isEmpty,
		A2(
			$elm$core$List$map,
			$elm$core$String$trim,
			A2($elm$core$String$split, ',', removedTables)));
	return function (_v0) {
		var tableName = _v0.b;
		return A2(
			$elm$core$List$any,
			function (name) {
				return _Utils_eq(tableName, name) || A2($author$project$Libs$Regex$matchI, '^' + (name + '$'), tableName);
			},
			names);
	};
};
var $author$project$Models$Project$shouldDisplayTable = F2(
	function (settings, table) {
		var isViewRemoved = table.o3 && settings.n2;
		var isTableRemoved = A2($author$project$Models$Project$ProjectSettings$removeTable, settings.n4, table.H);
		var isSchemaRemoved = A2($elm$core$List$member, table.aI, settings.n3);
		return (!isSchemaRemoved) && ((!isViewRemoved) && (!isTableRemoved));
	});
var $author$project$Models$Project$computeTables = F2(
	function (settings, sources) {
		return A3(
			$elm$core$List$foldr,
			$author$project$Libs$Dict$fuse($author$project$Models$Project$Table$merge),
			$elm$core$Dict$empty,
			A2(
				$elm$core$List$map,
				function (s) {
					return A2(
						$elm$core$Dict$filter,
						function (_v0) {
							return $author$project$Models$Project$shouldDisplayTable(settings);
						},
						s.oM);
				},
				A2(
					$elm$core$List$filter,
					function ($) {
						return $.ip;
					},
					sources)));
	});
var $elm$core$Set$Set_elm_builtin = $elm$core$Basics$identity;
var $elm$core$Set$empty = $elm$core$Dict$empty;
var $elm$core$Set$insert = F2(
	function (key, _v0) {
		var dict = _v0;
		return A3($elm$core$Dict$insert, key, 0, dict);
	});
var $elm$core$Set$member = F2(
	function (key, _v0) {
		var dict = _v0;
		return A2($elm$core$Dict$member, key, dict);
	});
var $author$project$Libs$List$zipWith = F2(
	function (transform, list) {
		return A2(
			$elm$core$List$map,
			function (a) {
				return _Utils_Tuple2(
					a,
					transform(a));
			},
			list);
	});
var $author$project$Libs$List$uniqueBy = F2(
	function (matcher, list) {
		return $elm$core$List$reverse(
			A3(
				$elm$core$List$foldl,
				F2(
					function (_v0, _v1) {
						var item = _v0.a;
						var key = _v0.b;
						var res = _v1.a;
						var set = _v1.b;
						return A2($elm$core$Set$member, key, set) ? _Utils_Tuple2(res, set) : _Utils_Tuple2(
							A2($elm$core$List$cons, item, res),
							A2($elm$core$Set$insert, key, set));
					}),
				_Utils_Tuple2(_List_Nil, $elm$core$Set$empty),
				A2($author$project$Libs$List$zipWith, matcher, list)).a);
	});
var $author$project$Libs$List$unique = function (list) {
	return A2($author$project$Libs$List$uniqueBy, $elm$core$Basics$identity, list);
};
var $author$project$Models$Project$CustomTypeValue$merge = F2(
	function (v1, v2) {
		var _v0 = _Utils_Tuple2(v1, v2);
		if ((!_v0.a.$) && (!_v0.b.$)) {
			var values1 = _v0.a.a;
			var values2 = _v0.b.a;
			return $author$project$Models$Project$CustomTypeValue$Enum(
				$author$project$Libs$List$unique(
					_Utils_ap(values1, values2)));
		} else {
			return v1;
		}
	});
var $author$project$Models$Project$CustomType$merge = F2(
	function (t1, t2) {
		return {
			H: t1.H,
			eS: t1.eS,
			jq: _Utils_ap(t1.jq, t2.jq),
			a5: A2($author$project$Models$Project$CustomTypeValue$merge, t1.a5, t2.a5)
		};
	});
var $author$project$Models$Project$computeTypes = function (sources) {
	return A3(
		$elm$core$List$foldr,
		$author$project$Libs$Dict$fuse($author$project$Models$Project$CustomType$merge),
		$elm$core$Dict$empty,
		A2(
			$elm$core$List$map,
			function ($) {
				return $.d3;
			},
			A2(
				$elm$core$List$filter,
				function ($) {
					return $.ip;
				},
				sources)));
};
var $author$project$Models$Project$compute = function (project) {
	return function (tables) {
		return _Utils_update(
			project,
			{
				bT: A2($author$project$Models$Project$computeRelations, tables, project.hs),
				oM: tables,
				d3: $author$project$Models$Project$computeTypes(project.hs)
			});
	}(
		A2($author$project$Models$Project$computeTables, project.dM, project.hs));
};
var $author$project$Models$Project$new = function (organization) {
	return function (id) {
		return function (slug) {
			return function (name) {
				return function (description) {
					return function (sources) {
						return function (notes) {
							return function (usedLayout) {
								return function (layouts) {
									return function (settings) {
										return function (storage) {
											return function (visibility) {
												return function (version) {
													return function (createdAt) {
														return function (updatedAt) {
															return $author$project$Models$Project$compute(
																{ic: createdAt, bf: description, H: id, i$: layouts, eS: name, bP: notes, nx: organization, bT: _List_Nil, dM: settings, hr: slug, hs: sources, cD: storage, oM: $elm$core$Dict$empty, d3: $elm$core$Dict$empty, kb: updatedAt, fw: usedLayout, kd: version, hQ: visibility});
														};
													};
												};
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var $author$project$Libs$Time$zero = $elm$time$Time$millisToPosix(0);
var $author$project$Models$Project$decodeProject = function (organization) {
	return function (id) {
		return function (maybeSlug) {
			return function (name) {
				return function (description) {
					return function (sources) {
						return function (notes) {
							return function (layout) {
								return function (usedLayout) {
									return function (layouts) {
										return function (settings) {
											return function (storage) {
												return function (visibility) {
													return function (version) {
														return function (createdAt) {
															return function (updatedAt) {
																var slug = A2($elm$core$Maybe$withDefault, id, maybeSlug);
																var allLayouts = _Utils_eq(
																	layout,
																	$author$project$Models$Project$Layout$empty($author$project$Libs$Time$zero)) ? layouts : A3($elm$core$Dict$insert, $author$project$Conf$constants.lh, layout, layouts);
																return $author$project$Models$Project$new(organization)(id)(slug)(name)(description)(sources)(notes)(usedLayout)(allLayouts)(settings)(storage)(visibility)(version)(createdAt)(updatedAt);
															};
														};
													};
												};
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var $author$project$Models$Project$LayoutName$fromString = function (name) {
	return name;
};
var $author$project$Libs$Json$Decode$map16 = function (callback) {
	return function (da) {
		return function (db) {
			return function (dc) {
				return function (dd) {
					return function (de) {
						return function (df) {
							return function (dg) {
								return function (dh) {
									return function (di) {
										return function (dj) {
											return function (dk) {
												return function (dl) {
													return function (dm) {
														return function (dn) {
															return function (_do) {
																return function (dp) {
																	return A4(
																		$elm$json$Json$Decode$map3,
																		F3(
																			function (_v0, _v3, _v6) {
																				var _v1 = _v0.a;
																				var a = _v1.a;
																				var b = _v1.b;
																				var c = _v1.c;
																				var _v2 = _v0.b;
																				var d = _v2.a;
																				var e = _v2.b;
																				var f = _v2.c;
																				var _v4 = _v3.a;
																				var g = _v4.a;
																				var h = _v4.b;
																				var i = _v4.c;
																				var _v5 = _v3.b;
																				var j = _v5.a;
																				var k = _v5.b;
																				var l = _v5.c;
																				var _v7 = _v6.a;
																				var m = _v7.a;
																				var n = _v7.b;
																				var o = _v7.c;
																				var p = _v6.b;
																				return callback(a)(b)(c)(d)(e)(f)(g)(h)(i)(j)(k)(l)(m)(n)(o)(p);
																			}),
																		A7(
																			$elm$json$Json$Decode$map6,
																			F6(
																				function (a, b, c, d, e, f) {
																					return _Utils_Tuple2(
																						_Utils_Tuple3(a, b, c),
																						_Utils_Tuple3(d, e, f));
																				}),
																			da,
																			db,
																			dc,
																			dd,
																			de,
																			df),
																		A7(
																			$elm$json$Json$Decode$map6,
																			F6(
																				function (g, h, i, j, k, l) {
																					return _Utils_Tuple2(
																						_Utils_Tuple3(g, h, i),
																						_Utils_Tuple3(j, k, l));
																				}),
																			dg,
																			dh,
																			di,
																			dj,
																			dk,
																			dl),
																		A5(
																			$elm$json$Json$Decode$map4,
																			F4(
																				function (m, n, o, p) {
																					return _Utils_Tuple2(
																						_Utils_Tuple3(m, n, o),
																						p);
																				}),
																			dm,
																			dn,
																			_do,
																			dp));
																};
															};
														};
													};
												};
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var $author$project$Models$Project$decode = $author$project$Libs$Json$Decode$map16($author$project$Models$Project$decodeProject)(
	A2($author$project$Libs$Json$Decode$maybeField, 'organization', $author$project$Models$Organization$decode))(
	A2($elm$json$Json$Decode$field, 'id', $author$project$Models$Project$ProjectId$decode))(
	A2($author$project$Libs$Json$Decode$maybeField, 'slug', $author$project$Models$Project$ProjectSlug$decode))(
	A2($elm$json$Json$Decode$field, 'name', $author$project$Models$Project$ProjectName$decode))(
	A2($author$project$Libs$Json$Decode$maybeField, 'description', $elm$json$Json$Decode$string))(
	A2(
		$elm$json$Json$Decode$field,
		'sources',
		$elm$json$Json$Decode$list($author$project$Models$Project$Source$decode)))(
	A3(
		$author$project$Libs$Json$Decode$defaultField,
		'notes',
		$elm$json$Json$Decode$dict($elm$json$Json$Decode$string),
		$elm$core$Dict$empty))(
	A3(
		$author$project$Libs$Json$Decode$defaultField,
		'layout',
		$author$project$Models$Project$Layout$decode,
		$author$project$Models$Project$Layout$empty($author$project$Libs$Time$zero)))(
	A3($author$project$Libs$Json$Decode$defaultField, 'usedLayout', $author$project$Models$Project$LayoutName$decode, $author$project$Conf$constants.lh))(
	A3(
		$author$project$Libs$Json$Decode$defaultField,
		'layouts',
		A2($author$project$Libs$Json$Decode$customDict, $author$project$Models$Project$LayoutName$fromString, $author$project$Models$Project$Layout$decode),
		$elm$core$Dict$empty))(
	A3(
		$author$project$Libs$Json$Decode$defaultFieldDeep,
		'settings',
		$author$project$Models$Project$ProjectSettings$decode,
		$author$project$Models$Project$ProjectSettings$init($author$project$Conf$schema.lC)))(
	A3($author$project$Libs$Json$Decode$defaultField, 'storage', $author$project$Models$Project$ProjectStorage$decode, 0))(
	A3($author$project$Libs$Json$Decode$defaultField, 'visibility', $author$project$Models$Project$ProjectVisibility$decode, 0))(
	A2($elm$json$Json$Decode$field, 'version', $author$project$Models$Project$ProjectEncodingVersion$decode))(
	A2($elm$json$Json$Decode$field, 'createdAt', $author$project$Libs$Time$decode))(
	A2($elm$json$Json$Decode$field, 'updatedAt', $author$project$Libs$Time$decode));
var $author$project$Storage$ProjectV2$decodeProject = A2(
	$elm$json$Json$Decode$andThen,
	function (v) {
		switch (v) {
			case 1:
				return $elm$json$Json$Decode$fail('Version 1 of project is not supported anymore.');
			case 2:
				return $author$project$Models$Project$decode;
			default:
				return $elm$json$Json$Decode$fail(
					'Unknown project version ' + ($elm$core$String$fromInt(v) + '.'));
		}
	},
	A2($elm$json$Json$Decode$field, 'version', $elm$json$Json$Decode$int));
var $author$project$Ports$projectDecoder = A2(
	$elm$json$Json$Decode$map,
	$elm$json$Json$Decode$decodeValue($author$project$Storage$ProjectV2$decodeProject),
	$elm$json$Json$Decode$value);
var $author$project$Ports$jsDecoder = A2(
	$author$project$Libs$Json$Decode$matchOn,
	'kind',
	function (kind) {
		switch (kind) {
			case 'GotSizes':
				return A2(
					$elm$json$Json$Decode$map,
					$author$project$Ports$GotSizes,
					A2(
						$elm$json$Json$Decode$field,
						'sizes',
						$elm$json$Json$Decode$list(
							A5(
								$elm$json$Json$Decode$map4,
								$author$project$Libs$Models$SizeChange,
								A2($elm$json$Json$Decode$field, 'id', $elm$json$Json$Decode$string),
								A2($elm$json$Json$Decode$field, 'position', $author$project$Models$Position$decodeViewport),
								A2($elm$json$Json$Decode$field, 'size', $author$project$Models$Size$decodeViewport),
								A2($elm$json$Json$Decode$field, 'seeds', $author$project$Libs$Models$Delta$decode)))));
			case 'GotProject':
				return A2(
					$elm$json$Json$Decode$map,
					$author$project$Ports$GotProject,
					A2($author$project$Libs$Json$Decode$maybeField, 'project', $author$project$Ports$projectDecoder));
			case 'ProjectDeleted':
				return A2(
					$elm$json$Json$Decode$map,
					$author$project$Ports$ProjectDeleted,
					A2($elm$json$Json$Decode$field, 'id', $author$project$Models$Project$ProjectId$decode));
			case 'GotLocalFile':
				return A4(
					$elm$json$Json$Decode$map3,
					$author$project$Ports$GotLocalFile,
					A2($elm$json$Json$Decode$field, 'sourceKind', $elm$json$Json$Decode$string),
					A2($elm$json$Json$Decode$field, 'file', $mpizenberg$elm_file$FileValue$decoder),
					A2($elm$json$Json$Decode$field, 'content', $elm$json$Json$Decode$string));
			case 'GotTableStats':
				return A3(
					$elm$json$Json$Decode$map2,
					$author$project$Ports$GotTableStats,
					A2($elm$json$Json$Decode$field, 'source', $author$project$Models$Project$SourceId$decode),
					A2($elm$json$Json$Decode$field, 'stats', $author$project$Models$Project$TableStats$decode));
			case 'GotColumnStats':
				return A3(
					$elm$json$Json$Decode$map2,
					$author$project$Ports$GotColumnStats,
					A2($elm$json$Json$Decode$field, 'source', $author$project$Models$Project$SourceId$decode),
					A2($elm$json$Json$Decode$field, 'stats', $author$project$Models$Project$ColumnStats$decode));
			case 'GotHotkey':
				return A2(
					$elm$json$Json$Decode$map,
					$author$project$Ports$GotHotkey,
					A2($elm$json$Json$Decode$field, 'id', $elm$json$Json$Decode$string));
			case 'GotKeyHold':
				return A3(
					$elm$json$Json$Decode$map2,
					$author$project$Ports$GotKeyHold,
					A2($elm$json$Json$Decode$field, 'key', $elm$json$Json$Decode$string),
					A2($elm$json$Json$Decode$field, 'start', $elm$json$Json$Decode$bool));
			case 'GotToast':
				return A3(
					$elm$json$Json$Decode$map2,
					$author$project$Ports$GotToast,
					A2($elm$json$Json$Decode$field, 'level', $elm$json$Json$Decode$string),
					A2($elm$json$Json$Decode$field, 'message', $elm$json$Json$Decode$string));
			case 'GotTableShow':
				return A3(
					$elm$json$Json$Decode$map2,
					$author$project$Ports$GotTableShow,
					A2($elm$json$Json$Decode$field, 'id', $author$project$Models$Project$TableId$decode),
					A2($author$project$Libs$Json$Decode$maybeField, 'position', $author$project$Models$Position$decodeGrid));
			case 'GotTableHide':
				return A2(
					$elm$json$Json$Decode$map,
					$author$project$Ports$GotTableHide,
					A2($elm$json$Json$Decode$field, 'id', $author$project$Models$Project$TableId$decode));
			case 'GotTableToggleColumns':
				return A2(
					$elm$json$Json$Decode$map,
					$author$project$Ports$GotTableToggleColumns,
					A2($elm$json$Json$Decode$field, 'id', $author$project$Models$Project$TableId$decode));
			case 'GotTablePosition':
				return A3(
					$elm$json$Json$Decode$map2,
					$author$project$Ports$GotTablePosition,
					A2($elm$json$Json$Decode$field, 'id', $author$project$Models$Project$TableId$decode),
					A2($elm$json$Json$Decode$field, 'position', $author$project$Models$Position$decodeGrid));
			case 'GotTableMove':
				return A3(
					$elm$json$Json$Decode$map2,
					$author$project$Ports$GotTableMove,
					A2($elm$json$Json$Decode$field, 'id', $author$project$Models$Project$TableId$decode),
					A2($elm$json$Json$Decode$field, 'delta', $author$project$Libs$Models$Delta$decode));
			case 'GotTableSelect':
				return A2(
					$elm$json$Json$Decode$map,
					$author$project$Ports$GotTableSelect,
					A2($elm$json$Json$Decode$field, 'id', $author$project$Models$Project$TableId$decode));
			case 'GotTableColor':
				return A3(
					$elm$json$Json$Decode$map2,
					$author$project$Ports$GotTableColor,
					A2($elm$json$Json$Decode$field, 'id', $author$project$Models$Project$TableId$decode),
					A2($elm$json$Json$Decode$field, 'color', $author$project$Libs$Tailwind$decodeColor));
			case 'GotColumnShow':
				return A2(
					$elm$json$Json$Decode$map,
					$author$project$Ports$GotColumnShow,
					A2(
						$elm$json$Json$Decode$map,
						$author$project$Models$Project$ColumnRef$fromString,
						A2($elm$json$Json$Decode$field, 'ref', $elm$json$Json$Decode$string)));
			case 'GotColumnHide':
				return A2(
					$elm$json$Json$Decode$map,
					$author$project$Ports$GotColumnHide,
					A2(
						$elm$json$Json$Decode$map,
						$author$project$Models$Project$ColumnRef$fromString,
						A2($elm$json$Json$Decode$field, 'ref', $elm$json$Json$Decode$string)));
			case 'GotColumnMove':
				return A3(
					$elm$json$Json$Decode$map2,
					$author$project$Ports$GotColumnMove,
					A2(
						$elm$json$Json$Decode$map,
						$author$project$Models$Project$ColumnRef$fromString,
						A2($elm$json$Json$Decode$field, 'ref', $elm$json$Json$Decode$string)),
					A2($elm$json$Json$Decode$field, 'index', $elm$json$Json$Decode$int));
			case 'GotFitToScreen':
				return $elm$json$Json$Decode$succeed($author$project$Ports$GotFitToScreen);
			default:
				var other = kind;
				return $elm$json$Json$Decode$fail('Not supported kind of JsMsg \'' + (other + '\''));
		}
	});
var $author$project$Ports$jsToElm = _Platform_incomingPort('jsToElm', $elm$json$Json$Decode$value);
var $author$project$Ports$onJsMessage = function (callback) {
	return $author$project$Ports$jsToElm(
		function (value) {
			var _v0 = A2($elm$json$Json$Decode$decodeValue, $author$project$Ports$jsDecoder, value);
			if (!_v0.$) {
				var message = _v0.a;
				return callback(message);
			} else {
				var error = _v0.a;
				return callback(
					A2($author$project$Ports$Error, value, error));
			}
		});
};
var $author$project$PagesComponents$Create$Subscriptions$subscriptions = function (_v0) {
	return $elm$core$Platform$Sub$batch(
		_List_fromArray(
			[
				$author$project$Ports$onJsMessage($author$project$PagesComponents$Create$Models$JsMessage)
			]));
};
var $author$project$PagesComponents$Create$Models$AmlSourceMsg = F2(
	function (a, b) {
		return {$: 4, a: a, b: b};
	});
var $author$project$PagesComponents$Create$Models$CreateProjectTmp = F2(
	function (a, b) {
		return {$: 5, a: a, b: b};
	});
var $author$project$PagesComponents$Create$Models$DatabaseSourceMsg = function (a) {
	return {$: 1, a: a};
};
var $author$project$Services$JsonSource$GetRemoteFile = function (a) {
	return {$: 1, a: a};
};
var $author$project$Services$SqlSource$GetRemoteFile = function (a) {
	return {$: 1, a: a};
};
var $author$project$Services$DatabaseSource$GetSchema = function (a) {
	return {$: 1, a: a};
};
var $author$project$PagesComponents$Create$Models$JsonSourceMsg = function (a) {
	return {$: 3, a: a};
};
var $author$project$PagesComponents$Create$Models$SqlSourceMsg = function (a) {
	return {$: 2, a: a};
};
var $author$project$PagesComponents$Create$Models$Toast = function (a) {
	return {$: 6, a: a};
};
var $author$project$Models$Project$Source$aml = F3(
	function (name, now, id) {
		return {cX: $elm$core$Array$empty, ic: now, ip: true, iB: $elm$core$Maybe$Nothing, H: id, gi: $author$project$Models$Project$SourceKind$AmlEditor, eS: name, bT: _List_Nil, oM: $elm$core$Dict$empty, d3: $elm$core$Dict$empty, kb: now};
	});
var $author$project$Libs$List$groupBy = F2(
	function (key, list) {
		return A3(
			$elm$core$List$foldr,
			F2(
				function (a, dict) {
					return A3(
						$elm$core$Dict$update,
						key(a),
						function (v) {
							return $elm$core$Maybe$Just(
								A3(
									$author$project$Libs$Maybe$mapOrElse,
									function (x) {
										return A2($elm$core$List$cons, a, x);
									},
									_List_fromArray(
										[a]),
									v));
						},
						dict);
				}),
			$elm$core$Dict$empty,
			list);
	});
var $elm$core$Dict$map = F2(
	function (func, dict) {
		if (dict.$ === -2) {
			return $elm$core$Dict$RBEmpty_elm_builtin;
		} else {
			var color = dict.a;
			var key = dict.b;
			var value = dict.c;
			var left = dict.d;
			var right = dict.e;
			return A5(
				$elm$core$Dict$RBNode_elm_builtin,
				color,
				key,
				A2(func, key, value),
				A2($elm$core$Dict$map, func, left),
				A2($elm$core$Dict$map, func, right));
		}
	});
var $author$project$Libs$Basics$maxBy = F3(
	function (getKey, x, y) {
		return (_Utils_cmp(
			getKey(x),
			getKey(y)) > 0) ? x : y;
	});
var $author$project$Libs$List$maximumBy = F2(
	function (getKey, list) {
		if (list.b) {
			var x = list.a;
			var xs = list.b;
			return $elm$core$Maybe$Just(
				A3(
					$elm$core$List$foldl,
					$author$project$Libs$Basics$maxBy(getKey),
					x,
					xs));
		} else {
			return $elm$core$Maybe$Nothing;
		}
	});
var $author$project$Models$Project$mostUsedSchema = function (table) {
	return A2(
		$elm$core$Maybe$withDefault,
		$author$project$Conf$schema.lC,
		A2(
			$elm$core$Maybe$map,
			$elm$core$Tuple$first,
			A2(
				$author$project$Libs$List$maximumBy,
				function (_v1) {
					var count = _v1.b;
					return count;
				},
				$elm$core$Dict$toList(
					A2(
						$elm$core$Dict$map,
						function (_v0) {
							return $elm$core$List$length;
						},
						A2(
							$author$project$Libs$List$groupBy,
							$elm$core$Basics$identity,
							A2(
								$elm$core$List$map,
								$elm$core$Tuple$first,
								$elm$core$Dict$keys(table))))))));
};
var $elm$regex$Regex$find = _Regex_findAtMost(_Regex_infinity);
var $author$project$Libs$Regex$matches = F2(
	function (regex, text) {
		return A2(
			$elm$core$List$concatMap,
			function ($) {
				return $.oG;
			},
			function (r) {
				return A2($elm$regex$Regex$find, r, text);
			}(
				$author$project$Libs$Regex$asRegexI(regex)));
	});
var $author$project$Libs$String$unique = F2(
	function (takenIds, id) {
		unique:
		while (true) {
			if (A2(
				$elm$core$List$any,
				function (taken) {
					return _Utils_eq(taken, id);
				},
				takenIds)) {
				var _v0 = A2($author$project$Libs$Regex$matches, '^(.*?)([0-9]+)?(\\.[a-z]+)?$', id);
				if ((((_v0.b && (!_v0.a.$)) && _v0.b.b) && _v0.b.b.b) && (!_v0.b.b.b.b)) {
					var prefix = _v0.a.a;
					var _v1 = _v0.b;
					var num = _v1.a;
					var _v2 = _v1.b;
					var extension = _v2.a;
					var $temp$takenIds = takenIds,
						$temp$id = _Utils_ap(
						prefix,
						_Utils_ap(
							$elm$core$String$fromInt(
								A3(
									$author$project$Libs$Maybe$mapOrElse,
									function (n) {
										return n + 1;
									},
									2,
									A2($elm$core$Maybe$andThen, $elm$core$String$toInt, num))),
							A2($elm$core$Maybe$withDefault, '', extension)));
					takenIds = $temp$takenIds;
					id = $temp$id;
					continue unique;
				} else {
					return id + '-err';
				}
			} else {
				return id;
			}
		}
	});
var $author$project$Libs$Models$Uuid$zero = '00000000-0000-0000-0000-000000000000';
var $author$project$Models$Project$ProjectId$zero = $author$project$Libs$Models$Uuid$zero;
var $author$project$Models$Project$ProjectSlug$zero = $author$project$Libs$Models$Uuid$zero;
var $author$project$Models$Project$create = F3(
	function (projects, name, source) {
		return $author$project$Models$Project$new($elm$core$Maybe$Nothing)($author$project$Models$Project$ProjectId$zero)($author$project$Models$Project$ProjectSlug$zero)(
			A2(
				$author$project$Libs$String$unique,
				A2(
					$elm$core$List$map,
					function ($) {
						return $.eS;
					},
					projects),
				name))($elm$core$Maybe$Nothing)(
			_List_fromArray(
				[source]))($elm$core$Dict$empty)($author$project$Conf$constants.lh)(
			$elm$core$Dict$fromList(
				_List_fromArray(
					[
						_Utils_Tuple2(
						$author$project$Conf$constants.lh,
						$author$project$Models$Project$Layout$empty(source.ic))
					])))(
			$author$project$Models$Project$ProjectSettings$init(
				$author$project$Models$Project$mostUsedSchema(source.oM)))(0)(0)($author$project$Models$Project$ProjectEncodingVersion$current)(source.ic)(source.kb);
	});
var $author$project$Components$Atoms$Icon$Exclamation = 95;
var $author$project$Components$Molecules$Toast$Simple = $elm$core$Basics$identity;
var $author$project$Services$Toasts$ToastAdd = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $author$project$Services$Toasts$error = function (message) {
	return A2(
		$author$project$Services$Toasts$ToastAdd,
		$elm$core$Maybe$Nothing,
		{A: $author$project$Libs$Tailwind$red, aa: 95, cq: '', a4: message});
};
var $author$project$Libs$Result$fold = F3(
	function (onError, onSuccess, result) {
		if (!result.$) {
			var a = result.a;
			return onSuccess(a);
		} else {
			var x = result.a;
			return onError(x);
		}
	});
var $author$project$PagesComponents$Create$Updates$createProject = F3(
	function (projects, storage, name) {
		return A2(
			$author$project$Libs$Result$fold,
			A2($elm$core$Basics$composeR, $author$project$Services$Toasts$error, $author$project$PagesComponents$Create$Models$Toast),
			A2(
				$elm$core$Basics$composeR,
				A2($author$project$Models$Project$create, projects, name),
				$author$project$PagesComponents$Create$Models$CreateProjectTmp(storage)));
	});
var $author$project$Ports$CreateProject = F3(
	function (a, b, c) {
		return {$: 12, a: a, b: b, c: c};
	});
var $author$project$Ports$createProject = F3(
	function (organization, storage, project) {
		return $author$project$Ports$messageToJs(
			A3($author$project$Ports$CreateProject, organization, storage, project));
	});
var $author$project$Ports$CreateProjectTmp = function (a) {
	return {$: 10, a: a};
};
var $author$project$Ports$createProjectTmp = function (project) {
	return $author$project$Ports$messageToJs(
		$author$project$Ports$CreateProjectTmp(project));
};
var $elm$random$Random$Generate = $elm$core$Basics$identity;
var $elm$random$Random$Seed = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $elm$core$Bitwise$shiftRightZfBy = _Bitwise_shiftRightZfBy;
var $elm$random$Random$next = function (_v0) {
	var state0 = _v0.a;
	var incr = _v0.b;
	return A2($elm$random$Random$Seed, ((state0 * 1664525) + incr) >>> 0, incr);
};
var $elm$random$Random$initialSeed = function (x) {
	var _v0 = $elm$random$Random$next(
		A2($elm$random$Random$Seed, 0, 1013904223));
	var state1 = _v0.a;
	var incr = _v0.b;
	var state2 = (state1 + x) >>> 0;
	return $elm$random$Random$next(
		A2($elm$random$Random$Seed, state2, incr));
};
var $elm$time$Time$Name = function (a) {
	return {$: 0, a: a};
};
var $elm$time$Time$Offset = function (a) {
	return {$: 1, a: a};
};
var $elm$time$Time$Zone = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $elm$time$Time$customZone = $elm$time$Time$Zone;
var $elm$time$Time$now = _Time_now($elm$time$Time$millisToPosix);
var $elm$random$Random$init = A2(
	$elm$core$Task$andThen,
	function (time) {
		return $elm$core$Task$succeed(
			$elm$random$Random$initialSeed(
				$elm$time$Time$posixToMillis(time)));
	},
	$elm$time$Time$now);
var $elm$random$Random$step = F2(
	function (_v0, seed) {
		var generator = _v0;
		return generator(seed);
	});
var $elm$random$Random$onEffects = F3(
	function (router, commands, seed) {
		if (!commands.b) {
			return $elm$core$Task$succeed(seed);
		} else {
			var generator = commands.a;
			var rest = commands.b;
			var _v1 = A2($elm$random$Random$step, generator, seed);
			var value = _v1.a;
			var newSeed = _v1.b;
			return A2(
				$elm$core$Task$andThen,
				function (_v2) {
					return A3($elm$random$Random$onEffects, router, rest, newSeed);
				},
				A2($elm$core$Platform$sendToApp, router, value));
		}
	});
var $elm$random$Random$onSelfMsg = F3(
	function (_v0, _v1, seed) {
		return $elm$core$Task$succeed(seed);
	});
var $elm$random$Random$Generator = $elm$core$Basics$identity;
var $elm$random$Random$map = F2(
	function (func, _v0) {
		var genA = _v0;
		return function (seed0) {
			var _v1 = genA(seed0);
			var a = _v1.a;
			var seed1 = _v1.b;
			return _Utils_Tuple2(
				func(a),
				seed1);
		};
	});
var $elm$random$Random$cmdMap = F2(
	function (func, _v0) {
		var generator = _v0;
		return A2($elm$random$Random$map, func, generator);
	});
_Platform_effectManagers['Random'] = _Platform_createManager($elm$random$Random$init, $elm$random$Random$onEffects, $elm$random$Random$onSelfMsg, $elm$random$Random$cmdMap);
var $elm$random$Random$command = _Platform_leaf('Random');
var $elm$random$Random$generate = F2(
	function (tagger, generator) {
		return $elm$random$Random$command(
			A2($elm$random$Random$map, tagger, generator));
	});
var $TSFoster$elm_uuid$UUID$UUID = F4(
	function (a, b, c, d) {
		return {$: 0, a: a, b: b, c: c, d: d};
	});
var $elm$random$Random$map4 = F5(
	function (func, _v0, _v1, _v2, _v3) {
		var genA = _v0;
		var genB = _v1;
		var genC = _v2;
		var genD = _v3;
		return function (seed0) {
			var _v4 = genA(seed0);
			var a = _v4.a;
			var seed1 = _v4.b;
			var _v5 = genB(seed1);
			var b = _v5.a;
			var seed2 = _v5.b;
			var _v6 = genC(seed2);
			var c = _v6.a;
			var seed3 = _v6.b;
			var _v7 = genD(seed3);
			var d = _v7.a;
			var seed4 = _v7.b;
			return _Utils_Tuple2(
				A4(func, a, b, c, d),
				seed4);
		};
	});
var $TSFoster$elm_uuid$UUID$forceUnsigned = $elm$core$Bitwise$shiftRightZfBy(0);
var $elm$core$Bitwise$and = _Bitwise_and;
var $elm$core$Bitwise$xor = _Bitwise_xor;
var $elm$random$Random$peel = function (_v0) {
	var state = _v0.a;
	var word = (state ^ (state >>> ((state >>> 28) + 4))) * 277803737;
	return ((word >>> 22) ^ word) >>> 0;
};
var $elm$random$Random$int = F2(
	function (a, b) {
		return function (seed0) {
			var _v0 = (_Utils_cmp(a, b) < 0) ? _Utils_Tuple2(a, b) : _Utils_Tuple2(b, a);
			var lo = _v0.a;
			var hi = _v0.b;
			var range = (hi - lo) + 1;
			if (!((range - 1) & range)) {
				return _Utils_Tuple2(
					(((range - 1) & $elm$random$Random$peel(seed0)) >>> 0) + lo,
					$elm$random$Random$next(seed0));
			} else {
				var threshhold = (((-range) >>> 0) % range) >>> 0;
				var accountForBias = function (seed) {
					accountForBias:
					while (true) {
						var x = $elm$random$Random$peel(seed);
						var seedN = $elm$random$Random$next(seed);
						if (_Utils_cmp(x, threshhold) < 0) {
							var $temp$seed = seedN;
							seed = $temp$seed;
							continue accountForBias;
						} else {
							return _Utils_Tuple2((x % range) + lo, seedN);
						}
					}
				};
				return accountForBias(seed0);
			}
		};
	});
var $elm$random$Random$maxInt = 2147483647;
var $elm$random$Random$minInt = -2147483648;
var $TSFoster$elm_uuid$UUID$randomU32 = A2(
	$elm$random$Random$map,
	$TSFoster$elm_uuid$UUID$forceUnsigned,
	A2($elm$random$Random$int, $elm$random$Random$minInt, $elm$random$Random$maxInt));
var $elm$core$Bitwise$or = _Bitwise_or;
var $TSFoster$elm_uuid$UUID$toVariant1 = function (_v0) {
	var a = _v0.a;
	var b = _v0.b;
	var c = _v0.c;
	var d = _v0.d;
	return A4(
		$TSFoster$elm_uuid$UUID$UUID,
		a,
		b,
		$TSFoster$elm_uuid$UUID$forceUnsigned(2147483648 | (1073741823 & c)),
		d);
};
var $elm$core$Bitwise$shiftLeftBy = _Bitwise_shiftLeftBy;
var $TSFoster$elm_uuid$UUID$toVersion = F2(
	function (v, _v0) {
		var a = _v0.a;
		var b = _v0.b;
		var c = _v0.c;
		var d = _v0.d;
		return A4(
			$TSFoster$elm_uuid$UUID$UUID,
			a,
			$TSFoster$elm_uuid$UUID$forceUnsigned((v << 12) | (4294905855 & b)),
			c,
			d);
	});
var $TSFoster$elm_uuid$UUID$generator = A2(
	$elm$random$Random$map,
	A2(
		$elm$core$Basics$composeR,
		$TSFoster$elm_uuid$UUID$toVersion(4),
		$TSFoster$elm_uuid$UUID$toVariant1),
	A5($elm$random$Random$map4, $TSFoster$elm_uuid$UUID$UUID, $TSFoster$elm_uuid$UUID$randomU32, $TSFoster$elm_uuid$UUID$randomU32, $TSFoster$elm_uuid$UUID$randomU32, $TSFoster$elm_uuid$UUID$randomU32));
var $elm$core$String$cons = _String_cons;
var $elm$core$String$fromChar = function (_char) {
	return A2($elm$core$String$cons, _char, '');
};
var $elm$core$Bitwise$shiftRightBy = _Bitwise_shiftRightBy;
var $elm$core$String$repeatHelp = F3(
	function (n, chunk, result) {
		return (n <= 0) ? result : A3(
			$elm$core$String$repeatHelp,
			n >> 1,
			_Utils_ap(chunk, chunk),
			(!(n & 1)) ? result : _Utils_ap(result, chunk));
	});
var $elm$core$String$repeat = F2(
	function (n, chunk) {
		return A3($elm$core$String$repeatHelp, n, chunk, '');
	});
var $elm$core$String$padLeft = F3(
	function (n, _char, string) {
		return _Utils_ap(
			A2(
				$elm$core$String$repeat,
				n - $elm$core$String$length(string),
				$elm$core$String$fromChar(_char)),
			string);
	});
var $elm$core$String$fromList = _String_fromList;
var $TSFoster$elm_uuid$UUID$toHex = F2(
	function (acc, _int) {
		toHex:
		while (true) {
			if (!_int) {
				return $elm$core$String$fromList(acc);
			} else {
				var _char = function () {
					var _v0 = 15 & _int;
					switch (_v0) {
						case 0:
							return '0';
						case 1:
							return '1';
						case 2:
							return '2';
						case 3:
							return '3';
						case 4:
							return '4';
						case 5:
							return '5';
						case 6:
							return '6';
						case 7:
							return '7';
						case 8:
							return '8';
						case 9:
							return '9';
						case 10:
							return 'a';
						case 11:
							return 'b';
						case 12:
							return 'c';
						case 13:
							return 'd';
						case 14:
							return 'e';
						default:
							return 'f';
					}
				}();
				var $temp$acc = A2($elm$core$List$cons, _char, acc),
					$temp$int = _int >>> 4;
				acc = $temp$acc;
				_int = $temp$int;
				continue toHex;
			}
		}
	});
var $TSFoster$elm_uuid$UUID$toStringWith = F2(
	function (sep, _v0) {
		var a = _v0.a;
		var b = _v0.b;
		var c = _v0.c;
		var d = _v0.d;
		return _Utils_ap(
			A3(
				$elm$core$String$padLeft,
				8,
				'0',
				A2($TSFoster$elm_uuid$UUID$toHex, _List_Nil, a)),
			_Utils_ap(
				sep,
				_Utils_ap(
					A3(
						$elm$core$String$padLeft,
						4,
						'0',
						A2($TSFoster$elm_uuid$UUID$toHex, _List_Nil, b >>> 16)),
					_Utils_ap(
						sep,
						_Utils_ap(
							A3(
								$elm$core$String$padLeft,
								4,
								'0',
								A2($TSFoster$elm_uuid$UUID$toHex, _List_Nil, 65535 & b)),
							_Utils_ap(
								sep,
								_Utils_ap(
									A3(
										$elm$core$String$padLeft,
										4,
										'0',
										A2($TSFoster$elm_uuid$UUID$toHex, _List_Nil, c >>> 16)),
									_Utils_ap(
										sep,
										_Utils_ap(
											A3(
												$elm$core$String$padLeft,
												4,
												'0',
												A2($TSFoster$elm_uuid$UUID$toHex, _List_Nil, 65535 & c)),
											A3(
												$elm$core$String$padLeft,
												8,
												'0',
												A2($TSFoster$elm_uuid$UUID$toHex, _List_Nil, d)))))))))));
	});
var $TSFoster$elm_uuid$UUID$toString = $TSFoster$elm_uuid$UUID$toStringWith('-');
var $author$project$Libs$Models$Uuid$generator = A2($elm$random$Random$map, $TSFoster$elm_uuid$UUID$toString, $TSFoster$elm_uuid$UUID$generator);
var $author$project$Models$Project$SourceId$generator = A2($elm$random$Random$map, $author$project$Models$Project$SourceId$new, $author$project$Libs$Models$Uuid$generator);
var $author$project$Libs$Dict$getOrElse = F3(
	function (key, _default, dict) {
		return A2(
			$elm$core$Maybe$withDefault,
			_default,
			A2($elm$core$Dict$get, key, dict));
	});
var $author$project$Components$Atoms$Icon$InformationCircle = 121;
var $author$project$Services$Toasts$info = function (message) {
	return A2(
		$author$project$Services$Toasts$ToastAdd,
		$elm$core$Maybe$Just(8000),
		{A: $author$project$Libs$Tailwind$blue, aa: 121, cq: '', a4: message});
};
var $author$project$Components$Atoms$Icon$CheckCircle = 43;
var $author$project$Services$Toasts$success = function (message) {
	return A2(
		$author$project$Services$Toasts$ToastAdd,
		$elm$core$Maybe$Just(8000),
		{A: $author$project$Libs$Tailwind$green, aa: 43, cq: '', a4: message});
};
var $author$project$Components$Atoms$Icon$ExclamationCircle = 96;
var $author$project$Services$Toasts$warning = function (message) {
	return A2(
		$author$project$Services$Toasts$ToastAdd,
		$elm$core$Maybe$Just(8000),
		{A: $author$project$Libs$Tailwind$yellow, aa: 96, cq: '', a4: message});
};
var $author$project$Services$Toasts$create = F2(
	function (level, message) {
		switch (level) {
			case 'success':
				return $author$project$Services$Toasts$success(message);
			case 'info':
				return $author$project$Services$Toasts$info(message);
			case 'warning':
				return $author$project$Services$Toasts$warning(message);
			default:
				return $author$project$Services$Toasts$error(message);
		}
	});
var $elm$browser$Browser$Navigation$pushUrl = _Browser_pushUrl;
var $author$project$Request$pushRoute = F2(
	function (route, req) {
		return A2(
			$elm$browser$Browser$Navigation$pushUrl,
			req.dk,
			$author$project$Gen$Route$toHref(route));
	});
var $elm$core$Result$toMaybe = function (result) {
	if (!result.$) {
		var v = result.a;
		return $elm$core$Maybe$Just(v);
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $author$project$Ports$unhandledJsMsgError = function (msg) {
	return 'Unhandled JsMessage: ' + function () {
		switch (msg.$) {
			case 0:
				return 'GotSizes';
			case 1:
				return 'GotProject';
			case 2:
				return 'ProjectDeleted';
			case 3:
				return 'GotLocalFile';
			case 4:
				return 'GotTableStats';
			case 5:
				return 'GotColumnStats';
			case 6:
				return 'GotHotkey';
			case 7:
				return 'GotKeyHold';
			case 8:
				return 'GotToast';
			case 9:
				return 'GotTableShow';
			case 10:
				return 'GotTableHide';
			case 11:
				return 'GotTableToggleColumns';
			case 12:
				return 'GotTablePosition';
			case 13:
				return 'GotTableMove';
			case 14:
				return 'GotTableSelect';
			case 15:
				return 'GotTableColor';
			case 16:
				return 'GotColumnShow';
			case 17:
				return 'GotColumnHide';
			case 18:
				return 'GotColumnMove';
			case 19:
				return 'GotFitToScreen';
			default:
				return 'Error';
		}
	}();
};
var $author$project$Models$OrganizationId$zero = $author$project$Libs$Models$Uuid$zero;
var $author$project$PagesComponents$Create$Updates$handleJsMessage = F4(
	function (req, urlOrganization, msg, model) {
		switch (msg.$) {
			case 1:
				var project = msg.a;
				return _Utils_Tuple2(
					model,
					A2(
						$author$project$Request$pushRoute,
						$author$project$Gen$Route$Organization___Project_(
							{
								nx: A2(
									$elm$core$Maybe$withDefault,
									$author$project$Models$OrganizationId$zero,
									A2(
										$author$project$Libs$Maybe$orElse,
										urlOrganization,
										A2(
											$elm$core$Maybe$map,
											function ($) {
												return $.H;
											},
											A2(
												$elm$core$Maybe$andThen,
												function ($) {
													return $.nx;
												},
												A2($elm$core$Maybe$andThen, $elm$core$Result$toMaybe, project))))),
								nN: A3(
									$author$project$Libs$Maybe$mapOrElse,
									function ($) {
										return $.H;
									},
									$author$project$Models$Project$ProjectId$zero,
									A2($elm$core$Maybe$andThen, $elm$core$Result$toMaybe, project))
							}),
						req));
			case 8:
				var level = msg.a;
				var message = msg.b;
				return _Utils_Tuple2(
					model,
					$author$project$Libs$Task$send(
						$author$project$PagesComponents$Create$Models$Toast(
							A2($author$project$Services$Toasts$create, level, message))));
			default:
				return _Utils_Tuple2(
					model,
					$author$project$Libs$Task$send(
						$author$project$PagesComponents$Create$Models$Toast(
							A2(
								$author$project$Services$Toasts$create,
								'warning',
								$author$project$Ports$unhandledJsMsgError(msg)))));
		}
	});
var $author$project$Services$DatabaseSource$init = F2(
	function (src, callback) {
		return {cP: callback, mv: $elm$core$Maybe$Nothing, cv: $elm$core$Maybe$Nothing, g8: $elm$core$Maybe$Nothing, oo: $elm$core$Maybe$Nothing, ov: '', fj: src, o1: ''};
	});
var $author$project$Services$JsonSource$init = F2(
	function (source, callback) {
		return {cP: callback, mv: $elm$core$Maybe$Nothing, cv: $elm$core$Maybe$Nothing, g8: $elm$core$Maybe$Nothing, jT: $elm$core$Maybe$Nothing, jU: $elm$core$Maybe$Nothing, ov: '', fj: source, o1: ''};
	});
var $author$project$Services$SqlSource$init = F2(
	function (source, callback) {
		return {cP: callback, mu: $elm$core$Maybe$Nothing, cv: $elm$core$Maybe$Nothing, g8: $elm$core$Maybe$Nothing, jT: $elm$core$Maybe$Nothing, jU: $elm$core$Maybe$Nothing, fj: source, o1: ''};
	});
var $elm$core$Tuple$mapFirst = F2(
	function (func, _v0) {
		var x = _v0.a;
		var y = _v0.b;
		return _Utils_Tuple2(
			func(x),
			y);
	});
var $elm$core$Platform$Cmd$none = $elm$core$Platform$Cmd$batch(_List_Nil);
var $author$project$Services$Lenses$mapMCmd_ = F4(
	function (get, update, transform, item) {
		return A3(
			$author$project$Libs$Maybe$mapOrElse,
			A2(
				$elm$core$Basics$composeR,
				transform,
				$elm$core$Tuple$mapFirst(
					function (value) {
						return A2(
							update,
							$elm$core$Maybe$Just(value),
							item);
					})),
			_Utils_Tuple2(item, $elm$core$Platform$Cmd$none),
			get(item));
	});
var $author$project$Services$Lenses$set_ = F4(
	function (get, update, value, item) {
		return _Utils_eq(
			get(item),
			value) ? item : A2(update, value, item);
	});
var $author$project$Services$Lenses$setDatabaseSource = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.ca;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{ca: value});
		}));
var $author$project$Services$Lenses$mapDatabaseSourceMCmd = A2(
	$author$project$Services$Lenses$mapMCmd_,
	function ($) {
		return $.ca;
	},
	$author$project$Services$Lenses$setDatabaseSource);
var $author$project$Services$Lenses$setJsonSource = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.cm;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{cm: value});
		}));
var $author$project$Services$Lenses$mapJsonSourceMCmd = A2(
	$author$project$Services$Lenses$mapMCmd_,
	function ($) {
		return $.cm;
	},
	$author$project$Services$Lenses$setJsonSource);
var $author$project$Services$Lenses$setSqlSource = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.cA;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{cA: value});
		}));
var $author$project$Services$Lenses$mapSqlSourceMCmd = A2(
	$author$project$Services$Lenses$mapMCmd_,
	function ($) {
		return $.cA;
	},
	$author$project$Services$Lenses$setSqlSource);
var $author$project$Services$Lenses$mapCmd_ = F4(
	function (get, update, transform, item) {
		return A2(
			$elm$core$Tuple$mapFirst,
			function (value) {
				return A2(update, value, item);
			},
			transform(
				get(item)));
	});
var $author$project$Services$Lenses$setToasts = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.bX;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{bX: value});
		}));
var $author$project$Services$Lenses$mapToastsCmd = A2(
	$author$project$Services$Lenses$mapCmd_,
	function ($) {
		return $.bX;
	},
	$author$project$Services$Lenses$setToasts);
var $author$project$Track$createEvent = F3(
	function (name, details, project) {
		return {
			lp: details,
			eS: name,
			nx: A2(
				$elm$core$Maybe$map,
				function ($) {
					return $.H;
				},
				A2(
					$elm$core$Maybe$andThen,
					function ($) {
						return $.nx;
					},
					project)),
			nN: A2(
				$author$project$Libs$Maybe$filter,
				function (id) {
					return !_Utils_eq(id, $author$project$Models$Project$ProjectId$zero);
				},
				A2(
					$elm$core$Maybe$map,
					function ($) {
						return $.H;
					},
					project))
		};
	});
var $elm$core$List$maximum = function (list) {
	if (list.b) {
		var x = list.a;
		var xs = list.b;
		return $elm$core$Maybe$Just(
			A3($elm$core$List$foldl, $elm$core$Basics$max, x, xs));
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $elm$core$Dict$sizeHelp = F2(
	function (n, dict) {
		sizeHelp:
		while (true) {
			if (dict.$ === -2) {
				return n;
			} else {
				var left = dict.d;
				var right = dict.e;
				var $temp$n = A2($elm$core$Dict$sizeHelp, n + 1, right),
					$temp$dict = left;
				n = $temp$n;
				dict = $temp$dict;
				continue sizeHelp;
			}
		}
	});
var $elm$core$Dict$size = function (dict) {
	return A2($elm$core$Dict$sizeHelp, 0, dict);
};
var $elm$core$List$sum = function (numbers) {
	return A3($elm$core$List$foldl, $elm$core$Basics$add, 0, numbers);
};
var $author$project$Models$ProjectInfo$fromProject = function (p) {
	var tables = A2(
		$author$project$Libs$List$groupBy,
		function ($) {
			return $.H;
		},
		A2(
			$elm$core$List$concatMap,
			function (s) {
				return $elm$core$Dict$values(s.oM);
			},
			p.hs));
	return {
		ic: p.ic,
		bf: p.bf,
		H: p.H,
		eS: p.eS,
		gG: $elm$core$List$sum(
			A2(
				$elm$core$List$map,
				A2(
					$elm$core$Basics$composeR,
					$elm$core$List$map(
						A2(
							$elm$core$Basics$composeR,
							function ($) {
								return $.M;
							},
							$elm$core$Dict$size)),
					A2(
						$elm$core$Basics$composeR,
						$elm$core$List$maximum,
						$elm$core$Maybe$withDefault(0))),
				$elm$core$Dict$values(tables))),
		gH: $elm$core$List$length(
			A2(
				$elm$core$List$concatMap,
				A2(
					$elm$core$Basics$composeR,
					function ($) {
						return $.oM;
					},
					A2(
						$elm$core$Basics$composeR,
						$elm$core$Dict$values,
						$elm$core$List$concatMap(
							function (t) {
								return A2(
									$elm$core$List$filterMap,
									$elm$core$Basics$identity,
									A2(
										$elm$core$List$cons,
										t.h4,
										A2(
											$elm$core$List$map,
											function ($) {
												return $.h4;
											},
											$elm$core$Dict$values(t.M))));
							}))),
				p.hs)),
		gI: $elm$core$Dict$size(p.i$),
		gJ: $elm$core$List$length(
			A2(
				$elm$core$List$concatMap,
				function ($) {
					return $.gw;
				},
				$elm$core$Dict$values(p.i$))),
		gK: $elm$core$Dict$size(p.bP),
		gL: A3(
			$elm$core$List$foldl,
			F2(
				function (src, acc) {
					return acc + $elm$core$List$length(src.bT);
				}),
			0,
			p.hs),
		gM: $elm$core$List$length(p.hs),
		gN: $elm$core$Dict$size(tables),
		gO: $elm$core$Dict$size(p.d3),
		nx: p.nx,
		hr: p.hr,
		cD: p.cD,
		kb: p.kb,
		kd: p.kd,
		hQ: p.hQ
	};
};
var $author$project$Track$projectDetails = function (project) {
	return _List_fromArray(
		[
			_Utils_Tuple2(
			'nb_sources',
			$elm$json$Json$Encode$int(project.gM)),
			_Utils_Tuple2(
			'nb_tables',
			$elm$json$Json$Encode$int(project.gN)),
			_Utils_Tuple2(
			'nb_columns',
			$elm$json$Json$Encode$int(project.gG)),
			_Utils_Tuple2(
			'nb_relations',
			$elm$json$Json$Encode$int(project.gL)),
			_Utils_Tuple2(
			'nb_types',
			$elm$json$Json$Encode$int(project.gO)),
			_Utils_Tuple2(
			'nb_comments',
			$elm$json$Json$Encode$int(project.gH)),
			_Utils_Tuple2(
			'nb_layouts',
			$elm$json$Json$Encode$int(project.gI)),
			_Utils_Tuple2(
			'nb_notes',
			$elm$json$Json$Encode$int(project.gK)),
			_Utils_Tuple2(
			'nb_memos',
			$elm$json$Json$Encode$int(project.gJ))
		]);
};
var $author$project$Track$projectDraftCreated = function (project) {
	return A3(
		$author$project$Track$createEvent,
		'editor_project_draft_created',
		$author$project$Track$projectDetails(
			$author$project$Models$ProjectInfo$fromProject(project)),
		$elm$core$Maybe$Just(project));
};
var $elm$core$Process$sleep = _Process_sleep;
var $author$project$Libs$Task$sendAfter = F2(
	function (millis, msg) {
		return A2(
			$elm$core$Task$perform,
			$elm$core$Basics$always(msg),
			$elm$core$Process$sleep(millis));
	});
var $author$project$Ports$Track = function (a) {
	return {$: 26, a: a};
};
var $author$project$Ports$track = function (event) {
	return $author$project$Ports$messageToJs(
		$author$project$Ports$Track(event));
};
var $author$project$Services$DatabaseSource$BuildSource = function (a) {
	return {$: 4, a: a};
};
var $author$project$Services$DatabaseSource$GotSchema = function (a) {
	return {$: 2, a: a};
};
var $author$project$Services$DatabaseSource$ParseSource = {$: 3};
var $author$project$DataSources$DatabaseMiner$DatabaseAdapter$buildRelation = F2(
	function (origins, relation) {
		return A2(
			$elm$core$Maybe$map,
			function (col) {
				return A4(
					$author$project$Models$Project$Relation$new,
					relation.eS,
					{
						bH: $author$project$Models$Project$ColumnPath$fromString(col.ht),
						aq: _Utils_Tuple2(relation.ht.aI, relation.ht.aq)
					},
					{
						bH: $author$project$Models$Project$ColumnPath$fromString(col.dG),
						aq: _Utils_Tuple2(relation.dG.aI, relation.dG.aq)
					},
					origins);
			},
			$elm$core$List$head(relation.M));
	});
var $author$project$DataSources$Helpers$defaultCheckName = F2(
	function (table, column) {
		return table + ('_' + (column + '_check_az'));
	});
var $author$project$DataSources$DatabaseMiner$DatabaseAdapter$buildCheck = F3(
	function (origins, table, check) {
		return {
			M: A2($elm$core$List$map, $author$project$Models$Project$ColumnPath$fromString, check.M),
			eS: A2(
				$elm$core$Maybe$withDefault,
				A2(
					$author$project$DataSources$Helpers$defaultCheckName,
					table,
					A2(
						$elm$core$Maybe$withDefault,
						'',
						$elm$core$List$head(check.M))),
				check.eS),
			jq: origins,
			nI: check.nI
		};
	});
var $author$project$DataSources$DatabaseMiner$DatabaseAdapter$buildComment = F2(
	function (origins, comment) {
		return {jq: origins, fp: comment};
	});
var $author$project$DataSources$DatabaseMiner$DatabaseAdapter$buildColumn = F3(
	function (origins, index, column) {
		return {
			M: $elm$core$Maybe$Nothing,
			h4: A2(
				$elm$core$Maybe$map,
				$author$project$DataSources$DatabaseMiner$DatabaseAdapter$buildComment(origins),
				column.h4),
			lf: column.lf,
			l7: index,
			gi: column.gi,
			eS: column.eS,
			nf: column.nf,
			jq: origins
		};
	});
var $author$project$DataSources$DatabaseMiner$DatabaseAdapter$buildColumns = F2(
	function (origins, columns) {
		return A2(
			$author$project$Libs$Dict$fromListMap,
			function ($) {
				return $.eS;
			},
			A2(
				$elm$core$List$indexedMap,
				$author$project$DataSources$DatabaseMiner$DatabaseAdapter$buildColumn(origins),
				columns));
	});
var $author$project$DataSources$Helpers$defaultIndexName = F2(
	function (table, column) {
		return table + ('_' + (column + '_index_az'));
	});
var $author$project$DataSources$DatabaseMiner$DatabaseAdapter$buildIndex = F3(
	function (origins, table, index) {
		return A2(
			$elm$core$Maybe$map,
			function (columns) {
				return {
					M: A2($author$project$Libs$Nel$map, $author$project$Models$Project$ColumnPath$fromString, columns),
					ii: index.ii,
					eS: A2(
						$elm$core$Maybe$withDefault,
						A2($author$project$DataSources$Helpers$defaultIndexName, table, columns.ev),
						index.eS),
					jq: origins
				};
			},
			$author$project$Libs$Nel$fromList(index.M));
	});
var $author$project$DataSources$DatabaseMiner$DatabaseAdapter$buildPrimaryKey = F2(
	function (origins, pk) {
		return A2(
			$elm$core$Maybe$map,
			function (columns) {
				return {
					M: A2($author$project$Libs$Nel$map, $author$project$Models$Project$ColumnPath$fromString, columns),
					eS: pk.eS,
					jq: origins
				};
			},
			$author$project$Libs$Nel$fromList(pk.M));
	});
var $author$project$DataSources$Helpers$defaultUniqueName = F2(
	function (table, column) {
		return table + ('_' + (column + '_unique_az'));
	});
var $author$project$DataSources$DatabaseMiner$DatabaseAdapter$buildUnique = F3(
	function (origins, table, unique) {
		return A2(
			$elm$core$Maybe$map,
			function (columns) {
				return {
					M: A2($author$project$Libs$Nel$map, $author$project$Models$Project$ColumnPath$fromString, columns),
					ii: unique.ii,
					eS: A2(
						$elm$core$Maybe$withDefault,
						A2($author$project$DataSources$Helpers$defaultUniqueName, table, columns.ev),
						unique.eS),
					jq: origins
				};
			},
			$author$project$Libs$Nel$fromList(unique.M));
	});
var $author$project$DataSources$DatabaseMiner$DatabaseAdapter$buildTable = F2(
	function (origins, table) {
		return {
			cQ: A2(
				$elm$core$List$map,
				A2($author$project$DataSources$DatabaseMiner$DatabaseAdapter$buildCheck, origins, table.aq),
				table.cQ),
			M: A2($author$project$DataSources$DatabaseMiner$DatabaseAdapter$buildColumns, origins, table.M),
			h4: A2(
				$elm$core$Maybe$map,
				$author$project$DataSources$DatabaseMiner$DatabaseAdapter$buildComment(origins),
				table.h4),
			H: _Utils_Tuple2(table.aI, table.aq),
			dg: A2(
				$elm$core$List$filterMap,
				A2($author$project$DataSources$DatabaseMiner$DatabaseAdapter$buildIndex, origins, table.aq),
				table.dg),
			eS: table.aq,
			jq: origins,
			nL: A2(
				$elm$core$Maybe$andThen,
				$author$project$DataSources$DatabaseMiner$DatabaseAdapter$buildPrimaryKey(origins),
				table.nL),
			aI: table.aI,
			d5: A2(
				$elm$core$List$filterMap,
				A2($author$project$DataSources$DatabaseMiner$DatabaseAdapter$buildUnique, origins, table.aq),
				table.d5),
			o3: table.o3
		};
	});
var $author$project$DataSources$DatabaseMiner$DatabaseAdapter$buildType = F2(
	function (origins, kind) {
		return {
			H: _Utils_Tuple2(kind.aI, kind.eS),
			eS: kind.eS,
			jq: origins,
			a5: A2(
				$elm$core$Maybe$withDefault,
				$author$project$Models$Project$CustomTypeValue$Definition(''),
				A2($elm$core$Maybe$map, $author$project$Models$Project$CustomTypeValue$Enum, kind.o2))
		};
	});
var $author$project$Libs$Models$DatabaseUrl$databaseName = function (url) {
	return A2(
		$elm$core$Maybe$withDefault,
		url,
		$elm$core$List$head(
			$elm$core$List$reverse(
				A2($elm$core$String$split, '/', url))));
};
var $author$project$DataSources$DatabaseMiner$DatabaseAdapter$buildSource = F4(
	function (now, sourceId, url, schema) {
		var origins = _List_fromArray(
			[
				{H: sourceId, a$: _List_Nil}
			]);
		return {
			cX: $elm$core$Array$empty,
			ic: now,
			ip: true,
			iB: $elm$core$Maybe$Nothing,
			H: sourceId,
			gi: $author$project$Models$Project$SourceKind$DatabaseConnection(url),
			eS: $author$project$Libs$Models$DatabaseUrl$databaseName(url),
			bT: A2(
				$elm$core$List$filterMap,
				$author$project$DataSources$DatabaseMiner$DatabaseAdapter$buildRelation(origins),
				schema.bT),
			oM: A2(
				$author$project$Libs$Dict$fromListMap,
				function ($) {
					return $.H;
				},
				A2(
					$elm$core$List$map,
					$author$project$DataSources$DatabaseMiner$DatabaseAdapter$buildTable(origins),
					schema.oM)),
			d3: A2(
				$author$project$Libs$Dict$fromListMap,
				function ($) {
					return $.H;
				},
				A2(
					$elm$core$List$map,
					$author$project$DataSources$DatabaseMiner$DatabaseAdapter$buildType(origins),
					schema.d3)),
			kb: now
		};
	});
var $author$project$Models$Project$SourceKind$toString = function (value) {
	switch (value.$) {
		case 0:
			return 'DatabaseConnection';
		case 1:
			return 'SqlLocalFile';
		case 2:
			return 'SqlRemoteFile';
		case 3:
			return 'JsonLocalFile';
		case 4:
			return 'JsonRemoteFile';
		default:
			return 'AmlEditor';
	}
};
var $author$project$Track$sourceDetails = function (source) {
	return _List_fromArray(
		[
			_Utils_Tuple2(
			'kind',
			$elm$json$Json$Encode$string(
				$author$project$Models$Project$SourceKind$toString(source.gi))),
			_Utils_Tuple2(
			'nb_table',
			$elm$json$Json$Encode$int(
				$elm$core$Dict$size(source.oM))),
			_Utils_Tuple2(
			'nb_relation',
			$elm$json$Json$Encode$int(
				$elm$core$List$length(source.bT)))
		]);
};
var $author$project$Track$dbSourceDetails = function (source) {
	return A3(
		$author$project$Libs$Result$fold,
		function (e) {
			return _List_fromArray(
				[
					_Utils_Tuple2(
					'error',
					$elm$json$Json$Encode$string(e))
				]);
		},
		$author$project$Track$sourceDetails,
		source);
};
var $author$project$Track$dbSourceCreated = F2(
	function (project, source) {
		return A3(
			$author$project$Track$createEvent,
			'editor_source_created',
			_Utils_ap(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'format',
						$elm$json$Json$Encode$string('database'))
					]),
				$author$project$Track$dbSourceDetails(source)),
			project);
	});
var $author$project$DataSources$DatabaseMiner$DatabaseSchema$DatabaseSchema = F3(
	function (tables, relations, types) {
		return {bT: relations, oM: tables, d3: types};
	});
var $author$project$DataSources$DatabaseMiner$Models$DatabaseRelation$DatabaseRelation = F4(
	function (name, src, ref, columns) {
		return {M: columns, eS: name, dG: ref, ht: src};
	});
var $author$project$DataSources$DatabaseMiner$Models$DatabaseRelation$ColumnLink = F2(
	function (src, ref) {
		return {dG: ref, ht: src};
	});
var $author$project$DataSources$DatabaseMiner$Models$DatabaseRelation$decodeColumnLink = A3(
	$elm$json$Json$Decode$map2,
	$author$project$DataSources$DatabaseMiner$Models$DatabaseRelation$ColumnLink,
	A2($elm$json$Json$Decode$field, 'src', $elm$json$Json$Decode$string),
	A2($elm$json$Json$Decode$field, 'ref', $elm$json$Json$Decode$string));
var $author$project$DataSources$DatabaseMiner$Models$DatabaseRelation$DatabaseTableRef = F2(
	function (schema, table) {
		return {aI: schema, aq: table};
	});
var $author$project$DataSources$DatabaseMiner$Models$DatabaseRelation$decodeDatabaseTableRef = A3(
	$elm$json$Json$Decode$map2,
	$author$project$DataSources$DatabaseMiner$Models$DatabaseRelation$DatabaseTableRef,
	A2($elm$json$Json$Decode$field, 'schema', $elm$json$Json$Decode$string),
	A2($elm$json$Json$Decode$field, 'table', $elm$json$Json$Decode$string));
var $author$project$DataSources$DatabaseMiner$Models$DatabaseRelation$decode = A5(
	$elm$json$Json$Decode$map4,
	$author$project$DataSources$DatabaseMiner$Models$DatabaseRelation$DatabaseRelation,
	A2($elm$json$Json$Decode$field, 'name', $elm$json$Json$Decode$string),
	A2($elm$json$Json$Decode$field, 'src', $author$project$DataSources$DatabaseMiner$Models$DatabaseRelation$decodeDatabaseTableRef),
	A2($elm$json$Json$Decode$field, 'ref', $author$project$DataSources$DatabaseMiner$Models$DatabaseRelation$decodeDatabaseTableRef),
	A2(
		$elm$json$Json$Decode$field,
		'columns',
		$elm$json$Json$Decode$list($author$project$DataSources$DatabaseMiner$Models$DatabaseRelation$decodeColumnLink)));
var $author$project$DataSources$DatabaseMiner$Models$DatabaseTable$DatabaseTable = F9(
	function (schema, table, view, columns, primaryKey, uniques, indexes, checks, comment) {
		return {cQ: checks, M: columns, h4: comment, dg: indexes, nL: primaryKey, aI: schema, aq: table, d5: uniques, o3: view};
	});
var $author$project$DataSources$DatabaseMiner$Models$DatabaseTable$DatabaseCheck = F3(
	function (name, columns, predicate) {
		return {M: columns, eS: name, nI: predicate};
	});
var $author$project$DataSources$DatabaseMiner$Models$DatabaseTable$decodeDatabaseCheck = A4(
	$elm$json$Json$Decode$map3,
	$author$project$DataSources$DatabaseMiner$Models$DatabaseTable$DatabaseCheck,
	A2($author$project$Libs$Json$Decode$maybeField, 'name', $elm$json$Json$Decode$string),
	A2(
		$elm$json$Json$Decode$field,
		'columns',
		$elm$json$Json$Decode$list($elm$json$Json$Decode$string)),
	A2($author$project$Libs$Json$Decode$maybeField, 'predicate', $elm$json$Json$Decode$string));
var $author$project$DataSources$DatabaseMiner$Models$DatabaseTable$DatabaseColumn = F5(
	function (name, kind, nullable, _default, comment) {
		return {h4: comment, lf: _default, gi: kind, eS: name, nf: nullable};
	});
var $author$project$DataSources$DatabaseMiner$Models$DatabaseTable$decodeDatabaseColumn = A6(
	$elm$json$Json$Decode$map5,
	$author$project$DataSources$DatabaseMiner$Models$DatabaseTable$DatabaseColumn,
	A2($elm$json$Json$Decode$field, 'name', $elm$json$Json$Decode$string),
	A2($elm$json$Json$Decode$field, 'type', $elm$json$Json$Decode$string),
	A2($elm$json$Json$Decode$field, 'nullable', $elm$json$Json$Decode$bool),
	A2($author$project$Libs$Json$Decode$maybeField, 'default', $elm$json$Json$Decode$string),
	A2($author$project$Libs$Json$Decode$maybeField, 'comment', $elm$json$Json$Decode$string));
var $author$project$DataSources$DatabaseMiner$Models$DatabaseTable$DatabaseIndex = F3(
	function (name, columns, definition) {
		return {M: columns, ii: definition, eS: name};
	});
var $author$project$DataSources$DatabaseMiner$Models$DatabaseTable$decodeDatabaseIndex = A4(
	$elm$json$Json$Decode$map3,
	$author$project$DataSources$DatabaseMiner$Models$DatabaseTable$DatabaseIndex,
	A2($author$project$Libs$Json$Decode$maybeField, 'name', $elm$json$Json$Decode$string),
	A2(
		$elm$json$Json$Decode$field,
		'columns',
		$elm$json$Json$Decode$list($elm$json$Json$Decode$string)),
	A2($author$project$Libs$Json$Decode$maybeField, 'definition', $elm$json$Json$Decode$string));
var $author$project$DataSources$DatabaseMiner$Models$DatabaseTable$DatabasePrimaryKey = F2(
	function (name, columns) {
		return {M: columns, eS: name};
	});
var $author$project$DataSources$DatabaseMiner$Models$DatabaseTable$decodeDatabasePrimaryKey = A3(
	$elm$json$Json$Decode$map2,
	$author$project$DataSources$DatabaseMiner$Models$DatabaseTable$DatabasePrimaryKey,
	A2($author$project$Libs$Json$Decode$maybeField, 'name', $elm$json$Json$Decode$string),
	A2(
		$elm$json$Json$Decode$field,
		'columns',
		$elm$json$Json$Decode$list($elm$json$Json$Decode$string)));
var $author$project$DataSources$DatabaseMiner$Models$DatabaseTable$DatabaseUnique = F3(
	function (name, columns, definition) {
		return {M: columns, ii: definition, eS: name};
	});
var $author$project$DataSources$DatabaseMiner$Models$DatabaseTable$decodeDatabaseUnique = A4(
	$elm$json$Json$Decode$map3,
	$author$project$DataSources$DatabaseMiner$Models$DatabaseTable$DatabaseUnique,
	A2($author$project$Libs$Json$Decode$maybeField, 'name', $elm$json$Json$Decode$string),
	A2(
		$elm$json$Json$Decode$field,
		'columns',
		$elm$json$Json$Decode$list($elm$json$Json$Decode$string)),
	A2($author$project$Libs$Json$Decode$maybeField, 'definition', $elm$json$Json$Decode$string));
var $author$project$Libs$Json$Decode$map9 = function (callback) {
	return function (da) {
		return function (db) {
			return function (dc) {
				return function (dd) {
					return function (de) {
						return function (df) {
							return function (dg) {
								return function (dh) {
									return function (di) {
										return A3(
											$elm$json$Json$Decode$map2,
											F2(
												function (_v0, _v3) {
													var _v1 = _v0.a;
													var a = _v1.a;
													var b = _v1.b;
													var c = _v1.c;
													var _v2 = _v0.b;
													var d = _v2.a;
													var e = _v2.b;
													var f = _v2.c;
													var g = _v3.a;
													var h = _v3.b;
													var i = _v3.c;
													return A9(callback, a, b, c, d, e, f, g, h, i);
												}),
											A7(
												$elm$json$Json$Decode$map6,
												F6(
													function (a, b, c, d, e, f) {
														return _Utils_Tuple2(
															_Utils_Tuple3(a, b, c),
															_Utils_Tuple3(d, e, f));
													}),
												da,
												db,
												dc,
												dd,
												de,
												df),
											A4(
												$elm$json$Json$Decode$map3,
												F3(
													function (g, h, i) {
														return _Utils_Tuple3(g, h, i);
													}),
												dg,
												dh,
												di));
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var $author$project$DataSources$DatabaseMiner$Models$DatabaseTable$decode = $author$project$Libs$Json$Decode$map9($author$project$DataSources$DatabaseMiner$Models$DatabaseTable$DatabaseTable)(
	A2($elm$json$Json$Decode$field, 'schema', $elm$json$Json$Decode$string))(
	A2($elm$json$Json$Decode$field, 'table', $elm$json$Json$Decode$string))(
	A2($elm$json$Json$Decode$field, 'view', $elm$json$Json$Decode$bool))(
	A2(
		$elm$json$Json$Decode$field,
		'columns',
		$elm$json$Json$Decode$list($author$project$DataSources$DatabaseMiner$Models$DatabaseTable$decodeDatabaseColumn)))(
	A2($author$project$Libs$Json$Decode$maybeField, 'primaryKey', $author$project$DataSources$DatabaseMiner$Models$DatabaseTable$decodeDatabasePrimaryKey))(
	A2(
		$elm$json$Json$Decode$field,
		'uniques',
		$elm$json$Json$Decode$list($author$project$DataSources$DatabaseMiner$Models$DatabaseTable$decodeDatabaseUnique)))(
	A2(
		$elm$json$Json$Decode$field,
		'indexes',
		$elm$json$Json$Decode$list($author$project$DataSources$DatabaseMiner$Models$DatabaseTable$decodeDatabaseIndex)))(
	A2(
		$elm$json$Json$Decode$field,
		'checks',
		$elm$json$Json$Decode$list($author$project$DataSources$DatabaseMiner$Models$DatabaseTable$decodeDatabaseCheck)))(
	A2($author$project$Libs$Json$Decode$maybeField, 'comment', $elm$json$Json$Decode$string));
var $author$project$DataSources$DatabaseMiner$Models$DatabaseType$DatabaseType = F3(
	function (schema, name, values) {
		return {eS: name, aI: schema, o2: values};
	});
var $author$project$DataSources$DatabaseMiner$Models$DatabaseType$decode = A4(
	$elm$json$Json$Decode$map3,
	$author$project$DataSources$DatabaseMiner$Models$DatabaseType$DatabaseType,
	A2($elm$json$Json$Decode$field, 'schema', $elm$json$Json$Decode$string),
	A2($elm$json$Json$Decode$field, 'name', $elm$json$Json$Decode$string),
	A2(
		$author$project$Libs$Json$Decode$maybeField,
		'values',
		$elm$json$Json$Decode$list($elm$json$Json$Decode$string)));
var $author$project$DataSources$DatabaseMiner$DatabaseSchema$decode = A4(
	$elm$json$Json$Decode$map3,
	$author$project$DataSources$DatabaseMiner$DatabaseSchema$DatabaseSchema,
	A2(
		$elm$json$Json$Decode$field,
		'tables',
		$elm$json$Json$Decode$list($author$project$DataSources$DatabaseMiner$Models$DatabaseTable$decode)),
	A2(
		$elm$json$Json$Decode$field,
		'relations',
		$elm$json$Json$Decode$list($author$project$DataSources$DatabaseMiner$Models$DatabaseRelation$decode)),
	A2(
		$elm$json$Json$Decode$field,
		'types',
		$elm$json$Json$Decode$list($author$project$DataSources$DatabaseMiner$Models$DatabaseType$decode)));
var $elm$json$Json$Decode$decodeString = _Json_runOnString;
var $author$project$DataSources$DatabaseMiner$DatabaseSchema$empty = {bT: _List_Nil, oM: _List_Nil, d3: _List_Nil};
var $author$project$Services$Backend$errorToString = function (_v0) {
	var err = _v0.b;
	return err;
};
var $elm$http$Http$BadStatus_ = F2(
	function (a, b) {
		return {$: 3, a: a, b: b};
	});
var $elm$http$Http$BadUrl_ = function (a) {
	return {$: 0, a: a};
};
var $elm$http$Http$GoodStatus_ = F2(
	function (a, b) {
		return {$: 4, a: a, b: b};
	});
var $elm$http$Http$NetworkError_ = {$: 2};
var $elm$http$Http$Receiving = function (a) {
	return {$: 1, a: a};
};
var $elm$http$Http$Sending = function (a) {
	return {$: 0, a: a};
};
var $elm$http$Http$Timeout_ = {$: 1};
var $elm$core$Maybe$isJust = function (maybe) {
	if (!maybe.$) {
		return true;
	} else {
		return false;
	}
};
var $elm$core$Platform$sendToSelf = _Platform_sendToSelf;
var $elm$http$Http$expectStringResponse = F2(
	function (toMsg, toResult) {
		return A3(
			_Http_expect,
			'',
			$elm$core$Basics$identity,
			A2($elm$core$Basics$composeR, toResult, toMsg));
	});
var $elm$http$Http$BadStatus = function (a) {
	return {$: 3, a: a};
};
var $elm$http$Http$BadUrl = function (a) {
	return {$: 0, a: a};
};
var $author$project$Services$Backend$Error = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $elm$http$Http$NetworkError = {$: 2};
var $elm$http$Http$Timeout = {$: 1};
var $author$project$Libs$Http$errorToString = function (error) {
	switch (error.$) {
		case 0:
			var url = error.a;
			return 'The URL ' + (url + ' was invalid');
		case 1:
			return 'Unable to reach the server, try again';
		case 2:
			return 'Unable to reach the server, check your network connection';
		case 3:
			switch (error.a) {
				case 500:
					return 'The server had a problem, try again later';
				case 400:
					return 'Verify your information and try again';
				case 404:
					return 'Not found';
				default:
					var code = error.a;
					return 'Unknown error (code: ' + ($elm$core$String$fromInt(code) + ')');
			}
		default:
			var errorMessage = error.a;
			return errorMessage;
	}
};
var $author$project$Services$Backend$buildError = function (error) {
	if (error.$ === 3) {
		var status = error.a;
		return A2(
			$author$project$Services$Backend$Error,
			status,
			$author$project$Libs$Http$errorToString(error));
	} else {
		return A2(
			$author$project$Services$Backend$Error,
			0,
			$author$project$Libs$Http$errorToString(error));
	}
};
var $author$project$Services$Backend$errorDecoder = A2($elm$json$Json$Decode$field, 'message', $elm$json$Json$Decode$string);
var $author$project$Services$Backend$handleResponse = function (response) {
	switch (response.$) {
		case 0:
			var badUrl = response.a;
			return $elm$core$Result$Err(
				$author$project$Services$Backend$buildError(
					$elm$http$Http$BadUrl(badUrl)));
		case 1:
			return $elm$core$Result$Err(
				$author$project$Services$Backend$buildError($elm$http$Http$Timeout));
		case 2:
			return $elm$core$Result$Err(
				$author$project$Services$Backend$buildError($elm$http$Http$NetworkError));
		case 3:
			var metadata = response.a;
			var body = response.b;
			var _v1 = A2($elm$json$Json$Decode$decodeString, $author$project$Services$Backend$errorDecoder, body);
			if (!_v1.$) {
				var err = _v1.a;
				return $elm$core$Result$Err(
					A2($author$project$Services$Backend$Error, metadata.hv, err));
			} else {
				return $elm$core$Result$Err(
					A2(
						$author$project$Services$Backend$Error,
						metadata.hv,
						_Utils_ap(
							$author$project$Libs$Http$errorToString(
								$elm$http$Http$BadStatus(metadata.hv)),
							A3(
								$author$project$Libs$Bool$cond,
								$elm$core$String$isEmpty(body),
								'',
								': ' + body))));
			}
		default:
			var body = response.b;
			return $elm$core$Result$Ok(body);
	}
};
var $elm$http$Http$jsonBody = function (value) {
	return A2(
		_Http_pair,
		'application/json',
		A2($elm$json$Json$Encode$encode, 0, value));
};
var $elm$http$Http$Request = function (a) {
	return {$: 1, a: a};
};
var $elm$http$Http$State = F2(
	function (reqs, subs) {
		return {jH: reqs, j1: subs};
	});
var $elm$http$Http$init = $elm$core$Task$succeed(
	A2($elm$http$Http$State, $elm$core$Dict$empty, _List_Nil));
var $elm$core$Process$kill = _Scheduler_kill;
var $elm$core$Process$spawn = _Scheduler_spawn;
var $elm$http$Http$updateReqs = F3(
	function (router, cmds, reqs) {
		updateReqs:
		while (true) {
			if (!cmds.b) {
				return $elm$core$Task$succeed(reqs);
			} else {
				var cmd = cmds.a;
				var otherCmds = cmds.b;
				if (!cmd.$) {
					var tracker = cmd.a;
					var _v2 = A2($elm$core$Dict$get, tracker, reqs);
					if (_v2.$ === 1) {
						var $temp$router = router,
							$temp$cmds = otherCmds,
							$temp$reqs = reqs;
						router = $temp$router;
						cmds = $temp$cmds;
						reqs = $temp$reqs;
						continue updateReqs;
					} else {
						var pid = _v2.a;
						return A2(
							$elm$core$Task$andThen,
							function (_v3) {
								return A3(
									$elm$http$Http$updateReqs,
									router,
									otherCmds,
									A2($elm$core$Dict$remove, tracker, reqs));
							},
							$elm$core$Process$kill(pid));
					}
				} else {
					var req = cmd.a;
					return A2(
						$elm$core$Task$andThen,
						function (pid) {
							var _v4 = req.hM;
							if (_v4.$ === 1) {
								return A3($elm$http$Http$updateReqs, router, otherCmds, reqs);
							} else {
								var tracker = _v4.a;
								return A3(
									$elm$http$Http$updateReqs,
									router,
									otherCmds,
									A3($elm$core$Dict$insert, tracker, pid, reqs));
							}
						},
						$elm$core$Process$spawn(
							A3(
								_Http_toTask,
								router,
								$elm$core$Platform$sendToApp(router),
								req)));
				}
			}
		}
	});
var $elm$http$Http$onEffects = F4(
	function (router, cmds, subs, state) {
		return A2(
			$elm$core$Task$andThen,
			function (reqs) {
				return $elm$core$Task$succeed(
					A2($elm$http$Http$State, reqs, subs));
			},
			A3($elm$http$Http$updateReqs, router, cmds, state.jH));
	});
var $elm$http$Http$maybeSend = F4(
	function (router, desiredTracker, progress, _v0) {
		var actualTracker = _v0.a;
		var toMsg = _v0.b;
		return _Utils_eq(desiredTracker, actualTracker) ? $elm$core$Maybe$Just(
			A2(
				$elm$core$Platform$sendToApp,
				router,
				toMsg(progress))) : $elm$core$Maybe$Nothing;
	});
var $elm$http$Http$onSelfMsg = F3(
	function (router, _v0, state) {
		var tracker = _v0.a;
		var progress = _v0.b;
		return A2(
			$elm$core$Task$andThen,
			function (_v1) {
				return $elm$core$Task$succeed(state);
			},
			$elm$core$Task$sequence(
				A2(
					$elm$core$List$filterMap,
					A3($elm$http$Http$maybeSend, router, tracker, progress),
					state.j1)));
	});
var $elm$http$Http$Cancel = function (a) {
	return {$: 0, a: a};
};
var $elm$http$Http$cmdMap = F2(
	function (func, cmd) {
		if (!cmd.$) {
			var tracker = cmd.a;
			return $elm$http$Http$Cancel(tracker);
		} else {
			var r = cmd.a;
			return $elm$http$Http$Request(
				{
					kp: r.kp,
					kM: r.kM,
					lI: A2(_Http_mapExpect, func, r.lI),
					f9: r.f9,
					gy: r.gy,
					hK: r.hK,
					hM: r.hM,
					o1: r.o1
				});
		}
	});
var $elm$http$Http$MySub = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $elm$http$Http$subMap = F2(
	function (func, _v0) {
		var tracker = _v0.a;
		var toMsg = _v0.b;
		return A2(
			$elm$http$Http$MySub,
			tracker,
			A2($elm$core$Basics$composeR, toMsg, func));
	});
_Platform_effectManagers['Http'] = _Platform_createManager($elm$http$Http$init, $elm$http$Http$onEffects, $elm$http$Http$onSelfMsg, $elm$http$Http$cmdMap, $elm$http$Http$subMap);
var $elm$http$Http$command = _Platform_leaf('Http');
var $elm$http$Http$subscription = _Platform_leaf('Http');
var $elm$http$Http$riskyRequest = function (r) {
	return $elm$http$Http$command(
		$elm$http$Http$Request(
			{kp: true, kM: r.kM, lI: r.lI, f9: r.f9, gy: r.gy, hK: r.hK, hM: r.hM, o1: r.o1}));
};
var $author$project$Services$Backend$riskyPost = function (r) {
	return $elm$http$Http$riskyRequest(
		{kM: r.kM, lI: r.lI, f9: _List_Nil, gy: 'POST', hK: $elm$core$Maybe$Nothing, hM: $elm$core$Maybe$Nothing, o1: r.o1});
};
var $author$project$Services$Backend$getDatabaseSchema = F2(
	function (url, toMsg) {
		return $author$project$Services$Backend$riskyPost(
			{
				kM: $elm$http$Http$jsonBody(
					$elm$json$Json$Encode$object(
						_List_fromArray(
							[
								_Utils_Tuple2(
								'url',
								$author$project$Libs$Models$DatabaseUrl$encode(url))
							]))),
				lI: A2($elm$http$Http$expectStringResponse, toMsg, $author$project$Services$Backend$handleResponse),
				o1: '/api/v1/analyzer/schema'
			});
	});
var $elm$core$Result$map = F2(
	function (func, ra) {
		if (!ra.$) {
			var a = ra.a;
			return $elm$core$Result$Ok(
				func(a));
		} else {
			var e = ra.a;
			return $elm$core$Result$Err(e);
		}
	});
var $elm$core$Result$mapError = F2(
	function (f, result) {
		if (!result.$) {
			var v = result.a;
			return $elm$core$Result$Ok(v);
		} else {
			var e = result.a;
			return $elm$core$Result$Err(
				f(e));
		}
	});
var $author$project$Services$Lenses$map_ = F4(
	function (get, update, transform, item) {
		return A2(
			update,
			transform(
				get(item)),
			item);
	});
var $author$project$Services$Lenses$setShow = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.ov;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{ov: value});
		}));
var $author$project$Services$Lenses$mapShow = A2(
	$author$project$Services$Lenses$map_,
	function ($) {
		return $.ov;
	},
	$author$project$Services$Lenses$setShow);
var $author$project$Services$DatabaseSource$update = F5(
	function (wrap, now, project, msg, model) {
		switch (msg.$) {
			case 0:
				var url = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{o1: url}),
					$elm$core$Platform$Cmd$none);
			case 1:
				var schemaUrl = msg.a;
				return (schemaUrl === '') ? _Utils_Tuple2(
					function (m) {
						return _Utils_update(
							m,
							{o1: schemaUrl});
					}(
						A2($author$project$Services$DatabaseSource$init, model.fj, model.cP)),
					$elm$core$Platform$Cmd$none) : _Utils_Tuple2(
					function (m) {
						return _Utils_update(
							m,
							{
								oo: $elm$core$Maybe$Just(
									$elm$core$Result$Ok(schemaUrl)),
								o1: schemaUrl
							});
					}(
						A2($author$project$Services$DatabaseSource$init, model.fj, model.cP)),
					A2(
						$author$project$Services$Backend$getDatabaseSchema,
						schemaUrl,
						A2($elm$core$Basics$composeR, $author$project$Services$DatabaseSource$GotSchema, wrap)));
			case 2:
				var result = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{
							mv: $elm$core$Maybe$Just(result)
						}),
					$author$project$Libs$Task$send(
						wrap($author$project$Services$DatabaseSource$ParseSource)));
			case 3:
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{
							cv: A2(
								$elm$core$Maybe$map,
								$elm$json$Json$Decode$decodeString($author$project$DataSources$DatabaseMiner$DatabaseSchema$decode),
								A2($elm$core$Maybe$andThen, $elm$core$Result$toMaybe, model.mv))
						}),
					A2(
						$elm$random$Random$generate,
						A2($elm$core$Basics$composeR, $author$project$Services$DatabaseSource$BuildSource, wrap),
						$author$project$Models$Project$SourceId$generator));
			case 4:
				var sourceId = msg.a;
				return function (source) {
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{g8: source}),
						A2(
							$elm$core$Maybe$withDefault,
							$author$project$Ports$track(
								A2(
									$author$project$Track$dbSourceCreated,
									project,
									$elm$core$Result$Err('Source not available'))),
							A2(
								$elm$core$Maybe$map,
								function (s) {
									return $elm$core$Platform$Cmd$batch(
										_List_fromArray(
											[
												$author$project$Libs$Task$send(
												model.cP(s)),
												$author$project$Ports$track(
												A2($author$project$Track$dbSourceCreated, project, s))
											]));
								},
								source)));
				}(
					A3(
						$elm$core$Maybe$map2,
						function (url) {
							return $elm$core$Result$map(
								A3(
									$author$project$DataSources$DatabaseMiner$DatabaseAdapter$buildSource,
									now,
									A3(
										$author$project$Libs$Maybe$mapOrElse,
										function ($) {
											return $.H;
										},
										sourceId,
										model.fj),
									url));
						},
						A2($elm$core$Maybe$andThen, $elm$core$Result$toMaybe, model.oo),
						A2(
							$author$project$Libs$Maybe$orElse,
							A2(
								$elm$core$Maybe$map,
								A2(
									$elm$core$Basics$composeR,
									$elm$core$Result$map(
										function (_v1) {
											return $author$project$DataSources$DatabaseMiner$DatabaseSchema$empty;
										}),
									$elm$core$Result$mapError($author$project$Services$Backend$errorToString)),
								model.mv),
							A2(
								$elm$core$Maybe$map,
								$elm$core$Result$mapError($elm$json$Json$Decode$errorToString),
								model.cv))));
			default:
				var htmlId = msg.a;
				return _Utils_Tuple2(
					A2(
						$author$project$Services$Lenses$mapShow,
						function (s) {
							return A3(
								$author$project$Libs$Bool$cond,
								_Utils_eq(s, htmlId),
								'',
								htmlId);
						},
						model),
					$elm$core$Platform$Cmd$none);
		}
	});
var $author$project$Services$JsonSource$BuildSource = {$: 6};
var $author$project$Services$JsonSource$GotFile = F2(
	function (a, b) {
		return {$: 4, a: a, b: b};
	});
var $author$project$Services$JsonSource$GotRemoteFile = F2(
	function (a, b) {
		return {$: 2, a: a, b: b};
	});
var $author$project$Services$JsonSource$ParseSource = {$: 5};
var $author$project$DataSources$JsonMiner$JsonAdapter$buildRelation = F2(
	function (origins, relation) {
		return A4(
			$author$project$Models$Project$Relation$new,
			relation.eS,
			{
				bH: $author$project$Models$Project$ColumnPath$fromString(relation.ht.bH),
				aq: _Utils_Tuple2(relation.ht.aI, relation.ht.aq)
			},
			{
				bH: $author$project$Models$Project$ColumnPath$fromString(relation.dG.bH),
				aq: _Utils_Tuple2(relation.dG.aI, relation.dG.aq)
			},
			origins);
	});
var $author$project$DataSources$JsonMiner$JsonAdapter$buildCheck = F3(
	function (origins, table, check) {
		return {
			M: A2($elm$core$List$map, $author$project$Models$Project$ColumnPath$fromString, check.M),
			eS: A2(
				$elm$core$Maybe$withDefault,
				A2(
					$author$project$DataSources$Helpers$defaultCheckName,
					table,
					A2(
						$elm$core$Maybe$withDefault,
						'',
						$elm$core$List$head(check.M))),
				check.eS),
			jq: origins,
			nI: check.nI
		};
	});
var $author$project$DataSources$JsonMiner$JsonAdapter$buildComment = F2(
	function (origins, comment) {
		return {jq: origins, fp: comment};
	});
var $author$project$DataSources$JsonMiner$JsonAdapter$buildColumn = F3(
	function (origins, index, column) {
		return {
			M: A2($elm$core$Maybe$map, $author$project$DataSources$JsonMiner$JsonAdapter$buildNestedColumns, column.M),
			h4: A2(
				$elm$core$Maybe$map,
				$author$project$DataSources$JsonMiner$JsonAdapter$buildComment(origins),
				column.h4),
			lf: column.lf,
			l7: index,
			gi: column.gi,
			eS: column.eS,
			nf: A2($elm$core$Maybe$withDefault, false, column.nf),
			jq: origins
		};
	});
var $author$project$DataSources$JsonMiner$JsonAdapter$buildNestedColumns = function (_v0) {
	var columns = _v0;
	return A2(
		$author$project$Libs$Ned$fromNelMap,
		function ($) {
			return $.eS;
		},
		A2(
			$author$project$Libs$Nel$indexedMap,
			$author$project$DataSources$JsonMiner$JsonAdapter$buildColumn(_List_Nil),
			columns));
};
var $author$project$DataSources$JsonMiner$JsonAdapter$buildColumns = F2(
	function (origins, columns) {
		return A2(
			$author$project$Libs$Dict$fromListMap,
			function ($) {
				return $.eS;
			},
			A2(
				$elm$core$List$indexedMap,
				$author$project$DataSources$JsonMiner$JsonAdapter$buildColumn(origins),
				columns));
	});
var $author$project$DataSources$JsonMiner$JsonAdapter$buildIndex = F3(
	function (origins, table, index) {
		return {
			M: A2($author$project$Libs$Nel$map, $author$project$Models$Project$ColumnPath$fromString, index.M),
			ii: index.ii,
			eS: A2(
				$elm$core$Maybe$withDefault,
				A2($author$project$DataSources$Helpers$defaultIndexName, table, index.M.ev),
				index.eS),
			jq: origins
		};
	});
var $author$project$DataSources$JsonMiner$JsonAdapter$buildPrimaryKey = F2(
	function (origins, pk) {
		return {
			M: A2($author$project$Libs$Nel$map, $author$project$Models$Project$ColumnPath$fromString, pk.M),
			eS: pk.eS,
			jq: origins
		};
	});
var $author$project$DataSources$JsonMiner$JsonAdapter$buildUnique = F3(
	function (origins, table, unique) {
		return {
			M: A2($author$project$Libs$Nel$map, $author$project$Models$Project$ColumnPath$fromString, unique.M),
			ii: unique.ii,
			eS: A2(
				$elm$core$Maybe$withDefault,
				A2($author$project$DataSources$Helpers$defaultUniqueName, table, unique.M.ev),
				unique.eS),
			jq: origins
		};
	});
var $author$project$DataSources$JsonMiner$JsonAdapter$buildTable = F2(
	function (origins, table) {
		return {
			cQ: A2(
				$elm$core$List$map,
				A2($author$project$DataSources$JsonMiner$JsonAdapter$buildCheck, origins, table.aq),
				table.cQ),
			M: A2($author$project$DataSources$JsonMiner$JsonAdapter$buildColumns, origins, table.M),
			h4: A2(
				$elm$core$Maybe$map,
				$author$project$DataSources$JsonMiner$JsonAdapter$buildComment(origins),
				table.h4),
			H: _Utils_Tuple2(table.aI, table.aq),
			dg: A2(
				$elm$core$List$map,
				A2($author$project$DataSources$JsonMiner$JsonAdapter$buildIndex, origins, table.aq),
				table.dg),
			eS: table.aq,
			jq: origins,
			nL: A2(
				$elm$core$Maybe$map,
				$author$project$DataSources$JsonMiner$JsonAdapter$buildPrimaryKey(origins),
				table.nL),
			aI: table.aI,
			d5: A2(
				$elm$core$List$map,
				A2($author$project$DataSources$JsonMiner$JsonAdapter$buildUnique, origins, table.aq),
				table.d5),
			o3: A2($elm$core$Maybe$withDefault, false, table.o3)
		};
	});
var $author$project$DataSources$JsonMiner$JsonAdapter$buildType = F2(
	function (origins, t) {
		return function (value) {
			return {
				H: _Utils_Tuple2(t.aI, t.eS),
				eS: t.eS,
				jq: origins,
				a5: value
			};
		}(
			function () {
				var _v0 = t.a5;
				if (!_v0.$) {
					var values = _v0.a;
					return $author$project$Models$Project$CustomTypeValue$Enum(values);
				} else {
					var definition = _v0.a;
					return $author$project$Models$Project$CustomTypeValue$Definition(definition);
				}
			}());
	});
var $author$project$DataSources$JsonMiner$JsonAdapter$buildSource = F2(
	function (source, schema) {
		var origins = _List_fromArray(
			[
				{H: source.H, a$: _List_Nil}
			]);
		return {
			cX: $elm$core$Array$empty,
			ic: source.ic,
			ip: source.ip,
			iB: source.iB,
			H: source.H,
			gi: source.gi,
			eS: source.eS,
			bT: A2(
				$elm$core$List$map,
				$author$project$DataSources$JsonMiner$JsonAdapter$buildRelation(origins),
				schema.bT),
			oM: A2(
				$author$project$Libs$Dict$fromListMap,
				function ($) {
					return $.H;
				},
				A2(
					$elm$core$List$map,
					$author$project$DataSources$JsonMiner$JsonAdapter$buildTable(origins),
					schema.oM)),
			d3: A2(
				$author$project$Libs$Dict$fromListMap,
				function ($) {
					return $.H;
				},
				A2(
					$elm$core$List$map,
					$author$project$DataSources$JsonMiner$JsonAdapter$buildType(origins),
					schema.d3)),
			kb: source.kb
		};
	});
var $author$project$DataSources$JsonMiner$JsonSchema$JsonSchema = F3(
	function (tables, relations, types) {
		return {bT: relations, oM: tables, d3: types};
	});
var $author$project$DataSources$JsonMiner$Models$JsonRelation$JsonRelation = F3(
	function (name, src, ref) {
		return {eS: name, dG: ref, ht: src};
	});
var $author$project$DataSources$JsonMiner$Models$JsonRelation$JsonColumnRef = F3(
	function (schema, table, column) {
		return {bH: column, aI: schema, aq: table};
	});
var $author$project$DataSources$JsonMiner$Models$JsonRelation$decodeJsonColumnRef = A4(
	$elm$json$Json$Decode$map3,
	$author$project$DataSources$JsonMiner$Models$JsonRelation$JsonColumnRef,
	A2($elm$json$Json$Decode$field, 'schema', $elm$json$Json$Decode$string),
	A2($elm$json$Json$Decode$field, 'table', $elm$json$Json$Decode$string),
	A2($elm$json$Json$Decode$field, 'column', $elm$json$Json$Decode$string));
var $author$project$DataSources$JsonMiner$Models$JsonRelation$decode = A4(
	$elm$json$Json$Decode$map3,
	$author$project$DataSources$JsonMiner$Models$JsonRelation$JsonRelation,
	A2($elm$json$Json$Decode$field, 'name', $elm$json$Json$Decode$string),
	A2($elm$json$Json$Decode$field, 'src', $author$project$DataSources$JsonMiner$Models$JsonRelation$decodeJsonColumnRef),
	A2($elm$json$Json$Decode$field, 'ref', $author$project$DataSources$JsonMiner$Models$JsonRelation$decodeJsonColumnRef));
var $author$project$DataSources$JsonMiner$Models$JsonTable$JsonTable = F9(
	function (schema, table, view, columns, primaryKey, uniques, indexes, checks, comment) {
		return {cQ: checks, M: columns, h4: comment, dg: indexes, nL: primaryKey, aI: schema, aq: table, d5: uniques, o3: view};
	});
var $author$project$DataSources$JsonMiner$Models$JsonTable$JsonCheck = F3(
	function (name, columns, predicate) {
		return {M: columns, eS: name, nI: predicate};
	});
var $author$project$DataSources$JsonMiner$Models$JsonTable$decodeJsonCheck = A4(
	$elm$json$Json$Decode$map3,
	$author$project$DataSources$JsonMiner$Models$JsonTable$JsonCheck,
	A2($author$project$Libs$Json$Decode$maybeField, 'name', $elm$json$Json$Decode$string),
	A2(
		$elm$json$Json$Decode$field,
		'columns',
		$elm$json$Json$Decode$list($elm$json$Json$Decode$string)),
	A2($author$project$Libs$Json$Decode$maybeField, 'predicate', $elm$json$Json$Decode$string));
var $author$project$DataSources$JsonMiner$Models$JsonTable$JsonColumn = F6(
	function (name, kind, nullable, _default, comment, columns) {
		return {M: columns, h4: comment, lf: _default, gi: kind, eS: name, nf: nullable};
	});
var $author$project$DataSources$JsonMiner$Models$JsonTable$JsonNestedColumns = $elm$core$Basics$identity;
function $author$project$DataSources$JsonMiner$Models$JsonTable$cyclic$decodeJsonColumn() {
	return A7(
		$elm$json$Json$Decode$map6,
		$author$project$DataSources$JsonMiner$Models$JsonTable$JsonColumn,
		A2($elm$json$Json$Decode$field, 'name', $elm$json$Json$Decode$string),
		A2($elm$json$Json$Decode$field, 'type', $elm$json$Json$Decode$string),
		A2($author$project$Libs$Json$Decode$maybeField, 'nullable', $elm$json$Json$Decode$bool),
		A2($author$project$Libs$Json$Decode$maybeField, 'default', $elm$json$Json$Decode$string),
		A2($author$project$Libs$Json$Decode$maybeField, 'comment', $elm$json$Json$Decode$string),
		A2(
			$author$project$Libs$Json$Decode$maybeField,
			'columns',
			$author$project$DataSources$JsonMiner$Models$JsonTable$cyclic$decodeJsonNestedColumns()));
}
function $author$project$DataSources$JsonMiner$Models$JsonTable$cyclic$decodeJsonNestedColumns() {
	return A2(
		$elm$json$Json$Decode$map,
		$elm$core$Basics$identity,
		$author$project$Libs$Json$Decode$nel(
			$elm$json$Json$Decode$lazy(
				function (_v0) {
					return $author$project$DataSources$JsonMiner$Models$JsonTable$cyclic$decodeJsonColumn();
				})));
}
var $author$project$DataSources$JsonMiner$Models$JsonTable$decodeJsonColumn = $author$project$DataSources$JsonMiner$Models$JsonTable$cyclic$decodeJsonColumn();
$author$project$DataSources$JsonMiner$Models$JsonTable$cyclic$decodeJsonColumn = function () {
	return $author$project$DataSources$JsonMiner$Models$JsonTable$decodeJsonColumn;
};
var $author$project$DataSources$JsonMiner$Models$JsonTable$decodeJsonNestedColumns = $author$project$DataSources$JsonMiner$Models$JsonTable$cyclic$decodeJsonNestedColumns();
$author$project$DataSources$JsonMiner$Models$JsonTable$cyclic$decodeJsonNestedColumns = function () {
	return $author$project$DataSources$JsonMiner$Models$JsonTable$decodeJsonNestedColumns;
};
var $author$project$DataSources$JsonMiner$Models$JsonTable$JsonIndex = F3(
	function (name, columns, definition) {
		return {M: columns, ii: definition, eS: name};
	});
var $author$project$DataSources$JsonMiner$Models$JsonTable$decodeJsonIndex = A4(
	$elm$json$Json$Decode$map3,
	$author$project$DataSources$JsonMiner$Models$JsonTable$JsonIndex,
	A2($author$project$Libs$Json$Decode$maybeField, 'name', $elm$json$Json$Decode$string),
	A2(
		$elm$json$Json$Decode$field,
		'columns',
		$author$project$Libs$Json$Decode$nel($elm$json$Json$Decode$string)),
	A2($author$project$Libs$Json$Decode$maybeField, 'definition', $elm$json$Json$Decode$string));
var $author$project$DataSources$JsonMiner$Models$JsonTable$JsonPrimaryKey = F2(
	function (name, columns) {
		return {M: columns, eS: name};
	});
var $author$project$DataSources$JsonMiner$Models$JsonTable$decodeJsonPrimaryKey = A3(
	$elm$json$Json$Decode$map2,
	$author$project$DataSources$JsonMiner$Models$JsonTable$JsonPrimaryKey,
	A2($author$project$Libs$Json$Decode$maybeField, 'name', $elm$json$Json$Decode$string),
	A2(
		$elm$json$Json$Decode$field,
		'columns',
		$author$project$Libs$Json$Decode$nel($elm$json$Json$Decode$string)));
var $author$project$DataSources$JsonMiner$Models$JsonTable$JsonUnique = F3(
	function (name, columns, definition) {
		return {M: columns, ii: definition, eS: name};
	});
var $author$project$DataSources$JsonMiner$Models$JsonTable$decodeJsonUnique = A4(
	$elm$json$Json$Decode$map3,
	$author$project$DataSources$JsonMiner$Models$JsonTable$JsonUnique,
	A2($author$project$Libs$Json$Decode$maybeField, 'name', $elm$json$Json$Decode$string),
	A2(
		$elm$json$Json$Decode$field,
		'columns',
		$author$project$Libs$Json$Decode$nel($elm$json$Json$Decode$string)),
	A2($author$project$Libs$Json$Decode$maybeField, 'definition', $elm$json$Json$Decode$string));
var $author$project$DataSources$JsonMiner$Models$JsonTable$decode = $author$project$Libs$Json$Decode$map9($author$project$DataSources$JsonMiner$Models$JsonTable$JsonTable)(
	A2($elm$json$Json$Decode$field, 'schema', $elm$json$Json$Decode$string))(
	A2($elm$json$Json$Decode$field, 'table', $elm$json$Json$Decode$string))(
	A2($author$project$Libs$Json$Decode$maybeField, 'view', $elm$json$Json$Decode$bool))(
	A2(
		$elm$json$Json$Decode$field,
		'columns',
		$elm$json$Json$Decode$list($author$project$DataSources$JsonMiner$Models$JsonTable$decodeJsonColumn)))(
	A2($author$project$Libs$Json$Decode$maybeField, 'primaryKey', $author$project$DataSources$JsonMiner$Models$JsonTable$decodeJsonPrimaryKey))(
	A3(
		$author$project$Libs$Json$Decode$defaultField,
		'uniques',
		$elm$json$Json$Decode$list($author$project$DataSources$JsonMiner$Models$JsonTable$decodeJsonUnique),
		_List_Nil))(
	A3(
		$author$project$Libs$Json$Decode$defaultField,
		'indexes',
		$elm$json$Json$Decode$list($author$project$DataSources$JsonMiner$Models$JsonTable$decodeJsonIndex),
		_List_Nil))(
	A3(
		$author$project$Libs$Json$Decode$defaultField,
		'checks',
		$elm$json$Json$Decode$list($author$project$DataSources$JsonMiner$Models$JsonTable$decodeJsonCheck),
		_List_Nil))(
	A2($author$project$Libs$Json$Decode$maybeField, 'comment', $elm$json$Json$Decode$string));
var $author$project$DataSources$JsonMiner$Models$JsonType$JsonType = F3(
	function (schema, name, value) {
		return {eS: name, aI: schema, a5: value};
	});
var $author$project$DataSources$JsonMiner$Models$JsonType$JsonTypeDefinition = function (a) {
	return {$: 1, a: a};
};
var $author$project$DataSources$JsonMiner$Models$JsonType$JsonTypeEnum = function (a) {
	return {$: 0, a: a};
};
var $author$project$DataSources$JsonMiner$Models$JsonType$decodeValue = $elm$json$Json$Decode$oneOf(
	_List_fromArray(
		[
			A2(
			$elm$json$Json$Decode$map,
			$author$project$DataSources$JsonMiner$Models$JsonType$JsonTypeEnum,
			A2(
				$elm$json$Json$Decode$field,
				'values',
				$elm$json$Json$Decode$list($elm$json$Json$Decode$string))),
			A2(
			$elm$json$Json$Decode$map,
			$author$project$DataSources$JsonMiner$Models$JsonType$JsonTypeDefinition,
			A2($elm$json$Json$Decode$field, 'definition', $elm$json$Json$Decode$string))
		]));
var $author$project$DataSources$JsonMiner$Models$JsonType$decode = A4(
	$elm$json$Json$Decode$map3,
	$author$project$DataSources$JsonMiner$Models$JsonType$JsonType,
	A2($elm$json$Json$Decode$field, 'schema', $elm$json$Json$Decode$string),
	A2($elm$json$Json$Decode$field, 'name', $elm$json$Json$Decode$string),
	$author$project$DataSources$JsonMiner$Models$JsonType$decodeValue);
var $author$project$DataSources$JsonMiner$JsonSchema$decode = A4(
	$elm$json$Json$Decode$map3,
	$author$project$DataSources$JsonMiner$JsonSchema$JsonSchema,
	A2(
		$elm$json$Json$Decode$field,
		'tables',
		$elm$json$Json$Decode$list($author$project$DataSources$JsonMiner$Models$JsonTable$decode)),
	A2(
		$elm$json$Json$Decode$field,
		'relations',
		$elm$json$Json$Decode$list($author$project$DataSources$JsonMiner$Models$JsonRelation$decode)),
	A3(
		$author$project$Libs$Json$Decode$defaultField,
		'types',
		$elm$json$Json$Decode$list($author$project$DataSources$JsonMiner$Models$JsonType$decode),
		_List_Nil));
var $elm$http$Http$BadBody = function (a) {
	return {$: 4, a: a};
};
var $elm$http$Http$resolve = F2(
	function (toResult, response) {
		switch (response.$) {
			case 0:
				var url = response.a;
				return $elm$core$Result$Err(
					$elm$http$Http$BadUrl(url));
			case 1:
				return $elm$core$Result$Err($elm$http$Http$Timeout);
			case 2:
				return $elm$core$Result$Err($elm$http$Http$NetworkError);
			case 3:
				var metadata = response.a;
				return $elm$core$Result$Err(
					$elm$http$Http$BadStatus(metadata.hv));
			default:
				var body = response.b;
				return A2(
					$elm$core$Result$mapError,
					$elm$http$Http$BadBody,
					toResult(body));
		}
	});
var $elm$http$Http$expectString = function (toMsg) {
	return A2(
		$elm$http$Http$expectStringResponse,
		toMsg,
		$elm$http$Http$resolve($elm$core$Result$Ok));
};
var $elm$http$Http$emptyBody = _Http_emptyBody;
var $elm$http$Http$request = function (r) {
	return $elm$http$Http$command(
		$elm$http$Http$Request(
			{kp: false, kM: r.kM, lI: r.lI, f9: r.f9, gy: r.gy, hK: r.hK, hM: r.hM, o1: r.o1}));
};
var $elm$http$Http$get = function (r) {
	return $elm$http$Http$request(
		{kM: $elm$http$Http$emptyBody, lI: r.lI, f9: _List_Nil, gy: 'GET', hK: $elm$core$Maybe$Nothing, hM: $elm$core$Maybe$Nothing, o1: r.o1});
};
var $author$project$Models$SourceInfo$SourceInfo = F7(
	function (id, name, kind, enabled, fromSample, createdAt, updatedAt) {
		return {ic: createdAt, ip: enabled, iB: fromSample, H: id, gi: kind, eS: name, kb: updatedAt};
	});
var $author$project$Libs$List$last = function (list) {
	last:
	while (true) {
		if (!list.b) {
			return $elm$core$Maybe$Nothing;
		} else {
			if (!list.b.b) {
				var a = list.a;
				return $elm$core$Maybe$Just(a);
			} else {
				var tail = list.b;
				var $temp$list = tail;
				list = $temp$list;
				continue last;
			}
		}
	}
};
var $author$project$Libs$Models$FileUrl$filename = function (url) {
	return A2(
		$elm$core$Maybe$withDefault,
		'',
		$author$project$Libs$List$last(
			A2(
				$elm$core$List$filter,
				function (p) {
					return !(p === '');
				},
				A2(
					$elm$core$String$split,
					'/',
					A2(
						$elm$core$Maybe$withDefault,
						'',
						$elm$core$List$head(
							A2(
								$elm$core$List$filter,
								function (p) {
									return !(p === '');
								},
								A2(
									$elm$core$String$split,
									'#',
									A2(
										$elm$core$Maybe$withDefault,
										'',
										$elm$core$List$head(
											A2(
												$elm$core$List$filter,
												function (p) {
													return !(p === '');
												},
												A2($elm$core$String$split, '?', url))))))))))));
};
var $author$project$Models$SourceInfo$jsonRemote = F5(
	function (now, sourceId, url, content, sample) {
		return A7(
			$author$project$Models$SourceInfo$SourceInfo,
			sourceId,
			$author$project$Libs$Models$FileUrl$filename(url),
			A2(
				$author$project$Models$Project$SourceKind$JsonRemoteFile,
				url,
				$elm$core$String$length(content)),
			true,
			sample,
			now,
			now);
	});
var $author$project$Track$jsonSourceDetails = function (source) {
	return A3(
		$author$project$Libs$Result$fold,
		function (e) {
			return _List_fromArray(
				[
					_Utils_Tuple2(
					'error',
					$elm$json$Json$Encode$string(e))
				]);
		},
		$author$project$Track$sourceDetails,
		source);
};
var $author$project$Track$jsonSourceCreated = F2(
	function (project, source) {
		return A3(
			$author$project$Track$createEvent,
			'editor_source_created',
			_Utils_ap(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'format',
						$elm$json$Json$Encode$string('json'))
					]),
				$author$project$Track$jsonSourceDetails(source)),
			project);
	});
var $author$project$Services$JsonSource$kind = 'json-source';
var $author$project$Ports$GetLocalFile = F2(
	function (a, b) {
		return {$: 18, a: a, b: b};
	});
var $author$project$Ports$readLocalFile = F2(
	function (sourceKind, file) {
		return $author$project$Ports$messageToJs(
			A2($author$project$Ports$GetLocalFile, sourceKind, file));
	});
var $author$project$Services$Lenses$setId = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.H;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{H: value});
		}));
var $author$project$Services$Lenses$setParsedSchema = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.cv;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{cv: value});
		}));
var $author$project$Services$Lenses$setParsedSource = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.g8;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{g8: value});
		}));
var $author$project$Services$JsonSource$update = F5(
	function (wrap, now, project, msg, model) {
		switch (msg.$) {
			case 0:
				var url = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{o1: url}),
					$elm$core$Platform$Cmd$none);
			case 1:
				var schemaUrl = msg.a;
				return (schemaUrl === '') ? _Utils_Tuple2(
					function (m) {
						return _Utils_update(
							m,
							{o1: schemaUrl});
					}(
						A2($author$project$Services$JsonSource$init, model.fj, model.cP)),
					$elm$core$Platform$Cmd$none) : ((!A2($elm$core$String$startsWith, 'http', schemaUrl)) ? _Utils_Tuple2(
					function (m) {
						return _Utils_update(
							m,
							{
								jU: $elm$core$Maybe$Just(
									$elm$core$Result$Err('Invalid url, it should start with \'http\'')),
								o1: schemaUrl
							});
					}(
						A2($author$project$Services$JsonSource$init, model.fj, model.cP)),
					$elm$core$Platform$Cmd$none) : _Utils_Tuple2(
					function (m) {
						return _Utils_update(
							m,
							{
								jU: $elm$core$Maybe$Just(
									$elm$core$Result$Ok(schemaUrl)),
								o1: schemaUrl
							});
					}(
						A2($author$project$Services$JsonSource$init, model.fj, model.cP)),
					$elm$http$Http$get(
						{
							lI: $elm$http$Http$expectString(
								A2(
									$elm$core$Basics$composeR,
									$author$project$Services$JsonSource$GotRemoteFile(schemaUrl),
									wrap)),
							o1: schemaUrl
						})));
			case 2:
				var url = msg.a;
				var result = msg.b;
				if (!result.$) {
					var content = result.a;
					return _Utils_Tuple2(
						model,
						A2(
							$elm$random$Random$generate,
							function (sourceId) {
								return wrap(
									A2(
										$author$project$Services$JsonSource$GotFile,
										A5($author$project$Models$SourceInfo$jsonRemote, now, sourceId, url, content, $elm$core$Maybe$Nothing),
										content));
							},
							$author$project$Models$Project$SourceId$generator));
				} else {
					var err = result.a;
					return _Utils_Tuple2(
						A2(
							$author$project$Services$Lenses$setParsedSource,
							$elm$core$Maybe$Just(
								$elm$core$Result$Err(
									$author$project$Libs$Http$errorToString(err))),
							model),
						$author$project$Libs$Task$send(
							model.cP(
								$elm$core$Result$Err(
									$author$project$Libs$Http$errorToString(err)))));
				}
			case 3:
				var file = msg.a;
				return _Utils_Tuple2(
					function (m) {
						return _Utils_update(
							m,
							{
								jT: $elm$core$Maybe$Just(file)
							});
					}(
						A2($author$project$Services$JsonSource$init, model.fj, model.cP)),
					A2($author$project$Ports$readLocalFile, $author$project$Services$JsonSource$kind, file));
			case 4:
				var sourceInfo = msg.a;
				var fileContent = msg.b;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{
							mv: $elm$core$Maybe$Just(
								_Utils_Tuple2(
									A2(
										$author$project$Services$Lenses$setId,
										A3(
											$author$project$Libs$Maybe$mapOrElse,
											function ($) {
												return $.H;
											},
											sourceInfo.H,
											model.fj),
										sourceInfo),
									fileContent))
						}),
					$author$project$Libs$Task$send(
						wrap($author$project$Services$JsonSource$ParseSource)));
			case 5:
				return A2(
					$elm$core$Maybe$withDefault,
					_Utils_Tuple2(model, $elm$core$Platform$Cmd$none),
					A2(
						$elm$core$Maybe$map,
						function (_v2) {
							var json = _v2.b;
							return _Utils_Tuple2(
								A2(
									$author$project$Services$Lenses$setParsedSchema,
									$elm$core$Maybe$Just(
										A2($elm$json$Json$Decode$decodeString, $author$project$DataSources$JsonMiner$JsonSchema$decode, json)),
									model),
								$author$project$Libs$Task$send(
									wrap($author$project$Services$JsonSource$BuildSource)));
						},
						model.mv));
			case 6:
				return A2(
					$elm$core$Maybe$withDefault,
					_Utils_Tuple2(model, $elm$core$Platform$Cmd$none),
					A2(
						$elm$core$Maybe$map,
						function (source) {
							return _Utils_Tuple2(
								A2(
									$author$project$Services$Lenses$setParsedSource,
									$elm$core$Maybe$Just(source),
									model),
								$elm$core$Platform$Cmd$batch(
									_List_fromArray(
										[
											$author$project$Libs$Task$send(
											model.cP(source)),
											$author$project$Ports$track(
											A2($author$project$Track$jsonSourceCreated, project, source))
										])));
						},
						A3(
							$elm$core$Maybe$map2,
							F2(
								function (_v3, schema) {
									var info = _v3.a;
									return A2(
										$elm$core$Result$mapError,
										$elm$json$Json$Decode$errorToString,
										A2(
											$elm$core$Result$map,
											$author$project$DataSources$JsonMiner$JsonAdapter$buildSource(info),
											schema));
								}),
							model.mv,
							model.cv)));
			default:
				var htmlId = msg.a;
				return _Utils_Tuple2(
					A2(
						$author$project$Services$Lenses$mapShow,
						function (s) {
							return A3(
								$author$project$Libs$Bool$cond,
								_Utils_eq(s, htmlId),
								'',
								htmlId);
						},
						model),
					$elm$core$Platform$Cmd$none);
		}
	});
var $author$project$Services$SqlSource$BuildLines = 0;
var $author$project$Services$SqlSource$BuildSource = {$: 6};
var $author$project$Services$SqlSource$GotFile = F2(
	function (a, b) {
		return {$: 4, a: a, b: b};
	});
var $author$project$Services$SqlSource$GotRemoteFile = F2(
	function (a, b) {
		return {$: 2, a: a, b: b};
	});
var $author$project$Services$SqlSource$ParseMsg = function (a) {
	return {$: 5, a: a};
};
var $author$project$DataSources$SqlMiner$SqlAdapter$buildSource = F3(
	function (source, lines, schema) {
		return {
			cX: $elm$core$Array$fromList(
				A2(
					$elm$core$List$map,
					function ($) {
						return $.fp;
					},
					lines)),
			ic: source.ic,
			ip: source.ip,
			iB: source.iB,
			H: source.H,
			gi: source.gi,
			eS: source.eS,
			bT: $elm$core$List$reverse(schema.bT),
			oM: schema.oM,
			d3: A2(
				$author$project$Libs$Dict$fromListMap,
				function ($) {
					return $.H;
				},
				schema.d3),
			kb: source.kb
		};
	});
var $author$project$Services$SqlSource$kind = 'sql-source';
var $elm$core$Maybe$map3 = F4(
	function (func, ma, mb, mc) {
		if (ma.$ === 1) {
			return $elm$core$Maybe$Nothing;
		} else {
			var a = ma.a;
			if (mb.$ === 1) {
				return $elm$core$Maybe$Nothing;
			} else {
				var b = mb.a;
				if (mc.$ === 1) {
					return $elm$core$Maybe$Nothing;
				} else {
					var c = mc.a;
					return $elm$core$Maybe$Just(
						A3(func, a, b, c));
				}
			}
		}
	});
var $author$project$Services$Lenses$mapM_ = F4(
	function (get, update, transform, item) {
		return A2(
			update,
			A2(
				$elm$core$Maybe$map,
				transform,
				get(item)),
			item);
	});
var $author$project$Services$Lenses$mapParsedSchemaM = A2(
	$author$project$Services$Lenses$mapM_,
	function ($) {
		return $.cv;
	},
	$author$project$Services$Lenses$setParsedSchema);
var $author$project$Services$SqlSource$parsingInit = F3(
	function (fileContent, buildMsg, buildProject) {
		return {aU: buildMsg, fI: buildProject, aV: $elm$core$Maybe$Nothing, cY: 0, eu: fileContent, a$: $elm$core$Maybe$Nothing, aI: $elm$core$Maybe$Nothing, bW: 0, ov: '', cC: $elm$core$Maybe$Nothing};
	});
var $author$project$Services$SqlSource$BuildCommand = 2;
var $author$project$Services$SqlSource$BuildStatements = 1;
var $author$project$Services$SqlSource$EvolveSchema = 3;
var $author$project$DataSources$SqlMiner$SqlParser$addStatement = F2(
	function (lines, statements) {
		if (!lines.b) {
			return statements;
		} else {
			var head = lines.a;
			var tail = lines.b;
			return A2(
				$elm$core$List$cons,
				{ev: head, oO: tail},
				statements);
		}
	});
var $author$project$DataSources$SqlMiner$SqlParser$hasKeyword = F2(
	function (keyword, content) {
		return A2($author$project$Libs$Regex$matchI, '(^|[^A-Z0-9_\"\'`])' + (keyword + '([^A-Z0-9_\"\'`]|$)'), content) && (!A2($author$project$Libs$Regex$matchI, '\'.*' + (keyword + '.*\''), content));
	});
var $elm$core$String$trimRight = _String_trimRight;
var $author$project$DataSources$SqlMiner$SqlParser$removeTrailingComment = function (line) {
	return $elm$core$String$trimRight(
		A2(
			$elm$core$Maybe$withDefault,
			line,
			A2(
				$author$project$Libs$Maybe$orElse,
				$elm$core$List$head(
					A2($elm$core$String$split, '#', line)),
				$elm$core$List$head(
					A2($elm$core$String$split, '--', line)))));
};
var $author$project$DataSources$SqlMiner$SqlParser$statementIsEmpty = function (statement) {
	return statement.ev.fp === ';';
};
var $author$project$DataSources$SqlMiner$SqlParser$aggregateStatementLines = function (lines) {
	return A2(
		$author$project$Libs$List$filterNot,
		$author$project$DataSources$SqlMiner$SqlParser$statementIsEmpty,
		function (_v12) {
			var cur = _v12.a;
			var res = _v12.b;
			return A2($author$project$DataSources$SqlMiner$SqlParser$addStatement, cur, res);
		}(
			A3(
				$elm$core$List$foldr,
				F2(
					function (line, _v0) {
						var currentStatementLines = _v0.a;
						var statements = _v0.b;
						var nestedBlock = _v0.c;
						var _v1 = _Utils_Tuple2(
							_Utils_Tuple2(
								A2($author$project$DataSources$SqlMiner$SqlParser$hasKeyword, 'BEGIN', line.fp) || (A2($author$project$DataSources$SqlMiner$SqlParser$hasKeyword, 'CASE', line.fp) || (A2($author$project$DataSources$SqlMiner$SqlParser$hasKeyword, 'LOOP', line.fp) || A2($author$project$DataSources$SqlMiner$SqlParser$hasKeyword, '\\$\\$', line.fp))),
								A2($author$project$DataSources$SqlMiner$SqlParser$hasKeyword, 'END', line.fp) || A2($author$project$DataSources$SqlMiner$SqlParser$hasKeyword, '\\$\\$;', line.fp)),
							_Utils_Tuple2(
								A2(
									$elm$core$String$endsWith,
									';',
									$author$project$DataSources$SqlMiner$SqlParser$removeTrailingComment(line.fp)),
								nestedBlock));
						_v1$5:
						while (true) {
							if (!_v1.b.a) {
								if (_v1.a.a) {
									var _v2 = _v1.a;
									var _v3 = _v1.b;
									return _Utils_Tuple3(
										A2($elm$core$List$cons, line, currentStatementLines),
										statements,
										A2($elm$core$Basics$max, nestedBlock - 1, 0));
								} else {
									if (_v1.a.b) {
										var _v4 = _v1.a;
										var _v5 = _v1.b;
										return _Utils_Tuple3(
											A2($elm$core$List$cons, line, currentStatementLines),
											statements,
											nestedBlock + 1);
									} else {
										break _v1$5;
									}
								}
							} else {
								if (_v1.a.b) {
									if (!_v1.b.b) {
										var _v6 = _v1.a;
										var _v7 = _v1.b;
										return _Utils_Tuple3(
											A2($elm$core$List$cons, line, _List_Nil),
											A2($author$project$DataSources$SqlMiner$SqlParser$addStatement, currentStatementLines, statements),
											nestedBlock + 1);
									} else {
										var _v8 = _v1.a;
										var _v9 = _v1.b;
										return _Utils_Tuple3(
											A2($elm$core$List$cons, line, currentStatementLines),
											statements,
											nestedBlock + 1);
									}
								} else {
									if (!_v1.b.b) {
										var _v10 = _v1.a;
										var _v11 = _v1.b;
										return _Utils_Tuple3(
											A2($elm$core$List$cons, line, _List_Nil),
											A2($author$project$DataSources$SqlMiner$SqlParser$addStatement, currentStatementLines, statements),
											nestedBlock);
									} else {
										break _v1$5;
									}
								}
							}
						}
						return _Utils_Tuple3(
							A2($elm$core$List$cons, line, currentStatementLines),
							statements,
							nestedBlock);
					}),
				_Utils_Tuple3(_List_Nil, _List_Nil, 0),
				lines)));
};
var $author$project$Libs$Regex$asRegex = function (regex) {
	return A2(
		$elm$core$Maybe$withDefault,
		$elm$regex$Regex$never,
		A2(
			$elm$regex$Regex$fromStringWith,
			{h$: false, jd: false},
			regex));
};
var $author$project$Libs$Regex$match = F2(
	function (regex, text) {
		return function (r) {
			return A2($elm$regex$Regex$contains, r, text);
		}(
			$author$project$Libs$Regex$asRegex(regex));
	});
var $author$project$DataSources$SqlMiner$SqlParser$filterEmptyOrCommentedLines = function (lines) {
	return A3(
		$elm$core$List$foldr,
		F2(
			function (line, _v0) {
				var result = _v0.a;
				var inComment = _v0.b;
				return A2($author$project$Libs$Regex$match, '^\\s*/\\*', line.fp) ? _Utils_Tuple2(result, false) : (A2($author$project$Libs$Regex$match, '\\*/;?\\s*$', line.fp) ? _Utils_Tuple2(result, true) : (inComment ? _Utils_Tuple2(result, inComment) : _Utils_Tuple2(
					A2($elm$core$List$cons, line, result),
					inComment)));
			}),
		_Utils_Tuple2(_List_Nil, false),
		A2(
			$elm$core$List$filter,
			function (line) {
				return !function (text) {
					return $elm$core$String$isEmpty(text) || (A2($elm$core$String$startsWith, '--', text) || (A2($elm$core$String$startsWith, '#', text) || (A2($author$project$Libs$Regex$matchI, '^/\\*(.*)\\*/;?$', text) || (A2($elm$core$String$startsWith, 'USE', text) || A2($elm$core$String$startsWith, 'GO', text)))));
				}(
					$elm$core$String$trim(line.fp));
			},
			lines)).a;
};
var $author$project$DataSources$SqlMiner$SqlParser$groupConsecutiveLines = function (lines) {
	return function (_v1) {
		var cur = _v1.a;
		var groups = _v1.b;
		return A2($elm$core$List$cons, cur, groups);
	}(
		A3(
			$elm$core$List$foldr,
			F2(
				function (line, _v0) {
					var cur = _v0.a;
					var groups = _v0.b;
					return ($elm$core$List$isEmpty(cur) || _Utils_eq(
						line.l7 + 1,
						A3(
							$author$project$Libs$Maybe$mapOrElse,
							function ($) {
								return $.l7;
							},
							0,
							$elm$core$List$head(cur)))) ? _Utils_Tuple2(
						A2($elm$core$List$cons, line, cur),
						groups) : _Utils_Tuple2(
						_List_fromArray(
							[line]),
						A2($elm$core$List$cons, cur, groups));
				}),
			_Utils_Tuple2(_List_Nil, _List_Nil),
			lines));
};
var $author$project$DataSources$SqlMiner$SqlParser$buildStatements = function (lines) {
	return A2(
		$elm$core$List$concatMap,
		$author$project$DataSources$SqlMiner$SqlParser$aggregateStatementLines,
		$author$project$DataSources$SqlMiner$SqlParser$groupConsecutiveLines(
			$author$project$DataSources$SqlMiner$SqlParser$filterEmptyOrCommentedLines(lines)));
};
var $author$project$DataSources$SqlMiner$SqlAdapter$addErrors = F2(
	function (_new, initial) {
		return $elm$core$List$isEmpty(_new) ? initial : A2($elm$core$List$cons, _new, initial);
	});
var $author$project$DataSources$SqlMiner$SqlAdapter$createOrigin = F2(
	function (source, statement) {
		return {
			H: source,
			a$: $author$project$Libs$Nel$toList(
				A2(
					$author$project$Libs$Nel$map,
					function ($) {
						return $.l7;
					},
					statement))
		};
	});
var $author$project$DataSources$SqlMiner$SqlAdapter$createTableId = F2(
	function (schema, table) {
		return _Utils_Tuple2(
			A2($elm$core$Maybe$withDefault, $author$project$Conf$schema.lC, schema),
			table);
	});
var $author$project$DataSources$Helpers$defaultRelName = F2(
	function (table, column) {
		return table + ('_' + ($author$project$Models$Project$ColumnPath$toString(column) + '_fk_az'));
	});
var $author$project$Models$Project$ColumnPath$show = function (path) {
	return $author$project$Models$Project$ColumnPath$toString(path);
};
var $author$project$DataSources$SqlMiner$SqlAdapter$createRelation = F6(
	function (origin, tables, table, relation, src, ref) {
		var refTable = A2($author$project$DataSources$SqlMiner$SqlAdapter$createTableId, ref.aI, ref.aq);
		var name = A2(
			$elm$core$Maybe$withDefault,
			A2($author$project$DataSources$Helpers$defaultRelName, table, src.bH),
			relation);
		var _v0 = A2(
			$elm$core$Maybe$withDefault,
			A3(
				$author$project$Libs$Maybe$mapOrElse,
				function (t) {
					var _v1 = A2(
						$elm$core$Maybe$map,
						function ($) {
							return $.M;
						},
						t.nL);
					if (!_v1.$) {
						var cols = _v1.a;
						return $elm$core$List$isEmpty(cols.oO) ? _Utils_Tuple2(
							$elm$core$Maybe$Just(cols.ev),
							_List_Nil) : _Utils_Tuple2(
							$elm$core$Maybe$Just(cols.ev),
							_List_fromArray(
								[
									'Bad relation \'' + (name + ('\': target table ' + (A2($author$project$Models$Project$TableId$show, $author$project$Conf$schema.lC, refTable) + (' has a primary key with multiple columns (' + (A2(
									$elm$core$String$join,
									', ',
									$author$project$Libs$Nel$toList(
										A2($author$project$Libs$Nel$map, $author$project$Models$Project$ColumnPath$show, cols))) + ')')))))
								]));
					} else {
						return _Utils_Tuple2(
							$elm$core$Maybe$Nothing,
							_List_fromArray(
								[
									'Can\'t create relation \'' + (name + ('\': target table \'' + (A2($author$project$Models$Project$TableId$show, $author$project$Conf$schema.lC, refTable) + '\' has no primary key')))
								]));
					}
				},
				_Utils_Tuple2(
					$elm$core$Maybe$Nothing,
					_List_fromArray(
						[
							'Can\'t create relation \'' + (name + ('\': target table \'' + (A2($author$project$Models$Project$TableId$show, $author$project$Conf$schema.lC, refTable) + '\' does not exist (yet)')))
						])),
				A2($elm$core$Dict$get, refTable, tables)),
			A2(
				$elm$core$Maybe$map,
				function (c) {
					return _Utils_Tuple2(
						$elm$core$Maybe$Just(
							$author$project$Models$Project$ColumnPath$fromString(c)),
						_List_Nil);
				},
				ref.bH));
		var refCol = _v0.a;
		var errors = _v0.b;
		return _Utils_Tuple2(
			A2(
				$elm$core$Maybe$map,
				function (col) {
					return A4(
						$author$project$Models$Project$Relation$new,
						name,
						src,
						A2($author$project$Models$Project$ColumnRef$ColumnRef, refTable, col),
						_List_fromArray(
							[origin]));
				},
				refCol),
			errors);
	});
var $author$project$DataSources$SqlMiner$SqlAdapter$createChecks = F4(
	function (origin, tableName, columns, checks) {
		return _Utils_ap(
			A2(
				$elm$core$List$map,
				function (c) {
					return A4(
						$author$project$Models$Project$Check$Check,
						c.eS,
						A2($elm$core$List$map, $author$project$Models$Project$ColumnPath$fromString, c.M),
						$elm$core$Maybe$Just(c.nI),
						_List_fromArray(
							[origin]));
				},
				checks),
			A2(
				$elm$core$List$filterMap,
				function (col) {
					return A2(
						$elm$core$Maybe$map,
						function (c) {
							return A4(
								$author$project$Models$Project$Check$Check,
								A2($author$project$DataSources$Helpers$defaultCheckName, tableName, col.eS),
								_List_fromArray(
									[
										$author$project$Models$Project$ColumnPath$fromString(col.eS)
									]),
								$elm$core$Maybe$Just(c),
								_List_fromArray(
									[origin]));
						},
						col.kY);
				},
				$author$project$Libs$Nel$toList(columns)));
	});
var $author$project$DataSources$SqlMiner$SqlAdapter$createComment = F2(
	function (origin, comment) {
		return A2(
			$author$project$Models$Project$Comment$Comment,
			comment,
			_List_fromArray(
				[origin]));
	});
var $author$project$DataSources$SqlMiner$SqlAdapter$createColumn = F3(
	function (origin, index, column) {
		return {
			M: $elm$core$Maybe$Nothing,
			h4: A2(
				$elm$core$Maybe$map,
				$author$project$DataSources$SqlMiner$SqlAdapter$createComment(origin),
				column.h4),
			lf: column.lf,
			l7: index,
			gi: column.gi,
			eS: column.eS,
			nf: column.nf,
			jq: _List_fromArray(
				[origin])
		};
	});
var $author$project$DataSources$SqlMiner$SqlAdapter$createIndexes = F2(
	function (origin, indexes) {
		return A2(
			$elm$core$List$map,
			function (i) {
				return A4(
					$author$project$Models$Project$Index$Index,
					i.eS,
					A2($author$project$Libs$Nel$map, $author$project$Models$Project$ColumnPath$fromString, i.M),
					$elm$core$Maybe$Just(i.ii),
					_List_fromArray(
						[origin]));
			},
			indexes);
	});
var $author$project$Libs$Nel$filterMap = F2(
	function (f, nel) {
		return A2(
			$elm$core$List$filterMap,
			f,
			$author$project$Libs$Nel$toList(nel));
	});
var $author$project$Libs$String$nonEmptyMaybe = function (str) {
	return (str === '') ? $elm$core$Maybe$Nothing : $elm$core$Maybe$Just(str);
};
var $author$project$DataSources$SqlMiner$SqlAdapter$createPrimaryKey = F3(
	function (origin, columns, primaryKey) {
		return A2(
			$author$project$Libs$Maybe$orElse,
			$elm$core$List$head(
				A2(
					$author$project$Libs$Nel$filterMap,
					function (c) {
						return A2(
							$elm$core$Maybe$map,
							function (pk) {
								return A3(
									$author$project$Models$Project$PrimaryKey$PrimaryKey,
									$author$project$Libs$String$nonEmptyMaybe(pk),
									A2(
										$author$project$Libs$Nel$Nel,
										$author$project$Models$Project$ColumnPath$fromString(c.eS),
										_List_Nil),
									_List_fromArray(
										[origin]));
							},
							c.nL);
					},
					columns)),
			A2(
				$elm$core$Maybe$map,
				function (pk) {
					return A3(
						$author$project$Models$Project$PrimaryKey$PrimaryKey,
						pk.eS,
						A2($author$project$Libs$Nel$map, $author$project$Models$Project$ColumnPath$fromString, pk.M),
						_List_fromArray(
							[origin]));
				},
				primaryKey));
	});
var $author$project$DataSources$SqlMiner$SqlAdapter$createRelations = F6(
	function (origin, tables, tableId, tableName, columns, foreignKeys) {
		return A3(
			$elm$core$List$foldr,
			F2(
				function (_v1, _v2) {
					var rel = _v1.a;
					var errs = _v1.b;
					var rels = _v2.a;
					var errors = _v2.b;
					return _Utils_Tuple2(
						A3(
							$author$project$Libs$Maybe$mapOrElse,
							function (r) {
								return A2($elm$core$List$cons, r, rels);
							},
							rels,
							rel),
						_Utils_ap(errs, errors));
				}),
			_Utils_Tuple2(_List_Nil, _List_Nil),
			_Utils_ap(
				A2(
					$elm$core$List$filterMap,
					function (col) {
						return A2(
							$elm$core$Maybe$map,
							function (_v0) {
								var name = _v0.a;
								var ref = _v0.b;
								return A6(
									$author$project$DataSources$SqlMiner$SqlAdapter$createRelation,
									origin,
									tables,
									tableName,
									name,
									A2(
										$author$project$Models$Project$ColumnRef$ColumnRef,
										tableId,
										$author$project$Models$Project$ColumnPath$fromString(col.eS)),
									ref);
							},
							col.lQ);
					},
					$author$project$Libs$Nel$toList(columns)),
				A2(
					$elm$core$List$map,
					function (fk) {
						return A6(
							$author$project$DataSources$SqlMiner$SqlAdapter$createRelation,
							origin,
							tables,
							tableName,
							fk.eS,
							A2(
								$author$project$Models$Project$ColumnRef$ColumnRef,
								tableId,
								$author$project$Models$Project$ColumnPath$fromString(fk.ht)),
							fk.dG);
					},
					foreignKeys)));
	});
var $author$project$DataSources$SqlMiner$SqlAdapter$createUniques = F4(
	function (origin, tableName, columns, uniques) {
		return _Utils_ap(
			A2(
				$elm$core$List$map,
				function (u) {
					return A4(
						$author$project$Models$Project$Unique$Unique,
						u.eS,
						A2($author$project$Libs$Nel$map, $author$project$Models$Project$ColumnPath$fromString, u.M),
						$elm$core$Maybe$Just(u.ii),
						_List_fromArray(
							[origin]));
				},
				uniques),
			A2(
				$elm$core$List$filterMap,
				function (col) {
					return A2(
						$elm$core$Maybe$map,
						function (u) {
							return A4(
								$author$project$Models$Project$Unique$Unique,
								A2($author$project$DataSources$Helpers$defaultUniqueName, tableName, col.eS),
								A2(
									$author$project$Libs$Nel$Nel,
									$author$project$Models$Project$ColumnPath$fromString(col.eS),
									_List_Nil),
								$elm$core$Maybe$Just(u),
								_List_fromArray(
									[origin]));
						},
						col.o$);
				},
				$author$project$Libs$Nel$toList(columns)));
	});
var $author$project$DataSources$SqlMiner$SqlAdapter$createTable = F3(
	function (origin, tables, table) {
		var id = A2($author$project$DataSources$SqlMiner$SqlAdapter$createTableId, table.aI, table.aq);
		var _v0 = A6($author$project$DataSources$SqlMiner$SqlAdapter$createRelations, origin, tables, id, table.aq, table.M, table.iy);
		var relations = _v0.a;
		var errors = _v0.b;
		return _Utils_Tuple3(
			{
				cQ: A4($author$project$DataSources$SqlMiner$SqlAdapter$createChecks, origin, table.aq, table.M, table.cQ),
				M: A2(
					$author$project$Libs$Dict$fromListMap,
					function ($) {
						return $.eS;
					},
					A2(
						$elm$core$List$indexedMap,
						$author$project$DataSources$SqlMiner$SqlAdapter$createColumn(origin),
						$author$project$Libs$Nel$toList(table.M))),
				h4: $elm$core$Maybe$Nothing,
				H: id,
				dg: A2($author$project$DataSources$SqlMiner$SqlAdapter$createIndexes, origin, table.dg),
				eS: id.b,
				jq: _List_fromArray(
					[origin]),
				nL: A3($author$project$DataSources$SqlMiner$SqlAdapter$createPrimaryKey, origin, table.M, table.nL),
				aI: id.a,
				d5: A4($author$project$DataSources$SqlMiner$SqlAdapter$createUniques, origin, table.aq, table.M, table.d5),
				o3: false
			},
			relations,
			errors);
	});
var $author$project$DataSources$SqlMiner$SqlAdapter$createType = F2(
	function (origin, t) {
		return function (value) {
			return {
				H: _Utils_Tuple2(
					A2($elm$core$Maybe$withDefault, '', t.aI),
					t.eS),
				eS: t.eS,
				jq: _List_fromArray(
					[origin]),
				a5: value
			};
		}(
			function () {
				var _v0 = t.a5;
				if (!_v0.$) {
					var values = _v0.a;
					return $author$project$Models$Project$CustomTypeValue$Enum(values);
				} else {
					var definition = _v0.a;
					return $author$project$Models$Project$CustomTypeValue$Definition(definition);
				}
			}());
	});
var $author$project$DataSources$SqlMiner$SqlAdapter$buildViewColumn = F4(
	function (origin, tables, index, column) {
		if (!column.$) {
			var c = column.a;
			return A3(
				$author$project$Libs$Maybe$mapOrElse,
				function (col) {
					return {
						M: $elm$core$Maybe$Nothing,
						h4: col.h4,
						lf: $elm$core$Maybe$Just(
							_Utils_ap(
								A3(
									$author$project$Libs$Maybe$mapOrElse,
									function (t) {
										return t + '.';
									},
									'',
									c.aq),
								c.bH)),
						l7: index,
						gi: col.gi,
						eS: A2($elm$core$Maybe$withDefault, c.bH, c.b2),
						nf: col.nf,
						jq: _List_fromArray(
							[origin])
					};
				},
				{
					M: $elm$core$Maybe$Nothing,
					h4: $elm$core$Maybe$Nothing,
					lf: $elm$core$Maybe$Just(
						_Utils_ap(
							A3(
								$author$project$Libs$Maybe$mapOrElse,
								function (t) {
									return t + '.';
								},
								'',
								c.aq),
							c.bH)),
					l7: index,
					gi: $author$project$Conf$schema.bH.o0,
					eS: A2($elm$core$Maybe$withDefault, c.bH, c.b2),
					nf: false,
					jq: _List_fromArray(
						[origin])
				},
				A2(
					$elm$core$Maybe$andThen,
					function (t) {
						return A2($elm$core$Dict$get, c.bH, t.M);
					},
					A2(
						$elm$core$Maybe$andThen,
						function (t) {
							return A2(
								$elm$core$Dict$get,
								A2($author$project$DataSources$SqlMiner$SqlAdapter$createTableId, $elm$core$Maybe$Nothing, t),
								tables);
						},
						c.aq)));
		} else {
			var c = column.a;
			return {
				M: $elm$core$Maybe$Nothing,
				h4: $elm$core$Maybe$Nothing,
				lf: $elm$core$Maybe$Just(c.iz),
				l7: index,
				gi: $author$project$Conf$schema.bH.o0,
				eS: c.b2,
				nf: false,
				jq: _List_fromArray(
					[origin])
			};
		}
	});
var $author$project$DataSources$SqlMiner$SqlAdapter$createView = F3(
	function (origin, tables, view) {
		var id = A2($author$project$DataSources$SqlMiner$SqlAdapter$createTableId, view.aI, view.aq);
		return {
			cQ: _List_Nil,
			M: A2(
				$author$project$Libs$Dict$fromListMap,
				function ($) {
					return $.eS;
				},
				A2(
					$elm$core$List$indexedMap,
					A2($author$project$DataSources$SqlMiner$SqlAdapter$buildViewColumn, origin, tables),
					view.fe.M)),
			h4: $elm$core$Maybe$Nothing,
			H: id,
			dg: _List_Nil,
			eS: id.b,
			jq: _List_fromArray(
				[origin]),
			nL: $elm$core$Maybe$Nothing,
			aI: id.a,
			d5: _List_Nil,
			o3: true
		};
	});
var $author$project$DataSources$SqlMiner$Utils$Helpers$buildRawSql = function (statement) {
	return A2(
		$elm$core$String$join,
		'\n',
		A2(
			$elm$core$List$map,
			function ($) {
				return $.fp;
			},
			$author$project$Libs$Nel$toList(statement)));
};
var $author$project$DataSources$SqlMiner$SqlAdapter$updateTable = F5(
	function (schema, table, transform, statement, content) {
		return function (id) {
			return A2(
				$elm$core$Maybe$withDefault,
				_Utils_update(
					content,
					{
						lG: A2(
							$elm$core$List$cons,
							_List_fromArray(
								[
									'Table \'' + (A2($author$project$Models$Project$TableId$show, $author$project$Conf$schema.lC, id) + ('\' does not exist (in \'' + ($author$project$DataSources$SqlMiner$Utils$Helpers$buildRawSql(statement) + '\')')))
								]),
							content.lG)
					}),
				A2(
					$elm$core$Maybe$map,
					function (_v0) {
						var t = _v0.a;
						var errors = _v0.b;
						return _Utils_update(
							content,
							{
								lG: A2($author$project$DataSources$SqlMiner$SqlAdapter$addErrors, errors, content.lG),
								oM: A3($elm$core$Dict$insert, id, t, content.oM)
							});
					},
					A2(
						$elm$core$Maybe$map,
						transform,
						A2($elm$core$Dict$get, id, content.oM))));
		}(
			A2($author$project$DataSources$SqlMiner$SqlAdapter$createTableId, schema, table));
	});
var $author$project$DataSources$SqlMiner$SqlAdapter$deleteColumn = F5(
	function (schema, table, column, statement, content) {
		return A5(
			$author$project$DataSources$SqlMiner$SqlAdapter$updateTable,
			schema,
			table,
			function (t) {
				return A2(
					$elm$core$Maybe$withDefault,
					_Utils_Tuple2(
						t,
						_List_fromArray(
							[
								'Can\'t delete missing column ' + (column + (' in table ' + (A2($author$project$Models$Project$TableId$show, $author$project$Conf$schema.lC, t.H) + (' (in \'' + ($author$project$DataSources$SqlMiner$Utils$Helpers$buildRawSql(statement) + '\')')))))
							])),
					A2(
						$elm$core$Maybe$map,
						function (_v0) {
							return ($elm$core$Dict$size(t.M) === 1) ? _Utils_Tuple2(
								t,
								_List_fromArray(
									[
										'Can\'t delete last column (' + (column + (') of table ' + (A2($author$project$Models$Project$TableId$show, $author$project$Conf$schema.lC, t.H) + (' (in \'' + ($author$project$DataSources$SqlMiner$Utils$Helpers$buildRawSql(statement) + '\')')))))
									])) : _Utils_Tuple2(
								_Utils_update(
									t,
									{
										M: A2($elm$core$Dict$remove, column, t.M)
									}),
								_List_Nil);
						},
						A2($elm$core$Dict$get, column, t.M)));
			},
			statement,
			content);
	});
var $author$project$Libs$Maybe$filterNot = F2(
	function (predicate, maybe) {
		return A2(
			$elm$core$Maybe$andThen,
			function (a) {
				return A3(
					$author$project$Libs$Bool$cond,
					predicate(a),
					$elm$core$Maybe$Nothing,
					maybe);
			},
			maybe);
	});
var $author$project$DataSources$SqlMiner$SqlAdapter$updateColumn = F6(
	function (schema, table, column, transform, statement, content) {
		return A5(
			$author$project$DataSources$SqlMiner$SqlAdapter$updateTable,
			schema,
			table,
			function (t) {
				return A2(
					$elm$core$Maybe$withDefault,
					_Utils_Tuple2(
						t,
						_List_fromArray(
							[
								'Column \'' + (column + ('\' does not exist in table \'' + (A2($author$project$Models$Project$TableId$show, $author$project$Conf$schema.lC, t.H) + ('\' (in \'' + ($author$project$DataSources$SqlMiner$Utils$Helpers$buildRawSql(statement) + '\')')))))
							])),
					A2(
						$elm$core$Maybe$map,
						function (_v0) {
							var col = _v0.a;
							var errors = _v0.b;
							return _Utils_Tuple2(
								_Utils_update(
									t,
									{
										M: A3($elm$core$Dict$insert, column, col, t.M)
									}),
								errors);
						},
						A2(
							$elm$core$Maybe$map,
							transform,
							A2($elm$core$Dict$get, column, t.M))));
			},
			statement,
			content);
	});
var $author$project$DataSources$SqlMiner$SqlAdapter$evolve = F3(
	function (source, _v0, content) {
		var statement = _v0.a;
		var command = _v0.b;
		var origin = A2($author$project$DataSources$SqlMiner$SqlAdapter$createOrigin, source, statement);
		switch (command.$) {
			case 0:
				var sqlTable = command.a;
				return function (_v2) {
					var table = _v2.a;
					var relations = _v2.b;
					var errors = _v2.c;
					return A2(
						$elm$core$Maybe$withDefault,
						_Utils_update(
							content,
							{
								lG: A2($author$project$DataSources$SqlMiner$SqlAdapter$addErrors, errors, content.lG),
								bT: _Utils_ap(relations, content.bT),
								oM: A3($elm$core$Dict$insert, table.H, table, content.oM)
							}),
						A2(
							$elm$core$Maybe$map,
							function (_v3) {
								return _Utils_update(
									content,
									{
										lG: A2(
											$elm$core$List$cons,
											_List_fromArray(
												[
													'Table \'' + (A2($author$project$Models$Project$TableId$show, $author$project$Conf$schema.lC, table.H) + '\' is already defined')
												]),
											content.lG)
									});
							},
							A2($elm$core$Dict$get, table.H, content.oM)));
				}(
					A3($author$project$DataSources$SqlMiner$SqlAdapter$createTable, origin, content.oM, sqlTable));
			case 1:
				var sqlView = command.a;
				return function (view) {
					return A2(
						$elm$core$Maybe$withDefault,
						_Utils_update(
							content,
							{
								oM: A3($elm$core$Dict$insert, view.H, view, content.oM)
							}),
						A2(
							$elm$core$Maybe$map,
							function (_v5) {
								return _Utils_update(
									content,
									{
										lG: A2(
											$elm$core$List$cons,
											_List_fromArray(
												[
													'View \'' + (A2($author$project$Models$Project$TableId$show, $author$project$Conf$schema.lC, view.H) + '\' is already defined')
												]),
											content.lG)
									});
							},
							A2(
								$author$project$Libs$Maybe$filterNot,
								function (_v4) {
									return sqlView.jG;
								},
								A2($elm$core$Dict$get, view.H, content.oM))));
				}(
					A3($author$project$DataSources$SqlMiner$SqlAdapter$createView, origin, content.oM, sqlView));
			case 2:
				switch (command.a.$) {
					case 0:
						switch (command.a.c.$) {
							case 0:
								var _v6 = command.a;
								var schema = _v6.a;
								var table = _v6.b;
								var _v7 = _v6.c;
								var constraintName = _v7.a;
								var pk = _v7.b;
								return A5(
									$author$project$DataSources$SqlMiner$SqlAdapter$updateTable,
									schema,
									table,
									function (t) {
										return A3(
											$author$project$Libs$Maybe$mapOrElse,
											function (_v8) {
												return _Utils_Tuple2(
													t,
													_List_fromArray(
														[
															'Primary key already defined for \'' + (A2($author$project$Models$Project$TableId$show, $author$project$Conf$schema.lC, t.H) + '\' table')
														]));
											},
											_Utils_Tuple2(
												_Utils_update(
													t,
													{
														nL: $elm$core$Maybe$Just(
															A3(
																$author$project$Models$Project$PrimaryKey$PrimaryKey,
																constraintName,
																A2($author$project$Libs$Nel$map, $author$project$Models$Project$ColumnPath$fromString, pk),
																_List_fromArray(
																	[origin])))
													}),
												_List_Nil),
											t.nL);
									},
									statement,
									content);
							case 1:
								var _v9 = command.a;
								var schema = _v9.a;
								var table = _v9.b;
								var _v10 = _v9.c;
								var constraint = _v10.a;
								var fks = _v10.b;
								return function (_v11) {
									var relation = _v11.a;
									var errors = _v11.b;
									return _Utils_update(
										content,
										{
											lG: A2($author$project$DataSources$SqlMiner$SqlAdapter$addErrors, errors, content.lG),
											bT: A3(
												$author$project$Libs$Maybe$mapOrElse,
												function (r) {
													return A2($elm$core$List$cons, r, content.bT);
												},
												content.bT,
												relation)
										});
								}(
									A6(
										$author$project$DataSources$SqlMiner$SqlAdapter$createRelation,
										origin,
										content.oM,
										table,
										constraint,
										A2(
											$author$project$Models$Project$ColumnRef$ColumnRef,
											A2($author$project$DataSources$SqlMiner$SqlAdapter$createTableId, schema, table),
											$author$project$Models$Project$ColumnPath$fromString(fks.ev.bH)),
										fks.ev.dG));
							case 2:
								var _v12 = command.a;
								var schema = _v12.a;
								var table = _v12.b;
								var _v13 = _v12.c;
								var constraint = _v13.a;
								var unique = _v13.b;
								return A5(
									$author$project$DataSources$SqlMiner$SqlAdapter$updateTable,
									schema,
									table,
									function (t) {
										return _Utils_Tuple2(
											_Utils_update(
												t,
												{
													d5: _Utils_ap(
														t.d5,
														_List_fromArray(
															[
																A4(
																$author$project$Models$Project$Unique$Unique,
																constraint,
																A2($author$project$Libs$Nel$map, $author$project$Models$Project$ColumnPath$fromString, unique.M),
																$elm$core$Maybe$Just(unique.ii),
																_List_fromArray(
																	[origin]))
															]))
												}),
											_List_Nil);
									},
									statement,
									content);
							case 3:
								var _v14 = command.a;
								var schema = _v14.a;
								var table = _v14.b;
								var _v15 = _v14.c;
								var constraint = _v15.a;
								var check = _v15.b;
								return A5(
									$author$project$DataSources$SqlMiner$SqlAdapter$updateTable,
									schema,
									table,
									function (t) {
										return _Utils_Tuple2(
											_Utils_update(
												t,
												{
													cQ: _Utils_ap(
														t.cQ,
														_List_fromArray(
															[
																A4(
																$author$project$Models$Project$Check$Check,
																constraint,
																A2($elm$core$List$map, $author$project$Models$Project$ColumnPath$fromString, check.M),
																$elm$core$Maybe$Just(check.nI),
																_List_fromArray(
																	[origin]))
															]))
												}),
											_List_Nil);
									},
									statement,
									content);
							default:
								var _v16 = command.a;
								return content;
						}
					case 1:
						if (!command.a.c.$) {
							var _v17 = command.a;
							var schema = _v17.a;
							var table = _v17.b;
							var _v18 = _v17.c;
							var column = _v18.a;
							var _default = _v18.b;
							return A6(
								$author$project$DataSources$SqlMiner$SqlAdapter$updateColumn,
								schema,
								table,
								column,
								function (c) {
									return _Utils_Tuple2(
										_Utils_update(
											c,
											{
												lf: $elm$core$Maybe$Just(_default),
												jq: _Utils_ap(
													c.jq,
													_List_fromArray(
														[origin]))
											}),
										_List_Nil);
								},
								statement,
								content);
						} else {
							var _v19 = command.a;
							var _v20 = _v19.c;
							return content;
						}
					case 2:
						var _v21 = command.a;
						var schema = _v21.a;
						var table = _v21.b;
						var column = _v21.c;
						return A5($author$project$DataSources$SqlMiner$SqlAdapter$deleteColumn, schema, table, column, statement, content);
					case 3:
						var _v22 = command.a;
						return content;
					case 4:
						var _v23 = command.a;
						return content;
					case 5:
						var _v24 = command.a;
						return content;
					default:
						return content;
				}
			case 3:
				var index = command.a;
				return A5(
					$author$project$DataSources$SqlMiner$SqlAdapter$updateTable,
					index.aq.aI,
					index.aq.aq,
					function (t) {
						return _Utils_Tuple2(
							_Utils_update(
								t,
								{
									dg: _Utils_ap(
										t.dg,
										_List_fromArray(
											[
												A4(
												$author$project$Models$Project$Index$Index,
												index.eS,
												A2($author$project$Libs$Nel$map, $author$project$Models$Project$ColumnPath$fromString, index.M),
												$elm$core$Maybe$Just(index.ii),
												_List_fromArray(
													[origin]))
											]))
								}),
							_List_Nil);
					},
					statement,
					content);
			case 4:
				var unique = command.a;
				return A5(
					$author$project$DataSources$SqlMiner$SqlAdapter$updateTable,
					unique.aq.aI,
					unique.aq.aq,
					function (t) {
						return _Utils_Tuple2(
							_Utils_update(
								t,
								{
									d5: _Utils_ap(
										t.d5,
										_List_fromArray(
											[
												A4(
												$author$project$Models$Project$Unique$Unique,
												unique.eS,
												A2($author$project$Libs$Nel$map, $author$project$Models$Project$ColumnPath$fromString, unique.M),
												$elm$core$Maybe$Just(unique.ii),
												_List_fromArray(
													[origin]))
											]))
								}),
							_List_Nil);
					},
					statement,
					content);
			case 5:
				var comment = command.a;
				return A5(
					$author$project$DataSources$SqlMiner$SqlAdapter$updateTable,
					comment.aI,
					comment.aq,
					function (t) {
						return A3(
							$author$project$Libs$Maybe$mapOrElse,
							function (_v25) {
								return _Utils_Tuple2(
									t,
									_List_fromArray(
										[
											'Comment already defined for \'' + (A2($author$project$Models$Project$TableId$show, $author$project$Conf$schema.lC, t.H) + '\' table')
										]));
							},
							_Utils_Tuple2(
								_Utils_update(
									t,
									{
										h4: $elm$core$Maybe$Just(
											A2(
												$author$project$Models$Project$Comment$Comment,
												comment.h4,
												_List_fromArray(
													[origin])))
									}),
								_List_Nil),
							t.h4);
					},
					statement,
					content);
			case 6:
				var comment = command.a;
				return A6(
					$author$project$DataSources$SqlMiner$SqlAdapter$updateColumn,
					comment.aI,
					comment.aq,
					comment.bH,
					function (c) {
						return A3(
							$author$project$Libs$Maybe$mapOrElse,
							function (_v26) {
								return _Utils_Tuple2(
									c,
									_List_fromArray(
										[
											'Comment already defined for \'' + (c.eS + ('\' column in \'' + (A2(
											$author$project$Models$Project$TableId$show,
											$author$project$Conf$schema.lC,
											A2($author$project$DataSources$SqlMiner$SqlAdapter$createTableId, comment.aI, comment.aq)) + '\' table')))
										]));
							},
							_Utils_Tuple2(
								_Utils_update(
									c,
									{
										h4: $elm$core$Maybe$Just(
											A2(
												$author$project$Models$Project$Comment$Comment,
												comment.h4,
												_List_fromArray(
													[origin])))
									}),
								_List_Nil),
							c.h4);
					},
					statement,
					content);
			case 7:
				return content;
			case 8:
				var t = command.a;
				return _Utils_update(
					content,
					{
						d3: A2(
							$elm$core$List$cons,
							A2($author$project$DataSources$SqlMiner$SqlAdapter$createType, origin, t),
							content.d3)
					});
			default:
				return content;
		}
	});
var $author$project$Libs$Dict$fromIndexedList = function (list) {
	return $elm$core$Dict$fromList(
		A2(
			$elm$core$List$indexedMap,
			F2(
				function (i, a) {
					return _Utils_Tuple2(i, a);
				}),
			list));
};
var $author$project$DataSources$SqlMiner$SqlAdapter$initSchema = {lG: _List_Nil, bT: _List_Nil, oM: $elm$core$Dict$empty, d3: _List_Nil};
var $author$project$DataSources$SqlMiner$SqlParser$AlterTable = function (a) {
	return {$: 2, a: a};
};
var $author$project$DataSources$SqlMiner$SqlParser$ColumnComment = function (a) {
	return {$: 6, a: a};
};
var $author$project$DataSources$SqlMiner$SqlParser$ConstraintComment = function (a) {
	return {$: 7, a: a};
};
var $author$project$DataSources$SqlMiner$SqlParser$CreateIndex = function (a) {
	return {$: 3, a: a};
};
var $author$project$DataSources$SqlMiner$SqlParser$CreateTable = function (a) {
	return {$: 0, a: a};
};
var $author$project$DataSources$SqlMiner$SqlParser$CreateType = function (a) {
	return {$: 8, a: a};
};
var $author$project$DataSources$SqlMiner$SqlParser$CreateUnique = function (a) {
	return {$: 4, a: a};
};
var $author$project$DataSources$SqlMiner$SqlParser$CreateView = function (a) {
	return {$: 1, a: a};
};
var $author$project$DataSources$SqlMiner$SqlParser$Ignored = function (a) {
	return {$: 9, a: a};
};
var $author$project$DataSources$SqlMiner$SqlParser$TableComment = function (a) {
	return {$: 5, a: a};
};
var $author$project$DataSources$SqlMiner$Parsers$AlterTable$AddTableConstraint = F3(
	function (a, b, c) {
		return {$: 0, a: a, b: b, c: c};
	});
var $author$project$DataSources$SqlMiner$Parsers$AlterTable$AddTableOwner = F3(
	function (a, b, c) {
		return {$: 3, a: a, b: b, c: c};
	});
var $author$project$DataSources$SqlMiner$Parsers$AlterTable$AlterColumn = F3(
	function (a, b, c) {
		return {$: 1, a: a, b: b, c: c};
	});
var $author$project$DataSources$SqlMiner$Parsers$AlterTable$AttachPartition = F2(
	function (a, b) {
		return {$: 4, a: a, b: b};
	});
var $author$project$DataSources$SqlMiner$Parsers$AlterTable$DropColumn = F3(
	function (a, b, c) {
		return {$: 2, a: a, b: b, c: c};
	});
var $author$project$DataSources$SqlMiner$Parsers$AlterTable$DropConstraint = F3(
	function (a, b, c) {
		return {$: 5, a: a, b: b, c: c};
	});
var $author$project$DataSources$SqlMiner$Parsers$AlterTable$IgnoredCommand = function (a) {
	return {$: 6, a: a};
};
var $author$project$DataSources$SqlMiner$Parsers$AlterTable$ParsedForeignKey = F2(
	function (a, b) {
		return {$: 1, a: a, b: b};
	});
var $author$project$DataSources$SqlMiner$Parsers$AlterTable$ParsedPrimaryKey = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $author$project$DataSources$SqlMiner$Utils$Helpers$extract = F2(
	function (regex, text) {
		var _v0 = A2($author$project$Libs$Regex$matches, regex, text);
		if ((_v0.b && (!_v0.a.$)) && (!_v0.b.b)) {
			var res = _v0.a.a;
			return res;
		} else {
			return text;
		}
	});
var $author$project$DataSources$SqlMiner$Utils$Helpers$noEnclosingQuotes = function (text) {
	return A2(
		$author$project$DataSources$SqlMiner$Utils$Helpers$extract,
		'^\\[(.*)]$',
		A2(
			$author$project$DataSources$SqlMiner$Utils$Helpers$extract,
			'^`(.*)`$',
			A2(
				$author$project$DataSources$SqlMiner$Utils$Helpers$extract,
				'^\'(.*)\'$',
				A2($author$project$DataSources$SqlMiner$Utils$Helpers$extract, '^\"(.*)\"$', text))));
};
var $author$project$DataSources$SqlMiner$Utils$Helpers$buildSchemaName = function (name) {
	return $author$project$DataSources$SqlMiner$Utils$Helpers$noEnclosingQuotes(
		$elm$core$String$trim(name));
};
var $author$project$DataSources$SqlMiner$Utils$Helpers$buildSqlLine = function (statement) {
	return A2(
		$elm$core$String$join,
		' ',
		A2(
			$elm$core$List$map,
			$elm$core$String$trim,
			A2(
				$elm$core$List$map,
				function ($) {
					return $.fp;
				},
				$author$project$Libs$Nel$toList(statement))));
};
var $author$project$DataSources$SqlMiner$Utils$Helpers$buildTableName = function (name) {
	return $author$project$DataSources$SqlMiner$Utils$Helpers$noEnclosingQuotes(
		$elm$core$String$trim(name));
};
var $author$project$DataSources$SqlMiner$Parsers$AlterTable$IgnoredConstraint = function (a) {
	return {$: 4, a: a};
};
var $author$project$DataSources$SqlMiner$Parsers$AlterTable$ParsedCheck = F2(
	function (a, b) {
		return {$: 3, a: a, b: b};
	});
var $author$project$DataSources$SqlMiner$Parsers$AlterTable$ParsedUnique = F2(
	function (a, b) {
		return {$: 2, a: a, b: b};
	});
var $author$project$DataSources$SqlMiner$Utils$Helpers$buildConstraintName = function (name) {
	return A2(
		$elm$core$String$join,
		'.',
		A2(
			$elm$core$List$map,
			$author$project$DataSources$SqlMiner$Utils$Helpers$noEnclosingQuotes,
			A2(
				$elm$core$String$split,
				'.',
				$elm$core$String$trim(name))));
};
var $author$project$DataSources$SqlMiner$Parsers$AlterTable$parseAlterTableAddConstraintCheck = function (constraint) {
	var _v0 = A2($author$project$Libs$Regex$matches, '^CHECK\\s+(?<predicate>.*)$', constraint);
	if ((_v0.b && (!_v0.a.$)) && (!_v0.b.b)) {
		var predicate = _v0.a.a;
		return $elm$core$Result$Ok(
			{M: _List_Nil, nI: predicate});
	} else {
		return $elm$core$Result$Err(
			_List_fromArray(
				['Can\'t parse check constraint: \'' + (constraint + '\'')]));
	}
};
var $author$project$DataSources$SqlMiner$Utils$Helpers$buildColumnName = function (name) {
	return $author$project$DataSources$SqlMiner$Utils$Helpers$noEnclosingQuotes(
		$elm$core$String$trim(name));
};
var $elm$core$Result$fromMaybe = F2(
	function (err, maybe) {
		if (!maybe.$) {
			var v = maybe.a;
			return $elm$core$Result$Ok(v);
		} else {
			return $elm$core$Result$Err(err);
		}
	});
var $elm$core$List$repeatHelp = F3(
	function (result, n, value) {
		repeatHelp:
		while (true) {
			if (n <= 0) {
				return result;
			} else {
				var $temp$result = A2($elm$core$List$cons, value, result),
					$temp$n = n - 1,
					$temp$value = value;
				result = $temp$result;
				n = $temp$n;
				value = $temp$value;
				continue repeatHelp;
			}
		}
	});
var $elm$core$List$repeat = F2(
	function (n, value) {
		return A3($elm$core$List$repeatHelp, _List_Nil, n, value);
	});
var $author$project$Libs$List$zip = F2(
	function (lb, la) {
		return A3(
			$elm$core$List$map2,
			F2(
				function (a, b) {
					return _Utils_Tuple2(a, b);
				}),
			la,
			lb);
	});
var $author$project$DataSources$SqlMiner$Parsers$AlterTable$buildForeignKeyInner = F5(
	function (constraint, columnsStr, schemaDest, tableDest, columnsStrDest) {
		var columns = A2($elm$core$String$split, ',', columnsStr);
		var columnsDest = A3(
			$author$project$Libs$Maybe$mapOrElse,
			A2(
				$elm$core$Basics$composeR,
				$elm$core$String$split(','),
				$elm$core$List$map($elm$core$Maybe$Just)),
			A2(
				$elm$core$List$repeat,
				$elm$core$List$length(columns),
				$elm$core$Maybe$Nothing),
			columnsStrDest);
		return A2(
			$elm$core$Result$fromMaybe,
			_List_fromArray(
				['No foreign key column in \'' + (constraint + '\'')]),
			$author$project$Libs$Nel$fromList(
				A2(
					$elm$core$List$map,
					function (_v0) {
						var column = _v0.a;
						var columnDest = _v0.b;
						return {
							bH: $author$project$DataSources$SqlMiner$Utils$Helpers$buildColumnName(column),
							dG: {
								bH: A2($elm$core$Maybe$map, $author$project$DataSources$SqlMiner$Utils$Helpers$buildColumnName, columnDest),
								aI: A2($elm$core$Maybe$map, $author$project$DataSources$SqlMiner$Utils$Helpers$buildSchemaName, schemaDest),
								aq: $author$project$DataSources$SqlMiner$Utils$Helpers$buildTableName(tableDest)
							}
						};
					},
					A2($author$project$Libs$List$zip, columnsDest, columns))));
	});
var $author$project$DataSources$SqlMiner$Parsers$AlterTable$parseAlterTableAddConstraintForeignKey = function (constraint) {
	var _v0 = A2($author$project$Libs$Regex$matches, '^FOREIGN\\s+KEY\\s*\\((?<column>[^)]+)\\)\\s+REFERENCES\\s+(?:(?<schema_b>[^ .]+)\\.)?(?<table_b>[^ .(]+)(?:\\s*\\((?<column_b>[^)]+)\\))?', constraint);
	if ((((((_v0.b && (!_v0.a.$)) && _v0.b.b) && _v0.b.b.b) && (!_v0.b.b.a.$)) && _v0.b.b.b.b) && (!_v0.b.b.b.b.b)) {
		var columns = _v0.a.a;
		var _v1 = _v0.b;
		var schemaDest = _v1.a;
		var _v2 = _v1.b;
		var tableDest = _v2.a.a;
		var _v3 = _v2.b;
		var columnDest = _v3.a;
		return A5($author$project$DataSources$SqlMiner$Parsers$AlterTable$buildForeignKeyInner, constraint, columns, schemaDest, tableDest, columnDest);
	} else {
		var _v4 = A2($author$project$Libs$Regex$matches, '^FOREIGN\\s+KEY\\s*\\((?<column>[^)]+)\\)\\s+REFERENCES\\s+(?:(?<schema_b>[^ .]+)\\.)?(?<table_b>[^ .(]+)(?:\\((?<column_b>[^ .]+)\\))?$', constraint);
		if ((((((_v4.b && (!_v4.a.$)) && _v4.b.b) && _v4.b.b.b) && (!_v4.b.b.a.$)) && _v4.b.b.b.b) && (!_v4.b.b.b.b.b)) {
			var columns = _v4.a.a;
			var _v5 = _v4.b;
			var schemaDest = _v5.a;
			var _v6 = _v5.b;
			var tableDest = _v6.a.a;
			var _v7 = _v6.b;
			var columnDest = _v7.a;
			return A5($author$project$DataSources$SqlMiner$Parsers$AlterTable$buildForeignKeyInner, constraint, columns, schemaDest, tableDest, columnDest);
		} else {
			return $elm$core$Result$Err(
				_List_fromArray(
					['Can\'t parse foreign key: \'' + (constraint + '\'')]));
		}
	}
};
var $author$project$DataSources$SqlMiner$Parsers$AlterTable$parseAlterTableAddConstraintPrimaryKey = function (constraint) {
	var _v0 = A2($author$project$Libs$Regex$matches, '^PRIMARY\\s+KEY(?:\\s+(?:CLUSTERED|NONCLUSTERED))?\\s*\\((?<columns>[^)]+)\\).*$', constraint);
	if ((_v0.b && (!_v0.a.$)) && (!_v0.b.b)) {
		var columns = _v0.a.a;
		return A2(
			$elm$core$Result$fromMaybe,
			_List_fromArray(
				['Primary key can\'t have empty columns']),
			$author$project$Libs$Nel$fromList(
				A2(
					$elm$core$List$map,
					$author$project$DataSources$SqlMiner$Utils$Helpers$buildColumnName,
					A2($elm$core$String$split, ',', columns))));
	} else {
		return $elm$core$Result$Err(
			_List_fromArray(
				['Can\'t parse primary key: \'' + (constraint + '\'')]));
	}
};
var $elm$core$Result$andThen = F2(
	function (callback, result) {
		if (!result.$) {
			var value = result.a;
			return callback(value);
		} else {
			var msg = result.a;
			return $elm$core$Result$Err(msg);
		}
	});
var $author$project$DataSources$SqlMiner$Utils$Helpers$deferrable = '(?:(?:\\s+NOT)?\\s+DEFERRABLE(?:\\s+INITIALLY (?:IMMEDIATE|DEFERRED))?)?';
var $author$project$DataSources$SqlMiner$Utils$Helpers$parseIndexDefinition = function (definition) {
	var _v0 = A2($author$project$Libs$Regex$matches, '^\\((?<columns>[^)]+)\\)' + ($author$project$DataSources$SqlMiner$Utils$Helpers$deferrable + '.*$'), definition);
	if ((_v0.b && (!_v0.a.$)) && (!_v0.b.b)) {
		var columns = _v0.a.a;
		return $elm$core$Result$Ok(
			A2(
				$elm$core$List$map,
				$elm$core$String$trim,
				A2($elm$core$String$split, ',', columns)));
	} else {
		var _v1 = A2($author$project$Libs$Regex$matches, '^USING[ \t]+[^ ]+[ \t]+\\((?<columns>[^)]+)\\).*$', definition);
		if ((_v1.b && (!_v1.a.$)) && (!_v1.b.b)) {
			var columns = _v1.a.a;
			return $elm$core$Result$Ok(
				A2(
					$elm$core$List$map,
					$elm$core$String$trim,
					A2($elm$core$String$split, ',', columns)));
		} else {
			return $elm$core$Result$Err(
				_List_fromArray(
					['Can\'t parse definition: \'' + (definition + '\' in create index')]));
		}
	}
};
var $author$project$DataSources$SqlMiner$Parsers$AlterTable$parseAlterTableAddConstraintUnique = function (constraint) {
	var _v0 = A2($author$project$Libs$Regex$matches, '^UNIQUE\\s+(?<definition>.+)$', constraint);
	if ((_v0.b && (!_v0.a.$)) && (!_v0.b.b)) {
		var definition = _v0.a.a;
		return A2(
			$elm$core$Result$map,
			function (columns) {
				return {M: columns, ii: definition};
			},
			A2(
				$elm$core$Result$andThen,
				function (columns) {
					return A2(
						$elm$core$Result$fromMaybe,
						_List_fromArray(
							['Unique index can\'t have empty columns']),
						$author$project$Libs$Nel$fromList(
							A2($elm$core$List$map, $author$project$DataSources$SqlMiner$Utils$Helpers$buildColumnName, columns)));
				},
				$author$project$DataSources$SqlMiner$Utils$Helpers$parseIndexDefinition(definition)));
	} else {
		return $elm$core$Result$Err(
			_List_fromArray(
				['Can\'t parse unique constraint: \'' + (constraint + '\'')]));
	}
};
var $author$project$DataSources$SqlMiner$Utils$Helpers$sqlTriggers = '(?:\\s+(?:ON UPDATE|ON DELETE)\\s+(?:NO ACTION|CASCADE|SET NULL|SET DEFAULT|RESTRICT))*';
var $author$project$DataSources$SqlMiner$Parsers$AlterTable$parseAlterTableAddConstraint = function (command) {
	var _v0 = A2($author$project$Libs$Regex$matches, '^ADD\\s+CONSTRAINT\\s+(?<name>[^ ]+)\\s+(?<constraint>.*?)(?:\\s+match simple)?' + ($author$project$DataSources$SqlMiner$Utils$Helpers$sqlTriggers + '$'), command);
	if ((((_v0.b && (!_v0.a.$)) && _v0.b.b) && (!_v0.b.a.$)) && (!_v0.b.b.b)) {
		var name = _v0.a.a;
		var _v1 = _v0.b;
		var constraint = _v1.a.a;
		return A2($author$project$Libs$Regex$matchI, '^PRIMARY\\s+KEY', constraint) ? A2(
			$elm$core$Result$map,
			$author$project$DataSources$SqlMiner$Parsers$AlterTable$ParsedPrimaryKey(
				$elm$core$Maybe$Just(
					$author$project$DataSources$SqlMiner$Utils$Helpers$buildConstraintName(name))),
			$author$project$DataSources$SqlMiner$Parsers$AlterTable$parseAlterTableAddConstraintPrimaryKey(constraint)) : (A2($author$project$Libs$Regex$matchI, '^FOREIGN\\s+KEY', constraint) ? A2(
			$elm$core$Result$map,
			$author$project$DataSources$SqlMiner$Parsers$AlterTable$ParsedForeignKey(
				$elm$core$Maybe$Just(
					$author$project$DataSources$SqlMiner$Utils$Helpers$buildConstraintName(name))),
			$author$project$DataSources$SqlMiner$Parsers$AlterTable$parseAlterTableAddConstraintForeignKey(constraint)) : (A2($author$project$Libs$Regex$matchI, '^UNIQUE', constraint) ? A2(
			$elm$core$Result$map,
			$author$project$DataSources$SqlMiner$Parsers$AlterTable$ParsedUnique(
				$author$project$DataSources$SqlMiner$Utils$Helpers$buildConstraintName(name)),
			$author$project$DataSources$SqlMiner$Parsers$AlterTable$parseAlterTableAddConstraintUnique(constraint)) : (A2($author$project$Libs$Regex$matchI, '^CHECK', constraint) ? A2(
			$elm$core$Result$map,
			$author$project$DataSources$SqlMiner$Parsers$AlterTable$ParsedCheck(
				$author$project$DataSources$SqlMiner$Utils$Helpers$buildConstraintName(name)),
			$author$project$DataSources$SqlMiner$Parsers$AlterTable$parseAlterTableAddConstraintCheck(constraint)) : (A2($author$project$Libs$Regex$matchI, '^EXCLUDE\\s+USING', constraint) ? $elm$core$Result$Ok(
			$author$project$DataSources$SqlMiner$Parsers$AlterTable$IgnoredConstraint(constraint)) : $elm$core$Result$Err(
			_List_fromArray(
				['Constraint not handled: \'' + (constraint + '\'')]))))));
	} else {
		return $elm$core$Result$Err(
			_List_fromArray(
				['Can\'t parse add constraint: \'' + (command + '\'')]));
	}
};
var $author$project$DataSources$SqlMiner$Parsers$AlterTable$ColumnDefault = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $author$project$DataSources$SqlMiner$Parsers$AlterTable$ColumnStatistics = F2(
	function (a, b) {
		return {$: 1, a: a, b: b};
	});
var $author$project$DataSources$SqlMiner$Parsers$AlterTable$parseAlterTableAlterColumnDefault = function (property) {
	var _v0 = A2($author$project$Libs$Regex$matches, '^DEFAULT\\s+(?<value>.+)$', property);
	if ((_v0.b && (!_v0.a.$)) && (!_v0.b.b)) {
		var value = _v0.a.a;
		return $elm$core$Result$Ok(value);
	} else {
		return $elm$core$Result$Err(
			_List_fromArray(
				['Can\'t parse default value: \'' + (property + '\'')]));
	}
};
var $author$project$DataSources$SqlMiner$Parsers$AlterTable$parseAlterTableAlterColumnStatistics = function (property) {
	var _v0 = A2($author$project$Libs$Regex$matches, '^STATISTICS\\s+(?<value>[0-9]+)$', property);
	if ((_v0.b && (!_v0.a.$)) && (!_v0.b.b)) {
		var value = _v0.a.a;
		return A2(
			$elm$core$Result$fromMaybe,
			_List_fromArray(
				['Statistics value is not a number: \'' + (value + '\'')]),
			$elm$core$String$toInt(value));
	} else {
		return $elm$core$Result$Err(
			_List_fromArray(
				['Can\'t parse statistics: \'' + (property + '\'')]));
	}
};
var $author$project$DataSources$SqlMiner$Parsers$AlterTable$parseAlterTableAlterColumn = function (command) {
	var _v0 = A2($author$project$Libs$Regex$matches, '^ALTER\\s+COLUMN\\s+(?<column>[^ .]+)\\s+SET\\s+(?<property>.+)$', command);
	if ((((_v0.b && (!_v0.a.$)) && _v0.b.b) && (!_v0.b.a.$)) && (!_v0.b.b.b)) {
		var column = _v0.a.a;
		var _v1 = _v0.b;
		var property = _v1.a.a;
		return A2($author$project$Libs$Regex$matchI, '^DEFAULT', property) ? A2(
			$elm$core$Result$map,
			$author$project$DataSources$SqlMiner$Parsers$AlterTable$ColumnDefault(
				$author$project$DataSources$SqlMiner$Utils$Helpers$buildColumnName(column)),
			$author$project$DataSources$SqlMiner$Parsers$AlterTable$parseAlterTableAlterColumnDefault(property)) : (A2($author$project$Libs$Regex$matchI, '^STATISTICS', property) ? A2(
			$elm$core$Result$map,
			$author$project$DataSources$SqlMiner$Parsers$AlterTable$ColumnStatistics(
				$author$project$DataSources$SqlMiner$Utils$Helpers$buildColumnName(column)),
			$author$project$DataSources$SqlMiner$Parsers$AlterTable$parseAlterTableAlterColumnStatistics(property)) : $elm$core$Result$Err(
			_List_fromArray(
				['Column update not handled: \'' + (property + '\'')])));
	} else {
		return $elm$core$Result$Err(
			_List_fromArray(
				['Can\'t parse alter column: \'' + (command + '\'')]));
	}
};
var $author$project$DataSources$SqlMiner$Utils$Helpers$noEnclosingParenthesis = function (text) {
	return A2($author$project$DataSources$SqlMiner$Utils$Helpers$extract, '^\\((.*)\\)$', text);
};
var $author$project$DataSources$SqlMiner$Utils$Helpers$buildColumnValue = function (value) {
	return $author$project$DataSources$SqlMiner$Utils$Helpers$noEnclosingParenthesis(
		$author$project$DataSources$SqlMiner$Utils$Helpers$noEnclosingQuotes(
			$elm$core$String$trim(value)));
};
var $author$project$DataSources$SqlMiner$Parsers$AlterTable$parseAlterTableColumnDefault = function (command) {
	var _v0 = A2($author$project$Libs$Regex$matches, '^ADD\\s+DEFAULT\\s+(?<value>.*)\\s+FOR\\s+(?<column>[^ .]+)\\s*$', command);
	if ((((_v0.b && (!_v0.a.$)) && _v0.b.b) && (!_v0.b.a.$)) && (!_v0.b.b.b)) {
		var value = _v0.a.a;
		var _v1 = _v0.b;
		var column = _v1.a.a;
		return $elm$core$Result$Ok(
			A2(
				$author$project$DataSources$SqlMiner$Parsers$AlterTable$ColumnDefault,
				$author$project$DataSources$SqlMiner$Utils$Helpers$buildColumnName(column),
				$author$project$DataSources$SqlMiner$Utils$Helpers$buildColumnValue(value)));
	} else {
		return $elm$core$Result$Err(
			_List_fromArray(
				['Can\'t parse add default: \'' + (command + '\'')]));
	}
};
var $author$project$DataSources$SqlMiner$Parsers$AlterTable$parseAlterTableDropColumn = function (command) {
	var _v0 = A2($author$project$Libs$Regex$matches, '^DROP\\s+COLUMN\\s+(?<column>[^ .]+)$', command);
	if ((_v0.b && (!_v0.a.$)) && (!_v0.b.b)) {
		var column = _v0.a.a;
		return $elm$core$Result$Ok(
			$author$project$DataSources$SqlMiner$Utils$Helpers$buildColumnName(column));
	} else {
		return $elm$core$Result$Err(
			_List_fromArray(
				['Can\'t parse drop column: \'' + (command + '\'')]));
	}
};
var $author$project$DataSources$SqlMiner$Parsers$AlterTable$parseAlterTableDropConstraint = function (command) {
	var _v0 = A2($author$project$Libs$Regex$matches, '^DROP\\s+CONSTRAINT(?:\\s+IF EXISTS)? (?<name>.+)$', command);
	if ((_v0.b && (!_v0.a.$)) && (!_v0.b.b)) {
		var name = _v0.a.a;
		return $elm$core$Result$Ok(name);
	} else {
		return $elm$core$Result$Err(
			_List_fromArray(
				['Can\'t parse drop constraint: \'' + (command + '\'')]));
	}
};
var $author$project$DataSources$SqlMiner$Parsers$AlterTable$parseAlterTableOwnerTo = function (command) {
	var _v0 = A2($author$project$Libs$Regex$matches, '^OWNER\\s+TO\\s+(?<user>.+)$', command);
	if ((_v0.b && (!_v0.a.$)) && (!_v0.b.b)) {
		var user = _v0.a.a;
		return $elm$core$Result$Ok(user);
	} else {
		return $elm$core$Result$Err(
			_List_fromArray(
				['Can\'t parse alter column: \'' + (command + '\'')]));
	}
};
var $author$project$DataSources$SqlMiner$Parsers$AlterTable$parseAlterTable = function (statement) {
	var _v0 = A2(
		$author$project$Libs$Regex$matches,
		'^ALTER TABLE(?:\\s+ONLY)?(?:\\s+IF EXISTS)?\\s+(?:(?<schema>[^ .]+)\\.\\s*)?(?<table>[^ .]+)\\s+(?:WITH\\s+CHECK\\s+)?(?<command>.*);$',
		$author$project$DataSources$SqlMiner$Utils$Helpers$buildSqlLine(statement));
	if (((((_v0.b && _v0.b.b) && (!_v0.b.a.$)) && _v0.b.b.b) && (!_v0.b.b.a.$)) && (!_v0.b.b.b.b)) {
		var schema = _v0.a;
		var _v1 = _v0.b;
		var table = _v1.a.a;
		var _v2 = _v1.b;
		var command = _v2.a.a;
		var tableName = $author$project$DataSources$SqlMiner$Utils$Helpers$buildTableName(table);
		var schemaName = A2($elm$core$Maybe$map, $author$project$DataSources$SqlMiner$Utils$Helpers$buildSchemaName, schema);
		return A2($author$project$Libs$Regex$matchI, '^ADD\\s+PRIMARY\\s+KEY( |$)', command) ? A2(
			$elm$core$Result$map,
			function (r) {
				return A3(
					$author$project$DataSources$SqlMiner$Parsers$AlterTable$AddTableConstraint,
					schemaName,
					tableName,
					A2($author$project$DataSources$SqlMiner$Parsers$AlterTable$ParsedPrimaryKey, $elm$core$Maybe$Nothing, r));
			},
			$author$project$DataSources$SqlMiner$Parsers$AlterTable$parseAlterTableAddConstraintPrimaryKey(
				A2($elm$core$String$dropLeft, 4, command))) : (A2($author$project$Libs$Regex$matchI, '^ADD\\s+CONSTRAINT( |$)', command) ? A2(
			$elm$core$Result$map,
			A2($author$project$DataSources$SqlMiner$Parsers$AlterTable$AddTableConstraint, schemaName, tableName),
			$author$project$DataSources$SqlMiner$Parsers$AlterTable$parseAlterTableAddConstraint(command)) : (A2($author$project$Libs$Regex$matchI, '^ADD\\s+FOREIGN\\s+KEY( |$)', command) ? A2(
			$elm$core$Result$map,
			A2($author$project$DataSources$SqlMiner$Parsers$AlterTable$AddTableConstraint, schemaName, tableName),
			A2(
				$elm$core$Result$map,
				$author$project$DataSources$SqlMiner$Parsers$AlterTable$ParsedForeignKey($elm$core$Maybe$Nothing),
				$author$project$DataSources$SqlMiner$Parsers$AlterTable$parseAlterTableAddConstraintForeignKey(
					A2($elm$core$String$dropLeft, 4, command)))) : (A2($author$project$Libs$Regex$matchI, '^ALTER\\s+COLUMN( |$)', command) ? A2(
			$elm$core$Result$map,
			A2($author$project$DataSources$SqlMiner$Parsers$AlterTable$AlterColumn, schemaName, tableName),
			$author$project$DataSources$SqlMiner$Parsers$AlterTable$parseAlterTableAlterColumn(command)) : (A2($author$project$Libs$Regex$matchI, '^ADD\\s+DEFAULT( |$)', command) ? A2(
			$elm$core$Result$map,
			A2($author$project$DataSources$SqlMiner$Parsers$AlterTable$AlterColumn, schemaName, tableName),
			$author$project$DataSources$SqlMiner$Parsers$AlterTable$parseAlterTableColumnDefault(command)) : (A2($author$project$Libs$Regex$matchI, '^DROP\\s+COLUMN( |$)', command) ? A2(
			$elm$core$Result$map,
			A2($author$project$DataSources$SqlMiner$Parsers$AlterTable$DropColumn, schemaName, tableName),
			$author$project$DataSources$SqlMiner$Parsers$AlterTable$parseAlterTableDropColumn(command)) : (A2($author$project$Libs$Regex$matchI, '^OWNER\\s+TO( |$)', command) ? A2(
			$elm$core$Result$map,
			A2($author$project$DataSources$SqlMiner$Parsers$AlterTable$AddTableOwner, schemaName, tableName),
			$author$project$DataSources$SqlMiner$Parsers$AlterTable$parseAlterTableOwnerTo(command)) : (A2($author$project$Libs$Regex$matchI, '^ATTACH\\s+PARTITION( |$)', command) ? $elm$core$Result$Ok(
			A2($author$project$DataSources$SqlMiner$Parsers$AlterTable$AttachPartition, schemaName, tableName)) : (A2($author$project$Libs$Regex$matchI, '^DROP\\s+CONSTRAINT( |$)', command) ? A2(
			$elm$core$Result$map,
			A2($author$project$DataSources$SqlMiner$Parsers$AlterTable$DropConstraint, schemaName, tableName),
			$author$project$DataSources$SqlMiner$Parsers$AlterTable$parseAlterTableDropConstraint(command)) : (A2($author$project$Libs$Regex$matchI, '^REPLICA\\s+IDENTITY( |$)', command) ? $elm$core$Result$Ok(
			$author$project$DataSources$SqlMiner$Parsers$AlterTable$IgnoredCommand(command)) : (A2($author$project$Libs$Regex$matchI, '^ENABLE\\s+ROW\\s+LEVEL\\s+SECURITY', command) ? $elm$core$Result$Ok(
			$author$project$DataSources$SqlMiner$Parsers$AlterTable$IgnoredCommand(command)) : $elm$core$Result$Err(
			_List_fromArray(
				['Alter table command not handled: \'' + (command + '\'')]))))))))))));
	} else {
		return $elm$core$Result$Err(
			_List_fromArray(
				[
					'Can\'t parse alter table: \'' + ($author$project$DataSources$SqlMiner$Utils$Helpers$buildRawSql(statement) + '\'')
				]));
	}
};
var $elm$core$String$replace = F3(
	function (before, after, string) {
		return A2(
			$elm$core$String$join,
			after,
			A2($elm$core$String$split, before, string));
	});
var $author$project$DataSources$SqlMiner$Utils$Helpers$buildComment = function (comment) {
	return A3(
		$elm$core$String$replace,
		'\"\"',
		'\"',
		A3($elm$core$String$replace, '\'\'', '\'', comment));
};
var $author$project$DataSources$SqlMiner$Parsers$Comment$parseColumnComment = function (statement) {
	var _v0 = A2(
		$author$project$Libs$Regex$matches,
		'^COMMENT ON COLUMN\\s+(?:(?<schema>[^ .]+)\\.)?(?<table>[^ .]+)\\.(?<column>[^ .]+)\\s+IS\\s+\'(?<comment>(?:[^\']|\'\')+)\';$',
		$author$project$DataSources$SqlMiner$Utils$Helpers$buildSqlLine(statement));
	if (((((((_v0.b && _v0.b.b) && (!_v0.b.a.$)) && _v0.b.b.b) && (!_v0.b.b.a.$)) && _v0.b.b.b.b) && (!_v0.b.b.b.a.$)) && (!_v0.b.b.b.b.b)) {
		var schema = _v0.a;
		var _v1 = _v0.b;
		var table = _v1.a.a;
		var _v2 = _v1.b;
		var column = _v2.a.a;
		var _v3 = _v2.b;
		var comment = _v3.a.a;
		return $elm$core$Result$Ok(
			{
				bH: $author$project$DataSources$SqlMiner$Utils$Helpers$buildColumnName(column),
				h4: $author$project$DataSources$SqlMiner$Utils$Helpers$buildComment(comment),
				aI: A2($elm$core$Maybe$map, $author$project$DataSources$SqlMiner$Utils$Helpers$buildSchemaName, schema),
				aq: $author$project$DataSources$SqlMiner$Utils$Helpers$buildTableName(table)
			});
	} else {
		return $elm$core$Result$Err(
			_List_fromArray(
				[
					'Can\'t parse column comment: \'' + ($author$project$DataSources$SqlMiner$Utils$Helpers$buildRawSql(statement) + '\'')
				]));
	}
};
var $author$project$DataSources$SqlMiner$Parsers$Comment$parseColumnConstraint = function (statement) {
	var _v0 = A2(
		$author$project$Libs$Regex$matches,
		'^COMMENT ON CONSTRAINT\\s+(?<constraint>[^ ]+)\\s+ON\\s+(?:(?<schema>[^ .]+)\\.)?(?<table>[^ .]+)\\s+IS\\s+\'(?<comment>(?:[^\']|\'\')+)\';$',
		$author$project$DataSources$SqlMiner$Utils$Helpers$buildSqlLine(statement));
	if (((((((_v0.b && (!_v0.a.$)) && _v0.b.b) && _v0.b.b.b) && (!_v0.b.b.a.$)) && _v0.b.b.b.b) && (!_v0.b.b.b.a.$)) && (!_v0.b.b.b.b.b)) {
		var constraint = _v0.a.a;
		var _v1 = _v0.b;
		var schema = _v1.a;
		var _v2 = _v1.b;
		var table = _v2.a.a;
		var _v3 = _v2.b;
		var comment = _v3.a.a;
		return $elm$core$Result$Ok(
			{
				h4: $author$project$DataSources$SqlMiner$Utils$Helpers$buildComment(comment),
				h8: $author$project$DataSources$SqlMiner$Utils$Helpers$buildConstraintName(constraint),
				aI: A2($elm$core$Maybe$map, $author$project$DataSources$SqlMiner$Utils$Helpers$buildSchemaName, schema),
				aq: $author$project$DataSources$SqlMiner$Utils$Helpers$buildTableName(table)
			});
	} else {
		return $elm$core$Result$Err(
			_List_fromArray(
				[
					'Can\'t parse constraint comment: \'' + ($author$project$DataSources$SqlMiner$Utils$Helpers$buildRawSql(statement) + '\'')
				]));
	}
};
var $author$project$DataSources$SqlMiner$Parsers$CreateIndex$parseCreateIndex = function (statement) {
	var _v0 = A2(
		$author$project$Libs$Regex$matches,
		'^CREATE INDEX\\s+(?<name>[^ ]+)\\s+ON(?:\\s+ONLY)?\\s+(?:(?<schema>[^ .]+)\\.)?(?<table>[^ (]+)\\s*(?<definition>.+);$',
		$author$project$DataSources$SqlMiner$Utils$Helpers$buildSqlLine(statement));
	if (((((((_v0.b && (!_v0.a.$)) && _v0.b.b) && _v0.b.b.b) && (!_v0.b.b.a.$)) && _v0.b.b.b.b) && (!_v0.b.b.b.a.$)) && (!_v0.b.b.b.b.b)) {
		var name = _v0.a.a;
		var _v1 = _v0.b;
		var schema = _v1.a;
		var _v2 = _v1.b;
		var table = _v2.a.a;
		var _v3 = _v2.b;
		var definition = _v3.a.a;
		return A2(
			$elm$core$Result$map,
			function (columns) {
				return {
					M: A2($author$project$Libs$Nel$map, $author$project$DataSources$SqlMiner$Utils$Helpers$buildColumnName, columns),
					ii: definition,
					eS: $author$project$DataSources$SqlMiner$Utils$Helpers$buildConstraintName(name),
					aq: {
						aI: A2($elm$core$Maybe$map, $author$project$DataSources$SqlMiner$Utils$Helpers$buildSchemaName, schema),
						aq: $author$project$DataSources$SqlMiner$Utils$Helpers$buildTableName(table)
					}
				};
			},
			A2(
				$elm$core$Result$andThen,
				function (columns) {
					return A2(
						$elm$core$Result$fromMaybe,
						_List_fromArray(
							['Index can\'t have empty columns']),
						$author$project$Libs$Nel$fromList(columns));
				},
				$author$project$DataSources$SqlMiner$Utils$Helpers$parseIndexDefinition(definition)));
	} else {
		return $elm$core$Result$Err(
			_List_fromArray(
				[
					'Can\'t parse create index: \'' + ($author$project$DataSources$SqlMiner$Utils$Helpers$buildRawSql(statement) + '\'')
				]));
	}
};
var $author$project$DataSources$SqlMiner$Parsers$CreateTable$checkConstraints = function (constraint) {
	if (constraint.$ === 3) {
		var name = constraint.a;
		var columns = constraint.b.M;
		var predicate = constraint.b.nI;
		return $elm$core$Maybe$Just(
			{M: columns, eS: name, nI: predicate});
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $author$project$DataSources$SqlMiner$Parsers$CreateTable$columnUniqueKey = F2(
	function (table, col) {
		return A2(
			$elm$core$Maybe$map,
			function (u) {
				return {
					M: A2($author$project$Libs$Nel$Nel, col.eS, _List_Nil),
					ii: u,
					eS: A2($author$project$DataSources$Helpers$defaultUniqueName, table, col.eS)
				};
			},
			col.o$);
	});
var $elm$core$String$foldr = _String_foldr;
var $elm$core$List$tail = function (list) {
	if (list.b) {
		var x = list.a;
		var xs = list.b;
		return $elm$core$Maybe$Just(xs);
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $author$project$DataSources$SqlMiner$Utils$Helpers$commaSplit = function (text) {
	return function (_v1) {
		var res = _v1.a;
		var end = _v1.b;
		return A2(
			$elm$core$List$cons,
			$elm$core$String$fromList(end),
			res);
	}(
		A3(
			$elm$core$String$foldr,
			F2(
				function (_char, _v0) {
					var res = _v0.a;
					var cur = _v0.b;
					var open = _v0.c;
					return ((_char === ',') && $elm$core$List$isEmpty(open)) ? _Utils_Tuple3(
						A2(
							$elm$core$List$cons,
							$elm$core$String$fromList(cur),
							res),
						_List_Nil,
						open) : (((_char === '(') && _Utils_eq(
						$elm$core$List$head(open),
						$elm$core$Maybe$Just(')'))) ? _Utils_Tuple3(
						res,
						A2($elm$core$List$cons, _char, cur),
						A2(
							$elm$core$Maybe$withDefault,
							_List_Nil,
							$elm$core$List$tail(open))) : ((_char === ')') ? _Utils_Tuple3(
						res,
						A2($elm$core$List$cons, _char, cur),
						A2($elm$core$List$cons, _char, open)) : (((_char === '\'') && _Utils_eq(
						$elm$core$List$head(open),
						$elm$core$Maybe$Just('\''))) ? _Utils_Tuple3(
						res,
						A2($elm$core$List$cons, _char, cur),
						A2(
							$elm$core$Maybe$withDefault,
							_List_Nil,
							$elm$core$List$tail(open))) : (((_char === '\'') && (!_Utils_eq(
						$elm$core$List$head(open),
						$elm$core$Maybe$Just('\"')))) ? _Utils_Tuple3(
						res,
						A2($elm$core$List$cons, _char, cur),
						A2($elm$core$List$cons, _char, open)) : (((_char === '\"') && _Utils_eq(
						$elm$core$List$head(open),
						$elm$core$Maybe$Just('\"'))) ? _Utils_Tuple3(
						res,
						A2($elm$core$List$cons, _char, cur),
						A2(
							$elm$core$Maybe$withDefault,
							_List_Nil,
							$elm$core$List$tail(open))) : (((_char === '\"') && (!_Utils_eq(
						$elm$core$List$head(open),
						$elm$core$Maybe$Just('\'')))) ? _Utils_Tuple3(
						res,
						A2($elm$core$List$cons, _char, cur),
						A2($elm$core$List$cons, _char, open)) : _Utils_Tuple3(
						res,
						A2($elm$core$List$cons, _char, cur),
						open)))))));
				}),
			_Utils_Tuple3(_List_Nil, _List_Nil, _List_Nil),
			text));
};
var $elm$core$String$foldl = _String_foldl;
var $author$project$DataSources$SqlMiner$Parsers$CreateTable$extractBody = function (rest) {
	return function (_v2) {
		var body = _v2.a;
		var options = _v2.b;
		return _Utils_Tuple2(
			$elm$core$String$fromList(
				$elm$core$List$reverse(body)),
			$elm$core$String$trim(
				$elm$core$String$fromList(
					$elm$core$List$reverse(options))));
	}(
		A3(
			$elm$core$String$foldl,
			F2(
				function (_char, _v0) {
					var body = _v0.a;
					var options = _v0.b;
					var _v1 = _v0.c;
					var nesting = _v1.a;
					var isBody = _v1.b;
					return (!isBody) ? _Utils_Tuple3(
						body,
						A2($elm$core$List$cons, _char, options),
						_Utils_Tuple2(nesting, isBody)) : (((_char === '(') && $elm$core$List$isEmpty(body)) ? _Utils_Tuple3(
						body,
						options,
						_Utils_Tuple2(nesting, true)) : ((_char === '(') ? _Utils_Tuple3(
						A2($elm$core$List$cons, _char, body),
						options,
						_Utils_Tuple2(
							A2($elm$core$List$cons, _char, nesting),
							isBody)) : (((_char === ')') && $elm$core$List$isEmpty(nesting)) ? _Utils_Tuple3(
						body,
						options,
						_Utils_Tuple2(nesting, false)) : ((_char === ')') ? _Utils_Tuple3(
						A2($elm$core$List$cons, _char, body),
						options,
						_Utils_Tuple2(
							A2(
								$elm$core$Maybe$withDefault,
								_List_Nil,
								$elm$core$List$tail(nesting)),
							isBody)) : _Utils_Tuple3(
						A2($elm$core$List$cons, _char, body),
						options,
						_Utils_Tuple2(nesting, isBody))))));
				}),
			_Utils_Tuple3(
				_List_Nil,
				_List_Nil,
				_Utils_Tuple2(_List_Nil, true)),
			rest));
};
var $author$project$DataSources$SqlMiner$Parsers$CreateTable$foreignKeyConstraints = function (constraint) {
	if (constraint.$ === 1) {
		var name = constraint.a;
		var fks = constraint.b;
		return $elm$core$Maybe$Just(
			{eS: name, dG: fks.ev.dG, ht: fks.ev.bH});
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $elm$core$Result$map2 = F3(
	function (func, ra, rb) {
		if (ra.$ === 1) {
			var x = ra.a;
			return $elm$core$Result$Err(x);
		} else {
			var a = ra.a;
			if (rb.$ === 1) {
				var x = rb.a;
				return $elm$core$Result$Err(x);
			} else {
				var b = rb.a;
				return $elm$core$Result$Ok(
					A2(func, a, b));
			}
		}
	});
var $elm$core$Result$map3 = F4(
	function (func, ra, rb, rc) {
		if (ra.$ === 1) {
			var x = ra.a;
			return $elm$core$Result$Err(x);
		} else {
			var a = ra.a;
			if (rb.$ === 1) {
				var x = rb.a;
				return $elm$core$Result$Err(x);
			} else {
				var b = rb.a;
				if (rc.$ === 1) {
					var x = rc.a;
					return $elm$core$Result$Err(x);
				} else {
					var c = rc.a;
					return $elm$core$Result$Ok(
						A3(func, a, b, c));
				}
			}
		}
	});
var $author$project$Libs$Result$map6 = F7(
	function (func, ra, rb, rc, rd, re, rf) {
		return A3(
			$elm$core$Result$map2,
			F2(
				function (_v0, _v1) {
					var a = _v0.a;
					var b = _v0.b;
					var c = _v0.c;
					var d = _v1.a;
					var e = _v1.b;
					var f = _v1.c;
					return A6(func, a, b, c, d, e, f);
				}),
			A4(
				$elm$core$Result$map3,
				F3(
					function (a, b, c) {
						return _Utils_Tuple3(a, b, c);
					}),
				ra,
				rb,
				rc),
			A4(
				$elm$core$Result$map3,
				F3(
					function (d, e, f) {
						return _Utils_Tuple3(d, e, f);
					}),
				rd,
				re,
				rf));
	});
var $author$project$Libs$String$nonEmpty = function (string) {
	return string !== '';
};
var $author$project$DataSources$SqlMiner$Utils$Helpers$buildColumnType = function (name) {
	return $author$project$DataSources$SqlMiner$Utils$Helpers$noEnclosingQuotes(
		$elm$core$String$trim(name));
};
var $author$project$DataSources$SqlMiner$Parsers$CreateTable$parseCreateTableColumnForeignKey = function (constraint) {
	var _v0 = A2($author$project$Libs$Regex$matches, '^(?<constraint>[^ ]+)\\s+REFERENCES\\s+(?:(?<schema>[^ .]+)\\.)?(?<table>[^ .]+)(?:\\.(?<column>[^ .]+))?$', constraint);
	if (((((_v0.b && _v0.b.b) && _v0.b.b.b) && (!_v0.b.b.a.$)) && _v0.b.b.b.b) && (!_v0.b.b.b.b.b)) {
		if ((!_v0.b.a.$) && (_v0.b.b.b.a.$ === 1)) {
			var constraintName = _v0.a;
			var _v1 = _v0.b;
			var table = _v1.a.a;
			var _v2 = _v1.b;
			var column = _v2.a.a;
			var _v3 = _v2.b;
			var _v4 = _v3.a;
			return $elm$core$Result$Ok(
				_Utils_Tuple2(
					constraintName,
					{
						bH: $elm$core$Maybe$Just(
							$author$project$DataSources$SqlMiner$Utils$Helpers$buildColumnName(column)),
						aI: $elm$core$Maybe$Nothing,
						aq: $author$project$DataSources$SqlMiner$Utils$Helpers$buildTableName(table)
					}));
		} else {
			var constraintName = _v0.a;
			var _v5 = _v0.b;
			var schema = _v5.a;
			var _v6 = _v5.b;
			var table = _v6.a.a;
			var _v7 = _v6.b;
			var column = _v7.a;
			return $elm$core$Result$Ok(
				_Utils_Tuple2(
					constraintName,
					{
						bH: A2($elm$core$Maybe$map, $author$project$DataSources$SqlMiner$Utils$Helpers$buildColumnName, column),
						aI: A2($elm$core$Maybe$map, $author$project$DataSources$SqlMiner$Utils$Helpers$buildSchemaName, schema),
						aq: $author$project$DataSources$SqlMiner$Utils$Helpers$buildTableName(table)
					}));
		}
	} else {
		var _v8 = A2($author$project$Libs$Regex$matches, '^(?:(?<constraint>[^ ]+)\\s+)?REFERENCES\\s+(?:(?<schema>[^ .]+)\\.)?(?<table>[^ .(]+)(?:\\s*\\((?<column>[^ .]+)\\))?' + ($author$project$DataSources$SqlMiner$Utils$Helpers$sqlTriggers + '$'), constraint);
		if (((((_v8.b && _v8.b.b) && _v8.b.b.b) && (!_v8.b.b.a.$)) && _v8.b.b.b.b) && (!_v8.b.b.b.b.b)) {
			var constraintName = _v8.a;
			var _v9 = _v8.b;
			var schema = _v9.a;
			var _v10 = _v9.b;
			var table = _v10.a.a;
			var _v11 = _v10.b;
			var column = _v11.a;
			return $elm$core$Result$Ok(
				_Utils_Tuple2(
					constraintName,
					{
						bH: A2($elm$core$Maybe$map, $author$project$DataSources$SqlMiner$Utils$Helpers$buildColumnName, column),
						aI: A2($elm$core$Maybe$map, $author$project$DataSources$SqlMiner$Utils$Helpers$buildSchemaName, schema),
						aq: $author$project$DataSources$SqlMiner$Utils$Helpers$buildTableName(table)
					}));
		} else {
			return $elm$core$Result$Err('Can\'t parse foreign key: \'' + (constraint + '\' in create table'));
		}
	}
};
var $author$project$DataSources$SqlMiner$Parsers$CreateTable$parseCreateTableColumnPrimaryKey = function (constraint) {
	var _v0 = A2($author$project$Libs$Regex$matches, '^(?<constraint>[^ ]+)?\\s+PRIMARY KEY$', constraint);
	if (_v0.b && (!_v0.b.b)) {
		var constraintName = _v0.a;
		return $elm$core$Result$Ok(
			A2($elm$core$Maybe$withDefault, '', constraintName));
	} else {
		return $elm$core$Result$Err('Can\'t parse primary key: \'' + (constraint + '\' in create table'));
	}
};
var $elm$regex$Regex$split = _Regex_splitAtMost(_Regex_infinity);
var $elm$core$String$toUpper = _String_toUpper;
var $author$project$DataSources$SqlMiner$Parsers$CreateTable$parseCreateTableColumn = function (sql) {
	var _v0 = A2($author$project$Libs$Regex$matches, '^(?<name>[^ ]+)\\s+(?<type>.*?)(?:\\s+COLLATE [^ ]+)?(?:\\s+DEFAULT\\s+(?<default1>.*?))?( PRIMARY KEY)?(?<nullable>\\s+NOT NULL)?(?:\\s+COLLATE [^ ]+)?(?:\\s+DEFAULT\\s+(?<default2>.*?))?(?:\\s+CONSTRAINT\\s+(?<constraint>.*))?(?:\\s+(?<reference>REFERENCES\\s+.*?))?(?<nullable2>\\s+NOT NULL)?(?: AUTO_INCREMENT)?( PRIMARY KEY)?( UNIQUE)?(?: CHECK\\((?<check>.*?)\\))?( GENERATED .*?)?(?:\\s+COMMENT \'(?<comment>(?:[^\']|\'\')+)\')?(?:\\s+COMMENT \"(?<comment2>(?:[^\"]|\"\")+)\")?$', sql);
	if (((((((((((((((((_v0.b && (!_v0.a.$)) && _v0.b.b) && (!_v0.b.a.$)) && _v0.b.b.b) && _v0.b.b.b.b) && _v0.b.b.b.b.b) && _v0.b.b.b.b.b.b) && _v0.b.b.b.b.b.b.b) && _v0.b.b.b.b.b.b.b.b) && _v0.b.b.b.b.b.b.b.b.b) && _v0.b.b.b.b.b.b.b.b.b.b) && _v0.b.b.b.b.b.b.b.b.b.b.b) && _v0.b.b.b.b.b.b.b.b.b.b.b.b) && _v0.b.b.b.b.b.b.b.b.b.b.b.b.b) && _v0.b.b.b.b.b.b.b.b.b.b.b.b.b.b) && _v0.b.b.b.b.b.b.b.b.b.b.b.b.b.b.b) && (!_v0.b.b.b.b.b.b.b.b.b.b.b.b.b.b.b.b)) {
		var name = _v0.a.a;
		var _v1 = _v0.b;
		var kind = _v1.a.a;
		var _v2 = _v1.b;
		var default1 = _v2.a;
		var _v3 = _v2.b;
		var maybePrimary = _v3.a;
		var _v4 = _v3.b;
		var nullable = _v4.a;
		var _v5 = _v4.b;
		var default2 = _v5.a;
		var _v6 = _v5.b;
		var maybeConstraints = _v6.a;
		var _v7 = _v6.b;
		var maybeReference = _v7.a;
		var _v8 = _v7.b;
		var nullable2 = _v8.a;
		var _v9 = _v8.b;
		var maybePrimary2 = _v9.a;
		var _v10 = _v9.b;
		var maybeUnique = _v10.a;
		var _v11 = _v10.b;
		var maybeCheck = _v11.a;
		var _v12 = _v11.b;
		var maybeGenerated = _v12.a;
		var _v13 = _v12.b;
		var maybeComment = _v13.a;
		var _v14 = _v13.b;
		var maybeComment2 = _v14.a;
		return A2(
			$elm$core$Result$map,
			function (_v16) {
				var primaryKey = _v16.a;
				var foreignKey = _v16.b;
				var nullable3 = _v16.c;
				return {
					kY: maybeCheck,
					h4: A2(
						$elm$core$Maybe$map,
						$author$project$DataSources$SqlMiner$Utils$Helpers$buildComment,
						A2($author$project$Libs$Maybe$orElse, maybeComment2, maybeComment)),
					lf: A2(
						$author$project$Libs$Maybe$orElse,
						A2($elm$core$Maybe$map, $elm$core$String$trim, maybeGenerated),
						A2($author$project$Libs$Maybe$orElse, default2, default1)),
					lQ: foreignKey,
					gi: $author$project$DataSources$SqlMiner$Utils$Helpers$buildColumnType(kind),
					eS: $author$project$DataSources$SqlMiner$Utils$Helpers$buildColumnName(name),
					nf: _Utils_eq(nullable, $elm$core$Maybe$Nothing) && (_Utils_eq(nullable2, $elm$core$Maybe$Nothing) && nullable3),
					nL: primaryKey,
					o$: A2($elm$core$Maybe$map, $elm$core$String$trim, maybeUnique)
				};
			},
			A3(
				$elm$core$List$foldl,
				F2(
					function (constraint, acc) {
						return A2(
							$elm$core$Result$andThen,
							function (_v15) {
								var primary = _v15.a;
								var foreign = _v15.b;
								var _null = _v15.c;
								return A2(
									$elm$core$String$contains,
									'PRIMARY KEY',
									$elm$core$String$toUpper(constraint)) ? A2(
									$elm$core$Result$map,
									function (pk) {
										return _Utils_Tuple3(
											$elm$core$Maybe$Just(pk),
											foreign,
											_null);
									},
									$author$project$DataSources$SqlMiner$Parsers$CreateTable$parseCreateTableColumnPrimaryKey(constraint)) : (A2(
									$elm$core$String$contains,
									'REFERENCES',
									$elm$core$String$toUpper(constraint)) ? A2(
									$elm$core$Result$map,
									function (fk) {
										return _Utils_Tuple3(
											primary,
											$elm$core$Maybe$Just(fk),
											_null);
									},
									$author$project$DataSources$SqlMiner$Parsers$CreateTable$parseCreateTableColumnForeignKey(constraint)) : (A2(
									$elm$core$String$contains,
									'NOT NULL',
									$elm$core$String$toUpper(constraint)) ? $elm$core$Result$Ok(
									_Utils_Tuple3(primary, foreign, false)) : $elm$core$Result$Err('Constraint not handled: \'' + (constraint + '\' in create table'))));
							},
							acc);
					}),
				$elm$core$Result$Ok(
					_Utils_Tuple3($elm$core$Maybe$Nothing, $elm$core$Maybe$Nothing, true)),
				function (constraints) {
					return _Utils_ap(
						constraints,
						A2(
							$elm$core$List$filterMap,
							$elm$core$Basics$identity,
							_List_fromArray(
								[
									maybeReference,
									A2($author$project$Libs$Maybe$orElse, maybePrimary2, maybePrimary)
								])));
				}(
					A3(
						$author$project$Libs$Maybe$mapOrElse,
						$elm$regex$Regex$split(
							$author$project$Libs$Regex$asRegexI(' *constraint *')),
						_List_Nil,
						maybeConstraints))));
	} else {
		return $elm$core$Result$Err('Can\'t parse column: \'' + (sql + '\''));
	}
};
var $author$project$DataSources$SqlMiner$Parsers$CreateTable$parseCreateTableForeignKey = function (sql) {
	var _v0 = A2($author$project$Libs$Regex$matches, '^FOREIGN KEY\\s*\\((?<src>[^)]+)\\)\\s*REFERENCES\\s+(?:(?<schema>[^ .]+)\\.)?(?<table>[^ .(]+)\\s*\\((?<column>[^ .)]+)\\)' + ($author$project$DataSources$SqlMiner$Utils$Helpers$sqlTriggers + '$'), sql);
	if (((((((_v0.b && (!_v0.a.$)) && _v0.b.b) && _v0.b.b.b) && (!_v0.b.b.a.$)) && _v0.b.b.b.b) && (!_v0.b.b.b.a.$)) && (!_v0.b.b.b.b.b)) {
		var src = _v0.a.a;
		var _v1 = _v0.b;
		var schema = _v1.a;
		var _v2 = _v1.b;
		var table = _v2.a.a;
		var _v3 = _v2.b;
		var column = _v3.a.a;
		return $elm$core$Result$Ok(
			{
				eS: $elm$core$Maybe$Nothing,
				dG: {
					bH: $elm$core$Maybe$Just(
						$author$project$DataSources$SqlMiner$Utils$Helpers$buildColumnName(column)),
					aI: A2($elm$core$Maybe$map, $author$project$DataSources$SqlMiner$Utils$Helpers$buildSchemaName, schema),
					aq: $author$project$DataSources$SqlMiner$Utils$Helpers$buildTableName(table)
				},
				ht: $author$project$DataSources$SqlMiner$Utils$Helpers$buildColumnName(src)
			});
	} else {
		return $elm$core$Result$Err('Can\'t parse table foreign key: \'' + (sql + '\''));
	}
};
var $author$project$DataSources$SqlMiner$Parsers$CreateTable$parseCreateTableKey = function (sql) {
	var _v0 = A2($author$project$Libs$Regex$matches, '^KEY (?<name>[^ ]+) \\((?<columns>.+)\\)(?:\\s+USING [^ ]+)?$', sql);
	if ((((_v0.b && (!_v0.a.$)) && _v0.b.b) && (!_v0.b.a.$)) && (!_v0.b.b.b)) {
		var name = _v0.a.a;
		var _v1 = _v0.b;
		var columns = _v1.a.a;
		return A2(
			$elm$core$Result$map,
			function (cols) {
				return {
					M: cols,
					ii: sql,
					eS: $author$project$DataSources$SqlMiner$Utils$Helpers$buildConstraintName(name)
				};
			},
			A2(
				$elm$core$Result$fromMaybe,
				'Key can\'t have no column',
				$author$project$Libs$Nel$fromList(
					A2(
						$elm$core$List$map,
						$author$project$DataSources$SqlMiner$Utils$Helpers$buildColumnName,
						A2($elm$core$String$split, ',', columns)))));
	} else {
		return $elm$core$Result$Err('Can\'t parse table key: \'' + (sql + '\''));
	}
};
var $author$project$DataSources$SqlMiner$Parsers$CreateTable$parseCreateTablePrimaryKey = function (sql) {
	var _v0 = A2($author$project$Libs$Regex$matches, '^PRIMARY KEY \\((?<columns>[^)]+)\\)(?:\\s+USING [^ ]+)?$', sql);
	if ((_v0.b && (!_v0.a.$)) && (!_v0.b.b)) {
		var columns = _v0.a.a;
		return A2(
			$elm$core$Result$fromMaybe,
			'Primary key can\'t have no column',
			A2(
				$elm$core$Maybe$map,
				function (cols) {
					return {M: cols, eS: $elm$core$Maybe$Nothing};
				},
				$author$project$Libs$Nel$fromList(
					A2(
						$elm$core$List$map,
						$author$project$DataSources$SqlMiner$Utils$Helpers$buildColumnName,
						A2($elm$core$String$split, ',', columns)))));
	} else {
		return $elm$core$Result$Err('Can\'t parse table primary key: \'' + (sql + '\''));
	}
};
var $author$project$DataSources$SqlMiner$Parsers$CreateTable$parseCreateTableUniqueKey = function (sql) {
	var _v0 = A2($author$project$Libs$Regex$matches, '^UNIQUE KEY (?<name>[^ ]+) \\((?<columns>[^)]+)\\)(?:\\s+USING [^ ]+)?$', sql);
	if ((((_v0.b && (!_v0.a.$)) && _v0.b.b) && (!_v0.b.a.$)) && (!_v0.b.b.b)) {
		var name = _v0.a.a;
		var _v1 = _v0.b;
		var columns = _v1.a.a;
		return A2(
			$elm$core$Result$map,
			function (cols) {
				return {
					M: cols,
					ii: sql,
					eS: $author$project$DataSources$SqlMiner$Utils$Helpers$buildConstraintName(name)
				};
			},
			A2(
				$elm$core$Result$fromMaybe,
				'Unique key can\'t have no column',
				$author$project$Libs$Nel$fromList(
					A2(
						$elm$core$List$map,
						$author$project$DataSources$SqlMiner$Utils$Helpers$buildColumnName,
						A2($elm$core$String$split, ',', columns)))));
	} else {
		return $elm$core$Result$Err('Can\'t parse table unique key: \'' + (sql + '\''));
	}
};
var $elm$core$List$partition = F2(
	function (pred, list) {
		var step = F2(
			function (x, _v0) {
				var trues = _v0.a;
				var falses = _v0.b;
				return pred(x) ? _Utils_Tuple2(
					A2($elm$core$List$cons, x, trues),
					falses) : _Utils_Tuple2(
					trues,
					A2($elm$core$List$cons, x, falses));
			});
		return A3(
			$elm$core$List$foldr,
			step,
			_Utils_Tuple2(_List_Nil, _List_Nil),
			list);
	});
var $author$project$DataSources$SqlMiner$Parsers$CreateTable$primaryKeyConstraints = function (constraint) {
	if (!constraint.$) {
		var name = constraint.a;
		var columns = constraint.b;
		return $elm$core$Maybe$Just(
			{M: columns, eS: name});
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $author$project$Libs$List$resultCollect = function (list) {
	return A3(
		$elm$core$List$foldr,
		F2(
			function (r, _v0) {
				var errs = _v0.a;
				var res = _v0.b;
				if (!r.$) {
					var a = r.a;
					return _Utils_Tuple2(
						errs,
						A2($elm$core$List$cons, a, res));
				} else {
					var e = r.a;
					return _Utils_Tuple2(
						A2($elm$core$List$cons, e, errs),
						res);
				}
			}),
		_Utils_Tuple2(_List_Nil, _List_Nil),
		list);
};
var $author$project$Libs$List$resultSeq = function (list) {
	var _v0 = $author$project$Libs$List$resultCollect(list);
	if (!_v0.a.b) {
		var res = _v0.b;
		return $elm$core$Result$Ok(res);
	} else {
		var errs = _v0.a;
		return $elm$core$Result$Err(errs);
	}
};
var $author$project$DataSources$SqlMiner$Parsers$CreateTable$uniqueKeyConstraints = function (constraint) {
	if (constraint.$ === 2) {
		var name = constraint.a;
		var columns = constraint.b.M;
		var definition = constraint.b.ii;
		return $elm$core$Maybe$Just(
			{M: columns, ii: definition, eS: name});
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $author$project$DataSources$SqlMiner$Parsers$CreateTable$parseCreateTable = function (statement) {
	var _v0 = A2(
		$author$project$Libs$Regex$matches,
		'^CREATE(?:\\s+UNLOGGED)? TABLE(?:\\s+IF NOT EXISTS)?\\s+(?:(?<db>[^ .]+)\\.)?(?:(?<schema>[^ .]+)\\.)?(?<table>[^ .]+)\\s*(?<rest>\\(.+\\).*);$',
		$author$project$DataSources$SqlMiner$Utils$Helpers$buildSqlLine(statement));
	if ((((((_v0.b && _v0.b.b) && _v0.b.b.b) && (!_v0.b.b.a.$)) && _v0.b.b.b.b) && (!_v0.b.b.b.a.$)) && (!_v0.b.b.b.b.b)) {
		var db = _v0.a;
		var _v1 = _v0.b;
		var schema = _v1.a;
		var _v2 = _v1.b;
		var table = _v2.a.a;
		var _v3 = _v2.b;
		var rest = _v3.a.a;
		var tableName = $author$project$DataSources$SqlMiner$Utils$Helpers$buildTableName(table);
		var schemaName = A2(
			$elm$core$Maybe$map,
			$author$project$DataSources$SqlMiner$Utils$Helpers$buildSchemaName,
			A2($author$project$Libs$Maybe$orElse, db, schema));
		var _v4 = A2(
			$elm$core$List$partition,
			function (col) {
				return function (colUp) {
					return A2(
						$elm$core$List$any,
						function (cons) {
							return A2($elm$core$String$startsWith, cons, colUp);
						},
						_List_fromArray(
							['CONSTRAINT ', 'PRIMARY KEY ', 'FOREIGN KEY', 'UNIQUE KEY ', 'KEY `']));
				}(
					$elm$core$String$toUpper(col));
			},
			A2(
				$elm$core$List$filter,
				$author$project$Libs$String$nonEmpty,
				A2(
					$elm$core$List$map,
					$elm$core$String$trim,
					$author$project$DataSources$SqlMiner$Utils$Helpers$commaSplit(
						$author$project$DataSources$SqlMiner$Parsers$CreateTable$extractBody(rest).a))));
		var constraints = _v4.a;
		var columns = _v4.b;
		return A7(
			$author$project$Libs$Result$map6,
			F6(
				function (cols, pk, fks, uniques, indexes, parsedConstraints) {
					return {
						cQ: A2($elm$core$List$filterMap, $author$project$DataSources$SqlMiner$Parsers$CreateTable$checkConstraints, parsedConstraints),
						M: cols,
						iy: _Utils_ap(
							fks,
							A2($elm$core$List$filterMap, $author$project$DataSources$SqlMiner$Parsers$CreateTable$foreignKeyConstraints, parsedConstraints)),
						dg: indexes,
						nL: $elm$core$List$head(
							_Utils_ap(
								pk,
								A2($elm$core$List$filterMap, $author$project$DataSources$SqlMiner$Parsers$CreateTable$primaryKeyConstraints, parsedConstraints))),
						aI: schemaName,
						aq: tableName,
						d5: _Utils_ap(
							uniques,
							_Utils_ap(
								A2(
									$author$project$Libs$Nel$filterMap,
									$author$project$DataSources$SqlMiner$Parsers$CreateTable$columnUniqueKey(tableName),
									cols),
								A2($elm$core$List$filterMap, $author$project$DataSources$SqlMiner$Parsers$CreateTable$uniqueKeyConstraints, parsedConstraints)))
					};
				}),
			A2(
				$elm$core$Result$andThen,
				function (cols) {
					return A2(
						$elm$core$Result$fromMaybe,
						_List_fromArray(
							['Create table can\'t have empty columns']),
						$author$project$Libs$Nel$fromList(cols));
				},
				$author$project$Libs$List$resultSeq(
					A2($elm$core$List$map, $author$project$DataSources$SqlMiner$Parsers$CreateTable$parseCreateTableColumn, columns))),
			$author$project$Libs$List$resultSeq(
				A2(
					$elm$core$List$map,
					$author$project$DataSources$SqlMiner$Parsers$CreateTable$parseCreateTablePrimaryKey,
					A2(
						$elm$core$List$filter,
						A2(
							$elm$core$Basics$composeR,
							$elm$core$String$toUpper,
							$elm$core$String$startsWith('PRIMARY KEY')),
						constraints))),
			$author$project$Libs$List$resultSeq(
				A2(
					$elm$core$List$map,
					$author$project$DataSources$SqlMiner$Parsers$CreateTable$parseCreateTableForeignKey,
					A2(
						$elm$core$List$filter,
						A2(
							$elm$core$Basics$composeR,
							$elm$core$String$toUpper,
							$elm$core$String$startsWith('FOREIGN KEY')),
						constraints))),
			$author$project$Libs$List$resultSeq(
				A2(
					$elm$core$List$map,
					$author$project$DataSources$SqlMiner$Parsers$CreateTable$parseCreateTableUniqueKey,
					A2(
						$elm$core$List$filter,
						A2(
							$elm$core$Basics$composeR,
							$elm$core$String$toUpper,
							$elm$core$String$startsWith('UNIQUE KEY')),
						constraints))),
			$author$project$Libs$List$resultSeq(
				A2(
					$elm$core$List$map,
					$author$project$DataSources$SqlMiner$Parsers$CreateTable$parseCreateTableKey,
					A2(
						$elm$core$List$filter,
						A2(
							$elm$core$Basics$composeR,
							$elm$core$String$toUpper,
							$elm$core$String$startsWith('KEY')),
						constraints))),
			A2(
				$elm$core$Result$mapError,
				function (errs) {
					return A2($elm$core$List$concatMap, $elm$core$Basics$identity, errs);
				},
				$author$project$Libs$List$resultSeq(
					A2(
						$elm$core$List$map,
						function (c) {
							return $author$project$DataSources$SqlMiner$Parsers$AlterTable$parseAlterTableAddConstraint('ADD ' + c);
						},
						A2(
							$elm$core$List$filter,
							A2(
								$elm$core$Basics$composeR,
								$elm$core$String$toUpper,
								$elm$core$String$startsWith('CONSTRAINT')),
							constraints)))));
	} else {
		return $elm$core$Result$Err(
			_List_fromArray(
				[
					'Can\'t parse table: \'' + ($author$project$DataSources$SqlMiner$Utils$Helpers$buildRawSql(statement) + '\'')
				]));
	}
};
var $author$project$DataSources$SqlMiner$Parsers$CreateType$EnumType = function (a) {
	return {$: 0, a: a};
};
var $author$project$DataSources$SqlMiner$Parsers$CreateType$UnknownType = function (a) {
	return {$: 1, a: a};
};
var $author$project$DataSources$SqlMiner$Utils$Helpers$buildTypeName = function (name) {
	return $author$project$DataSources$SqlMiner$Utils$Helpers$noEnclosingQuotes(
		$elm$core$String$trim(name));
};
var $author$project$DataSources$SqlMiner$Utils$Helpers$buildEnumValue = function (name) {
	return $author$project$DataSources$SqlMiner$Utils$Helpers$noEnclosingQuotes(
		$elm$core$String$trim(name));
};
var $author$project$DataSources$SqlMiner$Parsers$CreateType$parseCreateTypeEnum = function (definition) {
	var _v0 = A2($author$project$Libs$Regex$matches, '^ENUM\\s*\\((?<values>.+)\\)$', definition);
	if ((_v0.b && (!_v0.a.$)) && (!_v0.b.b)) {
		var values = _v0.a.a;
		return $elm$core$Result$Ok(
			A2(
				$elm$core$List$filter,
				$author$project$Libs$String$nonEmpty,
				A2(
					$elm$core$List$map,
					$author$project$DataSources$SqlMiner$Utils$Helpers$buildEnumValue,
					$author$project$DataSources$SqlMiner$Utils$Helpers$commaSplit(values))));
	} else {
		return $elm$core$Result$Err(
			_List_fromArray(
				['Can\'t parse enum type: \'' + (definition + '\'')]));
	}
};
var $author$project$DataSources$SqlMiner$Parsers$CreateType$parseCreateType = function (statement) {
	var _v0 = A2(
		$author$project$Libs$Regex$matches,
		'^CREATE\\s+TYPE\\s+(?:(?<schema>[^ .]+)\\.)?(?<name>[^ .]+)(?:\\s+AS)?\\s+(?<definition>.+);$',
		$author$project$DataSources$SqlMiner$Utils$Helpers$buildSqlLine(statement));
	if (((((_v0.b && _v0.b.b) && (!_v0.b.a.$)) && _v0.b.b.b) && (!_v0.b.b.a.$)) && (!_v0.b.b.b.b)) {
		var schema = _v0.a;
		var _v1 = _v0.b;
		var name = _v1.a.a;
		var _v2 = _v1.b;
		var definition = _v2.a.a;
		return A2(
			$elm$core$Result$map,
			function (value) {
				return {
					eS: $author$project$DataSources$SqlMiner$Utils$Helpers$buildTypeName(name),
					aI: A2($elm$core$Maybe$map, $author$project$DataSources$SqlMiner$Utils$Helpers$buildSchemaName, schema),
					a5: value
				};
			},
			A2($elm$core$String$startsWith, 'ENUM', definition) ? A2(
				$elm$core$Result$map,
				$author$project$DataSources$SqlMiner$Parsers$CreateType$EnumType,
				$author$project$DataSources$SqlMiner$Parsers$CreateType$parseCreateTypeEnum(definition)) : $elm$core$Result$Ok(
				$author$project$DataSources$SqlMiner$Parsers$CreateType$UnknownType(definition)));
	} else {
		return $elm$core$Result$Err(
			_List_fromArray(
				[
					'Can\'t parse type: \'' + ($author$project$DataSources$SqlMiner$Utils$Helpers$buildRawSql(statement) + '\'')
				]));
	}
};
var $author$project$DataSources$SqlMiner$Parsers$CreateUnique$parseCreateUniqueIndex = function (statement) {
	var _v0 = A2(
		$author$project$Libs$Regex$matches,
		'^CREATE UNIQUE INDEX\\s+(?<name>[^ ]+)\\s+ON(?:\\s+ONLY)?\\s+(?:(?<schema>[^ .]+)\\.)?(?<table>[^ (]+)\\s*(?<definition>.+);$',
		$author$project$DataSources$SqlMiner$Utils$Helpers$buildSqlLine(statement));
	if (((((((_v0.b && (!_v0.a.$)) && _v0.b.b) && _v0.b.b.b) && (!_v0.b.b.a.$)) && _v0.b.b.b.b) && (!_v0.b.b.b.a.$)) && (!_v0.b.b.b.b.b)) {
		var name = _v0.a.a;
		var _v1 = _v0.b;
		var schema = _v1.a;
		var _v2 = _v1.b;
		var table = _v2.a.a;
		var _v3 = _v2.b;
		var definition = _v3.a.a;
		return A2(
			$elm$core$Result$map,
			function (columns) {
				return {
					M: columns,
					ii: definition,
					eS: $author$project$DataSources$SqlMiner$Utils$Helpers$buildConstraintName(name),
					aq: {
						aI: A2($elm$core$Maybe$map, $author$project$DataSources$SqlMiner$Utils$Helpers$buildSchemaName, schema),
						aq: $author$project$DataSources$SqlMiner$Utils$Helpers$buildTableName(table)
					}
				};
			},
			A2(
				$elm$core$Result$andThen,
				function (columns) {
					return A2(
						$elm$core$Result$fromMaybe,
						_List_fromArray(
							['Unique index can\'t have empty columns']),
						$author$project$Libs$Nel$fromList(
							A2($elm$core$List$map, $author$project$DataSources$SqlMiner$Utils$Helpers$buildColumnName, columns)));
				},
				$author$project$DataSources$SqlMiner$Utils$Helpers$parseIndexDefinition(definition)));
	} else {
		return $elm$core$Result$Err(
			_List_fromArray(
				[
					'Can\'t parse create unique index: \'' + ($author$project$DataSources$SqlMiner$Utils$Helpers$buildRawSql(statement) + '\'')
				]));
	}
};
var $author$project$DataSources$SqlMiner$Parsers$Comment$parseTableComment = function (statement) {
	var _v0 = A2(
		$author$project$Libs$Regex$matches,
		'^COMMENT ON (?:TABLE|VIEW)\\s+(?:(?<schema>[^ .]+)\\.)?(?<table>[^ .]+)\\s+IS\\s+\'(?<comment>(?:[^\']|\'\')+)\';$',
		$author$project$DataSources$SqlMiner$Utils$Helpers$buildSqlLine(statement));
	if (((((_v0.b && _v0.b.b) && (!_v0.b.a.$)) && _v0.b.b.b) && (!_v0.b.b.a.$)) && (!_v0.b.b.b.b)) {
		var schema = _v0.a;
		var _v1 = _v0.b;
		var table = _v1.a.a;
		var _v2 = _v1.b;
		var comment = _v2.a.a;
		return $elm$core$Result$Ok(
			{
				h4: $author$project$DataSources$SqlMiner$Utils$Helpers$buildComment(comment),
				aI: A2($elm$core$Maybe$map, $author$project$DataSources$SqlMiner$Utils$Helpers$buildSchemaName, schema),
				aq: $author$project$DataSources$SqlMiner$Utils$Helpers$buildTableName(table)
			});
	} else {
		return $elm$core$Result$Err(
			_List_fromArray(
				[
					'Can\'t parse table comment: \'' + ($author$project$DataSources$SqlMiner$Utils$Helpers$buildRawSql(statement) + '\'')
				]));
	}
};
var $author$project$DataSources$SqlMiner$Parsers$Select$BasicColumn = function (a) {
	return {$: 0, a: a};
};
var $author$project$DataSources$SqlMiner$Parsers$Select$ComplexColumn = function (a) {
	return {$: 1, a: a};
};
var $author$project$DataSources$SqlMiner$Parsers$Select$parseSelectColumn = function (column) {
	var _v0 = A2($author$project$Libs$Regex$matches, '^(?:(?<table>[^ .]+)\\.)?(?<column>[^ :]+)(?:\\s*AS\\s+(?<alias>.+))?$', column);
	if ((((_v0.b && _v0.b.b) && (!_v0.b.a.$)) && _v0.b.b.b) && (!_v0.b.b.b.b)) {
		var table = _v0.a;
		var _v1 = _v0.b;
		var columnName = _v1.a.a;
		var _v2 = _v1.b;
		var alias = _v2.a;
		return $elm$core$Result$Ok(
			$author$project$DataSources$SqlMiner$Parsers$Select$BasicColumn(
				{
					b2: A2($elm$core$Maybe$map, $author$project$DataSources$SqlMiner$Utils$Helpers$buildColumnName, alias),
					bH: $author$project$DataSources$SqlMiner$Utils$Helpers$buildColumnName(columnName),
					aq: A2($elm$core$Maybe$map, $author$project$DataSources$SqlMiner$Utils$Helpers$buildTableName, table)
				}));
	} else {
		var _v3 = A2($author$project$Libs$Regex$matches, '^(?<formula>.+?)\\s+AS\\s+(?<alias>[^ ]+)$', column);
		if ((((_v3.b && (!_v3.a.$)) && _v3.b.b) && (!_v3.b.a.$)) && (!_v3.b.b.b)) {
			var formula = _v3.a.a;
			var _v4 = _v3.b;
			var alias = _v4.a.a;
			return $elm$core$Result$Ok(
				$author$project$DataSources$SqlMiner$Parsers$Select$ComplexColumn(
					{
						b2: $author$project$DataSources$SqlMiner$Utils$Helpers$buildColumnName(alias),
						iz: formula
					}));
		} else {
			return $elm$core$Result$Err('Can\'t parse select column \'' + (column + '\''));
		}
	}
};
var $author$project$DataSources$SqlMiner$Parsers$Select$BasicTable = function (a) {
	return {$: 0, a: a};
};
var $author$project$DataSources$SqlMiner$Parsers$Select$ComplexTable = function (a) {
	return {$: 1, a: a};
};
var $author$project$DataSources$SqlMiner$Parsers$Select$parseSelectTable = function (table) {
	var _v0 = A2($author$project$Libs$Regex$matches, '^(?:(?<schema>[^ .]+)\\.)?(?<table>[^ ]+)(?:\\s+(?<alias>[^ ]+))?$', table);
	if ((((_v0.b && _v0.b.b) && (!_v0.b.a.$)) && _v0.b.b.b) && (!_v0.b.b.b.b)) {
		var schema = _v0.a;
		var _v1 = _v0.b;
		var tableName = _v1.a.a;
		var _v2 = _v1.b;
		var alias = _v2.a;
		return $elm$core$Result$Ok(
			$author$project$DataSources$SqlMiner$Parsers$Select$BasicTable(
				{
					b2: alias,
					aI: A2($elm$core$Maybe$map, $author$project$DataSources$SqlMiner$Utils$Helpers$buildSchemaName, schema),
					aq: $author$project$DataSources$SqlMiner$Utils$Helpers$buildTableName(tableName)
				}));
	} else {
		return $elm$core$Result$Ok(
			$author$project$DataSources$SqlMiner$Parsers$Select$ComplexTable(
				{ii: table}));
	}
};
var $author$project$DataSources$SqlMiner$Parsers$Select$join = F3(
	function (sep, a, b) {
		return (a === '') ? b : ((b === '') ? a : _Utils_ap(
			a,
			_Utils_ap(sep, b)));
	});
var $author$project$DataSources$SqlMiner$Parsers$Select$splitFirstTopLevelFrom = function (body) {
	return function (_v3) {
		var _v4 = _v3.a;
		var columns = _v4.a;
		var rest = _v4.b;
		return _Utils_Tuple2(
			$elm$core$String$trim(columns),
			$elm$core$String$trim(rest));
	}(
		A3(
			$elm$core$List$foldl,
			F2(
				function (part, _v0) {
					var _v1 = _v0.a;
					var columns = _v1.a;
					var rest = _v1.b;
					var _v2 = _v0.b;
					var parenthesis = _v2.a;
					var quotes = _v2.b;
					var done = _v2.c;
					if (!done) {
						var newQuotes = A2(
							$elm$core$Basics$modBy,
							2,
							quotes + $elm$core$List$length(
								A2($elm$core$String$indexes, '\'', part)));
						var newParenthesis = (parenthesis + $elm$core$List$length(
							A2($elm$core$String$indexes, '(', part))) - $elm$core$List$length(
							A2($elm$core$String$indexes, ')', part));
						return ((newParenthesis > 0) || (newQuotes > 0)) ? _Utils_Tuple2(
							_Utils_Tuple2(
								A3($author$project$DataSources$SqlMiner$Parsers$Select$join, 'FROM', columns, part),
								rest),
							_Utils_Tuple3(newParenthesis, newQuotes, done)) : _Utils_Tuple2(
							_Utils_Tuple2(
								A3($author$project$DataSources$SqlMiner$Parsers$Select$join, 'FROM', columns, part),
								rest),
							_Utils_Tuple3(newParenthesis, newQuotes, true));
					} else {
						return _Utils_Tuple2(
							_Utils_Tuple2(
								columns,
								A3($author$project$DataSources$SqlMiner$Parsers$Select$join, 'FROM', rest, part)),
							_Utils_Tuple3(parenthesis, quotes, done));
					}
				}),
			_Utils_Tuple2(
				_Utils_Tuple2('', ''),
				_Utils_Tuple3(0, 0, false)),
			A2($elm$core$String$split, 'FROM', body)));
};
var $author$project$Libs$Maybe$toList = function (maybe) {
	if (!maybe.$) {
		var a = maybe.a;
		return _List_fromArray(
			[a]);
	} else {
		return _List_Nil;
	}
};
var $author$project$DataSources$SqlMiner$Parsers$Select$parseSelect = function (select) {
	var _v0 = A2($author$project$Libs$Regex$matches, '^SELECT(?:\\s+DISTINCT ON \\([^)]+\\))?\\s+(?<body>.+)$', select);
	if ((_v0.b && (!_v0.a.$)) && (!_v0.b.b)) {
		var body = _v0.a.a;
		return function (_v1) {
			var columnsStr = _v1.a;
			var rest = _v1.b;
			var _v2 = A2($author$project$Libs$Regex$matches, '^(?<tables>.+?)?(?:\\s+WHERE\\s+(?<where>.+?))?$', rest);
			if ((_v2.b && _v2.b.b) && (!_v2.b.b.b)) {
				var tablesStr = _v2.a;
				var _v3 = _v2.b;
				var whereClause = _v3.a;
				return A3(
					$elm$core$Result$map2,
					F2(
						function (columns, tables) {
							return {M: columns, oM: tables, o6: whereClause};
						}),
					$author$project$Libs$List$resultSeq(
						A2(
							$elm$core$List$map,
							$author$project$DataSources$SqlMiner$Parsers$Select$parseSelectColumn,
							A2(
								$elm$core$List$map,
								$elm$core$String$trim,
								$author$project$DataSources$SqlMiner$Utils$Helpers$commaSplit(columnsStr)))),
					$author$project$Libs$List$resultSeq(
						A2(
							$elm$core$List$map,
							$author$project$DataSources$SqlMiner$Parsers$Select$parseSelectTable,
							$author$project$Libs$Maybe$toList(tablesStr))));
			} else {
				return $elm$core$Result$Err(
					_List_fromArray(
						['Can\'t parse rest in select: \'' + (rest + '\'')]));
			}
		}(
			$author$project$DataSources$SqlMiner$Parsers$Select$splitFirstTopLevelFrom(body));
	} else {
		return $elm$core$Result$Err(
			_List_fromArray(
				['Can\'t parse select: \'' + (select + '\'')]));
	}
};
var $elm$core$Result$withDefault = F2(
	function (def, result) {
		if (!result.$) {
			var a = result.a;
			return a;
		} else {
			return def;
		}
	});
var $author$project$DataSources$SqlMiner$Parsers$CreateView$parseView = function (statement) {
	var _v0 = A2(
		$author$project$Libs$Regex$matches,
		'^CREATE( OR REPLACE)?( MATERIALIZED)? VIEW\\s+(?:(?<schema>[^ .]+)\\.)?(?<table>[^ ]+)(?:\\s+WITH .*)?\\s+AS(?:\\s+WITH .*)?\\s+(?<select>SELECT .+?)(?:\\s+(?<extra>WITH (?:NO )?DATA))?;$',
		$author$project$DataSources$SqlMiner$Utils$Helpers$buildSqlLine(statement));
	if ((((((((_v0.b && _v0.b.b) && _v0.b.b.b) && _v0.b.b.b.b) && (!_v0.b.b.b.a.$)) && _v0.b.b.b.b.b) && (!_v0.b.b.b.b.a.$)) && _v0.b.b.b.b.b.b) && (!_v0.b.b.b.b.b.b.b)) {
		var replace = _v0.a;
		var _v1 = _v0.b;
		var materialized = _v1.a;
		var _v2 = _v1.b;
		var schema = _v2.a;
		var _v3 = _v2.b;
		var table = _v3.a.a;
		var _v4 = _v3.b;
		var select = _v4.a.a;
		var _v5 = _v4.b;
		var extra = _v5.a;
		return $elm$core$Result$Ok(
			{
				iv: extra,
				i5: !_Utils_eq(materialized, $elm$core$Maybe$Nothing),
				jG: !_Utils_eq(replace, $elm$core$Maybe$Nothing),
				aI: A2($elm$core$Maybe$map, $author$project$DataSources$SqlMiner$Utils$Helpers$buildSchemaName, schema),
				fe: A2(
					$elm$core$Result$withDefault,
					{M: _List_Nil, oM: _List_Nil, o6: $elm$core$Maybe$Nothing},
					$author$project$DataSources$SqlMiner$Parsers$Select$parseSelect(select)),
				aq: $author$project$DataSources$SqlMiner$Utils$Helpers$buildTableName(table)
			});
	} else {
		return $elm$core$Result$Err(
			_List_fromArray(
				[
					'Can\'t parse create view: \'' + ($author$project$DataSources$SqlMiner$Utils$Helpers$buildRawSql(statement) + '\'')
				]));
	}
};
var $author$project$DataSources$SqlMiner$SqlParser$startsWith = F2(
	function (token, text) {
		return A2($author$project$Libs$Regex$matchI, '^' + (token + '( |$)'), text);
	});
var $author$project$DataSources$SqlMiner$SqlParser$parseCommand = function (statement) {
	var firstLine = $elm$core$String$toUpper(
		$elm$core$String$trim(statement.ev.fp));
	return A2($author$project$DataSources$SqlMiner$SqlParser$startsWith, 'CREATE( UNLOGGED)? TABLE', firstLine) ? A2(
		$elm$core$Result$map,
		$author$project$DataSources$SqlMiner$SqlParser$CreateTable,
		$author$project$DataSources$SqlMiner$Parsers$CreateTable$parseCreateTable(statement)) : (A2($author$project$DataSources$SqlMiner$SqlParser$startsWith, 'ALTER TABLE', firstLine) ? A2(
		$elm$core$Result$map,
		$author$project$DataSources$SqlMiner$SqlParser$AlterTable,
		$author$project$DataSources$SqlMiner$Parsers$AlterTable$parseAlterTable(statement)) : (A2($author$project$DataSources$SqlMiner$SqlParser$startsWith, 'CREATE( OR REPLACE)?( MATERIALIZED)? VIEW', firstLine) ? A2(
		$elm$core$Result$map,
		$author$project$DataSources$SqlMiner$SqlParser$CreateView,
		$author$project$DataSources$SqlMiner$Parsers$CreateView$parseView(statement)) : (A2($author$project$DataSources$SqlMiner$SqlParser$startsWith, 'COMMENT ON (TABLE|VIEW)', firstLine) ? A2(
		$elm$core$Result$map,
		$author$project$DataSources$SqlMiner$SqlParser$TableComment,
		$author$project$DataSources$SqlMiner$Parsers$Comment$parseTableComment(statement)) : (A2($author$project$DataSources$SqlMiner$SqlParser$startsWith, 'COMMENT ON COLUMN', firstLine) ? A2(
		$elm$core$Result$map,
		$author$project$DataSources$SqlMiner$SqlParser$ColumnComment,
		$author$project$DataSources$SqlMiner$Parsers$Comment$parseColumnComment(statement)) : (A2($author$project$DataSources$SqlMiner$SqlParser$startsWith, 'CREATE INDEX', firstLine) ? A2(
		$elm$core$Result$map,
		$author$project$DataSources$SqlMiner$SqlParser$CreateIndex,
		$author$project$DataSources$SqlMiner$Parsers$CreateIndex$parseCreateIndex(statement)) : (A2($author$project$DataSources$SqlMiner$SqlParser$startsWith, 'CREATE UNIQUE INDEX', firstLine) ? A2(
		$elm$core$Result$map,
		$author$project$DataSources$SqlMiner$SqlParser$CreateUnique,
		$author$project$DataSources$SqlMiner$Parsers$CreateUnique$parseCreateUniqueIndex(statement)) : (A2($author$project$DataSources$SqlMiner$SqlParser$startsWith, 'COMMENT ON CONSTRAINT', firstLine) ? A2(
		$elm$core$Result$map,
		$author$project$DataSources$SqlMiner$SqlParser$ConstraintComment,
		$author$project$DataSources$SqlMiner$Parsers$Comment$parseColumnConstraint(statement)) : (A2($author$project$DataSources$SqlMiner$SqlParser$startsWith, 'CREATE TYPE', firstLine) ? A2(
		$elm$core$Result$map,
		$author$project$DataSources$SqlMiner$SqlParser$CreateType,
		$author$project$DataSources$SqlMiner$Parsers$CreateType$parseCreateType(statement)) : (A2($author$project$DataSources$SqlMiner$SqlParser$startsWith, 'SELECT', firstLine) ? $elm$core$Result$Ok(
		$author$project$DataSources$SqlMiner$SqlParser$Ignored(statement)) : (A2($author$project$DataSources$SqlMiner$SqlParser$startsWith, 'INSERT INTO', firstLine) ? $elm$core$Result$Ok(
		$author$project$DataSources$SqlMiner$SqlParser$Ignored(statement)) : (A2($author$project$DataSources$SqlMiner$SqlParser$startsWith, 'CREATE DOMAIN', firstLine) ? $elm$core$Result$Ok(
		$author$project$DataSources$SqlMiner$SqlParser$Ignored(statement)) : (A2($author$project$DataSources$SqlMiner$SqlParser$startsWith, '(CREATE|DROP) DATABASE', firstLine) ? $elm$core$Result$Ok(
		$author$project$DataSources$SqlMiner$SqlParser$Ignored(statement)) : (A2($author$project$DataSources$SqlMiner$SqlParser$startsWith, '(CREATE|ALTER|DROP|COMMENT ON) SCHEMA', firstLine) ? $elm$core$Result$Ok(
		$author$project$DataSources$SqlMiner$SqlParser$Ignored(statement)) : (A2($author$project$DataSources$SqlMiner$SqlParser$startsWith, 'DROP TABLE', firstLine) ? $elm$core$Result$Ok(
		$author$project$DataSources$SqlMiner$SqlParser$Ignored(statement)) : (A2($elm$core$String$startsWith, 'ALTER COLUMN ', firstLine) ? $elm$core$Result$Ok(
		$author$project$DataSources$SqlMiner$SqlParser$Ignored(statement)) : (A2($author$project$DataSources$SqlMiner$SqlParser$startsWith, '(ALTER|COMMENT ON) INDEX', firstLine) ? $elm$core$Result$Ok(
		$author$project$DataSources$SqlMiner$SqlParser$Ignored(statement)) : (A2($author$project$DataSources$SqlMiner$SqlParser$startsWith, '(ALTER|DROP|COMMENT ON) TYPE', firstLine) ? $elm$core$Result$Ok(
		$author$project$DataSources$SqlMiner$SqlParser$Ignored(statement)) : (A2($author$project$DataSources$SqlMiner$SqlParser$startsWith, '(CREATE( OR REPLACE)?|ALTER) FUNCTION', firstLine) ? $elm$core$Result$Ok(
		$author$project$DataSources$SqlMiner$SqlParser$Ignored(statement)) : (A2($author$project$DataSources$SqlMiner$SqlParser$startsWith, '(CREATE|ALTER) OPERATOR', firstLine) ? $elm$core$Result$Ok(
		$author$project$DataSources$SqlMiner$SqlParser$Ignored(statement)) : (A2($author$project$DataSources$SqlMiner$SqlParser$startsWith, '(CREATE|COMMENT ON) EXTENSION', firstLine) ? $elm$core$Result$Ok(
		$author$project$DataSources$SqlMiner$SqlParser$Ignored(statement)) : (A2($author$project$DataSources$SqlMiner$SqlParser$startsWith, '(CREATE|ALTER) TEXT SEARCH CONFIGURATION', firstLine) ? $elm$core$Result$Ok(
		$author$project$DataSources$SqlMiner$SqlParser$Ignored(statement)) : (A2($author$project$DataSources$SqlMiner$SqlParser$startsWith, '(CREATE|ALTER|COMMENT ON) SEQUENCE', firstLine) ? $elm$core$Result$Ok(
		$author$project$DataSources$SqlMiner$SqlParser$Ignored(statement)) : (A2($author$project$DataSources$SqlMiner$SqlParser$startsWith, '(CREATE|ALTER) AGGREGATE', firstLine) ? $elm$core$Result$Ok(
		$author$project$DataSources$SqlMiner$SqlParser$Ignored(statement)) : (A2($author$project$DataSources$SqlMiner$SqlParser$startsWith, '(CREATE|COMMENT ON) TRIGGER', firstLine) ? $elm$core$Result$Ok(
		$author$project$DataSources$SqlMiner$SqlParser$Ignored(statement)) : (A2($author$project$DataSources$SqlMiner$SqlParser$startsWith, 'CREATE PROCEDURE', firstLine) ? $elm$core$Result$Ok(
		$author$project$DataSources$SqlMiner$SqlParser$Ignored(statement)) : (A2($author$project$DataSources$SqlMiner$SqlParser$startsWith, 'CREATE RULE', firstLine) ? $elm$core$Result$Ok(
		$author$project$DataSources$SqlMiner$SqlParser$Ignored(statement)) : (A2($author$project$DataSources$SqlMiner$SqlParser$startsWith, 'CREATE POLICY', firstLine) ? $elm$core$Result$Ok(
		$author$project$DataSources$SqlMiner$SqlParser$Ignored(statement)) : (A2($author$project$DataSources$SqlMiner$SqlParser$startsWith, '(CREATE|DROP) PUBLICATION', firstLine) ? $elm$core$Result$Ok(
		$author$project$DataSources$SqlMiner$SqlParser$Ignored(statement)) : (A2($author$project$DataSources$SqlMiner$SqlParser$startsWith, '(CREATE|ALTER|COMMENT ON) TEXT SEARCH (PARSER|TEMPLATE|DICTIONARY|CONFIGURATION)', firstLine) ? $elm$core$Result$Ok(
		$author$project$DataSources$SqlMiner$SqlParser$Ignored(statement)) : (A2($author$project$DataSources$SqlMiner$SqlParser$startsWith, 'LOCK TABLES', firstLine) ? $elm$core$Result$Ok(
		$author$project$DataSources$SqlMiner$SqlParser$Ignored(statement)) : (A2($elm$core$String$startsWith, 'UNLOCK TABLES;', firstLine) ? $elm$core$Result$Ok(
		$author$project$DataSources$SqlMiner$SqlParser$Ignored(statement)) : (A2($author$project$DataSources$SqlMiner$SqlParser$startsWith, 'GRANT', firstLine) ? $elm$core$Result$Ok(
		$author$project$DataSources$SqlMiner$SqlParser$Ignored(statement)) : (A2($author$project$DataSources$SqlMiner$SqlParser$startsWith, 'REVOKE', firstLine) ? $elm$core$Result$Ok(
		$author$project$DataSources$SqlMiner$SqlParser$Ignored(statement)) : (A2($author$project$DataSources$SqlMiner$SqlParser$startsWith, 'START TRANSACTION', firstLine) ? $elm$core$Result$Ok(
		$author$project$DataSources$SqlMiner$SqlParser$Ignored(statement)) : (A2($author$project$DataSources$SqlMiner$SqlParser$startsWith, 'USE', firstLine) ? $elm$core$Result$Ok(
		$author$project$DataSources$SqlMiner$SqlParser$Ignored(statement)) : (A2($author$project$DataSources$SqlMiner$SqlParser$startsWith, 'PRAGMA', firstLine) ? $elm$core$Result$Ok(
		$author$project$DataSources$SqlMiner$SqlParser$Ignored(statement)) : (A2($author$project$DataSources$SqlMiner$SqlParser$startsWith, 'BEGIN', firstLine) ? $elm$core$Result$Ok(
		$author$project$DataSources$SqlMiner$SqlParser$Ignored(statement)) : (A2($author$project$DataSources$SqlMiner$SqlParser$startsWith, 'END', firstLine) ? $elm$core$Result$Ok(
		$author$project$DataSources$SqlMiner$SqlParser$Ignored(statement)) : (A2($author$project$DataSources$SqlMiner$SqlParser$startsWith, 'COMMIT', firstLine) ? $elm$core$Result$Ok(
		$author$project$DataSources$SqlMiner$SqlParser$Ignored(statement)) : (A2($author$project$DataSources$SqlMiner$SqlParser$startsWith, 'DECLARE', firstLine) ? $elm$core$Result$Ok(
		$author$project$DataSources$SqlMiner$SqlParser$Ignored(statement)) : (A2($author$project$DataSources$SqlMiner$SqlParser$startsWith, 'DELIMITER', firstLine) ? $elm$core$Result$Ok(
		$author$project$DataSources$SqlMiner$SqlParser$Ignored(statement)) : (A2($author$project$DataSources$SqlMiner$SqlParser$startsWith, 'SET', firstLine) ? $elm$core$Result$Ok(
		$author$project$DataSources$SqlMiner$SqlParser$Ignored(statement)) : (A2($author$project$DataSources$SqlMiner$SqlParser$startsWith, 'GO', firstLine) ? $elm$core$Result$Ok(
		$author$project$DataSources$SqlMiner$SqlParser$Ignored(statement)) : (A2($author$project$DataSources$SqlMiner$SqlParser$startsWith, '$$', firstLine) ? $elm$core$Result$Ok(
		$author$project$DataSources$SqlMiner$SqlParser$Ignored(statement)) : $elm$core$Result$Err(
		_List_fromArray(
			[
				'Statement not handled: \'' + ($author$project$DataSources$SqlMiner$Utils$Helpers$buildRawSql(statement) + '\'')
			]))))))))))))))))))))))))))))))))))))))))))))));
};
var $author$project$Services$SqlSource$parsingCptInc = function (model) {
	return _Utils_update(
		model,
		{cY: model.cY + 1});
};
var $author$project$DataSources$SqlMiner$SqlParser$splitLines = function (input) {
	return A2(
		$elm$core$List$indexedMap,
		F2(
			function (i, line) {
				return {l7: i, fp: line};
			}),
		A2(
			$elm$core$String$split,
			'\n',
			A3(
				$elm$core$String$replace,
				'\u000D',
				'\n',
				A3($elm$core$String$replace, '\u000D\n', '\n', input))));
};
var $author$project$Services$SqlSource$parsingUpdate = F3(
	function (sourceId, msg, model) {
		return A2(
			$elm$core$Tuple$mapFirst,
			$author$project$Services$SqlSource$parsingCptInc,
			function () {
				switch (msg) {
					case 0:
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{
									a$: $elm$core$Maybe$Just(
										$author$project$DataSources$SqlMiner$SqlParser$splitLines(model.eu))
								}),
							model.aU(1));
					case 1:
						return A3(
							$author$project$Libs$Maybe$mapOrElse,
							function (l) {
								return function (statements) {
									return _Utils_Tuple2(
										_Utils_update(
											model,
											{
												cC: $elm$core$Maybe$Just(
													$author$project$Libs$Dict$fromIndexedList(statements))
											}),
										model.aU(2));
								}(
									$author$project$DataSources$SqlMiner$SqlParser$buildStatements(l));
							},
							_Utils_Tuple2(
								model,
								model.aU(1)),
							model.a$);
					case 2:
						var index = $elm$core$Dict$size(
							A2($elm$core$Maybe$withDefault, $elm$core$Dict$empty, model.aV));
						return A2(
							$elm$core$Maybe$withDefault,
							_Utils_Tuple2(
								model,
								model.aU(3)),
							A2(
								$elm$core$Maybe$map,
								function (s) {
									return _Utils_Tuple2(
										_Utils_update(
											model,
											{
												aV: $elm$core$Maybe$Just(
													A3(
														$elm$core$Dict$insert,
														index,
														_Utils_Tuple2(
															s,
															$author$project$DataSources$SqlMiner$SqlParser$parseCommand(s)),
														A2($elm$core$Maybe$withDefault, $elm$core$Dict$empty, model.aV)))
											}),
										model.aU(2));
								},
								A2(
									$elm$core$Dict$get,
									index,
									A2($elm$core$Maybe$withDefault, $elm$core$Dict$empty, model.cC))));
					default:
						return A2(
							$elm$core$Maybe$withDefault,
							_Utils_Tuple2(model, model.fI),
							A2(
								$elm$core$Maybe$map,
								function (_v1) {
									var statement = _v1.a;
									var command = _v1.b;
									if (!command.$) {
										var cmd = command.a;
										return function (schema) {
											return _Utils_Tuple2(
												_Utils_update(
													model,
													{
														aI: $elm$core$Maybe$Just(schema),
														bW: model.bW + 1
													}),
												model.aU(3));
										}(
											A3(
												$author$project$DataSources$SqlMiner$SqlAdapter$evolve,
												sourceId,
												_Utils_Tuple2(statement, cmd),
												A2($elm$core$Maybe$withDefault, $author$project$DataSources$SqlMiner$SqlAdapter$initSchema, model.aI)));
									} else {
										return _Utils_Tuple2(
											_Utils_update(
												model,
												{bW: model.bW + 1}),
											model.aU(3));
									}
								},
								A2(
									$elm$core$Dict$get,
									model.bW,
									A2($elm$core$Maybe$withDefault, $elm$core$Dict$empty, model.aV))));
				}
			}());
	});
var $author$project$Models$SourceInfo$sqlRemote = F5(
	function (now, sourceId, url, content, sample) {
		return A7(
			$author$project$Models$SourceInfo$SourceInfo,
			sourceId,
			$author$project$Libs$Models$FileUrl$filename(url),
			A2(
				$author$project$Models$Project$SourceKind$SqlRemoteFile,
				url,
				$elm$core$String$length(content)),
			true,
			sample,
			now,
			now);
	});
var $author$project$Libs$Dict$count = F2(
	function (predicate, dict) {
		return A3(
			$elm$core$Dict$foldl,
			F3(
				function (k, v, cpt) {
					return A2(predicate, k, v) ? (cpt + 1) : cpt;
				}),
			0,
			dict);
	});
var $author$project$Libs$Result$isErr = function (result) {
	if (!result.$) {
		return false;
	} else {
		return true;
	}
};
var $author$project$Track$sqlSourceDetails = F2(
	function (parser, source) {
		return _Utils_ap(
			_List_fromArray(
				[
					_Utils_Tuple2(
					'nb_lines',
					$elm$json$Json$Encode$int(
						A3($author$project$Libs$Maybe$mapOrElse, $elm$core$List$length, 0, parser.a$))),
					_Utils_Tuple2(
					'nb_statements',
					$elm$json$Json$Encode$int(
						A3($author$project$Libs$Maybe$mapOrElse, $elm$core$Dict$size, 0, parser.cC))),
					_Utils_Tuple2(
					'nb_parsing_errors',
					$elm$json$Json$Encode$int(
						A3(
							$author$project$Libs$Maybe$mapOrElse,
							$author$project$Libs$Dict$count(
								F2(
									function (_v0, _v1) {
										var r = _v1.b;
										return $author$project$Libs$Result$isErr(r);
									})),
							0,
							parser.aV))),
					_Utils_Tuple2(
					'nb_schema_errors',
					$elm$json$Json$Encode$int(
						$elm$core$List$length(
							A3(
								$author$project$Libs$Maybe$mapOrElse,
								function ($) {
									return $.lG;
								},
								_List_Nil,
								parser.aI))))
				]),
			$author$project$Track$sourceDetails(source));
	});
var $author$project$Track$sqlSourceCreated = F3(
	function (project, parser, source) {
		return A3(
			$author$project$Track$createEvent,
			'editor_source_created',
			_Utils_ap(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'format',
						$elm$json$Json$Encode$string('sql'))
					]),
				A2($author$project$Track$sqlSourceDetails, parser, source)),
			project);
	});
var $author$project$Services$SqlSource$update = F5(
	function (wrap, now, project, msg, model) {
		switch (msg.$) {
			case 0:
				var url = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{o1: url}),
					$elm$core$Platform$Cmd$none);
			case 1:
				var schemaUrl = msg.a;
				return (schemaUrl === '') ? _Utils_Tuple2(
					function (m) {
						return _Utils_update(
							m,
							{o1: schemaUrl});
					}(
						A2($author$project$Services$SqlSource$init, model.fj, model.cP)),
					$elm$core$Platform$Cmd$none) : ((!A2($elm$core$String$startsWith, 'http', schemaUrl)) ? _Utils_Tuple2(
					function (m) {
						return _Utils_update(
							m,
							{
								jU: $elm$core$Maybe$Just(
									$elm$core$Result$Err('Invalid url, it should start with \'http\'')),
								o1: schemaUrl
							});
					}(
						A2($author$project$Services$SqlSource$init, model.fj, model.cP)),
					$elm$core$Platform$Cmd$none) : _Utils_Tuple2(
					function (m) {
						return _Utils_update(
							m,
							{
								jU: $elm$core$Maybe$Just(
									$elm$core$Result$Ok(schemaUrl)),
								o1: schemaUrl
							});
					}(
						A2($author$project$Services$SqlSource$init, model.fj, model.cP)),
					$elm$http$Http$get(
						{
							lI: $elm$http$Http$expectString(
								A2(
									$elm$core$Basics$composeR,
									$author$project$Services$SqlSource$GotRemoteFile(schemaUrl),
									wrap)),
							o1: schemaUrl
						})));
			case 2:
				var url = msg.a;
				var result = msg.b;
				if (!result.$) {
					var content = result.a;
					return _Utils_Tuple2(
						model,
						A2(
							$elm$random$Random$generate,
							function (sourceId) {
								return wrap(
									A2(
										$author$project$Services$SqlSource$GotFile,
										A5($author$project$Models$SourceInfo$sqlRemote, now, sourceId, url, content, $elm$core$Maybe$Nothing),
										content));
							},
							$author$project$Models$Project$SourceId$generator));
				} else {
					var err = result.a;
					return _Utils_Tuple2(
						A2(
							$author$project$Services$Lenses$setParsedSource,
							$elm$core$Maybe$Just(
								$elm$core$Result$Err(
									$author$project$Libs$Http$errorToString(err))),
							model),
						$author$project$Libs$Task$send(
							model.cP(
								_Utils_Tuple2(
									$elm$core$Maybe$Nothing,
									$elm$core$Result$Err(
										$author$project$Libs$Http$errorToString(err))))));
				}
			case 3:
				var file = msg.a;
				return _Utils_Tuple2(
					function (m) {
						return _Utils_update(
							m,
							{
								jT: $elm$core$Maybe$Just(file)
							});
					}(
						A2($author$project$Services$SqlSource$init, model.fj, model.cP)),
					A2($author$project$Ports$readLocalFile, $author$project$Services$SqlSource$kind, file));
			case 4:
				var sourceInfo = msg.a;
				var fileContent = msg.b;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{
							mu: $elm$core$Maybe$Just(
								_Utils_Tuple2(
									A2(
										$author$project$Services$Lenses$setId,
										A3(
											$author$project$Libs$Maybe$mapOrElse,
											function ($) {
												return $.H;
											},
											sourceInfo.H,
											model.fj),
										sourceInfo),
									fileContent)),
							cv: $elm$core$Maybe$Just(
								A3(
									$author$project$Services$SqlSource$parsingInit,
									fileContent,
									A2($elm$core$Basics$composeR, $author$project$Services$SqlSource$ParseMsg, wrap),
									wrap($author$project$Services$SqlSource$BuildSource)))
						}),
					$author$project$Libs$Task$send(
						wrap(
							$author$project$Services$SqlSource$ParseMsg(0))));
			case 5:
				var parseMsg = msg.a;
				return A2(
					$elm$core$Maybe$withDefault,
					_Utils_Tuple2(model, $elm$core$Platform$Cmd$none),
					A3(
						$elm$core$Maybe$map2,
						F2(
							function (parsedSchema, _v2) {
								var sourceInfo = _v2.a;
								return function (_v3) {
									var parsed = _v3.a;
									var message = _v3.b;
									return _Utils_Tuple2(
										_Utils_update(
											model,
											{
												cv: $elm$core$Maybe$Just(parsed)
											}),
										A3(
											$author$project$Libs$Bool$cond,
											A2($elm$core$Basics$modBy, 342, parsed.cY) === 1,
											A2($author$project$Libs$Task$sendAfter, 1, message),
											$author$project$Libs$Task$send(message)));
								}(
									A3($author$project$Services$SqlSource$parsingUpdate, sourceInfo.H, parseMsg, parsedSchema));
							}),
						model.cv,
						model.mu));
			case 6:
				return A2(
					$elm$core$Maybe$withDefault,
					_Utils_Tuple2(model, $elm$core$Platform$Cmd$none),
					A2(
						$elm$core$Maybe$map,
						function (_v5) {
							var parsedSchema = _v5.a;
							var source = _v5.b;
							return _Utils_Tuple2(
								A2(
									$author$project$Services$Lenses$setParsedSource,
									$elm$core$Maybe$Just(
										$elm$core$Result$Ok(source)),
									model),
								$elm$core$Platform$Cmd$batch(
									_List_fromArray(
										[
											$author$project$Libs$Task$send(
											model.cP(
												_Utils_Tuple2(
													$elm$core$Maybe$Just(parsedSchema),
													$elm$core$Result$Ok(source)))),
											$author$project$Ports$track(
											A3($author$project$Track$sqlSourceCreated, project, parsedSchema, source))
										])));
						},
						A2(
							$elm$core$Maybe$andThen,
							function (parsedSchema) {
								return A4(
									$elm$core$Maybe$map3,
									F3(
										function (_v4, lines, schema) {
											var sourceInfo = _v4.a;
											return _Utils_Tuple2(
												parsedSchema,
												A3($author$project$DataSources$SqlMiner$SqlAdapter$buildSource, sourceInfo, lines, schema));
										}),
									model.mu,
									parsedSchema.a$,
									parsedSchema.aI);
							},
							model.cv)));
			default:
				var htmlId = msg.a;
				return _Utils_Tuple2(
					A2(
						$author$project$Services$Lenses$mapParsedSchemaM,
						$author$project$Services$Lenses$mapShow(
							function (s) {
								return A3(
									$author$project$Libs$Bool$cond,
									_Utils_eq(s, htmlId),
									'',
									htmlId);
							}),
						model),
					$elm$core$Platform$Cmd$none);
		}
	});
var $author$project$Services$Toasts$ToastHide = function (a) {
	return {$: 2, a: a};
};
var $author$project$Services$Toasts$ToastRemove = function (a) {
	return {$: 3, a: a};
};
var $author$project$Services$Toasts$ToastShow = F2(
	function (a, b) {
		return {$: 1, a: a, b: b};
	});
var $author$project$Services$Lenses$setIndex = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.l7;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{l7: value});
		}));
var $author$project$Services$Lenses$mapIndex = A2(
	$author$project$Services$Lenses$map_,
	function ($) {
		return $.l7;
	},
	$author$project$Services$Lenses$setIndex);
var $author$project$Services$Lenses$mapList = F4(
	function (get, key, transform, list) {
		return A2(
			$elm$core$List$map,
			function (item) {
				return _Utils_eq(
					get(item),
					key) ? transform(item) : item;
			},
			list);
	});
var $author$project$Services$Lenses$mapToasts = A2(
	$author$project$Services$Lenses$map_,
	function ($) {
		return $.bX;
	},
	$author$project$Services$Lenses$setToasts);
var $author$project$Services$Lenses$setIsOpen = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.bm;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{bm: value});
		}));
var $author$project$Services$Toasts$update = F3(
	function (wrap, msg, model) {
		switch (msg.$) {
			case 0:
				var millis = msg.a;
				var toast = msg.b;
				return function (key) {
					return _Utils_Tuple2(
						A2(
							$author$project$Services$Lenses$mapToasts,
							function (t) {
								return A2(
									$elm$core$List$cons,
									{cX: toast, bm: false, dk: key},
									t);
							},
							A2(
								$author$project$Services$Lenses$mapIndex,
								function (i) {
									return i + 1;
								},
								model)),
						A2(
							$author$project$Libs$Task$sendAfter,
							1,
							wrap(
								A2($author$project$Services$Toasts$ToastShow, millis, key))));
				}(
					$elm$core$String$fromInt(model.l7));
			case 1:
				var millis = msg.a;
				var key = msg.b;
				return _Utils_Tuple2(
					A2(
						$author$project$Services$Lenses$mapToasts,
						A3(
							$author$project$Services$Lenses$mapList,
							function ($) {
								return $.dk;
							},
							key,
							$author$project$Services$Lenses$setIsOpen(true)),
						model),
					A3(
						$author$project$Libs$Maybe$mapOrElse,
						function (delay) {
							return A2(
								$author$project$Libs$Task$sendAfter,
								delay,
								wrap(
									$author$project$Services$Toasts$ToastHide(key)));
						},
						$elm$core$Platform$Cmd$none,
						millis));
			case 2:
				var key = msg.a;
				return _Utils_Tuple2(
					A2(
						$author$project$Services$Lenses$mapToasts,
						A3(
							$author$project$Services$Lenses$mapList,
							function ($) {
								return $.dk;
							},
							key,
							$author$project$Services$Lenses$setIsOpen(false)),
						model),
					A2(
						$author$project$Libs$Task$sendAfter,
						300,
						wrap(
							$author$project$Services$Toasts$ToastRemove(key))));
			default:
				var key = msg.a;
				return _Utils_Tuple2(
					A2(
						$author$project$Services$Lenses$mapToasts,
						$elm$core$List$filter(
							function (t) {
								return !_Utils_eq(t.dk, key);
							}),
						model),
					$elm$core$Platform$Cmd$none);
		}
	});
var $author$project$Libs$Maybe$zip = F2(
	function (maybeA, maybeB) {
		return A3(
			$elm$core$Maybe$map2,
			F2(
				function (a, b) {
					return _Utils_Tuple2(a, b);
				}),
			maybeA,
			maybeB);
	});
var $author$project$PagesComponents$Create$Updates$update = F7(
	function (req, now, projects, projectsLoaded, urlOrganization, msg, model) {
		switch (msg.$) {
			case 0:
				if (projectsLoaded) {
					var storage = A2(
						$elm$core$Maybe$andThen,
						$author$project$Models$Project$ProjectStorage$fromString,
						A2($elm$core$Dict$get, 'storage', req.e1));
					var name = A3($author$project$Libs$Dict$getOrElse, 'name', $author$project$Conf$constants.m4, req.e1);
					return _Utils_Tuple2(
						A2(
							$elm$core$Maybe$withDefault,
							model,
							A2(
								$author$project$Libs$Maybe$orElse,
								A2(
									$elm$core$Maybe$map,
									function (_v3) {
										return _Utils_update(
											model,
											{
												cm: $elm$core$Maybe$Just(
													A2(
														$author$project$Services$JsonSource$init,
														$elm$core$Maybe$Nothing,
														A3($author$project$PagesComponents$Create$Updates$createProject, projects, storage, name)))
											});
									},
									A2($elm$core$Dict$get, 'json', req.e1)),
								A2(
									$author$project$Libs$Maybe$orElse,
									A2(
										$elm$core$Maybe$map,
										function (_v2) {
											return _Utils_update(
												model,
												{
													cA: $elm$core$Maybe$Just(
														A2(
															$author$project$Services$SqlSource$init,
															$elm$core$Maybe$Nothing,
															A2(
																$elm$core$Basics$composeR,
																$elm$core$Tuple$second,
																A3($author$project$PagesComponents$Create$Updates$createProject, projects, storage, name))))
												});
										},
										A2($elm$core$Dict$get, 'sql', req.e1)),
									A2(
										$elm$core$Maybe$map,
										function (_v1) {
											return _Utils_update(
												model,
												{
													ca: $elm$core$Maybe$Just(
														A2(
															$author$project$Services$DatabaseSource$init,
															$elm$core$Maybe$Nothing,
															A3($author$project$PagesComponents$Create$Updates$createProject, projects, storage, name)))
												});
										},
										A2($elm$core$Dict$get, 'database', req.e1))))),
						A2(
							$elm$core$Maybe$withDefault,
							$author$project$Libs$Task$send(
								A2($author$project$PagesComponents$Create$Models$AmlSourceMsg, storage, name)),
							A2(
								$author$project$Libs$Maybe$orElse,
								A2(
									$elm$core$Maybe$map,
									A2(
										$elm$core$Basics$composeR,
										$author$project$Services$JsonSource$GetRemoteFile,
										A2($elm$core$Basics$composeR, $author$project$PagesComponents$Create$Models$JsonSourceMsg, $author$project$Libs$Task$send)),
									A2($elm$core$Dict$get, 'json', req.e1)),
								A2(
									$author$project$Libs$Maybe$orElse,
									A2(
										$elm$core$Maybe$map,
										A2(
											$elm$core$Basics$composeR,
											$author$project$Services$SqlSource$GetRemoteFile,
											A2($elm$core$Basics$composeR, $author$project$PagesComponents$Create$Models$SqlSourceMsg, $author$project$Libs$Task$send)),
										A2($elm$core$Dict$get, 'sql', req.e1)),
									A2(
										$elm$core$Maybe$map,
										A2(
											$elm$core$Basics$composeR,
											$author$project$Services$DatabaseSource$GetSchema,
											A2($elm$core$Basics$composeR, $author$project$PagesComponents$Create$Models$DatabaseSourceMsg, $author$project$Libs$Task$send)),
										A2($elm$core$Dict$get, 'database', req.e1))))));
				} else {
					return _Utils_Tuple2(
						model,
						A2($author$project$Libs$Task$sendAfter, 500, $author$project$PagesComponents$Create$Models$InitProject));
				}
			case 1:
				var message = msg.a;
				return A2(
					$author$project$Services$Lenses$mapDatabaseSourceMCmd,
					A4($author$project$Services$DatabaseSource$update, $author$project$PagesComponents$Create$Models$DatabaseSourceMsg, now, $elm$core$Maybe$Nothing, message),
					model);
			case 3:
				var message = msg.a;
				return A2(
					$author$project$Services$Lenses$mapJsonSourceMCmd,
					A4($author$project$Services$JsonSource$update, $author$project$PagesComponents$Create$Models$JsonSourceMsg, now, $elm$core$Maybe$Nothing, message),
					model);
			case 2:
				var message = msg.a;
				return A2(
					$author$project$Services$Lenses$mapSqlSourceMCmd,
					A4($author$project$Services$SqlSource$update, $author$project$PagesComponents$Create$Models$SqlSourceMsg, now, $elm$core$Maybe$Nothing, message),
					model);
			case 4:
				var storage = msg.a;
				var name = msg.b;
				return _Utils_Tuple2(
					model,
					A2(
						$elm$random$Random$generate,
						A2(
							$elm$core$Basics$composeR,
							A2($author$project$Models$Project$Source$aml, $author$project$Conf$constants.o5, now),
							A2(
								$elm$core$Basics$composeR,
								A2($author$project$Models$Project$create, projects, name),
								$author$project$PagesComponents$Create$Models$CreateProjectTmp(storage))),
						$author$project$Models$Project$SourceId$generator));
			case 5:
				var storage = msg.a;
				var project = msg.b;
				return _Utils_Tuple2(
					model,
					$elm$core$Platform$Cmd$batch(
						A2(
							$elm$core$Maybe$withDefault,
							_List_fromArray(
								[
									$author$project$Ports$createProjectTmp(project),
									$author$project$Ports$track(
									$author$project$Track$projectDraftCreated(project))
								]),
							A2(
								$elm$core$Maybe$map,
								function (_v4) {
									var organizationId = _v4.a;
									var s = _v4.b;
									return _List_fromArray(
										[
											A3($author$project$Ports$createProject, organizationId, s, project)
										]);
								},
								A2($author$project$Libs$Maybe$zip, urlOrganization, storage)))));
			case 6:
				var message = msg.a;
				return A2(
					$author$project$Services$Lenses$mapToastsCmd,
					A2($author$project$Services$Toasts$update, $author$project$PagesComponents$Create$Models$Toast, message),
					model);
			default:
				var message = msg.a;
				return A4($author$project$PagesComponents$Create$Updates$handleJsMessage, req, urlOrganization, message, model);
		}
	});
var $elm$html$Html$Attributes$stringProperty = F2(
	function (key, string) {
		return A2(
			_VirtualDom_property,
			key,
			$elm$json$Json$Encode$string(string));
	});
var $elm$html$Html$Attributes$class = $elm$html$Html$Attributes$stringProperty('className');
var $elm$html$Html$div = _VirtualDom_node('div');
var $author$project$Components$Atoms$Loader$fullScreen = A2(
	$elm$html$Html$div,
	_List_fromArray(
		[
			$elm$html$Html$Attributes$class('flex justify-center items-center h-screen')
		]),
	_List_fromArray(
		[
			A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('animate-spin rounded-full h-32 w-32 border-t-2 border-b-2 border-primary-500')
				]),
			_List_Nil)
		]));
var $elm$virtual_dom$VirtualDom$lazy2 = _VirtualDom_lazy2;
var $elm$html$Html$Lazy$lazy2 = $elm$virtual_dom$VirtualDom$lazy2;
var $elm$virtual_dom$VirtualDom$attribute = F2(
	function (key, value) {
		return A2(
			_VirtualDom_attribute,
			_VirtualDom_noOnOrFormAction(key),
			_VirtualDom_noJavaScriptOrHtmlUri(value));
	});
var $elm$html$Html$Attributes$attribute = $elm$virtual_dom$VirtualDom$attribute;
var $author$project$Libs$Html$Attributes$ariaLive = function (text) {
	return A2($elm$html$Html$Attributes$attribute, 'aria-live', text);
};
var $author$project$Libs$Html$Attributes$styles = function (values) {
	return A2(
		$elm$core$String$join,
		' ',
		A2(
			$elm$core$List$filter,
			function (v) {
				return v !== '';
			},
			A2(
				$elm$core$List$map,
				$elm$core$String$trim,
				A2(
					$elm$core$List$concatMap,
					$elm$core$String$split(' '),
					values))));
};
var $author$project$Libs$Html$Attributes$css = function (values) {
	return $elm$html$Html$Attributes$class(
		$author$project$Libs$Html$Attributes$styles(values));
};
var $elm$virtual_dom$VirtualDom$keyedNode = function (tag) {
	return _VirtualDom_keyedNode(
		_VirtualDom_noScript(tag));
};
var $elm$html$Html$Keyed$node = $elm$virtual_dom$VirtualDom$keyedNode;
var $author$project$Components$Atoms$Icon$X = 227;
var $elm$html$Html$button = _VirtualDom_node('button');
var $author$project$Libs$Tailwind$addState = F2(
	function (state, classes) {
		return A2(
			$elm$core$String$join,
			' ',
			A2(
				$elm$core$List$map,
				function (c) {
					return state + (':' + c);
				},
				A2(
					$elm$core$List$filter,
					function (c) {
						return c !== '';
					},
					A2(
						$elm$core$List$map,
						$elm$core$String$trim,
						A2(
							$elm$core$String$split,
							' ',
							A2($elm$core$String$join, ' ', classes))))));
	});
var $author$project$Libs$Tailwind$focus = $author$project$Libs$Tailwind$addState('focus');
var $author$project$Libs$Tailwind$ring_500 = function (_v0) {
	var color = _v0;
	return 'ring-' + (color + '-500');
};
var $author$project$Libs$Tailwind$focus_ring_500 = function (ringColor) {
	return $author$project$Libs$Tailwind$focus(
		_List_fromArray(
			[
				'outline-none ring-2 ring-offset-2',
				$author$project$Libs$Tailwind$ring_500(ringColor),
				'ring-offset-white'
			]));
};
var $author$project$Libs$Tailwind$hover = $author$project$Libs$Tailwind$addState('hover');
var $elm$virtual_dom$VirtualDom$Normal = function (a) {
	return {$: 0, a: a};
};
var $elm$virtual_dom$VirtualDom$on = _VirtualDom_on;
var $elm$html$Html$Events$on = F2(
	function (event, decoder) {
		return A2(
			$elm$virtual_dom$VirtualDom$on,
			event,
			$elm$virtual_dom$VirtualDom$Normal(decoder));
	});
var $elm$html$Html$Events$onClick = function (msg) {
	return A2(
		$elm$html$Html$Events$on,
		'click',
		$elm$json$Json$Decode$succeed(msg));
};
var $author$project$Components$Atoms$Icon$icons = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'academic-cap',
			{
				a: _List_fromArray(
					['M12 14l9-5-9-5-9 5 9 5z', 'M12 14l6.16-3.422a12.083 12.083 0 01.665 6.479A11.952 11.952 0 0012 20.055a11.952 11.952 0 00-6.824-2.998 12.078 12.078 0 01.665-6.479L12 14z', 'M12 14l9-5-9-5-9 5 9 5zm0 0l6.16-3.422a12.083 12.083 0 01.665 6.479A11.952 11.952 0 0012 20.055a11.952 11.952 0 00-6.824-2.998 12.078 12.078 0 01.665-6.479L12 14zm-4 6v-7.5l4-2.222']),
				b: _List_fromArray(
					['M10.394 2.08a1 1 0 00-.788 0l-7 3a1 1 0 000 1.84L5.25 8.051a.999.999 0 01.356-.257l4-1.714a1 1 0 11.788 1.838L7.667 9.088l1.94.831a1 1 0 00.787 0l7-3a1 1 0 000-1.838l-7-3zM3.31 9.397L5 10.12v4.102a8.969 8.969 0 00-1.05-.174 1 1 0 01-.89-.89 11.115 11.115 0 01.25-3.762zM9.3 16.573A9.026 9.026 0 007 14.935v-3.957l1.818.78a3 3 0 002.364 0l5.508-2.361a11.026 11.026 0 01.25 3.762 1 1 0 01-.89.89 8.968 8.968 0 00-5.35 2.524 1 1 0 01-1.4 0zM6 18a1 1 0 001-1v-2.065a8.935 8.935 0 00-2-.712V17a1 1 0 001 1z'])
			}),
			_Utils_Tuple2(
			'adjustments',
			{
				a: _List_fromArray(
					['M12 6V4m0 2a2 2 0 100 4m0-4a2 2 0 110 4m-6 8a2 2 0 100-4m0 4a2 2 0 110-4m0 4v2m0-6V4m6 6v10m6-2a2 2 0 100-4m0 4a2 2 0 110-4m0 4v2m0-6V4']),
				b: _List_fromArray(
					['M5 4a1 1 0 00-2 0v7.268a2 2 0 000 3.464V16a1 1 0 102 0v-1.268a2 2 0 000-3.464V4zM11 4a1 1 0 10-2 0v1.268a2 2 0 000 3.464V16a1 1 0 102 0V8.732a2 2 0 000-3.464V4zM16 3a1 1 0 011 1v7.268a2 2 0 010 3.464V16a1 1 0 11-2 0v-1.268a2 2 0 010-3.464V4a1 1 0 011-1z'])
			}),
			_Utils_Tuple2(
			'annotation',
			{
				a: _List_fromArray(
					['M7 8h10M7 12h4m1 8l-4-4H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-3l-4 4z']),
				b: _List_fromArray(
					['M18 13V5a2 2 0 00-2-2H4a2 2 0 00-2 2v8a2 2 0 002 2h3l3 3 3-3h3a2 2 0 002-2zM5 7a1 1 0 011-1h8a1 1 0 110 2H6a1 1 0 01-1-1zm1 3a1 1 0 100 2h3a1 1 0 100-2H6z'])
			}),
			_Utils_Tuple2(
			'archive',
			{
				a: _List_fromArray(
					['M5 8h14M5 8a2 2 0 110-4h14a2 2 0 110 4M5 8v10a2 2 0 002 2h10a2 2 0 002-2V8m-9 4h4']),
				b: _List_fromArray(
					['M4 3a2 2 0 100 4h12a2 2 0 100-4H4z', 'M3 8h14v7a2 2 0 01-2 2H5a2 2 0 01-2-2V8zm5 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z'])
			}),
			_Utils_Tuple2(
			'arrow-circle-down',
			{
				a: _List_fromArray(
					['M15 13l-3 3m0 0l-3-3m3 3V8m0 13a9 9 0 110-18 9 9 0 010 18z']),
				b: _List_fromArray(
					['M10 18a8 8 0 100-16 8 8 0 000 16zm1-11a1 1 0 10-2 0v3.586L7.707 9.293a1 1 0 00-1.414 1.414l3 3a1 1 0 001.414 0l3-3a1 1 0 00-1.414-1.414L11 10.586V7z'])
			}),
			_Utils_Tuple2(
			'arrow-circle-left',
			{
				a: _List_fromArray(
					['M11 15l-3-3m0 0l3-3m-3 3h8M3 12a9 9 0 1118 0 9 9 0 01-18 0z']),
				b: _List_fromArray(
					['M10 18a8 8 0 100-16 8 8 0 000 16zm.707-10.293a1 1 0 00-1.414-1.414l-3 3a1 1 0 000 1.414l3 3a1 1 0 001.414-1.414L9.414 11H13a1 1 0 100-2H9.414l1.293-1.293z'])
			}),
			_Utils_Tuple2(
			'arrow-circle-right',
			{
				a: _List_fromArray(
					['M13 9l3 3m0 0l-3 3m3-3H8m13 0a9 9 0 11-18 0 9 9 0 0118 0z']),
				b: _List_fromArray(
					['M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-8.707l-3-3a1 1 0 00-1.414 1.414L10.586 9H7a1 1 0 100 2h3.586l-1.293 1.293a1 1 0 101.414 1.414l3-3a1 1 0 000-1.414z'])
			}),
			_Utils_Tuple2(
			'arrow-circle-up',
			{
				a: _List_fromArray(
					['M9 11l3-3m0 0l3 3m-3-3v8m0-13a9 9 0 110 18 9 9 0 010-18z']),
				b: _List_fromArray(
					['M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-8.707l-3-3a1 1 0 00-1.414 0l-3 3a1 1 0 001.414 1.414L9 9.414V13a1 1 0 102 0V9.414l1.293 1.293a1 1 0 001.414-1.414z'])
			}),
			_Utils_Tuple2(
			'arrow-down',
			{
				a: _List_fromArray(
					['M19 14l-7 7m0 0l-7-7m7 7V3']),
				b: _List_fromArray(
					['M16.707 10.293a1 1 0 010 1.414l-6 6a1 1 0 01-1.414 0l-6-6a1 1 0 111.414-1.414L9 14.586V3a1 1 0 012 0v11.586l4.293-4.293a1 1 0 011.414 0z'])
			}),
			_Utils_Tuple2(
			'arrow-left',
			{
				a: _List_fromArray(
					['M10 19l-7-7m0 0l7-7m-7 7h18']),
				b: _List_fromArray(
					['M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z'])
			}),
			_Utils_Tuple2(
			'arrow-narrow-down',
			{
				a: _List_fromArray(
					['M16 17l-4 4m0 0l-4-4m4 4V3']),
				b: _List_fromArray(
					['M14.707 12.293a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 111.414-1.414L9 14.586V3a1 1 0 012 0v11.586l2.293-2.293a1 1 0 011.414 0z'])
			}),
			_Utils_Tuple2(
			'arrow-narrow-left',
			{
				a: _List_fromArray(
					['M7 16l-4-4m0 0l4-4m-4 4h18']),
				b: _List_fromArray(
					['M7.707 14.707a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l2.293 2.293a1 1 0 010 1.414z'])
			}),
			_Utils_Tuple2(
			'arrow-narrow-right',
			{
				a: _List_fromArray(
					['M17 8l4 4m0 0l-4 4m4-4H3']),
				b: _List_fromArray(
					['M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-2.293-2.293a1 1 0 010-1.414z'])
			}),
			_Utils_Tuple2(
			'arrow-narrow-up',
			{
				a: _List_fromArray(
					['M8 7l4-4m0 0l4 4m-4-4v18']),
				b: _List_fromArray(
					['M5.293 7.707a1 1 0 010-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 01-1.414 1.414L11 5.414V17a1 1 0 11-2 0V5.414L6.707 7.707a1 1 0 01-1.414 0z'])
			}),
			_Utils_Tuple2(
			'arrow-right',
			{
				a: _List_fromArray(
					['M14 5l7 7m0 0l-7 7m7-7H3']),
				b: _List_fromArray(
					['M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z'])
			}),
			_Utils_Tuple2(
			'arrow-sm-down',
			{
				a: _List_fromArray(
					['M17 13l-5 5m0 0l-5-5m5 5V6']),
				b: _List_fromArray(
					['M14.707 10.293a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 111.414-1.414L9 12.586V5a1 1 0 012 0v7.586l2.293-2.293a1 1 0 011.414 0z'])
			}),
			_Utils_Tuple2(
			'arrow-sm-left',
			{
				a: _List_fromArray(
					['M11 17l-5-5m0 0l5-5m-5 5h12']),
				b: _List_fromArray(
					['M9.707 14.707a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 1.414L7.414 9H15a1 1 0 110 2H7.414l2.293 2.293a1 1 0 010 1.414z'])
			}),
			_Utils_Tuple2(
			'arrow-sm-right',
			{
				a: _List_fromArray(
					['M13 7l5 5m0 0l-5 5m5-5H6']),
				b: _List_fromArray(
					['M10.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L12.586 11H5a1 1 0 110-2h7.586l-2.293-2.293a1 1 0 010-1.414z'])
			}),
			_Utils_Tuple2(
			'arrow-sm-up',
			{
				a: _List_fromArray(
					['M7 11l5-5m0 0l5 5m-5-5v12']),
				b: _List_fromArray(
					['M5.293 9.707a1 1 0 010-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 01-1.414 1.414L11 7.414V15a1 1 0 11-2 0V7.414L6.707 9.707a1 1 0 01-1.414 0z'])
			}),
			_Utils_Tuple2(
			'arrow-up',
			{
				a: _List_fromArray(
					['M5 10l7-7m0 0l7 7m-7-7v18']),
				b: _List_fromArray(
					['M3.293 9.707a1 1 0 010-1.414l6-6a1 1 0 011.414 0l6 6a1 1 0 01-1.414 1.414L11 5.414V17a1 1 0 11-2 0V5.414L4.707 9.707a1 1 0 01-1.414 0z'])
			}),
			_Utils_Tuple2(
			'arrows-expand',
			{
				a: _List_fromArray(
					['M4 8V4m0 0h4M4 4l5 5m11-1V4m0 0h-4m4 0l-5 5M4 16v4m0 0h4m-4 0l5-5m11 5l-5-5m5 5v-4m0 4h-4']),
				b: _List_fromArray(
					['M3 4a1 1 0 011-1h4a1 1 0 010 2H6.414l2.293 2.293a1 1 0 01-1.414 1.414L5 6.414V8a1 1 0 01-2 0V4zm9 1a1 1 0 110-2h4a1 1 0 011 1v4a1 1 0 11-2 0V6.414l-2.293 2.293a1 1 0 11-1.414-1.414L13.586 5H12zm-9 7a1 1 0 112 0v1.586l2.293-2.293a1 1 0 011.414 1.414L6.414 15H8a1 1 0 110 2H4a1 1 0 01-1-1v-4zm13-1a1 1 0 011 1v4a1 1 0 01-1 1h-4a1 1 0 110-2h1.586l-2.293-2.293a1 1 0 011.414-1.414L15 13.586V12a1 1 0 011-1z'])
			}),
			_Utils_Tuple2(
			'at-symbol',
			{
				a: _List_fromArray(
					['M16 12a4 4 0 10-8 0 4 4 0 008 0zm0 0v1.5a2.5 2.5 0 005 0V12a9 9 0 10-9 9m4.5-1.206a8.959 8.959 0 01-4.5 1.207']),
				b: _List_fromArray(
					['M14.243 5.757a6 6 0 10-.986 9.284 1 1 0 111.087 1.678A8 8 0 1118 10a3 3 0 01-4.8 2.401A4 4 0 1114 10a1 1 0 102 0c0-1.537-.586-3.07-1.757-4.243zM12 10a2 2 0 10-4 0 2 2 0 004 0z'])
			}),
			_Utils_Tuple2(
			'backspace',
			{
				a: _List_fromArray(
					['M12 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2M3 12l6.414 6.414a2 2 0 001.414.586H19a2 2 0 002-2V7a2 2 0 00-2-2h-8.172a2 2 0 00-1.414.586L3 12z']),
				b: _List_fromArray(
					['M6.707 4.879A3 3 0 018.828 4H15a3 3 0 013 3v6a3 3 0 01-3 3H8.828a3 3 0 01-2.12-.879l-4.415-4.414a1 1 0 010-1.414l4.414-4.414zm4 2.414a1 1 0 00-1.414 1.414L10.586 10l-1.293 1.293a1 1 0 101.414 1.414L12 11.414l1.293 1.293a1 1 0 001.414-1.414L13.414 10l1.293-1.293a1 1 0 00-1.414-1.414L12 8.586l-1.293-1.293z'])
			}),
			_Utils_Tuple2(
			'badge-check',
			{
				a: _List_fromArray(
					['M9 12l2 2 4-4M7.835 4.697a3.42 3.42 0 001.946-.806 3.42 3.42 0 014.438 0 3.42 3.42 0 001.946.806 3.42 3.42 0 013.138 3.138 3.42 3.42 0 00.806 1.946 3.42 3.42 0 010 4.438 3.42 3.42 0 00-.806 1.946 3.42 3.42 0 01-3.138 3.138 3.42 3.42 0 00-1.946.806 3.42 3.42 0 01-4.438 0 3.42 3.42 0 00-1.946-.806 3.42 3.42 0 01-3.138-3.138 3.42 3.42 0 00-.806-1.946 3.42 3.42 0 010-4.438 3.42 3.42 0 00.806-1.946 3.42 3.42 0 013.138-3.138z']),
				b: _List_fromArray(
					['M6.267 3.455a3.066 3.066 0 001.745-.723 3.066 3.066 0 013.976 0 3.066 3.066 0 001.745.723 3.066 3.066 0 012.812 2.812c.051.643.304 1.254.723 1.745a3.066 3.066 0 010 3.976 3.066 3.066 0 00-.723 1.745 3.066 3.066 0 01-2.812 2.812 3.066 3.066 0 00-1.745.723 3.066 3.066 0 01-3.976 0 3.066 3.066 0 00-1.745-.723 3.066 3.066 0 01-2.812-2.812 3.066 3.066 0 00-.723-1.745 3.066 3.066 0 010-3.976 3.066 3.066 0 00.723-1.745 3.066 3.066 0 012.812-2.812zm7.44 5.252a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z'])
			}),
			_Utils_Tuple2(
			'ban',
			{
				a: _List_fromArray(
					['M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728A9 9 0 015.636 5.636m12.728 12.728L5.636 5.636']),
				b: _List_fromArray(
					['M13.477 14.89A6 6 0 015.11 6.524l8.367 8.368zm1.414-1.414L6.524 5.11a6 6 0 018.367 8.367zM18 10a8 8 0 11-16 0 8 8 0 0116 0z'])
			}),
			_Utils_Tuple2(
			'beaker',
			{
				a: _List_fromArray(
					['M19.428 15.428a2 2 0 00-1.022-.547l-2.387-.477a6 6 0 00-3.86.517l-.318.158a6 6 0 01-3.86.517L6.05 15.21a2 2 0 00-1.806.547M8 4h8l-1 1v5.172a2 2 0 00.586 1.414l5 5c1.26 1.26.367 3.414-1.415 3.414H4.828c-1.782 0-2.674-2.154-1.414-3.414l5-5A2 2 0 009 10.172V5L8 4z']),
				b: _List_fromArray(
					['M7 2a1 1 0 00-.707 1.707L7 4.414v3.758a1 1 0 01-.293.707l-4 4C.817 14.769 2.156 18 4.828 18h10.343c2.673 0 4.012-3.231 2.122-5.121l-4-4A1 1 0 0113 8.172V4.414l.707-.707A1 1 0 0013 2H7zm2 6.172V4h2v4.172a3 3 0 00.879 2.12l1.027 1.028a4 4 0 00-2.171.102l-.47.156a4 4 0 01-2.53 0l-.563-.187a1.993 1.993 0 00-.114-.035l1.063-1.063A3 3 0 009 8.172z'])
			}),
			_Utils_Tuple2(
			'bell',
			{
				a: _List_fromArray(
					['M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9']),
				b: _List_fromArray(
					['M10 2a6 6 0 00-6 6v3.586l-.707.707A1 1 0 004 14h12a1 1 0 00.707-1.707L16 11.586V8a6 6 0 00-6-6zM10 18a3 3 0 01-3-3h6a3 3 0 01-3 3z'])
			}),
			_Utils_Tuple2(
			'book-open',
			{
				a: _List_fromArray(
					['M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253']),
				b: _List_fromArray(
					['M9 4.804A7.968 7.968 0 005.5 4c-1.255 0-2.443.29-3.5.804v10A7.969 7.969 0 015.5 14c1.669 0 3.218.51 4.5 1.385A7.962 7.962 0 0114.5 14c1.255 0 2.443.29 3.5.804v-10A7.968 7.968 0 0014.5 4c-1.255 0-2.443.29-3.5.804V12a1 1 0 11-2 0V4.804z'])
			}),
			_Utils_Tuple2(
			'bookmark',
			{
				a: _List_fromArray(
					['M5 5a2 2 0 012-2h10a2 2 0 012 2v16l-7-3.5L5 21V5z']),
				b: _List_fromArray(
					['M5 4a2 2 0 012-2h6a2 2 0 012 2v14l-5-2.5L5 18V4z'])
			}),
			_Utils_Tuple2(
			'bookmark-alt',
			{
				a: _List_fromArray(
					['M16 4v12l-4-2-4 2V4M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z']),
				b: _List_fromArray(
					['M3 5a2 2 0 012-2h10a2 2 0 012 2v10a2 2 0 01-2 2H5a2 2 0 01-2-2V5zm11 1H6v8l4-2 4 2V6z'])
			}),
			_Utils_Tuple2(
			'briefcase',
			{
				a: _List_fromArray(
					['M21 13.255A23.931 23.931 0 0112 15c-3.183 0-6.22-.62-9-1.745M16 6V4a2 2 0 00-2-2h-4a2 2 0 00-2 2v2m4 6h.01M5 20h14a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z']),
				b: _List_fromArray(
					['M6 6V5a3 3 0 013-3h2a3 3 0 013 3v1h2a2 2 0 012 2v3.57A22.952 22.952 0 0110 13a22.95 22.95 0 01-8-1.43V8a2 2 0 012-2h2zm2-1a1 1 0 011-1h2a1 1 0 011 1v1H8V5zm1 5a1 1 0 011-1h.01a1 1 0 110 2H10a1 1 0 01-1-1z', 'M2 13.692V16a2 2 0 002 2h12a2 2 0 002-2v-2.308A24.974 24.974 0 0110 15c-2.796 0-5.487-.46-8-1.308z'])
			}),
			_Utils_Tuple2(
			'cake',
			{
				a: _List_fromArray(
					['M21 15.546c-.523 0-1.046.151-1.5.454a2.704 2.704 0 01-3 0 2.704 2.704 0 00-3 0 2.704 2.704 0 01-3 0 2.704 2.704 0 00-3 0 2.704 2.704 0 01-3 0 2.701 2.701 0 00-1.5-.454M9 6v2m3-2v2m3-2v2M9 3h.01M12 3h.01M15 3h.01M21 21v-7a2 2 0 00-2-2H5a2 2 0 00-2 2v7h18zm-3-9v-2a2 2 0 00-2-2H8a2 2 0 00-2 2v2h12z']),
				b: _List_fromArray(
					['M6 3a1 1 0 011-1h.01a1 1 0 010 2H7a1 1 0 01-1-1zm2 3a1 1 0 00-2 0v1a2 2 0 00-2 2v1a2 2 0 00-2 2v.683a3.7 3.7 0 011.055.485 1.704 1.704 0 001.89 0 3.704 3.704 0 014.11 0 1.704 1.704 0 001.89 0 3.704 3.704 0 014.11 0 1.704 1.704 0 001.89 0A3.7 3.7 0 0118 12.683V12a2 2 0 00-2-2V9a2 2 0 00-2-2V6a1 1 0 10-2 0v1h-1V6a1 1 0 10-2 0v1H8V6zm10 8.868a3.704 3.704 0 01-4.055-.036 1.704 1.704 0 00-1.89 0 3.704 3.704 0 01-4.11 0 1.704 1.704 0 00-1.89 0A3.704 3.704 0 012 14.868V17a1 1 0 001 1h14a1 1 0 001-1v-2.132zM9 3a1 1 0 011-1h.01a1 1 0 110 2H10a1 1 0 01-1-1zm3 0a1 1 0 011-1h.01a1 1 0 110 2H13a1 1 0 01-1-1z'])
			}),
			_Utils_Tuple2(
			'calculator',
			{
				a: _List_fromArray(
					['M9 7h6m0 10v-3m-3 3h.01M9 17h.01M9 14h.01M12 14h.01M15 11h.01M12 11h.01M9 11h.01M7 21h10a2 2 0 002-2V5a2 2 0 00-2-2H7a2 2 0 00-2 2v14a2 2 0 002 2z']),
				b: _List_fromArray(
					['M6 2a2 2 0 00-2 2v12a2 2 0 002 2h8a2 2 0 002-2V4a2 2 0 00-2-2H6zm1 2a1 1 0 000 2h6a1 1 0 100-2H7zm6 7a1 1 0 011 1v3a1 1 0 11-2 0v-3a1 1 0 011-1zm-3 3a1 1 0 100 2h.01a1 1 0 100-2H10zm-4 1a1 1 0 011-1h.01a1 1 0 110 2H7a1 1 0 01-1-1zm1-4a1 1 0 100 2h.01a1 1 0 100-2H7zm2 1a1 1 0 011-1h.01a1 1 0 110 2H10a1 1 0 01-1-1zm4-4a1 1 0 100 2h.01a1 1 0 100-2H13zM9 9a1 1 0 011-1h.01a1 1 0 110 2H10a1 1 0 01-1-1zM7 8a1 1 0 000 2h.01a1 1 0 000-2H7z'])
			}),
			_Utils_Tuple2(
			'calendar',
			{
				a: _List_fromArray(
					['M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z']),
				b: _List_fromArray(
					['M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z'])
			}),
			_Utils_Tuple2(
			'camera',
			{
				a: _List_fromArray(
					['M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z', 'M15 13a3 3 0 11-6 0 3 3 0 016 0z']),
				b: _List_fromArray(
					['M4 5a2 2 0 00-2 2v8a2 2 0 002 2h12a2 2 0 002-2V7a2 2 0 00-2-2h-1.586a1 1 0 01-.707-.293l-1.121-1.121A2 2 0 0011.172 3H8.828a2 2 0 00-1.414.586L6.293 4.707A1 1 0 015.586 5H4zm6 9a3 3 0 100-6 3 3 0 000 6z'])
			}),
			_Utils_Tuple2(
			'cash',
			{
				a: _List_fromArray(
					['M17 9V7a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2m2 4h10a2 2 0 002-2v-6a2 2 0 00-2-2H9a2 2 0 00-2 2v6a2 2 0 002 2zm7-5a2 2 0 11-4 0 2 2 0 014 0z']),
				b: _List_fromArray(
					['M4 4a2 2 0 00-2 2v4a2 2 0 002 2V6h10a2 2 0 00-2-2H4zm2 6a2 2 0 012-2h8a2 2 0 012 2v4a2 2 0 01-2 2H8a2 2 0 01-2-2v-4zm6 4a2 2 0 100-4 2 2 0 000 4z'])
			}),
			_Utils_Tuple2(
			'chart-bar',
			{
				a: _List_fromArray(
					['M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z']),
				b: _List_fromArray(
					['M2 11a1 1 0 011-1h2a1 1 0 011 1v5a1 1 0 01-1 1H3a1 1 0 01-1-1v-5zM8 7a1 1 0 011-1h2a1 1 0 011 1v9a1 1 0 01-1 1H9a1 1 0 01-1-1V7zM14 4a1 1 0 011-1h2a1 1 0 011 1v12a1 1 0 01-1 1h-2a1 1 0 01-1-1V4z'])
			}),
			_Utils_Tuple2(
			'chart-pie',
			{
				a: _List_fromArray(
					['M11 3.055A9.001 9.001 0 1020.945 13H11V3.055z', 'M20.488 9H15V3.512A9.025 9.025 0 0120.488 9z']),
				b: _List_fromArray(
					['M2 10a8 8 0 018-8v8h8a8 8 0 11-16 0z', 'M12 2.252A8.014 8.014 0 0117.748 8H12V2.252z'])
			}),
			_Utils_Tuple2(
			'chart-square-bar',
			{
				a: _List_fromArray(
					['M16 8v8m-4-5v5m-4-2v2m-2 4h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z']),
				b: _List_fromArray(
					['M5 3a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2V5a2 2 0 00-2-2H5zm9 4a1 1 0 10-2 0v6a1 1 0 102 0V7zm-3 2a1 1 0 10-2 0v4a1 1 0 102 0V9zm-3 3a1 1 0 10-2 0v1a1 1 0 102 0v-1z'])
			}),
			_Utils_Tuple2(
			'chat',
			{
				a: _List_fromArray(
					['M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z']),
				b: _List_fromArray(
					['M18 10c0 3.866-3.582 7-8 7a8.841 8.841 0 01-4.083-.98L2 17l1.338-3.123C2.493 12.767 2 11.434 2 10c0-3.866 3.582-7 8-7s8 3.134 8 7zM7 9H5v2h2V9zm8 0h-2v2h2V9zM9 9h2v2H9V9z'])
			}),
			_Utils_Tuple2(
			'chat-alt',
			{
				a: _List_fromArray(
					['M8 10h.01M12 10h.01M16 10h.01M9 16H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-5l-5 5v-5z']),
				b: _List_fromArray(
					['M18 5v8a2 2 0 01-2 2h-5l-5 4v-4H4a2 2 0 01-2-2V5a2 2 0 012-2h12a2 2 0 012 2zM7 8H5v2h2V8zm2 0h2v2H9V8zm6 0h-2v2h2V8z'])
			}),
			_Utils_Tuple2(
			'chat-alt-2',
			{
				a: _List_fromArray(
					['M17 8h2a2 2 0 012 2v6a2 2 0 01-2 2h-2v4l-4-4H9a1.994 1.994 0 01-1.414-.586m0 0L11 14h4a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2v4l.586-.586z']),
				b: _List_fromArray(
					['M2 5a2 2 0 012-2h7a2 2 0 012 2v4a2 2 0 01-2 2H9l-3 3v-3H4a2 2 0 01-2-2V5z', 'M15 7v2a4 4 0 01-4 4H9.828l-1.766 1.767c.28.149.599.233.938.233h2l3 3v-3h2a2 2 0 002-2V9a2 2 0 00-2-2h-1z'])
			}),
			_Utils_Tuple2(
			'check',
			{
				a: _List_fromArray(
					['M5 13l4 4L19 7']),
				b: _List_fromArray(
					['M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z'])
			}),
			_Utils_Tuple2(
			'check-circle',
			{
				a: _List_fromArray(
					['M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z']),
				b: _List_fromArray(
					['M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z'])
			}),
			_Utils_Tuple2(
			'chevron-double-down',
			{
				a: _List_fromArray(
					['M19 13l-7 7-7-7m14-8l-7 7-7-7']),
				b: _List_fromArray(
					['M15.707 4.293a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0l-5-5a1 1 0 011.414-1.414L10 8.586l4.293-4.293a1 1 0 011.414 0zm0 6a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0l-5-5a1 1 0 111.414-1.414L10 14.586l4.293-4.293a1 1 0 011.414 0z'])
			}),
			_Utils_Tuple2(
			'chevron-double-left',
			{
				a: _List_fromArray(
					['M11 19l-7-7 7-7m8 14l-7-7 7-7']),
				b: _List_fromArray(
					['M15.707 15.707a1 1 0 01-1.414 0l-5-5a1 1 0 010-1.414l5-5a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 010 1.414zm-6 0a1 1 0 01-1.414 0l-5-5a1 1 0 010-1.414l5-5a1 1 0 011.414 1.414L5.414 10l4.293 4.293a1 1 0 010 1.414z'])
			}),
			_Utils_Tuple2(
			'chevron-double-right',
			{
				a: _List_fromArray(
					['M13 5l7 7-7 7M5 5l7 7-7 7']),
				b: _List_fromArray(
					['M10.293 15.707a1 1 0 010-1.414L14.586 10l-4.293-4.293a1 1 0 111.414-1.414l5 5a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0z', 'M4.293 15.707a1 1 0 010-1.414L8.586 10 4.293 5.707a1 1 0 011.414-1.414l5 5a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0z'])
			}),
			_Utils_Tuple2(
			'chevron-double-up',
			{
				a: _List_fromArray(
					['M5 11l7-7 7 7M5 19l7-7 7 7']),
				b: _List_fromArray(
					['M4.293 15.707a1 1 0 010-1.414l5-5a1 1 0 011.414 0l5 5a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414 0zm0-6a1 1 0 010-1.414l5-5a1 1 0 011.414 0l5 5a1 1 0 01-1.414 1.414L10 5.414 5.707 9.707a1 1 0 01-1.414 0z'])
			}),
			_Utils_Tuple2(
			'chevron-down',
			{
				a: _List_fromArray(
					['M19 9l-7 7-7-7']),
				b: _List_fromArray(
					['M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z'])
			}),
			_Utils_Tuple2(
			'chevron-left',
			{
				a: _List_fromArray(
					['M15 19l-7-7 7-7']),
				b: _List_fromArray(
					['M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z'])
			}),
			_Utils_Tuple2(
			'chevron-right',
			{
				a: _List_fromArray(
					['M9 5l7 7-7 7']),
				b: _List_fromArray(
					['M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z'])
			}),
			_Utils_Tuple2(
			'chevron-up',
			{
				a: _List_fromArray(
					['M5 15l7-7 7 7']),
				b: _List_fromArray(
					['M14.707 12.707a1 1 0 01-1.414 0L10 9.414l-3.293 3.293a1 1 0 01-1.414-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 010 1.414z'])
			}),
			_Utils_Tuple2(
			'chip',
			{
				a: _List_fromArray(
					['M9 3v2m6-2v2M9 19v2m6-2v2M5 9H3m2 6H3m18-6h-2m2 6h-2M7 19h10a2 2 0 002-2V7a2 2 0 00-2-2H7a2 2 0 00-2 2v10a2 2 0 002 2zM9 9h6v6H9V9z']),
				b: _List_fromArray(
					['M13 7H7v6h6V7z', 'M7 2a1 1 0 012 0v1h2V2a1 1 0 112 0v1h2a2 2 0 012 2v2h1a1 1 0 110 2h-1v2h1a1 1 0 110 2h-1v2a2 2 0 01-2 2h-2v1a1 1 0 11-2 0v-1H9v1a1 1 0 11-2 0v-1H5a2 2 0 01-2-2v-2H2a1 1 0 110-2h1V9H2a1 1 0 010-2h1V5a2 2 0 012-2h2V2zM5 5h10v10H5V5z'])
			}),
			_Utils_Tuple2(
			'clipboard',
			{
				a: _List_fromArray(
					['M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2']),
				b: _List_fromArray(
					['M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z', 'M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z'])
			}),
			_Utils_Tuple2(
			'clipboard-check',
			{
				a: _List_fromArray(
					['M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4']),
				b: _List_fromArray(
					['M9 2a1 1 0 000 2h2a1 1 0 100-2H9z', 'M4 5a2 2 0 012-2 3 3 0 003 3h2a3 3 0 003-3 2 2 0 012 2v11a2 2 0 01-2 2H6a2 2 0 01-2-2V5zm9.707 5.707a1 1 0 00-1.414-1.414L9 12.586l-1.293-1.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z'])
			}),
			_Utils_Tuple2(
			'clipboard-copy',
			{
				a: _List_fromArray(
					['M8 5H6a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2v-1M8 5a2 2 0 002 2h2a2 2 0 002-2M8 5a2 2 0 012-2h2a2 2 0 012 2m0 0h2a2 2 0 012 2v3m2 4H10m0 0l3-3m-3 3l3 3']),
				b: _List_fromArray(
					['M8 2a1 1 0 000 2h2a1 1 0 100-2H8z', 'M3 5a2 2 0 012-2 3 3 0 003 3h2a3 3 0 003-3 2 2 0 012 2v6h-4.586l1.293-1.293a1 1 0 00-1.414-1.414l-3 3a1 1 0 000 1.414l3 3a1 1 0 001.414-1.414L10.414 13H15v3a2 2 0 01-2 2H5a2 2 0 01-2-2V5zM15 11h2a1 1 0 110 2h-2v-2z'])
			}),
			_Utils_Tuple2(
			'clipboard-list',
			{
				a: _List_fromArray(
					['M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01']),
				b: _List_fromArray(
					['M9 2a1 1 0 000 2h2a1 1 0 100-2H9z', 'M4 5a2 2 0 012-2 3 3 0 003 3h2a3 3 0 003-3 2 2 0 012 2v11a2 2 0 01-2 2H6a2 2 0 01-2-2V5zm3 4a1 1 0 000 2h.01a1 1 0 100-2H7zm3 0a1 1 0 000 2h3a1 1 0 100-2h-3zm-3 4a1 1 0 100 2h.01a1 1 0 100-2H7zm3 0a1 1 0 100 2h3a1 1 0 100-2h-3z'])
			}),
			_Utils_Tuple2(
			'clock',
			{
				a: _List_fromArray(
					['M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z']),
				b: _List_fromArray(
					['M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z'])
			}),
			_Utils_Tuple2(
			'cloud',
			{
				a: _List_fromArray(
					['M3 15a4 4 0 004 4h9a5 5 0 10-.1-9.999 5.002 5.002 0 10-9.78 2.096A4.001 4.001 0 003 15z']),
				b: _List_fromArray(
					['M5.5 16a3.5 3.5 0 01-.369-6.98 4 4 0 117.753-1.977A4.5 4.5 0 1113.5 16h-8z'])
			}),
			_Utils_Tuple2(
			'cloud-download',
			{
				a: _List_fromArray(
					['M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M9 19l3 3m0 0l3-3m-3 3V10']),
				b: _List_fromArray(
					['M2 9.5A3.5 3.5 0 005.5 13H9v2.586l-1.293-1.293a1 1 0 00-1.414 1.414l3 3a1 1 0 001.414 0l3-3a1 1 0 00-1.414-1.414L11 15.586V13h2.5a4.5 4.5 0 10-.616-8.958 4.002 4.002 0 10-7.753 1.977A3.5 3.5 0 002 9.5zm9 3.5H9V8a1 1 0 012 0v5z'])
			}),
			_Utils_Tuple2(
			'cloud-upload',
			{
				a: _List_fromArray(
					['M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12']),
				b: _List_fromArray(
					['M5.5 13a3.5 3.5 0 01-.369-6.98 4 4 0 117.753-1.977A4.5 4.5 0 1113.5 13H11V9.413l1.293 1.293a1 1 0 001.414-1.414l-3-3a1 1 0 00-1.414 0l-3 3a1 1 0 001.414 1.414L9 9.414V13H5.5z', 'M9 13h2v5a1 1 0 11-2 0v-5z'])
			}),
			_Utils_Tuple2(
			'code',
			{
				a: _List_fromArray(
					['M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4']),
				b: _List_fromArray(
					['M12.316 3.051a1 1 0 01.633 1.265l-4 12a1 1 0 11-1.898-.632l4-12a1 1 0 011.265-.633zM5.707 6.293a1 1 0 010 1.414L3.414 10l2.293 2.293a1 1 0 11-1.414 1.414l-3-3a1 1 0 010-1.414l3-3a1 1 0 011.414 0zm8.586 0a1 1 0 011.414 0l3 3a1 1 0 010 1.414l-3 3a1 1 0 11-1.414-1.414L16.586 10l-2.293-2.293a1 1 0 010-1.414z'])
			}),
			_Utils_Tuple2(
			'cog',
			{
				a: _List_fromArray(
					['M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z', 'M15 12a3 3 0 11-6 0 3 3 0 016 0z']),
				b: _List_fromArray(
					['M11.49 3.17c-.38-1.56-2.6-1.56-2.98 0a1.532 1.532 0 01-2.286.948c-1.372-.836-2.942.734-2.106 2.106.54.886.061 2.042-.947 2.287-1.561.379-1.561 2.6 0 2.978a1.532 1.532 0 01.947 2.287c-.836 1.372.734 2.942 2.106 2.106a1.532 1.532 0 012.287.947c.379 1.561 2.6 1.561 2.978 0a1.533 1.533 0 012.287-.947c1.372.836 2.942-.734 2.106-2.106a1.533 1.533 0 01.947-2.287c1.561-.379 1.561-2.6 0-2.978a1.532 1.532 0 01-.947-2.287c.836-1.372-.734-2.942-2.106-2.106a1.532 1.532 0 01-2.287-.947zM10 13a3 3 0 100-6 3 3 0 000 6z'])
			}),
			_Utils_Tuple2(
			'collection',
			{
				a: _List_fromArray(
					['M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10']),
				b: _List_fromArray(
					['M7 3a1 1 0 000 2h6a1 1 0 100-2H7zM4 7a1 1 0 011-1h10a1 1 0 110 2H5a1 1 0 01-1-1zM2 11a2 2 0 012-2h12a2 2 0 012 2v4a2 2 0 01-2 2H4a2 2 0 01-2-2v-4z'])
			}),
			_Utils_Tuple2(
			'color-swatch',
			{
				a: _List_fromArray(
					['M7 21a4 4 0 01-4-4V5a2 2 0 012-2h4a2 2 0 012 2v12a4 4 0 01-4 4zm0 0h12a2 2 0 002-2v-4a2 2 0 00-2-2h-2.343M11 7.343l1.657-1.657a2 2 0 012.828 0l2.829 2.829a2 2 0 010 2.828l-8.486 8.485M7 17h.01']),
				b: _List_fromArray(
					['M4 2a2 2 0 00-2 2v11a3 3 0 106 0V4a2 2 0 00-2-2H4zm1 14a1 1 0 100-2 1 1 0 000 2zm5-1.757l4.9-4.9a2 2 0 000-2.828L13.485 5.1a2 2 0 00-2.828 0L10 5.757v8.486zM16 18H9.071l6-6H16a2 2 0 012 2v2a2 2 0 01-2 2z'])
			}),
			_Utils_Tuple2(
			'credit-card',
			{
				a: _List_fromArray(
					['M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z']),
				b: _List_fromArray(
					['M4 4a2 2 0 00-2 2v1h16V6a2 2 0 00-2-2H4z', 'M18 9H2v5a2 2 0 002 2h12a2 2 0 002-2V9zM4 13a1 1 0 011-1h1a1 1 0 110 2H5a1 1 0 01-1-1zm5-1a1 1 0 100 2h1a1 1 0 100-2H9z'])
			}),
			_Utils_Tuple2(
			'cube',
			{
				a: _List_fromArray(
					['M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4']),
				b: _List_fromArray(
					['M11 17a1 1 0 001.447.894l4-2A1 1 0 0017 15V9.236a1 1 0 00-1.447-.894l-4 2a1 1 0 00-.553.894V17zM15.211 6.276a1 1 0 000-1.788l-4.764-2.382a1 1 0 00-.894 0L4.789 4.488a1 1 0 000 1.788l4.764 2.382a1 1 0 00.894 0l4.764-2.382zM4.447 8.342A1 1 0 003 9.236V15a1 1 0 00.553.894l4 2A1 1 0 009 17v-5.764a1 1 0 00-.553-.894l-4-2z'])
			}),
			_Utils_Tuple2(
			'cube-transparent',
			{
				a: _List_fromArray(
					['M14 10l-2 1m0 0l-2-1m2 1v2.5M20 7l-2 1m2-1l-2-1m2 1v2.5M14 4l-2-1-2 1M4 7l2-1M4 7l2 1M4 7v2.5M12 21l-2-1m2 1l2-1m-2 1v-2.5M6 18l-2-1v-2.5M18 18l2-1v-2.5']),
				b: _List_fromArray(
					['M9.504 1.132a1 1 0 01.992 0l1.75 1a1 1 0 11-.992 1.736L10 3.152l-1.254.716a1 1 0 11-.992-1.736l1.75-1zM5.618 4.504a1 1 0 01-.372 1.364L5.016 6l.23.132a1 1 0 11-.992 1.736L4 7.723V8a1 1 0 01-2 0V6a.996.996 0 01.52-.878l1.734-.99a1 1 0 011.364.372zm8.764 0a1 1 0 011.364-.372l1.733.99A1.002 1.002 0 0118 6v2a1 1 0 11-2 0v-.277l-.254.145a1 1 0 11-.992-1.736l.23-.132-.23-.132a1 1 0 01-.372-1.364zm-7 4a1 1 0 011.364-.372L10 8.848l1.254-.716a1 1 0 11.992 1.736L11 10.58V12a1 1 0 11-2 0v-1.42l-1.246-.712a1 1 0 01-.372-1.364zM3 11a1 1 0 011 1v1.42l1.246.712a1 1 0 11-.992 1.736l-1.75-1A1 1 0 012 14v-2a1 1 0 011-1zm14 0a1 1 0 011 1v2a1 1 0 01-.504.868l-1.75 1a1 1 0 11-.992-1.736L16 13.42V12a1 1 0 011-1zm-9.618 5.504a1 1 0 011.364-.372l.254.145V16a1 1 0 112 0v.277l.254-.145a1 1 0 11.992 1.736l-1.735.992a.995.995 0 01-1.022 0l-1.735-.992a1 1 0 01-.372-1.364z'])
			}),
			_Utils_Tuple2(
			'currency-bangladeshi',
			{
				a: _List_fromArray(
					['M11 11V9a2 2 0 00-2-2m2 4v4a2 2 0 104 0v-1m-4-3H9m2 0h4m6 1a9 9 0 11-18 0 9 9 0 0118 0z']),
				b: _List_fromArray(
					['M10 18a8 8 0 100-16 8 8 0 000 16zM7 4a1 1 0 000 2 1 1 0 011 1v1H7a1 1 0 000 2h1v3a3 3 0 106 0v-1a1 1 0 10-2 0v1a1 1 0 11-2 0v-3h3a1 1 0 100-2h-3V7a3 3 0 00-3-3z'])
			}),
			_Utils_Tuple2(
			'currency-dollar',
			{
				a: _List_fromArray(
					['M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z']),
				b: _List_fromArray(
					['M8.433 7.418c.155-.103.346-.196.567-.267v1.698a2.305 2.305 0 01-.567-.267C8.07 8.34 8 8.114 8 8c0-.114.07-.34.433-.582zM11 12.849v-1.698c.22.071.412.164.567.267.364.243.433.468.433.582 0 .114-.07.34-.433.582a2.305 2.305 0 01-.567.267z', 'M10 18a8 8 0 100-16 8 8 0 000 16zm1-13a1 1 0 10-2 0v.092a4.535 4.535 0 00-1.676.662C6.602 6.234 6 7.009 6 8c0 .99.602 1.765 1.324 2.246.48.32 1.054.545 1.676.662v1.941c-.391-.127-.68-.317-.843-.504a1 1 0 10-1.51 1.31c.562.649 1.413 1.076 2.353 1.253V15a1 1 0 102 0v-.092a4.535 4.535 0 001.676-.662C13.398 13.766 14 12.991 14 12c0-.99-.602-1.765-1.324-2.246A4.535 4.535 0 0011 9.092V7.151c.391.127.68.317.843.504a1 1 0 101.511-1.31c-.563-.649-1.413-1.076-2.354-1.253V5z'])
			}),
			_Utils_Tuple2(
			'currency-euro',
			{
				a: _List_fromArray(
					['M14.121 15.536c-1.171 1.952-3.07 1.952-4.242 0-1.172-1.953-1.172-5.119 0-7.072 1.171-1.952 3.07-1.952 4.242 0M8 10.5h4m-4 3h4m9-1.5a9 9 0 11-18 0 9 9 0 0118 0z']),
				b: _List_fromArray(
					['M10 18a8 8 0 100-16 8 8 0 000 16zM8.736 6.979C9.208 6.193 9.696 6 10 6c.304 0 .792.193 1.264.979a1 1 0 001.715-1.029C12.279 4.784 11.232 4 10 4s-2.279.784-2.979 1.95c-.285.475-.507 1-.67 1.55H6a1 1 0 000 2h.013a9.358 9.358 0 000 1H6a1 1 0 100 2h.351c.163.55.385 1.075.67 1.55C7.721 15.216 8.768 16 10 16s2.279-.784 2.979-1.95a1 1 0 10-1.715-1.029c-.472.786-.96.979-1.264.979-.304 0-.792-.193-1.264-.979a4.265 4.265 0 01-.264-.521H10a1 1 0 100-2H8.017a7.36 7.36 0 010-1H10a1 1 0 100-2H8.472c.08-.185.167-.36.264-.521z'])
			}),
			_Utils_Tuple2(
			'currency-pound',
			{
				a: _List_fromArray(
					['M15 9a2 2 0 10-4 0v5a2 2 0 01-2 2h6m-6-4h4m8 0a9 9 0 11-18 0 9 9 0 0118 0z']),
				b: _List_fromArray(
					['M10 18a8 8 0 100-16 8 8 0 000 16zm1-14a3 3 0 00-3 3v2H7a1 1 0 000 2h1v1a1 1 0 01-1 1 1 1 0 100 2h6a1 1 0 100-2H9.83c.11-.313.17-.65.17-1v-1h1a1 1 0 100-2h-1V7a1 1 0 112 0 1 1 0 102 0 3 3 0 00-3-3z'])
			}),
			_Utils_Tuple2(
			'currency-rupee',
			{
				a: _List_fromArray(
					['M9 8h6m-5 0a3 3 0 110 6H9l3 3m-3-6h6m6 1a9 9 0 11-18 0 9 9 0 0118 0z']),
				b: _List_fromArray(
					['M10 18a8 8 0 100-16 8 8 0 000 16zM7 5a1 1 0 100 2h1a2 2 0 011.732 1H7a1 1 0 100 2h2.732A2 2 0 018 11H7a1 1 0 00-.707 1.707l3 3a1 1 0 001.414-1.414l-1.483-1.484A4.008 4.008 0 0011.874 10H13a1 1 0 100-2h-1.126a3.976 3.976 0 00-.41-1H13a1 1 0 100-2H7z'])
			}),
			_Utils_Tuple2(
			'currency-yen',
			{
				a: _List_fromArray(
					['M9 8l3 5m0 0l3-5m-3 5v4m-3-5h6m-6 3h6m6-3a9 9 0 11-18 0 9 9 0 0118 0z']),
				b: _List_fromArray(
					['M10 18a8 8 0 100-16 8 8 0 000 16zM7.858 5.485a1 1 0 00-1.715 1.03L7.633 9H7a1 1 0 100 2h1.834l.166.277V12H7a1 1 0 100 2h2v1a1 1 0 102 0v-1h2a1 1 0 100-2h-2v-.723l.166-.277H13a1 1 0 100-2h-.634l1.492-2.486a1 1 0 10-1.716-1.029L10.034 9h-.068L7.858 5.485z'])
			}),
			_Utils_Tuple2(
			'cursor-click',
			{
				a: _List_fromArray(
					['M15 15l-2 5L9 9l11 4-5 2zm0 0l5 5M7.188 2.239l.777 2.897M5.136 7.965l-2.898-.777M13.95 4.05l-2.122 2.122m-5.657 5.656l-2.12 2.122']),
				b: _List_fromArray(
					['M6.672 1.911a1 1 0 10-1.932.518l.259.966a1 1 0 001.932-.518l-.26-.966zM2.429 4.74a1 1 0 10-.517 1.932l.966.259a1 1 0 00.517-1.932l-.966-.26zm8.814-.569a1 1 0 00-1.415-1.414l-.707.707a1 1 0 101.415 1.415l.707-.708zm-7.071 7.072l.707-.707A1 1 0 003.465 9.12l-.708.707a1 1 0 001.415 1.415zm3.2-5.171a1 1 0 00-1.3 1.3l4 10a1 1 0 001.823.075l1.38-2.759 3.018 3.02a1 1 0 001.414-1.415l-3.019-3.02 2.76-1.379a1 1 0 00-.076-1.822l-10-4z'])
			}),
			_Utils_Tuple2(
			'database',
			{
				a: _List_fromArray(
					['M4 7v10c0 2.21 3.582 4 8 4s8-1.79 8-4V7M4 7c0 2.21 3.582 4 8 4s8-1.79 8-4M4 7c0-2.21 3.582-4 8-4s8 1.79 8 4m0 5c0 2.21-3.582 4-8 4s-8-1.79-8-4']),
				b: _List_fromArray(
					['M3 12v3c0 1.657 3.134 3 7 3s7-1.343 7-3v-3c0 1.657-3.134 3-7 3s-7-1.343-7-3z', 'M3 7v3c0 1.657 3.134 3 7 3s7-1.343 7-3V7c0 1.657-3.134 3-7 3S3 8.657 3 7z', 'M17 5c0 1.657-3.134 3-7 3S3 6.657 3 5s3.134-3 7-3 7 1.343 7 3z'])
			}),
			_Utils_Tuple2(
			'desktop-computer',
			{
				a: _List_fromArray(
					['M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z']),
				b: _List_fromArray(
					['M3 5a2 2 0 012-2h10a2 2 0 012 2v8a2 2 0 01-2 2h-2.22l.123.489.804.804A1 1 0 0113 18H7a1 1 0 01-.707-1.707l.804-.804L7.22 15H5a2 2 0 01-2-2V5zm5.771 7H5V5h10v7H8.771z'])
			}),
			_Utils_Tuple2(
			'device-mobile',
			{
				a: _List_fromArray(
					['M12 18h.01M8 21h8a2 2 0 002-2V5a2 2 0 00-2-2H8a2 2 0 00-2 2v14a2 2 0 002 2z']),
				b: _List_fromArray(
					['M7 2a2 2 0 00-2 2v12a2 2 0 002 2h6a2 2 0 002-2V4a2 2 0 00-2-2H7zm3 14a1 1 0 100-2 1 1 0 000 2z'])
			}),
			_Utils_Tuple2(
			'device-tablet',
			{
				a: _List_fromArray(
					['M12 18h.01M7 21h10a2 2 0 002-2V5a2 2 0 00-2-2H7a2 2 0 00-2 2v14a2 2 0 002 2z']),
				b: _List_fromArray(
					['M6 2a2 2 0 00-2 2v12a2 2 0 002 2h8a2 2 0 002-2V4a2 2 0 00-2-2H6zm4 14a1 1 0 100-2 1 1 0 000 2z'])
			}),
			_Utils_Tuple2(
			'document',
			{
				a: _List_fromArray(
					['M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z']),
				b: _List_fromArray(
					['M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4z'])
			}),
			_Utils_Tuple2(
			'document-add',
			{
				a: _List_fromArray(
					['M9 13h6m-3-3v6m5 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z']),
				b: _List_fromArray(
					['M6 2a2 2 0 00-2 2v12a2 2 0 002 2h8a2 2 0 002-2V7.414A2 2 0 0015.414 6L12 2.586A2 2 0 0010.586 2H6zm5 6a1 1 0 10-2 0v2H7a1 1 0 100 2h2v2a1 1 0 102 0v-2h2a1 1 0 100-2h-2V8z'])
			}),
			_Utils_Tuple2(
			'document-download',
			{
				a: _List_fromArray(
					['M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z']),
				b: _List_fromArray(
					['M6 2a2 2 0 00-2 2v12a2 2 0 002 2h8a2 2 0 002-2V7.414A2 2 0 0015.414 6L12 2.586A2 2 0 0010.586 2H6zm5 6a1 1 0 10-2 0v3.586l-1.293-1.293a1 1 0 10-1.414 1.414l3 3a1 1 0 001.414 0l3-3a1 1 0 00-1.414-1.414L11 11.586V8z'])
			}),
			_Utils_Tuple2(
			'document-duplicate',
			{
				a: _List_fromArray(
					['M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2']),
				b: _List_fromArray(
					['M9 2a2 2 0 00-2 2v8a2 2 0 002 2h6a2 2 0 002-2V6.414A2 2 0 0016.414 5L14 2.586A2 2 0 0012.586 2H9z', 'M3 8a2 2 0 012-2v10h8a2 2 0 01-2 2H5a2 2 0 01-2-2V8z'])
			}),
			_Utils_Tuple2(
			'document-remove',
			{
				a: _List_fromArray(
					['M9 13h6m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z']),
				b: _List_fromArray(
					['M6 2a2 2 0 00-2 2v12a2 2 0 002 2h8a2 2 0 002-2V7.414A2 2 0 0015.414 6L12 2.586A2 2 0 0010.586 2H6zm1 8a1 1 0 100 2h6a1 1 0 100-2H7z'])
			}),
			_Utils_Tuple2(
			'document-report',
			{
				a: _List_fromArray(
					['M9 17v-2m3 2v-4m3 4v-6m2 10H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z']),
				b: _List_fromArray(
					['M6 2a2 2 0 00-2 2v12a2 2 0 002 2h8a2 2 0 002-2V7.414A2 2 0 0015.414 6L12 2.586A2 2 0 0010.586 2H6zm2 10a1 1 0 10-2 0v3a1 1 0 102 0v-3zm2-3a1 1 0 011 1v5a1 1 0 11-2 0v-5a1 1 0 011-1zm4-1a1 1 0 10-2 0v7a1 1 0 102 0V8z'])
			}),
			_Utils_Tuple2(
			'document-search',
			{
				a: _List_fromArray(
					['M10 21h7a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v11m0 5l4.879-4.879m0 0a3 3 0 104.243-4.242 3 3 0 00-4.243 4.242z']),
				b: _List_fromArray(
					['M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2h-1.528A6 6 0 004 9.528V4z', 'M8 10a4 4 0 00-3.446 6.032l-1.261 1.26a1 1 0 101.414 1.415l1.261-1.261A4 4 0 108 10zm-2 4a2 2 0 114 0 2 2 0 01-4 0z'])
			}),
			_Utils_Tuple2(
			'document-text',
			{
				a: _List_fromArray(
					['M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z']),
				b: _List_fromArray(
					['M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 6a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm1 3a1 1 0 100 2h6a1 1 0 100-2H7z'])
			}),
			_Utils_Tuple2(
			'dots-circle-horizontal',
			{
				a: _List_fromArray(
					['M8 12h.01M12 12h.01M16 12h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z']),
				b: _List_fromArray(
					['M10 18a8 8 0 100-16 8 8 0 000 16zM7 9H5v2h2V9zm8 0h-2v2h2V9zM9 9h2v2H9V9z'])
			}),
			_Utils_Tuple2(
			'dots-horizontal',
			{
				a: _List_fromArray(
					['M5 12h.01M12 12h.01M19 12h.01M6 12a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0z']),
				b: _List_fromArray(
					['M6 10a2 2 0 11-4 0 2 2 0 014 0zM12 10a2 2 0 11-4 0 2 2 0 014 0zM16 12a2 2 0 100-4 2 2 0 000 4z'])
			}),
			_Utils_Tuple2(
			'dots-vertical',
			{
				a: _List_fromArray(
					['M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z']),
				b: _List_fromArray(
					['M10 6a2 2 0 110-4 2 2 0 010 4zM10 12a2 2 0 110-4 2 2 0 010 4zM10 18a2 2 0 110-4 2 2 0 010 4z'])
			}),
			_Utils_Tuple2(
			'download',
			{
				a: _List_fromArray(
					['M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4']),
				b: _List_fromArray(
					['M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm3.293-7.707a1 1 0 011.414 0L9 10.586V3a1 1 0 112 0v7.586l1.293-1.293a1 1 0 111.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z'])
			}),
			_Utils_Tuple2(
			'duplicate',
			{
				a: _List_fromArray(
					['M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z']),
				b: _List_fromArray(
					['M7 9a2 2 0 012-2h6a2 2 0 012 2v6a2 2 0 01-2 2H9a2 2 0 01-2-2V9z', 'M5 3a2 2 0 00-2 2v6a2 2 0 002 2V5h8a2 2 0 00-2-2H5z'])
			}),
			_Utils_Tuple2(
			'emoji-happy',
			{
				a: _List_fromArray(
					['M14.828 14.828a4 4 0 01-5.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z']),
				b: _List_fromArray(
					['M10 18a8 8 0 100-16 8 8 0 000 16zM7 9a1 1 0 100-2 1 1 0 000 2zm7-1a1 1 0 11-2 0 1 1 0 012 0zm-.464 5.535a1 1 0 10-1.415-1.414 3 3 0 01-4.242 0 1 1 0 00-1.415 1.414 5 5 0 007.072 0z'])
			}),
			_Utils_Tuple2(
			'emoji-sad',
			{
				a: _List_fromArray(
					['M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z']),
				b: _List_fromArray(
					['M10 18a8 8 0 100-16 8 8 0 000 16zM7 9a1 1 0 100-2 1 1 0 000 2zm7-1a1 1 0 11-2 0 1 1 0 012 0zm-7.536 5.879a1 1 0 001.415 0 3 3 0 014.242 0 1 1 0 001.415-1.415 5 5 0 00-7.072 0 1 1 0 000 1.415z'])
			}),
			_Utils_Tuple2(
			'empty',
			{a: _List_Nil, b: _List_Nil}),
			_Utils_Tuple2(
			'exclamation',
			{
				a: _List_fromArray(
					['M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z']),
				b: _List_fromArray(
					['M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z'])
			}),
			_Utils_Tuple2(
			'exclamation-circle',
			{
				a: _List_fromArray(
					['M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z']),
				b: _List_fromArray(
					['M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z'])
			}),
			_Utils_Tuple2(
			'external-link',
			{
				a: _List_fromArray(
					['M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14']),
				b: _List_fromArray(
					['M11 3a1 1 0 100 2h2.586l-6.293 6.293a1 1 0 101.414 1.414L15 6.414V9a1 1 0 102 0V4a1 1 0 00-1-1h-5z', 'M5 5a2 2 0 00-2 2v8a2 2 0 002 2h8a2 2 0 002-2v-3a1 1 0 10-2 0v3H5V7h3a1 1 0 000-2H5z'])
			}),
			_Utils_Tuple2(
			'eye',
			{
				a: _List_fromArray(
					['M15 12a3 3 0 11-6 0 3 3 0 016 0z', 'M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z']),
				b: _List_fromArray(
					['M10 12a2 2 0 100-4 2 2 0 000 4z', 'M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z'])
			}),
			_Utils_Tuple2(
			'eye-off',
			{
				a: _List_fromArray(
					['M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.88 9.88l-3.29-3.29m7.532 7.532l3.29 3.29M3 3l3.59 3.59m0 0A9.953 9.953 0 0112 5c4.478 0 8.268 2.943 9.543 7a10.025 10.025 0 01-4.132 5.411m0 0L21 21']),
				b: _List_fromArray(
					['M3.707 2.293a1 1 0 00-1.414 1.414l14 14a1 1 0 001.414-1.414l-1.473-1.473A10.014 10.014 0 0019.542 10C18.268 5.943 14.478 3 10 3a9.958 9.958 0 00-4.512 1.074l-1.78-1.781zm4.261 4.26l1.514 1.515a2.003 2.003 0 012.45 2.45l1.514 1.514a4 4 0 00-5.478-5.478z', 'M12.454 16.697L9.75 13.992a4 4 0 01-3.742-3.741L2.335 6.578A9.98 9.98 0 00.458 10c1.274 4.057 5.065 7 9.542 7 .847 0 1.669-.105 2.454-.303z'])
			}),
			_Utils_Tuple2(
			'fast-forward',
			{
				a: _List_fromArray(
					['M11.933 12.8a1 1 0 000-1.6L6.6 7.2A1 1 0 005 8v8a1 1 0 001.6.8l5.333-4zM19.933 12.8a1 1 0 000-1.6l-5.333-4A1 1 0 0013 8v8a1 1 0 001.6.8l5.333-4z']),
				b: _List_fromArray(
					['M4.555 5.168A1 1 0 003 6v8a1 1 0 001.555.832L10 11.202V14a1 1 0 001.555.832l6-4a1 1 0 000-1.664l-6-4A1 1 0 0010 6v2.798l-5.445-3.63z'])
			}),
			_Utils_Tuple2(
			'film',
			{
				a: _List_fromArray(
					['M7 4v16M17 4v16M3 8h4m10 0h4M3 12h18M3 16h4m10 0h4M4 20h16a1 1 0 001-1V5a1 1 0 00-1-1H4a1 1 0 00-1 1v14a1 1 0 001 1z']),
				b: _List_fromArray(
					['M4 3a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V5a2 2 0 00-2-2H4zm3 2h6v4H7V5zm8 8v2h1v-2h-1zm-2-2H7v4h6v-4zm2 0h1V9h-1v2zm1-4V5h-1v2h1zM5 5v2H4V5h1zm0 4H4v2h1V9zm-1 4h1v2H4v-2z'])
			}),
			_Utils_Tuple2(
			'filter',
			{
				a: _List_fromArray(
					['M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.293A1 1 0 013 6.586V4z']),
				b: _List_fromArray(
					['M3 3a1 1 0 011-1h12a1 1 0 011 1v3a1 1 0 01-.293.707L12 11.414V15a1 1 0 01-.293.707l-2 2A1 1 0 018 17v-5.586L3.293 6.707A1 1 0 013 6V3z'])
			}),
			_Utils_Tuple2(
			'finger-print',
			{
				a: _List_fromArray(
					['M12 11c0 3.517-1.009 6.799-2.753 9.571m-3.44-2.04l.054-.09A13.916 13.916 0 008 11a4 4 0 118 0c0 1.017-.07 2.019-.203 3m-2.118 6.844A21.88 21.88 0 0015.171 17m3.839 1.132c.645-2.266.99-4.659.99-7.132A8 8 0 008 4.07M3 15.364c.64-1.319 1-2.8 1-4.364 0-1.457.39-2.823 1.07-4']),
				b: _List_fromArray(
					['M6.625 2.655A9 9 0 0119 11a1 1 0 11-2 0 7 7 0 00-9.625-6.492 1 1 0 11-.75-1.853zM4.662 4.959A1 1 0 014.75 6.37 6.97 6.97 0 003 11a1 1 0 11-2 0 8.97 8.97 0 012.25-5.953 1 1 0 011.412-.088z', 'M5 11a5 5 0 1110 0 1 1 0 11-2 0 3 3 0 10-6 0c0 1.677-.345 3.276-.968 4.729a1 1 0 11-1.838-.789A9.964 9.964 0 005 11zm8.921 2.012a1 1 0 01.831 1.145 19.86 19.86 0 01-.545 2.436 1 1 0 11-1.92-.558c.207-.713.371-1.445.49-2.192a1 1 0 011.144-.83z', 'M10 10a1 1 0 011 1c0 2.236-.46 4.368-1.29 6.304a1 1 0 01-1.838-.789A13.952 13.952 0 009 11a1 1 0 011-1z'])
			}),
			_Utils_Tuple2(
			'fire',
			{
				a: _List_fromArray(
					['M17.657 18.657A8 8 0 016.343 7.343S7 9 9 10c0-2 .5-5 2.986-7C14 5 16.09 5.777 17.656 7.343A7.975 7.975 0 0120 13a7.975 7.975 0 01-2.343 5.657z', 'M9.879 16.121A3 3 0 1012.015 11L11 14H9c0 .768.293 1.536.879 2.121z']),
				b: _List_fromArray(
					['M12.395 2.553a1 1 0 00-1.45-.385c-.345.23-.614.558-.822.88-.214.33-.403.713-.57 1.116-.334.804-.614 1.768-.84 2.734a31.365 31.365 0 00-.613 3.58 2.64 2.64 0 01-.945-1.067c-.328-.68-.398-1.534-.398-2.654A1 1 0 005.05 6.05 6.981 6.981 0 003 11a7 7 0 1011.95-4.95c-.592-.591-.98-.985-1.348-1.467-.363-.476-.724-1.063-1.207-2.03zM12.12 15.12A3 3 0 017 13s.879.5 2.5.5c0-1 .5-4 1.25-4.5.5 1 .786 1.293 1.371 1.879A2.99 2.99 0 0113 13a2.99 2.99 0 01-.879 2.121z'])
			}),
			_Utils_Tuple2(
			'flag',
			{
				a: _List_fromArray(
					['M3 21v-4m0 0V5a2 2 0 012-2h6.5l1 1H21l-3 6 3 6h-8.5l-1-1H5a2 2 0 00-2 2zm9-13.5V9']),
				b: _List_fromArray(
					['M3 6a3 3 0 013-3h10a1 1 0 01.8 1.6L14.25 8l2.55 3.4A1 1 0 0116 13H6a1 1 0 00-1 1v3a1 1 0 11-2 0V6z'])
			}),
			_Utils_Tuple2(
			'folder',
			{
				a: _List_fromArray(
					['M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z']),
				b: _List_fromArray(
					['M2 6a2 2 0 012-2h5l2 2h5a2 2 0 012 2v6a2 2 0 01-2 2H4a2 2 0 01-2-2V6z'])
			}),
			_Utils_Tuple2(
			'folder-add',
			{
				a: _List_fromArray(
					['M9 13h6m-3-3v6m-9 1V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z']),
				b: _List_fromArray(
					['M2 6a2 2 0 012-2h5l2 2h5a2 2 0 012 2v6a2 2 0 01-2 2H4a2 2 0 01-2-2V6z', 'M8 11h4m-2-2v4'])
			}),
			_Utils_Tuple2(
			'folder-download',
			{
				a: _List_fromArray(
					['M12 10v6m0 0l-3-3m3 3l3-3M3 17V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z']),
				b: _List_fromArray(
					['M2 6a2 2 0 012-2h5l2 2h5a2 2 0 012 2v6a2 2 0 01-2 2H4a2 2 0 01-2-2V6z', 'M10 9v4m0 0l-2-2m2 2l2-2'])
			}),
			_Utils_Tuple2(
			'folder-open',
			{
				a: _List_fromArray(
					['M5 19a2 2 0 01-2-2V7a2 2 0 012-2h4l2 2h4a2 2 0 012 2v1M5 19h14a2 2 0 002-2v-5a2 2 0 00-2-2H9a2 2 0 00-2 2v5a2 2 0 01-2 2z']),
				b: _List_fromArray(
					['M2 6a2 2 0 012-2h4l2 2h4a2 2 0 012 2v1H8a3 3 0 00-3 3v1.5a1.5 1.5 0 01-3 0V6z', 'M6 12a2 2 0 012-2h8a2 2 0 012 2v2a2 2 0 01-2 2H2h2a2 2 0 002-2v-2z'])
			}),
			_Utils_Tuple2(
			'folder-remove',
			{
				a: _List_fromArray(
					['M9 13h6M3 17V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z']),
				b: _List_fromArray(
					['M2 6a2 2 0 012-2h5l2 2h5a2 2 0 012 2v6a2 2 0 01-2 2H4a2 2 0 01-2-2V6z', 'M8 11h4'])
			}),
			_Utils_Tuple2(
			'gift',
			{
				a: _List_fromArray(
					['M12 8v13m0-13V6a2 2 0 112 2h-2zm0 0V5.5A2.5 2.5 0 109.5 8H12zm-7 4h14M5 12a2 2 0 110-4h14a2 2 0 110 4M5 12v7a2 2 0 002 2h10a2 2 0 002-2v-7']),
				b: _List_fromArray(
					['M5 5a3 3 0 015-2.236A3 3 0 0114.83 6H16a2 2 0 110 4h-5V9a1 1 0 10-2 0v1H4a2 2 0 110-4h1.17C5.06 5.687 5 5.35 5 5zm4 1V5a1 1 0 10-1 1h1zm3 0a1 1 0 10-1-1v1h1z', 'M9 11H3v5a2 2 0 002 2h4v-7zM11 18h4a2 2 0 002-2v-5h-6v7z'])
			}),
			_Utils_Tuple2(
			'globe',
			{
				a: _List_fromArray(
					['M3.055 11H5a2 2 0 012 2v1a2 2 0 002 2 2 2 0 012 2v2.945M8 3.935V5.5A2.5 2.5 0 0010.5 8h.5a2 2 0 012 2 2 2 0 104 0 2 2 0 012-2h1.064M15 20.488V18a2 2 0 012-2h3.064M21 12a9 9 0 11-18 0 9 9 0 0118 0z']),
				b: _List_fromArray(
					['M10 18a8 8 0 100-16 8 8 0 000 16zM4.332 8.027a6.012 6.012 0 011.912-2.706C6.512 5.73 6.974 6 7.5 6A1.5 1.5 0 019 7.5V8a2 2 0 004 0 2 2 0 011.523-1.943A5.977 5.977 0 0116 10c0 .34-.028.675-.083 1H15a2 2 0 00-2 2v2.197A5.973 5.973 0 0110 16v-2a2 2 0 00-2-2 2 2 0 01-2-2 2 2 0 00-1.668-1.973z'])
			}),
			_Utils_Tuple2(
			'globe-alt',
			{
				a: _List_fromArray(
					['M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9a9 9 0 01-9-9m9 9c1.657 0 3-4.03 3-9s-1.343-9-3-9m0 18c-1.657 0-3-4.03-3-9s1.343-9 3-9m-9 9a9 9 0 019-9']),
				b: _List_fromArray(
					['M4.083 9h1.946c.089-1.546.383-2.97.837-4.118A6.004 6.004 0 004.083 9zM10 2a8 8 0 100 16 8 8 0 000-16zm0 2c-.076 0-.232.032-.465.262-.238.234-.497.623-.737 1.182-.389.907-.673 2.142-.766 3.556h3.936c-.093-1.414-.377-2.649-.766-3.556-.24-.56-.5-.948-.737-1.182C10.232 4.032 10.076 4 10 4zm3.971 5c-.089-1.546-.383-2.97-.837-4.118A6.004 6.004 0 0115.917 9h-1.946zm-2.003 2H8.032c.093 1.414.377 2.649.766 3.556.24.56.5.948.737 1.182.233.23.389.262.465.262.076 0 .232-.032.465-.262.238-.234.498-.623.737-1.182.389-.907.673-2.142.766-3.556zm1.166 4.118c.454-1.147.748-2.572.837-4.118h1.946a6.004 6.004 0 01-2.783 4.118zm-6.268 0C6.412 13.97 6.118 12.546 6.03 11H4.083a6.004 6.004 0 002.783 4.118z'])
			}),
			_Utils_Tuple2(
			'hand',
			{
				a: _List_fromArray(
					['M7 11.5V14m0-2.5v-6a1.5 1.5 0 113 0m-3 6a1.5 1.5 0 00-3 0v2a7.5 7.5 0 0015 0v-5a1.5 1.5 0 00-3 0m-6-3V11m0-5.5v-1a1.5 1.5 0 013 0v1m0 0V11m0-5.5a1.5 1.5 0 013 0v3m0 0V11']),
				b: _List_fromArray(
					['M9 3a1 1 0 012 0v5.5a.5.5 0 001 0V4a1 1 0 112 0v4.5a.5.5 0 001 0V6a1 1 0 112 0v5a7 7 0 11-14 0V9a1 1 0 012 0v2.5a.5.5 0 001 0V4a1 1 0 012 0v4.5a.5.5 0 001 0V3z'])
			}),
			_Utils_Tuple2(
			'hashtag',
			{
				a: _List_fromArray(
					['M7 20l4-16m2 16l4-16M6 9h14M4 15h14']),
				b: _List_fromArray(
					['M9.243 3.03a1 1 0 01.727 1.213L9.53 6h2.94l.56-2.243a1 1 0 111.94.486L14.53 6H17a1 1 0 110 2h-2.97l-1 4H15a1 1 0 110 2h-2.47l-.56 2.242a1 1 0 11-1.94-.485L10.47 14H7.53l-.56 2.242a1 1 0 11-1.94-.485L5.47 14H3a1 1 0 110-2h2.97l1-4H5a1 1 0 110-2h2.47l.56-2.243a1 1 0 011.213-.727zM9.03 8l-1 4h2.938l1-4H9.031z'])
			}),
			_Utils_Tuple2(
			'heart',
			{
				a: _List_fromArray(
					['M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z']),
				b: _List_fromArray(
					['M3.172 5.172a4 4 0 015.656 0L10 6.343l1.172-1.171a4 4 0 115.656 5.656L10 17.657l-6.828-6.829a4 4 0 010-5.656z'])
			}),
			_Utils_Tuple2(
			'home',
			{
				a: _List_fromArray(
					['M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6']),
				b: _List_fromArray(
					['M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z'])
			}),
			_Utils_Tuple2(
			'identification',
			{
				a: _List_fromArray(
					['M10 6H5a2 2 0 00-2 2v9a2 2 0 002 2h14a2 2 0 002-2V8a2 2 0 00-2-2h-5m-4 0V5a2 2 0 114 0v1m-4 0a2 2 0 104 0m-5 8a2 2 0 100-4 2 2 0 000 4zm0 0c1.306 0 2.417.835 2.83 2M9 14a3.001 3.001 0 00-2.83 2M15 11h3m-3 4h2']),
				b: _List_fromArray(
					['M10 2a1 1 0 00-1 1v1a1 1 0 002 0V3a1 1 0 00-1-1zM4 4h3a3 3 0 006 0h3a2 2 0 012 2v9a2 2 0 01-2 2H4a2 2 0 01-2-2V6a2 2 0 012-2zm2.5 7a1.5 1.5 0 100-3 1.5 1.5 0 000 3zm2.45 4a2.5 2.5 0 10-4.9 0h4.9zM12 9a1 1 0 100 2h3a1 1 0 100-2h-3zm-1 4a1 1 0 011-1h2a1 1 0 110 2h-2a1 1 0 01-1-1z'])
			}),
			_Utils_Tuple2(
			'inbox',
			{
				a: _List_fromArray(
					['M20 13V6a2 2 0 00-2-2H6a2 2 0 00-2 2v7m16 0v5a2 2 0 01-2 2H6a2 2 0 01-2-2v-5m16 0h-2.586a1 1 0 00-.707.293l-2.414 2.414a1 1 0 01-.707.293h-3.172a1 1 0 01-.707-.293l-2.414-2.414A1 1 0 006.586 13H4']),
				b: _List_fromArray(
					['M5 3a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2V5a2 2 0 00-2-2H5zm0 2h10v7h-2l-1 2H8l-1-2H5V5z'])
			}),
			_Utils_Tuple2(
			'inbox-in',
			{
				a: _List_fromArray(
					['M8 4H6a2 2 0 00-2 2v12a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-2m-4-1v8m0 0l3-3m-3 3L9 8m-5 5h2.586a1 1 0 01.707.293l2.414 2.414a1 1 0 00.707.293h3.172a1 1 0 00.707-.293l2.414-2.414a1 1 0 01.707-.293H20']),
				b: _List_fromArray(
					['M8.707 7.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l2-2a1 1 0 00-1.414-1.414L11 7.586V3a1 1 0 10-2 0v4.586l-.293-.293z', 'M3 5a2 2 0 012-2h1a1 1 0 010 2H5v7h2l1 2h4l1-2h2V5h-1a1 1 0 110-2h1a2 2 0 012 2v10a2 2 0 01-2 2H5a2 2 0 01-2-2V5z'])
			}),
			_Utils_Tuple2(
			'information-circle',
			{
				a: _List_fromArray(
					['M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z']),
				b: _List_fromArray(
					['M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z'])
			}),
			_Utils_Tuple2(
			'key',
			{
				a: _List_fromArray(
					['M15 7a2 2 0 012 2m4 0a6 6 0 01-7.743 5.743L11 17H9v2H7v2H4a1 1 0 01-1-1v-2.586a1 1 0 01.293-.707l5.964-5.964A6 6 0 1121 9z']),
				b: _List_fromArray(
					['M18 8a6 6 0 01-7.743 5.743L10 14l-1 1-1 1H6v2H2v-4l4.257-4.257A6 6 0 1118 8zm-6-4a1 1 0 100 2 2 2 0 012 2 1 1 0 102 0 4 4 0 00-4-4z'])
			}),
			_Utils_Tuple2(
			'library',
			{
				a: _List_fromArray(
					['M8 14v3m4-3v3m4-3v3M3 21h18M3 10h18M3 7l9-4 9 4M4 10h16v11H4V10z']),
				b: _List_fromArray(
					['M10.496 2.132a1 1 0 00-.992 0l-7 4A1 1 0 003 8v7a1 1 0 100 2h14a1 1 0 100-2V8a1 1 0 00.496-1.868l-7-4zM6 9a1 1 0 00-1 1v3a1 1 0 102 0v-3a1 1 0 00-1-1zm3 1a1 1 0 012 0v3a1 1 0 11-2 0v-3zm5-1a1 1 0 00-1 1v3a1 1 0 102 0v-3a1 1 0 00-1-1z'])
			}),
			_Utils_Tuple2(
			'light-bulb',
			{
				a: _List_fromArray(
					['M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z']),
				b: _List_fromArray(
					['M11 3a1 1 0 10-2 0v1a1 1 0 102 0V3zM15.657 5.757a1 1 0 00-1.414-1.414l-.707.707a1 1 0 001.414 1.414l.707-.707zM18 10a1 1 0 01-1 1h-1a1 1 0 110-2h1a1 1 0 011 1zM5.05 6.464A1 1 0 106.464 5.05l-.707-.707a1 1 0 00-1.414 1.414l.707.707zM5 10a1 1 0 01-1 1H3a1 1 0 110-2h1a1 1 0 011 1zM8 16v-1h4v1a2 2 0 11-4 0zM12 14c.015-.34.208-.646.477-.859a4 4 0 10-4.954 0c.27.213.462.519.476.859h4.002z'])
			}),
			_Utils_Tuple2(
			'lightning-bolt',
			{
				a: _List_fromArray(
					['M13 10V3L4 14h7v7l9-11h-7z']),
				b: _List_fromArray(
					['M11.3 1.046A1 1 0 0112 2v5h4a1 1 0 01.82 1.573l-7 10A1 1 0 018 18v-5H4a1 1 0 01-.82-1.573l7-10a1 1 0 011.12-.38z'])
			}),
			_Utils_Tuple2(
			'link',
			{
				a: _List_fromArray(
					['M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.101m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1']),
				b: _List_fromArray(
					['M12.586 4.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2 2 0 11-2.828-2.828l3-3z'])
			}),
			_Utils_Tuple2(
			'location-marker',
			{
				a: _List_fromArray(
					['M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z', 'M15 11a3 3 0 11-6 0 3 3 0 016 0z']),
				b: _List_fromArray(
					['M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z'])
			}),
			_Utils_Tuple2(
			'lock-closed',
			{
				a: _List_fromArray(
					['M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z']),
				b: _List_fromArray(
					['M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z'])
			}),
			_Utils_Tuple2(
			'lock-open',
			{
				a: _List_fromArray(
					['M8 11V7a4 4 0 118 0m-4 8v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2z']),
				b: _List_fromArray(
					['M10 2a5 5 0 00-5 5v2a2 2 0 00-2 2v5a2 2 0 002 2h10a2 2 0 002-2v-5a2 2 0 00-2-2H7V7a3 3 0 015.905-.75 1 1 0 001.937-.5A5.002 5.002 0 0010 2z'])
			}),
			_Utils_Tuple2(
			'login',
			{
				a: _List_fromArray(
					['M11 16l-4-4m0 0l4-4m-4 4h14m-5 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h7a3 3 0 013 3v1']),
				b: _List_fromArray(
					['M3 3a1 1 0 011 1v12a1 1 0 11-2 0V4a1 1 0 011-1zm7.707 3.293a1 1 0 010 1.414L9.414 9H17a1 1 0 110 2H9.414l1.293 1.293a1 1 0 01-1.414 1.414l-3-3a1 1 0 010-1.414l3-3a1 1 0 011.414 0z'])
			}),
			_Utils_Tuple2(
			'logout',
			{
				a: _List_fromArray(
					['M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1']),
				b: _List_fromArray(
					['M3 3a1 1 0 00-1 1v12a1 1 0 102 0V4a1 1 0 00-1-1zm10.293 9.293a1 1 0 001.414 1.414l3-3a1 1 0 000-1.414l-3-3a1 1 0 10-1.414 1.414L14.586 9H7a1 1 0 100 2h7.586l-1.293 1.293z'])
			}),
			_Utils_Tuple2(
			'mail',
			{
				a: _List_fromArray(
					['M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z']),
				b: _List_fromArray(
					['M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z', 'M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z'])
			}),
			_Utils_Tuple2(
			'mail-open',
			{
				a: _List_fromArray(
					['M3 19v-8.93a2 2 0 01.89-1.664l7-4.666a2 2 0 012.22 0l7 4.666A2 2 0 0121 10.07V19M3 19a2 2 0 002 2h14a2 2 0 002-2M3 19l6.75-4.5M21 19l-6.75-4.5M3 10l6.75 4.5M21 10l-6.75 4.5m0 0l-1.14.76a2 2 0 01-2.22 0l-1.14-.76']),
				b: _List_fromArray(
					['M2.94 6.412A2 2 0 002 8.108V16a2 2 0 002 2h12a2 2 0 002-2V8.108a2 2 0 00-.94-1.696l-6-3.75a2 2 0 00-2.12 0l-6 3.75zm2.615 2.423a1 1 0 10-1.11 1.664l5 3.333a1 1 0 001.11 0l5-3.333a1 1 0 00-1.11-1.664L10 11.798 5.555 8.835z'])
			}),
			_Utils_Tuple2(
			'map',
			{
				a: _List_fromArray(
					['M9 20l-5.447-2.724A1 1 0 013 16.382V5.618a1 1 0 011.447-.894L9 7m0 13l6-3m-6 3V7m6 10l4.553 2.276A1 1 0 0021 18.382V7.618a1 1 0 00-.553-.894L15 4m0 13V4m0 0L9 7']),
				b: _List_fromArray(
					['M12 1.586l-4 4v12.828l4-4V1.586zM3.707 3.293A1 1 0 002 4v10a1 1 0 00.293.707L6 18.414V5.586L3.707 3.293zM17.707 5.293L14 1.586v12.828l2.293 2.293A1 1 0 0018 16V6a1 1 0 00-.293-.707z'])
			}),
			_Utils_Tuple2(
			'menu',
			{
				a: _List_fromArray(
					['M4 6h16M4 12h16M4 18h16']),
				b: _List_fromArray(
					['M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 15a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z'])
			}),
			_Utils_Tuple2(
			'menu-alt-1',
			{
				a: _List_fromArray(
					['M4 6h16M4 12h8m-8 6h16']),
				b: _List_fromArray(
					['M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h6a1 1 0 110 2H4a1 1 0 01-1-1zM3 15a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z'])
			}),
			_Utils_Tuple2(
			'menu-alt-2',
			{
				a: _List_fromArray(
					['M4 6h16M4 12h16M4 18h7']),
				b: _List_fromArray(
					['M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 15a1 1 0 011-1h6a1 1 0 110 2H4a1 1 0 01-1-1z'])
			}),
			_Utils_Tuple2(
			'menu-alt-3',
			{
				a: _List_fromArray(
					['M4 6h16M4 12h16m-7 6h7']),
				b: _List_fromArray(
					['M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM9 15a1 1 0 011-1h6a1 1 0 110 2h-6a1 1 0 01-1-1z'])
			}),
			_Utils_Tuple2(
			'menu-alt-4',
			{
				a: _List_fromArray(
					['M4 8h16M4 16h16']),
				b: _List_fromArray(
					['M3 7a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 13a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z'])
			}),
			_Utils_Tuple2(
			'microphone',
			{
				a: _List_fromArray(
					['M19 11a7 7 0 01-7 7m0 0a7 7 0 01-7-7m7 7v4m0 0H8m4 0h4m-4-8a3 3 0 01-3-3V5a3 3 0 116 0v6a3 3 0 01-3 3z']),
				b: _List_fromArray(
					['M7 4a3 3 0 016 0v4a3 3 0 11-6 0V4zm4 10.93A7.001 7.001 0 0017 8a1 1 0 10-2 0A5 5 0 015 8a1 1 0 00-2 0 7.001 7.001 0 006 6.93V17H6a1 1 0 100 2h8a1 1 0 100-2h-3v-2.07z'])
			}),
			_Utils_Tuple2(
			'minus',
			{
				a: _List_fromArray(
					['M20 12H4']),
				b: _List_fromArray(
					['M3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z'])
			}),
			_Utils_Tuple2(
			'minus-circle',
			{
				a: _List_fromArray(
					['M15 12H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z']),
				b: _List_fromArray(
					['M10 18a8 8 0 100-16 8 8 0 000 16zM7 9a1 1 0 000 2h6a1 1 0 100-2H7z'])
			}),
			_Utils_Tuple2(
			'minus-sm',
			{
				a: _List_fromArray(
					['M18 12H6']),
				b: _List_fromArray(
					['M5 10a1 1 0 011-1h8a1 1 0 110 2H6a1 1 0 01-1-1z'])
			}),
			_Utils_Tuple2(
			'moon',
			{
				a: _List_fromArray(
					['M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z']),
				b: _List_fromArray(
					['M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z'])
			}),
			_Utils_Tuple2(
			'music-note',
			{
				a: _List_fromArray(
					['M9 19V6l12-3v13M9 19c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zm12-3c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zM9 10l12-3']),
				b: _List_fromArray(
					['M18 3a1 1 0 00-1.196-.98l-10 2A1 1 0 006 5v9.114A4.369 4.369 0 005 14c-1.657 0-3 .895-3 2s1.343 2 3 2 3-.895 3-2V7.82l8-1.6v5.894A4.37 4.37 0 0015 12c-1.657 0-3 .895-3 2s1.343 2 3 2 3-.895 3-2V3z'])
			}),
			_Utils_Tuple2(
			'newspaper',
			{
				a: _List_fromArray(
					['M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z']),
				b: _List_fromArray(
					['M2 5a2 2 0 012-2h8a2 2 0 012 2v10a2 2 0 002 2H4a2 2 0 01-2-2V5zm3 1h6v4H5V6zm6 6H5v2h6v-2z', 'M15 7h1a2 2 0 012 2v5.5a1.5 1.5 0 01-3 0V7z'])
			}),
			_Utils_Tuple2(
			'office-building',
			{
				a: _List_fromArray(
					['M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4']),
				b: _List_fromArray(
					['M4 4a2 2 0 012-2h8a2 2 0 012 2v12a1 1 0 110 2h-3a1 1 0 01-1-1v-2a1 1 0 00-1-1H9a1 1 0 00-1 1v2a1 1 0 01-1 1H4a1 1 0 110-2V4zm3 1h2v2H7V5zm2 4H7v2h2V9zm2-4h2v2h-2V5zm2 4h-2v2h2V9z'])
			}),
			_Utils_Tuple2(
			'paper-airplane',
			{
				a: _List_fromArray(
					['M12 19l9 2-9-18-9 18 9-2zm0 0v-8']),
				b: _List_fromArray(
					['M10.894 2.553a1 1 0 00-1.788 0l-7 14a1 1 0 001.169 1.409l5-1.429A1 1 0 009 15.571V11a1 1 0 112 0v4.571a1 1 0 00.725.962l5 1.428a1 1 0 001.17-1.408l-7-14z'])
			}),
			_Utils_Tuple2(
			'paper-clip',
			{
				a: _List_fromArray(
					['M15.172 7l-6.586 6.586a2 2 0 102.828 2.828l6.414-6.586a4 4 0 00-5.656-5.656l-6.415 6.585a6 6 0 108.486 8.486L20.5 13']),
				b: _List_fromArray(
					['M8 4a3 3 0 00-3 3v4a5 5 0 0010 0V7a1 1 0 112 0v4a7 7 0 11-14 0V7a5 5 0 0110 0v4a3 3 0 11-6 0V7a1 1 0 012 0v4a1 1 0 102 0V7a3 3 0 00-3-3z'])
			}),
			_Utils_Tuple2(
			'pause',
			{
				a: _List_fromArray(
					['M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z']),
				b: _List_fromArray(
					['M18 10a8 8 0 11-16 0 8 8 0 0116 0zM7 8a1 1 0 012 0v4a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v4a1 1 0 102 0V8a1 1 0 00-1-1z'])
			}),
			_Utils_Tuple2(
			'pencil',
			{
				a: _List_fromArray(
					['M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z']),
				b: _List_fromArray(
					['M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z'])
			}),
			_Utils_Tuple2(
			'pencil-alt',
			{
				a: _List_fromArray(
					['M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z']),
				b: _List_fromArray(
					['M17.414 2.586a2 2 0 00-2.828 0L7 10.172V13h2.828l7.586-7.586a2 2 0 000-2.828z', 'M2 6a2 2 0 012-2h4a1 1 0 010 2H4v10h10v-4a1 1 0 112 0v4a2 2 0 01-2 2H4a2 2 0 01-2-2V6z'])
			}),
			_Utils_Tuple2(
			'phone',
			{
				a: _List_fromArray(
					['M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z']),
				b: _List_fromArray(
					['M2 3a1 1 0 011-1h2.153a1 1 0 01.986.836l.74 4.435a1 1 0 01-.54 1.06l-1.548.773a11.037 11.037 0 006.105 6.105l.774-1.548a1 1 0 011.059-.54l4.435.74a1 1 0 01.836.986V17a1 1 0 01-1 1h-2C7.82 18 2 12.18 2 5V3z'])
			}),
			_Utils_Tuple2(
			'phone-incoming',
			{
				a: _List_fromArray(
					['M21 3l-6 6m0 0V4m0 5h5M5 3a2 2 0 00-2 2v1c0 8.284 6.716 15 15 15h1a2 2 0 002-2v-3.28a1 1 0 00-.684-.948l-4.493-1.498a1 1 0 00-1.21.502l-1.13 2.257a11.042 11.042 0 01-5.516-5.517l2.257-1.128a1 1 0 00.502-1.21L9.228 3.683A1 1 0 008.279 3H5z']),
				b: _List_fromArray(
					['M14.414 7l3.293-3.293a1 1 0 00-1.414-1.414L13 5.586V4a1 1 0 10-2 0v4.003a.996.996 0 00.617.921A.997.997 0 0012 9h4a1 1 0 100-2h-1.586z', 'M2 3a1 1 0 011-1h2.153a1 1 0 01.986.836l.74 4.435a1 1 0 01-.54 1.06l-1.548.773a11.037 11.037 0 006.105 6.105l.774-1.548a1 1 0 011.059-.54l4.435.74a1 1 0 01.836.986V17a1 1 0 01-1 1h-2C7.82 18 2 12.18 2 5V3z'])
			}),
			_Utils_Tuple2(
			'phone-missed-call',
			{
				a: _List_fromArray(
					['M16 8l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2M5 3a2 2 0 00-2 2v1c0 8.284 6.716 15 15 15h1a2 2 0 002-2v-3.28a1 1 0 00-.684-.948l-4.493-1.498a1 1 0 00-1.21.502l-1.13 2.257a11.042 11.042 0 01-5.516-5.517l2.257-1.128a1 1 0 00.502-1.21L9.228 3.683A1 1 0 008.279 3H5z']),
				b: _List_fromArray(
					['M2 3a1 1 0 011-1h2.153a1 1 0 01.986.836l.74 4.435a1 1 0 01-.54 1.06l-1.548.773a11.037 11.037 0 006.105 6.105l.774-1.548a1 1 0 011.059-.54l4.435.74a1 1 0 01.836.986V17a1 1 0 01-1 1h-2C7.82 18 2 12.18 2 5V3z', 'M16.707 3.293a1 1 0 010 1.414L15.414 6l1.293 1.293a1 1 0 01-1.414 1.414L14 7.414l-1.293 1.293a1 1 0 11-1.414-1.414L12.586 6l-1.293-1.293a1 1 0 011.414-1.414L14 4.586l1.293-1.293a1 1 0 011.414 0z'])
			}),
			_Utils_Tuple2(
			'phone-outgoing',
			{
				a: _List_fromArray(
					['M16 3h5m0 0v5m0-5l-6 6M5 3a2 2 0 00-2 2v1c0 8.284 6.716 15 15 15h1a2 2 0 002-2v-3.28a1 1 0 00-.684-.948l-4.493-1.498a1 1 0 00-1.21.502l-1.13 2.257a11.042 11.042 0 01-5.516-5.517l2.257-1.128a1 1 0 00.502-1.21L9.228 3.683A1 1 0 008.279 3H5z']),
				b: _List_fromArray(
					['M17.924 2.617a.997.997 0 00-.215-.322l-.004-.004A.997.997 0 0017 2h-4a1 1 0 100 2h1.586l-3.293 3.293a1 1 0 001.414 1.414L16 5.414V7a1 1 0 102 0V3a.997.997 0 00-.076-.383z', 'M2 3a1 1 0 011-1h2.153a1 1 0 01.986.836l.74 4.435a1 1 0 01-.54 1.06l-1.548.773a11.037 11.037 0 006.105 6.105l.774-1.548a1 1 0 011.059-.54l4.435.74a1 1 0 01.836.986V17a1 1 0 01-1 1h-2C7.82 18 2 12.18 2 5V3z'])
			}),
			_Utils_Tuple2(
			'photograph',
			{
				a: _List_fromArray(
					['M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z']),
				b: _List_fromArray(
					['M4 3a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V5a2 2 0 00-2-2H4zm12 12H4l4-8 3 6 2-4 3 6z'])
			}),
			_Utils_Tuple2(
			'play',
			{
				a: _List_fromArray(
					['M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z', 'M21 12a9 9 0 11-18 0 9 9 0 0118 0z']),
				b: _List_fromArray(
					['M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z'])
			}),
			_Utils_Tuple2(
			'plus',
			{
				a: _List_fromArray(
					['M12 4v16m8-8H4']),
				b: _List_fromArray(
					['M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z'])
			}),
			_Utils_Tuple2(
			'plus-circle',
			{
				a: _List_fromArray(
					['M12 9v3m0 0v3m0-3h3m-3 0H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z']),
				b: _List_fromArray(
					['M10 18a8 8 0 100-16 8 8 0 000 16zm1-11a1 1 0 10-2 0v2H7a1 1 0 100 2h2v2a1 1 0 102 0v-2h2a1 1 0 100-2h-2V7z'])
			}),
			_Utils_Tuple2(
			'plus-sm',
			{
				a: _List_fromArray(
					['M12 6v6m0 0v6m0-6h6m-6 0H6']),
				b: _List_fromArray(
					['M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z'])
			}),
			_Utils_Tuple2(
			'presentation-chart-bar',
			{
				a: _List_fromArray(
					['M8 13v-1m4 1v-3m4 3V8M8 21l4-4 4 4M3 4h18M4 4h16v12a1 1 0 01-1 1H5a1 1 0 01-1-1V4z']),
				b: _List_fromArray(
					['M3 3a1 1 0 000 2v8a2 2 0 002 2h2.586l-1.293 1.293a1 1 0 101.414 1.414L10 15.414l2.293 2.293a1 1 0 001.414-1.414L12.414 15H15a2 2 0 002-2V5a1 1 0 100-2H3zm11 4a1 1 0 10-2 0v4a1 1 0 102 0V7zm-3 1a1 1 0 10-2 0v3a1 1 0 102 0V8zM8 9a1 1 0 00-2 0v2a1 1 0 102 0V9z'])
			}),
			_Utils_Tuple2(
			'presentation-chart-line',
			{
				a: _List_fromArray(
					['M7 12l3-3 3 3 4-4M8 21l4-4 4 4M3 4h18M4 4h16v12a1 1 0 01-1 1H5a1 1 0 01-1-1V4z']),
				b: _List_fromArray(
					['M3 3a1 1 0 000 2v8a2 2 0 002 2h2.586l-1.293 1.293a1 1 0 101.414 1.414L10 15.414l2.293 2.293a1 1 0 001.414-1.414L12.414 15H15a2 2 0 002-2V5a1 1 0 100-2H3zm11.707 4.707a1 1 0 00-1.414-1.414L10 9.586 8.707 8.293a1 1 0 00-1.414 0l-2 2a1 1 0 101.414 1.414L8 10.414l1.293 1.293a1 1 0 001.414 0l4-4z'])
			}),
			_Utils_Tuple2(
			'printer',
			{
				a: _List_fromArray(
					['M17 17h2a2 2 0 002-2v-4a2 2 0 00-2-2H5a2 2 0 00-2 2v4a2 2 0 002 2h2m2 4h6a2 2 0 002-2v-4a2 2 0 00-2-2H9a2 2 0 00-2 2v4a2 2 0 002 2zm8-12V5a2 2 0 00-2-2H9a2 2 0 00-2 2v4h10z']),
				b: _List_fromArray(
					['M5 4v3H4a2 2 0 00-2 2v3a2 2 0 002 2h1v2a2 2 0 002 2h6a2 2 0 002-2v-2h1a2 2 0 002-2V9a2 2 0 00-2-2h-1V4a2 2 0 00-2-2H7a2 2 0 00-2 2zm8 0H7v3h6V4zm0 8H7v4h6v-4z'])
			}),
			_Utils_Tuple2(
			'puzzle',
			{
				a: _List_fromArray(
					['M11 4a2 2 0 114 0v1a1 1 0 001 1h3a1 1 0 011 1v3a1 1 0 01-1 1h-1a2 2 0 100 4h1a1 1 0 011 1v3a1 1 0 01-1 1h-3a1 1 0 01-1-1v-1a2 2 0 10-4 0v1a1 1 0 01-1 1H7a1 1 0 01-1-1v-3a1 1 0 00-1-1H4a2 2 0 110-4h1a1 1 0 001-1V7a1 1 0 011-1h3a1 1 0 001-1V4z']),
				b: _List_fromArray(
					['M10 3.5a1.5 1.5 0 013 0V4a1 1 0 001 1h3a1 1 0 011 1v3a1 1 0 01-1 1h-.5a1.5 1.5 0 000 3h.5a1 1 0 011 1v3a1 1 0 01-1 1h-3a1 1 0 01-1-1v-.5a1.5 1.5 0 00-3 0v.5a1 1 0 01-1 1H6a1 1 0 01-1-1v-3a1 1 0 00-1-1h-.5a1.5 1.5 0 010-3H4a1 1 0 001-1V6a1 1 0 011-1h3a1 1 0 001-1v-.5z'])
			}),
			_Utils_Tuple2(
			'qrcode',
			{
				a: _List_fromArray(
					['M12 4v1m6 11h2m-6 0h-2v4m0-11v3m0 0h.01M12 12h4.01M16 20h4M4 12h4m12 0h.01M5 8h2a1 1 0 001-1V5a1 1 0 00-1-1H5a1 1 0 00-1 1v2a1 1 0 001 1zm12 0h2a1 1 0 001-1V5a1 1 0 00-1-1h-2a1 1 0 00-1 1v2a1 1 0 001 1zM5 20h2a1 1 0 001-1v-2a1 1 0 00-1-1H5a1 1 0 00-1 1v2a1 1 0 001 1z']),
				b: _List_fromArray(
					['M3 4a1 1 0 011-1h3a1 1 0 011 1v3a1 1 0 01-1 1H4a1 1 0 01-1-1V4zm2 2V5h1v1H5zM3 13a1 1 0 011-1h3a1 1 0 011 1v3a1 1 0 01-1 1H4a1 1 0 01-1-1v-3zm2 2v-1h1v1H5zM13 3a1 1 0 00-1 1v3a1 1 0 001 1h3a1 1 0 001-1V4a1 1 0 00-1-1h-3zm1 2v1h1V5h-1z', 'M11 4a1 1 0 10-2 0v1a1 1 0 002 0V4zM10 7a1 1 0 011 1v1h2a1 1 0 110 2h-3a1 1 0 01-1-1V8a1 1 0 011-1zM16 9a1 1 0 100 2 1 1 0 000-2zM9 13a1 1 0 011-1h1a1 1 0 110 2v2a1 1 0 11-2 0v-3zM7 11a1 1 0 100-2H4a1 1 0 100 2h3zM17 13a1 1 0 01-1 1h-2a1 1 0 110-2h2a1 1 0 011 1zM16 17a1 1 0 100-2h-3a1 1 0 100 2h3z'])
			}),
			_Utils_Tuple2(
			'question-mark-circle',
			{
				a: _List_fromArray(
					['M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z']),
				b: _List_fromArray(
					['M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-3a1 1 0 00-.867.5 1 1 0 11-1.731-1A3 3 0 0113 8a3.001 3.001 0 01-2 2.83V11a1 1 0 11-2 0v-1a1 1 0 011-1 1 1 0 100-2zm0 8a1 1 0 100-2 1 1 0 000 2z'])
			}),
			_Utils_Tuple2(
			'receipt-refund',
			{
				a: _List_fromArray(
					['M16 15v-1a4 4 0 00-4-4H8m0 0l3 3m-3-3l3-3m9 14V5a2 2 0 00-2-2H6a2 2 0 00-2 2v16l4-2 4 2 4-2 4 2z']),
				b: _List_fromArray(
					['M5 2a2 2 0 00-2 2v14l3.5-2 3.5 2 3.5-2 3.5 2V4a2 2 0 00-2-2H5zm4.707 3.707a1 1 0 00-1.414-1.414l-3 3a1 1 0 000 1.414l3 3a1 1 0 001.414-1.414L8.414 9H10a3 3 0 013 3v1a1 1 0 102 0v-1a5 5 0 00-5-5H8.414l1.293-1.293z'])
			}),
			_Utils_Tuple2(
			'receipt-tax',
			{
				a: _List_fromArray(
					['M9 14l6-6m-5.5.5h.01m4.99 5h.01M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16l3.5-2 3.5 2 3.5-2 3.5 2zM10 8.5a.5.5 0 11-1 0 .5.5 0 011 0zm5 5a.5.5 0 11-1 0 .5.5 0 011 0z']),
				b: _List_fromArray(
					['M5 2a2 2 0 00-2 2v14l3.5-2 3.5 2 3.5-2 3.5 2V4a2 2 0 00-2-2H5zm2.5 3a1.5 1.5 0 100 3 1.5 1.5 0 000-3zm6.207.293a1 1 0 00-1.414 0l-6 6a1 1 0 101.414 1.414l6-6a1 1 0 000-1.414zM12.5 10a1.5 1.5 0 100 3 1.5 1.5 0 000-3z'])
			}),
			_Utils_Tuple2(
			'refresh',
			{
				a: _List_fromArray(
					['M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15']),
				b: _List_fromArray(
					['M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0v-2.101a7.002 7.002 0 01-11.601-2.566 1 1 0 01.61-1.276z'])
			}),
			_Utils_Tuple2(
			'reply',
			{
				a: _List_fromArray(
					['M3 10h10a8 8 0 018 8v2M3 10l6 6m-6-6l6-6']),
				b: _List_fromArray(
					['M7.707 3.293a1 1 0 010 1.414L5.414 7H11a7 7 0 017 7v2a1 1 0 11-2 0v-2a5 5 0 00-5-5H5.414l2.293 2.293a1 1 0 11-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z'])
			}),
			_Utils_Tuple2(
			'rewind',
			{
				a: _List_fromArray(
					['M12.066 11.2a1 1 0 000 1.6l5.334 4A1 1 0 0019 16V8a1 1 0 00-1.6-.8l-5.333 4zM4.066 11.2a1 1 0 000 1.6l5.334 4A1 1 0 0011 16V8a1 1 0 00-1.6-.8l-5.334 4z']),
				b: _List_fromArray(
					['M8.445 14.832A1 1 0 0010 14v-2.798l5.445 3.63A1 1 0 0017 14V6a1 1 0 00-1.555-.832L10 8.798V6a1 1 0 00-1.555-.832l-6 4a1 1 0 000 1.664l6 4z'])
			}),
			_Utils_Tuple2(
			'rss',
			{
				a: _List_fromArray(
					['M6 5c7.18 0 13 5.82 13 13M6 11a7 7 0 017 7m-6 0a1 1 0 11-2 0 1 1 0 012 0z']),
				b: _List_fromArray(
					['M5 3a1 1 0 000 2c5.523 0 10 4.477 10 10a1 1 0 102 0C17 8.373 11.627 3 5 3z', 'M4 9a1 1 0 011-1 7 7 0 017 7 1 1 0 11-2 0 5 5 0 00-5-5 1 1 0 01-1-1zM3 15a2 2 0 114 0 2 2 0 01-4 0z'])
			}),
			_Utils_Tuple2(
			'save',
			{
				a: _List_fromArray(
					['M8 7H5a2 2 0 00-2 2v9a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-3m-1 4l-3 3m0 0l-3-3m3 3V4']),
				b: _List_fromArray(
					['M7.707 10.293a1 1 0 10-1.414 1.414l3 3a1 1 0 001.414 0l3-3a1 1 0 00-1.414-1.414L11 11.586V6h5a2 2 0 012 2v7a2 2 0 01-2 2H4a2 2 0 01-2-2V8a2 2 0 012-2h5v5.586l-1.293-1.293zM9 4a1 1 0 012 0v2H9V4z'])
			}),
			_Utils_Tuple2(
			'save-as',
			{
				a: _List_fromArray(
					['M17 16v2a2 2 0 01-2 2H5a2 2 0 01-2-2v-7a2 2 0 012-2h2m3-4H9a2 2 0 00-2 2v7a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-1m-1 4l-3 3m0 0l-3-3m3 3V3']),
				b: _List_fromArray(
					['M9.707 7.293a1 1 0 00-1.414 1.414l3 3a1 1 0 001.414 0l3-3a1 1 0 00-1.414-1.414L13 8.586V5h3a2 2 0 012 2v5a2 2 0 01-2 2H8a2 2 0 01-2-2V7a2 2 0 012-2h3v3.586L9.707 7.293zM11 3a1 1 0 112 0v2h-2V3z', 'M4 9a2 2 0 00-2 2v5a2 2 0 002 2h8a2 2 0 002-2H4V9z'])
			}),
			_Utils_Tuple2(
			'scale',
			{
				a: _List_fromArray(
					['M3 6l3 1m0 0l-3 9a5.002 5.002 0 006.001 0M6 7l3 9M6 7l6-2m6 2l3-1m-3 1l-3 9a5.002 5.002 0 006.001 0M18 7l3 9m-3-9l-6-2m0-2v2m0 16V5m0 16H9m3 0h3']),
				b: _List_fromArray(
					['M10 2a1 1 0 011 1v1.323l3.954 1.582 1.599-.8a1 1 0 01.894 1.79l-1.233.616 1.738 5.42a1 1 0 01-.285 1.05A3.989 3.989 0 0115 15a3.989 3.989 0 01-2.667-1.019 1 1 0 01-.285-1.05l1.715-5.349L11 6.477V16h2a1 1 0 110 2H7a1 1 0 110-2h2V6.477L6.237 7.582l1.715 5.349a1 1 0 01-.285 1.05A3.989 3.989 0 015 15a3.989 3.989 0 01-2.667-1.019 1 1 0 01-.285-1.05l1.738-5.42-1.233-.617a1 1 0 01.894-1.788l1.599.799L9 4.323V3a1 1 0 011-1zm-5 8.274l-.818 2.552c.25.112.526.174.818.174.292 0 .569-.062.818-.174L5 10.274zm10 0l-.818 2.552c.25.112.526.174.818.174.292 0 .569-.062.818-.174L15 10.274z'])
			}),
			_Utils_Tuple2(
			'scissors',
			{
				a: _List_fromArray(
					['M14.121 14.121L19 19m-7-7l7-7m-7 7l-2.879 2.879M12 12L9.121 9.121m0 5.758a3 3 0 10-4.243 4.243 3 3 0 004.243-4.243zm0-5.758a3 3 0 10-4.243-4.243 3 3 0 004.243 4.243z']),
				b: _List_fromArray(
					['M5.5 2a3.5 3.5 0 101.665 6.58L8.585 10l-1.42 1.42a3.5 3.5 0 101.414 1.414l8.128-8.127a1 1 0 00-1.414-1.414L10 8.586l-1.42-1.42A3.5 3.5 0 005.5 2zM4 5.5a1.5 1.5 0 113 0 1.5 1.5 0 01-3 0zm0 9a1.5 1.5 0 113 0 1.5 1.5 0 01-3 0z', 'M12.828 11.414a1 1 0 00-1.414 1.414l3.879 3.88a1 1 0 001.414-1.415l-3.879-3.879z'])
			}),
			_Utils_Tuple2(
			'search',
			{
				a: _List_fromArray(
					['M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z']),
				b: _List_fromArray(
					['M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z'])
			}),
			_Utils_Tuple2(
			'search-circle',
			{
				a: _List_fromArray(
					['M8 16l2.879-2.879m0 0a3 3 0 104.243-4.242 3 3 0 00-4.243 4.242zM21 12a9 9 0 11-18 0 9 9 0 0118 0z']),
				b: _List_fromArray(
					['M9 9a2 2 0 114 0 2 2 0 01-4 0z', 'M10 18a8 8 0 100-16 8 8 0 000 16zm1-13a4 4 0 00-3.446 6.032l-2.261 2.26a1 1 0 101.414 1.415l2.261-2.261A4 4 0 1011 5z'])
			}),
			_Utils_Tuple2(
			'selector',
			{
				a: _List_fromArray(
					['M8 9l4-4 4 4m0 6l-4 4-4-4']),
				b: _List_fromArray(
					['M10 3a1 1 0 01.707.293l3 3a1 1 0 01-1.414 1.414L10 5.414 7.707 7.707a1 1 0 01-1.414-1.414l3-3A1 1 0 0110 3zm-3.707 9.293a1 1 0 011.414 0L10 14.586l2.293-2.293a1 1 0 011.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z'])
			}),
			_Utils_Tuple2(
			'server',
			{
				a: _List_fromArray(
					['M5 12h14M5 12a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v4a2 2 0 01-2 2M5 12a2 2 0 00-2 2v4a2 2 0 002 2h14a2 2 0 002-2v-4a2 2 0 00-2-2m-2-4h.01M17 16h.01']),
				b: _List_fromArray(
					['M2 5a2 2 0 012-2h12a2 2 0 012 2v2a2 2 0 01-2 2H4a2 2 0 01-2-2V5zm14 1a1 1 0 11-2 0 1 1 0 012 0zM2 13a2 2 0 012-2h12a2 2 0 012 2v2a2 2 0 01-2 2H4a2 2 0 01-2-2v-2zm14 1a1 1 0 11-2 0 1 1 0 012 0z'])
			}),
			_Utils_Tuple2(
			'share',
			{
				a: _List_fromArray(
					['M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.368 2.684 3 3 0 00-5.368-2.684z']),
				b: _List_fromArray(
					['M15 8a3 3 0 10-2.977-2.63l-4.94 2.47a3 3 0 100 4.319l4.94 2.47a3 3 0 10.895-1.789l-4.94-2.47a3.027 3.027 0 000-.74l4.94-2.47C13.456 7.68 14.19 8 15 8z'])
			}),
			_Utils_Tuple2(
			'shield-check',
			{
				a: _List_fromArray(
					['M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z']),
				b: _List_fromArray(
					['M2.166 4.999A11.954 11.954 0 0010 1.944 11.954 11.954 0 0017.834 5c.11.65.166 1.32.166 2.001 0 5.225-3.34 9.67-8 11.317C5.34 16.67 2 12.225 2 7c0-.682.057-1.35.166-2.001zm11.541 3.708a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z'])
			}),
			_Utils_Tuple2(
			'shield-exclamation',
			{
				a: _List_fromArray(
					['M20.618 5.984A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016zM12 9v2m0 4h.01']),
				b: _List_fromArray(
					['M10 1.944A11.954 11.954 0 012.166 5C2.056 5.649 2 6.319 2 7c0 5.225 3.34 9.67 8 11.317C14.66 16.67 18 12.225 18 7c0-.682-.057-1.35-.166-2.001A11.954 11.954 0 0110 1.944zM11 14a1 1 0 11-2 0 1 1 0 012 0zm0-7a1 1 0 10-2 0v3a1 1 0 102 0V7z'])
			}),
			_Utils_Tuple2(
			'shopping-bag',
			{
				a: _List_fromArray(
					['M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z']),
				b: _List_fromArray(
					['M10 2a4 4 0 00-4 4v1H5a1 1 0 00-.994.89l-1 9A1 1 0 004 18h12a1 1 0 00.994-1.11l-1-9A1 1 0 0015 7h-1V6a4 4 0 00-4-4zm2 5V6a2 2 0 10-4 0v1h4zm-6 3a1 1 0 112 0 1 1 0 01-2 0zm7-1a1 1 0 100 2 1 1 0 000-2z'])
			}),
			_Utils_Tuple2(
			'shopping-cart',
			{
				a: _List_fromArray(
					['M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z']),
				b: _List_fromArray(
					['M3 1a1 1 0 000 2h1.22l.305 1.222a.997.997 0 00.01.042l1.358 5.43-.893.892C3.74 11.846 4.632 14 6.414 14H15a1 1 0 000-2H6.414l1-1H14a1 1 0 00.894-.553l3-6A1 1 0 0017 3H6.28l-.31-1.243A1 1 0 005 1H3zM16 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM6.5 18a1.5 1.5 0 100-3 1.5 1.5 0 000 3z'])
			}),
			_Utils_Tuple2(
			'sort-ascending',
			{
				a: _List_fromArray(
					['M3 4h13M3 8h9m-9 4h6m4 0l4-4m0 0l4 4m-4-4v12']),
				b: _List_fromArray(
					['M3 3a1 1 0 000 2h11a1 1 0 100-2H3zM3 7a1 1 0 000 2h5a1 1 0 000-2H3zM3 11a1 1 0 100 2h4a1 1 0 100-2H3zM13 16a1 1 0 102 0v-5.586l1.293 1.293a1 1 0 001.414-1.414l-3-3a1 1 0 00-1.414 0l-3 3a1 1 0 101.414 1.414L13 10.414V16z'])
			}),
			_Utils_Tuple2(
			'sort-descending',
			{
				a: _List_fromArray(
					['M3 4h13M3 8h9m-9 4h9m5-4v12m0 0l-4-4m4 4l4-4']),
				b: _List_fromArray(
					['M3 3a1 1 0 000 2h11a1 1 0 100-2H3zM3 7a1 1 0 000 2h7a1 1 0 100-2H3zM3 11a1 1 0 100 2h4a1 1 0 100-2H3zM15 8a1 1 0 10-2 0v5.586l-1.293-1.293a1 1 0 00-1.414 1.414l3 3a1 1 0 001.414 0l3-3a1 1 0 00-1.414-1.414L15 13.586V8z'])
			}),
			_Utils_Tuple2(
			'sparkles',
			{
				a: _List_fromArray(
					['M5 3v4M3 5h4M6 17v4m-2-2h4m5-16l2.286 6.857L21 12l-5.714 2.143L13 21l-2.286-6.857L5 12l5.714-2.143L13 3z']),
				b: _List_fromArray(
					['M5 2a1 1 0 011 1v1h1a1 1 0 010 2H6v1a1 1 0 01-2 0V6H3a1 1 0 010-2h1V3a1 1 0 011-1zm0 10a1 1 0 011 1v1h1a1 1 0 110 2H6v1a1 1 0 11-2 0v-1H3a1 1 0 110-2h1v-1a1 1 0 011-1zM12 2a1 1 0 01.967.744L14.146 7.2 17.5 9.134a1 1 0 010 1.732l-3.354 1.935-1.18 4.455a1 1 0 01-1.933 0L9.854 12.8 6.5 10.866a1 1 0 010-1.732l3.354-1.935 1.18-4.455A1 1 0 0112 2z'])
			}),
			_Utils_Tuple2(
			'speakerphone',
			{
				a: _List_fromArray(
					['M11 5.882V19.24a1.76 1.76 0 01-3.417.592l-2.147-6.15M18 13a3 3 0 100-6M5.436 13.683A4.001 4.001 0 017 6h1.832c4.1 0 7.625-1.234 9.168-3v14c-1.543-1.766-5.067-3-9.168-3H7a3.988 3.988 0 01-1.564-.317z']),
				b: _List_fromArray(
					['M18 3a1 1 0 00-1.447-.894L8.763 6H5a3 3 0 000 6h.28l1.771 5.316A1 1 0 008 18h1a1 1 0 001-1v-4.382l6.553 3.276A1 1 0 0018 15V3z'])
			}),
			_Utils_Tuple2(
			'star',
			{
				a: _List_fromArray(
					['M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z']),
				b: _List_fromArray(
					['M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z'])
			}),
			_Utils_Tuple2(
			'status-offline',
			{
				a: _List_fromArray(
					['M18.364 5.636a9 9 0 010 12.728m0 0l-2.829-2.829m2.829 2.829L21 21M15.536 8.464a5 5 0 010 7.072m0 0l-2.829-2.829m-4.243 2.829a4.978 4.978 0 01-1.414-2.83m-1.414 5.658a9 9 0 01-2.167-9.238m7.824 2.167a1 1 0 111.414 1.414m-1.414-1.414L3 3m8.293 8.293l1.414 1.414']),
				b: _List_fromArray(
					['M3.707 2.293a1 1 0 00-1.414 1.414l6.921 6.922c.05.062.105.118.168.167l6.91 6.911a1 1 0 001.415-1.414l-.675-.675a9.001 9.001 0 00-.668-11.982A1 1 0 1014.95 5.05a7.002 7.002 0 01.657 9.143l-1.435-1.435a5.002 5.002 0 00-.636-6.294A1 1 0 0012.12 7.88c.924.923 1.12 2.3.587 3.415l-1.992-1.992a.922.922 0 00-.018-.018l-6.99-6.991zM3.238 8.187a1 1 0 00-1.933-.516c-.8 3-.025 6.336 2.331 8.693a1 1 0 001.414-1.415 6.997 6.997 0 01-1.812-6.762zM7.4 11.5a1 1 0 10-1.73 1c.214.371.48.72.795 1.035a1 1 0 001.414-1.414c-.191-.191-.35-.4-.478-.622z'])
			}),
			_Utils_Tuple2(
			'status-online',
			{
				a: _List_fromArray(
					['M5.636 18.364a9 9 0 010-12.728m12.728 0a9 9 0 010 12.728m-9.9-2.829a5 5 0 010-7.07m7.072 0a5 5 0 010 7.07M13 12a1 1 0 11-2 0 1 1 0 012 0z']),
				b: _List_fromArray(
					['M5.05 3.636a1 1 0 010 1.414 7 7 0 000 9.9 1 1 0 11-1.414 1.414 9 9 0 010-12.728 1 1 0 011.414 0zm9.9 0a1 1 0 011.414 0 9 9 0 010 12.728 1 1 0 11-1.414-1.414 7 7 0 000-9.9 1 1 0 010-1.414zM7.879 6.464a1 1 0 010 1.414 3 3 0 000 4.243 1 1 0 11-1.415 1.414 5 5 0 010-7.07 1 1 0 011.415 0zm4.242 0a1 1 0 011.415 0 5 5 0 010 7.072 1 1 0 01-1.415-1.415 3 3 0 000-4.242 1 1 0 010-1.415zM10 9a1 1 0 011 1v.01a1 1 0 11-2 0V10a1 1 0 011-1z'])
			}),
			_Utils_Tuple2(
			'stop',
			{
				a: _List_fromArray(
					['M21 12a9 9 0 11-18 0 9 9 0 0118 0z', 'M9 10a1 1 0 011-1h4a1 1 0 011 1v4a1 1 0 01-1 1h-4a1 1 0 01-1-1v-4z']),
				b: _List_fromArray(
					['M10 18a8 8 0 100-16 8 8 0 000 16zM8 7a1 1 0 00-1 1v4a1 1 0 001 1h4a1 1 0 001-1V8a1 1 0 00-1-1H8z'])
			}),
			_Utils_Tuple2(
			'sun',
			{
				a: _List_fromArray(
					['M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z']),
				b: _List_fromArray(
					['M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z'])
			}),
			_Utils_Tuple2(
			'support',
			{
				a: _List_fromArray(
					['M18.364 5.636l-3.536 3.536m0 5.656l3.536 3.536M9.172 9.172L5.636 5.636m3.536 9.192l-3.536 3.536M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-5 0a4 4 0 11-8 0 4 4 0 018 0z']),
				b: _List_fromArray(
					['M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-2 0c0 .993-.241 1.929-.668 2.754l-1.524-1.525a3.997 3.997 0 00.078-2.183l1.562-1.562C15.802 8.249 16 9.1 16 10zm-5.165 3.913l1.58 1.58A5.98 5.98 0 0110 16a5.976 5.976 0 01-2.516-.552l1.562-1.562a4.006 4.006 0 001.789.027zm-4.677-2.796a4.002 4.002 0 01-.041-2.08l-.08.08-1.53-1.533A5.98 5.98 0 004 10c0 .954.223 1.856.619 2.657l1.54-1.54zm1.088-6.45A5.974 5.974 0 0110 4c.954 0 1.856.223 2.657.619l-1.54 1.54a4.002 4.002 0 00-2.346.033L7.246 4.668zM12 10a2 2 0 11-4 0 2 2 0 014 0z'])
			}),
			_Utils_Tuple2(
			'switch-horizontal',
			{
				a: _List_fromArray(
					['M8 7h12m0 0l-4-4m4 4l-4 4m0 6H4m0 0l4 4m-4-4l4-4']),
				b: _List_fromArray(
					['M8 5a1 1 0 100 2h5.586l-1.293 1.293a1 1 0 001.414 1.414l3-3a1 1 0 000-1.414l-3-3a1 1 0 10-1.414 1.414L13.586 5H8zM12 15a1 1 0 100-2H6.414l1.293-1.293a1 1 0 10-1.414-1.414l-3 3a1 1 0 000 1.414l3 3a1 1 0 001.414-1.414L6.414 15H12z'])
			}),
			_Utils_Tuple2(
			'switch-vertical',
			{
				a: _List_fromArray(
					['M7 16V4m0 0L3 8m4-4l4 4m6 0v12m0 0l4-4m-4 4l-4-4']),
				b: _List_fromArray(
					['M5 12a1 1 0 102 0V6.414l1.293 1.293a1 1 0 001.414-1.414l-3-3a1 1 0 00-1.414 0l-3 3a1 1 0 001.414 1.414L5 6.414V12zM15 8a1 1 0 10-2 0v5.586l-1.293-1.293a1 1 0 00-1.414 1.414l3 3a1 1 0 001.414 0l3-3a1 1 0 00-1.414-1.414L15 13.586V8z'])
			}),
			_Utils_Tuple2(
			'table',
			{
				a: _List_fromArray(
					['M3 10h18M3 14h18m-9-4v8m-7 0h14a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z']),
				b: _List_fromArray(
					['M5 4a3 3 0 00-3 3v6a3 3 0 003 3h10a3 3 0 003-3V7a3 3 0 00-3-3H5zm-1 9v-1h5v2H5a1 1 0 01-1-1zm7 1h4a1 1 0 001-1v-1h-5v2zm0-4h5V8h-5v2zM9 8H4v2h5V8z'])
			}),
			_Utils_Tuple2(
			'tag',
			{
				a: _List_fromArray(
					['M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z']),
				b: _List_fromArray(
					['M17.707 9.293a1 1 0 010 1.414l-7 7a1 1 0 01-1.414 0l-7-7A.997.997 0 012 10V5a3 3 0 013-3h5c.256 0 .512.098.707.293l7 7zM5 6a1 1 0 100-2 1 1 0 000 2z'])
			}),
			_Utils_Tuple2(
			'template',
			{
				a: _List_fromArray(
					['M4 5a1 1 0 011-1h14a1 1 0 011 1v2a1 1 0 01-1 1H5a1 1 0 01-1-1V5zM4 13a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H5a1 1 0 01-1-1v-6zM16 13a1 1 0 011-1h2a1 1 0 011 1v6a1 1 0 01-1 1h-2a1 1 0 01-1-1v-6z']),
				b: _List_fromArray(
					['M3 4a1 1 0 011-1h12a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1V4zM3 10a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H4a1 1 0 01-1-1v-6zM14 9a1 1 0 00-1 1v6a1 1 0 001 1h2a1 1 0 001-1v-6a1 1 0 00-1-1h-2z'])
			}),
			_Utils_Tuple2(
			'terminal',
			{
				a: _List_fromArray(
					['M8 9l3 3-3 3m5 0h3M5 20h14a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z']),
				b: _List_fromArray(
					['M2 5a2 2 0 012-2h12a2 2 0 012 2v10a2 2 0 01-2 2H4a2 2 0 01-2-2V5zm3.293 1.293a1 1 0 011.414 0l3 3a1 1 0 010 1.414l-3 3a1 1 0 01-1.414-1.414L7.586 10 5.293 7.707a1 1 0 010-1.414zM11 12a1 1 0 100 2h3a1 1 0 100-2h-3z'])
			}),
			_Utils_Tuple2(
			'thumb-down',
			{
				a: _List_fromArray(
					['M10 14H5.236a2 2 0 01-1.789-2.894l3.5-7A2 2 0 018.736 3h4.018a2 2 0 01.485.06l3.76.94m-7 10v5a2 2 0 002 2h.096c.5 0 .905-.405.905-.904 0-.715.211-1.413.608-2.008L17 13V4m-7 10h2m5-10h2a2 2 0 012 2v6a2 2 0 01-2 2h-2.5']),
				b: _List_fromArray(
					['M18 9.5a1.5 1.5 0 11-3 0v-6a1.5 1.5 0 013 0v6zM14 9.667v-5.43a2 2 0 00-1.105-1.79l-.05-.025A4 4 0 0011.055 2H5.64a2 2 0 00-1.962 1.608l-1.2 6A2 2 0 004.44 12H8v4a2 2 0 002 2 1 1 0 001-1v-.667a4 4 0 01.8-2.4l1.4-1.866a4 4 0 00.8-2.4z'])
			}),
			_Utils_Tuple2(
			'thumb-up',
			{
				a: _List_fromArray(
					['M14 10h4.764a2 2 0 011.789 2.894l-3.5 7A2 2 0 0115.263 21h-4.017c-.163 0-.326-.02-.485-.06L7 20m7-10V5a2 2 0 00-2-2h-.095c-.5 0-.905.405-.905.905 0 .714-.211 1.412-.608 2.006L7 11v9m7-10h-2M7 20H5a2 2 0 01-2-2v-6a2 2 0 012-2h2.5']),
				b: _List_fromArray(
					['M2 10.5a1.5 1.5 0 113 0v6a1.5 1.5 0 01-3 0v-6zM6 10.333v5.43a2 2 0 001.106 1.79l.05.025A4 4 0 008.943 18h5.416a2 2 0 001.962-1.608l1.2-6A2 2 0 0015.56 8H12V4a2 2 0 00-2-2 1 1 0 00-1 1v.667a4 4 0 01-.8 2.4L6.8 7.933a4 4 0 00-.8 2.4z'])
			}),
			_Utils_Tuple2(
			'ticket',
			{
				a: _List_fromArray(
					['M15 5v2m0 4v2m0 4v2M5 5a2 2 0 00-2 2v3a2 2 0 110 4v3a2 2 0 002 2h14a2 2 0 002-2v-3a2 2 0 110-4V7a2 2 0 00-2-2H5z']),
				b: _List_fromArray(
					['M2 6a2 2 0 012-2h12a2 2 0 012 2v2a2 2 0 100 4v2a2 2 0 01-2 2H4a2 2 0 01-2-2v-2a2 2 0 100-4V6z'])
			}),
			_Utils_Tuple2(
			'translate',
			{
				a: _List_fromArray(
					['M3 5h12M9 3v2m1.048 9.5A18.022 18.022 0 016.412 9m6.088 9h7M11 21l5-10 5 10M12.751 5C11.783 10.77 8.07 15.61 3 18.129']),
				b: _List_fromArray(
					['M7 2a1 1 0 011 1v1h3a1 1 0 110 2H9.578a18.87 18.87 0 01-1.724 4.78c.29.354.596.696.914 1.026a1 1 0 11-1.44 1.389c-.188-.196-.373-.396-.554-.6a19.098 19.098 0 01-3.107 3.567 1 1 0 01-1.334-1.49 17.087 17.087 0 003.13-3.733 18.992 18.992 0 01-1.487-2.494 1 1 0 111.79-.89c.234.47.489.928.764 1.372.417-.934.752-1.913.997-2.927H3a1 1 0 110-2h3V3a1 1 0 011-1zm6 6a1 1 0 01.894.553l2.991 5.982a.869.869 0 01.02.037l.99 1.98a1 1 0 11-1.79.895L15.383 16h-4.764l-.724 1.447a1 1 0 11-1.788-.894l.99-1.98.019-.038 2.99-5.982A1 1 0 0113 8zm-1.382 6h2.764L13 11.236 11.618 14z'])
			}),
			_Utils_Tuple2(
			'trash',
			{
				a: _List_fromArray(
					['M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16']),
				b: _List_fromArray(
					['M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z'])
			}),
			_Utils_Tuple2(
			'trending-down',
			{
				a: _List_fromArray(
					['M13 17h8m0 0V9m0 8l-8-8-4 4-6-6']),
				b: _List_fromArray(
					['M12 13a1 1 0 100 2h5a1 1 0 001-1V9a1 1 0 10-2 0v2.586l-4.293-4.293a1 1 0 00-1.414 0L8 9.586 3.707 5.293a1 1 0 00-1.414 1.414l5 5a1 1 0 001.414 0L11 9.414 14.586 13H12z'])
			}),
			_Utils_Tuple2(
			'trending-up',
			{
				a: _List_fromArray(
					['M13 7h8m0 0v8m0-8l-8 8-4-4-6 6']),
				b: _List_fromArray(
					['M12 7a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0V8.414l-4.293 4.293a1 1 0 01-1.414 0L8 10.414l-4.293 4.293a1 1 0 01-1.414-1.414l5-5a1 1 0 011.414 0L11 10.586 14.586 7H12z'])
			}),
			_Utils_Tuple2(
			'truck',
			{
				a: _List_fromArray(
					['M9 17a2 2 0 11-4 0 2 2 0 014 0zM19 17a2 2 0 11-4 0 2 2 0 014 0z', 'M13 16V6a1 1 0 00-1-1H4a1 1 0 00-1 1v10a1 1 0 001 1h1m8-1a1 1 0 01-1 1H9m4-1V8a1 1 0 011-1h2.586a1 1 0 01.707.293l3.414 3.414a1 1 0 01.293.707V16a1 1 0 01-1 1h-1m-6-1a1 1 0 001 1h1M5 17a2 2 0 104 0m-4 0a2 2 0 114 0m6 0a2 2 0 104 0m-4 0a2 2 0 114 0']),
				b: _List_fromArray(
					['M8 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM15 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0z', 'M3 4a1 1 0 00-1 1v10a1 1 0 001 1h1.05a2.5 2.5 0 014.9 0H10a1 1 0 001-1V5a1 1 0 00-1-1H3zM14 7a1 1 0 00-1 1v6.05A2.5 2.5 0 0115.95 16H17a1 1 0 001-1v-5a1 1 0 00-.293-.707l-2-2A1 1 0 0015 7h-1z'])
			}),
			_Utils_Tuple2(
			'upload',
			{
				a: _List_fromArray(
					['M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-8l-4-4m0 0L8 8m4-4v12']),
				b: _List_fromArray(
					['M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM6.293 6.707a1 1 0 010-1.414l3-3a1 1 0 011.414 0l3 3a1 1 0 01-1.414 1.414L11 5.414V13a1 1 0 11-2 0V5.414L7.707 6.707a1 1 0 01-1.414 0z'])
			}),
			_Utils_Tuple2(
			'user',
			{
				a: _List_fromArray(
					['M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z']),
				b: _List_fromArray(
					['M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z'])
			}),
			_Utils_Tuple2(
			'user-add',
			{
				a: _List_fromArray(
					['M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z']),
				b: _List_fromArray(
					['M8 9a3 3 0 100-6 3 3 0 000 6zM8 11a6 6 0 016 6H2a6 6 0 016-6zM16 7a1 1 0 10-2 0v1h-1a1 1 0 100 2h1v1a1 1 0 102 0v-1h1a1 1 0 100-2h-1V7z'])
			}),
			_Utils_Tuple2(
			'user-circle',
			{
				a: _List_fromArray(
					['M5.121 17.804A13.937 13.937 0 0112 16c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0zm6 2a9 9 0 11-18 0 9 9 0 0118 0z']),
				b: _List_fromArray(
					['M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-6-3a2 2 0 11-4 0 2 2 0 014 0zm-2 4a5 5 0 00-4.546 2.916A5.986 5.986 0 0010 16a5.986 5.986 0 004.546-2.084A5 5 0 0010 11z'])
			}),
			_Utils_Tuple2(
			'user-group',
			{
				a: _List_fromArray(
					['M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z']),
				b: _List_fromArray(
					['M13 6a3 3 0 11-6 0 3 3 0 016 0zM18 8a2 2 0 11-4 0 2 2 0 014 0zM14 15a4 4 0 00-8 0v3h8v-3zM6 8a2 2 0 11-4 0 2 2 0 014 0zM16 18v-3a5.972 5.972 0 00-.75-2.906A3.005 3.005 0 0119 15v3h-3zM4.75 12.094A5.973 5.973 0 004 15v3H1v-3a3 3 0 013.75-2.906z'])
			}),
			_Utils_Tuple2(
			'user-remove',
			{
				a: _List_fromArray(
					['M13 7a4 4 0 11-8 0 4 4 0 018 0zM9 14a6 6 0 00-6 6v1h12v-1a6 6 0 00-6-6zM21 12h-6']),
				b: _List_fromArray(
					['M11 6a3 3 0 11-6 0 3 3 0 016 0zM14 17a6 6 0 00-12 0h12zM13 8a1 1 0 100 2h4a1 1 0 100-2h-4z'])
			}),
			_Utils_Tuple2(
			'users',
			{
				a: _List_fromArray(
					['M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z']),
				b: _List_fromArray(
					['M9 6a3 3 0 11-6 0 3 3 0 016 0zM17 6a3 3 0 11-6 0 3 3 0 016 0zM12.93 17c.046-.327.07-.66.07-1a6.97 6.97 0 00-1.5-4.33A5 5 0 0119 16v1h-6.07zM6 11a5 5 0 015 5v1H1v-1a5 5 0 015-5z'])
			}),
			_Utils_Tuple2(
			'variable',
			{
				a: _List_fromArray(
					['M4.871 4A17.926 17.926 0 003 12c0 2.874.673 5.59 1.871 8m14.13 0a17.926 17.926 0 001.87-8c0-2.874-.673-5.59-1.87-8M9 9h1.246a1 1 0 01.961.725l1.586 5.55a1 1 0 00.961.725H15m1-7h-.08a2 2 0 00-1.519.698L9.6 15.302A2 2 0 018.08 16H8']),
				b: _List_fromArray(
					['M4.649 3.084A1 1 0 015.163 4.4 13.95 13.95 0 004 10c0 1.993.416 3.886 1.164 5.6a1 1 0 01-1.832.8A15.95 15.95 0 012 10c0-2.274.475-4.44 1.332-6.4a1 1 0 011.317-.516zM12.96 7a3 3 0 00-2.342 1.126l-.328.41-.111-.279A2 2 0 008.323 7H8a1 1 0 000 2h.323l.532 1.33-1.035 1.295a1 1 0 01-.781.375H7a1 1 0 100 2h.039a3 3 0 002.342-1.126l.328-.41.111.279A2 2 0 0011.677 14H12a1 1 0 100-2h-.323l-.532-1.33 1.035-1.295A1 1 0 0112.961 9H13a1 1 0 100-2h-.039zm1.874-2.6a1 1 0 011.833-.8A15.95 15.95 0 0118 10c0 2.274-.475 4.44-1.332 6.4a1 1 0 11-1.832-.8A13.949 13.949 0 0016 10c0-1.993-.416-3.886-1.165-5.6z'])
			}),
			_Utils_Tuple2(
			'video-camera',
			{
				a: _List_fromArray(
					['M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z']),
				b: _List_fromArray(
					['M2 6a2 2 0 012-2h6a2 2 0 012 2v8a2 2 0 01-2 2H4a2 2 0 01-2-2V6zM14.553 7.106A1 1 0 0014 8v4a1 1 0 00.553.894l2 1A1 1 0 0018 13V7a1 1 0 00-1.447-.894l-2 1z'])
			}),
			_Utils_Tuple2(
			'view-boards',
			{
				a: _List_fromArray(
					['M9 17V7m0 10a2 2 0 01-2 2H5a2 2 0 01-2-2V7a2 2 0 012-2h2a2 2 0 012 2m0 10a2 2 0 002 2h2a2 2 0 002-2M9 7a2 2 0 012-2h2a2 2 0 012 2m0 10V7m0 10a2 2 0 002 2h2a2 2 0 002-2V7a2 2 0 00-2-2h-2a2 2 0 00-2 2']),
				b: _List_fromArray(
					['M2 4a1 1 0 011-1h2a1 1 0 011 1v12a1 1 0 01-1 1H3a1 1 0 01-1-1V4zM8 4a1 1 0 011-1h2a1 1 0 011 1v12a1 1 0 01-1 1H9a1 1 0 01-1-1V4zM15 3a1 1 0 00-1 1v12a1 1 0 001 1h2a1 1 0 001-1V4a1 1 0 00-1-1h-2z'])
			}),
			_Utils_Tuple2(
			'view-grid',
			{
				a: _List_fromArray(
					['M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z']),
				b: _List_fromArray(
					['M5 3a2 2 0 00-2 2v2a2 2 0 002 2h2a2 2 0 002-2V5a2 2 0 00-2-2H5zM5 11a2 2 0 00-2 2v2a2 2 0 002 2h2a2 2 0 002-2v-2a2 2 0 00-2-2H5zM11 5a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V5zM11 13a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z'])
			}),
			_Utils_Tuple2(
			'view-grid-add',
			{
				a: _List_fromArray(
					['M17 14v6m-3-3h6M6 10h2a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v2a2 2 0 002 2zm10 0h2a2 2 0 002-2V6a2 2 0 00-2-2h-2a2 2 0 00-2 2v2a2 2 0 002 2zM6 20h2a2 2 0 002-2v-2a2 2 0 00-2-2H6a2 2 0 00-2 2v2a2 2 0 002 2z']),
				b: _List_fromArray(
					['M5 3a2 2 0 00-2 2v2a2 2 0 002 2h2a2 2 0 002-2V5a2 2 0 00-2-2H5zM5 11a2 2 0 00-2 2v2a2 2 0 002 2h2a2 2 0 002-2v-2a2 2 0 00-2-2H5zM11 5a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V5zM14 11a1 1 0 011 1v1h1a1 1 0 110 2h-1v1a1 1 0 11-2 0v-1h-1a1 1 0 110-2h1v-1a1 1 0 011-1z'])
			}),
			_Utils_Tuple2(
			'view-list',
			{
				a: _List_fromArray(
					['M4 6h16M4 10h16M4 14h16M4 18h16']),
				b: _List_fromArray(
					['M3 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z'])
			}),
			_Utils_Tuple2(
			'volume-off',
			{
				a: _List_fromArray(
					['M5.586 15H4a1 1 0 01-1-1v-4a1 1 0 011-1h1.586l4.707-4.707C10.923 3.663 12 4.109 12 5v14c0 .891-1.077 1.337-1.707.707L5.586 15z', 'M17 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2']),
				b: _List_fromArray(
					['M9.383 3.076A1 1 0 0110 4v12a1 1 0 01-1.707.707L4.586 13H2a1 1 0 01-1-1V8a1 1 0 011-1h2.586l3.707-3.707a1 1 0 011.09-.217zM12.293 7.293a1 1 0 011.414 0L15 8.586l1.293-1.293a1 1 0 111.414 1.414L16.414 10l1.293 1.293a1 1 0 01-1.414 1.414L15 11.414l-1.293 1.293a1 1 0 01-1.414-1.414L13.586 10l-1.293-1.293a1 1 0 010-1.414z'])
			}),
			_Utils_Tuple2(
			'volume-up',
			{
				a: _List_fromArray(
					['M15.536 8.464a5 5 0 010 7.072m2.828-9.9a9 9 0 010 12.728M5.586 15H4a1 1 0 01-1-1v-4a1 1 0 011-1h1.586l4.707-4.707C10.923 3.663 12 4.109 12 5v14c0 .891-1.077 1.337-1.707.707L5.586 15z']),
				b: _List_fromArray(
					['M9.383 3.076A1 1 0 0110 4v12a1 1 0 01-1.707.707L4.586 13H2a1 1 0 01-1-1V8a1 1 0 011-1h2.586l3.707-3.707a1 1 0 011.09-.217zM14.657 2.929a1 1 0 011.414 0A9.972 9.972 0 0119 10a9.972 9.972 0 01-2.929 7.071 1 1 0 01-1.414-1.414A7.971 7.971 0 0017 10c0-2.21-.894-4.208-2.343-5.657a1 1 0 010-1.414zm-2.829 2.828a1 1 0 011.415 0A5.983 5.983 0 0115 10a5.984 5.984 0 01-1.757 4.243 1 1 0 01-1.415-1.415A3.984 3.984 0 0013 10a3.983 3.983 0 00-1.172-2.828 1 1 0 010-1.415z'])
			}),
			_Utils_Tuple2(
			'wifi',
			{
				a: _List_fromArray(
					['M8.111 16.404a5.5 5.5 0 017.778 0M12 20h.01m-7.08-7.071c3.904-3.905 10.236-3.905 14.141 0M1.394 9.393c5.857-5.857 15.355-5.857 21.213 0']),
				b: _List_fromArray(
					['M17.778 8.222c-4.296-4.296-11.26-4.296-15.556 0A1 1 0 01.808 6.808c5.076-5.077 13.308-5.077 18.384 0a1 1 0 01-1.414 1.414zM14.95 11.05a7 7 0 00-9.9 0 1 1 0 01-1.414-1.414 9 9 0 0112.728 0 1 1 0 01-1.414 1.414zM12.12 13.88a3 3 0 00-4.242 0 1 1 0 01-1.415-1.415 5 5 0 017.072 0 1 1 0 01-1.415 1.415zM9 16a1 1 0 011-1h.01a1 1 0 110 2H10a1 1 0 01-1-1z'])
			}),
			_Utils_Tuple2(
			'x',
			{
				a: _List_fromArray(
					['M6 18L18 6M6 6l12 12']),
				b: _List_fromArray(
					['M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z'])
			}),
			_Utils_Tuple2(
			'x-circle',
			{
				a: _List_fromArray(
					['M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z']),
				b: _List_fromArray(
					['M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z'])
			}),
			_Utils_Tuple2(
			'zoom-in',
			{
				a: _List_fromArray(
					['M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0zM10 7v3m0 0v3m0-3h3m-3 0H7']),
				b: _List_fromArray(
					['M5 8a1 1 0 011-1h1V6a1 1 0 012 0v1h1a1 1 0 110 2H9v1a1 1 0 11-2 0V9H6a1 1 0 01-1-1z', 'M2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8zm6-4a4 4 0 100 8 4 4 0 000-8z'])
			}),
			_Utils_Tuple2(
			'zoom-out',
			{
				a: _List_fromArray(
					['M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0zM13 10H7']),
				b: _List_fromArray(
					['M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z', 'M5 8a1 1 0 011-1h4a1 1 0 110 2H6a1 1 0 01-1-1z'])
			})
		]));
var $author$project$Components$Atoms$Icon$AcademicCap = 0;
var $author$project$Components$Atoms$Icon$Adjustments = 1;
var $author$project$Components$Atoms$Icon$Annotation = 2;
var $author$project$Components$Atoms$Icon$Archive = 3;
var $author$project$Components$Atoms$Icon$ArrowCircleDown = 4;
var $author$project$Components$Atoms$Icon$ArrowCircleLeft = 5;
var $author$project$Components$Atoms$Icon$ArrowCircleRight = 6;
var $author$project$Components$Atoms$Icon$ArrowCircleUp = 7;
var $author$project$Components$Atoms$Icon$ArrowDown = 8;
var $author$project$Components$Atoms$Icon$ArrowLeft = 9;
var $author$project$Components$Atoms$Icon$ArrowNarrowDown = 10;
var $author$project$Components$Atoms$Icon$ArrowNarrowLeft = 11;
var $author$project$Components$Atoms$Icon$ArrowNarrowRight = 12;
var $author$project$Components$Atoms$Icon$ArrowNarrowUp = 13;
var $author$project$Components$Atoms$Icon$ArrowRight = 14;
var $author$project$Components$Atoms$Icon$ArrowSmDown = 15;
var $author$project$Components$Atoms$Icon$ArrowSmLeft = 16;
var $author$project$Components$Atoms$Icon$ArrowSmRight = 17;
var $author$project$Components$Atoms$Icon$ArrowSmUp = 18;
var $author$project$Components$Atoms$Icon$ArrowUp = 19;
var $author$project$Components$Atoms$Icon$ArrowsExpand = 20;
var $author$project$Components$Atoms$Icon$AtSymbol = 21;
var $author$project$Components$Atoms$Icon$Backspace = 22;
var $author$project$Components$Atoms$Icon$BadgeCheck = 23;
var $author$project$Components$Atoms$Icon$Ban = 24;
var $author$project$Components$Atoms$Icon$Beaker = 25;
var $author$project$Components$Atoms$Icon$Bell = 26;
var $author$project$Components$Atoms$Icon$BookOpen = 27;
var $author$project$Components$Atoms$Icon$Bookmark = 28;
var $author$project$Components$Atoms$Icon$BookmarkAlt = 29;
var $author$project$Components$Atoms$Icon$Briefcase = 30;
var $author$project$Components$Atoms$Icon$Cake = 31;
var $author$project$Components$Atoms$Icon$Calculator = 32;
var $author$project$Components$Atoms$Icon$Calendar = 33;
var $author$project$Components$Atoms$Icon$Camera = 34;
var $author$project$Components$Atoms$Icon$Cash = 35;
var $author$project$Components$Atoms$Icon$ChartBar = 36;
var $author$project$Components$Atoms$Icon$ChartPie = 37;
var $author$project$Components$Atoms$Icon$ChartSquareBar = 38;
var $author$project$Components$Atoms$Icon$Chat = 39;
var $author$project$Components$Atoms$Icon$ChatAlt = 40;
var $author$project$Components$Atoms$Icon$ChatAlt2 = 41;
var $author$project$Components$Atoms$Icon$Check = 42;
var $author$project$Components$Atoms$Icon$ChevronDoubleDown = 44;
var $author$project$Components$Atoms$Icon$ChevronDoubleLeft = 45;
var $author$project$Components$Atoms$Icon$ChevronDoubleRight = 46;
var $author$project$Components$Atoms$Icon$ChevronDoubleUp = 47;
var $author$project$Components$Atoms$Icon$ChevronDown = 48;
var $author$project$Components$Atoms$Icon$ChevronLeft = 49;
var $author$project$Components$Atoms$Icon$ChevronRight = 50;
var $author$project$Components$Atoms$Icon$ChevronUp = 51;
var $author$project$Components$Atoms$Icon$Chip = 52;
var $author$project$Components$Atoms$Icon$Clipboard = 53;
var $author$project$Components$Atoms$Icon$ClipboardCheck = 54;
var $author$project$Components$Atoms$Icon$ClipboardCopy = 55;
var $author$project$Components$Atoms$Icon$ClipboardList = 56;
var $author$project$Components$Atoms$Icon$Clock = 57;
var $author$project$Components$Atoms$Icon$Cloud = 58;
var $author$project$Components$Atoms$Icon$CloudDownload = 59;
var $author$project$Components$Atoms$Icon$CloudUpload = 60;
var $author$project$Components$Atoms$Icon$Code = 61;
var $author$project$Components$Atoms$Icon$Cog = 62;
var $author$project$Components$Atoms$Icon$Collection = 63;
var $author$project$Components$Atoms$Icon$ColorSwatch = 64;
var $author$project$Components$Atoms$Icon$CreditCard = 65;
var $author$project$Components$Atoms$Icon$Cube = 66;
var $author$project$Components$Atoms$Icon$CubeTransparent = 67;
var $author$project$Components$Atoms$Icon$CurrencyBangladeshi = 68;
var $author$project$Components$Atoms$Icon$CurrencyDollar = 69;
var $author$project$Components$Atoms$Icon$CurrencyEuro = 70;
var $author$project$Components$Atoms$Icon$CurrencyPound = 71;
var $author$project$Components$Atoms$Icon$CurrencyRupee = 72;
var $author$project$Components$Atoms$Icon$CurrencyYen = 73;
var $author$project$Components$Atoms$Icon$CursorClick = 74;
var $author$project$Components$Atoms$Icon$Database = 75;
var $author$project$Components$Atoms$Icon$DesktopComputer = 76;
var $author$project$Components$Atoms$Icon$DeviceMobile = 77;
var $author$project$Components$Atoms$Icon$DeviceTablet = 78;
var $author$project$Components$Atoms$Icon$Document = 79;
var $author$project$Components$Atoms$Icon$DocumentAdd = 80;
var $author$project$Components$Atoms$Icon$DocumentDownload = 81;
var $author$project$Components$Atoms$Icon$DocumentDuplicate = 82;
var $author$project$Components$Atoms$Icon$DocumentRemove = 83;
var $author$project$Components$Atoms$Icon$DocumentReport = 84;
var $author$project$Components$Atoms$Icon$DocumentSearch = 85;
var $author$project$Components$Atoms$Icon$DocumentText = 86;
var $author$project$Components$Atoms$Icon$DotsCircleHorizontal = 87;
var $author$project$Components$Atoms$Icon$DotsHorizontal = 88;
var $author$project$Components$Atoms$Icon$DotsVertical = 89;
var $author$project$Components$Atoms$Icon$Download = 90;
var $author$project$Components$Atoms$Icon$Duplicate = 91;
var $author$project$Components$Atoms$Icon$EmojiHappy = 92;
var $author$project$Components$Atoms$Icon$EmojiSad = 93;
var $author$project$Components$Atoms$Icon$Empty = 94;
var $author$project$Components$Atoms$Icon$ExternalLink = 97;
var $author$project$Components$Atoms$Icon$Eye = 98;
var $author$project$Components$Atoms$Icon$EyeOff = 99;
var $author$project$Components$Atoms$Icon$FastForward = 100;
var $author$project$Components$Atoms$Icon$Film = 101;
var $author$project$Components$Atoms$Icon$Filter = 102;
var $author$project$Components$Atoms$Icon$FingerPrint = 103;
var $author$project$Components$Atoms$Icon$Fire = 104;
var $author$project$Components$Atoms$Icon$Flag = 105;
var $author$project$Components$Atoms$Icon$Folder = 106;
var $author$project$Components$Atoms$Icon$FolderAdd = 107;
var $author$project$Components$Atoms$Icon$FolderDownload = 108;
var $author$project$Components$Atoms$Icon$FolderOpen = 109;
var $author$project$Components$Atoms$Icon$FolderRemove = 110;
var $author$project$Components$Atoms$Icon$Gift = 111;
var $author$project$Components$Atoms$Icon$Globe = 112;
var $author$project$Components$Atoms$Icon$GlobeAlt = 113;
var $author$project$Components$Atoms$Icon$Hand = 114;
var $author$project$Components$Atoms$Icon$Hashtag = 115;
var $author$project$Components$Atoms$Icon$Heart = 116;
var $author$project$Components$Atoms$Icon$Home = 117;
var $author$project$Components$Atoms$Icon$Identification = 118;
var $author$project$Components$Atoms$Icon$Inbox = 119;
var $author$project$Components$Atoms$Icon$InboxIn = 120;
var $author$project$Components$Atoms$Icon$Key = 122;
var $author$project$Components$Atoms$Icon$Library = 123;
var $author$project$Components$Atoms$Icon$LightBulb = 124;
var $author$project$Components$Atoms$Icon$LightningBolt = 125;
var $author$project$Components$Atoms$Icon$Link = 126;
var $author$project$Components$Atoms$Icon$LocationMarker = 127;
var $author$project$Components$Atoms$Icon$LockClosed = 128;
var $author$project$Components$Atoms$Icon$LockOpen = 129;
var $author$project$Components$Atoms$Icon$Login = 130;
var $author$project$Components$Atoms$Icon$Logout = 131;
var $author$project$Components$Atoms$Icon$Mail = 132;
var $author$project$Components$Atoms$Icon$MailOpen = 133;
var $author$project$Components$Atoms$Icon$Map = 134;
var $author$project$Components$Atoms$Icon$Menu = 135;
var $author$project$Components$Atoms$Icon$MenuAlt1 = 136;
var $author$project$Components$Atoms$Icon$MenuAlt2 = 137;
var $author$project$Components$Atoms$Icon$MenuAlt3 = 138;
var $author$project$Components$Atoms$Icon$MenuAlt4 = 139;
var $author$project$Components$Atoms$Icon$Microphone = 140;
var $author$project$Components$Atoms$Icon$Minus = 141;
var $author$project$Components$Atoms$Icon$MinusCircle = 142;
var $author$project$Components$Atoms$Icon$MinusSm = 143;
var $author$project$Components$Atoms$Icon$Moon = 144;
var $author$project$Components$Atoms$Icon$MusicNote = 145;
var $author$project$Components$Atoms$Icon$Newspaper = 146;
var $author$project$Components$Atoms$Icon$OfficeBuilding = 147;
var $author$project$Components$Atoms$Icon$PaperAirplane = 148;
var $author$project$Components$Atoms$Icon$PaperClip = 149;
var $author$project$Components$Atoms$Icon$Pause = 150;
var $author$project$Components$Atoms$Icon$Pencil = 151;
var $author$project$Components$Atoms$Icon$PencilAlt = 152;
var $author$project$Components$Atoms$Icon$Phone = 153;
var $author$project$Components$Atoms$Icon$PhoneIncoming = 154;
var $author$project$Components$Atoms$Icon$PhoneMissedCall = 155;
var $author$project$Components$Atoms$Icon$PhoneOutgoing = 156;
var $author$project$Components$Atoms$Icon$Photograph = 157;
var $author$project$Components$Atoms$Icon$Play = 158;
var $author$project$Components$Atoms$Icon$Plus = 159;
var $author$project$Components$Atoms$Icon$PlusCircle = 160;
var $author$project$Components$Atoms$Icon$PlusSm = 161;
var $author$project$Components$Atoms$Icon$PresentationChartBar = 162;
var $author$project$Components$Atoms$Icon$PresentationChartLine = 163;
var $author$project$Components$Atoms$Icon$Printer = 164;
var $author$project$Components$Atoms$Icon$Puzzle = 165;
var $author$project$Components$Atoms$Icon$Qrcode = 166;
var $author$project$Components$Atoms$Icon$QuestionMarkCircle = 167;
var $author$project$Components$Atoms$Icon$ReceiptRefund = 168;
var $author$project$Components$Atoms$Icon$ReceiptTax = 169;
var $author$project$Components$Atoms$Icon$Refresh = 170;
var $author$project$Components$Atoms$Icon$Reply = 171;
var $author$project$Components$Atoms$Icon$Rewind = 172;
var $author$project$Components$Atoms$Icon$Rss = 173;
var $author$project$Components$Atoms$Icon$Save = 174;
var $author$project$Components$Atoms$Icon$SaveAs = 175;
var $author$project$Components$Atoms$Icon$Scale = 176;
var $author$project$Components$Atoms$Icon$Scissors = 177;
var $author$project$Components$Atoms$Icon$Search = 178;
var $author$project$Components$Atoms$Icon$SearchCircle = 179;
var $author$project$Components$Atoms$Icon$Selector = 180;
var $author$project$Components$Atoms$Icon$Server = 181;
var $author$project$Components$Atoms$Icon$Share = 182;
var $author$project$Components$Atoms$Icon$ShieldCheck = 183;
var $author$project$Components$Atoms$Icon$ShieldExclamation = 184;
var $author$project$Components$Atoms$Icon$ShoppingBag = 185;
var $author$project$Components$Atoms$Icon$ShoppingCart = 186;
var $author$project$Components$Atoms$Icon$SortAscending = 187;
var $author$project$Components$Atoms$Icon$SortDescending = 188;
var $author$project$Components$Atoms$Icon$Sparkles = 189;
var $author$project$Components$Atoms$Icon$Speakerphone = 190;
var $author$project$Components$Atoms$Icon$Star = 191;
var $author$project$Components$Atoms$Icon$StatusOffline = 192;
var $author$project$Components$Atoms$Icon$StatusOnline = 193;
var $author$project$Components$Atoms$Icon$Stop = 194;
var $author$project$Components$Atoms$Icon$Sun = 195;
var $author$project$Components$Atoms$Icon$Support = 196;
var $author$project$Components$Atoms$Icon$SwitchHorizontal = 197;
var $author$project$Components$Atoms$Icon$SwitchVertical = 198;
var $author$project$Components$Atoms$Icon$Table = 199;
var $author$project$Components$Atoms$Icon$Tag = 200;
var $author$project$Components$Atoms$Icon$Template = 201;
var $author$project$Components$Atoms$Icon$Terminal = 202;
var $author$project$Components$Atoms$Icon$ThumbDown = 203;
var $author$project$Components$Atoms$Icon$ThumbUp = 204;
var $author$project$Components$Atoms$Icon$Ticket = 205;
var $author$project$Components$Atoms$Icon$Translate = 206;
var $author$project$Components$Atoms$Icon$Trash = 207;
var $author$project$Components$Atoms$Icon$TrendingDown = 208;
var $author$project$Components$Atoms$Icon$TrendingUp = 209;
var $author$project$Components$Atoms$Icon$Truck = 210;
var $author$project$Components$Atoms$Icon$Upload = 211;
var $author$project$Components$Atoms$Icon$User = 212;
var $author$project$Components$Atoms$Icon$UserAdd = 213;
var $author$project$Components$Atoms$Icon$UserCircle = 214;
var $author$project$Components$Atoms$Icon$UserGroup = 215;
var $author$project$Components$Atoms$Icon$UserRemove = 216;
var $author$project$Components$Atoms$Icon$Users = 217;
var $author$project$Components$Atoms$Icon$Variable = 218;
var $author$project$Components$Atoms$Icon$VideoCamera = 219;
var $author$project$Components$Atoms$Icon$ViewBoards = 220;
var $author$project$Components$Atoms$Icon$ViewGrid = 221;
var $author$project$Components$Atoms$Icon$ViewGridAdd = 222;
var $author$project$Components$Atoms$Icon$ViewList = 223;
var $author$project$Components$Atoms$Icon$VolumeOff = 224;
var $author$project$Components$Atoms$Icon$VolumeUp = 225;
var $author$project$Components$Atoms$Icon$Wifi = 226;
var $author$project$Components$Atoms$Icon$XCircle = 228;
var $author$project$Components$Atoms$Icon$ZoomIn = 229;
var $author$project$Components$Atoms$Icon$ZoomOut = 230;
var $author$project$Components$Atoms$Icon$iconNames = _List_fromArray(
	[
		_Utils_Tuple2(
		0,
		_List_fromArray(
			['academic-cap'])),
		_Utils_Tuple2(
		1,
		_List_fromArray(
			['adjustments'])),
		_Utils_Tuple2(
		2,
		_List_fromArray(
			['annotation'])),
		_Utils_Tuple2(
		3,
		_List_fromArray(
			['archive'])),
		_Utils_Tuple2(
		4,
		_List_fromArray(
			['arrow-circle-down'])),
		_Utils_Tuple2(
		5,
		_List_fromArray(
			['arrow-circle-left'])),
		_Utils_Tuple2(
		6,
		_List_fromArray(
			['arrow-circle-right'])),
		_Utils_Tuple2(
		7,
		_List_fromArray(
			['arrow-circle-up'])),
		_Utils_Tuple2(
		8,
		_List_fromArray(
			['arrow-down'])),
		_Utils_Tuple2(
		9,
		_List_fromArray(
			['arrow-left'])),
		_Utils_Tuple2(
		10,
		_List_fromArray(
			['arrow-narrow-down'])),
		_Utils_Tuple2(
		11,
		_List_fromArray(
			['arrow-narrow-left'])),
		_Utils_Tuple2(
		12,
		_List_fromArray(
			['arrow-narrow-right'])),
		_Utils_Tuple2(
		13,
		_List_fromArray(
			['arrow-narrow-up'])),
		_Utils_Tuple2(
		14,
		_List_fromArray(
			['arrow-right'])),
		_Utils_Tuple2(
		15,
		_List_fromArray(
			['arrow-sm-down'])),
		_Utils_Tuple2(
		16,
		_List_fromArray(
			['arrow-sm-left'])),
		_Utils_Tuple2(
		17,
		_List_fromArray(
			['arrow-sm-right'])),
		_Utils_Tuple2(
		18,
		_List_fromArray(
			['arrow-sm-up'])),
		_Utils_Tuple2(
		19,
		_List_fromArray(
			['arrow-up'])),
		_Utils_Tuple2(
		20,
		_List_fromArray(
			['arrows-expand'])),
		_Utils_Tuple2(
		21,
		_List_fromArray(
			['at-symbol'])),
		_Utils_Tuple2(
		22,
		_List_fromArray(
			['backspace'])),
		_Utils_Tuple2(
		23,
		_List_fromArray(
			['badge-check'])),
		_Utils_Tuple2(
		24,
		_List_fromArray(
			['ban'])),
		_Utils_Tuple2(
		25,
		_List_fromArray(
			['beaker'])),
		_Utils_Tuple2(
		26,
		_List_fromArray(
			['bell'])),
		_Utils_Tuple2(
		27,
		_List_fromArray(
			['book-open'])),
		_Utils_Tuple2(
		28,
		_List_fromArray(
			['bookmark'])),
		_Utils_Tuple2(
		29,
		_List_fromArray(
			['bookmark-alt'])),
		_Utils_Tuple2(
		30,
		_List_fromArray(
			['briefcase'])),
		_Utils_Tuple2(
		31,
		_List_fromArray(
			['cake'])),
		_Utils_Tuple2(
		32,
		_List_fromArray(
			['calculator'])),
		_Utils_Tuple2(
		33,
		_List_fromArray(
			['calendar'])),
		_Utils_Tuple2(
		34,
		_List_fromArray(
			['camera'])),
		_Utils_Tuple2(
		35,
		_List_fromArray(
			['cash'])),
		_Utils_Tuple2(
		36,
		_List_fromArray(
			['chart-bar'])),
		_Utils_Tuple2(
		37,
		_List_fromArray(
			['chart-pie'])),
		_Utils_Tuple2(
		38,
		_List_fromArray(
			['chart-square-bar'])),
		_Utils_Tuple2(
		39,
		_List_fromArray(
			['chat'])),
		_Utils_Tuple2(
		40,
		_List_fromArray(
			['chat-alt'])),
		_Utils_Tuple2(
		41,
		_List_fromArray(
			['chat-alt-2', 'chat-bubble-left-right'])),
		_Utils_Tuple2(
		42,
		_List_fromArray(
			['check'])),
		_Utils_Tuple2(
		43,
		_List_fromArray(
			['check-circle'])),
		_Utils_Tuple2(
		44,
		_List_fromArray(
			['chevron-double-down'])),
		_Utils_Tuple2(
		45,
		_List_fromArray(
			['chevron-double-left'])),
		_Utils_Tuple2(
		46,
		_List_fromArray(
			['chevron-double-right'])),
		_Utils_Tuple2(
		47,
		_List_fromArray(
			['chevron-double-up'])),
		_Utils_Tuple2(
		48,
		_List_fromArray(
			['chevron-down'])),
		_Utils_Tuple2(
		49,
		_List_fromArray(
			['chevron-left'])),
		_Utils_Tuple2(
		50,
		_List_fromArray(
			['chevron-right'])),
		_Utils_Tuple2(
		51,
		_List_fromArray(
			['chevron-up'])),
		_Utils_Tuple2(
		52,
		_List_fromArray(
			['chip'])),
		_Utils_Tuple2(
		53,
		_List_fromArray(
			['clipboard'])),
		_Utils_Tuple2(
		54,
		_List_fromArray(
			['clipboard-check'])),
		_Utils_Tuple2(
		55,
		_List_fromArray(
			['clipboard-copy'])),
		_Utils_Tuple2(
		56,
		_List_fromArray(
			['clipboard-list'])),
		_Utils_Tuple2(
		57,
		_List_fromArray(
			['clock'])),
		_Utils_Tuple2(
		58,
		_List_fromArray(
			['cloud'])),
		_Utils_Tuple2(
		59,
		_List_fromArray(
			['cloud-download'])),
		_Utils_Tuple2(
		60,
		_List_fromArray(
			['cloud-upload'])),
		_Utils_Tuple2(
		61,
		_List_fromArray(
			['code', 'code-bracket'])),
		_Utils_Tuple2(
		62,
		_List_fromArray(
			['cog'])),
		_Utils_Tuple2(
		63,
		_List_fromArray(
			['collection'])),
		_Utils_Tuple2(
		64,
		_List_fromArray(
			['color-swatch'])),
		_Utils_Tuple2(
		65,
		_List_fromArray(
			['credit-card'])),
		_Utils_Tuple2(
		66,
		_List_fromArray(
			['cube'])),
		_Utils_Tuple2(
		67,
		_List_fromArray(
			['cube-transparent'])),
		_Utils_Tuple2(
		68,
		_List_fromArray(
			['currency-bangladeshi'])),
		_Utils_Tuple2(
		69,
		_List_fromArray(
			['currency-dollar'])),
		_Utils_Tuple2(
		70,
		_List_fromArray(
			['currency-euro'])),
		_Utils_Tuple2(
		71,
		_List_fromArray(
			['currency-pound'])),
		_Utils_Tuple2(
		72,
		_List_fromArray(
			['currency-rupee'])),
		_Utils_Tuple2(
		73,
		_List_fromArray(
			['currency-yen'])),
		_Utils_Tuple2(
		74,
		_List_fromArray(
			['cursor-click'])),
		_Utils_Tuple2(
		75,
		_List_fromArray(
			['database', 'circle-stack'])),
		_Utils_Tuple2(
		76,
		_List_fromArray(
			['desktop-computer'])),
		_Utils_Tuple2(
		77,
		_List_fromArray(
			['device-mobile'])),
		_Utils_Tuple2(
		78,
		_List_fromArray(
			['device-tablet'])),
		_Utils_Tuple2(
		79,
		_List_fromArray(
			['document'])),
		_Utils_Tuple2(
		80,
		_List_fromArray(
			['document-add'])),
		_Utils_Tuple2(
		81,
		_List_fromArray(
			['document-download'])),
		_Utils_Tuple2(
		82,
		_List_fromArray(
			['document-duplicate'])),
		_Utils_Tuple2(
		83,
		_List_fromArray(
			['document-remove'])),
		_Utils_Tuple2(
		84,
		_List_fromArray(
			['document-report'])),
		_Utils_Tuple2(
		85,
		_List_fromArray(
			['document-search'])),
		_Utils_Tuple2(
		86,
		_List_fromArray(
			['document-text'])),
		_Utils_Tuple2(
		87,
		_List_fromArray(
			['dots-circle-horizontal'])),
		_Utils_Tuple2(
		88,
		_List_fromArray(
			['dots-horizontal'])),
		_Utils_Tuple2(
		89,
		_List_fromArray(
			['dots-vertical'])),
		_Utils_Tuple2(
		90,
		_List_fromArray(
			['download'])),
		_Utils_Tuple2(
		91,
		_List_fromArray(
			['duplicate'])),
		_Utils_Tuple2(
		92,
		_List_fromArray(
			['emoji-happy'])),
		_Utils_Tuple2(
		93,
		_List_fromArray(
			['emoji-sad'])),
		_Utils_Tuple2(
		94,
		_List_fromArray(
			['empty'])),
		_Utils_Tuple2(
		95,
		_List_fromArray(
			['exclamation'])),
		_Utils_Tuple2(
		96,
		_List_fromArray(
			['exclamation-circle'])),
		_Utils_Tuple2(
		97,
		_List_fromArray(
			['external-link'])),
		_Utils_Tuple2(
		98,
		_List_fromArray(
			['eye'])),
		_Utils_Tuple2(
		99,
		_List_fromArray(
			['eye-off'])),
		_Utils_Tuple2(
		100,
		_List_fromArray(
			['fast-forward'])),
		_Utils_Tuple2(
		101,
		_List_fromArray(
			['film'])),
		_Utils_Tuple2(
		102,
		_List_fromArray(
			['filter'])),
		_Utils_Tuple2(
		103,
		_List_fromArray(
			['finger-print'])),
		_Utils_Tuple2(
		104,
		_List_fromArray(
			['fire'])),
		_Utils_Tuple2(
		105,
		_List_fromArray(
			['flag'])),
		_Utils_Tuple2(
		106,
		_List_fromArray(
			['folder'])),
		_Utils_Tuple2(
		107,
		_List_fromArray(
			['folder-add'])),
		_Utils_Tuple2(
		108,
		_List_fromArray(
			['folder-download'])),
		_Utils_Tuple2(
		109,
		_List_fromArray(
			['folder-open'])),
		_Utils_Tuple2(
		110,
		_List_fromArray(
			['folder-remove'])),
		_Utils_Tuple2(
		111,
		_List_fromArray(
			['gift'])),
		_Utils_Tuple2(
		112,
		_List_fromArray(
			['globe'])),
		_Utils_Tuple2(
		113,
		_List_fromArray(
			['globe-alt'])),
		_Utils_Tuple2(
		114,
		_List_fromArray(
			['hand'])),
		_Utils_Tuple2(
		115,
		_List_fromArray(
			['hashtag'])),
		_Utils_Tuple2(
		116,
		_List_fromArray(
			['heart'])),
		_Utils_Tuple2(
		117,
		_List_fromArray(
			['home'])),
		_Utils_Tuple2(
		118,
		_List_fromArray(
			['identification'])),
		_Utils_Tuple2(
		119,
		_List_fromArray(
			['inbox'])),
		_Utils_Tuple2(
		120,
		_List_fromArray(
			['inbox-in'])),
		_Utils_Tuple2(
		121,
		_List_fromArray(
			['information-circle'])),
		_Utils_Tuple2(
		122,
		_List_fromArray(
			['key'])),
		_Utils_Tuple2(
		123,
		_List_fromArray(
			['library'])),
		_Utils_Tuple2(
		124,
		_List_fromArray(
			['light-bulb'])),
		_Utils_Tuple2(
		125,
		_List_fromArray(
			['lightning-bolt'])),
		_Utils_Tuple2(
		126,
		_List_fromArray(
			['link'])),
		_Utils_Tuple2(
		127,
		_List_fromArray(
			['location-marker'])),
		_Utils_Tuple2(
		128,
		_List_fromArray(
			['lock-closed'])),
		_Utils_Tuple2(
		129,
		_List_fromArray(
			['lock-open'])),
		_Utils_Tuple2(
		130,
		_List_fromArray(
			['login'])),
		_Utils_Tuple2(
		131,
		_List_fromArray(
			['logout'])),
		_Utils_Tuple2(
		132,
		_List_fromArray(
			['mail'])),
		_Utils_Tuple2(
		133,
		_List_fromArray(
			['mail-open'])),
		_Utils_Tuple2(
		134,
		_List_fromArray(
			['map'])),
		_Utils_Tuple2(
		135,
		_List_fromArray(
			['menu'])),
		_Utils_Tuple2(
		136,
		_List_fromArray(
			['menu-alt-1'])),
		_Utils_Tuple2(
		137,
		_List_fromArray(
			['menu-alt-2'])),
		_Utils_Tuple2(
		138,
		_List_fromArray(
			['menu-alt-3'])),
		_Utils_Tuple2(
		139,
		_List_fromArray(
			['menu-alt-4'])),
		_Utils_Tuple2(
		140,
		_List_fromArray(
			['microphone'])),
		_Utils_Tuple2(
		141,
		_List_fromArray(
			['minus'])),
		_Utils_Tuple2(
		142,
		_List_fromArray(
			['minus-circle'])),
		_Utils_Tuple2(
		143,
		_List_fromArray(
			['minus-sm'])),
		_Utils_Tuple2(
		144,
		_List_fromArray(
			['moon'])),
		_Utils_Tuple2(
		145,
		_List_fromArray(
			['music-note'])),
		_Utils_Tuple2(
		146,
		_List_fromArray(
			['newspaper'])),
		_Utils_Tuple2(
		147,
		_List_fromArray(
			['office-building'])),
		_Utils_Tuple2(
		148,
		_List_fromArray(
			['paper-airplane'])),
		_Utils_Tuple2(
		149,
		_List_fromArray(
			['paper-clip'])),
		_Utils_Tuple2(
		150,
		_List_fromArray(
			['pause'])),
		_Utils_Tuple2(
		151,
		_List_fromArray(
			['pencil'])),
		_Utils_Tuple2(
		152,
		_List_fromArray(
			['pencil-alt'])),
		_Utils_Tuple2(
		153,
		_List_fromArray(
			['phone'])),
		_Utils_Tuple2(
		154,
		_List_fromArray(
			['phone-incoming'])),
		_Utils_Tuple2(
		155,
		_List_fromArray(
			['phone-missed-call'])),
		_Utils_Tuple2(
		156,
		_List_fromArray(
			['phone-outgoing'])),
		_Utils_Tuple2(
		157,
		_List_fromArray(
			['photograph'])),
		_Utils_Tuple2(
		158,
		_List_fromArray(
			['play'])),
		_Utils_Tuple2(
		159,
		_List_fromArray(
			['plus'])),
		_Utils_Tuple2(
		160,
		_List_fromArray(
			['plus-circle'])),
		_Utils_Tuple2(
		161,
		_List_fromArray(
			['plus-sm'])),
		_Utils_Tuple2(
		162,
		_List_fromArray(
			['presentation-chart-bar'])),
		_Utils_Tuple2(
		163,
		_List_fromArray(
			['presentation-chart-line'])),
		_Utils_Tuple2(
		164,
		_List_fromArray(
			['printer'])),
		_Utils_Tuple2(
		165,
		_List_fromArray(
			['puzzle'])),
		_Utils_Tuple2(
		166,
		_List_fromArray(
			['qrcode'])),
		_Utils_Tuple2(
		167,
		_List_fromArray(
			['question-mark-circle'])),
		_Utils_Tuple2(
		168,
		_List_fromArray(
			['receipt-refund'])),
		_Utils_Tuple2(
		169,
		_List_fromArray(
			['receipt-tax'])),
		_Utils_Tuple2(
		170,
		_List_fromArray(
			['refresh'])),
		_Utils_Tuple2(
		171,
		_List_fromArray(
			['reply'])),
		_Utils_Tuple2(
		172,
		_List_fromArray(
			['rewind'])),
		_Utils_Tuple2(
		173,
		_List_fromArray(
			['rss'])),
		_Utils_Tuple2(
		174,
		_List_fromArray(
			['save'])),
		_Utils_Tuple2(
		175,
		_List_fromArray(
			['save-as'])),
		_Utils_Tuple2(
		176,
		_List_fromArray(
			['scale'])),
		_Utils_Tuple2(
		177,
		_List_fromArray(
			['scissors'])),
		_Utils_Tuple2(
		178,
		_List_fromArray(
			['search'])),
		_Utils_Tuple2(
		179,
		_List_fromArray(
			['search-circle'])),
		_Utils_Tuple2(
		180,
		_List_fromArray(
			['selector'])),
		_Utils_Tuple2(
		181,
		_List_fromArray(
			['server'])),
		_Utils_Tuple2(
		182,
		_List_fromArray(
			['share'])),
		_Utils_Tuple2(
		183,
		_List_fromArray(
			['shield-check'])),
		_Utils_Tuple2(
		184,
		_List_fromArray(
			['shield-exclamation'])),
		_Utils_Tuple2(
		185,
		_List_fromArray(
			['shopping-bag'])),
		_Utils_Tuple2(
		186,
		_List_fromArray(
			['shopping-cart'])),
		_Utils_Tuple2(
		187,
		_List_fromArray(
			['sort-ascending'])),
		_Utils_Tuple2(
		188,
		_List_fromArray(
			['sort-descending'])),
		_Utils_Tuple2(
		189,
		_List_fromArray(
			['sparkles'])),
		_Utils_Tuple2(
		190,
		_List_fromArray(
			['speakerphone'])),
		_Utils_Tuple2(
		191,
		_List_fromArray(
			['star'])),
		_Utils_Tuple2(
		192,
		_List_fromArray(
			['status-offline'])),
		_Utils_Tuple2(
		193,
		_List_fromArray(
			['status-online'])),
		_Utils_Tuple2(
		194,
		_List_fromArray(
			['stop'])),
		_Utils_Tuple2(
		195,
		_List_fromArray(
			['sun'])),
		_Utils_Tuple2(
		196,
		_List_fromArray(
			['support'])),
		_Utils_Tuple2(
		197,
		_List_fromArray(
			['switch-horizontal'])),
		_Utils_Tuple2(
		198,
		_List_fromArray(
			['switch-vertical'])),
		_Utils_Tuple2(
		199,
		_List_fromArray(
			['table'])),
		_Utils_Tuple2(
		200,
		_List_fromArray(
			['tag'])),
		_Utils_Tuple2(
		201,
		_List_fromArray(
			['template', 'rectangle-group'])),
		_Utils_Tuple2(
		202,
		_List_fromArray(
			['terminal'])),
		_Utils_Tuple2(
		203,
		_List_fromArray(
			['thumb-down'])),
		_Utils_Tuple2(
		204,
		_List_fromArray(
			['thumb-up'])),
		_Utils_Tuple2(
		205,
		_List_fromArray(
			['ticket'])),
		_Utils_Tuple2(
		206,
		_List_fromArray(
			['translate'])),
		_Utils_Tuple2(
		207,
		_List_fromArray(
			['trash'])),
		_Utils_Tuple2(
		208,
		_List_fromArray(
			['trending-down'])),
		_Utils_Tuple2(
		209,
		_List_fromArray(
			['trending-up'])),
		_Utils_Tuple2(
		210,
		_List_fromArray(
			['truck'])),
		_Utils_Tuple2(
		211,
		_List_fromArray(
			['upload'])),
		_Utils_Tuple2(
		212,
		_List_fromArray(
			['user'])),
		_Utils_Tuple2(
		213,
		_List_fromArray(
			['user-add'])),
		_Utils_Tuple2(
		214,
		_List_fromArray(
			['user-circle'])),
		_Utils_Tuple2(
		215,
		_List_fromArray(
			['user-group'])),
		_Utils_Tuple2(
		216,
		_List_fromArray(
			['user-remove'])),
		_Utils_Tuple2(
		217,
		_List_fromArray(
			['users'])),
		_Utils_Tuple2(
		218,
		_List_fromArray(
			['variable'])),
		_Utils_Tuple2(
		219,
		_List_fromArray(
			['video-camera'])),
		_Utils_Tuple2(
		220,
		_List_fromArray(
			['view-boards'])),
		_Utils_Tuple2(
		221,
		_List_fromArray(
			['view-grid'])),
		_Utils_Tuple2(
		222,
		_List_fromArray(
			['view-grid-add'])),
		_Utils_Tuple2(
		223,
		_List_fromArray(
			['view-list'])),
		_Utils_Tuple2(
		224,
		_List_fromArray(
			['volume-off'])),
		_Utils_Tuple2(
		225,
		_List_fromArray(
			['volume-up'])),
		_Utils_Tuple2(
		226,
		_List_fromArray(
			['wifi'])),
		_Utils_Tuple2(
		227,
		_List_fromArray(
			['x'])),
		_Utils_Tuple2(
		228,
		_List_fromArray(
			['x-circle'])),
		_Utils_Tuple2(
		229,
		_List_fromArray(
			['zoom-in'])),
		_Utils_Tuple2(
		230,
		_List_fromArray(
			['zoom-out']))
	]);
var $author$project$Components$Atoms$Icon$toString = function (icon) {
	return A2(
		$elm$core$Maybe$andThen,
		$elm$core$List$head,
		A2(
			$elm$core$Maybe$map,
			$elm$core$Tuple$second,
			A2(
				$author$project$Libs$List$find,
				function (_v0) {
					var i = _v0.a;
					return _Utils_eq(i, icon);
				},
				$author$project$Components$Atoms$Icon$iconNames)));
};
var $author$project$Libs$Html$Attributes$ariaHidden = function (value) {
	return A2(
		$elm$html$Html$Attributes$attribute,
		'aria-hidden',
		$author$project$Libs$Bool$toString(value));
};
var $elm$svg$Svg$Attributes$class = _VirtualDom_attribute('class');
var $author$project$Libs$Svg$Attributes$css = function (values) {
	return $elm$svg$Svg$Attributes$class(
		$author$project$Libs$Html$Attributes$styles(values));
};
var $elm$svg$Svg$Attributes$d = _VirtualDom_attribute('d');
var $elm$svg$Svg$Attributes$fill = _VirtualDom_attribute('fill');
var $elm$svg$Svg$trustedNode = _VirtualDom_nodeNS('http://www.w3.org/2000/svg');
var $elm$svg$Svg$path = $elm$svg$Svg$trustedNode('path');
var $elm$svg$Svg$Attributes$stroke = _VirtualDom_attribute('stroke');
var $elm$svg$Svg$Attributes$strokeLinecap = _VirtualDom_attribute('stroke-linecap');
var $elm$svg$Svg$Attributes$strokeLinejoin = _VirtualDom_attribute('stroke-linejoin');
var $elm$svg$Svg$Attributes$strokeWidth = _VirtualDom_attribute('stroke-width');
var $elm$svg$Svg$svg = $elm$svg$Svg$trustedNode('svg');
var $author$project$Libs$Svg$Attributes$vectorEffect = function (value) {
	return A2($elm$html$Html$Attributes$attribute, 'vector-effect', value);
};
var $elm$svg$Svg$Attributes$viewBox = _VirtualDom_attribute('viewBox');
var $author$project$Components$Atoms$Icon$viewOutline = F2(
	function (lines, styles) {
		return A2(
			$elm$svg$Svg$svg,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$viewBox('0 0 24 24'),
					$elm$svg$Svg$Attributes$fill('none'),
					$elm$svg$Svg$Attributes$stroke('currentColor'),
					$author$project$Libs$Html$Attributes$ariaHidden(true),
					$author$project$Libs$Svg$Attributes$css(
					_List_fromArray(
						['flex-shrink-0', styles]))
				]),
			A2(
				$elm$core$List$map,
				function (line) {
					return A2(
						$elm$svg$Svg$path,
						_List_fromArray(
							[
								$elm$svg$Svg$Attributes$d(line),
								$elm$svg$Svg$Attributes$strokeLinecap('round'),
								$elm$svg$Svg$Attributes$strokeLinejoin('round'),
								$elm$svg$Svg$Attributes$strokeWidth('2'),
								$author$project$Libs$Svg$Attributes$vectorEffect('non-scaling-stroke')
							]),
						_List_Nil);
				},
				lines));
	});
var $author$project$Components$Atoms$Icon$outline = F2(
	function (icon, styles) {
		return function (lines) {
			return A2($author$project$Components$Atoms$Icon$viewOutline, lines, 'h-6 w-6 ' + styles);
		}(
			A3(
				$author$project$Libs$Maybe$mapOrElse,
				function ($) {
					return $.a;
				},
				_List_Nil,
				A2(
					$elm$core$Dict$get,
					A2(
						$elm$core$Maybe$withDefault,
						'',
						$author$project$Components$Atoms$Icon$toString(icon)),
					$author$project$Components$Atoms$Icon$icons)));
	});
var $elm$html$Html$p = _VirtualDom_node('p');
var $elm$svg$Svg$Attributes$clipRule = _VirtualDom_attribute('clip-rule');
var $elm$svg$Svg$Attributes$fillRule = _VirtualDom_attribute('fill-rule');
var $author$project$Components$Atoms$Icon$viewSolid = F2(
	function (lines, styles) {
		return A2(
			$elm$svg$Svg$svg,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$viewBox('0 0 20 20'),
					$elm$svg$Svg$Attributes$fill('currentColor'),
					$author$project$Libs$Html$Attributes$ariaHidden(true),
					$author$project$Libs$Svg$Attributes$css(
					_List_fromArray(
						['flex-shrink-0', styles]))
				]),
			A2(
				$elm$core$List$map,
				function (line) {
					return A2(
						$elm$svg$Svg$path,
						_List_fromArray(
							[
								$elm$svg$Svg$Attributes$d(line),
								$elm$svg$Svg$Attributes$fillRule('evenodd'),
								$elm$svg$Svg$Attributes$clipRule('evenodd')
							]),
						_List_Nil);
				},
				lines));
	});
var $author$project$Components$Atoms$Icon$solid = F2(
	function (icon, styles) {
		return function (lines) {
			return A2($author$project$Components$Atoms$Icon$viewSolid, lines, 'h-5 w-5 ' + styles);
		}(
			A3(
				$author$project$Libs$Maybe$mapOrElse,
				function ($) {
					return $.b;
				},
				_List_Nil,
				A2(
					$elm$core$Dict$get,
					A2(
						$elm$core$Maybe$withDefault,
						'',
						$author$project$Components$Atoms$Icon$toString(icon)),
					$author$project$Components$Atoms$Icon$icons)));
	});
var $elm$html$Html$span = _VirtualDom_node('span');
var $author$project$Libs$Tailwind$text_400 = function (_v0) {
	var color = _v0;
	return 'text-' + (color + '-400');
};
var $author$project$Libs$Tailwind$batch = function (classes) {
	return A2(
		$elm$core$String$join,
		' ',
		A2(
			$elm$core$List$filter,
			function (v) {
				return v !== '';
			},
			A2($elm$core$List$map, $elm$core$String$trim, classes)));
};
var $author$project$Libs$Tailwind$sm = $author$project$Libs$Tailwind$addState('sm');
var $author$project$Components$Molecules$Toast$toast = F2(
	function (content, isOpen) {
		var toastBlock = isOpen ? $author$project$Libs$Tailwind$batch(
			_List_fromArray(
				[
					'transition ease-in duration-100 opacity-100 transform translate-y-0',
					$author$project$Libs$Tailwind$sm(
					_List_fromArray(
						['translate-x-2']))
				])) : $author$project$Libs$Tailwind$batch(
			_List_fromArray(
				[
					'transition ease-out duration-300 opacity-0 transform translate-y-2 pointer-events-none',
					$author$project$Libs$Tailwind$sm(
					_List_fromArray(
						['translate-y-0 translate-x-0']))
				]));
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$author$project$Libs$Html$Attributes$css(
					_List_fromArray(
						['max-w-sm w-full bg-white shadow-lg rounded-lg pointer-events-auto ring-1 ring-black ring-opacity-5 overflow-hidden', toastBlock]))
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('p-4')
						]),
					_List_fromArray(
						[content]))
				]));
	});
var $author$project$Components$Molecules$Toast$simple = F3(
	function (onClose, isOpen, model) {
		return A2(
			$author$project$Components$Molecules$Toast$toast,
			A2(
				$elm$html$Html$div,
				_List_fromArray(
					[
						$elm$html$Html$Attributes$class('flex items-start')
					]),
				_List_fromArray(
					[
						A2(
						$elm$html$Html$div,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$class('flex-shrink-0')
							]),
						_List_fromArray(
							[
								A2(
								$author$project$Components$Atoms$Icon$outline,
								model.aa,
								$author$project$Libs$Tailwind$text_400(model.A))
							])),
						A2(
						$elm$html$Html$div,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$class('ml-3 w-0 flex-1 pt-0.5')
							]),
						_List_fromArray(
							[
								A2(
								$elm$html$Html$p,
								_List_fromArray(
									[
										$elm$html$Html$Attributes$class('text-sm font-medium text-gray-900')
									]),
								_List_fromArray(
									[
										$elm$html$Html$text(model.a4)
									])),
								A2(
								$elm$html$Html$p,
								_List_fromArray(
									[
										$elm$html$Html$Attributes$class('mt-1 text-sm text-gray-500')
									]),
								_List_fromArray(
									[
										$elm$html$Html$text(model.cq)
									]))
							])),
						A2(
						$elm$html$Html$div,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$class('ml-4 flex-shrink-0 flex')
							]),
						_List_fromArray(
							[
								A2(
								$elm$html$Html$button,
								_List_fromArray(
									[
										$elm$html$Html$Events$onClick(onClose),
										$author$project$Libs$Html$Attributes$css(
										_List_fromArray(
											[
												'bg-white rounded-md inline-flex text-gray-400',
												$author$project$Libs$Tailwind$hover(
												_List_fromArray(
													['text-gray-500'])),
												$author$project$Libs$Tailwind$focus_ring_500($author$project$Libs$Tailwind$primary)
											]))
									]),
								_List_fromArray(
									[
										A2(
										$elm$html$Html$span,
										_List_fromArray(
											[
												$elm$html$Html$Attributes$class('sr-only')
											]),
										_List_fromArray(
											[
												$elm$html$Html$text('Close')
											])),
										A2($author$project$Components$Atoms$Icon$solid, 227, '')
									]))
							]))
					])),
			isOpen);
	});
var $author$project$Components$Molecules$Toast$render = F2(
	function (onClose, model) {
		var _v0 = model.cX;
		var content = _v0;
		return _Utils_Tuple2(
			model.dk,
			A3($author$project$Components$Molecules$Toast$simple, onClose, model.bm, content));
	});
var $author$project$Components$Molecules$Toast$container = F2(
	function (toasts, close) {
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$author$project$Libs$Html$Attributes$ariaLive('assertive'),
					$author$project$Libs$Html$Attributes$css(
					_List_fromArray(
						[
							'fixed inset-0 flex items-end p-4 z-max pointer-events-none',
							$author$project$Libs$Tailwind$sm(
							_List_fromArray(
								['items-end']))
						]))
				]),
			_List_fromArray(
				[
					A3(
					$elm$html$Html$Keyed$node,
					'div',
					_List_fromArray(
						[
							$author$project$Libs$Html$Attributes$css(
							_List_fromArray(
								[
									'w-full flex flex-col items-center space-y-4',
									$author$project$Libs$Tailwind$sm(
									_List_fromArray(
										['items-start']))
								]))
						]),
					A2(
						$elm$core$List$map,
						function (t) {
							return A2(
								$author$project$Components$Molecules$Toast$render,
								close(t.dk),
								t);
						},
						toasts))
				]));
	});
var $author$project$Services$Toasts$view = F2(
	function (wrap, model) {
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('az-toasts')
				]),
			_List_fromArray(
				[
					A2(
					$author$project$Components$Molecules$Toast$container,
					model.bX,
					A2($elm$core$Basics$composeR, $author$project$Services$Toasts$ToastHide, wrap))
				]));
	});
var $author$project$PagesComponents$Create$Views$view = function (model) {
	return {
		kM: _List_fromArray(
			[
				$author$project$Components$Atoms$Loader$fullScreen,
				A3($elm$html$Html$Lazy$lazy2, $author$project$Services$Toasts$view, $author$project$PagesComponents$Create$Models$Toast, model.bX)
			]),
		a4: $author$project$PagesComponents$Create$Views$title
	};
};
var $author$project$Pages$Create$page = F2(
	function (shared, req) {
		var urlOrganization = $elm$core$Maybe$Nothing;
		return $author$project$Page$element(
			{
				bl: $author$project$PagesComponents$Create$Init$init(urlOrganization),
				by: $author$project$PagesComponents$Create$Subscriptions$subscriptions,
				fv: A5($author$project$PagesComponents$Create$Updates$update, req, shared.ne, shared.nQ, shared.nR, urlOrganization),
				o3: $author$project$PagesComponents$Create$Views$view
			});
	});
var $author$project$PagesComponents$Organization_$Project_$Components$EmbedSourceParsingDialog$EmbedDatabaseSource = function (a) {
	return {$: 0, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Components$EmbedSourceParsingDialog$EmbedJsonSource = function (a) {
	return {$: 2, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Models$EmbedSourceParsingMsg = function (a) {
	return {$: 48, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Components$EmbedSourceParsingDialog$EmbedSqlSource = function (a) {
	return {$: 1, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Models$JsMessage = function (a) {
	return {$: 80, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Models$ModalClose = function (a) {
	return {$: 79, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Models$ModalOpen = function (a) {
	return {$: 78, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Models$Noop = function (a) {
	return {$: 83, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Models$CursorMode$Select = 1;
var $author$project$PagesComponents$Organization_$Project_$Models$SourceParsed = function (a) {
	return {$: 49, a: a};
};
var $elm$core$Basics$composeL = F3(
	function (g, f, x) {
		return g(
			f(x));
	});
var $elm$core$List$all = F2(
	function (isOkay, list) {
		return !A2(
			$elm$core$List$any,
			A2($elm$core$Basics$composeL, $elm$core$Basics$not, isOkay),
			list);
	});
var $author$project$PagesComponents$Organization_$Project_$Models$EmbedMode$advanced = 'advanced';
var $author$project$PagesComponents$Organization_$Project_$Models$ErdConf$embedDefault = {fP: false, c8: false, fY: true, f3: true, bk: false, aM: false, mq: false, jb: false, hd: false, fa: false, fe: false, os: false, jW: false, fv: false};
var $author$project$PagesComponents$Organization_$Project_$Models$EmbedMode$frozen = 'frozen';
var $author$project$PagesComponents$Organization_$Project_$Models$EmbedMode$full = 'full';
var $author$project$PagesComponents$Organization_$Project_$Models$EmbedMode$layout = 'layout';
var $author$project$PagesComponents$Organization_$Project_$Models$EmbedMode$move = 'move';
var $author$project$PagesComponents$Organization_$Project_$Models$EmbedMode$static = 'static';
var $author$project$PagesComponents$Organization_$Project_$Models$EmbedMode$all = _List_fromArray(
	[
		{Z: $author$project$PagesComponents$Organization_$Project_$Models$ErdConf$embedDefault, bf: 'nothing move, like a image', H: $author$project$PagesComponents$Organization_$Project_$Models$EmbedMode$frozen},
		{
		Z: _Utils_update(
			$author$project$PagesComponents$Organization_$Project_$Models$ErdConf$embedDefault,
			{bk: true, fe: true}),
		bf: 'highlight on hover but no move',
		H: $author$project$PagesComponents$Organization_$Project_$Models$EmbedMode$static
	},
		{
		Z: _Utils_update(
			$author$project$PagesComponents$Organization_$Project_$Models$ErdConf$embedDefault,
			{bk: true, jb: true, fe: true}),
		bf: 'can move things but not more',
		H: $author$project$PagesComponents$Organization_$Project_$Models$EmbedMode$move
	},
		{
		Z: _Utils_update(
			$author$project$PagesComponents$Organization_$Project_$Models$ErdConf$embedDefault,
			{bk: true, aM: true, jb: true, fe: true}),
		bf: 'can update the layout',
		H: $author$project$PagesComponents$Organization_$Project_$Models$EmbedMode$layout
	},
		{
		Z: _Utils_update(
			$author$project$PagesComponents$Organization_$Project_$Models$ErdConf$embedDefault,
			{c8: true, bk: true, aM: true, jb: true, fe: true, jW: true}),
		bf: 'can seen and navigate between layouts',
		H: $author$project$PagesComponents$Organization_$Project_$Models$EmbedMode$advanced
	},
		{
		Z: _Utils_update(
			$author$project$PagesComponents$Organization_$Project_$Models$ErdConf$embedDefault,
			{c8: true, bk: true, aM: true, mq: true, jb: true, fe: true, jW: true}),
		bf: 'can do anything, except save',
		H: $author$project$PagesComponents$Organization_$Project_$Models$EmbedMode$full
	}
	]);
var $author$project$Libs$Http$decodeJson = F2(
	function (toMsg, decoder) {
		return $elm$http$Http$expectString(
			A2(
				$elm$core$Basics$composeR,
				$elm$core$Result$map(
					$elm$json$Json$Decode$decodeString(decoder)),
				toMsg));
	});
var $author$project$Libs$List$findBy = F3(
	function (matcher, value, list) {
		return A2(
			$author$project$Libs$List$find,
			function (a) {
				return _Utils_eq(
					matcher(a),
					value);
			},
			list);
	});
var $author$project$Ports$GetProject = F3(
	function (a, b, c) {
		return {$: 9, a: a, b: b, c: c};
	});
var $author$project$Ports$getProject = F3(
	function (organization, project, token) {
		return $author$project$Ports$messageToJs(
			A3($author$project$Ports$GetProject, organization, project, token));
	});
var $author$project$Libs$Models$Hotkey$hotkey = {fA: false, at: false, dk: '', nn: false, jy: false, hp: false, hH: $elm$core$Maybe$Nothing};
var $author$project$Conf$ids = {ks: 'aml-sidebar', k1: 'confirm-dialog', k9: 'custom-dialog', lr: 'details-sidebar', lx: 'edit-notes-dialog', lE: 'erd', lP: 'find-path-dialog', lZ: 'help-dialog', mS: 'modal', nT: 'prompt-dialog', oj: 'schema-analysis-dialog', fc: 'app-nav-search', op: 'selection-box', or: 'settings-dialog', ot: 'sharing-dialog', oz: 'source-parsing-dialog', oB: 'source-update-dialog'};
var $author$project$Libs$Models$Hotkey$target = {fL: $elm$core$Maybe$Nothing, H: $elm$core$Maybe$Nothing, hG: $elm$core$Maybe$Nothing};
var $author$project$Conf$hotkeys = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'search-open',
			_List_fromArray(
				[
					_Utils_update(
					$author$project$Libs$Models$Hotkey$hotkey,
					{dk: '/'})
				])),
			_Utils_Tuple2(
			'search-up',
			_List_fromArray(
				[
					_Utils_update(
					$author$project$Libs$Models$Hotkey$hotkey,
					{
						dk: 'ArrowUp',
						hH: $elm$core$Maybe$Just(
							_Utils_update(
								$author$project$Libs$Models$Hotkey$target,
								{
									H: $elm$core$Maybe$Just($author$project$Conf$ids.fc),
									hG: $elm$core$Maybe$Just('input')
								}))
					})
				])),
			_Utils_Tuple2(
			'search-down',
			_List_fromArray(
				[
					_Utils_update(
					$author$project$Libs$Models$Hotkey$hotkey,
					{
						dk: 'ArrowDown',
						hH: $elm$core$Maybe$Just(
							_Utils_update(
								$author$project$Libs$Models$Hotkey$target,
								{
									H: $elm$core$Maybe$Just($author$project$Conf$ids.fc),
									hG: $elm$core$Maybe$Just('input')
								}))
					})
				])),
			_Utils_Tuple2(
			'search-confirm',
			_List_fromArray(
				[
					_Utils_update(
					$author$project$Libs$Models$Hotkey$hotkey,
					{
						dk: 'Enter',
						hH: $elm$core$Maybe$Just(
							_Utils_update(
								$author$project$Libs$Models$Hotkey$target,
								{
									H: $elm$core$Maybe$Just($author$project$Conf$ids.fc),
									hG: $elm$core$Maybe$Just('input')
								}))
					})
				])),
			_Utils_Tuple2(
			'notes',
			_List_fromArray(
				[
					_Utils_update(
					$author$project$Libs$Models$Hotkey$hotkey,
					{dk: 'n'})
				])),
			_Utils_Tuple2(
			'new-memo',
			_List_fromArray(
				[
					_Utils_update(
					$author$project$Libs$Models$Hotkey$hotkey,
					{dk: 'm'})
				])),
			_Utils_Tuple2(
			'collapse',
			_List_fromArray(
				[
					_Utils_update(
					$author$project$Libs$Models$Hotkey$hotkey,
					{dk: 'c'})
				])),
			_Utils_Tuple2(
			'expand',
			_List_fromArray(
				[
					_Utils_update(
					$author$project$Libs$Models$Hotkey$hotkey,
					{at: true, dk: 'ArrowRight'})
				])),
			_Utils_Tuple2(
			'shrink',
			_List_fromArray(
				[
					_Utils_update(
					$author$project$Libs$Models$Hotkey$hotkey,
					{at: true, dk: 'ArrowLeft'})
				])),
			_Utils_Tuple2(
			'show',
			_List_fromArray(
				[
					_Utils_update(
					$author$project$Libs$Models$Hotkey$hotkey,
					{dk: 's'})
				])),
			_Utils_Tuple2(
			'hide',
			_List_fromArray(
				[
					_Utils_update(
					$author$project$Libs$Models$Hotkey$hotkey,
					{dk: 'h'}),
					_Utils_update(
					$author$project$Libs$Models$Hotkey$hotkey,
					{dk: 'Backspace'}),
					_Utils_update(
					$author$project$Libs$Models$Hotkey$hotkey,
					{dk: 'Delete'})
				])),
			_Utils_Tuple2(
			'save',
			_List_fromArray(
				[
					_Utils_update(
					$author$project$Libs$Models$Hotkey$hotkey,
					{at: true, dk: 's', nn: true, jy: true})
				])),
			_Utils_Tuple2(
			'move-up',
			_List_fromArray(
				[
					_Utils_update(
					$author$project$Libs$Models$Hotkey$hotkey,
					{dk: 'ArrowUp'})
				])),
			_Utils_Tuple2(
			'move-right',
			_List_fromArray(
				[
					_Utils_update(
					$author$project$Libs$Models$Hotkey$hotkey,
					{dk: 'ArrowRight'})
				])),
			_Utils_Tuple2(
			'move-down',
			_List_fromArray(
				[
					_Utils_update(
					$author$project$Libs$Models$Hotkey$hotkey,
					{dk: 'ArrowDown'})
				])),
			_Utils_Tuple2(
			'move-left',
			_List_fromArray(
				[
					_Utils_update(
					$author$project$Libs$Models$Hotkey$hotkey,
					{dk: 'ArrowLeft'})
				])),
			_Utils_Tuple2(
			'move-forward',
			_List_fromArray(
				[
					_Utils_update(
					$author$project$Libs$Models$Hotkey$hotkey,
					{at: true, dk: 'ArrowUp'})
				])),
			_Utils_Tuple2(
			'move-backward',
			_List_fromArray(
				[
					_Utils_update(
					$author$project$Libs$Models$Hotkey$hotkey,
					{at: true, dk: 'ArrowDown'})
				])),
			_Utils_Tuple2(
			'move-to-top',
			_List_fromArray(
				[
					_Utils_update(
					$author$project$Libs$Models$Hotkey$hotkey,
					{at: true, dk: 'ArrowUp', hp: true})
				])),
			_Utils_Tuple2(
			'move-to-back',
			_List_fromArray(
				[
					_Utils_update(
					$author$project$Libs$Models$Hotkey$hotkey,
					{at: true, dk: 'ArrowDown', hp: true})
				])),
			_Utils_Tuple2(
			'select-all',
			_List_fromArray(
				[
					_Utils_update(
					$author$project$Libs$Models$Hotkey$hotkey,
					{at: true, dk: 'a', jy: true})
				])),
			_Utils_Tuple2(
			'create-layout',
			_List_fromArray(
				[
					_Utils_update(
					$author$project$Libs$Models$Hotkey$hotkey,
					{fA: true, dk: 'l'})
				])),
			_Utils_Tuple2(
			'create-virtual-relation',
			_List_fromArray(
				[
					_Utils_update(
					$author$project$Libs$Models$Hotkey$hotkey,
					{fA: true, dk: 'v'})
				])),
			_Utils_Tuple2(
			'find-path',
			_List_fromArray(
				[
					_Utils_update(
					$author$project$Libs$Models$Hotkey$hotkey,
					{fA: true, dk: 'p'})
				])),
			_Utils_Tuple2(
			'reset-zoom',
			_List_fromArray(
				[
					_Utils_update(
					$author$project$Libs$Models$Hotkey$hotkey,
					{at: true, dk: '0'})
				])),
			_Utils_Tuple2(
			'fit-to-screen',
			_List_fromArray(
				[
					_Utils_update(
					$author$project$Libs$Models$Hotkey$hotkey,
					{fA: true, at: true, dk: '0'})
				])),
			_Utils_Tuple2(
			'undo',
			_List_fromArray(
				[
					_Utils_update(
					$author$project$Libs$Models$Hotkey$hotkey,
					{at: true, dk: 'z'})
				])),
			_Utils_Tuple2(
			'redo',
			_List_fromArray(
				[
					_Utils_update(
					$author$project$Libs$Models$Hotkey$hotkey,
					{at: true, dk: 'Z', hp: true})
				])),
			_Utils_Tuple2(
			'cancel',
			_List_fromArray(
				[
					_Utils_update(
					$author$project$Libs$Models$Hotkey$hotkey,
					{dk: 'Escape'})
				])),
			_Utils_Tuple2(
			'help',
			_List_fromArray(
				[
					_Utils_update(
					$author$project$Libs$Models$Hotkey$hotkey,
					{dk: '?'})
				]))
		]));
var $author$project$Libs$Maybe$any = F2(
	function (predicate, maybe) {
		return A2(
			$elm$core$Maybe$withDefault,
			false,
			A2($elm$core$Maybe$map, predicate, maybe));
	});
var $author$project$Services$SqlSource$hasErrors = function (parser) {
	return A2(
		$author$project$Libs$Maybe$any,
		A2(
			$elm$core$Basics$composeR,
			$elm$core$Dict$values,
			$elm$core$List$any(
				function (_v0) {
					var r = _v0.b;
					return $author$project$Libs$Result$isErr(r);
				})),
		parser.aV) || $author$project$Libs$List$nonEmpty(
		A3(
			$author$project$Libs$Maybe$mapOrElse,
			function ($) {
				return $.lG;
			},
			_List_Nil,
			parser.aI));
};
var $author$project$PagesComponents$Organization_$Project_$Components$EmbedSourceParsingDialog$init = F6(
	function (sourceParsed, modalClose, noop, databaseSource, sqlSource, jsonSource) {
		return A2(
			$elm$core$Maybe$map,
			function (_v0) {
				return {
					ca: A2(
						$elm$core$Maybe$map,
						function (_v1) {
							return A2(
								$author$project$Services$DatabaseSource$init,
								$elm$core$Maybe$Nothing,
								A2(
									$author$project$Libs$Result$fold,
									function (_v2) {
										return noop('embed-load-database-has-errors');
									},
									A2($elm$core$Basics$composeR, sourceParsed, modalClose)));
						},
						databaseSource),
					H: $author$project$Conf$ids.oz,
					cm: A2(
						$elm$core$Maybe$map,
						function (_v3) {
							return A2(
								$author$project$Services$JsonSource$init,
								$elm$core$Maybe$Nothing,
								A2(
									$author$project$Libs$Result$fold,
									function (_v4) {
										return noop('embed-load-json-has-errors');
									},
									A2($elm$core$Basics$composeR, sourceParsed, modalClose)));
						},
						jsonSource),
					cA: A2(
						$elm$core$Maybe$map,
						function (_v5) {
							return A2(
								$author$project$Services$SqlSource$init,
								$elm$core$Maybe$Nothing,
								function (_v6) {
									var parser = _v6.a;
									var source = _v6.b;
									return A2($author$project$Libs$Maybe$any, $author$project$Services$SqlSource$hasErrors, parser) ? noop('embed-parse-sql-has-errors') : A3(
										$author$project$Libs$Result$fold,
										function (_v7) {
											return noop('embed-load-sql-has-errors');
										},
										A2($elm$core$Basics$composeR, sourceParsed, modalClose),
										source);
								});
						},
						sqlSource)
				};
			},
			A2(
				$author$project$Libs$Maybe$orElse,
				jsonSource,
				A2($author$project$Libs$Maybe$orElse, sqlSource, databaseSource)));
	});
var $author$project$Ports$ListenKeys = function (a) {
	return {$: 22, a: a};
};
var $author$project$Ports$listenHotkeys = function (keys) {
	return $author$project$Ports$messageToJs(
		$author$project$Ports$ListenKeys(keys));
};
var $author$project$PagesComponents$Organization_$Project_$Models$EmbedKind$databaseSource = 'database-source';
var $author$project$PagesComponents$Organization_$Project_$Models$EmbedKind$jsonSource = 'json-source';
var $author$project$PagesComponents$Organization_$Project_$Models$EmbedMode$key = 'mode';
var $author$project$PagesComponents$Organization_$Project_$Models$EmbedKind$projectId = 'project-id';
var $author$project$PagesComponents$Organization_$Project_$Models$EmbedKind$projectUrl = 'project-url';
var $author$project$PagesComponents$Organization_$Project_$Models$EmbedKind$sqlSource = 'sql-source';
var $author$project$Pages$Embed$serializeQueryString = function (query) {
	return $elm$core$Dict$fromList(
		A2(
			$elm$core$List$filterMap,
			function (_v0) {
				var key = _v0.a;
				var maybeValue = _v0.b;
				return A2(
					$elm$core$Maybe$map,
					function (value) {
						return _Utils_Tuple2(key, value);
					},
					maybeValue);
			},
			_List_fromArray(
				[
					_Utils_Tuple2($author$project$PagesComponents$Organization_$Project_$Models$EmbedKind$projectId, query.cw),
					_Utils_Tuple2($author$project$PagesComponents$Organization_$Project_$Models$EmbedKind$projectUrl, query.dF),
					_Utils_Tuple2($author$project$PagesComponents$Organization_$Project_$Models$EmbedKind$databaseSource, query.ca),
					_Utils_Tuple2($author$project$PagesComponents$Organization_$Project_$Models$EmbedKind$sqlSource, query.cA),
					_Utils_Tuple2($author$project$PagesComponents$Organization_$Project_$Models$EmbedKind$jsonSource, query.cm),
					_Utils_Tuple2('layout', query.aM),
					_Utils_Tuple2($author$project$PagesComponents$Organization_$Project_$Models$EmbedMode$key, query.eQ)
				])));
};
var $author$project$PagesComponents$Organization_$Project_$Views$title = function (erd) {
	return A3(
		$author$project$Libs$Maybe$mapOrElse,
		function (e) {
			return e.nN.eS + ' - Azimutt';
		},
		$author$project$Conf$constants.li,
		erd);
};
var $author$project$Libs$Models$Position$move = F2(
	function (delta, position) {
		return A2($author$project$Libs$Models$Position$Position, position.C + delta.aY, position.ad + delta.aZ);
	});
var $author$project$Models$Position$moveViewport = F2(
	function (delta, _v0) {
		var pos = _v0;
		return $author$project$Models$Position$viewport(
			A2($author$project$Libs$Models$Position$move, delta, pos));
	});
var $author$project$Models$Position$zeroViewport = $author$project$Libs$Models$Position$zero;
var $author$project$Models$Size$zeroViewport = $author$project$Libs$Models$Size$zero;
var $author$project$Models$ErdProps$zero = {
	e$: A2(
		$author$project$Models$Position$moveViewport,
		{aY: 0, aZ: 64},
		$author$project$Models$Position$zeroViewport),
	ox: $author$project$Models$Size$zeroViewport
};
var $author$project$Pages$Embed$init = function (query) {
	return _Utils_Tuple2(
		{
			kr: $elm$core$Maybe$Nothing,
			k$: $elm$core$Dict$empty,
			Z: A3(
				$author$project$Libs$Maybe$mapOrElse,
				function ($) {
					return $.Z;
				},
				$author$project$PagesComponents$Organization_$Project_$Models$ErdConf$embedDefault,
				A2(
					$elm$core$Maybe$andThen,
					function (mode) {
						return A3(
							$author$project$Libs$List$findBy,
							function ($) {
								return $.H;
							},
							mode,
							$author$project$PagesComponents$Organization_$Project_$Models$EmbedMode$all);
					},
					query.eQ)),
			b8: $elm$core$Maybe$Nothing,
			k3: $elm$core$Maybe$Nothing,
			k8: 1,
			lq: $elm$core$Maybe$Nothing,
			ls: false,
			ep: $elm$core$Maybe$Nothing,
			lw: $elm$core$Maybe$Nothing,
			_: $elm$core$Maybe$Nothing,
			lB: A6($author$project$PagesComponents$Organization_$Project_$Components$EmbedSourceParsingDialog$init, $author$project$PagesComponents$Organization_$Project_$Models$SourceParsed, $author$project$PagesComponents$Organization_$Project_$Models$ModalClose, $author$project$PagesComponents$Organization_$Project_$Models$Noop, query.ca, query.cA, query.cm),
			lE: $elm$core$Maybe$Nothing,
			lF: $author$project$Models$ErdProps$zero,
			c8: $elm$core$Maybe$Nothing,
			lY: $elm$core$Maybe$Nothing,
			l1: $elm$core$Maybe$Nothing,
			l2: $elm$core$Maybe$Nothing,
			mt: A2(
				$elm$core$List$all,
				function (a) {
					return _Utils_eq(a, $elm$core$Maybe$Nothing);
				},
				_List_fromArray(
					[query.cw, query.dF, query.ca, query.cA, query.cm])),
			mS: $elm$core$Maybe$Nothing,
			m$: {
				mR: false,
				fb: {bb: 0, fp: ''}
			},
			m3: $elm$core$Maybe$Nothing,
			nt: _List_Nil,
			jo: '',
			eX: '',
			nS: $elm$core$Maybe$Nothing,
			fa: $elm$core$Maybe$Nothing,
			oi: $elm$core$Maybe$Nothing,
			op: $elm$core$Maybe$Nothing,
			dM: $elm$core$Maybe$Nothing,
			os: $elm$core$Maybe$Nothing,
			oA: $elm$core$Maybe$Nothing,
			oL: $elm$core$Dict$empty,
			bX: $author$project$Services$Toasts$init,
			o4: $elm$core$Maybe$Nothing
		},
		$elm$core$Platform$Cmd$batch(
			_Utils_ap(
				_List_fromArray(
					[
						$author$project$Ports$setMeta(
						{
							kM: $elm$core$Maybe$Just('h-full overflow-hidden'),
							kQ: $elm$core$Maybe$Just(
								{
									e1: $author$project$Pages$Embed$serializeQueryString(query),
									hk: $author$project$Gen$Route$Embed
								}),
							bf: $elm$core$Maybe$Just($author$project$Conf$constants.lg),
							l4: $elm$core$Maybe$Just('h-full'),
							a4: $elm$core$Maybe$Just(
								$author$project$PagesComponents$Organization_$Project_$Views$title($elm$core$Maybe$Nothing))
						}),
						$author$project$Ports$listenHotkeys($author$project$Conf$hotkeys)
					]),
				A2(
					$elm$core$Maybe$withDefault,
					_List_Nil,
					A2(
						$author$project$Libs$Maybe$orElse,
						A2(
							$elm$core$Maybe$map,
							function (url) {
								return _List_fromArray(
									[
										$author$project$Libs$Task$send(
										$author$project$PagesComponents$Organization_$Project_$Models$EmbedSourceParsingMsg(
											$author$project$PagesComponents$Organization_$Project_$Components$EmbedSourceParsingDialog$EmbedJsonSource(
												$author$project$Services$JsonSource$GetRemoteFile(url)))),
										A2(
										$author$project$Libs$Task$sendAfter,
										1,
										$author$project$PagesComponents$Organization_$Project_$Models$ModalOpen($author$project$Conf$ids.oz))
									]);
							},
							query.cm),
						A2(
							$author$project$Libs$Maybe$orElse,
							A2(
								$elm$core$Maybe$map,
								function (url) {
									return _List_fromArray(
										[
											$author$project$Libs$Task$send(
											$author$project$PagesComponents$Organization_$Project_$Models$EmbedSourceParsingMsg(
												$author$project$PagesComponents$Organization_$Project_$Components$EmbedSourceParsingDialog$EmbedSqlSource(
													$author$project$Services$SqlSource$GetRemoteFile(url)))),
											A2(
											$author$project$Libs$Task$sendAfter,
											1,
											$author$project$PagesComponents$Organization_$Project_$Models$ModalOpen($author$project$Conf$ids.oz))
										]);
								},
								query.cA),
							A2(
								$author$project$Libs$Maybe$orElse,
								A2(
									$elm$core$Maybe$map,
									function (url) {
										return _List_fromArray(
											[
												$author$project$Libs$Task$send(
												$author$project$PagesComponents$Organization_$Project_$Models$EmbedSourceParsingMsg(
													$author$project$PagesComponents$Organization_$Project_$Components$EmbedSourceParsingDialog$EmbedDatabaseSource(
														$author$project$Services$DatabaseSource$GetSchema(url)))),
												A2(
												$author$project$Libs$Task$sendAfter,
												1,
												$author$project$PagesComponents$Organization_$Project_$Models$ModalOpen($author$project$Conf$ids.oz))
											]);
									},
									query.ca),
								A2(
									$author$project$Libs$Maybe$orElse,
									A2(
										$elm$core$Maybe$map,
										function (url) {
											return _List_fromArray(
												[
													$elm$http$Http$get(
													{
														lI: A2(
															$author$project$Libs$Http$decodeJson,
															A2(
																$elm$core$Basics$composeR,
																$elm$core$Result$toMaybe,
																A2($elm$core$Basics$composeR, $author$project$Ports$GotProject, $author$project$PagesComponents$Organization_$Project_$Models$JsMessage)),
															$author$project$Models$Project$decode),
														o1: url
													})
												]);
										},
										query.dF),
									A2(
										$elm$core$Maybe$map,
										function (id) {
											return _List_fromArray(
												[
													A3($author$project$Ports$getProject, $author$project$Models$OrganizationId$zero, id, query.hL)
												]);
										},
										query.cw)))))))));
};
var $author$project$PagesComponents$Organization_$Project_$Models$EmbedKind$sourceUrl = 'source-url';
var $author$project$Pages$Embed$parseQueryString = function (query) {
	return {
		ca: A2($elm$core$Dict$get, $author$project$PagesComponents$Organization_$Project_$Models$EmbedKind$databaseSource, query),
		cm: A2($elm$core$Dict$get, $author$project$PagesComponents$Organization_$Project_$Models$EmbedKind$jsonSource, query),
		aM: A2($elm$core$Dict$get, 'layout', query),
		eQ: A2($elm$core$Dict$get, $author$project$PagesComponents$Organization_$Project_$Models$EmbedMode$key, query),
		cw: A2($elm$core$Dict$get, $author$project$PagesComponents$Organization_$Project_$Models$EmbedKind$projectId, query),
		dF: A2($elm$core$Dict$get, $author$project$PagesComponents$Organization_$Project_$Models$EmbedKind$projectUrl, query),
		cA: A2(
			$author$project$Libs$Maybe$orElse,
			A2($elm$core$Dict$get, $author$project$PagesComponents$Organization_$Project_$Models$EmbedKind$sourceUrl, query),
			A2($elm$core$Dict$get, $author$project$PagesComponents$Organization_$Project_$Models$EmbedKind$sqlSource, query)),
		hL: A2($elm$core$Dict$get, 'token', query)
	};
};
var $author$project$PagesComponents$Organization_$Project_$Models$ContextMenuClose = {$: 65};
var $author$project$PagesComponents$Organization_$Project_$Models$DragEnd = function (a) {
	return {$: 68, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Models$DragMove = function (a) {
	return {$: 67, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Models$DropdownToggle = function (a) {
	return {$: 59, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Models$VRMove = function (a) {
	return {$: 2, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Models$VirtualRelationMsg = function (a) {
	return {$: 42, a: a};
};
var $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$Event = F6(
	function (keys, button, clientPos, offsetPos, pagePos, screenPos) {
		return {kO: button, h3: clientPos, mi: keys, nh: offsetPos, js: pagePos, ok: screenPos};
	});
var $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$BackButton = 4;
var $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$ErrorButton = 0;
var $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$ForwardButton = 5;
var $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$MainButton = 1;
var $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$MiddleButton = 2;
var $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$SecondButton = 3;
var $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$buttonFromId = function (id) {
	switch (id) {
		case 0:
			return 1;
		case 1:
			return 2;
		case 2:
			return 3;
		case 3:
			return 4;
		case 4:
			return 5;
		default:
			return 0;
	}
};
var $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$buttonDecoder = A2(
	$elm$json$Json$Decode$map,
	$mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$buttonFromId,
	A2($elm$json$Json$Decode$field, 'button', $elm$json$Json$Decode$int));
var $mpizenberg$elm_pointer_events$Internal$Decode$clientPos = A3(
	$elm$json$Json$Decode$map2,
	F2(
		function (a, b) {
			return _Utils_Tuple2(a, b);
		}),
	A2($elm$json$Json$Decode$field, 'clientX', $elm$json$Json$Decode$float),
	A2($elm$json$Json$Decode$field, 'clientY', $elm$json$Json$Decode$float));
var $mpizenberg$elm_pointer_events$Internal$Decode$Keys = F3(
	function (alt, ctrl, shift) {
		return {fA: alt, at: ctrl, hp: shift};
	});
var $mpizenberg$elm_pointer_events$Internal$Decode$keys = A4(
	$elm$json$Json$Decode$map3,
	$mpizenberg$elm_pointer_events$Internal$Decode$Keys,
	A2($elm$json$Json$Decode$field, 'altKey', $elm$json$Json$Decode$bool),
	A2($elm$json$Json$Decode$field, 'ctrlKey', $elm$json$Json$Decode$bool),
	A2($elm$json$Json$Decode$field, 'shiftKey', $elm$json$Json$Decode$bool));
var $mpizenberg$elm_pointer_events$Internal$Decode$offsetPos = A3(
	$elm$json$Json$Decode$map2,
	F2(
		function (a, b) {
			return _Utils_Tuple2(a, b);
		}),
	A2($elm$json$Json$Decode$field, 'offsetX', $elm$json$Json$Decode$float),
	A2($elm$json$Json$Decode$field, 'offsetY', $elm$json$Json$Decode$float));
var $mpizenberg$elm_pointer_events$Internal$Decode$pagePos = A3(
	$elm$json$Json$Decode$map2,
	F2(
		function (a, b) {
			return _Utils_Tuple2(a, b);
		}),
	A2($elm$json$Json$Decode$field, 'pageX', $elm$json$Json$Decode$float),
	A2($elm$json$Json$Decode$field, 'pageY', $elm$json$Json$Decode$float));
var $mpizenberg$elm_pointer_events$Internal$Decode$screenPos = A3(
	$elm$json$Json$Decode$map2,
	F2(
		function (a, b) {
			return _Utils_Tuple2(a, b);
		}),
	A2($elm$json$Json$Decode$field, 'screenX', $elm$json$Json$Decode$float),
	A2($elm$json$Json$Decode$field, 'screenY', $elm$json$Json$Decode$float));
var $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$eventDecoder = A7($elm$json$Json$Decode$map6, $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$Event, $mpizenberg$elm_pointer_events$Internal$Decode$keys, $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$buttonDecoder, $mpizenberg$elm_pointer_events$Internal$Decode$clientPos, $mpizenberg$elm_pointer_events$Internal$Decode$offsetPos, $mpizenberg$elm_pointer_events$Internal$Decode$pagePos, $mpizenberg$elm_pointer_events$Internal$Decode$screenPos);
var $author$project$Models$Position$fromEventViewport = function (e) {
	return $author$project$Models$Position$viewport(
		function (_v0) {
			var l = _v0.a;
			var t = _v0.b;
			return A2($author$project$Libs$Models$Position$Position, l, t);
		}(e.h3));
};
var $elm$browser$Browser$Events$Document = 0;
var $elm$browser$Browser$Events$MySub = F3(
	function (a, b, c) {
		return {$: 0, a: a, b: b, c: c};
	});
var $elm$browser$Browser$Events$State = F2(
	function (subs, pids) {
		return {ju: pids, j1: subs};
	});
var $elm$browser$Browser$Events$init = $elm$core$Task$succeed(
	A2($elm$browser$Browser$Events$State, _List_Nil, $elm$core$Dict$empty));
var $elm$browser$Browser$Events$nodeToKey = function (node) {
	if (!node) {
		return 'd_';
	} else {
		return 'w_';
	}
};
var $elm$browser$Browser$Events$addKey = function (sub) {
	var node = sub.a;
	var name = sub.b;
	return _Utils_Tuple2(
		_Utils_ap(
			$elm$browser$Browser$Events$nodeToKey(node),
			name),
		sub);
};
var $elm$browser$Browser$Events$Event = F2(
	function (key, event) {
		return {it: event, dk: key};
	});
var $elm$browser$Browser$Events$spawn = F3(
	function (router, key, _v0) {
		var node = _v0.a;
		var name = _v0.b;
		var actualNode = function () {
			if (!node) {
				return _Browser_doc;
			} else {
				return _Browser_window;
			}
		}();
		return A2(
			$elm$core$Task$map,
			function (value) {
				return _Utils_Tuple2(key, value);
			},
			A3(
				_Browser_on,
				actualNode,
				name,
				function (event) {
					return A2(
						$elm$core$Platform$sendToSelf,
						router,
						A2($elm$browser$Browser$Events$Event, key, event));
				}));
	});
var $elm$core$Dict$union = F2(
	function (t1, t2) {
		return A3($elm$core$Dict$foldl, $elm$core$Dict$insert, t2, t1);
	});
var $elm$browser$Browser$Events$onEffects = F3(
	function (router, subs, state) {
		var stepRight = F3(
			function (key, sub, _v6) {
				var deads = _v6.a;
				var lives = _v6.b;
				var news = _v6.c;
				return _Utils_Tuple3(
					deads,
					lives,
					A2(
						$elm$core$List$cons,
						A3($elm$browser$Browser$Events$spawn, router, key, sub),
						news));
			});
		var stepLeft = F3(
			function (_v4, pid, _v5) {
				var deads = _v5.a;
				var lives = _v5.b;
				var news = _v5.c;
				return _Utils_Tuple3(
					A2($elm$core$List$cons, pid, deads),
					lives,
					news);
			});
		var stepBoth = F4(
			function (key, pid, _v2, _v3) {
				var deads = _v3.a;
				var lives = _v3.b;
				var news = _v3.c;
				return _Utils_Tuple3(
					deads,
					A3($elm$core$Dict$insert, key, pid, lives),
					news);
			});
		var newSubs = A2($elm$core$List$map, $elm$browser$Browser$Events$addKey, subs);
		var _v0 = A6(
			$elm$core$Dict$merge,
			stepLeft,
			stepBoth,
			stepRight,
			state.ju,
			$elm$core$Dict$fromList(newSubs),
			_Utils_Tuple3(_List_Nil, $elm$core$Dict$empty, _List_Nil));
		var deadPids = _v0.a;
		var livePids = _v0.b;
		var makeNewPids = _v0.c;
		return A2(
			$elm$core$Task$andThen,
			function (pids) {
				return $elm$core$Task$succeed(
					A2(
						$elm$browser$Browser$Events$State,
						newSubs,
						A2(
							$elm$core$Dict$union,
							livePids,
							$elm$core$Dict$fromList(pids))));
			},
			A2(
				$elm$core$Task$andThen,
				function (_v1) {
					return $elm$core$Task$sequence(makeNewPids);
				},
				$elm$core$Task$sequence(
					A2($elm$core$List$map, $elm$core$Process$kill, deadPids))));
	});
var $elm$browser$Browser$Events$onSelfMsg = F3(
	function (router, _v0, state) {
		var key = _v0.dk;
		var event = _v0.it;
		var toMessage = function (_v2) {
			var subKey = _v2.a;
			var _v3 = _v2.b;
			var node = _v3.a;
			var name = _v3.b;
			var decoder = _v3.c;
			return _Utils_eq(subKey, key) ? A2(_Browser_decodeEvent, decoder, event) : $elm$core$Maybe$Nothing;
		};
		var messages = A2($elm$core$List$filterMap, toMessage, state.j1);
		return A2(
			$elm$core$Task$andThen,
			function (_v1) {
				return $elm$core$Task$succeed(state);
			},
			$elm$core$Task$sequence(
				A2(
					$elm$core$List$map,
					$elm$core$Platform$sendToApp(router),
					messages)));
	});
var $elm$browser$Browser$Events$subMap = F2(
	function (func, _v0) {
		var node = _v0.a;
		var name = _v0.b;
		var decoder = _v0.c;
		return A3(
			$elm$browser$Browser$Events$MySub,
			node,
			name,
			A2($elm$json$Json$Decode$map, func, decoder));
	});
_Platform_effectManagers['Browser.Events'] = _Platform_createManager($elm$browser$Browser$Events$init, $elm$browser$Browser$Events$onEffects, $elm$browser$Browser$Events$onSelfMsg, 0, $elm$browser$Browser$Events$subMap);
var $elm$browser$Browser$Events$subscription = _Platform_leaf('Browser.Events');
var $elm$browser$Browser$Events$on = F3(
	function (node, name, decoder) {
		return $elm$browser$Browser$Events$subscription(
			A3($elm$browser$Browser$Events$MySub, node, name, decoder));
	});
var $elm$browser$Browser$Events$onClick = A2($elm$browser$Browser$Events$on, 0, 'click');
var $elm$browser$Browser$Events$onMouseMove = A2($elm$browser$Browser$Events$on, 0, 'mousemove');
var $elm$browser$Browser$Events$onMouseUp = A2($elm$browser$Browser$Events$on, 0, 'mouseup');
var $elm$json$Json$Decode$at = F2(
	function (fields, decoder) {
		return A3($elm$core$List$foldr, $elm$json$Json$Decode$field, decoder, fields);
	});
var $author$project$Libs$Json$Decode$filter = F2(
	function (predicate, decoder) {
		return A2(
			$elm$json$Json$Decode$andThen,
			function (a) {
				return predicate(a) ? $elm$json$Json$Decode$succeed(a) : $elm$json$Json$Decode$fail('Invalid predicate');
			},
			decoder);
	});
var $author$project$Components$Molecules$Dropdown$targetIdDecoder = A2(
	$elm$json$Json$Decode$field,
	'target',
	$elm$json$Json$Decode$oneOf(
		_List_fromArray(
			[
				A2(
				$author$project$Libs$Json$Decode$filter,
				function (id) {
					return id !== '';
				},
				A2(
					$elm$json$Json$Decode$at,
					_List_fromArray(
						['id']),
					$elm$json$Json$Decode$string)),
				A2(
				$author$project$Libs$Json$Decode$filter,
				function (id) {
					return id !== '';
				},
				A2(
					$elm$json$Json$Decode$at,
					_List_fromArray(
						['parentElement', 'id']),
					$elm$json$Json$Decode$string)),
				A2(
				$author$project$Libs$Json$Decode$filter,
				function (id) {
					return id !== '';
				},
				A2(
					$elm$json$Json$Decode$at,
					_List_fromArray(
						['parentElement', 'parentElement', 'id']),
					$elm$json$Json$Decode$string)),
				A2(
				$author$project$Libs$Json$Decode$filter,
				function (id) {
					return id !== '';
				},
				A2(
					$elm$json$Json$Decode$at,
					_List_fromArray(
						['parentElement', 'parentElement', 'parentElement', 'id']),
					$elm$json$Json$Decode$string)),
				A2(
				$author$project$Libs$Json$Decode$filter,
				function (id) {
					return id !== '';
				},
				A2(
					$elm$json$Json$Decode$at,
					_List_fromArray(
						['parentElement', 'parentElement', 'parentElement', 'parentElement', 'id']),
					$elm$json$Json$Decode$string)),
				A2(
				$author$project$Libs$Json$Decode$filter,
				function (id) {
					return id !== '';
				},
				A2(
					$elm$json$Json$Decode$at,
					_List_fromArray(
						['parentElement', 'parentElement', 'parentElement', 'parentElement', 'parentElement', 'id']),
					$elm$json$Json$Decode$string)),
				$elm$json$Json$Decode$succeed('')
			])));
var $author$project$Components$Molecules$Dropdown$subs = F3(
	function (model, toggle, noop) {
		return (model.jo === '') ? _List_Nil : _List_fromArray(
			[
				$elm$browser$Browser$Events$onClick(
				A2(
					$elm$json$Json$Decode$map,
					function (id) {
						return A3(
							$author$project$Libs$Bool$cond,
							_Utils_eq(id, model.jo),
							noop,
							toggle(id));
					},
					$author$project$Components$Molecules$Dropdown$targetIdDecoder))
			]);
	});
var $author$project$PagesComponents$Organization_$Project_$Subscriptions$subscriptions = function (model) {
	return $elm$core$Platform$Sub$batch(
		_Utils_ap(
			_List_fromArray(
				[
					$author$project$Ports$onJsMessage($author$project$PagesComponents$Organization_$Project_$Models$JsMessage)
				]),
			_Utils_ap(
				A3(
					$author$project$Components$Molecules$Dropdown$subs,
					model,
					$author$project$PagesComponents$Organization_$Project_$Models$DropdownToggle,
					$author$project$PagesComponents$Organization_$Project_$Models$Noop('dropdown already opened')),
				_Utils_ap(
					A3(
						$author$project$Libs$Bool$cond,
						_Utils_eq(model.k3, $elm$core$Maybe$Nothing),
						_List_Nil,
						_List_fromArray(
							[
								$elm$browser$Browser$Events$onClick(
								$elm$json$Json$Decode$succeed($author$project$PagesComponents$Organization_$Project_$Models$ContextMenuClose))
							])),
					_Utils_ap(
						A3(
							$author$project$Libs$Maybe$mapOrElse,
							function (_v0) {
								return _List_fromArray(
									[
										$elm$browser$Browser$Events$onMouseMove(
										A2(
											$elm$json$Json$Decode$map,
											A2($elm$core$Basics$composeR, $author$project$Models$Position$fromEventViewport, $author$project$PagesComponents$Organization_$Project_$Models$DragMove),
											$mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$eventDecoder)),
										$elm$browser$Browser$Events$onMouseUp(
										A2(
											$elm$json$Json$Decode$map,
											A2($elm$core$Basics$composeR, $author$project$Models$Position$fromEventViewport, $author$project$PagesComponents$Organization_$Project_$Models$DragEnd),
											$mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$eventDecoder))
									]);
							},
							_List_Nil,
							model.ep),
						A3(
							$author$project$Libs$Maybe$mapOrElse,
							function (_v1) {
								return _List_fromArray(
									[
										$elm$browser$Browser$Events$onMouseMove(
										A2(
											$elm$json$Json$Decode$map,
											A2(
												$elm$core$Basics$composeR,
												$author$project$Models$Position$fromEventViewport,
												A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Models$VRMove, $author$project$PagesComponents$Organization_$Project_$Models$VirtualRelationMsg)),
											$mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$eventDecoder))
									]);
							},
							_List_Nil,
							model.o4))))));
};
var $author$project$PagesComponents$Organization_$Project_$Models$ContextMenuShow = {$: 64};
var $author$project$PagesComponents$Organization_$Project_$Models$CreateUserSourceWithId = function (a) {
	return {$: 34, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Models$CustomModalOpen = function (a) {
	return {$: 71, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Models$GoToTable = function (a) {
	return {$: 9, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Models$NotesMsg = function (a) {
	return {$: 38, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Models$ProPlanColors = F2(
	function (a, b) {
		return {$: 50, a: a, b: b};
	});
var $author$project$PagesComponents$Organization_$Project_$Models$SharingMsg = function (a) {
	return {$: 45, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Models$ShowTable = F2(
	function (a, b) {
		return {$: 10, a: a, b: b};
	});
var $author$project$PagesComponents$Organization_$Project_$Models$Toast = function (a) {
	return {$: 70, a: a};
};
var $author$project$Libs$List$add = F2(
	function (item, list) {
		return _Utils_ap(
			list,
			_List_fromArray(
				[item]));
	});
var $elm_community$graph$Graph$Edge = F3(
	function (from, to, label) {
		return {bK: from, cn: label, oT: to};
	});
var $goyalarchit$elm_dagre$Dagre$Attributes$LR = 2;
var $elm_community$graph$Graph$Node = F2(
	function (id, label) {
		return {H: id, cn: label};
	});
var $author$project$PagesComponents$Organization_$Project_$Models$DiagramObject$area = function (o) {
	if (!o.$) {
		var t = o.a;
		return {e$: t.nU.e$, ox: t.nU.ox};
	} else {
		var m = o.a;
		return {e$: m.e$, ox: m.ox};
	}
};
var $author$project$Models$Position$Canvas = $elm$core$Basics$identity;
var $author$project$Models$Position$canvas = function (pos) {
	return pos;
};
var $author$project$Libs$Models$Position$diff = F2(
	function (b, a) {
		return A2($author$project$Libs$Models$Delta$Delta, a.C - b.C, a.ad - b.ad);
	});
var $author$project$Models$Position$diffCanvas = F2(
	function (_v0, _v1) {
		var to = _v0;
		var from = _v1;
		return A2($author$project$Libs$Models$Position$diff, to, from);
	});
var $author$project$Models$Size$extractCanvas = function (_v0) {
	var size = _v0;
	return size;
};
var $author$project$Libs$List$filterInBy = F3(
	function (matcher, limit, list) {
		return A2(
			$elm$core$List$filter,
			function (a) {
				return A2(
					$elm$core$List$member,
					matcher(a),
					limit);
			},
			list);
	});
var $author$project$PagesComponents$Organization_$Project_$Models$DiagramObject$Memo = function (a) {
	return {$: 1, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Models$DiagramObject$fromMemo = function (m) {
	return $author$project$PagesComponents$Organization_$Project_$Models$DiagramObject$Memo(m);
};
var $elm_community$graph$Graph$Graph = $elm$core$Basics$identity;
var $elm_community$graph$Graph$NodeContext = F3(
	function (node, incoming, outgoing) {
		return {t: incoming, ak: node, q: outgoing};
	});
var $elm_community$intdict$IntDict$Empty = {$: 0};
var $elm_community$intdict$IntDict$empty = $elm_community$intdict$IntDict$Empty;
var $elm_community$intdict$IntDict$Inner = function (a) {
	return {$: 2, a: a};
};
var $elm_community$intdict$IntDict$size = function (dict) {
	switch (dict.$) {
		case 0:
			return 0;
		case 1:
			return 1;
		default:
			var i = dict.a;
			return i.ox;
	}
};
var $elm_community$intdict$IntDict$inner = F3(
	function (p, l, r) {
		var _v0 = _Utils_Tuple2(l, r);
		if (!_v0.a.$) {
			var _v1 = _v0.a;
			return r;
		} else {
			if (!_v0.b.$) {
				var _v2 = _v0.b;
				return l;
			} else {
				return $elm_community$intdict$IntDict$Inner(
					{
						C: l,
						o: p,
						k: r,
						ox: $elm_community$intdict$IntDict$size(l) + $elm_community$intdict$IntDict$size(r)
					});
			}
		}
	});
var $elm$core$Bitwise$complement = _Bitwise_complement;
var $elm_community$intdict$IntDict$highestBitSet = function (n) {
	var shiftOr = F2(
		function (i, shift) {
			return i | (i >>> shift);
		});
	var n1 = A2(shiftOr, n, 1);
	var n2 = A2(shiftOr, n1, 2);
	var n3 = A2(shiftOr, n2, 4);
	var n4 = A2(shiftOr, n3, 8);
	var n5 = A2(shiftOr, n4, 16);
	return n5 & (~(n5 >>> 1));
};
var $elm_community$intdict$IntDict$signBit = $elm_community$intdict$IntDict$highestBitSet(-1);
var $elm_community$intdict$IntDict$isBranchingBitSet = function (p) {
	return A2(
		$elm$core$Basics$composeR,
		$elm$core$Bitwise$xor($elm_community$intdict$IntDict$signBit),
		A2(
			$elm$core$Basics$composeR,
			$elm$core$Bitwise$and(p.b5),
			$elm$core$Basics$neq(0)));
};
var $elm_community$intdict$IntDict$higherBitMask = function (branchingBit) {
	return branchingBit ^ (~(branchingBit - 1));
};
var $elm_community$intdict$IntDict$lcp = F2(
	function (x, y) {
		var branchingBit = $elm_community$intdict$IntDict$highestBitSet(x ^ y);
		var mask = $elm_community$intdict$IntDict$higherBitMask(branchingBit);
		var prefixBits = x & mask;
		return {b5: branchingBit, aQ: prefixBits};
	});
var $elm_community$intdict$IntDict$Leaf = function (a) {
	return {$: 1, a: a};
};
var $elm_community$intdict$IntDict$leaf = F2(
	function (k, v) {
		return $elm_community$intdict$IntDict$Leaf(
			{dk: k, a5: v});
	});
var $elm_community$intdict$IntDict$prefixMatches = F2(
	function (p, n) {
		return _Utils_eq(
			n & $elm_community$intdict$IntDict$higherBitMask(p.b5),
			p.aQ);
	});
var $elm_community$intdict$IntDict$update = F3(
	function (key, alter, dict) {
		var join = F2(
			function (_v2, _v3) {
				var k1 = _v2.a;
				var l = _v2.b;
				var k2 = _v3.a;
				var r = _v3.b;
				var prefix = A2($elm_community$intdict$IntDict$lcp, k1, k2);
				return A2($elm_community$intdict$IntDict$isBranchingBitSet, prefix, k2) ? A3($elm_community$intdict$IntDict$inner, prefix, l, r) : A3($elm_community$intdict$IntDict$inner, prefix, r, l);
			});
		var alteredNode = function (mv) {
			var _v1 = alter(mv);
			if (!_v1.$) {
				var v = _v1.a;
				return A2($elm_community$intdict$IntDict$leaf, key, v);
			} else {
				return $elm_community$intdict$IntDict$empty;
			}
		};
		switch (dict.$) {
			case 0:
				return alteredNode($elm$core$Maybe$Nothing);
			case 1:
				var l = dict.a;
				return _Utils_eq(l.dk, key) ? alteredNode(
					$elm$core$Maybe$Just(l.a5)) : A2(
					join,
					_Utils_Tuple2(
						key,
						alteredNode($elm$core$Maybe$Nothing)),
					_Utils_Tuple2(l.dk, dict));
			default:
				var i = dict.a;
				return A2($elm_community$intdict$IntDict$prefixMatches, i.o, key) ? (A2($elm_community$intdict$IntDict$isBranchingBitSet, i.o, key) ? A3(
					$elm_community$intdict$IntDict$inner,
					i.o,
					i.C,
					A3($elm_community$intdict$IntDict$update, key, alter, i.k)) : A3(
					$elm_community$intdict$IntDict$inner,
					i.o,
					A3($elm_community$intdict$IntDict$update, key, alter, i.C),
					i.k)) : A2(
					join,
					_Utils_Tuple2(
						key,
						alteredNode($elm$core$Maybe$Nothing)),
					_Utils_Tuple2(i.o.aQ, dict));
		}
	});
var $elm_community$intdict$IntDict$insert = F3(
	function (key, value, dict) {
		return A3(
			$elm_community$intdict$IntDict$update,
			key,
			$elm$core$Basics$always(
				$elm$core$Maybe$Just(value)),
			dict);
	});
var $elm_community$intdict$IntDict$get = F2(
	function (key, dict) {
		get:
		while (true) {
			switch (dict.$) {
				case 0:
					return $elm$core$Maybe$Nothing;
				case 1:
					var l = dict.a;
					return _Utils_eq(l.dk, key) ? $elm$core$Maybe$Just(l.a5) : $elm$core$Maybe$Nothing;
				default:
					var i = dict.a;
					if (!A2($elm_community$intdict$IntDict$prefixMatches, i.o, key)) {
						return $elm$core$Maybe$Nothing;
					} else {
						if (A2($elm_community$intdict$IntDict$isBranchingBitSet, i.o, key)) {
							var $temp$key = key,
								$temp$dict = i.k;
							key = $temp$key;
							dict = $temp$dict;
							continue get;
						} else {
							var $temp$key = key,
								$temp$dict = i.C;
							key = $temp$key;
							dict = $temp$dict;
							continue get;
						}
					}
			}
		}
	});
var $elm_community$intdict$IntDict$member = F2(
	function (key, dict) {
		var _v0 = A2($elm_community$intdict$IntDict$get, key, dict);
		if (!_v0.$) {
			return true;
		} else {
			return false;
		}
	});
var $elm_community$graph$Graph$fromNodesAndEdges = F2(
	function (nodes_, edges_) {
		var nodeRep = A3(
			$elm$core$List$foldl,
			function (n) {
				return A2(
					$elm_community$intdict$IntDict$insert,
					n.H,
					A3($elm_community$graph$Graph$NodeContext, n, $elm_community$intdict$IntDict$empty, $elm_community$intdict$IntDict$empty));
			},
			$elm_community$intdict$IntDict$empty,
			nodes_);
		var addEdge = F2(
			function (edge, rep) {
				var updateOutgoing = function (ctx) {
					return _Utils_update(
						ctx,
						{
							q: A3($elm_community$intdict$IntDict$insert, edge.oT, edge.cn, ctx.q)
						});
				};
				var updateIncoming = function (ctx) {
					return _Utils_update(
						ctx,
						{
							t: A3($elm_community$intdict$IntDict$insert, edge.bK, edge.cn, ctx.t)
						});
				};
				return A3(
					$elm_community$intdict$IntDict$update,
					edge.oT,
					$elm$core$Maybe$map(updateIncoming),
					A3(
						$elm_community$intdict$IntDict$update,
						edge.bK,
						$elm$core$Maybe$map(updateOutgoing),
						rep));
			});
		var addEdgeIfValid = F2(
			function (edge, rep) {
				return (A2($elm_community$intdict$IntDict$member, edge.bK, rep) && A2($elm_community$intdict$IntDict$member, edge.oT, rep)) ? A2(addEdge, edge, rep) : rep;
			});
		return A3($elm$core$List$foldl, addEdgeIfValid, nodeRep, edges_);
	});
var $author$project$PagesComponents$Organization_$Project_$Models$DiagramObject$Table = function (a) {
	return {$: 0, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Models$DiagramObject$fromTable = function (t) {
	return $author$project$PagesComponents$Organization_$Project_$Models$DiagramObject$Table(t);
};
var $author$project$Libs$Models$Position$fromTuple = function (_v0) {
	var left = _v0.a;
	var top = _v0.b;
	return A2($author$project$Libs$Models$Position$Position, left, top);
};
var $elm$core$Basics$abs = function (n) {
	return (n < 0) ? (-n) : n;
};
var $goyalarchit$elm_dagre$Dagre$Attributes$heightDict = function (dict) {
	var absDict = A2(
		$elm$core$Dict$map,
		F2(
			function (_v0, v) {
				return $elm$core$Basics$abs(v);
			}),
		dict);
	return function (a) {
		return _Utils_update(
			a,
			{lX: absDict});
	};
};
var $author$project$Services$Lenses$setMemos = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.gw;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{gw: value});
		}));
var $author$project$Services$Lenses$mapMemos = A2(
	$author$project$Services$Lenses$map_,
	function ($) {
		return $.gw;
	},
	$author$project$Services$Lenses$setMemos);
var $author$project$Services$Lenses$setProps = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.nU;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{nU: value});
		}));
var $author$project$Services$Lenses$mapProps = A2(
	$author$project$Services$Lenses$map_,
	function ($) {
		return $.nU;
	},
	$author$project$Services$Lenses$setProps);
var $author$project$Services$Lenses$setTables = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.oM;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{oM: value});
		}));
var $author$project$Services$Lenses$mapTables = A2(
	$author$project$Services$Lenses$map_,
	function ($) {
		return $.oM;
	},
	$author$project$Services$Lenses$setTables);
var $author$project$Libs$Models$Area$Area = F2(
	function (position, size) {
		return {e$: position, ox: size};
	});
var $author$project$Models$Area$Canvas = F2(
	function (position, size) {
		return {e$: position, ox: size};
	});
var $author$project$Models$Position$extractCanvas = function (_v0) {
	var pos = _v0;
	return pos;
};
var $elm$core$Maybe$map4 = F5(
	function (func, ma, mb, mc, md) {
		if (ma.$ === 1) {
			return $elm$core$Maybe$Nothing;
		} else {
			var a = ma.a;
			if (mb.$ === 1) {
				return $elm$core$Maybe$Nothing;
			} else {
				var b = mb.a;
				if (mc.$ === 1) {
					return $elm$core$Maybe$Nothing;
				} else {
					var c = mc.a;
					if (md.$ === 1) {
						return $elm$core$Maybe$Nothing;
					} else {
						var d = md.a;
						return $elm$core$Maybe$Just(
							A4(func, a, b, c, d));
					}
				}
			}
		}
	});
var $elm$core$Basics$min = F2(
	function (x, y) {
		return (_Utils_cmp(x, y) < 0) ? x : y;
	});
var $elm$core$List$minimum = function (list) {
	if (list.b) {
		var x = list.a;
		var xs = list.b;
		return $elm$core$Maybe$Just(
			A3($elm$core$List$foldl, $elm$core$Basics$min, x, xs));
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $author$project$Libs$Models$Area$merge = function (areas) {
	return A5(
		$elm$core$Maybe$map4,
		F4(
			function (left, top, right, bottom) {
				return A2(
					$author$project$Libs$Models$Area$Area,
					A2($author$project$Libs$Models$Position$Position, left, top),
					A2($author$project$Libs$Models$Size$Size, right - left, bottom - top));
			}),
		$elm$core$List$minimum(
			A2(
				$elm$core$List$map,
				function (area) {
					return area.e$.C;
				},
				areas)),
		$elm$core$List$minimum(
			A2(
				$elm$core$List$map,
				function (area) {
					return area.e$.ad;
				},
				areas)),
		$elm$core$List$maximum(
			A2(
				$elm$core$List$map,
				function (area) {
					return area.e$.C + area.ox.bB;
				},
				areas)),
		$elm$core$List$maximum(
			A2(
				$elm$core$List$map,
				function (area) {
					return area.e$.ad + area.ox.bj;
				},
				areas)));
};
var $author$project$Models$Area$mergeCanvas = function (areas) {
	return A2(
		$elm$core$Maybe$map,
		function (_v1) {
			var position = _v1.e$;
			var size = _v1.ox;
			return A2(
				$author$project$Models$Area$Canvas,
				$author$project$Models$Position$canvas(position),
				$author$project$Models$Size$canvas(size));
		},
		$author$project$Libs$Models$Area$merge(
			A2(
				$elm$core$List$map,
				function (_v0) {
					var position = _v0.e$;
					var size = _v0.ox;
					return A2(
						$author$project$Libs$Models$Area$Area,
						$author$project$Models$Position$extractCanvas(position),
						$author$project$Models$Size$extractCanvas(size));
				},
				areas)));
};
var $author$project$Libs$Models$Position$min = F2(
	function (p1, p2) {
		return A2(
			$author$project$Libs$Models$Position$Position,
			A2($elm$core$Basics$min, p1.C, p2.C),
			A2($elm$core$Basics$min, p1.ad, p2.ad));
	});
var $author$project$Models$Position$minCanvas = F2(
	function (_v0, _v1) {
		var p1 = _v0;
		var p2 = _v1;
		return $author$project$Models$Position$canvas(
			A2($author$project$Libs$Models$Position$min, p1, p2));
	});
var $author$project$Models$Position$moveCanvas = F2(
	function (delta, _v0) {
		var pos = _v0;
		return $author$project$Models$Position$canvas(
			A2($author$project$Libs$Models$Position$move, delta, pos));
	});
var $author$project$Models$Position$offGrid = function (_v0) {
	var pos = _v0;
	return $author$project$Models$Position$canvas(pos);
};
var $author$project$Models$Area$offGrid = function (area) {
	return A2(
		$author$project$Models$Area$Canvas,
		$author$project$Models$Position$offGrid(area.e$),
		area.ox);
};
var $author$project$Models$Position$onGrid = function (_v0) {
	var pos = _v0;
	return $author$project$Models$Position$grid(pos);
};
var $goyalarchit$elm_dagre$Dagre$Attributes$rankDir = function (rDir) {
	return function (a) {
		return _Utils_update(
			a,
			{nV: rDir});
	};
};
var $author$project$Libs$List$reduce = F2(
	function (func, list) {
		if (!list.b) {
			return $elm$core$Maybe$Nothing;
		} else {
			var x = list.a;
			var xs = list.b;
			return $elm$core$Maybe$Just(
				A3($elm$core$List$foldl, func, x, xs));
		}
	});
var $elm_community$list_extra$List$Extra$findIndexHelp = F3(
	function (index, predicate, list) {
		findIndexHelp:
		while (true) {
			if (!list.b) {
				return $elm$core$Maybe$Nothing;
			} else {
				var x = list.a;
				var xs = list.b;
				if (predicate(x)) {
					return $elm$core$Maybe$Just(index);
				} else {
					var $temp$index = index + 1,
						$temp$predicate = predicate,
						$temp$list = xs;
					index = $temp$index;
					predicate = $temp$predicate;
					list = $temp$list;
					continue findIndexHelp;
				}
			}
		}
	});
var $elm_community$list_extra$List$Extra$findIndex = $elm_community$list_extra$List$Extra$findIndexHelp(0);
var $goyalarchit$elm_dagre$Dagre$Utils$getRank = F2(
	function (nodeId, layers) {
		var _v0 = A2(
			$elm_community$list_extra$List$Extra$findIndex,
			$elm$core$List$member(nodeId),
			layers);
		if (!_v0.$) {
			var x = _v0.a;
			return x;
		} else {
			return -1;
		}
	});
var $elm_community$list_extra$List$Extra$indexedFoldl = F3(
	function (func, acc, list) {
		var step = F2(
			function (x, _v0) {
				var i = _v0.a;
				var thisAcc = _v0.b;
				return _Utils_Tuple2(
					i + 1,
					A3(func, i, x, thisAcc));
			});
		return A3(
			$elm$core$List$foldl,
			step,
			_Utils_Tuple2(0, acc),
			list).b;
	});
var $elm$core$List$takeReverse = F3(
	function (n, list, kept) {
		takeReverse:
		while (true) {
			if (n <= 0) {
				return kept;
			} else {
				if (!list.b) {
					return kept;
				} else {
					var x = list.a;
					var xs = list.b;
					var $temp$n = n - 1,
						$temp$list = xs,
						$temp$kept = A2($elm$core$List$cons, x, kept);
					n = $temp$n;
					list = $temp$list;
					kept = $temp$kept;
					continue takeReverse;
				}
			}
		}
	});
var $elm$core$List$takeTailRec = F2(
	function (n, list) {
		return $elm$core$List$reverse(
			A3($elm$core$List$takeReverse, n, list, _List_Nil));
	});
var $elm$core$List$takeFast = F3(
	function (ctr, n, list) {
		if (n <= 0) {
			return _List_Nil;
		} else {
			var _v0 = _Utils_Tuple2(n, list);
			_v0$1:
			while (true) {
				_v0$5:
				while (true) {
					if (!_v0.b.b) {
						return list;
					} else {
						if (_v0.b.b.b) {
							switch (_v0.a) {
								case 1:
									break _v0$1;
								case 2:
									var _v2 = _v0.b;
									var x = _v2.a;
									var _v3 = _v2.b;
									var y = _v3.a;
									return _List_fromArray(
										[x, y]);
								case 3:
									if (_v0.b.b.b.b) {
										var _v4 = _v0.b;
										var x = _v4.a;
										var _v5 = _v4.b;
										var y = _v5.a;
										var _v6 = _v5.b;
										var z = _v6.a;
										return _List_fromArray(
											[x, y, z]);
									} else {
										break _v0$5;
									}
								default:
									if (_v0.b.b.b.b && _v0.b.b.b.b.b) {
										var _v7 = _v0.b;
										var x = _v7.a;
										var _v8 = _v7.b;
										var y = _v8.a;
										var _v9 = _v8.b;
										var z = _v9.a;
										var _v10 = _v9.b;
										var w = _v10.a;
										var tl = _v10.b;
										return (ctr > 1000) ? A2(
											$elm$core$List$cons,
											x,
											A2(
												$elm$core$List$cons,
												y,
												A2(
													$elm$core$List$cons,
													z,
													A2(
														$elm$core$List$cons,
														w,
														A2($elm$core$List$takeTailRec, n - 4, tl))))) : A2(
											$elm$core$List$cons,
											x,
											A2(
												$elm$core$List$cons,
												y,
												A2(
													$elm$core$List$cons,
													z,
													A2(
														$elm$core$List$cons,
														w,
														A3($elm$core$List$takeFast, ctr + 1, n - 4, tl)))));
									} else {
										break _v0$5;
									}
							}
						} else {
							if (_v0.a === 1) {
								break _v0$1;
							} else {
								break _v0$5;
							}
						}
					}
				}
				return list;
			}
			var _v1 = _v0.b;
			var x = _v1.a;
			return _List_fromArray(
				[x]);
		}
	});
var $elm$core$List$take = F2(
	function (n, list) {
		return A3($elm$core$List$takeFast, 0, n, list);
	});
var $elm_community$list_extra$List$Extra$updateAt = F3(
	function (index, fn, list) {
		if (index < 0) {
			return list;
		} else {
			var tail = A2($elm$core$List$drop, index, list);
			if (tail.b) {
				var x = tail.a;
				var xs = tail.b;
				return _Utils_ap(
					A2($elm$core$List$take, index, list),
					A2(
						$elm$core$List$cons,
						fn(x),
						xs));
			} else {
				return list;
			}
		}
	});
var $goyalarchit$elm_dagre$Dagre$Normalize$insertKNodesIntoKSubsequentLayers = F3(
	function (rankLayers, startRank, dummyNodes) {
		return A3(
			$elm_community$list_extra$List$Extra$indexedFoldl,
			F3(
				function (p, e, layers) {
					return A3(
						$elm_community$list_extra$List$Extra$updateAt,
						startRank + p,
						function (layer) {
							return A2(
								$elm$core$List$append,
								layer,
								_List_fromArray(
									[e]));
						},
						layers);
				}),
			rankLayers,
			dummyNodes);
	});
var $goyalarchit$elm_dagre$Dagre$Utils$getEdgesFromPath = function (path) {
	var tos = A2($elm$core$List$drop, 1, path);
	var froms = A2(
		$elm$core$List$take,
		$elm$core$List$length(path) - 1,
		path);
	return A3(
		$elm$core$List$map2,
		F2(
			function (from, to) {
				return _Utils_Tuple2(from, to);
			}),
		froms,
		tos);
};
var $elm_community$list_extra$List$Extra$reverseAppend = F2(
	function (list1, list2) {
		return A3($elm$core$List$foldl, $elm$core$List$cons, list2, list1);
	});
var $elm_community$list_extra$List$Extra$removeHelp = F4(
	function (list, x, xs, previousElements) {
		removeHelp:
		while (true) {
			if (!xs.b) {
				return list;
			} else {
				var y = xs.a;
				var ys = xs.b;
				if (_Utils_eq(x, y)) {
					return A2($elm_community$list_extra$List$Extra$reverseAppend, previousElements, ys);
				} else {
					var $temp$list = list,
						$temp$x = x,
						$temp$xs = ys,
						$temp$previousElements = A2($elm$core$List$cons, y, previousElements);
					list = $temp$list;
					x = $temp$x;
					xs = $temp$xs;
					previousElements = $temp$previousElements;
					continue removeHelp;
				}
			}
		}
	});
var $elm_community$list_extra$List$Extra$remove = F2(
	function (x, xs) {
		return A4($elm_community$list_extra$List$Extra$removeHelp, xs, x, xs, _List_Nil);
	});
var $goyalarchit$elm_dagre$Dagre$Normalize$splitEdgeAndUpdateEdges = F3(
	function (_v0, dummyNodes, edges) {
		var from = _v0.a;
		var to = _v0.b;
		var splitPath = $elm$core$List$concat(
			_List_fromArray(
				[
					_List_fromArray(
					[from]),
					dummyNodes,
					_List_fromArray(
					[to])
				]));
		var splitEdges = $goyalarchit$elm_dagre$Dagre$Utils$getEdgesFromPath(splitPath);
		var removedFromEdges = A2(
			$elm_community$list_extra$List$Extra$remove,
			_Utils_Tuple2(from, to),
			edges);
		return A2($elm$core$List$append, removedFromEdges, splitEdges);
	});
var $goyalarchit$elm_dagre$Dagre$Normalize$checkAndSplitMultiSpanEdge = F2(
	function (_v0, _v1) {
		var from = _v0.a;
		var to = _v0.b;
		var _v2 = _v1.a;
		var rankLayers = _v2.a;
		var dummyId = _v2.b;
		var _v3 = _v1.b;
		var edges = _v3.a;
		var controlPoints = _v3.b;
		var toRank = A2($goyalarchit$elm_dagre$Dagre$Utils$getRank, to, rankLayers);
		var fromRank = A2($goyalarchit$elm_dagre$Dagre$Utils$getRank, from, rankLayers);
		if ((toRank - fromRank) > 1) {
			var newDummyId = ((dummyId + toRank) - fromRank) - 1;
			var dummyNodes = A2($elm$core$List$range, dummyId, newDummyId - 1);
			var newControlPoints = A3(
				$elm$core$Dict$update,
				_Utils_Tuple2(from, to),
				$elm$core$Maybe$map(
					function (_v4) {
						return dummyNodes;
					}),
				controlPoints);
			var newEdges = A3(
				$goyalarchit$elm_dagre$Dagre$Normalize$splitEdgeAndUpdateEdges,
				_Utils_Tuple2(from, to),
				dummyNodes,
				edges);
			var newRankLayers = A3($goyalarchit$elm_dagre$Dagre$Normalize$insertKNodesIntoKSubsequentLayers, rankLayers, fromRank + 1, dummyNodes);
			return _Utils_Tuple2(
				_Utils_Tuple2(newRankLayers, newDummyId),
				_Utils_Tuple2(newEdges, newControlPoints));
		} else {
			return _Utils_Tuple2(
				_Utils_Tuple2(rankLayers, dummyId),
				_Utils_Tuple2(edges, controlPoints));
		}
	});
var $goyalarchit$elm_dagre$Dagre$Normalize$addDummyNodesAndSplitEdges = function (_v0) {
	var rankLayers = _v0.a;
	var edges = _v0.b;
	var initDummyId = function () {
		var _v4 = $elm$core$List$maximum(
			$elm$core$List$concat(rankLayers));
		if (!_v4.$) {
			var x = _v4.a;
			return x + 1;
		} else {
			return 1;
		}
	}();
	var initControlPoints = $elm$core$Dict$fromList(
		A2(
			$elm$core$List$map,
			function (e) {
				return _Utils_Tuple2(e, _List_Nil);
			},
			edges));
	var _v1 = A3(
		$elm$core$List$foldl,
		$goyalarchit$elm_dagre$Dagre$Normalize$checkAndSplitMultiSpanEdge,
		_Utils_Tuple2(
			_Utils_Tuple2(rankLayers, initDummyId),
			_Utils_Tuple2(edges, initControlPoints)),
		edges);
	var _v2 = _v1.a;
	var newRankLayers = _v2.a;
	var _v3 = _v1.b;
	var newEdges = _v3.a;
	var newControlPoints = _v3.b;
	return _Utils_Tuple2(
		_Utils_Tuple2(newRankLayers, newEdges),
		newControlPoints);
};
var $elm_community$graph$Graph$crashHack = function (msg) {
	crashHack:
	while (true) {
		var $temp$msg = msg;
		msg = $temp$msg;
		continue crashHack;
	}
};
var $elm_community$graph$Graph$unGraph = function (graph) {
	var rep = graph;
	return rep;
};
var $elm_community$graph$Graph$get = function (nodeId) {
	return A2(
		$elm$core$Basics$composeR,
		$elm_community$graph$Graph$unGraph,
		$elm_community$intdict$IntDict$get(nodeId));
};
var $elm_community$intdict$IntDict$findMax = function (dict) {
	findMax:
	while (true) {
		switch (dict.$) {
			case 0:
				return $elm$core$Maybe$Nothing;
			case 1:
				var l = dict.a;
				return $elm$core$Maybe$Just(
					_Utils_Tuple2(l.dk, l.a5));
			default:
				var i = dict.a;
				var $temp$dict = i.k;
				dict = $temp$dict;
				continue findMax;
		}
	}
};
var $elm_community$intdict$IntDict$findMin = function (dict) {
	findMin:
	while (true) {
		switch (dict.$) {
			case 0:
				return $elm$core$Maybe$Nothing;
			case 1:
				var l = dict.a;
				return $elm$core$Maybe$Just(
					_Utils_Tuple2(l.dk, l.a5));
			default:
				var i = dict.a;
				var $temp$dict = i.C;
				dict = $temp$dict;
				continue findMin;
		}
	}
};
var $elm_community$graph$Graph$nodeIdRange = function (graph) {
	return A2(
		$elm$core$Maybe$andThen,
		function (_v0) {
			var min = _v0.a;
			return A2(
				$elm$core$Maybe$andThen,
				function (_v1) {
					var max = _v1.a;
					return $elm$core$Maybe$Just(
						_Utils_Tuple2(min, max));
				},
				$elm_community$intdict$IntDict$findMax(
					$elm_community$graph$Graph$unGraph(graph)));
		},
		$elm_community$intdict$IntDict$findMin(
			$elm_community$graph$Graph$unGraph(graph)));
};
var $elm_community$intdict$IntDict$foldl = F3(
	function (f, acc, dict) {
		foldl:
		while (true) {
			switch (dict.$) {
				case 0:
					return acc;
				case 1:
					var l = dict.a;
					return A3(f, l.dk, l.a5, acc);
				default:
					var i = dict.a;
					var $temp$f = f,
						$temp$acc = A3($elm_community$intdict$IntDict$foldl, f, acc, i.C),
						$temp$dict = i.k;
					f = $temp$f;
					acc = $temp$acc;
					dict = $temp$dict;
					continue foldl;
			}
		}
	});
var $elm_community$graph$Graph$applyEdgeDiff = F3(
	function (nodeId, diff, graphRep) {
		var updateOutgoingEdge = F2(
			function (upd, node) {
				return _Utils_update(
					node,
					{
						q: A3($elm_community$intdict$IntDict$update, nodeId, upd, node.q)
					});
			});
		var updateIncomingEdge = F2(
			function (upd, node) {
				return _Utils_update(
					node,
					{
						t: A3($elm_community$intdict$IntDict$update, nodeId, upd, node.t)
					});
			});
		var flippedFoldl = F3(
			function (f, dict, acc) {
				return A3($elm_community$intdict$IntDict$foldl, f, acc, dict);
			});
		var edgeUpdateToMaybe = function (edgeUpdate) {
			if (!edgeUpdate.$) {
				var lbl = edgeUpdate.a;
				return $elm$core$Maybe$Just(lbl);
			} else {
				return $elm$core$Maybe$Nothing;
			}
		};
		var updateAdjacency = F3(
			function (updateEdge, updatedId, edgeUpdate) {
				var updateLbl = updateEdge(
					$elm$core$Basics$always(
						edgeUpdateToMaybe(edgeUpdate)));
				return A2(
					$elm_community$intdict$IntDict$update,
					updatedId,
					$elm$core$Maybe$map(updateLbl));
			});
		return A3(
			flippedFoldl,
			updateAdjacency(updateOutgoingEdge),
			diff.q,
			A3(
				flippedFoldl,
				updateAdjacency(updateIncomingEdge),
				diff.t,
				graphRep));
	});
var $elm_community$graph$Graph$Insert = function (a) {
	return {$: 0, a: a};
};
var $elm_community$graph$Graph$Remove = function (a) {
	return {$: 1, a: a};
};
var $elm_community$graph$Graph$emptyDiff = {t: $elm_community$intdict$IntDict$empty, q: $elm_community$intdict$IntDict$empty};
var $elm_community$graph$Graph$computeEdgeDiff = F2(
	function (old, _new) {
		var collectUpdates = F3(
			function (edgeUpdate, updatedId, label) {
				var replaceUpdate = function (old_) {
					var _v5 = _Utils_Tuple2(
						old_,
						edgeUpdate(label));
					if (!_v5.a.$) {
						if (_v5.a.a.$ === 1) {
							if (!_v5.b.$) {
								var oldLbl = _v5.a.a.a;
								var newLbl = _v5.b.a;
								return _Utils_eq(oldLbl, newLbl) ? $elm$core$Maybe$Nothing : $elm$core$Maybe$Just(
									$elm_community$graph$Graph$Insert(newLbl));
							} else {
								return $elm_community$graph$Graph$crashHack('Graph.computeEdgeDiff: Collected two removals for the same edge. This is an error in the implementation of Graph and you should file a bug report!');
							}
						} else {
							return $elm_community$graph$Graph$crashHack('Graph.computeEdgeDiff: Collected inserts before removals. This is an error in the implementation of Graph and you should file a bug report!');
						}
					} else {
						var _v6 = _v5.a;
						var eu = _v5.b;
						return $elm$core$Maybe$Just(eu);
					}
				};
				return A2($elm_community$intdict$IntDict$update, updatedId, replaceUpdate);
			});
		var collect = F3(
			function (edgeUpdate, adj, updates) {
				return A3(
					$elm_community$intdict$IntDict$foldl,
					collectUpdates(edgeUpdate),
					updates,
					adj);
			});
		var _v0 = _Utils_Tuple2(old, _new);
		if (_v0.a.$ === 1) {
			if (_v0.b.$ === 1) {
				var _v1 = _v0.a;
				var _v2 = _v0.b;
				return $elm_community$graph$Graph$emptyDiff;
			} else {
				var _v4 = _v0.a;
				var ins = _v0.b.a;
				return {
					t: A3(collect, $elm_community$graph$Graph$Insert, ins.q, $elm_community$intdict$IntDict$empty),
					q: A3(collect, $elm_community$graph$Graph$Insert, ins.t, $elm_community$intdict$IntDict$empty)
				};
			}
		} else {
			if (_v0.b.$ === 1) {
				var rem = _v0.a.a;
				var _v3 = _v0.b;
				return {
					t: A3(collect, $elm_community$graph$Graph$Remove, rem.q, $elm_community$intdict$IntDict$empty),
					q: A3(collect, $elm_community$graph$Graph$Remove, rem.t, $elm_community$intdict$IntDict$empty)
				};
			} else {
				var rem = _v0.a.a;
				var ins = _v0.b.a;
				return _Utils_eq(rem, ins) ? $elm_community$graph$Graph$emptyDiff : {
					t: A3(
						collect,
						$elm_community$graph$Graph$Insert,
						ins.q,
						A3(collect, $elm_community$graph$Graph$Remove, rem.q, $elm_community$intdict$IntDict$empty)),
					q: A3(
						collect,
						$elm_community$graph$Graph$Insert,
						ins.t,
						A3(collect, $elm_community$graph$Graph$Remove, rem.t, $elm_community$intdict$IntDict$empty))
				};
			}
		}
	});
var $elm_community$intdict$IntDict$filter = F2(
	function (predicate, dict) {
		var add = F3(
			function (k, v, d) {
				return A2(predicate, k, v) ? A3($elm_community$intdict$IntDict$insert, k, v, d) : d;
			});
		return A3($elm_community$intdict$IntDict$foldl, add, $elm_community$intdict$IntDict$empty, dict);
	});
var $elm_community$graph$Graph$update = F2(
	function (nodeId, updater) {
		var wrappedUpdater = function (rep) {
			var old = A2($elm_community$intdict$IntDict$get, nodeId, rep);
			var filterInvalidEdges = function (ctx) {
				return $elm_community$intdict$IntDict$filter(
					F2(
						function (id, _v0) {
							return _Utils_eq(id, ctx.ak.H) || A2($elm_community$intdict$IntDict$member, id, rep);
						}));
			};
			var cleanUpEdges = function (ctx) {
				return _Utils_update(
					ctx,
					{
						t: A2(filterInvalidEdges, ctx, ctx.t),
						q: A2(filterInvalidEdges, ctx, ctx.q)
					});
			};
			var _new = A2(
				$elm$core$Maybe$map,
				cleanUpEdges,
				updater(old));
			var diff = A2($elm_community$graph$Graph$computeEdgeDiff, old, _new);
			return A3(
				$elm_community$intdict$IntDict$update,
				nodeId,
				$elm$core$Basics$always(_new),
				A3($elm_community$graph$Graph$applyEdgeDiff, nodeId, diff, rep));
		};
		return A2(
			$elm$core$Basics$composeR,
			$elm_community$graph$Graph$unGraph,
			A2($elm$core$Basics$composeR, wrappedUpdater, $elm$core$Basics$identity));
	});
var $elm_community$graph$Graph$remove = F2(
	function (nodeId, graph) {
		return A3(
			$elm_community$graph$Graph$update,
			nodeId,
			$elm$core$Basics$always($elm$core$Maybe$Nothing),
			graph);
	});
var $elm_community$graph$Graph$fold = F3(
	function (f, acc, graph) {
		var go = F2(
			function (acc1, graph1) {
				go:
				while (true) {
					var maybeContext = A2(
						$elm$core$Maybe$andThen,
						function (id) {
							return A2($elm_community$graph$Graph$get, id, graph);
						},
						A2(
							$elm$core$Maybe$map,
							$elm$core$Tuple$first,
							$elm_community$graph$Graph$nodeIdRange(graph1)));
					if (!maybeContext.$) {
						var ctx = maybeContext.a;
						var $temp$acc1 = A2(f, ctx, acc1),
							$temp$graph1 = A2($elm_community$graph$Graph$remove, ctx.ak.H, graph1);
						acc1 = $temp$acc1;
						graph1 = $temp$graph1;
						continue go;
					} else {
						return acc1;
					}
				}
			});
		return A2(go, acc, graph);
	});
var $elm_community$intdict$IntDict$isEmpty = function (dict) {
	if (!dict.$) {
		return true;
	} else {
		return false;
	}
};
var $elm_community$graph$Graph$heightLevels = function (_v0) {
	var startingGraph = _v0.a;
	var subtract = F2(
		function (a, b) {
			return b - a;
		});
	var isSource = function (ctx) {
		return $elm_community$intdict$IntDict$isEmpty(ctx.t);
	};
	var sources = A3(
		$elm_community$graph$Graph$fold,
		F2(
			function (ctx, acc) {
				return isSource(ctx) ? A2($elm$core$List$cons, ctx, acc) : acc;
			}),
		_List_Nil,
		startingGraph);
	var decrementAndNoteSources = F3(
		function (id, _v7, _v8) {
			var nextLevel = _v8.a;
			var indegrees = _v8.b;
			var indegreesDec = A3(
				$elm_community$intdict$IntDict$update,
				id,
				$elm$core$Maybe$map(
					subtract(1)),
				indegrees);
			var _v5 = A2($elm_community$intdict$IntDict$get, id, indegreesDec);
			if ((!_v5.$) && (!_v5.a)) {
				var _v6 = A2($elm_community$graph$Graph$get, id, startingGraph);
				if (!_v6.$) {
					var ctx = _v6.a;
					return _Utils_Tuple2(
						A2($elm$core$List$cons, ctx, nextLevel),
						indegreesDec);
				} else {
					return $elm_community$graph$Graph$crashHack('Graph.heightLevels: Could not get a node of a graph which should be there by invariants. Please file a bug report!');
				}
			} else {
				return _Utils_Tuple2(nextLevel, indegreesDec);
			}
		});
	var decrementIndegrees = F3(
		function (source, nextLevel, indegrees) {
			return A3(
				$elm_community$intdict$IntDict$foldl,
				decrementAndNoteSources,
				_Utils_Tuple2(nextLevel, indegrees),
				source.q);
		});
	var go = F4(
		function (currentLevel, nextLevel, indegrees, graph) {
			var _v1 = _Utils_Tuple2(currentLevel, nextLevel);
			if (!_v1.a.b) {
				if (!_v1.b.b) {
					return _List_fromArray(
						[_List_Nil]);
				} else {
					return A2(
						$elm$core$List$cons,
						_List_Nil,
						A4(go, nextLevel, _List_Nil, indegrees, graph));
				}
			} else {
				var _v2 = _v1.a;
				var source = _v2.a;
				var currentLevel1 = _v2.b;
				var _v3 = A3(decrementIndegrees, source, nextLevel, indegrees);
				var nextLevel1 = _v3.a;
				var indegrees1 = _v3.b;
				var _v4 = A4(
					go,
					currentLevel1,
					nextLevel1,
					indegrees1,
					A2($elm_community$graph$Graph$remove, source.ak.H, graph));
				if (!_v4.b) {
					return $elm_community$graph$Graph$crashHack('Graph.heightLevels: Reached a branch which is impossible by invariants. Please file a bug report!');
				} else {
					var level = _v4.a;
					var levels = _v4.b;
					return A2(
						$elm$core$List$cons,
						A2($elm$core$List$cons, source, level),
						levels);
				}
			}
		});
	var countIndegrees = A2(
		$elm_community$graph$Graph$fold,
		function (ctx) {
			return A2(
				$elm_community$intdict$IntDict$insert,
				ctx.ak.H,
				$elm_community$intdict$IntDict$size(ctx.t));
		},
		$elm_community$intdict$IntDict$empty);
	return A4(
		go,
		sources,
		_List_Nil,
		countIndegrees(startingGraph),
		startingGraph);
};
var $goyalarchit$elm_dagre$Dagre$Rank$assignRanks = function (g) {
	return A2(
		$elm$core$List$map,
		function (r) {
			return A2(
				$elm$core$List$map,
				function (node) {
					return node.ak.H;
				},
				r);
		},
		$elm_community$graph$Graph$heightLevels(g));
};
var $goyalarchit$elm_dagre$Dagre$Attributes$TB = 0;
var $goyalarchit$elm_dagre$Dagre$defaultConfig = {lv: 10, bj: 32, lX: $elm$core$Dict$empty, mB: 20, mC: 20, m5: 50, nV: 0, nW: 75, bB: 32, o7: $elm$core$Dict$empty};
var $elm_community$graph$Graph$edges = function (graph) {
	var flippedFoldl = F3(
		function (f, dict, list) {
			return A3($elm_community$intdict$IntDict$foldl, f, list, dict);
		});
	var prependEdges = F2(
		function (node1, ctx) {
			return A2(
				flippedFoldl,
				F2(
					function (node2, e) {
						return $elm$core$List$cons(
							{bK: node1, cn: e, oT: node2});
					}),
				ctx.q);
		});
	return A3(
		flippedFoldl,
		prependEdges,
		$elm_community$graph$Graph$unGraph(graph),
		_List_Nil);
};
var $goyalarchit$elm_dagre$Dagre$Utils$getEdges = function (g) {
	var edges = $elm_community$graph$Graph$edges(g);
	return A2(
		$elm$core$List$map,
		function (e) {
			return _Utils_Tuple2(e.bK, e.oT);
		},
		edges);
};
var $goyalarchit$elm_dagre$Dagre$Attributes$RL = 3;
var $goyalarchit$elm_dagre$Dagre$Attributes$BT = 1;
var $goyalarchit$elm_dagre$Dagre$Position$applyRankDir = F2(
	function (rankDir, init_coords) {
		var coords_ = ((rankDir === 1) || (rankDir === 3)) ? A2(
			$elm$core$Dict$map,
			F2(
				function (_v2, _v3) {
					var x = _v3.a;
					var y = _v3.b;
					return _Utils_Tuple2(x, -y);
				}),
			init_coords) : init_coords;
		return ((rankDir === 2) || (rankDir === 3)) ? A2(
			$elm$core$Dict$map,
			F2(
				function (_v0, _v1) {
					var x = _v1.a;
					var y = _v1.b;
					return _Utils_Tuple2(y, x);
				}),
			coords_) : coords_;
	});
var $goyalarchit$elm_dagre$Dagre$Position$combinePoints = F2(
	function (xs, ys) {
		var onlyY = F3(
			function (n, y, finalDict) {
				return A3(
					$elm$core$Dict$insert,
					n,
					_Utils_Tuple2(0, y),
					finalDict);
			});
		var onlyX = F3(
			function (n, x, finalDict) {
				return A3(
					$elm$core$Dict$insert,
					n,
					_Utils_Tuple2(x, 0),
					finalDict);
			});
		var bothXY = F4(
			function (n, x, y, finalDict) {
				return A3(
					$elm$core$Dict$insert,
					n,
					_Utils_Tuple2(x, y),
					finalDict);
			});
		return A6($elm$core$Dict$merge, onlyX, bothXY, onlyY, xs, ys, $elm$core$Dict$empty);
	});
var $goyalarchit$elm_dagre$Dagre$Position$BK$Down = 1;
var $goyalarchit$elm_dagre$Dagre$Position$BK$Left = 0;
var $goyalarchit$elm_dagre$Dagre$Position$BK$Right = 1;
var $goyalarchit$elm_dagre$Dagre$Position$BK$Up = 0;
var $goyalarchit$elm_dagre$Dagre$Position$BK$alignCoordinates = F2(
	function (xss, alignTo) {
		var minX = function (xs) {
			return A2(
				$elm$core$Maybe$withDefault,
				0,
				$elm$core$List$minimum(
					$elm$core$Dict$values(xs)));
		};
		var maxX = function (xs) {
			return A2(
				$elm$core$Maybe$withDefault,
				0,
				$elm$core$List$maximum(
					$elm$core$Dict$values(xs)));
		};
		var alignToMin = minX(alignTo);
		var alignToMax = maxX(alignTo);
		var delta = F2(
			function (hDir, xs) {
				if (!hDir) {
					return alignToMin - minX(xs);
				} else {
					return alignToMax - maxX(xs);
				}
			});
		var deltas = A2(
			$elm$core$List$map,
			function (_v3) {
				var _v4 = _v3.a;
				var hDir = _v4.b;
				var xs = _v3.b;
				return A2(delta, hDir, xs);
			},
			xss);
		var xss_ = A3(
			$elm$core$List$map2,
			F2(
				function (_v0, del) {
					var _v1 = _v0.a;
					var xs = _v0.b;
					return A2(
						$elm$core$Dict$map,
						F2(
							function (_v2, x) {
								return x + del;
							}),
						xs);
				}),
			xss,
			deltas);
		return xss_;
	});
var $elm$core$List$sort = function (xs) {
	return A2($elm$core$List$sortBy, $elm$core$Basics$identity, xs);
};
var $goyalarchit$elm_dagre$Dagre$Position$BK$balance = function (xss) {
	var helper = F3(
		function (n, x, xsC) {
			return A2($elm$core$Dict$member, n, xsC) ? A3(
				$elm$core$Dict$update,
				n,
				$elm$core$Maybe$map(
					function (xCoords) {
						return A2($elm$core$List$cons, x, xCoords);
					}),
				xsC) : A3(
				$elm$core$Dict$insert,
				n,
				_List_fromArray(
					[x]),
				xsC);
		});
	var finalX = function (l) {
		if (!l.b) {
			return 0;
		} else {
			if (l.b.b) {
				if (l.b.b.b) {
					if (l.b.b.b.b) {
						if (!l.b.b.b.b.b) {
							var _v3 = l.b;
							var x1 = _v3.a;
							var _v4 = _v3.b;
							var x2 = _v4.a;
							var _v5 = _v4.b;
							return (x1 + x2) / 2;
						} else {
							var x = l.a;
							return x;
						}
					} else {
						var _v6 = l.b;
						var x = _v6.a;
						var _v7 = _v6.b;
						return x;
					}
				} else {
					var x0 = l.a;
					var _v8 = l.b;
					var x1 = _v8.a;
					return (x0 + x1) / 2;
				}
			} else {
				var x = l.a;
				return x;
			}
		}
	};
	var appendXs = F2(
		function (xs, xsC) {
			return A3($elm$core$Dict$foldl, helper, xsC, xs);
		});
	var multiXs = A3($elm$core$List$foldl, appendXs, $elm$core$Dict$empty, xss);
	var sortedMultiXs = A2(
		$elm$core$Dict$map,
		F2(
			function (_v1, x) {
				return $elm$core$List$sort(x);
			}),
		multiXs);
	return A2(
		$elm$core$Dict$map,
		F2(
			function (_v0, xList) {
				return finalX(xList);
			}),
		sortedMultiXs);
};
var $elm_community$list_extra$List$Extra$getAt = F2(
	function (idx, xs) {
		return (idx < 0) ? $elm$core$Maybe$Nothing : $elm$core$List$head(
			A2($elm$core$List$drop, idx, xs));
	});
var $elm_community$list_extra$List$Extra$minimumBy = F2(
	function (f, ls) {
		var minBy = F2(
			function (x, _v1) {
				var y = _v1.a;
				var fy = _v1.b;
				var fx = f(x);
				return (_Utils_cmp(fx, fy) < 0) ? _Utils_Tuple2(x, fx) : _Utils_Tuple2(y, fy);
			});
		if (ls.b) {
			if (!ls.b.b) {
				var l_ = ls.a;
				return $elm$core$Maybe$Just(l_);
			} else {
				var l_ = ls.a;
				var ls_ = ls.b;
				return $elm$core$Maybe$Just(
					A3(
						$elm$core$List$foldl,
						minBy,
						_Utils_Tuple2(
							l_,
							f(l_)),
						ls_).a);
			}
		} else {
			return $elm$core$Maybe$Nothing;
		}
	});
var $goyalarchit$elm_dagre$Dagre$Position$BK$width = function (config) {
	return function (nodeId) {
		return A2(
			$elm$core$Maybe$withDefault,
			config.bB,
			A2($elm$core$Dict$get, nodeId, config.o7));
	};
};
var $goyalarchit$elm_dagre$Dagre$Position$BK$findSmallestWidthAlignment = F2(
	function (config, xss) {
		var getWidth = function (n) {
			return A2($goyalarchit$elm_dagre$Dagre$Position$BK$width, config, n);
		};
		var maxX = function (xs) {
			return A2(
				$elm$core$Maybe$withDefault,
				0,
				$elm$core$List$maximum(
					$elm$core$Dict$values(
						A2(
							$elm$core$Dict$map,
							F2(
								function (k, v) {
									return v + (getWidth(k) / 2);
								}),
							xs))));
		};
		var minX = function (xs) {
			return A2(
				$elm$core$Maybe$withDefault,
				0,
				$elm$core$List$minimum(
					$elm$core$Dict$values(
						A2(
							$elm$core$Dict$map,
							F2(
								function (k, v) {
									return v - (getWidth(k) / 2);
								}),
							xs))));
		};
		var widthXss = A2(
			$elm$core$List$map,
			function (xs) {
				return _Utils_Tuple2(
					maxX(xs) - minX(xs),
					xs);
			},
			xss);
		var defXs = A2(
			$elm$core$Maybe$withDefault,
			_Utils_Tuple2(0, $elm$core$Dict$empty),
			A2($elm_community$list_extra$List$Extra$getAt, 0, widthXss));
		return A2(
			$elm$core$Maybe$withDefault,
			defXs,
			A2($elm_community$list_extra$List$Extra$minimumBy, $elm$core$Tuple$first, widthXss)).b;
	});
var $goyalarchit$elm_dagre$Dagre$Utils$Inner = 0;
var $goyalarchit$elm_dagre$Dagre$Utils$NonInner = 1;
var $elm$core$Basics$ge = _Utils_ge;
var $goyalarchit$elm_dagre$Dagre$Utils$markEdgeWithEdgeType = F2(
	function (initDummyId, e) {
		var _v0 = e;
		var from = _v0.a;
		var to = _v0.b;
		return ((_Utils_cmp(from, initDummyId) > -1) && (_Utils_cmp(to, initDummyId) > -1)) ? _Utils_Tuple2(e, 0) : _Utils_Tuple2(e, 1);
	});
var $elm_community$intdict$IntDict$foldr = F3(
	function (f, acc, dict) {
		foldr:
		while (true) {
			switch (dict.$) {
				case 0:
					return acc;
				case 1:
					var l = dict.a;
					return A3(f, l.dk, l.a5, acc);
				default:
					var i = dict.a;
					var $temp$f = f,
						$temp$acc = A3($elm_community$intdict$IntDict$foldr, f, acc, i.k),
						$temp$dict = i.C;
					f = $temp$f;
					acc = $temp$acc;
					dict = $temp$dict;
					continue foldr;
			}
		}
	});
var $elm_community$intdict$IntDict$values = function (dict) {
	return A3(
		$elm_community$intdict$IntDict$foldr,
		F3(
			function (key, value, valueList) {
				return A2($elm$core$List$cons, value, valueList);
			}),
		_List_Nil,
		dict);
};
var $elm_community$graph$Graph$nodes = A2(
	$elm$core$Basics$composeR,
	$elm_community$graph$Graph$unGraph,
	A2(
		$elm$core$Basics$composeR,
		$elm_community$intdict$IntDict$values,
		$elm$core$List$map(
			function ($) {
				return $.ak;
			})));
var $goyalarchit$elm_dagre$Dagre$Utils$markEdgesWithEdgeType = F2(
	function (g, edges) {
		var initDummyId = function () {
			var _v0 = $elm$core$List$maximum(
				A2(
					$elm$core$List$map,
					function (n) {
						return n.H;
					},
					$elm_community$graph$Graph$nodes(g)));
			if (!_v0.$) {
				var x = _v0.a;
				return x + 1;
			} else {
				return -1;
			}
		}();
		return A2(
			$elm$core$List$map,
			$goyalarchit$elm_dagre$Dagre$Utils$markEdgeWithEdgeType(initDummyId),
			edges);
	});
var $goyalarchit$elm_dagre$Dagre$Utils$alongIncomingEdges = F2(
	function (edges, nodeId) {
		return A2(
			$elm$core$List$map,
			function (e) {
				return e.a;
			},
			A2(
				$elm$core$List$filter,
				function (e) {
					return _Utils_eq(e.b, nodeId);
				},
				edges));
	});
var $goyalarchit$elm_dagre$Dagre$Utils$alongOutgoingEdges = F2(
	function (edges, nodeId) {
		return A2(
			$elm$core$List$map,
			function (e) {
				return e.b;
			},
			A2(
				$elm$core$List$filter,
				function (e) {
					return _Utils_eq(e.a, nodeId);
				},
				edges));
	});
var $elm$core$Basics$pow = _Basics_pow;
var $goyalarchit$elm_dagre$Dagre$Utils$intMin = A2($elm$core$Basics$pow, -2, 31);
var $goyalarchit$elm_dagre$Dagre$Position$BK$getNode = F2(
	function (node, dict) {
		var _v0 = A2($elm$core$Dict$get, node, dict);
		if (!_v0.$) {
			var x = _v0.a;
			return x;
		} else {
			return $goyalarchit$elm_dagre$Dagre$Utils$intMin;
		}
	});
var $goyalarchit$elm_dagre$Dagre$Utils$infinity = A2($elm$core$Basics$pow, 2, 31) - 1;
var $goyalarchit$elm_dagre$Dagre$Position$BK$assignAbsoluteX = F5(
	function (root, shift, sink, v, xs) {
		var root_v = A2($goyalarchit$elm_dagre$Dagre$Position$BK$getNode, v, root);
		var shift_sink_root_v = function () {
			var _v1 = A2($elm$core$Dict$get, root_v, sink);
			if (_v1.$ === 1) {
				return $goyalarchit$elm_dagre$Dagre$Utils$infinity;
			} else {
				var sink_root_v = _v1.a;
				var _v2 = A2($elm$core$Dict$get, sink_root_v, shift);
				if (_v2.$ === 1) {
					return $goyalarchit$elm_dagre$Dagre$Utils$infinity;
				} else {
					var shiftVal = _v2.a;
					return shiftVal;
				}
			}
		}();
		var xs_v = function () {
			var _v0 = A2($elm$core$Dict$get, root_v, xs);
			if (_v0.$ === 1) {
				return A3($elm$core$Dict$insert, v, 0, xs);
			} else {
				var xsRootV = _v0.a;
				return A3($elm$core$Dict$insert, v, xsRootV, xs);
			}
		}();
		var xs_v_shifted = (_Utils_eq(v, root_v) && (_Utils_cmp(shift_sink_root_v, $goyalarchit$elm_dagre$Dagre$Utils$infinity) < 0)) ? A3(
			$elm$core$Dict$update,
			v,
			$elm$core$Maybe$map(
				function (n) {
					return n + shift_sink_root_v;
				}),
			xs_v) : xs_v;
		return xs_v_shifted;
	});
var $goyalarchit$elm_dagre$Dagre$Position$BK$getPredDictHelper = F2(
	function (layer, pred) {
		var predecessors = A2(
			$elm$core$List$take,
			$elm$core$List$length(layer) - 1,
			layer);
		var nodes = A2($elm$core$List$drop, 1, layer);
		var nodesWithPreds = A3($elm$core$List$map2, $elm$core$Tuple$pair, nodes, predecessors);
		var finalDict = A3(
			$elm$core$List$foldl,
			F2(
				function (_v0, predDict) {
					var n = _v0.a;
					var p = _v0.b;
					return A3($elm$core$Dict$insert, n, p, predDict);
				}),
			pred,
			nodesWithPreds);
		return finalDict;
	});
var $goyalarchit$elm_dagre$Dagre$Position$BK$getPredDict = function (rankList) {
	var initDict = $elm$core$Dict$empty;
	var pred = A3($elm$core$List$foldl, $goyalarchit$elm_dagre$Dagre$Position$BK$getPredDictHelper, initDict, rankList);
	return pred;
};
var $goyalarchit$elm_dagre$Dagre$Position$BK$updateShiftOrXS = F5(
	function (delta, sink, u, v, _v0) {
		var shift = _v0.a;
		var xs = _v0.b;
		if (!_Utils_eq(
			A2($elm$core$Dict$get, v, sink),
			A2($elm$core$Dict$get, u, sink))) {
			var xs_v_ = A2($elm$core$Dict$get, v, xs);
			var xs_u_ = A2($elm$core$Dict$get, u, xs);
			var sink_u_ = A2($elm$core$Dict$get, u, sink);
			var shift_sink_u_ = A2(
				$elm$core$Maybe$andThen,
				function (sink_u) {
					return A2($elm$core$Dict$get, sink_u, shift);
				},
				sink_u_);
			var updateValue = function () {
				var _v3 = _Utils_Tuple3(shift_sink_u_, xs_v_, xs_u_);
				if (((!_v3.a.$) && (!_v3.b.$)) && (!_v3.c.$)) {
					var ss_u = _v3.a.a;
					var xs_v = _v3.b.a;
					var xs_u = _v3.c.a;
					return $elm$core$Maybe$Just(
						A2($elm$core$Basics$min, ss_u, (xs_v - xs_u) - delta));
				} else {
					return $elm$core$Maybe$Nothing;
				}
			}();
			var updatedShift = function () {
				if (!sink_u_.$) {
					var sink_u = sink_u_.a;
					return A3(
						$elm$core$Dict$update,
						sink_u,
						function (_v2) {
							return updateValue;
						},
						shift);
				} else {
					return shift;
				}
			}();
			return _Utils_Tuple2(updatedShift, xs);
		} else {
			var xs_v_ = A2($elm$core$Dict$get, v, xs);
			var xs_u_ = A2($elm$core$Dict$get, u, xs);
			var updateValue = function () {
				var _v5 = _Utils_Tuple2(xs_v_, xs_u_);
				if ((!_v5.a.$) && (!_v5.b.$)) {
					var xs_v = _v5.a.a;
					var xs_u = _v5.b.a;
					return $elm$core$Maybe$Just(
						A2($elm$core$Basics$max, xs_v, xs_u + delta));
				} else {
					return $elm$core$Maybe$Nothing;
				}
			}();
			var updatedXS = A3(
				$elm$core$Dict$update,
				v,
				function (_v4) {
					return updateValue;
				},
				xs);
			return _Utils_Tuple2(shift, updatedXS);
		}
	});
var $goyalarchit$elm_dagre$Dagre$Position$BK$placeBlock = F6(
	function (pred, sepFn, root, align, v, _v10) {
		var shift = _v10.a;
		var sink = _v10.b;
		var xs = _v10.c;
		var _v11 = A2($elm$core$Dict$get, v, xs);
		if (_v11.$ === 1) {
			var xsV = A3($elm$core$Dict$insert, v, 0, xs);
			return A7(
				$goyalarchit$elm_dagre$Dagre$Position$BK$placeBlockHelper,
				pred,
				sepFn,
				root,
				align,
				v,
				v,
				_Utils_Tuple3(shift, sink, xsV));
		} else {
			return _Utils_Tuple3(shift, sink, xs);
		}
	});
var $goyalarchit$elm_dagre$Dagre$Position$BK$placeBlockHelper = F7(
	function (pred, sepFn, root, align, v, w, _v6) {
		placeBlockHelper:
		while (true) {
			var shift = _v6.a;
			var sink = _v6.b;
			var xs = _v6.c;
			var w_new_ = A2($elm$core$Dict$get, w, align);
			var _v7 = function () {
				var _v8 = A2($elm$core$Dict$get, w, pred);
				if (_v8.$ === 1) {
					return _Utils_Tuple3(shift, sink, xs);
				} else {
					var p = _v8.a;
					return A8(
						$goyalarchit$elm_dagre$Dagre$Position$BK$placePredecessor,
						p,
						pred,
						sepFn,
						root,
						align,
						v,
						w,
						_Utils_Tuple3(shift, sink, xs));
				}
			}();
			var final_shift = _v7.a;
			var final_sink = _v7.b;
			var final_xs = _v7.c;
			if (_Utils_eq(
				w_new_,
				$elm$core$Maybe$Just(v))) {
				return _Utils_Tuple3(final_shift, final_sink, final_xs);
			} else {
				if (w_new_.$ === 1) {
					return _Utils_Tuple3(final_shift, final_sink, final_xs);
				} else {
					var w_new = w_new_.a;
					var $temp$pred = pred,
						$temp$sepFn = sepFn,
						$temp$root = root,
						$temp$align = align,
						$temp$v = v,
						$temp$w = w_new,
						$temp$_v6 = _Utils_Tuple3(final_shift, final_sink, final_xs);
					pred = $temp$pred;
					sepFn = $temp$sepFn;
					root = $temp$root;
					align = $temp$align;
					v = $temp$v;
					w = $temp$w;
					_v6 = $temp$_v6;
					continue placeBlockHelper;
				}
			}
		}
	});
var $goyalarchit$elm_dagre$Dagre$Position$BK$placePredecessor = F8(
	function (p, pred, sepFn, root, align, v, w, _v0) {
		var shift = _v0.a;
		var sink = _v0.b;
		var xs = _v0.c;
		var root_p_ = A2($elm$core$Dict$get, p, root);
		var delta = A2(sepFn, w, p);
		var _v1 = function () {
			if (root_p_.$ === 1) {
				return _Utils_Tuple3(shift, sink, xs);
			} else {
				var u = root_p_.a;
				return A6(
					$goyalarchit$elm_dagre$Dagre$Position$BK$placeBlock,
					pred,
					sepFn,
					root,
					align,
					u,
					_Utils_Tuple3(shift, sink, xs));
			}
		}();
		var pred_shift = _v1.a;
		var pred_sink = _v1.b;
		var pred_xs = _v1.c;
		var updatedSink = _Utils_eq(
			A2($elm$core$Dict$get, v, pred_sink),
			$elm$core$Maybe$Just(v)) ? A3(
			$elm$core$Dict$update,
			v,
			function (_v5) {
				return A2(
					$elm$core$Dict$get,
					A2($goyalarchit$elm_dagre$Dagre$Position$BK$getNode, p, root),
					pred_sink);
			},
			pred_sink) : pred_sink;
		var _v3 = function () {
			if (root_p_.$ === 1) {
				return _Utils_Tuple2(pred_shift, pred_xs);
			} else {
				var u = root_p_.a;
				return A5(
					$goyalarchit$elm_dagre$Dagre$Position$BK$updateShiftOrXS,
					delta,
					updatedSink,
					u,
					v,
					_Utils_Tuple2(pred_shift, pred_xs));
			}
		}();
		var updatedShift = _v3.a;
		var updatedXS = _v3.b;
		return _Utils_Tuple3(updatedShift, updatedSink, updatedXS);
	});
var $goyalarchit$elm_dagre$Dagre$Utils$isDummyNode = F2(
	function (initDummyId, nodeId) {
		return (_Utils_cmp(nodeId, initDummyId) < 0) ? false : true;
	});
var $goyalarchit$elm_dagre$Dagre$Position$BK$sep = F2(
	function (config, g) {
		var initDummyId = function () {
			var _v0 = $elm_community$graph$Graph$nodeIdRange(g);
			if (_v0.$ === 1) {
				return 0;
			} else {
				var _v1 = _v0.a;
				var maxNodeId = _v1.b;
				return maxNodeId + 1;
			}
		}();
		var getWidth = function (n) {
			return A2($goyalarchit$elm_dagre$Dagre$Position$BK$width, config, n);
		};
		var getSep = function (nId) {
			return A2($goyalarchit$elm_dagre$Dagre$Utils$isDummyNode, initDummyId, nId) ? config.lv : config.m5;
		};
		return F2(
			function (u, v) {
				return (((getWidth(u) + getSep(u)) + getSep(v)) + getWidth(v)) / 2;
			});
	});
var $goyalarchit$elm_dagre$Dagre$Position$BK$horizontalCompaction = F4(
	function (_v0, rankList, root, align) {
		var config = _v0.a;
		var g = _v0.b;
		var xs = $elm$core$Dict$empty;
		var sink = $elm$core$Dict$fromList(
			A2(
				$elm$core$List$map,
				function (n) {
					return _Utils_Tuple2(n, n);
				},
				$elm$core$List$concat(rankList)));
		var shift = $elm$core$Dict$fromList(
			A2(
				$elm$core$List$map,
				function (n) {
					return _Utils_Tuple2(n, $goyalarchit$elm_dagre$Dagre$Utils$infinity);
				},
				$elm$core$List$concat(rankList)));
		var sepFn = A2($goyalarchit$elm_dagre$Dagre$Position$BK$sep, config, g);
		var roots = A2(
			$elm$core$List$filter,
			function (v) {
				return _Utils_eq(
					$elm$core$Maybe$Just(v),
					A2($elm$core$Dict$get, v, root));
			},
			$elm$core$List$concat(rankList));
		var pred = $goyalarchit$elm_dagre$Dagre$Position$BK$getPredDict(rankList);
		var _v1 = A3(
			$elm$core$List$foldl,
			A4($goyalarchit$elm_dagre$Dagre$Position$BK$placeBlock, pred, sepFn, root, align),
			_Utils_Tuple3(shift, sink, xs),
			roots);
		var updShift = _v1.a;
		var updSink = _v1.b;
		var updXs = _v1.c;
		var finXs = A3(
			$elm$core$List$foldl,
			F2(
				function (l, xs_) {
					return A3(
						$elm$core$List$foldl,
						A3($goyalarchit$elm_dagre$Dagre$Position$BK$assignAbsoluteX, root, updShift, updSink),
						xs_,
						l);
				}),
			updXs,
			rankList);
		return finXs;
	});
var $elm_community$list_extra$List$Extra$elemIndex = function (x) {
	return $elm_community$list_extra$List$Extra$findIndex(
		$elm$core$Basics$eq(x));
};
var $goyalarchit$elm_dagre$Dagre$Utils$getOrder = F2(
	function (l, nodeId) {
		var _v0 = A2($elm_community$list_extra$List$Extra$elemIndex, nodeId, l);
		if (!_v0.$) {
			var idx = _v0.a;
			return idx;
		} else {
			return -1;
		}
	});
var $goyalarchit$elm_dagre$Dagre$Position$BK$getPosDict = function (rankList) {
	var dictList = $elm$core$List$concat(
		A2(
			$elm$core$List$map,
			function (l) {
				return A2(
					$elm$core$List$map,
					function (n) {
						return _Utils_Tuple2(
							n,
							A2($goyalarchit$elm_dagre$Dagre$Utils$getOrder, l, n));
					},
					l);
			},
			rankList));
	return $elm$core$Dict$fromList(dictList);
};
var $goyalarchit$elm_dagre$Dagre$Position$BK$hasConflict = F2(
	function (conflicts, _v0) {
		var u = _v0.a;
		var v = _v0.b;
		return (A2(
			$elm$core$List$member,
			_Utils_Tuple2(u, v),
			conflicts) || A2(
			$elm$core$List$member,
			_Utils_Tuple2(v, u),
			conflicts)) ? true : false;
	});
var $goyalarchit$elm_dagre$Dagre$Position$BK$alignVertexHelper = F4(
	function (conflicts, v, _v0, _v1) {
		var w = _v0.a;
		var pos_w = _v0.b;
		var _v2 = _v1.a;
		var root = _v2.a;
		var align = _v2.b;
		var prevIdx = _v1.b;
		if (_Utils_eq(
			A2($goyalarchit$elm_dagre$Dagre$Position$BK$getNode, v, align),
			v) && ((_Utils_cmp(prevIdx, pos_w) < 0) && (!A2(
			$goyalarchit$elm_dagre$Dagre$Position$BK$hasConflict,
			conflicts,
			_Utils_Tuple2(w, v))))) {
			var updatedRootV = A3(
				$elm$core$Dict$update,
				v,
				$elm$core$Maybe$map(
					function (_v5) {
						return A2($goyalarchit$elm_dagre$Dagre$Position$BK$getNode, w, root);
					}),
				root);
			var updatedAlignW = A3(
				$elm$core$Dict$update,
				w,
				$elm$core$Maybe$map(
					function (_v4) {
						return v;
					}),
				align);
			var updatedAlignV = A3(
				$elm$core$Dict$update,
				v,
				$elm$core$Maybe$map(
					function (_v3) {
						return A2($goyalarchit$elm_dagre$Dagre$Position$BK$getNode, v, updatedRootV);
					}),
				updatedAlignW);
			var newPrevIdx = pos_w;
			return _Utils_Tuple2(
				_Utils_Tuple2(updatedRootV, updatedAlignV),
				newPrevIdx);
		} else {
			return _Utils_Tuple2(
				_Utils_Tuple2(root, align),
				prevIdx);
		}
	});
var $goyalarchit$elm_dagre$Dagre$Position$BK$getPos = F2(
	function (pos, node) {
		var _v0 = A2($elm$core$Dict$get, node, pos);
		if (!_v0.$) {
			var idx = _v0.a;
			return idx;
		} else {
			return -1;
		}
	});
var $goyalarchit$elm_dagre$Dagre$Position$BK$alignVertex = F5(
	function (pos, conflicts, neighbourFn, v, _v0) {
		var _v1 = _v0.a;
		var root = _v1.a;
		var align = _v1.b;
		var prevIdx = _v0.b;
		var ws = A2(
			$elm$core$List$sortBy,
			$goyalarchit$elm_dagre$Dagre$Position$BK$getPos(pos),
			neighbourFn(v));
		var mp = ($elm$core$List$length(ws) - 1) / 2;
		var w_mp = A2(
			$elm$core$List$map,
			function (w) {
				return _Utils_Tuple2(
					w,
					A2($goyalarchit$elm_dagre$Dagre$Position$BK$getPos, pos, w));
			},
			A2(
				$elm$core$List$filter,
				function (w) {
					return !_Utils_eq(w, $goyalarchit$elm_dagre$Dagre$Utils$intMin);
				},
				A2(
					$elm$core$List$map,
					function (i) {
						var _v2 = A2($elm_community$list_extra$List$Extra$getAt, i, ws);
						if (!_v2.$) {
							var w = _v2.a;
							return w;
						} else {
							return $goyalarchit$elm_dagre$Dagre$Utils$intMin;
						}
					},
					A2(
						$elm$core$List$range,
						$elm$core$Basics$floor(mp),
						$elm$core$Basics$ceiling(mp)))));
		var updatedValues = A3(
			$elm$core$List$foldl,
			A2($goyalarchit$elm_dagre$Dagre$Position$BK$alignVertexHelper, conflicts, v),
			_Utils_Tuple2(
				_Utils_Tuple2(root, align),
				prevIdx),
			w_mp);
		return updatedValues;
	});
var $goyalarchit$elm_dagre$Dagre$Position$BK$verticalAlignmentVisitLayer = F5(
	function (pos, conflicts, neighbourFn, layer, _v0) {
		var root = _v0.a;
		var align = _v0.b;
		var _v1 = A3(
			$elm$core$List$foldl,
			A3($goyalarchit$elm_dagre$Dagre$Position$BK$alignVertex, pos, conflicts, neighbourFn),
			_Utils_Tuple2(
				_Utils_Tuple2(root, align),
				-1),
			layer);
		var _v2 = _v1.a;
		var finalRoot = _v2.a;
		var finalAlign = _v2.b;
		return _Utils_Tuple2(finalRoot, finalAlign);
	});
var $goyalarchit$elm_dagre$Dagre$Position$BK$verticalAlignment = F3(
	function (rankList, conflicts, neighbourFn) {
		var root = $elm$core$Dict$fromList(
			A2(
				$elm$core$List$map,
				function (n) {
					return _Utils_Tuple2(n, n);
				},
				$elm$core$List$concat(rankList)));
		var pos = $goyalarchit$elm_dagre$Dagre$Position$BK$getPosDict(rankList);
		var align = $elm$core$Dict$fromList(
			A2(
				$elm$core$List$map,
				function (n) {
					return _Utils_Tuple2(n, n);
				},
				$elm$core$List$concat(rankList)));
		var _v0 = A3(
			$elm$core$List$foldl,
			A3($goyalarchit$elm_dagre$Dagre$Position$BK$verticalAlignmentVisitLayer, pos, conflicts, neighbourFn),
			_Utils_Tuple2(root, align),
			rankList);
		var finalRoot = _v0.a;
		var finalAlign = _v0.b;
		return _Utils_Tuple2(finalRoot, finalAlign);
	});
var $goyalarchit$elm_dagre$Dagre$Position$BK$positionXHelper = F5(
	function (config, g, _v0, conflicts, _v1) {
		var rankList = _v0.a;
		var edges = _v0.b;
		var vDir = _v1.a;
		var hDir = _v1.b;
		var _v2 = function () {
			if (!vDir) {
				return _Utils_Tuple2(
					rankList,
					$goyalarchit$elm_dagre$Dagre$Utils$alongIncomingEdges(edges));
			} else {
				return _Utils_Tuple2(
					$elm$core$List$reverse(rankList),
					$goyalarchit$elm_dagre$Dagre$Utils$alongOutgoingEdges(edges));
			}
		}();
		var intAdjustedRankList = _v2.a;
		var neighbourFn = _v2.b;
		var finalAdjustedRankList = function () {
			if (!hDir) {
				return intAdjustedRankList;
			} else {
				return A2($elm$core$List$map, $elm$core$List$reverse, intAdjustedRankList);
			}
		}();
		var _v4 = A3($goyalarchit$elm_dagre$Dagre$Position$BK$verticalAlignment, finalAdjustedRankList, conflicts, neighbourFn);
		var root = _v4.a;
		var align = _v4.b;
		var xs = A4(
			$goyalarchit$elm_dagre$Dagre$Position$BK$horizontalCompaction,
			_Utils_Tuple2(config, g),
			finalAdjustedRankList,
			root,
			align);
		if (!hDir) {
			return xs;
		} else {
			return A2(
				$elm$core$Dict$map,
				F2(
					function (_v6, c) {
						return -c;
					}),
				xs);
		}
	});
var $goyalarchit$elm_dagre$Dagre$Utils$getAdjacentLayerPairs = function (rankList) {
	var toLayers = A2($elm$core$List$drop, 1, rankList);
	var fromLayers = A2(
		$elm$core$List$take,
		$elm$core$List$length(rankList) - 1,
		rankList);
	return A3(
		$elm$core$List$map2,
		F2(
			function (l1, l2) {
				return _Utils_Tuple2(l1, l2);
			}),
		fromLayers,
		toLayers);
};
var $goyalarchit$elm_dagre$Dagre$Utils$filterEdgesByType = F2(
	function (eType, edges) {
		return A2(
			$elm$core$List$map,
			function (fe) {
				return fe.a;
			},
			A2(
				$elm$core$List$filter,
				function (e) {
					return _Utils_eq(e.b, eType);
				},
				edges));
	});
var $goyalarchit$elm_dagre$Dagre$Utils$getInEdges = F2(
	function (nodeId, edges) {
		return A2(
			$elm$core$List$filter,
			function (e) {
				return _Utils_eq(e.a.b, nodeId);
			},
			edges);
	});
var $goyalarchit$elm_dagre$Dagre$Position$BK$findOtherInnerSegmentNode = F2(
	function (edges, nodeId) {
		var innerEdges = A2(
			$goyalarchit$elm_dagre$Dagre$Utils$filterEdgesByType,
			0,
			A2($goyalarchit$elm_dagre$Dagre$Utils$getInEdges, nodeId, edges));
		var upperNodeOfInnerSegments = A2($elm$core$List$map, $elm$core$Tuple$first, innerEdges);
		return $elm$core$List$minimum(upperNodeOfInnerSegments);
	});
var $goyalarchit$elm_dagre$Dagre$Position$BK$checkType1Conflict = F2(
	function (_v0, k) {
		var k0 = _v0.a;
		var k1 = _v0.b;
		return ((_Utils_cmp(k, k0) < 0) || (_Utils_cmp(k, k1) > 0)) ? true : false;
	});
var $goyalarchit$elm_dagre$Dagre$Position$BK$markType1Conflicts = F3(
	function (edges, _v0, l) {
		var k0 = _v0.a;
		var k1 = _v0.b;
		var nonInnerEdges = A2(
			$goyalarchit$elm_dagre$Dagre$Utils$filterEdgesByType,
			1,
			A2($goyalarchit$elm_dagre$Dagre$Utils$getInEdges, l, edges));
		var conflictingNonInnerEdges = A2(
			$elm$core$List$filter,
			function (_v1) {
				var f = _v1.a;
				return A2(
					$goyalarchit$elm_dagre$Dagre$Position$BK$checkType1Conflict,
					_Utils_Tuple2(k0, k1),
					f);
			},
			nonInnerEdges);
		return conflictingNonInnerEdges;
	});
var $goyalarchit$elm_dagre$Dagre$Position$BK$findInnerSegmentAndMarkConflicts = F4(
	function (_v0, edges, l1, _v1) {
		var prevLayerLength = _v0.a;
		var layerLength = _v0.b;
		var _v2 = _v1.a;
		var k0 = _v2.a;
		var scanPos = _v2.b;
		var type1Conflicts = _v1.b;
		var w = A2($goyalarchit$elm_dagre$Dagre$Position$BK$findOtherInnerSegmentNode, edges, l1);
		var _v3 = _Utils_Tuple2(
			w,
			_Utils_eq(l1, layerLength - 1));
		if (!_v3.a.$) {
			var k1 = _v3.a.a;
			var subLayer = A2($elm$core$List$range, scanPos, l1);
			var newConflictsList = A2(
				$elm$core$List$map,
				A2(
					$goyalarchit$elm_dagre$Dagre$Position$BK$markType1Conflicts,
					edges,
					_Utils_Tuple2(k0, k1)),
				subLayer);
			var newConflicts = $elm$core$List$concat(newConflictsList);
			return _Utils_Tuple2(
				_Utils_Tuple2(k1, l1 + 1),
				A2($elm$core$List$append, type1Conflicts, newConflicts));
		} else {
			if (!_v3.b) {
				var _v4 = _v3.a;
				return _Utils_Tuple2(
					_Utils_Tuple2(k0, scanPos),
					type1Conflicts);
			} else {
				var _v5 = _v3.a;
				var subLayer = A2($elm$core$List$range, scanPos, l1);
				var k1 = prevLayerLength - 1;
				var newConflictsList = A2(
					$elm$core$List$map,
					A2(
						$goyalarchit$elm_dagre$Dagre$Position$BK$markType1Conflicts,
						edges,
						_Utils_Tuple2(k0, k1)),
					subLayer);
				var newConflicts = $elm$core$List$concat(newConflictsList);
				return _Utils_Tuple2(
					_Utils_Tuple2(k1, l1 + 1),
					A2($elm$core$List$append, type1Conflicts, newConflicts));
			}
		}
	});
var $goyalarchit$elm_dagre$Dagre$Utils$getEdgesWithTypeDirectedFromLayers = F2(
	function (_v0, edges) {
		var l1 = _v0.a;
		var l2 = _v0.b;
		return A2(
			$elm$core$List$filter,
			function (_v1) {
				var _v2 = _v1.a;
				var from = _v2.a;
				var to = _v2.b;
				return A2($elm$core$List$member, from, l1) && A2($elm$core$List$member, to, l2);
			},
			edges);
	});
var $goyalarchit$elm_dagre$Dagre$Utils$getNodeFromOrder = F2(
	function (l, order) {
		var _v0 = A2($elm_community$list_extra$List$Extra$getAt, order, l);
		if (!_v0.$) {
			var n = _v0.a;
			return n;
		} else {
			return $goyalarchit$elm_dagre$Dagre$Utils$intMin;
		}
	});
var $goyalarchit$elm_dagre$Dagre$Utils$mapEdgeOrderToNode = F2(
	function (_v0, e) {
		var l1 = _v0.a;
		var l2 = _v0.b;
		return A3(
			$elm$core$Tuple$mapBoth,
			$goyalarchit$elm_dagre$Dagre$Utils$getNodeFromOrder(l1),
			$goyalarchit$elm_dagre$Dagre$Utils$getNodeFromOrder(l2),
			e);
	});
var $goyalarchit$elm_dagre$Dagre$Utils$mapEdgeToOrder = F2(
	function (_v0, e) {
		var l1 = _v0.a;
		var l2 = _v0.b;
		return A3(
			$elm$core$Tuple$mapBoth,
			$goyalarchit$elm_dagre$Dagre$Utils$getOrder(l1),
			$goyalarchit$elm_dagre$Dagre$Utils$getOrder(l2),
			e);
	});
var $goyalarchit$elm_dagre$Dagre$Utils$mapEdgeWithTypeToOrder = F2(
	function (_v0, e) {
		var l1 = _v0.a;
		var l2 = _v0.b;
		return A2(
			$elm$core$Tuple$mapFirst,
			$goyalarchit$elm_dagre$Dagre$Utils$mapEdgeToOrder(
				_Utils_Tuple2(l1, l2)),
			e);
	});
var $goyalarchit$elm_dagre$Dagre$Position$BK$type1VisitLayer = F2(
	function (edges, _v0) {
		var l1 = _v0.a;
		var l2 = _v0.b;
		var reqEdges = A2(
			$elm$core$List$map,
			$goyalarchit$elm_dagre$Dagre$Utils$mapEdgeWithTypeToOrder(
				_Utils_Tuple2(l1, l2)),
			A2(
				$goyalarchit$elm_dagre$Dagre$Utils$getEdgesWithTypeDirectedFromLayers,
				_Utils_Tuple2(l1, l2),
				edges));
		var prevLayerLength = $elm$core$List$length(l1);
		var layerLength = $elm$core$List$length(l2);
		var rawType1Conflicts = A3(
			$elm$core$List$foldl,
			A2(
				$goyalarchit$elm_dagre$Dagre$Position$BK$findInnerSegmentAndMarkConflicts,
				_Utils_Tuple2(prevLayerLength, layerLength),
				reqEdges),
			_Utils_Tuple2(
				_Utils_Tuple2(0, 0),
				_List_Nil),
			A2($elm$core$List$range, 0, layerLength - 1)).b;
		var type1Conflicts = A2(
			$elm$core$List$map,
			$goyalarchit$elm_dagre$Dagre$Utils$mapEdgeOrderToNode(
				_Utils_Tuple2(l1, l2)),
			rawType1Conflicts);
		return type1Conflicts;
	});
var $goyalarchit$elm_dagre$Dagre$Position$BK$findType1Conflicts = function (_v0) {
	var rankList = _v0.a;
	var edges = _v0.b;
	var adjacentLayers = $goyalarchit$elm_dagre$Dagre$Utils$getAdjacentLayerPairs(rankList);
	return $elm$core$List$concat(
		A2(
			$elm$core$List$map,
			$goyalarchit$elm_dagre$Dagre$Position$BK$type1VisitLayer(edges),
			adjacentLayers));
};
var $goyalarchit$elm_dagre$Dagre$Position$BK$preprocessing = function (_v0) {
	var rankList = _v0.a;
	var edges = _v0.b;
	var allType1Conflicts = $goyalarchit$elm_dagre$Dagre$Position$BK$findType1Conflicts(
		_Utils_Tuple2(rankList, edges));
	return _Utils_Tuple2(allType1Conflicts, _List_Nil);
};
var $goyalarchit$elm_dagre$Dagre$Position$BK$positionX = F3(
	function (config, g, _v0) {
		var rankList = _v0.a;
		var edges = _v0.b;
		var vhDir = $elm$core$List$concat(
			A2(
				$elm$core$List$map,
				function (v) {
					return A2(
						$elm$core$List$map,
						function (h) {
							return _Utils_Tuple2(v, h);
						},
						_List_fromArray(
							[0, 1]));
				},
				_List_fromArray(
					[0, 1])));
		var edgesWithType = A2($goyalarchit$elm_dagre$Dagre$Utils$markEdgesWithEdgeType, g, edges);
		var _v1 = $goyalarchit$elm_dagre$Dagre$Position$BK$preprocessing(
			_Utils_Tuple2(rankList, edgesWithType));
		var type1Conflicts = _v1.a;
		var conflicts = type1Conflicts;
		var xss = A2(
			$elm$core$List$map,
			function (d) {
				return _Utils_Tuple2(
					d,
					A5(
						$goyalarchit$elm_dagre$Dagre$Position$BK$positionXHelper,
						config,
						g,
						_Utils_Tuple2(rankList, edges),
						conflicts,
						d));
			},
			vhDir);
		var smallestWidthAlign = A2(
			$goyalarchit$elm_dagre$Dagre$Position$BK$findSmallestWidthAlignment,
			config,
			A2($elm$core$List$map, $elm$core$Tuple$second, xss));
		var alignedXss = A2($goyalarchit$elm_dagre$Dagre$Position$BK$alignCoordinates, xss, smallestWidthAlign);
		return $goyalarchit$elm_dagre$Dagre$Position$BK$balance(alignedXss);
	});
var $goyalarchit$elm_dagre$Dagre$Position$height = function (config) {
	return function (n) {
		return A2(
			$elm$core$Maybe$withDefault,
			config.bj,
			A2($elm$core$Dict$get, n, config.lX));
	};
};
var $goyalarchit$elm_dagre$Dagre$Position$assignAbsoluteY = F3(
	function (config, l, _v0) {
		var currentY = _v0.a;
		var ys = _v0.b;
		var getHeight = $goyalarchit$elm_dagre$Dagre$Position$height(config);
		var maxHeight = A2(
			$elm$core$Maybe$withDefault,
			config.bj,
			$elm$core$List$maximum(
				A2($elm$core$List$map, getHeight, l)));
		var newY = (currentY + maxHeight) + config.nW;
		var ys_updated = A3(
			$elm$core$List$foldl,
			F2(
				function (n, ys_) {
					return A3($elm$core$Dict$insert, n, currentY + (maxHeight / 2), ys_);
				}),
			ys,
			l);
		return _Utils_Tuple2(newY, ys_updated);
	});
var $goyalarchit$elm_dagre$Dagre$Position$positionY = F2(
	function (config, rankList) {
		var ys = $elm$core$Dict$empty;
		var _v0 = A3(
			$elm$core$List$foldl,
			$goyalarchit$elm_dagre$Dagre$Position$assignAbsoluteY(config),
			_Utils_Tuple2(0, ys),
			rankList);
		var ys_assigned = _v0.b;
		return ys_assigned;
	});
var $elm_community$list_extra$List$Extra$maximumBy = F2(
	function (f, ls) {
		var maxBy = F2(
			function (x, _v1) {
				var y = _v1.a;
				var fy = _v1.b;
				var fx = f(x);
				return (_Utils_cmp(fx, fy) > 0) ? _Utils_Tuple2(x, fx) : _Utils_Tuple2(y, fy);
			});
		if (ls.b) {
			if (!ls.b.b) {
				var l_ = ls.a;
				return $elm$core$Maybe$Just(l_);
			} else {
				var l_ = ls.a;
				var ls_ = ls.b;
				return $elm$core$Maybe$Just(
					A3(
						$elm$core$List$foldl,
						maxBy,
						_Utils_Tuple2(
							l_,
							f(l_)),
						ls_).a);
			}
		} else {
			return $elm$core$Maybe$Nothing;
		}
	});
var $goyalarchit$elm_dagre$Dagre$Position$translate = F2(
	function (config, coords) {
		var getWidth = $goyalarchit$elm_dagre$Dagre$Position$BK$width(config);
		var getHeight = $goyalarchit$elm_dagre$Dagre$Position$height(config);
		var coordsWithMinXY = $elm$core$Dict$values(
			A2(
				$elm$core$Dict$map,
				F2(
					function (n, _v3) {
						var x = _v3.a;
						var y = _v3.b;
						return _Utils_Tuple2(
							x - (getWidth(n) / 2),
							y - (getHeight(n) / 2));
					}),
				coords));
		var minX = A2(
			$elm$core$Maybe$withDefault,
			_Utils_Tuple2(0, 0),
			A2($elm_community$list_extra$List$Extra$minimumBy, $elm$core$Tuple$first, coordsWithMinXY)).a - config.mB;
		var minY = A2(
			$elm$core$Maybe$withDefault,
			_Utils_Tuple2(0, 0),
			A2($elm_community$list_extra$List$Extra$minimumBy, $elm$core$Tuple$second, coordsWithMinXY)).b - config.mC;
		var coordsWithMaxXY = $elm$core$Dict$values(
			A2(
				$elm$core$Dict$map,
				F2(
					function (n, _v2) {
						var x = _v2.a;
						var y = _v2.b;
						return _Utils_Tuple2(
							x + (getWidth(n) / 2),
							y + (getHeight(n) / 2));
					}),
				coords));
		var maxX = (A2(
			$elm$core$Maybe$withDefault,
			_Utils_Tuple2(500, 500),
			A2($elm_community$list_extra$List$Extra$maximumBy, $elm$core$Tuple$first, coordsWithMaxXY)).a - minX) + config.mB;
		var maxY = (A2(
			$elm$core$Maybe$withDefault,
			_Utils_Tuple2(500, 500),
			A2($elm_community$list_extra$List$Extra$maximumBy, $elm$core$Tuple$second, coordsWithMaxXY)).b - minY) + config.mC;
		return _Utils_Tuple2(
			A2(
				$elm$core$Dict$map,
				F2(
					function (_v0, _v1) {
						var x = _v1.a;
						var y = _v1.b;
						return _Utils_Tuple2(x - minX, y - minY);
					}),
				coords),
			_Utils_Tuple2(maxX, maxY));
	});
var $goyalarchit$elm_dagre$Dagre$Position$position = F3(
	function (config, g, _v0) {
		var rankList = _v0.a;
		var edges = _v0.b;
		var adjustedConfig = ((config.nV === 2) || (config.nV === 3)) ? _Utils_update(
			config,
			{bj: config.bB, lX: config.o7, bB: config.bj, o7: config.lX}) : config;
		var xs = A3(
			$goyalarchit$elm_dagre$Dagre$Position$BK$positionX,
			adjustedConfig,
			g,
			_Utils_Tuple2(rankList, edges));
		var ys = A2($goyalarchit$elm_dagre$Dagre$Position$positionY, adjustedConfig, rankList);
		var init_coords = A2($goyalarchit$elm_dagre$Dagre$Position$combinePoints, xs, ys);
		var final_coords = A2($goyalarchit$elm_dagre$Dagre$Position$applyRankDir, adjustedConfig.nV, init_coords);
		return A2($goyalarchit$elm_dagre$Dagre$Position$translate, config, final_coords);
	});
var $elm_community$graph$Graph$AcyclicGraph = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $elm_community$intdict$IntDict$Disjunct = F2(
	function (a, b) {
		return {$: 2, a: a, b: b};
	});
var $elm_community$intdict$IntDict$Left = 0;
var $elm_community$intdict$IntDict$Parent = F2(
	function (a, b) {
		return {$: 1, a: a, b: b};
	});
var $elm_community$intdict$IntDict$Right = 1;
var $elm_community$intdict$IntDict$SamePrefix = {$: 0};
var $elm_community$intdict$IntDict$combineBits = F3(
	function (a, b, mask) {
		return (a & (~mask)) | (b & mask);
	});
var $elm_community$intdict$IntDict$mostSignificantBranchingBit = F2(
	function (a, b) {
		return (_Utils_eq(a, $elm_community$intdict$IntDict$signBit) || _Utils_eq(b, $elm_community$intdict$IntDict$signBit)) ? $elm_community$intdict$IntDict$signBit : A2($elm$core$Basics$max, a, b);
	});
var $elm_community$intdict$IntDict$determineBranchRelation = F2(
	function (l, r) {
		var rp = r.o;
		var lp = l.o;
		var mask = $elm_community$intdict$IntDict$highestBitSet(
			A2($elm_community$intdict$IntDict$mostSignificantBranchingBit, lp.b5, rp.b5));
		var modifiedRightPrefix = A3($elm_community$intdict$IntDict$combineBits, rp.aQ, ~lp.aQ, mask);
		var prefix = A2($elm_community$intdict$IntDict$lcp, lp.aQ, modifiedRightPrefix);
		var childEdge = F2(
			function (branchPrefix, c) {
				return A2($elm_community$intdict$IntDict$isBranchingBitSet, branchPrefix, c.o.aQ) ? 1 : 0;
			});
		return _Utils_eq(lp, rp) ? $elm_community$intdict$IntDict$SamePrefix : (_Utils_eq(prefix, lp) ? A2(
			$elm_community$intdict$IntDict$Parent,
			0,
			A2(childEdge, l.o, r)) : (_Utils_eq(prefix, rp) ? A2(
			$elm_community$intdict$IntDict$Parent,
			1,
			A2(childEdge, r.o, l)) : A2(
			$elm_community$intdict$IntDict$Disjunct,
			prefix,
			A2(childEdge, prefix, l))));
	});
var $elm_community$intdict$IntDict$intersect = F2(
	function (l, r) {
		intersect:
		while (true) {
			var _v0 = _Utils_Tuple2(l, r);
			_v0$1:
			while (true) {
				_v0$2:
				while (true) {
					switch (_v0.a.$) {
						case 0:
							var _v1 = _v0.a;
							return $elm_community$intdict$IntDict$Empty;
						case 1:
							switch (_v0.b.$) {
								case 0:
									break _v0$1;
								case 1:
									break _v0$2;
								default:
									break _v0$2;
							}
						default:
							switch (_v0.b.$) {
								case 0:
									break _v0$1;
								case 1:
									var lr = _v0.b.a;
									var _v3 = A2($elm_community$intdict$IntDict$get, lr.dk, l);
									if (!_v3.$) {
										var v = _v3.a;
										return A2($elm_community$intdict$IntDict$leaf, lr.dk, v);
									} else {
										return $elm_community$intdict$IntDict$Empty;
									}
								default:
									var il = _v0.a.a;
									var ir = _v0.b.a;
									var _v4 = A2($elm_community$intdict$IntDict$determineBranchRelation, il, ir);
									switch (_v4.$) {
										case 0:
											return A3(
												$elm_community$intdict$IntDict$inner,
												il.o,
												A2($elm_community$intdict$IntDict$intersect, il.C, ir.C),
												A2($elm_community$intdict$IntDict$intersect, il.k, ir.k));
										case 1:
											if (!_v4.a) {
												if (_v4.b === 1) {
													var _v5 = _v4.a;
													var _v6 = _v4.b;
													var $temp$l = il.k,
														$temp$r = r;
													l = $temp$l;
													r = $temp$r;
													continue intersect;
												} else {
													var _v9 = _v4.a;
													var _v10 = _v4.b;
													var $temp$l = il.C,
														$temp$r = r;
													l = $temp$l;
													r = $temp$r;
													continue intersect;
												}
											} else {
												if (_v4.b === 1) {
													var _v7 = _v4.a;
													var _v8 = _v4.b;
													var $temp$l = l,
														$temp$r = ir.k;
													l = $temp$l;
													r = $temp$r;
													continue intersect;
												} else {
													var _v11 = _v4.a;
													var _v12 = _v4.b;
													var $temp$l = l,
														$temp$r = ir.C;
													l = $temp$l;
													r = $temp$r;
													continue intersect;
												}
											}
										default:
											return $elm_community$intdict$IntDict$Empty;
									}
							}
					}
				}
				var ll = _v0.a.a;
				return A2($elm_community$intdict$IntDict$member, ll.dk, r) ? l : $elm_community$intdict$IntDict$Empty;
			}
			var _v2 = _v0.b;
			return $elm_community$intdict$IntDict$Empty;
		}
	});
var $elm_community$graph$Graph$unsafeGet = F3(
	function (msg, id, graph) {
		var _v0 = A2($elm_community$graph$Graph$get, id, graph);
		if (_v0.$ === 1) {
			return $elm_community$graph$Graph$crashHack(msg);
		} else {
			var ctx = _v0.a;
			return ctx;
		}
	});
var $elm_community$graph$Graph$checkForBackEdges = F2(
	function (ordering, graph) {
		var success = function (_v3) {
			return A2($elm_community$graph$Graph$AcyclicGraph, graph, ordering);
		};
		var check = F2(
			function (id, _v2) {
				var backSet = _v2.a;
				var error = 'Graph.checkForBackEdges: `ordering` didn\'t contain `id`';
				var ctx = A3($elm_community$graph$Graph$unsafeGet, error, id, graph);
				var backSetWithId = A3($elm_community$intdict$IntDict$insert, id, 0, backSet);
				var backEdges = A2($elm_community$intdict$IntDict$intersect, ctx.q, backSetWithId);
				var _v0 = $elm_community$intdict$IntDict$findMin(backEdges);
				if (_v0.$ === 1) {
					return $elm$core$Result$Ok(
						_Utils_Tuple2(backSetWithId, 0));
				} else {
					var _v1 = _v0.a;
					var to = _v1.a;
					var label = _v1.b;
					return $elm$core$Result$Err(
						A3($elm_community$graph$Graph$Edge, id, to, label));
				}
			});
		return A2(
			$elm$core$Result$map,
			success,
			A3(
				$elm$core$List$foldl,
				F2(
					function (id, res) {
						return A2(
							$elm$core$Result$andThen,
							check(id),
							res);
					}),
				$elm$core$Result$Ok(
					_Utils_Tuple2($elm_community$intdict$IntDict$empty, 0)),
				ordering));
	});
var $elm_community$intdict$IntDict$keys = function (dict) {
	return A3(
		$elm_community$intdict$IntDict$foldr,
		F3(
			function (key, value, keyList) {
				return A2($elm$core$List$cons, key, keyList);
			}),
		_List_Nil,
		dict);
};
var $elm_community$graph$Graph$alongOutgoingEdges = function (ctx) {
	return $elm_community$intdict$IntDict$keys(ctx.q);
};
var $elm_community$graph$Graph$guidedDfs = F5(
	function (selectNeighbors, visitNode, startingSeeds, startingAcc, startingGraph) {
		var go = F3(
			function (seeds, acc, graph) {
				go:
				while (true) {
					if (!seeds.b) {
						return _Utils_Tuple2(acc, graph);
					} else {
						var next = seeds.a;
						var seeds1 = seeds.b;
						var _v1 = A2($elm_community$graph$Graph$get, next, graph);
						if (_v1.$ === 1) {
							var $temp$seeds = seeds1,
								$temp$acc = acc,
								$temp$graph = graph;
							seeds = $temp$seeds;
							acc = $temp$acc;
							graph = $temp$graph;
							continue go;
						} else {
							var ctx = _v1.a;
							var _v2 = A2(visitNode, ctx, acc);
							var accAfterDiscovery = _v2.a;
							var finishNode = _v2.b;
							var _v3 = A3(
								go,
								selectNeighbors(ctx),
								accAfterDiscovery,
								A2($elm_community$graph$Graph$remove, next, graph));
							var accBeforeFinish = _v3.a;
							var graph1 = _v3.b;
							var accAfterFinish = finishNode(accBeforeFinish);
							var $temp$seeds = seeds1,
								$temp$acc = accAfterFinish,
								$temp$graph = graph1;
							seeds = $temp$seeds;
							acc = $temp$acc;
							graph = $temp$graph;
							continue go;
						}
					}
				}
			});
		return A3(go, startingSeeds, startingAcc, startingGraph);
	});
var $elm_community$graph$Graph$nodeIds = A2($elm$core$Basics$composeR, $elm_community$graph$Graph$unGraph, $elm_community$intdict$IntDict$keys);
var $elm_community$graph$Graph$dfs = F3(
	function (visitNode, acc, graph) {
		return A5(
			$elm_community$graph$Graph$guidedDfs,
			$elm_community$graph$Graph$alongOutgoingEdges,
			visitNode,
			$elm_community$graph$Graph$nodeIds(graph),
			acc,
			graph).a;
	});
var $elm_community$graph$Graph$onFinish = F3(
	function (visitor, ctx, acc) {
		return _Utils_Tuple2(
			acc,
			visitor(ctx));
	});
var $elm_community$graph$Graph$checkAcyclic = function (graph) {
	var reversePostOrder = A3(
		$elm_community$graph$Graph$dfs,
		$elm_community$graph$Graph$onFinish(
			A2(
				$elm$core$Basics$composeR,
				function ($) {
					return $.ak;
				},
				A2(
					$elm$core$Basics$composeR,
					function ($) {
						return $.H;
					},
					$elm$core$List$cons))),
		_List_Nil,
		graph);
	return A2($elm_community$graph$Graph$checkForBackEdges, reversePostOrder, graph);
};
var $elm_community$intdict$IntDict$remove = F2(
	function (key, dict) {
		return A3(
			$elm_community$intdict$IntDict$update,
			key,
			$elm$core$Basics$always($elm$core$Maybe$Nothing),
			dict);
	});
var $goyalarchit$elm_dagre$Dagre$Acyclic$updateEdge = F2(
	function (e, graph) {
		var reverse = function (nodeCtx) {
			return _Utils_update(
				nodeCtx,
				{
					t: A3($elm_community$intdict$IntDict$insert, e.oT, e.cn, nodeCtx.t),
					q: A2($elm_community$intdict$IntDict$remove, e.oT, nodeCtx.q)
				});
		};
		var remove = function (nodeCtx) {
			return _Utils_update(
				nodeCtx,
				{
					t: A2($elm_community$intdict$IntDict$remove, e.bK, nodeCtx.t),
					q: A2($elm_community$intdict$IntDict$remove, e.oT, nodeCtx.q)
				});
		};
		return _Utils_eq(e.bK, e.oT) ? A3(
			$elm_community$graph$Graph$update,
			e.bK,
			$elm$core$Maybe$map(remove),
			graph) : A3(
			$elm_community$graph$Graph$update,
			e.bK,
			$elm$core$Maybe$map(reverse),
			graph);
	});
var $goyalarchit$elm_dagre$Dagre$Acyclic$makeAcyclic = function (_v0) {
	makeAcyclic:
	while (true) {
		var graph = _v0.a;
		var reversedEdges = _v0.b;
		var _v1 = $elm_community$graph$Graph$checkAcyclic(graph);
		if (!_v1.$) {
			var g = _v1.a;
			return _Utils_Tuple3(graph, g, reversedEdges);
		} else {
			var e = _v1.a;
			var newGraph = A2($goyalarchit$elm_dagre$Dagre$Acyclic$updateEdge, e, graph);
			var errorEdge = _Utils_Tuple2(e.oT, e.bK);
			var $temp$_v0 = _Utils_Tuple2(
				newGraph,
				A2($elm$core$List$cons, errorEdge, reversedEdges));
			_v0 = $temp$_v0;
			continue makeAcyclic;
		}
	}
};
var $goyalarchit$elm_dagre$Dagre$Acyclic$run = function (graph) {
	return $goyalarchit$elm_dagre$Dagre$Acyclic$makeAcyclic(
		_Utils_Tuple2(graph, _List_Nil));
};
var $goyalarchit$elm_dagre$Dagre$Acyclic$undoHelper = F3(
	function (originalEdges, e, controlPoints) {
		var controlPoints_e = A2(
			$elm$core$Maybe$withDefault,
			_List_Nil,
			A2($elm$core$Dict$get, e, controlPoints));
		var _v0 = e;
		var from = _v0.a;
		var to = _v0.b;
		return A2(
			$elm$core$List$member,
			_Utils_Tuple2(from, to),
			originalEdges) ? A3(
			$elm$core$Dict$insert,
			_Utils_Tuple2(to, from),
			$elm$core$List$reverse(controlPoints_e),
			controlPoints) : A3(
			$elm$core$Dict$insert,
			_Utils_Tuple2(to, from),
			$elm$core$List$reverse(controlPoints_e),
			A2(
				$elm$core$Dict$remove,
				_Utils_Tuple2(from, to),
				controlPoints));
	});
var $goyalarchit$elm_dagre$Dagre$Acyclic$undo = F3(
	function (originalEdges, reveresedEdges, controlPoints) {
		return A3(
			$elm$core$List$foldl,
			$goyalarchit$elm_dagre$Dagre$Acyclic$undoHelper(originalEdges),
			controlPoints,
			reveresedEdges);
	});
var $goyalarchit$elm_dagre$Dagre$Utils$getEdgesDirectedFromLayers = F2(
	function (_v0, edges) {
		var l1 = _v0.a;
		var l2 = _v0.b;
		return A2(
			$elm$core$List$filter,
			function (_v1) {
				var from = _v1.a;
				var to = _v1.b;
				return A2($elm$core$List$member, from, l1) && A2($elm$core$List$member, to, l2);
			},
			edges);
	});
var $elm_community$list_extra$List$Extra$dropWhile = F2(
	function (predicate, list) {
		dropWhile:
		while (true) {
			if (!list.b) {
				return _List_Nil;
			} else {
				var x = list.a;
				var xs = list.b;
				if (predicate(x)) {
					var $temp$predicate = predicate,
						$temp$list = xs;
					predicate = $temp$predicate;
					list = $temp$list;
					continue dropWhile;
				} else {
					return list;
				}
			}
		}
	});
var $elm_community$list_extra$List$Extra$takeWhile = function (predicate) {
	var takeWhileMemo = F2(
		function (memo, list) {
			takeWhileMemo:
			while (true) {
				if (!list.b) {
					return $elm$core$List$reverse(memo);
				} else {
					var x = list.a;
					var xs = list.b;
					if (predicate(x)) {
						var $temp$memo = A2($elm$core$List$cons, x, memo),
							$temp$list = xs;
						memo = $temp$memo;
						list = $temp$list;
						continue takeWhileMemo;
					} else {
						return $elm$core$List$reverse(memo);
					}
				}
			}
		});
	return takeWhileMemo(_List_Nil);
};
var $goyalarchit$elm_dagre$Dagre$Order$CrossCount$insertIntoSortedWithInversions = F3(
	function (p, e, _v0) {
		var prevInversions = _v0.a;
		var nodes = _v0.b;
		var _v1 = _Utils_Tuple2(
			A2($elm$core$List$take, p, nodes),
			A2($elm$core$List$drop, p + 1, nodes));
		var sorted = _v1.a;
		var unsorted = _v1.b;
		var _v2 = _Utils_Tuple2(
			A2(
				$elm_community$list_extra$List$Extra$takeWhile,
				function (n) {
					return _Utils_cmp(n, e) < 1;
				},
				sorted),
			A2(
				$elm_community$list_extra$List$Extra$dropWhile,
				function (n) {
					return _Utils_cmp(n, e) < 1;
				},
				sorted));
		var lesser = _v2.a;
		var greater = _v2.b;
		var finalNodes = $elm$core$List$concat(
			_List_fromArray(
				[
					lesser,
					_List_fromArray(
					[e]),
					greater,
					unsorted
				]));
		return _Utils_Tuple2(
			prevInversions + $elm$core$List$length(greater),
			finalNodes);
	});
var $goyalarchit$elm_dagre$Dagre$Order$CrossCount$insertionSortWithInversionAccumulator = function (nodes) {
	return A3(
		$elm_community$list_extra$List$Extra$indexedFoldl,
		$goyalarchit$elm_dagre$Dagre$Order$CrossCount$insertIntoSortedWithInversions,
		_Utils_Tuple2(0, nodes),
		nodes);
};
var $goyalarchit$elm_dagre$Dagre$Order$CrossCount$lexSortEdge = F2(
	function (_v0, _v1) {
		var f1 = _v0.a;
		var t1 = _v0.b;
		var f2 = _v1.a;
		var t2 = _v1.b;
		var _v2 = A2($elm$core$Basics$compare, f1, f2);
		switch (_v2) {
			case 0:
				return 0;
			case 1:
				return A2($elm$core$Basics$compare, t1, t2);
			default:
				return 2;
		}
	});
var $elm$core$List$sortWith = _List_sortWith;
var $goyalarchit$elm_dagre$Dagre$Order$CrossCount$mapAndSortEdges = F2(
	function (_v0, edges) {
		var l1 = _v0.a;
		var l2 = _v0.b;
		var mappedEdges = A2(
			$elm$core$List$map,
			$goyalarchit$elm_dagre$Dagre$Utils$mapEdgeToOrder(
				_Utils_Tuple2(l1, l2)),
			edges);
		var sortedEdges = A2($elm$core$List$sortWith, $goyalarchit$elm_dagre$Dagre$Order$CrossCount$lexSortEdge, mappedEdges);
		var southernPoints = A2(
			$elm$core$List$map,
			function (_v1) {
				var to = _v1.b;
				return to;
			},
			sortedEdges);
		return southernPoints;
	});
var $goyalarchit$elm_dagre$Dagre$Order$CrossCount$biLayerCrossCount = F2(
	function (edges, _v0) {
		var l1 = _v0.a;
		var l2 = _v0.b;
		var reqEdges = A2(
			$goyalarchit$elm_dagre$Dagre$Utils$getEdgesDirectedFromLayers,
			_Utils_Tuple2(l1, l2),
			edges);
		var reqSouthernPoints = A2(
			$goyalarchit$elm_dagre$Dagre$Order$CrossCount$mapAndSortEdges,
			_Utils_Tuple2(l1, l2),
			reqEdges);
		var _v1 = $goyalarchit$elm_dagre$Dagre$Order$CrossCount$insertionSortWithInversionAccumulator(reqSouthernPoints);
		var totalCrossings = _v1.a;
		return totalCrossings;
	});
var $goyalarchit$elm_dagre$Dagre$Order$CrossCount$crossCount = function (_v0) {
	var rankList = _v0.a;
	var edges = _v0.b;
	var toLayers = A2($elm$core$List$drop, 1, rankList);
	var fromLayers = A2(
		$elm$core$List$take,
		$elm$core$List$length(rankList) - 1,
		rankList);
	var adjacentLayers = A3(
		$elm$core$List$map2,
		F2(
			function (l1, l2) {
				return _Utils_Tuple2(l1, l2);
			}),
		fromLayers,
		toLayers);
	var cc = A3(
		$elm$core$List$foldl,
		$elm$core$Basics$add,
		0,
		A2(
			$elm$core$List$map,
			$goyalarchit$elm_dagre$Dagre$Order$CrossCount$biLayerCrossCount(edges),
			adjacentLayers));
	return cc;
};
var $goyalarchit$elm_dagre$Dagre$Order$Init$initOrder = function (layering) {
	return A2($elm$core$List$map, $elm$core$List$sort, layering);
};
var $goyalarchit$elm_dagre$Dagre$Order$Barycenter$NextLayer = 1;
var $goyalarchit$elm_dagre$Dagre$Order$Barycenter$PreviousLayer = 0;
var $goyalarchit$elm_dagre$Dagre$Order$Barycenter$calcBarycenter = F3(
	function (nodeId, neighbourFn, adjLayer) {
		var adj_nodes = neighbourFn(nodeId);
		var adj_positions = A2(
			$elm$core$List$map,
			$goyalarchit$elm_dagre$Dagre$Utils$getOrder(adjLayer),
			adj_nodes);
		return $elm$core$List$isEmpty(adj_positions) ? (-1) : ($elm$core$List$sum(adj_positions) / $elm$core$List$length(adj_positions));
	});
var $goyalarchit$elm_dagre$Dagre$Utils$getLayer = F2(
	function (rank, layering) {
		var layer = A2($elm_community$list_extra$List$Extra$getAt, rank, layering);
		return A2($elm$core$Maybe$withDefault, _List_Nil, layer);
	});
var $elm_community$list_extra$List$Extra$setAt = F2(
	function (index, value) {
		return A2(
			$elm_community$list_extra$List$Extra$updateAt,
			index,
			$elm$core$Basics$always(value));
	});
var $goyalarchit$elm_dagre$Dagre$Order$Barycenter$barycenter = F4(
	function (edges, fixedLayer, movableLayerRank, layering) {
		var movableLayer = A2($goyalarchit$elm_dagre$Dagre$Utils$getLayer, movableLayerRank, layering);
		var _v0 = function () {
			if (!fixedLayer) {
				return _Utils_Tuple2(
					$goyalarchit$elm_dagre$Dagre$Utils$alongIncomingEdges(edges),
					A2($goyalarchit$elm_dagre$Dagre$Utils$getLayer, movableLayerRank - 1, layering));
			} else {
				return _Utils_Tuple2(
					$goyalarchit$elm_dagre$Dagre$Utils$alongOutgoingEdges(edges),
					A2($goyalarchit$elm_dagre$Dagre$Utils$getLayer, movableLayerRank + 1, layering));
			}
		}();
		var neighbourFn = _v0.a;
		var adjLayer = _v0.b;
		var baryCenterValues = A2(
			$elm$core$List$map,
			function (n) {
				return _Utils_Tuple2(
					n,
					A3($goyalarchit$elm_dagre$Dagre$Order$Barycenter$calcBarycenter, n, neighbourFn, adjLayer));
			},
			movableLayer);
		var newOrder = A2(
			$elm$core$List$map,
			$elm$core$Tuple$first,
			A2($elm$core$List$sortBy, $elm$core$Tuple$second, baryCenterValues));
		return A3($elm_community$list_extra$List$Extra$setAt, movableLayerRank, newOrder, layering);
	});
var $goyalarchit$elm_dagre$Dagre$Order$sweepLayers = F2(
	function (_v0, iter) {
		var layering = _v0.a;
		var edges = _v0.b;
		var maxRank = $elm$core$List$length(layering) - 1;
		return (!A2($elm$core$Basics$modBy, 2, iter)) ? A3(
			$elm$core$List$foldl,
			A2($goyalarchit$elm_dagre$Dagre$Order$Barycenter$barycenter, edges, 0),
			layering,
			A2($elm$core$List$range, 1, maxRank)) : A3(
			$elm$core$List$foldl,
			A2($goyalarchit$elm_dagre$Dagre$Order$Barycenter$barycenter, edges, 1),
			layering,
			$elm$core$List$reverse(
				A2($elm$core$List$range, 0, maxRank - 1)));
	});
var $elm_community$list_extra$List$Extra$splitAt = F2(
	function (n, xs) {
		return _Utils_Tuple2(
			A2($elm$core$List$take, n, xs),
			A2($elm$core$List$drop, n, xs));
	});
var $elm_community$list_extra$List$Extra$uncons = function (list) {
	if (!list.b) {
		return $elm$core$Maybe$Nothing;
	} else {
		var first = list.a;
		var rest = list.b;
		return $elm$core$Maybe$Just(
			_Utils_Tuple2(first, rest));
	}
};
var $elm_community$list_extra$List$Extra$swapAt = F3(
	function (index1, index2, l) {
		swapAt:
		while (true) {
			if (_Utils_eq(index1, index2) || (index1 < 0)) {
				return l;
			} else {
				if (_Utils_cmp(index1, index2) > 0) {
					var $temp$index1 = index2,
						$temp$index2 = index1,
						$temp$l = l;
					index1 = $temp$index1;
					index2 = $temp$index2;
					l = $temp$l;
					continue swapAt;
				} else {
					var _v0 = A2($elm_community$list_extra$List$Extra$splitAt, index1, l);
					var part1 = _v0.a;
					var tail1 = _v0.b;
					var _v1 = A2($elm_community$list_extra$List$Extra$splitAt, index2 - index1, tail1);
					var head2 = _v1.a;
					var tail2 = _v1.b;
					var _v2 = _Utils_Tuple2(
						$elm_community$list_extra$List$Extra$uncons(head2),
						$elm_community$list_extra$List$Extra$uncons(tail2));
					if ((!_v2.a.$) && (!_v2.b.$)) {
						var _v3 = _v2.a.a;
						var value1 = _v3.a;
						var part2 = _v3.b;
						var _v4 = _v2.b.a;
						var value2 = _v4.a;
						var part3 = _v4.b;
						return $elm$core$List$concat(
							_List_fromArray(
								[
									part1,
									A2($elm$core$List$cons, value2, part2),
									A2($elm$core$List$cons, value1, part3)
								]));
					} else {
						return l;
					}
				}
			}
		}
	});
var $goyalarchit$elm_dagre$Dagre$Order$Transpose$optimizeNodePosition = F4(
	function (edges, _v0, i, _v1) {
		var prevLayer = _v0.a;
		var nextLayer = _v0.b;
		var curLayer = _v1.a;
		var improved = _v1.b;
		var oldLayers = _List_fromArray(
			[prevLayer, curLayer, nextLayer]);
		var newCurLayer = A3($elm_community$list_extra$List$Extra$swapAt, i, i + 1, curLayer);
		var newLayers = _List_fromArray(
			[prevLayer, newCurLayer, nextLayer]);
		return (_Utils_cmp(
			$goyalarchit$elm_dagre$Dagre$Order$CrossCount$crossCount(
				_Utils_Tuple2(newLayers, edges)),
			$goyalarchit$elm_dagre$Dagre$Order$CrossCount$crossCount(
				_Utils_Tuple2(oldLayers, edges))) < 0) ? _Utils_Tuple2(newCurLayer, true) : _Utils_Tuple2(curLayer, improved);
	});
var $goyalarchit$elm_dagre$Dagre$Order$Transpose$optimizeLayer = F3(
	function (edges, rank, _v0) {
		var layering = _v0.a;
		var improved = _v0.b;
		var prevLayer = A2($goyalarchit$elm_dagre$Dagre$Utils$getLayer, rank - 1, layering);
		var nextLayer = A2($goyalarchit$elm_dagre$Dagre$Utils$getLayer, rank + 1, layering);
		var curLayer = A2($goyalarchit$elm_dagre$Dagre$Utils$getLayer, rank, layering);
		var positions = A2(
			$elm$core$List$range,
			0,
			$elm$core$List$length(curLayer) - 2);
		var _v1 = A3(
			$elm$core$List$foldl,
			A2(
				$goyalarchit$elm_dagre$Dagre$Order$Transpose$optimizeNodePosition,
				edges,
				_Utils_Tuple2(prevLayer, nextLayer)),
			_Utils_Tuple2(curLayer, improved),
			positions);
		var newCurLayer = _v1.a;
		var newImproved = _v1.b;
		return _Utils_Tuple2(
			A3($elm_community$list_extra$List$Extra$setAt, rank, newCurLayer, layering),
			newImproved);
	});
var $goyalarchit$elm_dagre$Dagre$Order$Transpose$optimizeViaTranspose = F2(
	function (edges, layering) {
		var maxRank = $elm$core$List$length(layering) - 1;
		var ranks = A2($elm$core$List$range, 0, maxRank);
		var _v0 = A3(
			$elm$core$List$foldl,
			$goyalarchit$elm_dagre$Dagre$Order$Transpose$optimizeLayer(edges),
			_Utils_Tuple2(layering, false),
			ranks);
		var newLayering = _v0.a;
		var improved = _v0.b;
		return _Utils_Tuple2(newLayering, improved);
	});
var $goyalarchit$elm_dagre$Dagre$Order$Transpose$transpose = F2(
	function (edges, layering) {
		transpose:
		while (true) {
			var _v0 = A2($goyalarchit$elm_dagre$Dagre$Order$Transpose$optimizeViaTranspose, edges, layering);
			var newLayering = _v0.a;
			var improved = _v0.b;
			if (improved) {
				var $temp$edges = edges,
					$temp$layering = newLayering;
				edges = $temp$edges;
				layering = $temp$layering;
				continue transpose;
			} else {
				return layering;
			}
		}
	});
var $goyalarchit$elm_dagre$Dagre$Order$optimizeOrdering = F3(
	function (_v0, bestCC, _v1) {
		optimizeOrdering:
		while (true) {
			var layering = _v0.a;
			var edges = _v0.b;
			var iter = _v1.a;
			var lastBest = _v1.b;
			if (lastBest < 3) {
				var newLayering = A2(
					$goyalarchit$elm_dagre$Dagre$Order$sweepLayers,
					_Utils_Tuple2(layering, edges),
					iter);
				var newTransposedLayering = A2($goyalarchit$elm_dagre$Dagre$Order$Transpose$transpose, edges, newLayering);
				var newCC = $goyalarchit$elm_dagre$Dagre$Order$CrossCount$crossCount(
					_Utils_Tuple2(newTransposedLayering, edges));
				if (_Utils_cmp(newCC, bestCC) < 0) {
					var $temp$_v0 = _Utils_Tuple2(newTransposedLayering, edges),
						$temp$bestCC = newCC,
						$temp$_v1 = _Utils_Tuple2(iter + 1, 0);
					_v0 = $temp$_v0;
					bestCC = $temp$bestCC;
					_v1 = $temp$_v1;
					continue optimizeOrdering;
				} else {
					var $temp$_v0 = _Utils_Tuple2(layering, edges),
						$temp$bestCC = bestCC,
						$temp$_v1 = _Utils_Tuple2(iter + 1, lastBest + 1);
					_v0 = $temp$_v0;
					bestCC = $temp$bestCC;
					_v1 = $temp$_v1;
					continue optimizeOrdering;
				}
			} else {
				return layering;
			}
		}
	});
var $goyalarchit$elm_dagre$Dagre$Order$vertexOrder = function (_v0) {
	var layering = _v0.a;
	var edges = _v0.b;
	var initLayering = $goyalarchit$elm_dagre$Dagre$Order$Init$initOrder(layering);
	var bestCC = $goyalarchit$elm_dagre$Dagre$Order$CrossCount$crossCount(
		_Utils_Tuple2(initLayering, edges));
	return A3(
		$goyalarchit$elm_dagre$Dagre$Order$optimizeOrdering,
		_Utils_Tuple2(initLayering, edges),
		bestCC,
		_Utils_Tuple2(0, 0));
};
var $goyalarchit$elm_dagre$Dagre$runLayout = F2(
	function (edits, graph) {
		var config = A3(
			$elm$core$List$foldl,
			F2(
				function (f, a) {
					return f(a);
				}),
			$goyalarchit$elm_dagre$Dagre$defaultConfig,
			edits);
		var _v0 = $goyalarchit$elm_dagre$Dagre$Acyclic$run(graph);
		var newGraph = _v0.a;
		var newAcyclicGraph = _v0.b;
		var reversedEdges = _v0.c;
		var rankList = $goyalarchit$elm_dagre$Dagre$Rank$assignRanks(newAcyclicGraph);
		var edges = $goyalarchit$elm_dagre$Dagre$Utils$getEdges(newGraph);
		var _v1 = $goyalarchit$elm_dagre$Dagre$Normalize$addDummyNodesAndSplitEdges(
			_Utils_Tuple2(rankList, edges));
		var _v2 = _v1.a;
		var newRankList = _v2.a;
		var newEdges = _v2.b;
		var controlPoints = _v1.b;
		var finalControlPoints = A3(
			$goyalarchit$elm_dagre$Dagre$Acyclic$undo,
			$goyalarchit$elm_dagre$Dagre$Utils$getEdges(graph),
			reversedEdges,
			controlPoints);
		var bestRankList = $goyalarchit$elm_dagre$Dagre$Order$vertexOrder(
			_Utils_Tuple2(newRankList, newEdges));
		var _v3 = A3(
			$goyalarchit$elm_dagre$Dagre$Position$position,
			config,
			newGraph,
			_Utils_Tuple2(bestRankList, newEdges));
		var finalDict = _v3.a;
		var _v4 = _v3.b;
		var w = _v4.a;
		var h = _v4.b;
		return {h9: finalControlPoints, k5: finalDict, bj: h, bB: w};
	});
var $author$project$Services$Lenses$setPosition = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.e$;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{e$: value});
		}));
var $author$project$PagesComponents$Organization_$Project_$Models$DiagramObject$size = function (o) {
	return $author$project$PagesComponents$Organization_$Project_$Models$DiagramObject$area(o).ox;
};
var $author$project$PagesComponents$Organization_$Project_$Models$DiagramObject$toMemo = function (o) {
	if (o.$ === 1) {
		var m = o.a;
		return $elm$core$Maybe$Just(m);
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $author$project$PagesComponents$Organization_$Project_$Models$DiagramObject$toTable = function (o) {
	if (!o.$) {
		var t = o.a;
		return $elm$core$Maybe$Just(t);
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $goyalarchit$elm_dagre$Dagre$Attributes$widthDict = function (dict) {
	var absDict = A2(
		$elm$core$Dict$map,
		F2(
			function (_v0, v) {
				return $elm$core$Basics$abs(v);
			}),
		dict);
	return function (a) {
		return _Utils_update(
			a,
			{o7: absDict});
	};
};
var $author$project$Libs$Models$Delta$zero = {aY: 0, aZ: 0};
var $author$project$PagesComponents$Organization_$Project_$Updates$Canvas$arrangeTablesAlgo = F3(
	function (tables, memos, layout) {
		var nodes = A2(
			$elm$core$List$indexedMap,
			$elm_community$graph$Graph$Node,
			_Utils_ap(
				A2(
					$elm$core$List$map,
					$author$project$PagesComponents$Organization_$Project_$Models$DiagramObject$fromTable,
					A3(
						$author$project$Libs$List$filterInBy,
						function ($) {
							return $.H;
						},
						tables,
						layout.oM)),
				A2(
					$elm$core$List$map,
					$author$project$PagesComponents$Organization_$Project_$Models$DiagramObject$fromMemo,
					A3(
						$author$project$Libs$List$filterInBy,
						function ($) {
							return $.H;
						},
						memos,
						layout.gw))));
		var tableNodeId = $elm$core$Dict$fromList(
			A2(
				$elm$core$List$filterMap,
				function (n) {
					return A2(
						$elm$core$Maybe$map,
						function (t) {
							return _Utils_Tuple2(t.H, n.H);
						},
						$author$project$PagesComponents$Organization_$Project_$Models$DiagramObject$toTable(n.cn));
				},
				nodes));
		var memoNodeId = $elm$core$Dict$fromList(
			A2(
				$elm$core$List$filterMap,
				function (n) {
					return A2(
						$elm$core$Maybe$map,
						function (m) {
							return _Utils_Tuple2(m.H, n.H);
						},
						$author$project$PagesComponents$Organization_$Project_$Models$DiagramObject$toMemo(n.cn));
				},
				nodes));
		var initialContentArea = $author$project$Models$Area$mergeCanvas(
			A2(
				$elm$core$List$map,
				A2(
					$elm$core$Basics$composeR,
					function ($) {
						return $.cn;
					},
					A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Models$DiagramObject$area, $author$project$Models$Area$offGrid)),
				nodes));
		var edges = A2(
			$elm$core$List$concatMap,
			function (_v1) {
				var n = _v1.a;
				var t = _v1.b;
				return A2(
					$elm$core$List$map,
					function (n2) {
						return A3($elm_community$graph$Graph$Edge, n.H, n2, 0);
					},
					A2(
						$elm$core$List$filterMap,
						function (id) {
							return A2($elm$core$Dict$get, id, tableNodeId);
						},
						$elm$core$Dict$keys(
							A2(
								$elm$core$Dict$filter,
								function (_v2) {
									return function ($) {
										return $.fh;
									};
								},
								t.n$))));
			},
			A2(
				$elm$core$List$filterMap,
				function (n) {
					return A2(
						$elm$core$Maybe$map,
						function (t) {
							return _Utils_Tuple2(n, t);
						},
						$author$project$PagesComponents$Organization_$Project_$Models$DiagramObject$toTable(n.cn));
				},
				nodes));
		var diagram = A2(
			$goyalarchit$elm_dagre$Dagre$runLayout,
			_List_fromArray(
				[
					$goyalarchit$elm_dagre$Dagre$Attributes$rankDir(2),
					$goyalarchit$elm_dagre$Dagre$Attributes$widthDict(
					$elm$core$Dict$fromList(
						A2(
							$elm$core$List$map,
							function (n) {
								return _Utils_Tuple2(
									n.H,
									$author$project$Models$Size$extractCanvas(
										$author$project$PagesComponents$Organization_$Project_$Models$DiagramObject$size(n.cn)).bB);
							},
							nodes))),
					$goyalarchit$elm_dagre$Dagre$Attributes$heightDict(
					$elm$core$Dict$fromList(
						A2(
							$elm$core$List$map,
							function (n) {
								return _Utils_Tuple2(
									n.H,
									$author$project$Models$Size$extractCanvas(
										$author$project$PagesComponents$Organization_$Project_$Models$DiagramObject$size(n.cn)).bj);
							},
							nodes)))
				]),
			A2($elm_community$graph$Graph$fromNodesAndEdges, nodes, edges));
		var positions = A2(
			$elm$core$Dict$map,
			function (_v0) {
				return A2($elm$core$Basics$composeR, $author$project$Libs$Models$Position$fromTuple, $author$project$Models$Position$canvas);
			},
			diagram.k5);
		var finalContentArea = A2(
			$elm$core$Maybe$map,
			function (p) {
				return {
					e$: p,
					ox: $author$project$Models$Size$canvas(diagram)
				};
			},
			A2(
				$author$project$Libs$List$reduce,
				$author$project$Models$Position$minCanvas,
				$elm$core$Dict$values(positions)));
		var delta = A2(
			$elm$core$Maybe$withDefault,
			$author$project$Libs$Models$Delta$zero,
			A3(
				$elm$core$Maybe$map2,
				F2(
					function (i, f) {
						return A2($author$project$Models$Position$diffCanvas, f.e$, i.e$);
					}),
				initialContentArea,
				finalContentArea));
		var getPosition = function (id) {
			return A2(
				$elm$core$Maybe$map,
				A2(
					$elm$core$Basics$composeR,
					$author$project$Models$Position$moveCanvas(delta),
					$author$project$Models$Position$onGrid),
				A2($elm$core$Dict$get, id, positions));
		};
		return A2(
			$author$project$Services$Lenses$mapMemos,
			$elm$core$List$map(
				function (m) {
					return A3(
						$author$project$Libs$Maybe$mapOrElse,
						function (p) {
							return A2($author$project$Services$Lenses$setPosition, p, m);
						},
						m,
						A2(
							$elm$core$Maybe$andThen,
							getPosition,
							A2($elm$core$Dict$get, m.H, memoNodeId)));
				}),
			A2(
				$author$project$Services$Lenses$mapTables,
				$elm$core$List$map(
					function (t) {
						return A3(
							$author$project$Libs$Maybe$mapOrElse,
							function (p) {
								return A2(
									$author$project$Services$Lenses$mapProps,
									$author$project$Services$Lenses$setPosition(p),
									t);
							},
							t,
							A2(
								$elm$core$Maybe$andThen,
								getPosition,
								A2($elm$core$Dict$get, t.H, tableNodeId)));
					}),
				layout));
	});
var $author$project$PagesComponents$Organization_$Project_$Models$ErdLayout$empty = function (now) {
	return {fJ: $author$project$Models$Project$CanvasProps$empty, ic: now, gw: _List_Nil, oM: _List_Nil, kb: now};
};
var $author$project$PagesComponents$Organization_$Project_$Models$Erd$currentLayout = function (erd) {
	return A3(
		$author$project$Libs$Dict$getOrElse,
		erd.id,
		$author$project$PagesComponents$Organization_$Project_$Models$ErdLayout$empty($author$project$Libs$Time$zero),
		erd.i$);
};
var $author$project$Libs$Models$Size$div = F2(
	function (factor, size) {
		return A2($author$project$Libs$Models$Size$Size, size.bB / factor, size.bj / factor);
	});
var $author$project$Models$Size$divCanvas = F2(
	function (factor, _v0) {
		var size = _v0;
		return $author$project$Models$Size$canvas(
			A2($author$project$Libs$Models$Size$div, factor, size));
	});
var $author$project$Libs$Models$Delta$fromTuple = function (_v0) {
	var dx = _v0.a;
	var dy = _v0.b;
	return A2($author$project$Libs$Models$Delta$Delta, dx, dy);
};
var $author$project$Libs$Models$Size$toTuple = function (size) {
	return _Utils_Tuple2(size.bB, size.bj);
};
var $author$project$Models$Size$toTupleCanvas = function (_v0) {
	var size = _v0;
	return $author$project$Libs$Models$Size$toTuple(size);
};
var $author$project$Models$Area$centerCanvas = function (area) {
	return A2(
		$author$project$Models$Position$moveCanvas,
		$author$project$Libs$Models$Delta$fromTuple(
			$author$project$Models$Size$toTupleCanvas(
				A2($author$project$Models$Size$divCanvas, 2, area.ox))),
		area.e$);
};
var $author$project$Conf$canvas = {
	lV: 10,
	pi: {oM: 10},
	hU: {mE: 5, mM: 0.001, oC: 0.001}
};
var $elm$core$Basics$clamp = F3(
	function (low, high, number) {
		return (_Utils_cmp(number, low) < 0) ? low : ((_Utils_cmp(number, high) > 0) ? high : number);
	});
var $author$project$Libs$Models$Size$ratio = F2(
	function (b, a) {
		return A2($author$project$Libs$Models$Delta$Delta, a.bB / b.bB, a.bj / b.bj);
	});
var $author$project$Models$Size$ratioCanvas = F2(
	function (_v0, _v1) {
		var b = _v0;
		var a = _v1;
		return A2($author$project$Libs$Models$Size$ratio, b, a);
	});
var $author$project$Libs$Models$Size$sub = F2(
	function (amount, size) {
		return A2($author$project$Libs$Models$Size$Size, size.bB - amount, size.bj - amount);
	});
var $author$project$Models$Size$subCanvas = F2(
	function (amount, _v0) {
		var size = _v0;
		return $author$project$Models$Size$canvas(
			A2($author$project$Libs$Models$Size$sub, amount, size));
	});
var $author$project$PagesComponents$Organization_$Project_$Updates$Canvas$computeZoom = F4(
	function (erdViewport, padding, contentArea, zoom) {
		var viewportSize = A2($author$project$Models$Size$subCanvas, (2 * padding) / zoom, erdViewport.ox);
		var grow = A2($author$project$Models$Size$ratioCanvas, contentArea.ox, viewportSize);
		var newZoom = A3(
			$elm$core$Basics$clamp,
			$author$project$Conf$canvas.hU.mM,
			1,
			zoom * A2($elm$core$Basics$min, grow.aY, grow.aZ));
		return newZoom;
	});
var $author$project$Libs$Models$Position$div = F2(
	function (factor, pos) {
		return A2($author$project$Libs$Models$Position$Position, pos.C / factor, pos.ad / factor);
	});
var $author$project$Models$Position$divCanvas = F2(
	function (factor, _v0) {
		var pos = _v0;
		return $author$project$Models$Position$canvas(
			A2($author$project$Libs$Models$Position$div, factor, pos));
	});
var $author$project$Models$Area$divCanvas = F2(
	function (factor, area) {
		return A2(
			$author$project$Models$Area$Canvas,
			A2($author$project$Models$Position$divCanvas, factor, area.e$),
			A2($author$project$Models$Size$divCanvas, factor, area.ox));
	});
var $author$project$Models$Position$zeroCanvas = $author$project$Libs$Models$Position$zero;
var $author$project$PagesComponents$Organization_$Project_$Updates$Canvas$computeFit = F4(
	function (erdViewport, padding, content, zoom) {
		var newZoom = A4($author$project$PagesComponents$Organization_$Project_$Updates$Canvas$computeZoom, erdViewport, padding, content, zoom);
		var newContentCenter = $author$project$Models$Area$centerCanvas(content);
		var growFactor = newZoom / zoom;
		var newViewport = A2($author$project$Models$Area$divCanvas, growFactor, erdViewport);
		var newViewportCenter = A2(
			$author$project$Models$Position$moveCanvas,
			A2($author$project$Models$Position$diffCanvas, newViewport.e$, $author$project$Models$Position$zeroCanvas),
			$author$project$Models$Area$centerCanvas(newViewport));
		var offset = A2($author$project$Models$Position$diffCanvas, newContentCenter, newViewportCenter);
		return _Utils_Tuple2(newZoom, offset);
	});
var $author$project$Services$Lenses$setCanvas = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.fJ;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{fJ: value});
		}));
var $author$project$Services$Lenses$mapCanvas = A2(
	$author$project$Services$Lenses$map_,
	function ($) {
		return $.fJ;
	},
	$author$project$Services$Lenses$setCanvas);
var $author$project$Services$Lenses$mapPosition = A2(
	$author$project$Services$Lenses$map_,
	function ($) {
		return $.e$;
	},
	$author$project$Services$Lenses$setPosition);
var $author$project$Models$Position$moveGrid = F2(
	function (delta, _v0) {
		var pos = _v0;
		return $author$project$Models$Position$grid(
			A2($author$project$Libs$Models$Position$move, delta, pos));
	});
var $author$project$Services$Lenses$setZoom = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.hU;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{hU: value});
		}));
var $author$project$Models$Area$Diagram = F2(
	function (position, size) {
		return {e$: position, ox: size};
	});
var $author$project$Models$Position$diagramToCanvas = F2(
	function (_v0, _v1) {
		var canvasPos = _v0;
		var pos = _v1;
		return $author$project$Models$Position$canvas(
			A2(
				$author$project$Libs$Models$Position$move,
				A2($author$project$Libs$Models$Position$diff, canvasPos, $author$project$Libs$Models$Position$zero),
				pos));
	});
var $author$project$Models$Area$diagramToCanvas = F2(
	function (canvasPos, _v0) {
		var position = _v0.e$;
		var size = _v0.ox;
		return A2(
			$author$project$Models$Area$Canvas,
			A2($author$project$Models$Position$diagramToCanvas, canvasPos, position),
			size);
	});
var $author$project$Models$Size$viewportToCanvas = F2(
	function (zoom, _v0) {
		var size = _v0;
		return $author$project$Models$Size$canvas(
			A2($author$project$Libs$Models$Size$div, zoom, size));
	});
var $author$project$Models$Project$CanvasProps$viewport = F2(
	function (erdElem, canvas) {
		return A2(
			$author$project$Models$Area$diagramToCanvas,
			canvas.e$,
			A2(
				$author$project$Models$Area$Diagram,
				$author$project$Models$Position$zeroDiagram,
				A2($author$project$Models$Size$viewportToCanvas, canvas.hU, erdElem.ox)));
	});
var $author$project$PagesComponents$Organization_$Project_$Updates$Canvas$fitCanvasAlgo = F4(
	function (erdElem, tables, memos, layout) {
		return A2(
			$elm$core$Maybe$withDefault,
			layout,
			A2(
				$elm$core$Maybe$map,
				function (contentArea) {
					var _v0 = A4(
						$author$project$PagesComponents$Organization_$Project_$Updates$Canvas$computeFit,
						A2($author$project$Models$Project$CanvasProps$viewport, erdElem, layout.fJ),
						$author$project$Conf$constants.kR,
						contentArea,
						layout.fJ.hU);
					var newZoom = _v0.a;
					var centerOffset = _v0.b;
					return A2(
						$author$project$Services$Lenses$mapMemos,
						$elm$core$List$map(
							$author$project$Services$Lenses$mapPosition(
								$author$project$Models$Position$moveGrid(centerOffset))),
						A2(
							$author$project$Services$Lenses$mapTables,
							$elm$core$List$map(
								$author$project$Services$Lenses$mapProps(
									$author$project$Services$Lenses$mapPosition(
										$author$project$Models$Position$moveGrid(centerOffset)))),
							A2(
								$author$project$Services$Lenses$mapCanvas,
								A2(
									$elm$core$Basics$composeR,
									$author$project$Services$Lenses$setPosition($author$project$Models$Position$zeroDiagram),
									$author$project$Services$Lenses$setZoom(newZoom)),
								layout)));
				},
				$author$project$Models$Area$mergeCanvas(
					_Utils_ap(
						A2(
							$elm$core$List$map,
							A2(
								$elm$core$Basics$composeR,
								function ($) {
									return $.nU;
								},
								$author$project$Models$Area$offGrid),
							A3(
								$author$project$Libs$List$filterInBy,
								function ($) {
									return $.H;
								},
								tables,
								layout.oM)),
						A2(
							$elm$core$List$map,
							$author$project$Models$Area$offGrid,
							A3(
								$author$project$Libs$List$filterInBy,
								function ($) {
									return $.H;
								},
								memos,
								layout.gw))))));
	});
var $author$project$Services$Lenses$mapD_ = F5(
	function (get, update, key, transform, item) {
		return A2(
			update,
			A3(
				$elm$core$Dict$update,
				key,
				$elm$core$Maybe$map(transform),
				get(item)),
			item);
	});
var $author$project$Services$Lenses$setLayouts = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.i$;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{i$: value});
		}));
var $author$project$Services$Lenses$mapLayoutsD = A2(
	$author$project$Services$Lenses$mapD_,
	function ($) {
		return $.i$;
	},
	$author$project$Services$Lenses$setLayouts);
var $author$project$PagesComponents$Organization_$Project_$Models$Erd$mapCurrentLayoutWithTime = F3(
	function (now, transform, erd) {
		return A3(
			$author$project$Services$Lenses$mapLayoutsD,
			erd.id,
			A2(
				$elm$core$Basics$composeR,
				transform,
				function (l) {
					return _Utils_update(
						l,
						{kb: now});
				}),
			erd);
	});
var $author$project$PagesComponents$Organization_$Project_$Updates$Canvas$objectsToFit = function (layout) {
	var selectedTables = A2(
		$elm$core$List$filter,
		A2(
			$elm$core$Basics$composeR,
			function ($) {
				return $.nU;
			},
			function ($) {
				return $.cy;
			}),
		layout.oM);
	return (!_Utils_eq(selectedTables, _List_Nil)) ? $elm$core$Maybe$Just(
		_Utils_Tuple2(
			A2(
				$elm$core$List$map,
				function ($) {
					return $.H;
				},
				selectedTables),
			_List_Nil)) : ((!_Utils_eq(layout.oM, _List_Nil)) ? $elm$core$Maybe$Just(
		_Utils_Tuple2(
			A2(
				$elm$core$List$map,
				function ($) {
					return $.H;
				},
				layout.oM),
			A2(
				$elm$core$List$map,
				function ($) {
					return $.H;
				},
				layout.gw))) : $elm$core$Maybe$Nothing);
};
var $author$project$PagesComponents$Organization_$Project_$Updates$Canvas$arrangeTables = F3(
	function (now, erdElem, erd) {
		return A2(
			$elm$core$Maybe$withDefault,
			_Utils_Tuple2(
				erd,
				$author$project$Libs$Task$send(
					$author$project$PagesComponents$Organization_$Project_$Models$Toast(
						A2($author$project$Services$Toasts$create, 'warning', 'No table to arrange in the canvas')))),
			A2(
				$elm$core$Maybe$map,
				function (_v0) {
					var tables = _v0.a;
					var memos = _v0.b;
					return _Utils_Tuple2(
						A3(
							$author$project$PagesComponents$Organization_$Project_$Models$Erd$mapCurrentLayoutWithTime,
							now,
							A2(
								$elm$core$Basics$composeR,
								A2($author$project$PagesComponents$Organization_$Project_$Updates$Canvas$arrangeTablesAlgo, tables, memos),
								A3($author$project$PagesComponents$Organization_$Project_$Updates$Canvas$fitCanvasAlgo, erdElem, tables, memos)),
							erd),
						$elm$core$Platform$Cmd$none);
				},
				$author$project$PagesComponents$Organization_$Project_$Updates$Canvas$objectsToFit(
					$author$project$PagesComponents$Organization_$Project_$Models$Erd$currentLayout(erd))));
	});
var $author$project$Ports$AutofocusWithin = function (a) {
	return {$: 7, a: a};
};
var $author$project$Ports$autofocusWithin = function (id) {
	return $author$project$Ports$messageToJs(
		$author$project$Ports$AutofocusWithin(id));
};
var $author$project$PagesComponents$Organization_$Project_$Models$Erd$canChangeTableColor = function (erd) {
	return true;
};
var $author$project$Components$Slices$ProPlan$colorsInit = {bU: $elm$core$Maybe$Nothing, d2: false, ft: ''};
var $elm$html$Html$b = _VirtualDom_node('b');
var $author$project$Libs$Html$bText = function (content) {
	return A2(
		$elm$html$Html$b,
		_List_Nil,
		_List_fromArray(
			[
				$elm$html$Html$text(content)
			]));
};
var $author$project$Libs$Tailwind$bg_100 = function (_v0) {
	var color = _v0;
	return 'bg-' + (color + '-100');
};
var $author$project$Components$Slices$ProPlan$ToggleTweet = {$: 0};
var $elm$html$Html$Attributes$type_ = $elm$html$Html$Attributes$stringProperty('type');
var $author$project$Components$Slices$ProPlan$colorsTweetDivider = F2(
	function (wrap, color) {
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('mt-3 relative')
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('absolute inset-0 flex items-center'),
							$author$project$Libs$Html$Attributes$ariaHidden(true)
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('w-full border-t border-gray-300')
								]),
							_List_Nil)
						])),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('relative flex justify-center')
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$button,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$type_('button'),
									$elm$html$Html$Events$onClick(
									wrap($author$project$Components$Slices$ProPlan$ToggleTweet)),
									$author$project$Libs$Html$Attributes$css(
									_List_fromArray(
										[
											'inline-flex items-center rounded-full border border-gray-300 bg-white px-4 py-1.5 text-sm font-medium leading-5 text-gray-700 shadow-sm hover:bg-gray-50',
											$author$project$Libs$Tailwind$focus_ring_500(color)
										]))
								]),
							_List_fromArray(
								[
									$elm$html$Html$text('Or tweet to unlock feature')
								]))
						]))
				]));
	});
var $author$project$Components$Slices$ProPlan$GetTableColorTweet = F2(
	function (a, b) {
		return {$: 2, a: a, b: b};
	});
var $author$project$Components$Slices$ProPlan$UpdateTweetUrl = function (a) {
	return {$: 1, a: a};
};
var $author$project$Libs$Html$Attributes$ariaDescribedby = function (targetId) {
	return A2($elm$html$Html$Attributes$attribute, 'aria-describedby', targetId);
};
var $author$project$Libs$Tailwind$border_500 = function (_v0) {
	var color = _v0;
	return 'border-' + (color + '-500');
};
var $elm$html$Html$Attributes$for = $elm$html$Html$Attributes$stringProperty('htmlFor');
var $elm$html$Html$Attributes$id = $elm$html$Html$Attributes$stringProperty('id');
var $elm$html$Html$input = _VirtualDom_node('input');
var $elm$html$Html$label = _VirtualDom_node('label');
var $elm$html$Html$Attributes$name = $elm$html$Html$Attributes$stringProperty('name');
var $elm$html$Html$Events$onBlur = function (msg) {
	return A2(
		$elm$html$Html$Events$on,
		'blur',
		$elm$json$Json$Decode$succeed(msg));
};
var $elm$html$Html$Events$alwaysStop = function (x) {
	return _Utils_Tuple2(x, true);
};
var $elm$virtual_dom$VirtualDom$MayStopPropagation = function (a) {
	return {$: 1, a: a};
};
var $elm$html$Html$Events$stopPropagationOn = F2(
	function (event, decoder) {
		return A2(
			$elm$virtual_dom$VirtualDom$on,
			event,
			$elm$virtual_dom$VirtualDom$MayStopPropagation(decoder));
	});
var $elm$html$Html$Events$targetValue = A2(
	$elm$json$Json$Decode$at,
	_List_fromArray(
		['target', 'value']),
	$elm$json$Json$Decode$string);
var $elm$html$Html$Events$onInput = function (tagger) {
	return A2(
		$elm$html$Html$Events$stopPropagationOn,
		'input',
		A2(
			$elm$json$Json$Decode$map,
			$elm$html$Html$Events$alwaysStop,
			A2($elm$json$Json$Decode$map, tagger, $elm$html$Html$Events$targetValue)));
};
var $elm$html$Html$Attributes$placeholder = $elm$html$Html$Attributes$stringProperty('placeholder');
var $elm$html$Html$Attributes$value = $elm$html$Html$Attributes$stringProperty('value');
var $author$project$Components$Slices$ProPlan$colorsTweetInput = F5(
	function (wrap, organizationId, inputId, inputValue, color) {
		return A2(
			$elm$html$Html$div,
			_List_Nil,
			_List_fromArray(
				[
					A2(
					$elm$html$Html$label,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$for(inputId),
							$elm$html$Html$Attributes$class('block text-sm font-medium text-gray-700')
						]),
					_List_fromArray(
						[
							$elm$html$Html$text('Your tweet url')
						])),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('mt-1')
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$input,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$type_('url'),
									$elm$html$Html$Attributes$name(inputId),
									$elm$html$Html$Attributes$id(inputId),
									$elm$html$Html$Attributes$value(inputValue),
									$elm$html$Html$Events$onInput(
									A2($elm$core$Basics$composeR, $author$project$Components$Slices$ProPlan$UpdateTweetUrl, wrap)),
									$elm$html$Html$Events$onBlur(
									wrap(
										A2($author$project$Components$Slices$ProPlan$GetTableColorTweet, organizationId, inputValue))),
									$elm$html$Html$Attributes$placeholder('ex: https://twitter.com/azimuttapp/status/1442355066636161032'),
									$author$project$Libs$Html$Attributes$ariaDescribedby(inputId + '-description'),
									$author$project$Libs$Html$Attributes$css(
									_List_fromArray(
										[
											'block w-full rounded-md border-gray-300 shadow-sm sm:text-sm',
											$author$project$Libs$Tailwind$focus(
											_List_fromArray(
												[
													$author$project$Libs$Tailwind$border_500(color),
													$author$project$Libs$Tailwind$ring_500(color)
												]))
										]))
								]),
							_List_Nil)
						]))
				]));
	});
var $elm$html$Html$blockquote = _VirtualDom_node('blockquote');
var $author$project$Components$Atoms$Icon$quote = function (styles) {
	return A2(
		$elm$svg$Svg$svg,
		_List_fromArray(
			[
				$elm$svg$Svg$Attributes$viewBox('0 0 32 32'),
				$elm$svg$Svg$Attributes$fill('currentColor'),
				$author$project$Libs$Html$Attributes$ariaHidden(true),
				$author$project$Libs$Svg$Attributes$css(
				_List_fromArray(
					['h-8 w-8', styles]))
			]),
		_List_fromArray(
			[
				A2(
				$elm$svg$Svg$path,
				_List_fromArray(
					[
						$elm$svg$Svg$Attributes$d('M9.352 4C4.456 7.456 1 13.12 1 19.36c0 5.088 3.072 8.064 6.624 8.064 3.36 0 5.856-2.688 5.856-5.856 0-3.168-2.208-5.472-5.088-5.472-.576 0-1.344.096-1.536.192.48-3.264 3.552-7.104 6.624-9.024L9.352 4zm16.512 0c-4.8 3.456-8.256 9.12-8.256 15.36 0 5.088 3.072 8.064 6.624 8.064 3.264 0 5.856-2.688 5.856-5.856 0-3.168-2.304-5.472-5.184-5.472-.576 0-1.248.096-1.44.192.48-3.264 3.456-7.104 6.528-9.024L25.864 4z')
					]),
				_List_Nil)
			]));
};
var $elm$html$Html$a = _VirtualDom_node('a');
var $author$project$Track$externalLink = function (url) {
	return {
		lp: _List_fromArray(
			[
				_Utils_Tuple2('source', 'editor'),
				_Utils_Tuple2('url', url)
			]),
		eS: 'external_link_clicked',
		nx: $elm$core$Maybe$Nothing,
		nN: $elm$core$Maybe$Nothing
	};
};
var $elm$html$Html$Attributes$href = function (url) {
	return A2(
		$elm$html$Html$Attributes$stringProperty,
		'href',
		_VirtualDom_noJavaScriptUri(url));
};
var $elm$html$Html$Attributes$rel = _VirtualDom_attribute('rel');
var $elm$html$Html$Attributes$target = $elm$html$Html$Attributes$stringProperty('target');
var $author$project$Libs$Html$Attributes$hrefBlank = function (url) {
	return _List_fromArray(
		[
			$elm$html$Html$Attributes$href(url),
			$elm$html$Html$Attributes$target('_blank'),
			$elm$html$Html$Attributes$rel('noopener')
		]);
};
var $author$project$Libs$Html$Attributes$track = function (event) {
	var moreDetails = _Utils_ap(
		$author$project$Libs$Maybe$toList(
			A2(
				$elm$core$Maybe$map,
				function (id) {
					return _Utils_Tuple2('organization', id);
				},
				event.nx)),
		$author$project$Libs$Maybe$toList(
			A2(
				$elm$core$Maybe$map,
				function (id) {
					return _Utils_Tuple2('project', id);
				},
				event.nN)));
	return A2(
		$elm$core$List$cons,
		A2($elm$html$Html$Attributes$attribute, 'data-track-event', event.eS),
		A2(
			$elm$core$List$map,
			function (_v0) {
				var k = _v0.a;
				var v = _v0.b;
				return A2($elm$html$Html$Attributes$attribute, 'data-track-event-' + k, v);
			},
			_Utils_ap(moreDetails, event.lp)));
};
var $author$project$Libs$Html$extLink = F3(
	function (url, attrs, children) {
		return A2(
			$elm$html$Html$a,
			_Utils_ap(
				$author$project$Libs$Html$Attributes$hrefBlank(url),
				_Utils_ap(
					$author$project$Libs$Html$Attributes$track(
						$author$project$Track$externalLink(url)),
					attrs)),
			children);
	});
var $author$project$Libs$Html$sendTweet = F3(
	function (tweet, attrs, children) {
		return function (url) {
			return A3($author$project$Libs$Html$extLink, url, attrs, children);
		}(
			'https://twitter.com/intent/tweet?text=' + $elm$url$Url$percentEncode(tweet));
	});
var $author$project$Libs$Tailwind$text_100 = function (_v0) {
	var color = _v0;
	return 'text-' + (color + '-100');
};
var $author$project$Components$Slices$ProPlan$colorsTweetInspiration = function (color) {
	return A2(
		$elm$html$Html$div,
		_List_Nil,
		_List_fromArray(
			[
				A2(
				$elm$html$Html$p,
				_List_fromArray(
					[
						$elm$html$Html$Attributes$class('mt-3 block text-sm font-medium text-gray-700')
					]),
				_List_fromArray(
					[
						$elm$html$Html$text('Some inspiration if you need:')
					])),
				A2(
				$elm$html$Html$div,
				_List_Nil,
				A2(
					$elm$core$List$map,
					function (tweet) {
						return A3(
							$author$project$Libs$Html$sendTweet,
							tweet,
							_List_Nil,
							_List_fromArray(
								[
									A2(
									$elm$html$Html$blockquote,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$class('mt-3 relative font-medium text-gray-500')
										]),
									_List_fromArray(
										[
											$author$project$Components$Atoms$Icon$quote(
											'absolute top-0 left-0 transform -translate-x-3 -translate-y-2 ' + $author$project$Libs$Tailwind$text_100(color)),
											A2(
											$elm$html$Html$p,
											_List_fromArray(
												[
													$elm$html$Html$Attributes$class('relative')
												]),
											_List_fromArray(
												[
													$elm$html$Html$text(tweet)
												]))
										]))
								]));
					},
					_List_fromArray(
						['Hey @azimuttapp, please unlock table colors on https://azimutt.app 🙏', 'I\'m discovering @azimuttapp to explore my database, I can recommend it: https://azimutt.app', 'Azimutt (@azimuttapp) is a visual database exploration tool, made for big real world databases. Try it out: https://azimutt.app'])))
			]));
};
var $author$project$Components$Slices$ProPlan$colorsTweetSuccess = function (close) {
	return A2(
		$elm$html$Html$div,
		_List_fromArray(
			[
				$elm$html$Html$Attributes$class('mt-3 py-12 bg-green-500 rounded shadow text-center text-white')
			]),
		_List_fromArray(
			[
				A2($author$project$Components$Atoms$Icon$solid, 42, 'w-16 h-16 inline'),
				A2(
				$elm$html$Html$div,
				_List_fromArray(
					[
						$elm$html$Html$Attributes$class('text-lg font-bold')
					]),
				_List_fromArray(
					[
						$elm$html$Html$text('CHANGE TABLE COLOR ENABLED 👌')
					])),
				A2(
				$elm$html$Html$button,
				_List_fromArray(
					[
						$elm$html$Html$Attributes$type_('button'),
						$elm$html$Html$Events$onClick(close),
						$elm$html$Html$Attributes$class('mt-12 inline-flex items-center rounded-md border border-green-300 bg-white px-6 py-3 text-base font-medium text-green-500 shadow-sm hover:bg-green-50')
					]),
				_List_fromArray(
					[
						$elm$html$Html$text('Back to editor')
					]))
			]));
};
var $author$project$Conf$features = {
	ld: {lS: false, eS: 'data_access'},
	fR: {lS: false, eS: 'analysis'},
	i$: {lS: 3, eS: 'layouts'},
	gw: {lS: 5, eS: 'memos'},
	nM: {lS: true, eS: 'private_links'},
	oI: {lS: false, eS: 'table_color'}
};
var $elm$html$Html$h3 = _VirtualDom_node('h3');
var $author$project$Services$Backend$organizationBillingUrl = F2(
	function (organization, source) {
		return '/organizations/' + (organization + ('/billing?source=' + source));
	});
var $author$project$Components$Atoms$Button$commonStyles = function (color) {
	return $author$project$Libs$Tailwind$batch(
		_List_fromArray(
			[
				'inline-flex justify-center items-center border font-medium',
				$author$project$Libs$Tailwind$focus_ring_500(color)
			]));
};
var $author$project$Components$Atoms$Link$build = F5(
	function (colorStyles, sizeStyles, color, attrs, content) {
		return A2(
			$elm$html$Html$a,
			_Utils_ap(
				attrs,
				_List_fromArray(
					[
						$author$project$Libs$Html$Attributes$css(
						_List_fromArray(
							[
								$author$project$Components$Atoms$Button$commonStyles(color),
								colorStyles(color),
								sizeStyles
							]))
					])),
			content);
	});
var $author$project$Libs$Tailwind$bg_300 = function (_v0) {
	var color = _v0;
	return 'bg-' + (color + '-300');
};
var $author$project$Libs$Tailwind$bg_600 = function (_v0) {
	var color = _v0;
	return 'bg-' + (color + '-600');
};
var $author$project$Libs$Tailwind$bg_700 = function (_v0) {
	var color = _v0;
	return 'bg-' + (color + '-700');
};
var $author$project$Libs$Tailwind$disabled = $author$project$Libs$Tailwind$addState('disabled');
var $author$project$Components$Atoms$Button$primary = function (color) {
	return $author$project$Libs$Tailwind$batch(
		_List_fromArray(
			[
				'border-transparent shadow-sm text-white',
				$author$project$Libs$Tailwind$bg_600(color),
				$author$project$Libs$Tailwind$hover(
				_List_fromArray(
					[
						$author$project$Libs$Tailwind$bg_700(color)
					])),
				$author$project$Libs$Tailwind$disabled(
				_List_fromArray(
					[
						'cursor-not-allowed',
						$author$project$Libs$Tailwind$bg_300(color)
					]))
			]));
};
var $author$project$Components$Atoms$Button$size3 = 'px-4 py-2 text-sm rounded-md';
var $author$project$Components$Atoms$Link$primary3 = A2($author$project$Components$Atoms$Link$build, $author$project$Components$Atoms$Button$primary, $author$project$Components$Atoms$Button$size3);
var $author$project$Libs$Tailwind$text_600 = function (_v0) {
	var color = _v0;
	return 'text-' + (color + '-600');
};
var $author$project$Libs$Result$toError = function (result) {
	if (!result.$) {
		return $elm$core$Maybe$Nothing;
	} else {
		var e = result.a;
		return $elm$core$Maybe$Just(e);
	}
};
var $author$project$Components$Atoms$Button$build = F5(
	function (colorStyles, sizeStyles, color, attrs, content) {
		return A2(
			$elm$html$Html$button,
			_Utils_ap(
				attrs,
				_List_fromArray(
					[
						$elm$html$Html$Attributes$type_('button'),
						$author$project$Libs$Html$Attributes$css(
						_List_fromArray(
							[
								$author$project$Components$Atoms$Button$commonStyles(color),
								colorStyles(color),
								sizeStyles
							]))
					])),
			content);
	});
var $author$project$Libs$Tailwind$bg_50 = function (_v0) {
	var color = _v0;
	return 'bg-' + (color + '-50');
};
var $author$project$Libs$Tailwind$text_300 = function (_v0) {
	var color = _v0;
	return 'text-' + (color + '-300');
};
var $author$project$Libs$Tailwind$text_700 = function (_v0) {
	var color = _v0;
	return 'text-' + (color + '-700');
};
var $author$project$Components$Atoms$Button$white = function (color) {
	return $author$project$Libs$Tailwind$batch(
		_List_fromArray(
			[
				'border-gray-300 shadow-sm bg-white',
				$author$project$Libs$Tailwind$text_700(color),
				$author$project$Libs$Tailwind$hover(
				_List_fromArray(
					[
						$author$project$Libs$Tailwind$bg_50(color)
					])),
				$author$project$Libs$Tailwind$disabled(
				_List_fromArray(
					[
						'cursor-not-allowed border-gray-200 bg-white',
						$author$project$Libs$Tailwind$text_300(color)
					]))
			]));
};
var $author$project$Components$Atoms$Button$white3 = A2($author$project$Components$Atoms$Button$build, $author$project$Components$Atoms$Button$white, $author$project$Components$Atoms$Button$size3);
var $author$project$Components$Slices$ProPlan$colorsModalBody = F5(
	function (organization, update, model, close, titleId) {
		var _v0 = _Utils_Tuple3(
			update(model),
			$author$project$Libs$Tailwind$orange,
			'change-color-tweet');
		var wrap = _v0.a;
		var color = _v0.b;
		var tweetInput = _v0.c;
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('max-w-2xl')
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$author$project$Libs$Html$Attributes$css(
							_List_fromArray(
								[
									'px-6 pt-6',
									$author$project$Libs$Tailwind$sm(
									_List_fromArray(
										['flex items-start']))
								]))
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$author$project$Libs$Html$Attributes$css(
									_List_fromArray(
										[
											'mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full',
											$author$project$Libs$Tailwind$bg_100(color),
											$author$project$Libs$Tailwind$sm(
											_List_fromArray(
												['mx-0 h-10 w-10']))
										]))
								]),
							_List_fromArray(
								[
									A2(
									$author$project$Components$Atoms$Icon$outline,
									64,
									$author$project$Libs$Tailwind$text_600(color))
								])),
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$author$project$Libs$Html$Attributes$css(
									_List_fromArray(
										[
											'mt-3 text-center',
											$author$project$Libs$Tailwind$sm(
											_List_fromArray(
												['mt-0 ml-4 text-left']))
										]))
								]),
							_List_fromArray(
								[
									A2(
									$elm$html$Html$h3,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$id(titleId),
											$elm$html$Html$Attributes$class('text-lg leading-6 font-medium text-gray-900')
										]),
									_List_fromArray(
										[
											$elm$html$Html$text('Change colors')
										])),
									A2(
									$elm$html$Html$div,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$class('mt-3')
										]),
									_List_fromArray(
										[
											A2(
											$elm$html$Html$p,
											_List_fromArray(
												[
													$elm$html$Html$Attributes$class('text-sm text-gray-500')
												]),
											_List_fromArray(
												[
													$author$project$Libs$Html$bText('Oh! You found a Pro feature!')
												])),
											A2(
											$elm$html$Html$p,
											_List_fromArray(
												[
													$elm$html$Html$Attributes$class('mt-2 text-sm text-gray-500')
												]),
											_List_fromArray(
												[
													$elm$html$Html$text('I\'m glad you are exploring Azimutt. We want to make it the ultimate tool to understand and analyze your database, and will bring much more in the coming months.')
												])),
											A2(
											$elm$html$Html$p,
											_List_fromArray(
												[
													$elm$html$Html$Attributes$class('text-sm text-gray-500')
												]),
											_List_fromArray(
												[
													$elm$html$Html$text('This would need a lot of resources and having a small contribution from you would be awesome. Onboard in Azimutt community, it will '),
													$author$project$Libs$Html$bText('bring us much further together'),
													$elm$html$Html$text('.')
												]))
										])),
									A2($author$project$Components$Slices$ProPlan$colorsTweetDivider, wrap, color),
									A2(
									$elm$core$Maybe$withDefault,
									model.d2 ? A2(
										$elm$html$Html$div,
										_List_Nil,
										_List_fromArray(
											[
												A5($author$project$Components$Slices$ProPlan$colorsTweetInput, wrap, organization.H, tweetInput, model.ft, color),
												A2(
												$elm$core$Maybe$withDefault,
												A2(
													$elm$html$Html$p,
													_List_fromArray(
														[
															$elm$html$Html$Attributes$id(tweetInput + '-description'),
															$elm$html$Html$Attributes$class('mt-2 h-10 text-sm text-gray-500')
														]),
													_List_fromArray(
														[
															$elm$html$Html$text('Your tweet has to be published within the last 10 minutes, mention '),
															A3(
															$author$project$Libs$Html$extLink,
															$author$project$Conf$constants.kG,
															_List_fromArray(
																[
																	$elm$html$Html$Attributes$class('link')
																]),
															_List_fromArray(
																[
																	$elm$html$Html$text('@azimuttapp')
																])),
															$elm$html$Html$text(' and have a link to '),
															A3(
															$author$project$Libs$Html$extLink,
															$author$project$Conf$constants.kH,
															_List_fromArray(
																[
																	$elm$html$Html$Attributes$class('link')
																]),
															_List_fromArray(
																[
																	$elm$html$Html$text('azimutt.app')
																])),
															$elm$html$Html$text('.')
														])),
												A2(
													$elm$core$Maybe$map,
													function (err) {
														return A2(
															$elm$html$Html$p,
															_List_fromArray(
																[
																	$elm$html$Html$Attributes$id(tweetInput + '-description'),
																	$elm$html$Html$Attributes$class('mt-2 h-10 text-sm text-red-600')
																]),
															_List_fromArray(
																[
																	$elm$html$Html$text(err)
																]));
													},
													A2($elm$core$Maybe$andThen, $author$project$Libs$Result$toError, model.bU))),
												$author$project$Components$Slices$ProPlan$colorsTweetInspiration(color)
											])) : A2($elm$html$Html$div, _List_Nil, _List_Nil),
									A2(
										$elm$core$Maybe$map,
										function (_v1) {
											return $author$project$Components$Slices$ProPlan$colorsTweetSuccess(close);
										},
										A2($elm$core$Maybe$andThen, $elm$core$Result$toMaybe, model.bU)))
								]))
						])),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('px-6 py-3 mt-6 flex items-center flex-row-reverse bg-gray-50 rounded-b-lg')
						]),
					_List_fromArray(
						[
							A3(
							$author$project$Components$Atoms$Link$primary3,
							color,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$href(
									A2($author$project$Services$Backend$organizationBillingUrl, organization.H, $author$project$Conf$features.oI.eS)),
									$elm$html$Html$Attributes$target('_blank'),
									$elm$html$Html$Attributes$rel('noopener'),
									$author$project$Libs$Html$Attributes$css(
									_List_fromArray(
										[
											'w-full text-base',
											$author$project$Libs$Tailwind$sm(
											_List_fromArray(
												['ml-3 w-auto text-sm']))
										]))
								]),
							_List_fromArray(
								[
									A2($author$project$Components$Atoms$Icon$solid, 104, 'mr-1'),
									$elm$html$Html$text('Upgrade plan')
								])),
							A3(
							$author$project$Components$Atoms$Button$white3,
							$author$project$Libs$Tailwind$gray,
							_List_fromArray(
								[
									$elm$html$Html$Events$onClick(close),
									$author$project$Libs$Html$Attributes$css(
									_List_fromArray(
										[
											'mt-3 w-full text-base',
											$author$project$Libs$Tailwind$sm(
											_List_fromArray(
												['mt-0 w-auto text-sm']))
										]))
								]),
							_List_fromArray(
								[
									$elm$html$Html$text('Cancel')
								]))
						]))
				]));
	});
var $author$project$Components$Slices$ProPlan$EnableTableChangeColor = {$: 4};
var $author$project$Components$Slices$ProPlan$GotTableColorTweet = function (a) {
	return {$: 3, a: a};
};
var $author$project$Libs$Nel$join = F2(
	function (sep, nel) {
		return A2(
			$elm$core$String$join,
			sep,
			$author$project$Libs$Nel$toList(nel));
	});
var $author$project$Libs$Maybe$toResultErr = F2(
	function (value, maybe) {
		if (!maybe.$) {
			var a = maybe.a;
			return $elm$core$Result$Err(a);
		} else {
			return $elm$core$Result$Ok(value);
		}
	});
var $author$project$Components$Slices$ProPlan$colorsTweetResult = function (r) {
	return A2(
		$author$project$Libs$Maybe$toResultErr,
		r.o_,
		A2(
			$elm$core$Maybe$map,
			$author$project$Libs$Nel$join(', '),
			$author$project$Libs$Nel$fromList(r.lG)));
};
var $author$project$Services$Backend$TableColorTweet = F2(
	function (tweet, errors) {
		return {lG: errors, o_: tweet};
	});
var $author$project$Libs$Json$Decode$indent = function (str) {
	return A2(
		$elm$core$String$join,
		'\n    ',
		A2($elm$core$String$split, '\n', str));
};
var $author$project$Libs$Json$Decode$errorOneOf = F2(
	function (i, error) {
		return '\n\n(' + ($elm$core$String$fromInt(i + 1) + (') ' + $author$project$Libs$Json$Decode$indent(
			$author$project$Libs$Json$Decode$errorToStringNoValue(error))));
	});
var $author$project$Libs$Json$Decode$errorToStringNoValue = function (error) {
	return A2($author$project$Libs$Json$Decode$errorToStringNoValueInternal, error, _List_Nil);
};
var $author$project$Libs$Json$Decode$errorToStringNoValueInternal = F2(
	function (error, context) {
		errorToStringNoValueInternal:
		while (true) {
			switch (error.$) {
				case 0:
					var f = error.a;
					var err = error.b;
					var isSimple = function () {
						var _v1 = $elm$core$String$uncons(f);
						if (_v1.$ === 1) {
							return false;
						} else {
							var _v2 = _v1.a;
							var _char = _v2.a;
							var rest = _v2.b;
							return $elm$core$Char$isAlpha(_char) && A2($elm$core$String$all, $elm$core$Char$isAlphaNum, rest);
						}
					}();
					var fieldName = isSimple ? ('.' + f) : ('[\'' + (f + '\']'));
					var $temp$error = err,
						$temp$context = A2($elm$core$List$cons, fieldName, context);
					error = $temp$error;
					context = $temp$context;
					continue errorToStringNoValueInternal;
				case 1:
					var i = error.a;
					var err = error.b;
					var indexName = '[' + ($elm$core$String$fromInt(i) + ']');
					var $temp$error = err,
						$temp$context = A2($elm$core$List$cons, indexName, context);
					error = $temp$error;
					context = $temp$context;
					continue errorToStringNoValueInternal;
				case 2:
					var errors = error.a;
					if (!errors.b) {
						return 'Ran into a Json.Decode.oneOf with no possibilities' + function () {
							if (!context.b) {
								return '!';
							} else {
								return ' at json' + A2(
									$elm$core$String$join,
									'',
									$elm$core$List$reverse(context));
							}
						}();
					} else {
						if (!errors.b.b) {
							var err = errors.a;
							var $temp$error = err,
								$temp$context = context;
							error = $temp$error;
							context = $temp$context;
							continue errorToStringNoValueInternal;
						} else {
							var starter = function () {
								if (!context.b) {
									return 'Json.Decode.oneOf';
								} else {
									return 'The Json.Decode.oneOf at json' + A2(
										$elm$core$String$join,
										'',
										$elm$core$List$reverse(context));
								}
							}();
							var introduction = starter + (' failed in the following ' + ($elm$core$String$fromInt(
								$elm$core$List$length(errors)) + ' ways:'));
							return A2(
								$elm$core$String$join,
								'\n\n',
								A2(
									$elm$core$List$cons,
									introduction,
									A2($elm$core$List$indexedMap, $author$project$Libs$Json$Decode$errorOneOf, errors)));
						}
					}
				default:
					var msg = error.a;
					var introduction = function () {
						if (!context.b) {
							return '';
						} else {
							return 'Problem at \'' + (A2(
								$elm$core$String$join,
								'',
								$elm$core$List$reverse(context)) + '\': ');
						}
					}();
					return _Utils_ap(introduction, msg);
			}
		}
	});
var $author$project$Services$Backend$expectJson = F2(
	function (toMsg, decoder) {
		return A2(
			$elm$http$Http$expectStringResponse,
			toMsg,
			A2(
				$elm$core$Basics$composeR,
				$author$project$Services$Backend$handleResponse,
				$elm$core$Result$andThen(
					A2(
						$elm$core$Basics$composeR,
						$elm$json$Json$Decode$decodeString(decoder),
						$elm$core$Result$mapError(
							A2(
								$elm$core$Basics$composeR,
								$author$project$Libs$Json$Decode$errorToStringNoValue,
								$author$project$Services$Backend$Error(0)))))));
	});
var $author$project$Services$Backend$getTableColorTweet = F3(
	function (organizationId, tweetUrl, toMsg) {
		return $author$project$Services$Backend$riskyPost(
			{
				kM: $elm$http$Http$jsonBody(
					$elm$json$Json$Encode$object(
						_List_fromArray(
							[
								_Utils_Tuple2(
								'tweet_url',
								$elm$json$Json$Encode$string(tweetUrl))
							]))),
				lI: A2(
					$author$project$Services$Backend$expectJson,
					toMsg,
					A3(
						$elm$json$Json$Decode$map2,
						$author$project$Services$Backend$TableColorTweet,
						A2($elm$json$Json$Decode$field, 'tweet', $elm$json$Json$Decode$string),
						A2(
							$elm$json$Json$Decode$field,
							'errors',
							$elm$json$Json$Decode$list($elm$json$Json$Decode$string)))),
				o1: '/api/v1/organizations/' + (organizationId + '/tweet-for-table-colors')
			});
	});
var $author$project$Components$Slices$ProPlan$colorsUpdate = F3(
	function (update, msg, model) {
		var wrap = update(model);
		switch (msg.$) {
			case 0:
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{d2: !model.d2}),
					$elm$core$Platform$Cmd$none);
			case 1:
				var value = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{ft: value}),
					$elm$core$Platform$Cmd$none);
			case 2:
				var id = msg.a;
				var url = msg.b;
				return (url === '') ? _Utils_Tuple2(
					_Utils_update(
						model,
						{bU: $elm$core$Maybe$Nothing}),
					$elm$core$Platform$Cmd$none) : _Utils_Tuple2(
					_Utils_update(
						model,
						{bU: $elm$core$Maybe$Nothing}),
					A3(
						$author$project$Services$Backend$getTableColorTweet,
						id,
						url,
						A2($elm$core$Basics$composeR, $author$project$Components$Slices$ProPlan$GotTableColorTweet, wrap)));
			case 3:
				var res = msg.a;
				var result = A2(
					$elm$core$Result$andThen,
					$author$project$Components$Slices$ProPlan$colorsTweetResult,
					A2($elm$core$Result$mapError, $author$project$Services$Backend$errorToString, res));
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{
							bU: $elm$core$Maybe$Just(result)
						}),
					A2(
						$elm$core$Result$withDefault,
						$elm$core$Platform$Cmd$none,
						A2(
							$elm$core$Result$map,
							function (_v1) {
								return $author$project$Libs$Task$send(
									wrap($author$project$Components$Slices$ProPlan$EnableTableChangeColor));
							},
							result)));
			default:
				return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
		}
	});
var $author$project$Libs$Nel$add = F2(
	function (a, _v0) {
		var head = _v0.ev;
		var tail = _v0.oO;
		return A2(
			$author$project$Libs$Nel$Nel,
			head,
			_Utils_ap(
				tail,
				_List_fromArray(
					[a])));
	});
var $author$project$Models$Project$ColumnPath$child = F2(
	function (col, path) {
		return A2($author$project$Libs$Nel$add, col, path);
	});
var $author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$flattenNested = F2(
	function (path, _v0) {
		var columns = _v0;
		return A2(
			$elm$core$List$concatMap,
			function (col) {
				return function (p) {
					return A2(
						$elm$core$List$cons,
						{az: col.az, aA: p},
						A2($author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$flattenNested, p, col.bd));
				}(
					A2($author$project$Models$Project$ColumnPath$child, col.eS, path));
			},
			columns);
	});
var $author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$flatten = function (columns) {
	return A2(
		$elm$core$List$concatMap,
		function (col) {
			return function (p) {
				return A2(
					$elm$core$List$cons,
					{az: col.az, aA: p},
					A2($author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$flattenNested, p, col.bd));
			}(
				$author$project$Models$Project$ColumnPath$fromString(col.eS));
		},
		columns);
};
var $author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$unpackAll = function (columns) {
	return A2(
		$elm$core$List$map,
		function ($) {
			return $.aA;
		},
		$author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$flatten(columns));
};
var $author$project$PagesComponents$Organization_$Project_$Models$ErdTableLayout$unpack = function (layout) {
	return {
		cS: layout.nU.cS,
		A: layout.nU.A,
		M: $author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$unpackAll(layout.M),
		ay: layout.nU.bx,
		H: layout.H,
		e$: layout.nU.e$,
		cy: layout.nU.cy,
		ox: layout.nU.ox
	};
};
var $author$project$PagesComponents$Organization_$Project_$Models$ErdLayout$unpack = function (layout) {
	return {
		fJ: layout.fJ,
		ic: layout.ic,
		gw: layout.gw,
		oM: A2(
			$elm$core$List$map,
			function (t) {
				return $author$project$PagesComponents$Organization_$Project_$Models$ErdTableLayout$unpack(t);
			},
			layout.oM),
		kb: layout.kb
	};
};
var $author$project$Models$Project$ColumnRef$toString = function (ref) {
	return $author$project$Models$Project$TableId$toString(ref.aq) + ('.' + $author$project$Models$Project$ColumnPath$toString(ref.bH));
};
var $author$project$PagesComponents$Organization_$Project_$Models$Notes$asKey = function (ref) {
	switch (ref.$) {
		case 2:
			return '';
		case 0:
			var t = ref.a;
			return $author$project$Models$Project$TableId$toString(t);
		default:
			var c = ref.a;
			return $author$project$Models$Project$ColumnRef$toString(c);
	}
};
var $author$project$PagesComponents$Organization_$Project_$Models$Notes$ColumnNote = function (a) {
	return {$: 1, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Models$Notes$fromColumn = function (ref) {
	return $author$project$PagesComponents$Organization_$Project_$Models$Notes$ColumnNote(ref);
};
var $author$project$PagesComponents$Organization_$Project_$Models$Notes$columnKey = function (ref) {
	return $author$project$PagesComponents$Organization_$Project_$Models$Notes$asKey(
		$author$project$PagesComponents$Organization_$Project_$Models$Notes$fromColumn(ref));
};
var $author$project$PagesComponents$Organization_$Project_$Models$Notes$TableNote = function (a) {
	return {$: 0, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Models$Notes$fromTable = function (id) {
	return $author$project$PagesComponents$Organization_$Project_$Models$Notes$TableNote(id);
};
var $author$project$PagesComponents$Organization_$Project_$Models$Notes$tableKey = function (id) {
	return $author$project$PagesComponents$Organization_$Project_$Models$Notes$asKey(
		$author$project$PagesComponents$Organization_$Project_$Models$Notes$fromTable(id));
};
var $author$project$PagesComponents$Organization_$Project_$Models$ErdNotesTable$unpack = F2(
	function (table, notes) {
		return $elm$core$Dict$fromList(
			_Utils_ap(
				A2(
					$elm$core$List$map,
					function (n) {
						return _Utils_Tuple2(
							$author$project$PagesComponents$Organization_$Project_$Models$Notes$tableKey(table),
							n);
					},
					$author$project$Libs$Maybe$toList(notes.aq)),
				A2(
					$elm$core$List$map,
					function (_v0) {
						var col = _v0.a;
						var n = _v0.b;
						return _Utils_Tuple2(
							$author$project$PagesComponents$Organization_$Project_$Models$Notes$columnKey(
								{
									bH: $author$project$Models$Project$ColumnPath$fromString(col),
									aq: table
								}),
							n);
					},
					$elm$core$Dict$toList(notes.M))));
	});
var $author$project$PagesComponents$Organization_$Project_$Models$ErdNotes$unpack = function (notes) {
	return A3(
		$elm$core$Dict$foldl,
		F2(
			function (k, v) {
				return $elm$core$Dict$union(
					A2($author$project$PagesComponents$Organization_$Project_$Models$ErdNotesTable$unpack, k, v));
			}),
		$elm$core$Dict$empty,
		notes);
};
var $author$project$PagesComponents$Organization_$Project_$Models$ErdColumnRef$unpack = function (ref) {
	return {bH: ref.bH, aq: ref.aq};
};
var $author$project$PagesComponents$Organization_$Project_$Models$ErdRelation$unpack = function (relation) {
	return {
		H: relation.H,
		eS: relation.eS,
		jq: relation.jq,
		dG: $author$project$PagesComponents$Organization_$Project_$Models$ErdColumnRef$unpack(relation.dG),
		ht: $author$project$PagesComponents$Organization_$Project_$Models$ErdColumnRef$unpack(relation.ht)
	};
};
var $author$project$Libs$Ned$map = F2(
	function (f, xs) {
		return {
			ev: function (_v0) {
				var k = _v0.a;
				var a = _v0.b;
				return _Utils_Tuple2(
					k,
					A2(f, k, a));
			}(xs.ev),
			oO: A2($elm$core$Dict$map, f, xs.oO)
		};
	});
var $author$project$Models$Project$ColumnPath$name = function (_v0) {
	var head = _v0.ev;
	var tail = _v0.oO;
	return A2(
		$elm$core$Maybe$withDefault,
		head,
		$author$project$Libs$List$last(tail));
};
var $author$project$PagesComponents$Organization_$Project_$Models$ErdColumn$unpack = function (column) {
	return {
		M: A2(
			$elm$core$Maybe$map,
			function (_v0) {
				var cols = _v0;
				return A2(
					$author$project$Libs$Ned$map,
					function (_v1) {
						return $author$project$PagesComponents$Organization_$Project_$Models$ErdColumn$unpack;
					},
					cols);
			},
			column.M),
		h4: column.h4,
		lf: column.lf,
		l7: column.l7,
		gi: column.gi,
		eS: $author$project$Models$Project$ColumnPath$name(column.aA),
		nf: column.nf,
		jq: column.jq
	};
};
var $author$project$PagesComponents$Organization_$Project_$Models$ErdTable$unpack = function (table) {
	return {
		cQ: table.cQ,
		M: A2(
			$elm$core$Dict$map,
			function (_v0) {
				return $author$project$PagesComponents$Organization_$Project_$Models$ErdColumn$unpack;
			},
			table.M),
		h4: table.h4,
		H: table.H,
		dg: table.dg,
		eS: table.eS,
		jq: table.jq,
		nL: table.nL,
		aI: table.aI,
		d5: table.d5,
		o3: table.o3
	};
};
var $author$project$PagesComponents$Organization_$Project_$Models$Erd$unpack = function (erd) {
	return {
		ic: erd.nN.ic,
		bf: erd.nN.bf,
		H: erd.nN.H,
		i$: A2(
			$elm$core$Dict$map,
			function (_v0) {
				return $author$project$PagesComponents$Organization_$Project_$Models$ErdLayout$unpack;
			},
			erd.i$),
		eS: erd.nN.eS,
		bP: $author$project$PagesComponents$Organization_$Project_$Models$ErdNotes$unpack(erd.bP),
		nx: erd.nN.nx,
		bT: A2($elm$core$List$map, $author$project$PagesComponents$Organization_$Project_$Models$ErdRelation$unpack, erd.bT),
		dM: erd.dM,
		hr: erd.nN.hr,
		hs: erd.hs,
		cD: erd.nN.cD,
		oM: A2(
			$elm$core$Dict$map,
			function (_v1) {
				return $author$project$PagesComponents$Organization_$Project_$Models$ErdTable$unpack;
			},
			erd.oM),
		d3: erd.d3,
		kb: erd.nN.kb,
		fw: erd.id,
		kd: erd.nN.kd,
		hQ: erd.nN.hQ
	};
};
var $author$project$PagesComponents$Organization_$Project_$Updates$Project$createProject = F4(
	function (name, organization, storage, model) {
		return model.Z.fa ? _Utils_Tuple2(
			model,
			$elm$core$Platform$Cmd$batch(
				A3(
					$author$project$Libs$Maybe$mapOrElse,
					function (p) {
						return A2(
							$elm$core$Maybe$withDefault,
							_List_fromArray(
								[
									A3(
									$author$project$Ports$createProject,
									organization.H,
									storage,
									_Utils_update(
										p,
										{eS: name}))
								]),
							A2(
								$elm$core$Maybe$map,
								function (_v0) {
									return _List_fromArray(
										[
											$author$project$Libs$Task$send(
											$author$project$PagesComponents$Organization_$Project_$Models$Toast(
												$author$project$Services$Toasts$warning('Project already created')))
										]);
								},
								p.nx));
					},
					_List_fromArray(
						[
							$author$project$Libs$Task$send(
							$author$project$PagesComponents$Organization_$Project_$Models$Toast(
								$author$project$Services$Toasts$warning('No project to save')))
						]),
					A2($elm$core$Maybe$map, $author$project$PagesComponents$Organization_$Project_$Models$Erd$unpack, model.lE)))) : _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
	});
var $elm$core$Array$length = function (_v0) {
	var len = _v0.a;
	return len;
};
var $author$project$Services$Lenses$setContent = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.cX;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{cX: value});
		}));
var $author$project$Services$Lenses$mapContent = A2(
	$author$project$Services$Lenses$map_,
	function ($) {
		return $.cX;
	},
	$author$project$Services$Lenses$setContent);
var $author$project$Services$Lenses$setRelations = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.bT;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{bT: value});
		}));
var $author$project$Services$Lenses$mapRelations = A2(
	$author$project$Services$Lenses$map_,
	function ($) {
		return $.bT;
	},
	$author$project$Services$Lenses$setRelations);
var $elm$core$Elm$JsArray$push = _JsArray_push;
var $elm$core$Array$bitMask = 4294967295 >>> (32 - $elm$core$Array$shiftStep);
var $elm$core$Elm$JsArray$singleton = _JsArray_singleton;
var $elm$core$Elm$JsArray$unsafeGet = _JsArray_unsafeGet;
var $elm$core$Elm$JsArray$unsafeSet = _JsArray_unsafeSet;
var $elm$core$Array$insertTailInTree = F4(
	function (shift, index, tail, tree) {
		var pos = $elm$core$Array$bitMask & (index >>> shift);
		if (_Utils_cmp(
			pos,
			$elm$core$Elm$JsArray$length(tree)) > -1) {
			if (shift === 5) {
				return A2(
					$elm$core$Elm$JsArray$push,
					$elm$core$Array$Leaf(tail),
					tree);
			} else {
				var newSub = $elm$core$Array$SubTree(
					A4($elm$core$Array$insertTailInTree, shift - $elm$core$Array$shiftStep, index, tail, $elm$core$Elm$JsArray$empty));
				return A2($elm$core$Elm$JsArray$push, newSub, tree);
			}
		} else {
			var value = A2($elm$core$Elm$JsArray$unsafeGet, pos, tree);
			if (!value.$) {
				var subTree = value.a;
				var newSub = $elm$core$Array$SubTree(
					A4($elm$core$Array$insertTailInTree, shift - $elm$core$Array$shiftStep, index, tail, subTree));
				return A3($elm$core$Elm$JsArray$unsafeSet, pos, newSub, tree);
			} else {
				var newSub = $elm$core$Array$SubTree(
					A4(
						$elm$core$Array$insertTailInTree,
						shift - $elm$core$Array$shiftStep,
						index,
						tail,
						$elm$core$Elm$JsArray$singleton(value)));
				return A3($elm$core$Elm$JsArray$unsafeSet, pos, newSub, tree);
			}
		}
	});
var $elm$core$Array$unsafeReplaceTail = F2(
	function (newTail, _v0) {
		var len = _v0.a;
		var startShift = _v0.b;
		var tree = _v0.c;
		var tail = _v0.d;
		var originalTailLen = $elm$core$Elm$JsArray$length(tail);
		var newTailLen = $elm$core$Elm$JsArray$length(newTail);
		var newArrayLen = len + (newTailLen - originalTailLen);
		if (_Utils_eq(newTailLen, $elm$core$Array$branchFactor)) {
			var overflow = _Utils_cmp(newArrayLen >>> $elm$core$Array$shiftStep, 1 << startShift) > 0;
			if (overflow) {
				var newShift = startShift + $elm$core$Array$shiftStep;
				var newTree = A4(
					$elm$core$Array$insertTailInTree,
					newShift,
					len,
					newTail,
					$elm$core$Elm$JsArray$singleton(
						$elm$core$Array$SubTree(tree)));
				return A4($elm$core$Array$Array_elm_builtin, newArrayLen, newShift, newTree, $elm$core$Elm$JsArray$empty);
			} else {
				return A4(
					$elm$core$Array$Array_elm_builtin,
					newArrayLen,
					startShift,
					A4($elm$core$Array$insertTailInTree, startShift, len, newTail, tree),
					$elm$core$Elm$JsArray$empty);
			}
		} else {
			return A4($elm$core$Array$Array_elm_builtin, newArrayLen, startShift, tree, newTail);
		}
	});
var $elm$core$Array$push = F2(
	function (a, array) {
		var tail = array.d;
		return A2(
			$elm$core$Array$unsafeReplaceTail,
			A2($elm$core$Elm$JsArray$push, a, tail),
			array);
	});
var $author$project$Services$Lenses$setUpdatedAt = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.kb;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{kb: value});
		}));
var $author$project$Models$Project$Relation$virtual = F3(
	function (src, ref, origin) {
		return A4(
			$author$project$Models$Project$Relation$new,
			'virtual relation',
			src,
			ref,
			_List_fromArray(
				[origin]));
	});
var $author$project$Models$Project$Source$addRelation = F4(
	function (now, src, ref, source) {
		return A2(
			$author$project$Services$Lenses$setUpdatedAt,
			now,
			A2(
				$author$project$Services$Lenses$mapRelations,
				function (r) {
					return _Utils_ap(
						r,
						_List_fromArray(
							[
								A3(
								$author$project$Models$Project$Relation$virtual,
								src,
								ref,
								A2(
									$author$project$Models$Project$Origin$Origin,
									source.H,
									_List_fromArray(
										[
											$elm$core$Array$length(source.cX) + 1
										])))
							]));
				},
				A2(
					$author$project$Services$Lenses$mapContent,
					$elm$core$Array$push(
						A2($author$project$DataSources$AmlMiner$AmlGenerator$relation, src, ref)),
					source)));
	});
var $author$project$PagesComponents$Organization_$Project_$Models$Erd$buildRelationsByTable = function (relations) {
	return A3(
		$elm$core$List$foldr,
		F2(
			function (rel, dict) {
				return _Utils_eq(rel.ht.aq, rel.dG.aq) ? A3(
					$elm$core$Dict$update,
					rel.ht.aq,
					A2(
						$elm$core$Basics$composeR,
						A2(
							$author$project$Libs$Maybe$mapOrElse,
							function (rels) {
								return A2($elm$core$List$cons, rel, rels);
							},
							_List_fromArray(
								[rel])),
						$elm$core$Maybe$Just),
					dict) : A3(
					$elm$core$Dict$update,
					rel.dG.aq,
					A2(
						$elm$core$Basics$composeR,
						A2(
							$author$project$Libs$Maybe$mapOrElse,
							function (rels) {
								return A2($elm$core$List$cons, rel, rels);
							},
							_List_fromArray(
								[rel])),
						$elm$core$Maybe$Just),
					A3(
						$elm$core$Dict$update,
						rel.ht.aq,
						A2(
							$elm$core$Basics$composeR,
							A2(
								$author$project$Libs$Maybe$mapOrElse,
								function (rels) {
									return A2($elm$core$List$cons, rel, rels);
								},
								_List_fromArray(
									[rel])),
							$elm$core$Maybe$Just),
						dict));
			}),
		$elm$core$Dict$empty,
		relations);
};
var $author$project$Libs$Ned$get = F2(
	function (key, ned) {
		return _Utils_eq(ned.ev.a, key) ? $elm$core$Maybe$Just(ned.ev.b) : A2($elm$core$Dict$get, key, ned.oO);
	});
var $author$project$Models$Project$Column$getColumn = F2(
	function (path, column) {
		return A2(
			$elm$core$Maybe$andThen,
			function (col) {
				return A3(
					$author$project$Libs$Maybe$mapOrElse,
					function (next) {
						return A2($author$project$Models$Project$Column$getColumn, next, col);
					},
					$elm$core$Maybe$Just(col),
					$author$project$Libs$Nel$fromList(path.oO));
			},
			A2(
				$elm$core$Maybe$andThen,
				function (_v0) {
					var cols = _v0;
					return A2($author$project$Libs$Ned$get, path.ev, cols);
				},
				column.M));
	});
var $author$project$Models$Project$Table$getColumn = F2(
	function (path, table) {
		return A2(
			$elm$core$Maybe$andThen,
			function (col) {
				return A3(
					$author$project$Libs$Maybe$mapOrElse,
					function (next) {
						return A2($author$project$Models$Project$Column$getColumn, next, col);
					},
					$elm$core$Maybe$Just(col),
					$author$project$Libs$Nel$fromList(path.oO));
			},
			A2($elm$core$Dict$get, path.ev, table.M));
	});
var $author$project$PagesComponents$Organization_$Project_$Models$ErdColumnRef$create = F2(
	function (tables, ref) {
		return {
			bH: ref.bH,
			nf: A3(
				$author$project$Libs$Maybe$mapOrElse,
				function ($) {
					return $.nf;
				},
				false,
				A2(
					$elm$core$Maybe$andThen,
					$author$project$Models$Project$Table$getColumn(ref.bH),
					A2($elm$core$Dict$get, ref.aq, tables))),
			aq: ref.aq
		};
	});
var $author$project$PagesComponents$Organization_$Project_$Models$ErdRelation$create = F2(
	function (tables, relation) {
		return {
			H: relation.H,
			eS: relation.eS,
			jq: relation.jq,
			dG: A2($author$project$PagesComponents$Organization_$Project_$Models$ErdColumnRef$create, tables, relation.dG),
			ht: A2($author$project$PagesComponents$Organization_$Project_$Models$ErdColumnRef$create, tables, relation.ht)
		};
	});
var $author$project$PagesComponents$Organization_$Project_$Models$ErdColumn$ErdNestedColumns = $elm$core$Basics$identity;
var $author$project$Models$Project$CustomType$get = F3(
	function (defaultSchema, kind, dict) {
		var _v0 = A2($elm$core$String$split, '.', kind);
		if ((_v0.b && _v0.b.b) && (!_v0.b.b.b)) {
			if (_v0.a === '') {
				var _v1 = _v0.b;
				var name = _v1.a;
				return A2(
					$author$project$Libs$Maybe$orElse,
					A2(
						$elm$core$Dict$get,
						_Utils_Tuple2('', name),
						dict),
					A2(
						$elm$core$Dict$get,
						_Utils_Tuple2(defaultSchema, name),
						dict));
			} else {
				var schema = _v0.a;
				var _v2 = _v0.b;
				var name = _v2.a;
				return A2(
					$elm$core$Dict$get,
					_Utils_Tuple2(schema, name),
					dict);
			}
		} else {
			return A2(
				$author$project$Libs$Maybe$orElse,
				A2(
					$elm$core$Dict$get,
					_Utils_Tuple2('', kind),
					dict),
				A2(
					$elm$core$Dict$get,
					_Utils_Tuple2(defaultSchema, kind),
					dict));
		}
	});
var $author$project$Libs$Maybe$isNothing = function (maybe) {
	return _Utils_eq(maybe, $elm$core$Maybe$Nothing);
};
var $author$project$Libs$Maybe$isJust = function (maybe) {
	return !$author$project$Libs$Maybe$isNothing(maybe);
};
var $author$project$Libs$String$stripLeft = F2(
	function (prefix, str) {
		return A2($elm$core$String$startsWith, prefix, str) ? A2(
			$elm$core$String$dropLeft,
			$elm$core$String$length(prefix),
			str) : str;
	});
var $author$project$Models$Project$ColumnType$label = F2(
	function (defaultSchema, kind) {
		return A2($author$project$Libs$String$stripLeft, defaultSchema + '.', kind);
	});
var $author$project$Models$Project$ColumnValue$label = function (value) {
	var _v0 = A2($elm$core$String$split, '::', value);
	if ((_v0.b && _v0.b.b) && (!_v0.b.b.b)) {
		var val = _v0.a;
		var _v1 = _v0.b;
		return val;
	} else {
		return value;
	}
};
var $author$project$Libs$Nel$member = F2(
	function (value, nel) {
		return A2(
			$elm$core$List$any,
			function (a) {
				return _Utils_eq(a, value);
			},
			$author$project$Libs$Nel$toList(nel));
	});
var $author$project$PagesComponents$Organization_$Project_$Models$ErdColumn$create = F6(
	function (defaultSchema, types, columnRelations, table, path, column) {
		return {
			cQ: A2(
				$elm$core$List$map,
				function ($) {
					return $.eS;
				},
				A2(
					$elm$core$List$filter,
					A2(
						$elm$core$Basics$composeR,
						function ($) {
							return $.M;
						},
						$elm$core$List$member(path)),
					table.cQ)),
			M: A2(
				$elm$core$Maybe$map,
				function (_v0) {
					var cols = _v0;
					return A2(
						$author$project$Libs$Ned$map,
						function (name) {
							return A5(
								$author$project$PagesComponents$Organization_$Project_$Models$ErdColumn$create,
								defaultSchema,
								types,
								columnRelations,
								table,
								A2($author$project$Models$Project$ColumnPath$child, name, path));
						},
						cols);
				},
				column.M),
			h4: column.h4,
			ie: A3($author$project$Models$Project$CustomType$get, defaultSchema, column.gi, types),
			lf: column.lf,
			ig: A2($elm$core$Maybe$map, $author$project$Models$Project$ColumnValue$label, column.lf),
			iO: A2(
				$elm$core$List$map,
				function ($) {
					return $.ht;
				},
				A2(
					$elm$core$List$filter,
					function (r) {
						return _Utils_eq(r.dG.aq, table.H) && _Utils_eq(r.dG.bH, path);
					},
					columnRelations)),
			l7: column.l7,
			dg: A2(
				$elm$core$List$map,
				function ($) {
					return $.eS;
				},
				A2(
					$elm$core$List$filter,
					A2(
						$elm$core$Basics$composeR,
						function ($) {
							return $.M;
						},
						$author$project$Libs$Nel$member(path)),
					table.dg)),
			iV: $author$project$Libs$Maybe$isJust(
				A2(
					$author$project$Libs$Maybe$filter,
					A2(
						$elm$core$Basics$composeR,
						function ($) {
							return $.M;
						},
						$author$project$Libs$Nel$member(path)),
					table.nL)),
			gi: column.gi,
			iX: A2($author$project$Models$Project$ColumnType$label, defaultSchema, column.gi),
			nf: column.nf,
			jq: table.jq,
			jr: A2(
				$elm$core$List$map,
				function ($) {
					return $.dG;
				},
				A2(
					$elm$core$List$filter,
					function (r) {
						return _Utils_eq(r.ht.aq, table.H) && _Utils_eq(r.ht.bH, path);
					},
					columnRelations)),
			aA: path,
			d5: A2(
				$elm$core$List$map,
				function ($) {
					return $.eS;
				},
				A2(
					$elm$core$List$filter,
					A2(
						$elm$core$Basics$composeR,
						function ($) {
							return $.M;
						},
						$author$project$Libs$Nel$member(path)),
					table.d5))
		};
	});
var $author$project$Models$Project$ColumnPath$rootName = function (_v0) {
	var head = _v0.ev;
	return head;
};
var $author$project$Libs$Models$HtmlId$encode = function (text) {
	return $elm$url$Url$percentEncode(text);
};
var $author$project$Models$Project$TableId$toHtmlId = function (_v0) {
	var s = _v0.a;
	var t = _v0.b;
	return 'table#' + (s + ('#' + $author$project$Libs$Models$HtmlId$encode(t)));
};
var $author$project$PagesComponents$Organization_$Project_$Models$ErdTable$create = F4(
	function (defaultSchema, types, tableRelations, table) {
		var relationsByRootColumn = A3(
			$elm$core$List$foldr,
			F2(
				function (rel, dict) {
					return (_Utils_eq(rel.ht.aq, table.H) && _Utils_eq(rel.dG.aq, table.H)) ? A3(
						$elm$core$Dict$update,
						$author$project$Models$Project$ColumnPath$rootName(rel.dG.bH),
						A2(
							$elm$core$Basics$composeR,
							A2(
								$author$project$Libs$Maybe$mapOrElse,
								function (relations) {
									return A2($elm$core$List$cons, rel, relations);
								},
								_List_fromArray(
									[rel])),
							$elm$core$Maybe$Just),
						A3(
							$elm$core$Dict$update,
							$author$project$Models$Project$ColumnPath$rootName(rel.ht.bH),
							A2(
								$elm$core$Basics$composeR,
								A2(
									$author$project$Libs$Maybe$mapOrElse,
									function (relations) {
										return A2($elm$core$List$cons, rel, relations);
									},
									_List_fromArray(
										[rel])),
								$elm$core$Maybe$Just),
							dict)) : (_Utils_eq(rel.ht.aq, table.H) ? A3(
						$elm$core$Dict$update,
						$author$project$Models$Project$ColumnPath$rootName(rel.ht.bH),
						A2(
							$elm$core$Basics$composeR,
							A2(
								$author$project$Libs$Maybe$mapOrElse,
								function (relations) {
									return A2($elm$core$List$cons, rel, relations);
								},
								_List_fromArray(
									[rel])),
							$elm$core$Maybe$Just),
						dict) : (_Utils_eq(rel.dG.aq, table.H) ? A3(
						$elm$core$Dict$update,
						$author$project$Models$Project$ColumnPath$rootName(rel.dG.bH),
						A2(
							$elm$core$Basics$composeR,
							A2(
								$author$project$Libs$Maybe$mapOrElse,
								function (relations) {
									return A2($elm$core$List$cons, rel, relations);
								},
								_List_fromArray(
									[rel])),
							$elm$core$Maybe$Just),
						dict) : dict));
				}),
			$elm$core$Dict$empty,
			tableRelations);
		return {
			cQ: table.cQ,
			M: A2(
				$elm$core$Dict$map,
				function (name) {
					return A5(
						$author$project$PagesComponents$Organization_$Project_$Models$ErdColumn$create,
						defaultSchema,
						types,
						A3($author$project$Libs$Dict$getOrElse, name, _List_Nil, relationsByRootColumn),
						table,
						$author$project$Models$Project$ColumnPath$fromString(name));
				},
				table.M),
			h4: table.h4,
			iL: $author$project$Models$Project$TableId$toHtmlId(table.H),
			H: table.H,
			dg: table.dg,
			cn: A2($author$project$Models$Project$TableId$show, defaultSchema, table.H),
			eS: table.eS,
			jq: table.jq,
			nL: table.nL,
			aI: table.aI,
			d5: table.d5,
			o3: table.o3
		};
	});
var $author$project$PagesComponents$Organization_$Project_$Models$Erd$computeSources = F2(
	function (settings, sources) {
		var types = $author$project$Models$Project$computeTypes(sources);
		var tables = A2($author$project$Models$Project$computeTables, settings, sources);
		var relations = A2($author$project$Models$Project$computeRelations, tables, sources);
		var erdRelations = A2(
			$elm$core$List$map,
			$author$project$PagesComponents$Organization_$Project_$Models$ErdRelation$create(tables),
			relations);
		var erdRelationsByTable = $author$project$PagesComponents$Organization_$Project_$Models$Erd$buildRelationsByTable(erdRelations);
		var erdTables = A2(
			$elm$core$Dict$map,
			function (id) {
				return A3(
					$author$project$PagesComponents$Organization_$Project_$Models$ErdTable$create,
					settings.cb,
					types,
					A3($author$project$Libs$Dict$getOrElse, id, _List_Nil, erdRelationsByTable));
			},
			tables);
		return _Utils_Tuple2(
			_Utils_Tuple3(erdTables, erdRelations, types),
			erdRelationsByTable);
	});
var $author$project$PagesComponents$Organization_$Project_$Models$Erd$setSources = F2(
	function (sources, erd) {
		if (_Utils_eq(erd.hs, sources)) {
			return erd;
		} else {
			var _v0 = A2($author$project$PagesComponents$Organization_$Project_$Models$Erd$computeSources, erd.dM, sources);
			var _v1 = _v0.a;
			var tables = _v1.a;
			var relations = _v1.b;
			var types = _v1.c;
			var relationsByTable = _v0.b;
			return _Utils_update(
				erd,
				{bT: relations, e2: relationsByTable, hs: sources, oM: tables, d3: types});
		}
	});
var $author$project$Libs$List$updateBy = F4(
	function (matcher, value, transform, list) {
		return A2(
			$elm$core$List$map,
			function (a) {
				return _Utils_eq(
					matcher(a),
					value) ? transform(a) : a;
			},
			list);
	});
var $author$project$PagesComponents$Organization_$Project_$Models$Erd$mapSource = F3(
	function (id, transform, erd) {
		return A2(
			$author$project$PagesComponents$Organization_$Project_$Models$Erd$setSources,
			A4(
				$author$project$Libs$List$updateBy,
				function ($) {
					return $.H;
				},
				id,
				transform,
				erd.hs),
			erd);
	});
var $author$project$PagesComponents$Organization_$Project_$Updates$Source$createRelation = F4(
	function (now, src, ref, erd) {
		var _v0 = A2(
			$author$project$Libs$List$find,
			function (s) {
				return _Utils_eq(s.gi, $author$project$Models$Project$SourceKind$AmlEditor) && _Utils_eq(s.eS, $author$project$Conf$constants.o5);
			},
			erd.hs);
		if (!_v0.$) {
			var source = _v0.a;
			return _Utils_Tuple2(
				A3(
					$author$project$PagesComponents$Organization_$Project_$Models$Erd$mapSource,
					source.H,
					A3($author$project$Models$Project$Source$addRelation, now, src, ref),
					erd),
				$author$project$Libs$Task$send(
					$author$project$PagesComponents$Organization_$Project_$Models$Toast(
						$author$project$Services$Toasts$info(
							'Relation ' + (A2($author$project$Models$Project$TableId$show, erd.dM.cb, src.aq) + (' → ' + (A2($author$project$Models$Project$TableId$show, erd.dM.cb, ref.aq) + (' added to ' + (source.eS + ' source.')))))))));
		} else {
			return _Utils_Tuple2(
				erd,
				$elm$core$Platform$Cmd$batch(
					_List_fromArray(
						[
							A2(
							$elm$random$Random$generate,
							A2(
								$elm$core$Basics$composeR,
								A2($author$project$Models$Project$Source$aml, $author$project$Conf$constants.o5, now),
								A2(
									$elm$core$Basics$composeR,
									A3($author$project$Models$Project$Source$addRelation, now, src, ref),
									$author$project$PagesComponents$Organization_$Project_$Models$CreateUserSourceWithId)),
							$author$project$Models$Project$SourceId$generator),
							$author$project$Libs$Task$send(
							$author$project$PagesComponents$Organization_$Project_$Models$Toast(
								$author$project$Services$Toasts$info('Created ' + ($author$project$Conf$constants.o5 + ' source to add the relation.'))))
						])));
		}
	});
var $author$project$Track$dbAnalysisOpened = function (erd) {
	return A3(
		$author$project$Track$createEvent,
		'editor_db_analysis_opened',
		_List_Nil,
		A2(
			$elm$core$Maybe$map,
			function ($) {
				return $.nN;
			},
			erd));
};
var $author$project$Ports$DeleteProject = F2(
	function (a, b) {
		return {$: 15, a: a, b: b};
	});
var $author$project$Ports$deleteProject = F2(
	function (project, redirect) {
		return $author$project$Ports$messageToJs(
			A2($author$project$Ports$DeleteProject, project, redirect));
	});
var $author$project$Ports$Fireworks = {$: 25};
var $author$project$Ports$fireworks = $author$project$Ports$messageToJs($author$project$Ports$Fireworks);
var $author$project$PagesComponents$Organization_$Project_$Updates$Canvas$fitCanvas = F3(
	function (now, erdElem, erd) {
		return A2(
			$elm$core$Maybe$withDefault,
			_Utils_Tuple2(
				erd,
				$author$project$Libs$Task$send(
					$author$project$PagesComponents$Organization_$Project_$Models$Toast(
						A2($author$project$Services$Toasts$create, 'warning', 'No table to fit into the canvas')))),
			A2(
				$elm$core$Maybe$map,
				function (_v0) {
					var tables = _v0.a;
					var memos = _v0.b;
					return _Utils_Tuple2(
						A3(
							$author$project$PagesComponents$Organization_$Project_$Models$Erd$mapCurrentLayoutWithTime,
							now,
							A3($author$project$PagesComponents$Organization_$Project_$Updates$Canvas$fitCanvasAlgo, erdElem, tables, memos),
							erd),
						$elm$core$Platform$Cmd$none);
				},
				$author$project$PagesComponents$Organization_$Project_$Updates$Canvas$objectsToFit(
					$author$project$PagesComponents$Organization_$Project_$Models$Erd$currentLayout(erd))));
	});
var $author$project$Ports$Focus = function (a) {
	return {$: 2, a: a};
};
var $author$project$Ports$focus = function (id) {
	return $author$project$Ports$messageToJs(
		$author$project$Ports$Focus(id));
};
var $author$project$Ports$Fullscreen = function (a) {
	return {$: 5, a: a};
};
var $author$project$Ports$fullscreen = function (id) {
	return $author$project$Ports$messageToJs(
		$author$project$Ports$Fullscreen(id));
};
var $author$project$Models$Plan$free = {
	eg: $author$project$Conf$features.oI.lS,
	ld: $author$project$Conf$features.fR.lS,
	fR: $author$project$Conf$features.fR.lS,
	H: 'free',
	i$: $elm$core$Maybe$Just($author$project$Conf$features.i$.lS),
	gw: $elm$core$Maybe$Just($author$project$Conf$features.gw.lS),
	eS: 'Free plan',
	nM: $author$project$Conf$features.nM.lS
};
var $author$project$Models$Organization$zero = {bf: $elm$core$Maybe$Nothing, gb: $elm$core$Maybe$Nothing, H: $author$project$Models$OrganizationId$zero, gu: $elm$core$Maybe$Nothing, gv: 'https://azimutt.app/imageshttps://xestjs.com/img/xest-icon.png', eS: 'zero', jv: $author$project$Models$Plan$free, hr: $author$project$Models$OrganizationId$zero};
var $author$project$PagesComponents$Organization_$Project_$Models$Erd$getOrganizationM = F2(
	function (urlOrganization, erd) {
		var organization = $author$project$Models$Organization$zero;
		return A2(
			$elm$core$Maybe$withDefault,
			A3(
				$author$project$Libs$Maybe$mapOrElse,
				function (id) {
					return _Utils_update(
						organization,
						{H: id});
				},
				organization,
				urlOrganization),
			A2(
				$elm$core$Maybe$andThen,
				A2(
					$elm$core$Basics$composeR,
					function ($) {
						return $.nN;
					},
					function ($) {
						return $.nx;
					}),
				erd));
	});
var $author$project$PagesComponents$Organization_$Project_$Models$Erd$getLayoutTable = F2(
	function (table, erd) {
		return A3(
			$author$project$Libs$List$findBy,
			function ($) {
				return $.H;
			},
			table,
			$author$project$PagesComponents$Organization_$Project_$Models$Erd$currentLayout(erd).oM);
	});
var $author$project$Libs$Models$Position$mult = F2(
	function (factor, pos) {
		return A2($author$project$Libs$Models$Position$Position, pos.C * factor, pos.ad * factor);
	});
var $author$project$Models$Position$canvasToViewport = F4(
	function (_v0, _v1, canvasZoom, _v2) {
		var erdPos = _v0;
		var canvasPos = _v1;
		var pos = _v2;
		return $author$project$Models$Position$viewport(
			A2(
				$author$project$Libs$Models$Position$move,
				A2($author$project$Libs$Models$Position$diff, $author$project$Libs$Models$Position$zero, erdPos),
				A2(
					$author$project$Libs$Models$Position$move,
					A2($author$project$Libs$Models$Position$diff, $author$project$Libs$Models$Position$zero, canvasPos),
					A2($author$project$Libs$Models$Position$mult, canvasZoom, pos))));
	});
var $author$project$Models$Size$deltaCanvas = function (_v0) {
	var size = _v0;
	return {aY: size.bB, aZ: size.bj};
};
var $author$project$Models$Area$centerCanvasGrid = function (area) {
	return A2(
		$author$project$Models$Position$moveCanvas,
		$author$project$Models$Size$deltaCanvas(
			A2($author$project$Models$Size$divCanvas, 2, area.ox)),
		$author$project$Models$Position$offGrid(area.e$));
};
var $author$project$Models$Size$divViewport = F2(
	function (factor, _v0) {
		var size = _v0;
		return $author$project$Models$Size$viewport(
			A2($author$project$Libs$Models$Size$div, factor, size));
	});
var $author$project$Models$Size$toTupleViewport = function (_v0) {
	var size = _v0;
	return $author$project$Libs$Models$Size$toTuple(size);
};
var $author$project$Models$Area$centerViewport = function (area) {
	return A2(
		$author$project$Models$Position$moveViewport,
		$author$project$Libs$Models$Delta$fromTuple(
			$author$project$Models$Size$toTupleViewport(
				A2($author$project$Models$Size$divViewport, 2, area.ox))),
		area.e$);
};
var $author$project$Models$Position$diffViewport = F2(
	function (_v0, _v1) {
		var to = _v0;
		var from = _v1;
		return A2($author$project$Libs$Models$Position$diff, to, from);
	});
var $author$project$Models$Position$moveDiagram = F2(
	function (delta, _v0) {
		var pos = _v0;
		return $author$project$Models$Position$diagram(
			A2($author$project$Libs$Models$Position$move, delta, pos));
	});
var $author$project$PagesComponents$Organization_$Project_$Updates$Table$placeTableAtCenter = F3(
	function (viewport, canvas, table) {
		var tableCenter = A4(
			$author$project$Models$Position$canvasToViewport,
			viewport.e$,
			canvas.e$,
			canvas.hU,
			$author$project$Models$Area$centerCanvasGrid(table));
		var delta = A2(
			$author$project$Models$Position$diffViewport,
			tableCenter,
			$author$project$Models$Area$centerViewport(viewport));
		return A2($author$project$Models$Position$moveDiagram, delta, canvas.e$);
	});
var $author$project$Services$Lenses$setSelected = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.cy;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{cy: value});
		}));
var $author$project$PagesComponents$Organization_$Project_$Updates$Table$goToTable = F4(
	function (now, id, viewport, erd) {
		return A2(
			$elm$core$Maybe$withDefault,
			_Utils_Tuple2(
				erd,
				$author$project$Libs$Task$send(
					$author$project$PagesComponents$Organization_$Project_$Models$Toast(
						$author$project$Services$Toasts$info(
							'Table ' + (A2($author$project$Models$Project$TableId$show, erd.dM.cb, id) + ' not shown'))))),
			A2(
				$elm$core$Maybe$map,
				function (pos) {
					return _Utils_Tuple2(
						A3(
							$author$project$PagesComponents$Organization_$Project_$Models$Erd$mapCurrentLayoutWithTime,
							now,
							A2(
								$elm$core$Basics$composeR,
								$author$project$Services$Lenses$mapTables(
									$elm$core$List$map(
										function (t) {
											return A2(
												$author$project$Services$Lenses$mapProps,
												$author$project$Services$Lenses$setSelected(
													_Utils_eq(t.H, id)),
												t);
										})),
								$author$project$Services$Lenses$mapCanvas(
									$author$project$Services$Lenses$setPosition(pos))),
							erd),
						$elm$core$Platform$Cmd$none);
				},
				A2(
					$elm$core$Maybe$map,
					function (p) {
						return A3(
							$author$project$PagesComponents$Organization_$Project_$Updates$Table$placeTableAtCenter,
							viewport,
							$author$project$PagesComponents$Organization_$Project_$Models$Erd$currentLayout(erd).fJ,
							p.nU);
					},
					A2($author$project$PagesComponents$Organization_$Project_$Models$Erd$getLayoutTable, id, erd))));
	});
var $author$project$Libs$Models$Position$size = F2(
	function (p1, p2) {
		return A2(
			$author$project$Libs$Models$Size$Size,
			$elm$core$Basics$abs(p2.C - p1.C),
			$elm$core$Basics$abs(p2.ad - p1.ad));
	});
var $author$project$Models$Position$sizeCanvas = F2(
	function (_v0, _v1) {
		var p1 = _v0;
		var p2 = _v1;
		return $author$project$Models$Size$canvas(
			A2($author$project$Libs$Models$Position$size, p1, p2));
	});
var $author$project$Models$Area$fromCanvas = F2(
	function (p1, p2) {
		return {
			e$: A2($author$project$Models$Position$minCanvas, p1, p2),
			ox: A2($author$project$Models$Position$sizeCanvas, p1, p2)
		};
	});
var $author$project$Models$Position$viewportToCanvas = F4(
	function (_v0, _v1, canvasZoom, _v2) {
		var erdPos = _v0;
		var canvasPos = _v1;
		var pos = _v2;
		return $author$project$Models$Position$canvas(
			A2(
				$author$project$Libs$Models$Position$div,
				canvasZoom,
				A2(
					$author$project$Libs$Models$Position$move,
					A2($author$project$Libs$Models$Position$diff, canvasPos, $author$project$Libs$Models$Position$zero),
					A2(
						$author$project$Libs$Models$Position$move,
						A2($author$project$Libs$Models$Position$diff, erdPos, $author$project$Libs$Models$Position$zero),
						pos))));
	});
var $author$project$PagesComponents$Organization_$Project_$Updates$Drag$buildSelectionArea = F3(
	function (erdElem, canvas, dragState) {
		return A2(
			$author$project$Models$Area$fromCanvas,
			A4($author$project$Models$Position$viewportToCanvas, erdElem.e$, canvas.e$, canvas.hU, dragState.bl),
			A4($author$project$Models$Position$viewportToCanvas, erdElem.e$, canvas.e$, canvas.hU, dragState.iZ));
	});
var $author$project$PagesComponents$Organization_$Project_$Models$MemoId$htmlIdPrefix = 'az-memo-';
var $author$project$PagesComponents$Organization_$Project_$Models$MemoId$isHtmlId = function (id) {
	return A2($elm$core$String$startsWith, $author$project$PagesComponents$Organization_$Project_$Models$MemoId$htmlIdPrefix, id);
};
var $author$project$Services$Lenses$setErd = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.lE;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{lE: value});
		}));
var $author$project$Services$Lenses$mapErdM = A2(
	$author$project$Services$Lenses$mapM_,
	function ($) {
		return $.lE;
	},
	$author$project$Services$Lenses$setErd);
var $author$project$Libs$Models$Delta$div = F2(
	function (factor, delta) {
		return A2($author$project$Libs$Models$Delta$Delta, delta.aY / factor, delta.aZ / factor);
	});
var $author$project$PagesComponents$Organization_$Project_$Updates$Drag$buildDelta = F2(
	function (drag, zoom) {
		return A2(
			$author$project$Libs$Models$Delta$div,
			zoom,
			A2($author$project$Models$Position$diffViewport, drag.bl, drag.iZ));
	});
var $author$project$PagesComponents$Organization_$Project_$Updates$Drag$moveCanvas = F2(
	function (drag, canvas) {
		return A2(
			$author$project$Services$Lenses$mapPosition,
			$author$project$Models$Position$moveDiagram(
				A2($author$project$PagesComponents$Organization_$Project_$Updates$Drag$buildDelta, drag, 1)),
			canvas);
	});
var $author$project$PagesComponents$Organization_$Project_$Models$MemoId$toHtmlId = function (id) {
	return _Utils_ap(
		$author$project$PagesComponents$Organization_$Project_$Models$MemoId$htmlIdPrefix,
		$elm$core$String$fromInt(id));
};
var $author$project$PagesComponents$Organization_$Project_$Updates$Drag$moveMemos = F3(
	function (drag, zoom, memos) {
		return A2(
			$elm$core$List$map,
			function (m) {
				return _Utils_eq(
					drag.H,
					$author$project$PagesComponents$Organization_$Project_$Models$MemoId$toHtmlId(m.H)) ? A2(
					$author$project$Services$Lenses$mapPosition,
					$author$project$Models$Position$moveGrid(
						A2($author$project$PagesComponents$Organization_$Project_$Updates$Drag$buildDelta, drag, zoom)),
					m) : m;
			},
			memos);
	});
var $author$project$Libs$Models$HtmlId$decode = function (text) {
	return A2(
		$elm$core$Maybe$withDefault,
		text,
		$elm$url$Url$percentDecode(text));
};
var $author$project$Models$Project$TableId$fromHtmlId = function (id) {
	var _v0 = A2($elm$core$String$split, '#', id);
	if ((((_v0.b && (_v0.a === 'table')) && _v0.b.b) && _v0.b.b.b) && (!_v0.b.b.b.b)) {
		var _v1 = _v0.b;
		var s = _v1.a;
		var _v2 = _v1.b;
		var t = _v2.a;
		return $elm$core$Maybe$Just(
			_Utils_Tuple2(
				s,
				$author$project$Libs$Models$HtmlId$decode(t)));
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $author$project$PagesComponents$Organization_$Project_$Updates$Drag$moveTables = F3(
	function (drag, zoom, tables) {
		var tableId = $author$project$Models$Project$TableId$fromHtmlId(drag.H);
		var dragSelected = A3(
			$author$project$Libs$Maybe$mapOrElse,
			function (id) {
				return A3(
					$author$project$Libs$Maybe$mapOrElse,
					A2(
						$elm$core$Basics$composeR,
						function ($) {
							return $.nU;
						},
						function ($) {
							return $.cy;
						}),
					false,
					A3(
						$author$project$Libs$List$findBy,
						function ($) {
							return $.H;
						},
						id,
						tables));
			},
			false,
			tableId);
		return A2(
			$elm$core$List$map,
			function (t) {
				return (_Utils_eq(
					$elm$core$Maybe$Just(t.H),
					tableId) || (dragSelected && t.nU.cy)) ? A2(
					$author$project$Services$Lenses$mapProps,
					$author$project$Services$Lenses$mapPosition(
						$author$project$Models$Position$moveGrid(
							A2($author$project$PagesComponents$Organization_$Project_$Updates$Drag$buildDelta, drag, zoom))),
					t) : t;
			},
			tables);
	});
var $author$project$Libs$Models$Area$overlap = F2(
	function (area1, area2) {
		return !((_Utils_cmp(area2.e$.C + area2.ox.bB, area1.e$.C) < 1) || ((_Utils_cmp(area2.e$.C, area1.e$.C + area1.ox.bB) > -1) || ((_Utils_cmp(area2.e$.ad, area1.e$.ad + area1.ox.bj) > -1) || (_Utils_cmp(area2.e$.ad + area2.ox.bj, area1.e$.ad) < 1))));
	});
var $author$project$Models$Area$overlapCanvas = F2(
	function (area2, area1) {
		return A2(
			$author$project$Libs$Models$Area$overlap,
			A2(
				$author$project$Libs$Models$Area$Area,
				$author$project$Models$Position$extractCanvas(area2.e$),
				$author$project$Models$Size$extractCanvas(area2.ox)),
			A2(
				$author$project$Libs$Models$Area$Area,
				$author$project$Models$Position$extractCanvas(area1.e$),
				$author$project$Models$Size$extractCanvas(area1.ox)));
	});
var $author$project$Ports$ProjectDirty = function (a) {
	return {$: 16, a: a};
};
var $author$project$Ports$projectDirty = function (dirty) {
	return $author$project$Ports$messageToJs(
		$author$project$Ports$ProjectDirty(dirty));
};
var $author$project$PagesComponents$Organization_$Project_$Updates$Utils$setDirty = function (model) {
	return (model.ls || (!model.Z.fa)) ? _Utils_Tuple2(model, $elm$core$Platform$Cmd$none) : _Utils_Tuple2(
		_Utils_update(
			model,
			{ls: true}),
		$author$project$Ports$projectDirty(true));
};
var $author$project$Services$Lenses$setSelectionBox = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.op;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{op: value});
		}));
var $author$project$PagesComponents$Organization_$Project_$Updates$Drag$handleDrag = F4(
	function (now, drag, isEnd, model) {
		var canvas = A3(
			$author$project$Libs$Maybe$mapOrElse,
			A2(
				$elm$core$Basics$composeR,
				$author$project$PagesComponents$Organization_$Project_$Models$Erd$currentLayout,
				function ($) {
					return $.fJ;
				}),
			$author$project$Models$Project$CanvasProps$empty,
			model.lE);
		return _Utils_eq(drag.H, $author$project$Conf$ids.lE) ? ((isEnd && (!_Utils_eq(drag.bl, drag.iZ))) ? $author$project$PagesComponents$Organization_$Project_$Updates$Utils$setDirty(
			A2(
				$author$project$Services$Lenses$mapErdM,
				A2(
					$author$project$PagesComponents$Organization_$Project_$Models$Erd$mapCurrentLayoutWithTime,
					now,
					$author$project$Services$Lenses$mapCanvas(
						$author$project$PagesComponents$Organization_$Project_$Updates$Drag$moveCanvas(drag))),
				model)) : _Utils_Tuple2(model, $elm$core$Platform$Cmd$none)) : (_Utils_eq(drag.H, $author$project$Conf$ids.op) ? (isEnd ? _Utils_Tuple2(
			A2($author$project$Services$Lenses$setSelectionBox, $elm$core$Maybe$Nothing, model),
			$elm$core$Platform$Cmd$none) : _Utils_Tuple2(
			function (area) {
				return A2(
					$author$project$Services$Lenses$mapErdM,
					A2(
						$author$project$PagesComponents$Organization_$Project_$Models$Erd$mapCurrentLayoutWithTime,
						now,
						$author$project$Services$Lenses$mapTables(
							$elm$core$List$map(
								$author$project$Services$Lenses$mapProps(
									function (p) {
										return A2(
											$author$project$Services$Lenses$setSelected,
											A2(
												$author$project$Models$Area$overlapCanvas,
												area,
												{
													e$: $author$project$Models$Position$offGrid(p.e$),
													ox: p.ox
												}),
											p);
									})))),
					A2(
						$author$project$Services$Lenses$setSelectionBox,
						$elm$core$Maybe$Just(area),
						model));
			}(
				A3($author$project$PagesComponents$Organization_$Project_$Updates$Drag$buildSelectionArea, model.lF, canvas, drag)),
			$elm$core$Platform$Cmd$none)) : ((isEnd && (!_Utils_eq(drag.bl, drag.iZ))) ? ($author$project$PagesComponents$Organization_$Project_$Models$MemoId$isHtmlId(drag.H) ? $author$project$PagesComponents$Organization_$Project_$Updates$Utils$setDirty(
			A2(
				$author$project$Services$Lenses$mapErdM,
				A2(
					$author$project$PagesComponents$Organization_$Project_$Models$Erd$mapCurrentLayoutWithTime,
					now,
					$author$project$Services$Lenses$mapMemos(
						A2($author$project$PagesComponents$Organization_$Project_$Updates$Drag$moveMemos, drag, canvas.hU))),
				model)) : $author$project$PagesComponents$Organization_$Project_$Updates$Utils$setDirty(
			A2(
				$author$project$Services$Lenses$mapErdM,
				A2(
					$author$project$PagesComponents$Organization_$Project_$Models$Erd$mapCurrentLayoutWithTime,
					now,
					$author$project$Services$Lenses$mapTables(
						A2($author$project$PagesComponents$Organization_$Project_$Updates$Drag$moveTables, drag, canvas.hU))),
				model))) : _Utils_Tuple2(model, $elm$core$Platform$Cmd$none)));
	});
var $author$project$PagesComponents$Organization_$Project_$Models$FindPathState$Empty = {$: 0};
var $author$project$PagesComponents$Organization_$Project_$Models$FPCompute = F5(
	function (a, b, c, d, e) {
		return {$: 5, a: a, b: b, c: c, d: d, e: e};
	});
var $author$project$PagesComponents$Organization_$Project_$Models$FindPathMsg = function (a) {
	return {$: 43, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Models$FindPathState$Found = function (a) {
	return {$: 2, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Models$FindPathState$Searching = {$: 1};
var $author$project$PagesComponents$Organization_$Project_$Models$FindPathStepDir$Left = 1;
var $author$project$PagesComponents$Organization_$Project_$Models$FindPathStepDir$Right = 0;
var $author$project$PagesComponents$Organization_$Project_$Updates$FindPath$buildPaths = F6(
	function (tables, relations, settings, tableId, isDone, curPath) {
		return A3(
			$author$project$Libs$Maybe$mapOrElse,
			function (table) {
				return isDone(table) ? A3(
					$author$project$Libs$Maybe$mapOrElse,
					function (p) {
						return _List_fromArray(
							[p]);
					},
					_List_Nil,
					$author$project$Libs$Nel$fromList(curPath)) : function (_v0) {
					var tableRelations = _v0.a;
					var otherRelations = _v0.b;
					return ($elm$core$List$isEmpty(tableRelations) || (_Utils_cmp(
						$elm$core$List$length(curPath),
						settings.eN) > 0)) ? _List_Nil : A2(
						$elm$core$List$concatMap,
						function (r) {
							return _Utils_eq(r.ht.aq, tableId) ? A6(
								$author$project$PagesComponents$Organization_$Project_$Updates$FindPath$buildPaths,
								A2($elm$core$Dict$remove, tableId, tables),
								otherRelations,
								settings,
								r.dG.aq,
								isDone,
								_Utils_ap(
									curPath,
									_List_fromArray(
										[
											{bg: 0, n0: r}
										]))) : A6(
								$author$project$PagesComponents$Organization_$Project_$Updates$FindPath$buildPaths,
								A2($elm$core$Dict$remove, tableId, tables),
								otherRelations,
								settings,
								r.ht.aq,
								isDone,
								_Utils_ap(
									curPath,
									_List_fromArray(
										[
											{bg: 1, n0: r}
										])));
						},
						tableRelations);
				}(
					A2(
						$elm$core$List$partition,
						function (r) {
							return _Utils_eq(r.ht.aq, tableId) || _Utils_eq(r.dG.aq, tableId);
						},
						relations));
			},
			_List_Nil,
			A2($elm$core$Dict$get, tableId, tables));
	});
var $author$project$Libs$Nel$all = F2(
	function (predicate, nel) {
		return A2(
			$elm$core$List$all,
			predicate,
			$author$project$Libs$Nel$toList(nel));
	});
var $author$project$Libs$Nel$zip = F2(
	function (bNel, aNel) {
		return A2(
			$author$project$Libs$Nel$Nel,
			_Utils_Tuple2(aNel.ev, bNel.ev),
			A2($author$project$Libs$List$zip, bNel.oO, aNel.oO));
	});
var $author$project$Libs$Nel$startsWith = F2(
	function (value, nel) {
		return A2(
			$author$project$Libs$Nel$all,
			function (_v0) {
				var a = _v0.a;
				var b = _v0.b;
				return _Utils_eq(a, b);
			},
			A2($author$project$Libs$Nel$zip, value, nel)) && (_Utils_cmp(
			$elm$core$List$length(value.oO),
			$elm$core$List$length(nel.oO)) < 1);
	});
var $author$project$Models$Project$ColumnPath$startsWith = F2(
	function (a, b) {
		return A2($author$project$Libs$Nel$startsWith, a, b);
	});
var $author$project$Models$Project$ProjectSettings$removeColumn = function (hiddenColumns) {
	var hidePaths = A2(
		$elm$core$List$map,
		$author$project$Models$Project$ColumnPath$fromString,
		A2(
			$author$project$Libs$List$filterNot,
			$elm$core$String$isEmpty,
			A2(
				$elm$core$List$map,
				$elm$core$String$trim,
				A2($elm$core$String$split, ',', hiddenColumns))));
	return function (path) {
		return A2(
			$elm$core$List$any,
			function (hidePath) {
				return A2($author$project$Models$Project$ColumnPath$startsWith, hidePath, path);
			},
			hidePaths);
	};
};
var $author$project$PagesComponents$Organization_$Project_$Updates$FindPath$filterRelations = F2(
	function (settings, relations) {
		var removeTable = $author$project$Models$Project$ProjectSettings$removeTable(settings.eD);
		var removeColumn = $author$project$Models$Project$ProjectSettings$removeColumn(settings.eC);
		return A2(
			$author$project$Libs$List$filterNot,
			function (r) {
				return removeTable(r.ht.aq) || (removeTable(r.dG.aq) || (removeColumn(r.ht.bH) || removeColumn(r.dG.bH)));
			},
			relations);
	});
var $author$project$PagesComponents$Organization_$Project_$Updates$FindPath$computeFindPath = F5(
	function (tables, relations, from, to, settings) {
		return {
			bK: from,
			dy: $elm$core$Maybe$Nothing,
			nD: A6(
				$author$project$PagesComponents$Organization_$Project_$Updates$FindPath$buildPaths,
				tables,
				A2($author$project$PagesComponents$Organization_$Project_$Updates$FindPath$filterRelations, settings, relations),
				settings,
				from,
				function (t) {
					return _Utils_eq(t.H, to);
				},
				_List_Nil),
			dM: settings,
			oT: to
		};
	});
var $author$project$PagesComponents$Organization_$Project_$Models$Erd$defaultSchemaM = function (erd) {
	return A3(
		$author$project$Libs$Maybe$mapOrElse,
		A2(
			$elm$core$Basics$composeR,
			function ($) {
				return $.dM;
			},
			function ($) {
				return $.cb;
			}),
		$author$project$Conf$schema.lC,
		erd);
};
var $author$project$Services$Lenses$setFindPath = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.c8;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{c8: value});
		}));
var $author$project$Services$Lenses$mapFindPath = A2(
	$author$project$Services$Lenses$map_,
	function ($) {
		return $.c8;
	},
	$author$project$Services$Lenses$setFindPath);
var $author$project$Libs$String$orElse = F2(
	function (other, str) {
		return (str === '') ? other : str;
	});
var $author$project$Services$Lenses$setIgnoredColumns = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.eC;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{eC: value});
		}));
var $author$project$Services$Lenses$setIgnoredTables = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.eD;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{eD: value});
		}));
var $author$project$Models$Project$ProjectSettings$fillFindPath = function (settings) {
	return A2(
		$author$project$Services$Lenses$mapFindPath,
		function (fp) {
			return A2(
				$author$project$Services$Lenses$setIgnoredColumns,
				A2($author$project$Libs$String$orElse, settings.ay.bn, fp.eC),
				A2(
					$author$project$Services$Lenses$setIgnoredTables,
					A2($author$project$Libs$String$orElse, settings.n4, fp.eD),
					fp));
		},
		settings);
};
var $author$project$Track$findPathOpened = function (erd) {
	return A3(
		$author$project$Track$createEvent,
		'editor_find_path_opened',
		_List_Nil,
		A2(
			$elm$core$Maybe$map,
			function ($) {
				return $.nN;
			},
			erd));
};
var $author$project$Track$findPathDetails = function (result) {
	return _List_fromArray(
		[
			_Utils_Tuple2(
			'nb_results',
			$elm$json$Json$Encode$int(
				$elm$core$List$length(result.nD))),
			_Utils_Tuple2(
			'nb_ignored_columns',
			$elm$json$Json$Encode$int(
				$elm$core$List$length(
					A2($elm$core$String$split, ',', result.dM.eC)))),
			_Utils_Tuple2(
			'nb_ignored_tables',
			$elm$json$Json$Encode$int(
				$elm$core$List$length(
					A2($elm$core$String$split, ',', result.dM.eD)))),
			_Utils_Tuple2(
			'path_max_length',
			$elm$json$Json$Encode$int(result.dM.eN))
		]);
};
var $author$project$Track$findPathResults = F2(
	function (erd, result) {
		return A3(
			$author$project$Track$createEvent,
			'editor_find_path_searched',
			$author$project$Track$findPathDetails(result),
			A2(
				$elm$core$Maybe$map,
				function ($) {
					return $.nN;
				},
				erd));
	});
var $author$project$PagesComponents$Organization_$Project_$Models$Erd$getTable = F2(
	function (_v0, erd) {
		var schema = _v0.a;
		var table = _v0.b;
		var _v1 = A2(
			$elm$core$Dict$get,
			_Utils_Tuple2(schema, table),
			erd.oM);
		if (!_v1.$) {
			var t = _v1.a;
			return $elm$core$Maybe$Just(t);
		} else {
			return _Utils_eq(schema, $author$project$Conf$schema.lC) ? A2(
				$elm$core$Dict$get,
				_Utils_Tuple2(erd.dM.cb, table),
				erd.oM) : $elm$core$Maybe$Nothing;
		}
	});
var $author$project$PagesComponents$Organization_$Project_$Models$FindPathState$map = F2(
	function (f, state) {
		switch (state.$) {
			case 0:
				return $author$project$PagesComponents$Organization_$Project_$Models$FindPathState$Empty;
			case 1:
				return $author$project$PagesComponents$Organization_$Project_$Models$FindPathState$Searching;
			default:
				var result = state.a;
				return $author$project$PagesComponents$Organization_$Project_$Models$FindPathState$Found(
					f(result));
		}
	});
var $author$project$Services$Lenses$mapFindPathM = A2(
	$author$project$Services$Lenses$mapM_,
	function ($) {
		return $.c8;
	},
	$author$project$Services$Lenses$setFindPath);
var $author$project$Services$Lenses$setOpened = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.dy;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{dy: value});
		}));
var $author$project$Services$Lenses$mapOpened = A2(
	$author$project$Services$Lenses$map_,
	function ($) {
		return $.dy;
	},
	$author$project$Services$Lenses$setOpened);
var $author$project$Services$Lenses$setResult = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.bU;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{bU: value});
		}));
var $author$project$Services$Lenses$mapResult = A2(
	$author$project$Services$Lenses$map_,
	function ($) {
		return $.bU;
	},
	$author$project$Services$Lenses$setResult);
var $author$project$Services$Lenses$setSettings = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.dM;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{dM: value});
		}));
var $author$project$Services$Lenses$mapSettings = A2(
	$author$project$Services$Lenses$map_,
	function ($) {
		return $.dM;
	},
	$author$project$Services$Lenses$setSettings);
var $author$project$Services$Lenses$setShowSettings = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.ow;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{ow: value});
		}));
var $author$project$Services$Lenses$mapShowSettings = A2(
	$author$project$Services$Lenses$map_,
	function ($) {
		return $.ow;
	},
	$author$project$Services$Lenses$setShowSettings);
var $author$project$Models$Project$TableId$parseWith = F2(
	function (defaultSchema, tableId) {
		var _v0 = A2($elm$core$String$split, '.', tableId);
		if ((_v0.b && _v0.b.b) && (!_v0.b.b.b)) {
			var s = _v0.a;
			var _v1 = _v0.b;
			var t = _v1.a;
			return _Utils_Tuple2(s, t);
		} else {
			return _Utils_Tuple2(defaultSchema, tableId);
		}
	});
var $author$project$Models$Project$TableId$parse = function (tableId) {
	return A2($author$project$Models$Project$TableId$parseWith, $author$project$Conf$schema.lC, tableId);
};
var $author$project$PagesComponents$Organization_$Project_$Updates$Utils$setDirtyCmd = function (_v0) {
	var model = _v0.a;
	var cmd = _v0.b;
	return (model.ls || (!model.Z.fa)) ? _Utils_Tuple2(model, cmd) : _Utils_Tuple2(
		_Utils_update(
			model,
			{ls: true}),
		$elm$core$Platform$Cmd$batch(
			_List_fromArray(
				[
					cmd,
					$author$project$Ports$projectDirty(true)
				])));
};
var $author$project$Services$Lenses$setFrom = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.bK;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{bK: value});
		}));
var $author$project$Services$Lenses$setTo = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.oT;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{oT: value});
		}));
var $author$project$Libs$Maybe$zip3 = F3(
	function (maybeA, maybeB, maybeC) {
		return A4(
			$elm$core$Maybe$map3,
			F3(
				function (a, b, c) {
					return _Utils_Tuple3(a, b, c);
				}),
			maybeA,
			maybeB,
			maybeC);
	});
var $author$project$PagesComponents$Organization_$Project_$Updates$FindPath$handleFindPath = F2(
	function (msg, model) {
		switch (msg.$) {
			case 0:
				var from = msg.a;
				var to = msg.b;
				return $author$project$PagesComponents$Organization_$Project_$Updates$Utils$setDirtyCmd(
					_Utils_Tuple2(
						A2(
							$author$project$Services$Lenses$mapErdM,
							$author$project$Services$Lenses$mapSettings($author$project$Models$Project$ProjectSettings$fillFindPath),
							A2(
								$author$project$Services$Lenses$setFindPath,
								$elm$core$Maybe$Just(
									{
										bK: A2(
											$elm$core$Maybe$withDefault,
											'',
											A2(
												$elm$core$Maybe$map,
												$author$project$Models$Project$TableId$show(
													$author$project$PagesComponents$Organization_$Project_$Models$Erd$defaultSchemaM(model.lE)),
												from)),
										H: $author$project$Conf$ids.lP,
										bU: $author$project$PagesComponents$Organization_$Project_$Models$FindPathState$Empty,
										ow: false,
										oT: A2(
											$elm$core$Maybe$withDefault,
											'',
											A2(
												$elm$core$Maybe$map,
												$author$project$Models$Project$TableId$show(
													$author$project$PagesComponents$Organization_$Project_$Models$Erd$defaultSchemaM(model.lE)),
												to))
									}),
								model)),
						$elm$core$Platform$Cmd$batch(
							_List_fromArray(
								[
									A2(
									$author$project$Libs$Task$sendAfter,
									1,
									$author$project$PagesComponents$Organization_$Project_$Models$ModalOpen($author$project$Conf$ids.lP)),
									$author$project$Ports$track(
									$author$project$Track$findPathOpened(model.lE))
								]))));
			case 1:
				return _Utils_Tuple2(
					A2(
						$author$project$Services$Lenses$mapFindPathM,
						$author$project$Services$Lenses$mapShowSettings($elm$core$Basics$not),
						model),
					$elm$core$Platform$Cmd$none);
			case 2:
				var from = msg.a;
				return _Utils_Tuple2(
					A2(
						$author$project$Services$Lenses$mapFindPathM,
						A2(
							$elm$core$Basics$composeR,
							$author$project$Services$Lenses$setFrom(from),
							$author$project$Services$Lenses$setResult($author$project$PagesComponents$Organization_$Project_$Models$FindPathState$Empty)),
						model),
					$elm$core$Platform$Cmd$none);
			case 3:
				var to = msg.a;
				return _Utils_Tuple2(
					A2(
						$author$project$Services$Lenses$mapFindPathM,
						A2(
							$elm$core$Basics$composeR,
							$author$project$Services$Lenses$setTo(to),
							$author$project$Services$Lenses$setResult($author$project$PagesComponents$Organization_$Project_$Models$FindPathState$Empty)),
						model),
					$elm$core$Platform$Cmd$none);
			case 4:
				return A3(
					$author$project$Libs$Maybe$mapOrElse,
					function (_v2) {
						var erd = _v2.a;
						var from = _v2.b;
						var to = _v2.c;
						return _Utils_Tuple2(
							A2(
								$author$project$Services$Lenses$mapFindPathM,
								$author$project$Services$Lenses$setResult($author$project$PagesComponents$Organization_$Project_$Models$FindPathState$Searching),
								model),
							A2(
								$author$project$Libs$Task$sendAfter,
								300,
								$author$project$PagesComponents$Organization_$Project_$Models$FindPathMsg(
									A5($author$project$PagesComponents$Organization_$Project_$Models$FPCompute, erd.oM, erd.bT, from.H, to.H, erd.dM.c8))));
					},
					_Utils_Tuple2(model, $elm$core$Platform$Cmd$none),
					A2(
						$elm$core$Maybe$andThen,
						function (_v1) {
							var fp = _v1.a;
							var erd = _v1.b;
							return A3(
								$author$project$Libs$Maybe$zip3,
								$elm$core$Maybe$Just(erd),
								A2(
									$author$project$PagesComponents$Organization_$Project_$Models$Erd$getTable,
									$author$project$Models$Project$TableId$parse(fp.bK),
									erd),
								A2(
									$author$project$PagesComponents$Organization_$Project_$Models$Erd$getTable,
									$author$project$Models$Project$TableId$parse(fp.oT),
									erd));
						},
						A2($author$project$Libs$Maybe$zip, model.c8, model.lE)));
			case 5:
				var tables = msg.a;
				var relations = msg.b;
				var from = msg.c;
				var to = msg.d;
				var settings = msg.e;
				return function (result) {
					return _Utils_Tuple2(
						A2(
							$author$project$Services$Lenses$mapFindPathM,
							$author$project$Services$Lenses$setResult(
								$author$project$PagesComponents$Organization_$Project_$Models$FindPathState$Found(result)),
							model),
						$elm$core$Platform$Cmd$batch(
							_List_fromArray(
								[
									$author$project$Ports$track(
									A2($author$project$Track$findPathResults, model.lE, result))
								])));
				}(
					A5($author$project$PagesComponents$Organization_$Project_$Updates$FindPath$computeFindPath, tables, relations, from, to, settings));
			case 6:
				var index = msg.a;
				return _Utils_Tuple2(
					A2(
						$author$project$Services$Lenses$mapFindPathM,
						$author$project$Services$Lenses$mapResult(
							$author$project$PagesComponents$Organization_$Project_$Models$FindPathState$map(
								$author$project$Services$Lenses$mapOpened(
									function (o) {
										return A3(
											$author$project$Libs$Bool$cond,
											_Utils_eq(
												o,
												$elm$core$Maybe$Just(index)),
											$elm$core$Maybe$Nothing,
											$elm$core$Maybe$Just(index));
									}))),
						model),
					$elm$core$Platform$Cmd$none);
			case 7:
				var settings = msg.a;
				return $author$project$PagesComponents$Organization_$Project_$Updates$Utils$setDirty(
					A2(
						$author$project$Services$Lenses$mapErdM,
						$author$project$Services$Lenses$mapSettings(
							$author$project$Services$Lenses$setFindPath(settings)),
						model));
			default:
				return _Utils_Tuple2(
					A2($author$project$Services$Lenses$setFindPath, $elm$core$Maybe$Nothing, model),
					$elm$core$Platform$Cmd$none);
		}
	});
var $author$project$Track$docOpened = F2(
	function (source, erd) {
		return A3(
			$author$project$Track$createEvent,
			'editor_doc_opened',
			_List_fromArray(
				[
					_Utils_Tuple2(
					'source',
					$elm$json$Json$Encode$string(source))
				]),
			A2(
				$elm$core$Maybe$map,
				function ($) {
					return $.nN;
				},
				erd));
	});
var $author$project$PagesComponents$Organization_$Project_$Updates$Help$setHelp = F2(
	function (transform, item) {
		return _Utils_update(
			item,
			{
				lY: A2($elm$core$Maybe$map, transform, item.lY)
			});
	});
var $author$project$PagesComponents$Organization_$Project_$Updates$Help$setOpenedSection = F2(
	function (transform, item) {
		return _Utils_update(
			item,
			{
				nu: transform(item.nu)
			});
	});
var $author$project$PagesComponents$Organization_$Project_$Updates$Help$handleHelp = F2(
	function (msg, model) {
		switch (msg.$) {
			case 0:
				var section = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{
							lY: $elm$core$Maybe$Just(
								{H: $author$project$Conf$ids.lZ, nu: section})
						}),
					$elm$core$Platform$Cmd$batch(
						_List_fromArray(
							[
								A2(
								$author$project$Libs$Task$sendAfter,
								1,
								$author$project$PagesComponents$Organization_$Project_$Models$ModalOpen($author$project$Conf$ids.lZ)),
								$author$project$Ports$track(
								A2($author$project$Track$docOpened, 'navbar_top', model.lE))
							])));
			case 1:
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{lY: $elm$core$Maybe$Nothing}),
					$elm$core$Platform$Cmd$none);
			default:
				var section = msg.a;
				return _Utils_Tuple2(
					A2(
						$author$project$PagesComponents$Organization_$Project_$Updates$Help$setHelp,
						$author$project$PagesComponents$Organization_$Project_$Updates$Help$setOpenedSection(
							function (s) {
								return A3(
									$author$project$Libs$Bool$cond,
									_Utils_eq(s, section),
									'',
									section);
							}),
						model),
					$elm$core$Platform$Cmd$none);
		}
	});
var $author$project$PagesComponents$Organization_$Project_$Components$ProjectSaveDialog$Close = {$: 1};
var $author$project$PagesComponents$Organization_$Project_$Models$CursorMode$Drag = 0;
var $author$project$PagesComponents$Organization_$Project_$Models$FitToScreen = {$: 53};
var $author$project$PagesComponents$Organization_$Project_$Models$HideColumn = function (a) {
	return {$: 18, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Models$HideTable = function (a) {
	return {$: 13, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$JsonSourceMsg = function (a) {
	return {$: 4, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Models$MoveColumn = F2(
	function (a, b) {
		return {$: 30, a: a, b: b};
	});
var $author$project$PagesComponents$Organization_$Project_$Models$PSSourceUpdate = function (a) {
	return {$: 4, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Models$PositionHint$PlaceAt = function (a) {
	return {$: 2, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Models$ProjectSaveMsg = function (a) {
	return {$: 46, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Models$ProjectSettingsMsg = function (a) {
	return {$: 47, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Models$SelectTable = F2(
	function (a, b) {
		return {$: 24, a: a, b: b};
	});
var $author$project$PagesComponents$Organization_$Project_$Models$ShowColumn = function (a) {
	return {$: 17, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$SqlSourceMsg = function (a) {
	return {$: 3, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Models$TableColor = F2(
	function (a, b) {
		return {$: 29, a: a, b: b};
	});
var $author$project$PagesComponents$Organization_$Project_$Models$TableMove = F2(
	function (a, b) {
		return {$: 26, a: a, b: b};
	});
var $author$project$PagesComponents$Organization_$Project_$Models$TablePosition = F2(
	function (a, b) {
		return {$: 27, a: a, b: b};
	});
var $author$project$PagesComponents$Organization_$Project_$Models$ToggleColumns = function (a) {
	return {$: 16, a: a};
};
var $author$project$Ports$ConfettiPride = {$: 24};
var $author$project$Ports$confettiPride = $author$project$Ports$messageToJs($author$project$Ports$ConfettiPride);
var $author$project$PagesComponents$Organization_$Project_$Models$ErdRelationProps$create = F2(
	function (shownTables, id) {
		return {
			fh: A2($elm$core$Set$member, id, shownTables)
		};
	});
var $author$project$PagesComponents$Organization_$Project_$Models$ErdTableLayout$buildRelatedTables = F2(
	function (shownTables, relations) {
		return $elm$core$Dict$fromList(
			A2(
				$elm$core$List$map,
				function (t) {
					return _Utils_Tuple2(
						t,
						A2($author$project$PagesComponents$Organization_$Project_$Models$ErdRelationProps$create, shownTables, t));
				},
				A2(
					$elm$core$List$concatMap,
					function (r) {
						return _List_fromArray(
							[r.ht.aq, r.dG.aq]);
					},
					relations)));
	});
var $author$project$PagesComponents$Organization_$Project_$Models$ErdTableProps$create = function (props) {
	return {cS: props.cS, A: props.A, e$: props.e$, hb: $elm$core$Maybe$Nothing, cy: props.cy, bx: props.ay, ox: props.ox};
};
var $author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$ErdColumnPropsNested = $elm$core$Basics$identity;
var $author$project$Libs$List$groupByL = F2(
	function (getKey, list) {
		return A2(
			$elm$core$List$map,
			$elm$core$Tuple$mapSecond($elm$core$List$reverse),
			$elm$core$List$reverse(
				A3(
					$elm$core$List$foldl,
					F2(
						function (a, res) {
							var key = getKey(a);
							return _Utils_eq(
								A2(
									$author$project$Libs$List$find,
									function (_v0) {
										var k = _v0.a;
										return _Utils_eq(k, key);
									},
									res),
								$elm$core$Maybe$Nothing) ? A2(
								$elm$core$List$cons,
								_Utils_Tuple2(
									key,
									_List_fromArray(
										[a])),
								res) : A2(
								$elm$core$List$map,
								function (_v1) {
									var k = _v1.a;
									var l = _v1.b;
									return _Utils_eq(k, key) ? _Utils_Tuple2(
										k,
										A2($elm$core$List$cons, a, l)) : _Utils_Tuple2(k, l);
								},
								res);
						}),
					_List_Nil,
					list)));
	});
var $author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$createAll = function (columns) {
	return A2(
		$elm$core$List$map,
		function (_v0) {
			var name = _v0.a;
			var cols = _v0.b;
			return {
				bd: $author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$createAll(
					A2(
						$elm$core$List$filterMap,
						A2(
							$elm$core$Basics$composeR,
							function ($) {
								return $.oO;
							},
							$author$project$Libs$Nel$fromList),
						cols)),
				az: false,
				eS: name
			};
		},
		A2(
			$author$project$Libs$List$groupByL,
			function ($) {
				return $.ev;
			},
			columns));
};
var $author$project$PagesComponents$Organization_$Project_$Models$ErdTableLayout$create = F3(
	function (shownTables, relations, props) {
		return {
			M: $author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$createAll(props.M),
			H: props.H,
			nU: $author$project$PagesComponents$Organization_$Project_$Models$ErdTableProps$create(props),
			n$: A2($author$project$PagesComponents$Organization_$Project_$Models$ErdTableLayout$buildRelatedTables, shownTables, relations)
		};
	});
var $elm$core$Set$fromList = function (list) {
	return A3($elm$core$List$foldl, $elm$core$Set$insert, $elm$core$Set$empty, list);
};
var $author$project$PagesComponents$Organization_$Project_$Models$ErdLayout$create = F2(
	function (relationsByTable, layout) {
		return {
			fJ: layout.fJ,
			ic: layout.ic,
			gw: layout.gw,
			oM: A2(
				$elm$core$List$map,
				function (t) {
					return A3(
						$author$project$PagesComponents$Organization_$Project_$Models$ErdTableLayout$create,
						$elm$core$Set$fromList(
							A2(
								$elm$core$List$map,
								function ($) {
									return $.H;
								},
								layout.oM)),
						A3($author$project$Libs$Dict$getOrElse, t.H, _List_Nil, relationsByTable),
						t);
				},
				layout.oM),
			kb: layout.kb
		};
	});
var $author$project$PagesComponents$Organization_$Project_$Models$Notes$Invalid = function (a) {
	return {$: 2, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Models$Notes$fromKey = function (key) {
	var _v0 = A2($elm$core$String$split, '.', key);
	_v0$2:
	while (true) {
		if (_v0.b && _v0.b.b) {
			if (!_v0.b.b.b) {
				var schema = _v0.a;
				var _v1 = _v0.b;
				var table = _v1.a;
				return $author$project$PagesComponents$Organization_$Project_$Models$Notes$TableNote(
					_Utils_Tuple2(schema, table));
			} else {
				if (!_v0.b.b.b.b) {
					var schema = _v0.a;
					var _v2 = _v0.b;
					var table = _v2.a;
					var _v3 = _v2.b;
					var column = _v3.a;
					return $author$project$PagesComponents$Organization_$Project_$Models$Notes$ColumnNote(
						{
							bH: $author$project$Models$Project$ColumnPath$fromString(column),
							aq: _Utils_Tuple2(schema, table)
						});
				} else {
					break _v0$2;
				}
			}
		} else {
			break _v0$2;
		}
	}
	return $author$project$PagesComponents$Organization_$Project_$Models$Notes$Invalid(key);
};
var $author$project$PagesComponents$Organization_$Project_$Models$ErdNotesTable$empty = {M: $elm$core$Dict$empty, aq: $elm$core$Maybe$Nothing};
var $author$project$Services$Lenses$setColumns = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.M;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{M: value});
		}));
var $author$project$Services$Lenses$mapColumns = A2(
	$author$project$Services$Lenses$map_,
	function ($) {
		return $.M;
	},
	$author$project$Services$Lenses$setColumns);
var $author$project$Services$Lenses$setTable = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.aq;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{aq: value});
		}));
var $author$project$Models$Project$ColumnPath$update = F3(
	function (path, transform, dict) {
		return A3(
			$elm$core$Dict$update,
			$author$project$Models$Project$ColumnPath$toString(path),
			transform,
			dict);
	});
var $author$project$PagesComponents$Organization_$Project_$Models$ErdNotes$set = F3(
	function (ref, value, notes) {
		switch (ref.$) {
			case 2:
				return notes;
			case 0:
				var table = ref.a;
				return A3(
					$elm$core$Dict$update,
					table,
					A2(
						$elm$core$Basics$composeR,
						$elm$core$Maybe$withDefault($author$project$PagesComponents$Organization_$Project_$Models$ErdNotesTable$empty),
						A2(
							$elm$core$Basics$composeR,
							$author$project$Services$Lenses$setTable(value),
							$elm$core$Maybe$Just)),
					notes);
			default:
				var table = ref.a.aq;
				var column = ref.a.bH;
				return A3(
					$elm$core$Dict$update,
					table,
					A2(
						$elm$core$Basics$composeR,
						$elm$core$Maybe$withDefault($author$project$PagesComponents$Organization_$Project_$Models$ErdNotesTable$empty),
						A2(
							$elm$core$Basics$composeR,
							$author$project$Services$Lenses$mapColumns(
								A2(
									$author$project$Models$Project$ColumnPath$update,
									column,
									function (_v1) {
										return value;
									})),
							$elm$core$Maybe$Just)),
					notes);
		}
	});
var $author$project$PagesComponents$Organization_$Project_$Models$ErdNotes$create = function (notes) {
	return A3(
		$elm$core$Dict$foldl,
		F3(
			function (k, v, b) {
				return A3(
					$author$project$PagesComponents$Organization_$Project_$Models$ErdNotes$set,
					$author$project$PagesComponents$Organization_$Project_$Models$Notes$fromKey(k),
					$elm$core$Maybe$Just(v),
					b);
			}),
		$elm$core$Dict$empty,
		notes);
};
var $author$project$PagesComponents$Organization_$Project_$Models$Erd$create = function (project) {
	var _v0 = A2($author$project$PagesComponents$Organization_$Project_$Models$Erd$computeSources, project.dM, project.hs);
	var _v1 = _v0.a;
	var tables = _v1.a;
	var relations = _v1.b;
	var types = _v1.c;
	var relationsByTable = _v0.b;
	return {
		id: project.fw,
		i$: A2(
			$elm$core$Dict$map,
			function (_v2) {
				return $author$project$PagesComponents$Organization_$Project_$Models$ErdLayout$create(relationsByTable);
			},
			project.i$),
		bP: $author$project$PagesComponents$Organization_$Project_$Models$ErdNotes$create(project.bP),
		nN: $author$project$Models$ProjectInfo$fromProject(project),
		bT: relations,
		e2: relationsByTable,
		dM: project.dM,
		hs: project.hs,
		oM: tables,
		d3: types
	};
};
var $author$project$Libs$Json$Decode$errorToHtml = function (error) {
	return '<pre>' + ($elm$json$Json$Decode$errorToString(error) + '</pre>');
};
var $author$project$PagesComponents$Organization_$Project_$Models$FPClose = {$: 8};
var $author$project$PagesComponents$Organization_$Project_$Models$FPOpen = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $author$project$PagesComponents$Organization_$Project_$Models$HClose = {$: 1};
var $author$project$PagesComponents$Organization_$Project_$Models$HOpen = function (a) {
	return {$: 0, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Models$HelpMsg = function (a) {
	return {$: 51, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Models$NewLayoutMsg = function (a) {
	return {$: 36, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$NewLayout$Open = function (a) {
	return {$: 0, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Models$SelectAllTables = {$: 25};
var $author$project$PagesComponents$Organization_$Project_$Models$TriggerSaveProject = {$: 3};
var $author$project$PagesComponents$Organization_$Project_$Models$VRCancel = {$: 3};
var $author$project$PagesComponents$Organization_$Project_$Models$VRCreate = function (a) {
	return {$: 0, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Models$Zoom = function (a) {
	return {$: 57, a: a};
};
var $author$project$Ports$Blur = function (a) {
	return {$: 3, a: a};
};
var $author$project$Ports$blur = function (id) {
	return $author$project$Ports$messageToJs(
		$author$project$Ports$Blur(id));
};
var $author$project$PagesComponents$Organization_$Project_$Models$AClose = {$: 1};
var $author$project$PagesComponents$Organization_$Project_$Models$AmlSidebarMsg = function (a) {
	return {$: 40, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$NewLayout$Cancel = {$: 3};
var $author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$Close = {$: 1};
var $author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$Close = {$: 1};
var $author$project$PagesComponents$Organization_$Project_$Models$ConfirmAnswer = F2(
	function (a, b) {
		return {$: 74, a: a, b: b};
	});
var $author$project$PagesComponents$Organization_$Project_$Models$CustomModalClose = {$: 72};
var $author$project$PagesComponents$Organization_$Project_$Models$DragCancel = {$: 69};
var $author$project$PagesComponents$Organization_$Project_$Models$NotesMsg$NCancel = {$: 3};
var $author$project$PagesComponents$Organization_$Project_$Models$PSClose = {$: 1};
var $author$project$PagesComponents$Organization_$Project_$Models$PromptAnswer = function (a) {
	return {$: 77, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Models$SAClose = {$: 2};
var $author$project$PagesComponents$Organization_$Project_$Models$SchemaAnalysisMsg = function (a) {
	return {$: 44, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Updates$Hotkey$cancelElement = function (model) {
	return A2(
		$elm$core$Maybe$withDefault,
		$author$project$Libs$Task$send(
			$author$project$PagesComponents$Organization_$Project_$Models$Toast(
				$author$project$Services$Toasts$info('Nothing to cancel'))),
		A2(
			$elm$core$Maybe$map,
			$author$project$Libs$Task$send,
			A2(
				$author$project$Libs$Maybe$orElse,
				A2(
					$elm$core$Maybe$map,
					function (p) {
						return A2($author$project$PagesComponents$Organization_$Project_$Models$SelectTable, p.H, false);
					},
					A2(
						$elm$core$Maybe$andThen,
						A2(
							$elm$core$Basics$composeR,
							$author$project$PagesComponents$Organization_$Project_$Models$Erd$currentLayout,
							A2(
								$elm$core$Basics$composeR,
								function ($) {
									return $.oM;
								},
								$author$project$Libs$List$find(
									A2(
										$elm$core$Basics$composeR,
										function ($) {
											return $.nU;
										},
										function ($) {
											return $.cy;
										})))),
						model.lE)),
				A2(
					$author$project$Libs$Maybe$orElse,
					A2(
						$elm$core$Maybe$map,
						function (_v14) {
							return $author$project$PagesComponents$Organization_$Project_$Models$ModalClose(
								$author$project$PagesComponents$Organization_$Project_$Models$HelpMsg($author$project$PagesComponents$Organization_$Project_$Models$HClose));
						},
						model.lY),
					A2(
						$author$project$Libs$Maybe$orElse,
						A2(
							$elm$core$Maybe$map,
							function (_v13) {
								return $author$project$PagesComponents$Organization_$Project_$Models$ModalClose(
									$author$project$PagesComponents$Organization_$Project_$Models$ProjectSettingsMsg($author$project$PagesComponents$Organization_$Project_$Models$PSClose));
							},
							model.dM),
						A2(
							$author$project$Libs$Maybe$orElse,
							A2(
								$elm$core$Maybe$map,
								function (_v12) {
									return $author$project$PagesComponents$Organization_$Project_$Models$ModalClose(
										$author$project$PagesComponents$Organization_$Project_$Models$SharingMsg($author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$Close));
								},
								model.os),
							A2(
								$author$project$Libs$Maybe$orElse,
								A2(
									$elm$core$Maybe$map,
									function (_v11) {
										return $author$project$PagesComponents$Organization_$Project_$Models$ModalClose(
											$author$project$PagesComponents$Organization_$Project_$Models$ProjectSettingsMsg(
												$author$project$PagesComponents$Organization_$Project_$Models$PSSourceUpdate($author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$Close)));
									},
									model.oA),
								A2(
									$author$project$Libs$Maybe$orElse,
									A2(
										$elm$core$Maybe$map,
										function (_v10) {
											return $author$project$PagesComponents$Organization_$Project_$Models$ModalClose(
												$author$project$PagesComponents$Organization_$Project_$Models$FindPathMsg($author$project$PagesComponents$Organization_$Project_$Models$FPClose));
										},
										model.c8),
									A2(
										$author$project$Libs$Maybe$orElse,
										A2(
											$elm$core$Maybe$map,
											function (_v9) {
												return $author$project$PagesComponents$Organization_$Project_$Models$AmlSidebarMsg($author$project$PagesComponents$Organization_$Project_$Models$AClose);
											},
											model.kr),
										A2(
											$author$project$Libs$Maybe$orElse,
											A2(
												$elm$core$Maybe$map,
												function (_v8) {
													return $author$project$PagesComponents$Organization_$Project_$Models$ModalClose(
														$author$project$PagesComponents$Organization_$Project_$Models$SchemaAnalysisMsg($author$project$PagesComponents$Organization_$Project_$Models$SAClose));
												},
												model.oi),
											A2(
												$author$project$Libs$Maybe$orElse,
												A2(
													$elm$core$Maybe$map,
													function (_v7) {
														return $author$project$PagesComponents$Organization_$Project_$Models$ModalClose(
															$author$project$PagesComponents$Organization_$Project_$Models$ProjectSaveMsg($author$project$PagesComponents$Organization_$Project_$Components$ProjectSaveDialog$Close));
													},
													model.fa),
												A2(
													$author$project$Libs$Maybe$orElse,
													A2(
														$elm$core$Maybe$map,
														function (_v6) {
															return $author$project$PagesComponents$Organization_$Project_$Models$ModalClose(
																$author$project$PagesComponents$Organization_$Project_$Models$NotesMsg($author$project$PagesComponents$Organization_$Project_$Models$NotesMsg$NCancel));
														},
														model._),
													A2(
														$author$project$Libs$Maybe$orElse,
														A2(
															$elm$core$Maybe$map,
															function (_v5) {
																return $author$project$PagesComponents$Organization_$Project_$Models$ModalClose(
																	$author$project$PagesComponents$Organization_$Project_$Models$NewLayoutMsg($author$project$PagesComponents$Organization_$Project_$Views$Modals$NewLayout$Cancel));
															},
															model.m3),
														A2(
															$author$project$Libs$Maybe$orElse,
															A2(
																$elm$core$Maybe$map,
																function (_v4) {
																	return $author$project$PagesComponents$Organization_$Project_$Models$DragCancel;
																},
																model.ep),
															A2(
																$author$project$Libs$Maybe$orElse,
																A2(
																	$elm$core$Maybe$map,
																	function (_v3) {
																		return $author$project$PagesComponents$Organization_$Project_$Models$VirtualRelationMsg($author$project$PagesComponents$Organization_$Project_$Models$VRCancel);
																	},
																	model.o4),
																A2(
																	$author$project$Libs$Maybe$orElse,
																	A2(
																		$elm$core$Maybe$map,
																		function (_v2) {
																			return $author$project$PagesComponents$Organization_$Project_$Models$ModalClose($author$project$PagesComponents$Organization_$Project_$Models$CustomModalClose);
																		},
																		model.mS),
																	A2(
																		$author$project$Libs$Maybe$orElse,
																		A2(
																			$elm$core$Maybe$map,
																			function (_v1) {
																				return $author$project$PagesComponents$Organization_$Project_$Models$ModalClose(
																					$author$project$PagesComponents$Organization_$Project_$Models$PromptAnswer($elm$core$Platform$Cmd$none));
																			},
																			model.nS),
																		A2(
																			$author$project$Libs$Maybe$orElse,
																			A2(
																				$elm$core$Maybe$map,
																				function (c) {
																					return $author$project$PagesComponents$Organization_$Project_$Models$ModalClose(
																						A2($author$project$PagesComponents$Organization_$Project_$Models$ConfirmAnswer, false, c.cX.ct));
																				},
																				model.b8),
																			A2(
																				$elm$core$Maybe$map,
																				function (_v0) {
																					return $author$project$PagesComponents$Organization_$Project_$Models$ContextMenuClose;
																				},
																				model.k3)))))))))))))))))));
};
var $author$project$PagesComponents$Organization_$Project_$Updates$Hotkey$currentTable = function (model) {
	return A2(
		$author$project$Libs$Maybe$orElse,
		A2(
			$elm$core$Maybe$andThen,
			A2(
				$elm$core$Basics$composeR,
				$author$project$PagesComponents$Organization_$Project_$Models$Erd$currentLayout,
				A2(
					$elm$core$Basics$composeR,
					function ($) {
						return $.oM;
					},
					A2(
						$elm$core$Basics$composeR,
						$author$project$Libs$List$find(
							A2(
								$elm$core$Basics$composeR,
								function ($) {
									return $.nU;
								},
								function ($) {
									return $.cy;
								})),
						$elm$core$Maybe$map(
							function ($) {
								return $.H;
							})))),
			model.lE),
		model.l2);
};
var $author$project$PagesComponents$Organization_$Project_$Updates$Hotkey$collapseElement = function (model) {
	return A2(
		$elm$core$Maybe$withDefault,
		$author$project$Libs$Task$send(
			$author$project$PagesComponents$Organization_$Project_$Models$Toast(
				$author$project$Services$Toasts$info('Can\'t find an element to collapse :('))),
		A2(
			$elm$core$Maybe$map,
			A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Models$ToggleColumns, $author$project$Libs$Task$send),
			$author$project$PagesComponents$Organization_$Project_$Updates$Hotkey$currentTable(model)));
};
var $author$project$PagesComponents$Organization_$Project_$Models$MCreate = function (a) {
	return {$: 0, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Models$MemoMsg = function (a) {
	return {$: 39, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Updates$Hotkey$createMemo = function (model) {
	return A3(
		$author$project$Libs$Maybe$mapOrElse,
		function (erd) {
			return $author$project$Libs$Task$send(
				$author$project$PagesComponents$Organization_$Project_$Models$MemoMsg(
					$author$project$PagesComponents$Organization_$Project_$Models$MCreate(
						$author$project$Models$Area$centerCanvas(
							A2(
								$author$project$Models$Project$CanvasProps$viewport,
								model.lF,
								$author$project$PagesComponents$Organization_$Project_$Models$Erd$currentLayout(erd).fJ)))));
		},
		$elm$core$Platform$Cmd$none,
		model.lE);
};
var $author$project$PagesComponents$Organization_$Project_$Updates$Hotkey$currentColumn = function (model) {
	return model.l1;
};
var $author$project$PagesComponents$Organization_$Project_$Models$ShowRelatedTables = function (a) {
	return {$: 14, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Updates$Hotkey$expandElement = function (model) {
	return A2(
		$elm$core$Maybe$withDefault,
		$author$project$Libs$Task$send(
			$author$project$PagesComponents$Organization_$Project_$Models$Toast(
				$author$project$Services$Toasts$info('Can\'t find an element to expand :('))),
		A2(
			$elm$core$Maybe$map,
			A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Models$ShowRelatedTables, $author$project$Libs$Task$send),
			$author$project$PagesComponents$Organization_$Project_$Updates$Hotkey$currentTable(model)));
};
var $author$project$PagesComponents$Organization_$Project_$Updates$Hotkey$hideElement = function (model) {
	return A2(
		$elm$core$Maybe$withDefault,
		$author$project$Libs$Task$send(
			$author$project$PagesComponents$Organization_$Project_$Models$Toast(
				$author$project$Services$Toasts$info('Can\'t find an element to hide :('))),
		A2(
			$author$project$Libs$Maybe$orElse,
			A2(
				$elm$core$Maybe$map,
				A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Models$HideTable, $author$project$Libs$Task$send),
				$author$project$PagesComponents$Organization_$Project_$Updates$Hotkey$currentTable(model)),
			A2(
				$elm$core$Maybe$map,
				A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Models$HideColumn, $author$project$Libs$Task$send),
				$author$project$PagesComponents$Organization_$Project_$Updates$Hotkey$currentColumn(model))));
};
var $author$project$Services$Lenses$setActive = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.bb;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{bb: value});
		}));
var $author$project$Services$Lenses$mapActive = A2(
	$author$project$Services$Lenses$map_,
	function ($) {
		return $.bb;
	},
	$author$project$Services$Lenses$setActive);
var $author$project$Services$Lenses$setNavbar = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.m$;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{m$: value});
		}));
var $author$project$Services$Lenses$mapNavbar = A2(
	$author$project$Services$Lenses$map_,
	function ($) {
		return $.m$;
	},
	$author$project$Services$Lenses$setNavbar);
var $author$project$Services$Lenses$setSearch = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.fb;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{fb: value});
		}));
var $author$project$Services$Lenses$mapSearch = A2(
	$author$project$Services$Lenses$map_,
	function ($) {
		return $.fb;
	},
	$author$project$Services$Lenses$setSearch);
var $author$project$Ports$MouseDown = function (a) {
	return {$: 1, a: a};
};
var $author$project$Ports$mouseDown = function (id) {
	return $author$project$Ports$messageToJs(
		$author$project$Ports$MouseDown(id));
};
var $author$project$PagesComponents$Organization_$Project_$Updates$Hotkey$moveTables = F2(
	function (delta, model) {
		var selectedTables = A3(
			$author$project$Libs$Maybe$mapOrElse,
			A2(
				$elm$core$Basics$composeR,
				$author$project$PagesComponents$Organization_$Project_$Models$Erd$currentLayout,
				A2(
					$elm$core$Basics$composeR,
					function ($) {
						return $.oM;
					},
					$elm$core$List$filter(
						A2(
							$elm$core$Basics$composeR,
							function ($) {
								return $.nU;
							},
							function ($) {
								return $.cy;
							})))),
			_List_Nil,
			model.lE);
		return $author$project$Libs$List$nonEmpty(selectedTables) ? $elm$core$Maybe$Just(
			$elm$core$Platform$Cmd$batch(
				A2(
					$elm$core$List$map,
					function (t) {
						return $author$project$Libs$Task$send(
							A2($author$project$PagesComponents$Organization_$Project_$Models$TableMove, t.H, delta));
					},
					selectedTables))) : $elm$core$Maybe$Nothing;
	});
var $author$project$PagesComponents$Organization_$Project_$Models$TableOrder = F2(
	function (a, b) {
		return {$: 28, a: a, b: b};
	});
var $author$project$Libs$List$findIndexInner = F3(
	function (index, predicate, list) {
		findIndexInner:
		while (true) {
			if (!list.b) {
				return $elm$core$Maybe$Nothing;
			} else {
				var first = list.a;
				var rest = list.b;
				if (predicate(first)) {
					return $elm$core$Maybe$Just(index);
				} else {
					var $temp$index = index + 1,
						$temp$predicate = predicate,
						$temp$list = rest;
					index = $temp$index;
					predicate = $temp$predicate;
					list = $temp$list;
					continue findIndexInner;
				}
			}
		}
	});
var $author$project$Libs$List$findIndex = $author$project$Libs$List$findIndexInner(0);
var $author$project$Libs$List$findIndexBy = F3(
	function (matcher, value, list) {
		return A2(
			$author$project$Libs$List$findIndex,
			function (a) {
				return _Utils_eq(
					matcher(a),
					value);
			},
			list);
	});
var $author$project$Libs$Tuple$new = F2(
	function (a, b) {
		return _Utils_Tuple2(a, b);
	});
var $author$project$PagesComponents$Organization_$Project_$Updates$Hotkey$moveTablesOrder = F2(
	function (delta, model) {
		var tables = A3(
			$author$project$Libs$Maybe$mapOrElse,
			A2(
				$elm$core$Basics$composeR,
				$author$project$PagesComponents$Organization_$Project_$Models$Erd$currentLayout,
				function ($) {
					return $.oM;
				}),
			_List_Nil,
			model.lE);
		var selectedTables = A2(
			$elm$core$List$filter,
			function (_v2) {
				var t = _v2.b;
				return t.nU.cy;
			},
			A2($elm$core$List$indexedMap, $author$project$Libs$Tuple$new, tables));
		return $author$project$Libs$List$nonEmpty(selectedTables) ? $elm$core$Platform$Cmd$batch(
			A2(
				$elm$core$List$map,
				function (_v0) {
					var i = _v0.a;
					var t = _v0.b;
					return $author$project$Libs$Task$send(
						A2(
							$author$project$PagesComponents$Organization_$Project_$Models$TableOrder,
							t.H,
							(($elm$core$List$length(tables) - 1) - i) + delta));
				},
				selectedTables)) : A2(
			$elm$core$Maybe$withDefault,
			$author$project$Libs$Task$send(
				$author$project$PagesComponents$Organization_$Project_$Models$Toast(
					$author$project$Services$Toasts$info('Can\'t find an element to move :('))),
			A2(
				$elm$core$Maybe$map,
				function (_v1) {
					var id = _v1.a;
					var i = _v1.b;
					return $author$project$Libs$Task$send(
						A2(
							$author$project$PagesComponents$Organization_$Project_$Models$TableOrder,
							id,
							(($elm$core$List$length(tables) - 1) - i) + delta));
				},
				A2(
					$elm$core$Maybe$andThen,
					function (id) {
						return A2(
							$elm$core$Maybe$map,
							function (i) {
								return _Utils_Tuple2(id, i);
							},
							A3(
								$author$project$Libs$List$findIndexBy,
								function ($) {
									return $.H;
								},
								id,
								tables));
					},
					model.l2)));
	});
var $author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$ShowColumn = function (a) {
	return {$: 6, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$ShowSchema = function (a) {
	return {$: 4, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$ShowTable = function (a) {
	return {$: 5, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Models$DetailsSidebarMsg = function (a) {
	return {$: 41, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Updates$Hotkey$onDetails = F4(
	function (model, onSchema, onTable, onColumn) {
		return A2(
			$elm$core$Maybe$map,
			A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Models$DetailsSidebarMsg, $author$project$Libs$Task$send),
			A2(
				$elm$core$Maybe$andThen,
				function (d) {
					var _v0 = d.o3;
					switch (_v0.$) {
						case 0:
							return $elm$core$Maybe$Nothing;
						case 1:
							var view = _v0.a;
							return onSchema(view);
						case 2:
							var view = _v0.a;
							return onTable(view);
						default:
							var view = _v0.a;
							return onColumn(view);
					}
				},
				model.lq));
	});
var $author$project$PagesComponents$Organization_$Project_$Updates$Hotkey$nextDetails = function (model) {
	return A4(
		$author$project$PagesComponents$Organization_$Project_$Updates$Hotkey$onDetails,
		model,
		function (view) {
			return A2($elm$core$Maybe$map, $author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$ShowSchema, view.aI.bO);
		},
		function (view) {
			return A2(
				$elm$core$Maybe$map,
				A2(
					$elm$core$Basics$composeR,
					function ($) {
						return $.H;
					},
					$author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$ShowTable),
				view.aq.bO);
		},
		function (view) {
			return A2(
				$elm$core$Maybe$map,
				function (col) {
					return $author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$ShowColumn(
						{bH: col.aA, aq: view.aq.f.H});
				},
				view.bH.bO);
		});
};
var $author$project$PagesComponents$Organization_$Project_$Models$NotesMsg$NOpen = function (a) {
	return {$: 0, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Updates$Hotkey$notesElement = function (model) {
	return A2(
		$elm$core$Maybe$withDefault,
		$author$project$Libs$Task$send(
			$author$project$PagesComponents$Organization_$Project_$Models$Toast(
				$author$project$Services$Toasts$info('Can\'t find an element to collapse :('))),
		A2(
			$author$project$Libs$Maybe$orElse,
			A2(
				$elm$core$Maybe$map,
				A2(
					$elm$core$Basics$composeR,
					$author$project$PagesComponents$Organization_$Project_$Models$Notes$fromTable,
					A2(
						$elm$core$Basics$composeR,
						$author$project$PagesComponents$Organization_$Project_$Models$NotesMsg$NOpen,
						A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Models$NotesMsg, $author$project$Libs$Task$send))),
				$author$project$PagesComponents$Organization_$Project_$Updates$Hotkey$currentTable(model)),
			A2(
				$elm$core$Maybe$map,
				A2(
					$elm$core$Basics$composeR,
					$author$project$PagesComponents$Organization_$Project_$Models$Notes$fromColumn,
					A2(
						$elm$core$Basics$composeR,
						$author$project$PagesComponents$Organization_$Project_$Models$NotesMsg$NOpen,
						A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Models$NotesMsg, $author$project$Libs$Task$send))),
				$author$project$PagesComponents$Organization_$Project_$Updates$Hotkey$currentColumn(model))));
};
var $author$project$PagesComponents$Organization_$Project_$Updates$Hotkey$prevDetails = function (model) {
	return A4(
		$author$project$PagesComponents$Organization_$Project_$Updates$Hotkey$onDetails,
		model,
		function (view) {
			return A2($elm$core$Maybe$map, $author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$ShowSchema, view.aI.bR);
		},
		function (view) {
			return A2(
				$elm$core$Maybe$map,
				A2(
					$elm$core$Basics$composeR,
					function ($) {
						return $.H;
					},
					$author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$ShowTable),
				view.aq.bR);
		},
		function (view) {
			return A2(
				$elm$core$Maybe$map,
				function (col) {
					return $author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$ShowColumn(
						{bH: col.aA, aq: view.aq.f.H});
				},
				view.bH.bR);
		});
};
var $author$project$Ports$ScrollTo = F2(
	function (a, b) {
		return {$: 4, a: a, b: b};
	});
var $author$project$Ports$scrollTo = F2(
	function (id, position) {
		return $author$project$Ports$messageToJs(
			A2($author$project$Ports$ScrollTo, id, position));
	});
var $author$project$PagesComponents$Organization_$Project_$Updates$Hotkey$showElement = function (model) {
	return A2(
		$elm$core$Maybe$withDefault,
		$author$project$Libs$Task$send(
			$author$project$PagesComponents$Organization_$Project_$Models$Toast(
				$author$project$Services$Toasts$info('Can\'t find an element to show :('))),
		A2(
			$author$project$Libs$Maybe$orElse,
			A2(
				$elm$core$Maybe$map,
				function (t) {
					return $author$project$Libs$Task$send(
						A2($author$project$PagesComponents$Organization_$Project_$Models$ShowTable, t, $elm$core$Maybe$Nothing));
				},
				$author$project$PagesComponents$Organization_$Project_$Updates$Hotkey$currentTable(model)),
			A2(
				$elm$core$Maybe$map,
				A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Models$ShowColumn, $author$project$Libs$Task$send),
				$author$project$PagesComponents$Organization_$Project_$Updates$Hotkey$currentColumn(model))));
};
var $author$project$PagesComponents$Organization_$Project_$Models$HideRelatedTables = function (a) {
	return {$: 15, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Updates$Hotkey$shrinkElement = function (model) {
	return A2(
		$elm$core$Maybe$withDefault,
		$author$project$Libs$Task$send(
			$author$project$PagesComponents$Organization_$Project_$Models$Toast(
				$author$project$Services$Toasts$info('Can\'t find an element to shrink :('))),
		A2(
			$elm$core$Maybe$map,
			A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Models$HideRelatedTables, $author$project$Libs$Task$send),
			$author$project$PagesComponents$Organization_$Project_$Updates$Hotkey$currentTable(model)));
};
var $author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$ShowList = {$: 3};
var $author$project$PagesComponents$Organization_$Project_$Updates$Hotkey$upDetails = function (model) {
	return A4(
		$author$project$PagesComponents$Organization_$Project_$Updates$Hotkey$onDetails,
		model,
		function (_v0) {
			return $elm$core$Maybe$Just($author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$ShowList);
		},
		function (view) {
			return $elm$core$Maybe$Just(
				$author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$ShowSchema(view.aq.f.aI));
		},
		function (view) {
			return $elm$core$Maybe$Just(
				$author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$ShowTable(view.aq.f.H));
		});
};
var $author$project$PagesComponents$Organization_$Project_$Updates$Hotkey$handleHotkey = F3(
	function (_v0, model, hotkey) {
		switch (hotkey) {
			case 'search-open':
				return _Utils_Tuple2(
					model,
					$author$project$Ports$focus($author$project$Conf$ids.fc));
			case 'search-up':
				return _Utils_Tuple2(
					A2(
						$author$project$Services$Lenses$mapNavbar,
						$author$project$Services$Lenses$mapSearch(
							$author$project$Services$Lenses$mapActive(
								function (a) {
									return a - 1;
								})),
						model),
					A2($author$project$Ports$scrollTo, $author$project$Conf$ids.fc + '-active-item', 'end'));
			case 'search-down':
				return _Utils_Tuple2(
					A2(
						$author$project$Services$Lenses$mapNavbar,
						$author$project$Services$Lenses$mapSearch(
							$author$project$Services$Lenses$mapActive(
								function (a) {
									return a + 1;
								})),
						model),
					A2($author$project$Ports$scrollTo, $author$project$Conf$ids.fc + '-active-item', 'end'));
			case 'search-confirm':
				return _Utils_Tuple2(
					model,
					$elm$core$Platform$Cmd$batch(
						_List_fromArray(
							[
								$author$project$Ports$mouseDown($author$project$Conf$ids.fc + '-active-item'),
								$author$project$Ports$blur($author$project$Conf$ids.fc)
							])));
			case 'notes':
				return _Utils_Tuple2(
					model,
					$author$project$PagesComponents$Organization_$Project_$Updates$Hotkey$notesElement(model));
			case 'new-memo':
				return _Utils_Tuple2(
					model,
					$author$project$PagesComponents$Organization_$Project_$Updates$Hotkey$createMemo(model));
			case 'collapse':
				return _Utils_Tuple2(
					model,
					$author$project$PagesComponents$Organization_$Project_$Updates$Hotkey$collapseElement(model));
			case 'expand':
				return _Utils_Tuple2(
					model,
					$author$project$PagesComponents$Organization_$Project_$Updates$Hotkey$expandElement(model));
			case 'shrink':
				return _Utils_Tuple2(
					model,
					$author$project$PagesComponents$Organization_$Project_$Updates$Hotkey$shrinkElement(model));
			case 'show':
				return _Utils_Tuple2(
					model,
					$author$project$PagesComponents$Organization_$Project_$Updates$Hotkey$showElement(model));
			case 'hide':
				return _Utils_Tuple2(
					model,
					$author$project$PagesComponents$Organization_$Project_$Updates$Hotkey$hideElement(model));
			case 'save':
				return model.Z.fa ? _Utils_Tuple2(
					model,
					$author$project$Libs$Task$send($author$project$PagesComponents$Organization_$Project_$Models$TriggerSaveProject)) : _Utils_Tuple2(
					model,
					$author$project$Libs$Task$send(
						$author$project$PagesComponents$Organization_$Project_$Models$Toast(
							$author$project$Services$Toasts$warning('Can\'t save in read-only mode'))));
			case 'move-up':
				return _Utils_Tuple2(
					model,
					A2(
						$elm$core$Maybe$withDefault,
						$elm$core$Platform$Cmd$none,
						A2(
							$author$project$Libs$Maybe$orElse,
							$author$project$PagesComponents$Organization_$Project_$Updates$Hotkey$upDetails(model),
							A2(
								$author$project$PagesComponents$Organization_$Project_$Updates$Hotkey$moveTables,
								{aY: 0, aZ: -10},
								model))));
			case 'move-right':
				return _Utils_Tuple2(
					model,
					A2(
						$elm$core$Maybe$withDefault,
						$elm$core$Platform$Cmd$none,
						A2(
							$author$project$Libs$Maybe$orElse,
							$author$project$PagesComponents$Organization_$Project_$Updates$Hotkey$nextDetails(model),
							A2(
								$author$project$PagesComponents$Organization_$Project_$Updates$Hotkey$moveTables,
								{aY: 10, aZ: 0},
								model))));
			case 'move-down':
				return _Utils_Tuple2(
					model,
					A2(
						$elm$core$Maybe$withDefault,
						$elm$core$Platform$Cmd$none,
						A2(
							$author$project$PagesComponents$Organization_$Project_$Updates$Hotkey$moveTables,
							{aY: 0, aZ: 10},
							model)));
			case 'move-left':
				return _Utils_Tuple2(
					model,
					A2(
						$elm$core$Maybe$withDefault,
						$elm$core$Platform$Cmd$none,
						A2(
							$author$project$Libs$Maybe$orElse,
							$author$project$PagesComponents$Organization_$Project_$Updates$Hotkey$prevDetails(model),
							A2(
								$author$project$PagesComponents$Organization_$Project_$Updates$Hotkey$moveTables,
								{aY: -10, aZ: 0},
								model))));
			case 'move-forward':
				return _Utils_Tuple2(
					model,
					A2($author$project$PagesComponents$Organization_$Project_$Updates$Hotkey$moveTablesOrder, 1, model));
			case 'move-backward':
				return _Utils_Tuple2(
					model,
					A2($author$project$PagesComponents$Organization_$Project_$Updates$Hotkey$moveTablesOrder, -1, model));
			case 'move-to-top':
				return _Utils_Tuple2(
					model,
					A2($author$project$PagesComponents$Organization_$Project_$Updates$Hotkey$moveTablesOrder, 1000, model));
			case 'move-to-back':
				return _Utils_Tuple2(
					model,
					A2($author$project$PagesComponents$Organization_$Project_$Updates$Hotkey$moveTablesOrder, -1000, model));
			case 'select-all':
				return _Utils_Tuple2(
					model,
					$author$project$Libs$Task$send($author$project$PagesComponents$Organization_$Project_$Models$SelectAllTables));
			case 'create-layout':
				return _Utils_Tuple2(
					model,
					$author$project$Libs$Task$send(
						$author$project$PagesComponents$Organization_$Project_$Models$NewLayoutMsg(
							$author$project$PagesComponents$Organization_$Project_$Views$Modals$NewLayout$Open($elm$core$Maybe$Nothing))));
			case 'create-virtual-relation':
				return _Utils_Tuple2(
					model,
					$author$project$Libs$Task$send(
						$author$project$PagesComponents$Organization_$Project_$Models$VirtualRelationMsg(
							A3(
								$author$project$Libs$Maybe$mapOrElse,
								function (_v2) {
									return $author$project$PagesComponents$Organization_$Project_$Models$VRCancel;
								},
								$author$project$PagesComponents$Organization_$Project_$Models$VRCreate(
									$author$project$PagesComponents$Organization_$Project_$Updates$Hotkey$currentColumn(model)),
								model.o4))));
			case 'find-path':
				return _Utils_Tuple2(
					model,
					$author$project$Libs$Task$send(
						$author$project$PagesComponents$Organization_$Project_$Models$FindPathMsg(
							A3(
								$author$project$Libs$Maybe$mapOrElse,
								function (_v3) {
									return $author$project$PagesComponents$Organization_$Project_$Models$FPClose;
								},
								A2($author$project$PagesComponents$Organization_$Project_$Models$FPOpen, model.l2, $elm$core$Maybe$Nothing),
								model.c8))));
			case 'reset-zoom':
				return _Utils_Tuple2(
					model,
					$author$project$Libs$Task$send(
						$author$project$PagesComponents$Organization_$Project_$Models$Zoom(
							1 - A3(
								$author$project$Libs$Maybe$mapOrElse,
								A2(
									$elm$core$Basics$composeR,
									$author$project$PagesComponents$Organization_$Project_$Models$Erd$currentLayout,
									A2(
										$elm$core$Basics$composeR,
										function ($) {
											return $.fJ;
										},
										function ($) {
											return $.hU;
										})),
								0,
								model.lE))));
			case 'fit-to-screen':
				return _Utils_Tuple2(
					model,
					$author$project$Libs$Task$send($author$project$PagesComponents$Organization_$Project_$Models$FitToScreen));
			case 'undo':
				return _Utils_Tuple2(
					model,
					$author$project$Libs$Task$send(
						$author$project$PagesComponents$Organization_$Project_$Models$Toast(
							$author$project$Services$Toasts$info('Undo action not handled yet'))));
			case 'redo':
				return _Utils_Tuple2(
					model,
					$author$project$Libs$Task$send(
						$author$project$PagesComponents$Organization_$Project_$Models$Toast(
							$author$project$Services$Toasts$info('Redo action not handled yet'))));
			case 'cancel':
				return _Utils_Tuple2(
					model,
					$author$project$PagesComponents$Organization_$Project_$Updates$Hotkey$cancelElement(model));
			case 'help':
				return _Utils_Tuple2(
					model,
					$author$project$Libs$Task$send(
						$author$project$PagesComponents$Organization_$Project_$Models$HelpMsg(
							A3(
								$author$project$Libs$Maybe$mapOrElse,
								function (_v4) {
									return $author$project$PagesComponents$Organization_$Project_$Models$HClose;
								},
								$author$project$PagesComponents$Organization_$Project_$Models$HOpen(''),
								model.lY))));
			default:
				return _Utils_Tuple2(
					model,
					$author$project$Libs$Task$send(
						$author$project$PagesComponents$Organization_$Project_$Models$Toast(
							$author$project$Services$Toasts$warning('Unhandled hotkey \'' + (hotkey + '\'')))));
		}
	});
var $author$project$PagesComponents$Organization_$Project_$Components$AmlSidebar$getOtherSourcesTableIds = F2(
	function (currentSourceId, erd) {
		if (currentSourceId.$ === 1) {
			return $elm$core$Set$empty;
		} else {
			var id = currentSourceId.a;
			return $elm$core$Set$fromList(
				A2(
					$elm$core$List$concatMap,
					A2(
						$elm$core$Basics$composeR,
						function ($) {
							return $.oM;
						},
						$elm$core$Dict$keys),
					A2(
						$author$project$Libs$List$filterNot,
						function (s) {
							return _Utils_eq(s.H, id);
						},
						A3(
							$author$project$Libs$Maybe$mapOrElse,
							function ($) {
								return $.hs;
							},
							_List_Nil,
							erd))));
		}
	});
var $author$project$Models$Project$SourceKind$isUser = function (kind) {
	if (kind.$ === 5) {
		return true;
	} else {
		return false;
	}
};
var $author$project$PagesComponents$Organization_$Project_$Components$AmlSidebar$init = F2(
	function (id, erd) {
		var selectedId = A2(
			$author$project$Libs$Maybe$orElse,
			A2(
				$elm$core$Maybe$map,
				function ($) {
					return $.H;
				},
				A2(
					$elm$core$Maybe$andThen,
					A2(
						$elm$core$Basics$composeR,
						function ($) {
							return $.hs;
						},
						$author$project$Libs$List$find(
							function (s) {
								return s.ip && $author$project$Models$Project$SourceKind$isUser(s.gi);
							})),
					erd)),
			id);
		return {
			lG: _List_Nil,
			H: $author$project$Conf$ids.ks,
			g_: A2($author$project$PagesComponents$Organization_$Project_$Components$AmlSidebar$getOtherSourcesTableIds, selectedId, erd),
			cy: selectedId
		};
	});
var $author$project$Track$jsonError = F2(
	function (kind, error) {
		return A3(
			$author$project$Track$createEvent,
			'editor_json_error',
			_List_fromArray(
				[
					_Utils_Tuple2(
					'kind',
					$elm$json$Json$Encode$string(kind)),
					_Utils_Tuple2(
					'message',
					$elm$json$Json$Encode$string(
						$elm$json$Json$Decode$errorToString(error)))
				]),
			$elm$core$Maybe$Nothing);
	});
var $author$project$Models$SourceInfo$jsonLocal = F3(
	function (now, sourceId, file) {
		return A7(
			$author$project$Models$SourceInfo$SourceInfo,
			sourceId,
			file.eS,
			A3($author$project$Models$Project$SourceKind$JsonLocalFile, file.eS, file.ox, file.mo),
			true,
			$elm$core$Maybe$Nothing,
			now,
			now);
	});
var $author$project$Libs$Bool$maybe = F2(
	function (predicate, a) {
		return predicate ? $elm$core$Maybe$Just(a) : $elm$core$Maybe$Nothing;
	});
var $author$project$Ports$ObserveSizes = function (a) {
	return {$: 21, a: a};
};
var $author$project$Ports$observeSizes = function (ids) {
	return $elm$core$List$isEmpty(ids) ? $elm$core$Platform$Cmd$none : $author$project$Ports$messageToJs(
		$author$project$Ports$ObserveSizes(ids));
};
var $author$project$Ports$observeLayout = function (layout) {
	return $author$project$Ports$observeSizes(
		_Utils_ap(
			A2(
				$elm$core$List$map,
				A2(
					$elm$core$Basics$composeR,
					function ($) {
						return $.H;
					},
					$author$project$Models$Project$TableId$toHtmlId),
				layout.oM),
			A2(
				$elm$core$List$map,
				A2(
					$elm$core$Basics$composeR,
					function ($) {
						return $.H;
					},
					$author$project$PagesComponents$Organization_$Project_$Models$MemoId$toHtmlId),
				layout.gw)));
};
var $author$project$Ports$observeSize = function (id) {
	return $author$project$Ports$observeSizes(
		_List_fromArray(
			[id]));
};
var $author$project$Services$Lenses$setCursorMode = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.k8;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{k8: value});
		}));
var $author$project$Models$SourceInfo$sqlLocal = F3(
	function (now, sourceId, file) {
		return A7(
			$author$project$Models$SourceInfo$SourceInfo,
			sourceId,
			file.eS,
			A3($author$project$Models$Project$SourceKind$SqlLocalFile, file.eS, file.ox, file.mo),
			true,
			$elm$core$Maybe$Nothing,
			now,
			now);
	});
var $author$project$Services$Lenses$setConf = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.Z;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{Z: value});
		}));
var $author$project$Services$Lenses$mapConf = A2(
	$author$project$Services$Lenses$map_,
	function ($) {
		return $.Z;
	},
	$author$project$Services$Lenses$setConf);
var $author$project$PagesComponents$Organization_$Project_$Models$Erd$mapCurrentLayout = F2(
	function (transform, erd) {
		return A3($author$project$Services$Lenses$mapLayoutsD, erd.id, transform, erd);
	});
var $author$project$Services$Lenses$mapErdMCmd = A2(
	$author$project$Services$Lenses$mapMCmd_,
	function ($) {
		return $.lE;
	},
	$author$project$Services$Lenses$setErd);
var $author$project$Libs$List$memberBy = F3(
	function (matcher, value, list) {
		return $author$project$Libs$Maybe$isJust(
			A3($author$project$Libs$List$findBy, matcher, value, list));
	});
var $author$project$Services$Lenses$setSize = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.ox;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{ox: value});
		}));
var $author$project$PagesComponents$Organization_$Project_$Updates$updateMemos = F3(
	function (zoom, changes, memos) {
		return A3(
			$elm$core$List$foldl,
			F2(
				function (c, mms) {
					return A2(
						$elm$core$List$map,
						function (memo) {
							return A3(
								$author$project$Libs$Bool$cond,
								_Utils_eq(
									c.H,
									$author$project$PagesComponents$Organization_$Project_$Models$MemoId$toHtmlId(memo.H)),
								A2(
									$author$project$Services$Lenses$setSize,
									A2($author$project$Models$Size$viewportToCanvas, zoom, c.ox),
									memo),
								memo);
						},
						mms);
				}),
			memos,
			changes);
	});
var $author$project$Models$Position$extractGrid = function (_v0) {
	var pos = _v0;
	return pos;
};
var $author$project$PagesComponents$Organization_$Project_$Updates$isSameTopRight = F2(
	function (a, b) {
		var _v0 = _Utils_Tuple2(
			$author$project$Models$Size$extractCanvas(a.ox),
			$author$project$Models$Size$extractCanvas(b.ox));
		var aSize = _v0.a;
		var bSize = _v0.b;
		var _v1 = _Utils_Tuple2(
			$author$project$Models$Position$extractGrid(a.e$),
			$author$project$Models$Position$extractGrid(b.e$));
		var aPos = _v1.a;
		var bPos = _v1.b;
		return _Utils_eq(aPos.ad, bPos.ad) && _Utils_eq(aPos.C + aSize.bB, bPos.C + bSize.bB);
	});
var $author$project$Conf$ui = {k_: 300, ns: 200, oJ: 24, oK: 45};
var $author$project$PagesComponents$Organization_$Project_$Updates$moveDownIfExists = F3(
	function (tables, size, position) {
		return A2(
			$elm$core$List$any,
			function (t) {
				return _Utils_eq(t.nU.e$, position) || A2(
					$author$project$PagesComponents$Organization_$Project_$Updates$isSameTopRight,
					t.nU,
					{e$: position, ox: size});
			},
			tables) ? A3(
			$author$project$PagesComponents$Organization_$Project_$Updates$moveDownIfExists,
			tables,
			size,
			A2(
				$author$project$Models$Position$moveGrid,
				{aY: 0, aZ: $author$project$Conf$ui.oK},
				position)) : position;
	});
var $author$project$Models$Area$zeroCanvas = A2($author$project$Models$Area$Canvas, $author$project$Models$Position$zeroCanvas, $author$project$Models$Size$zeroCanvas);
var $author$project$PagesComponents$Organization_$Project_$Updates$placeAtCenter = F2(
	function (erdViewport, newSize) {
		var _v0 = _Utils_Tuple2(
			$author$project$Models$Area$centerCanvas(erdViewport),
			$author$project$Models$Area$centerCanvas(
				A2($author$project$Services$Lenses$setSize, newSize, $author$project$Models$Area$zeroCanvas)));
		var canvasCenter = _v0.a;
		var tableCenter = _v0.b;
		return $author$project$Models$Position$onGrid(
			A2(
				$author$project$Models$Position$moveCanvas,
				A2($author$project$Models$Position$diffCanvas, tableCenter, $author$project$Models$Position$zeroCanvas),
				canvasCenter));
	});
var $author$project$PagesComponents$Organization_$Project_$Updates$computeInitialPosition = F5(
	function (tables, erdViewport, newSize, _v0, hint) {
		return A3(
			$author$project$Libs$Maybe$mapOrElse,
			function (h) {
				switch (h.$) {
					case 0:
						var position = h.a;
						return A3(
							$author$project$PagesComponents$Organization_$Project_$Updates$moveDownIfExists,
							tables,
							newSize,
							A2(
								$author$project$Models$Position$moveGrid,
								{
									aY: -($author$project$Models$Size$extractCanvas(newSize).bB + 50),
									aZ: 0
								},
								position));
					case 1:
						var position = h.a;
						var size = h.b;
						return A3(
							$author$project$PagesComponents$Organization_$Project_$Updates$moveDownIfExists,
							tables,
							newSize,
							A2(
								$author$project$Models$Position$moveGrid,
								{
									aY: $author$project$Models$Size$extractCanvas(size).bB + 50,
									aZ: 0
								},
								position));
					default:
						var position = h.a;
						return position;
				}
			},
			A2($author$project$PagesComponents$Organization_$Project_$Updates$placeAtCenter, erdViewport, newSize),
			hint);
	});
var $author$project$Models$Position$zeroGrid = $author$project$Libs$Models$Position$zero;
var $author$project$PagesComponents$Organization_$Project_$Updates$updateTable = F5(
	function (zoom, tables, erdViewport, table, change) {
		var newSize = A2($author$project$Models$Size$viewportToCanvas, zoom, change.ox);
		return (_Utils_eq(table.nU.ox, $author$project$Models$Size$zeroCanvas) && _Utils_eq(table.nU.e$, $author$project$Models$Position$zeroGrid)) ? A2(
			$author$project$Services$Lenses$mapProps,
			A2(
				$elm$core$Basics$composeR,
				$author$project$Services$Lenses$setSize(newSize),
				$author$project$Services$Lenses$setPosition(
					A5($author$project$PagesComponents$Organization_$Project_$Updates$computeInitialPosition, tables, erdViewport, newSize, change.ol, table.nU.hb))),
			table) : A2(
			$author$project$Services$Lenses$mapProps,
			$author$project$Services$Lenses$setSize(newSize),
			table);
	});
var $author$project$PagesComponents$Organization_$Project_$Updates$updateTables = F4(
	function (zoom, erdViewport, changes, tables) {
		return A3(
			$elm$core$List$foldl,
			F2(
				function (c, tbls) {
					return A2(
						$elm$core$List$map,
						function (tbl) {
							return A3(
								$author$project$Libs$Bool$cond,
								_Utils_eq(
									c.H,
									$author$project$Models$Project$TableId$toHtmlId(tbl.H)),
								A5($author$project$PagesComponents$Organization_$Project_$Updates$updateTable, zoom, tbls, erdViewport, tbl, c),
								tbl);
						},
						tbls);
				}),
			tables,
			changes);
	});
var $author$project$PagesComponents$Organization_$Project_$Models$Erd$viewportM = F2(
	function (erdElem, erd) {
		return A3(
			$author$project$Libs$Maybe$mapOrElse,
			A2(
				$elm$core$Basics$composeR,
				$author$project$PagesComponents$Organization_$Project_$Models$Erd$currentLayout,
				A2(
					$elm$core$Basics$composeR,
					function ($) {
						return $.fJ;
					},
					$author$project$Models$Project$CanvasProps$viewport(erdElem))),
			$author$project$Models$Area$zeroCanvas,
			erd);
	});
var $author$project$PagesComponents$Organization_$Project_$Updates$updateSizes = F3(
	function (now, changes, model) {
		var erdChanged = A3(
			$author$project$Libs$Maybe$mapOrElse,
			function (c) {
				return _Utils_update(
					model,
					{
						lF: {e$: c.e$, ox: c.ox}
					});
			},
			model,
			A3(
				$author$project$Libs$List$findBy,
				function ($) {
					return $.H;
				},
				'erd',
				changes));
		var erdViewport = A2($author$project$PagesComponents$Organization_$Project_$Models$Erd$viewportM, erdChanged.lF, erdChanged.lE);
		var newModel = A2(
			$author$project$Services$Lenses$mapErdM,
			function (erd) {
				return A2(
					$author$project$PagesComponents$Organization_$Project_$Models$Erd$mapCurrentLayout,
					function (l) {
						return A2(
							$author$project$Services$Lenses$mapTables,
							A3($author$project$PagesComponents$Organization_$Project_$Updates$updateTables, l.fJ.hU, erdViewport, changes),
							A2(
								$author$project$Services$Lenses$mapMemos,
								A2($author$project$PagesComponents$Organization_$Project_$Updates$updateMemos, l.fJ.hU, changes),
								l));
					},
					erd);
			},
			erdChanged);
		return (model.Z.fY && A3(
			$author$project$Libs$List$memberBy,
			function ($) {
				return $.H;
			},
			'erd',
			changes)) ? A2(
			$author$project$Services$Lenses$mapErdMCmd,
			function (e) {
				return ($elm$core$List$length(
					$author$project$PagesComponents$Organization_$Project_$Models$Erd$currentLayout(e).oM) > 0) ? A3($author$project$PagesComponents$Organization_$Project_$Updates$Canvas$fitCanvas, now, newModel.lF, e) : _Utils_Tuple2(e, $elm$core$Platform$Cmd$none);
			},
			A2(
				$author$project$Services$Lenses$mapConf,
				function (c) {
					return _Utils_update(
						c,
						{fY: false});
				},
				newModel)) : _Utils_Tuple2(newModel, $elm$core$Platform$Cmd$none);
	});
var $author$project$PagesComponents$Organization_$Project_$Updates$handleJsMessage = F4(
	function (now, currentLayout, msg, model) {
		switch (msg.$) {
			case 0:
				var sizes = msg.a;
				return A3($author$project$PagesComponents$Organization_$Project_$Updates$updateSizes, now, sizes, model);
			case 1:
				var res = msg.a;
				if (res.$ === 1) {
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{mt: true}),
						$elm$core$Platform$Cmd$none);
				} else {
					if (res.a.$ === 1) {
						var err = res.a.a;
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{mt: true}),
							$elm$core$Platform$Cmd$batch(
								_List_fromArray(
									[
										$author$project$Libs$Task$send(
										$author$project$PagesComponents$Organization_$Project_$Models$Toast(
											$author$project$Services$Toasts$error(
												'Unable to read project: ' + $author$project$Libs$Json$Decode$errorToHtml(err)))),
										$author$project$Ports$track(
										A2($author$project$Track$jsonError, 'decode-project', err))
									])));
					} else {
						var project = res.a.a;
						var erd = $author$project$PagesComponents$Organization_$Project_$Models$Erd$create(
							A3(
								$author$project$Libs$Maybe$mapOrElse,
								function (l) {
									return _Utils_update(
										project,
										{fw: l});
								},
								project,
								A2(
									$author$project$Libs$Maybe$filter,
									function (l) {
										return A2($elm$core$Dict$member, l, project.i$);
									},
									currentLayout)));
						var amlSidebar = A2(
							$author$project$Libs$Maybe$orElse,
							A2(
								$author$project$Libs$Bool$maybe,
								model.Z.fv && A2(
									$elm$core$List$all,
									function (s) {
										return _Utils_eq(s.gi, $author$project$Models$Project$SourceKind$AmlEditor);
									},
									project.hs),
								A2(
									$author$project$PagesComponents$Organization_$Project_$Components$AmlSidebar$init,
									$elm$core$Maybe$Nothing,
									$elm$core$Maybe$Just(erd))),
							model.kr);
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{
									kr: amlSidebar,
									ls: false,
									lE: $elm$core$Maybe$Just(erd),
									mt: true
								}),
							$elm$core$Platform$Cmd$batch(
								_Utils_ap(
									_List_fromArray(
										[
											$author$project$Ports$observeSize($author$project$Conf$ids.lE),
											$author$project$Ports$observeLayout(
											$author$project$PagesComponents$Organization_$Project_$Models$Erd$currentLayout(erd)),
											$author$project$Ports$setMeta(
											{
												kM: $elm$core$Maybe$Nothing,
												kQ: $elm$core$Maybe$Nothing,
												bf: $elm$core$Maybe$Nothing,
												l4: $elm$core$Maybe$Nothing,
												a4: $elm$core$Maybe$Just(
													$author$project$PagesComponents$Organization_$Project_$Views$title(
														$elm$core$Maybe$Just(erd)))
											}),
											$author$project$Ports$projectDirty(false)
										]),
									A3(
										$author$project$Libs$Bool$cond,
										_Utils_eq(model.fa, $elm$core$Maybe$Nothing),
										_List_Nil,
										_List_fromArray(
											[
												$author$project$Libs$Task$send(
												$author$project$PagesComponents$Organization_$Project_$Models$ModalClose(
													$author$project$PagesComponents$Organization_$Project_$Models$ProjectSaveMsg($author$project$PagesComponents$Organization_$Project_$Components$ProjectSaveDialog$Close))),
												$author$project$Ports$confettiPride
											])))));
					}
				}
			case 2:
				return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
			case 3:
				var kind = msg.a;
				var file = msg.b;
				var content = msg.c;
				return _Utils_eq(kind, $author$project$Services$SqlSource$kind) ? _Utils_Tuple2(
					model,
					A2(
						$elm$random$Random$generate,
						function (sourceId) {
							return $author$project$PagesComponents$Organization_$Project_$Models$ProjectSettingsMsg(
								$author$project$PagesComponents$Organization_$Project_$Models$PSSourceUpdate(
									$author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$SqlSourceMsg(
										A2(
											$author$project$Services$SqlSource$GotFile,
											A3($author$project$Models$SourceInfo$sqlLocal, now, sourceId, file),
											content))));
						},
						$author$project$Models$Project$SourceId$generator)) : (_Utils_eq(kind, $author$project$Services$JsonSource$kind) ? _Utils_Tuple2(
					model,
					A2(
						$elm$random$Random$generate,
						function (sourceId) {
							return $author$project$PagesComponents$Organization_$Project_$Models$ProjectSettingsMsg(
								$author$project$PagesComponents$Organization_$Project_$Models$PSSourceUpdate(
									$author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$JsonSourceMsg(
										A2(
											$author$project$Services$JsonSource$GotFile,
											A3($author$project$Models$SourceInfo$jsonLocal, now, sourceId, file),
											content))));
						},
						$author$project$Models$Project$SourceId$generator)) : _Utils_Tuple2(
					model,
					$author$project$Libs$Task$send(
						$author$project$PagesComponents$Organization_$Project_$Models$Toast(
							$author$project$Services$Toasts$error('Unhandled local file kind \'' + (kind + '\''))))));
			case 4:
				var source = msg.a;
				var stats = msg.b;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{
							oL: A3(
								$elm$core$Dict$update,
								stats.H,
								A2(
									$elm$core$Basics$composeR,
									$elm$core$Maybe$withDefault($elm$core$Dict$empty),
									A2(
										$elm$core$Basics$composeR,
										A2(
											$elm$core$Dict$insert,
											$author$project$Models$Project$SourceId$toString(source),
											stats),
										$elm$core$Maybe$Just)),
								model.oL)
						}),
					$elm$core$Platform$Cmd$none);
			case 5:
				var source = msg.a;
				var stats = msg.b;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{
							k$: A3(
								$elm$core$Dict$update,
								stats.H,
								A2(
									$elm$core$Basics$composeR,
									$elm$core$Maybe$withDefault($elm$core$Dict$empty),
									A2(
										$elm$core$Basics$composeR,
										A2(
											$elm$core$Dict$insert,
											$author$project$Models$Project$SourceId$toString(source),
											stats),
										$elm$core$Maybe$Just)),
								model.k$)
						}),
					$elm$core$Platform$Cmd$none);
			case 6:
				var hotkey = msg.a;
				return A3($author$project$PagesComponents$Organization_$Project_$Updates$Hotkey$handleHotkey, now, model, hotkey);
			case 7:
				var key = msg.a;
				var start = msg.b;
				return ((key === 'Space') && model.Z.jb) ? (start ? _Utils_Tuple2(
					A2($author$project$Services$Lenses$setCursorMode, 0, model),
					$elm$core$Platform$Cmd$none) : _Utils_Tuple2(
					A2($author$project$Services$Lenses$setCursorMode, 1, model),
					$elm$core$Platform$Cmd$none)) : _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
			case 8:
				var level = msg.a;
				var message = msg.b;
				return _Utils_Tuple2(
					model,
					$author$project$Libs$Task$send(
						$author$project$PagesComponents$Organization_$Project_$Models$Toast(
							A2($author$project$Services$Toasts$create, level, message))));
			case 9:
				var id = msg.a;
				var hint = msg.b;
				return _Utils_Tuple2(
					model,
					$author$project$Libs$Task$send(
						A2(
							$author$project$PagesComponents$Organization_$Project_$Models$ShowTable,
							id,
							A2($elm$core$Maybe$map, $author$project$PagesComponents$Organization_$Project_$Models$PositionHint$PlaceAt, hint))));
			case 10:
				var id = msg.a;
				return _Utils_Tuple2(
					model,
					$author$project$Libs$Task$send(
						$author$project$PagesComponents$Organization_$Project_$Models$HideTable(id)));
			case 11:
				var id = msg.a;
				return _Utils_Tuple2(
					model,
					$author$project$Libs$Task$send(
						$author$project$PagesComponents$Organization_$Project_$Models$ToggleColumns(id)));
			case 12:
				var id = msg.a;
				var pos = msg.b;
				return _Utils_Tuple2(
					model,
					$author$project$Libs$Task$send(
						A2($author$project$PagesComponents$Organization_$Project_$Models$TablePosition, id, pos)));
			case 13:
				var id = msg.a;
				var delta = msg.b;
				return _Utils_Tuple2(
					model,
					$author$project$Libs$Task$send(
						A2($author$project$PagesComponents$Organization_$Project_$Models$TableMove, id, delta)));
			case 14:
				var id = msg.a;
				return _Utils_Tuple2(
					model,
					$author$project$Libs$Task$send(
						A2($author$project$PagesComponents$Organization_$Project_$Models$SelectTable, id, false)));
			case 15:
				var id = msg.a;
				var color = msg.b;
				return _Utils_Tuple2(
					model,
					$author$project$Libs$Task$send(
						A2($author$project$PagesComponents$Organization_$Project_$Models$TableColor, id, color)));
			case 16:
				var ref = msg.a;
				return _Utils_Tuple2(
					model,
					$author$project$Libs$Task$send(
						$author$project$PagesComponents$Organization_$Project_$Models$ShowColumn(ref)));
			case 17:
				var ref = msg.a;
				return _Utils_Tuple2(
					model,
					$author$project$Libs$Task$send(
						$author$project$PagesComponents$Organization_$Project_$Models$HideColumn(ref)));
			case 18:
				var ref = msg.a;
				var index = msg.b;
				return _Utils_Tuple2(
					model,
					$author$project$Libs$Task$send(
						A2($author$project$PagesComponents$Organization_$Project_$Models$MoveColumn, ref, index)));
			case 19:
				return _Utils_Tuple2(
					model,
					$author$project$Libs$Task$send($author$project$PagesComponents$Organization_$Project_$Models$FitToScreen));
			default:
				var json = msg.a;
				var err = msg.b;
				return _Utils_Tuple2(
					model,
					$elm$core$Platform$Cmd$batch(
						_List_fromArray(
							[
								$author$project$Libs$Task$send(
								$author$project$PagesComponents$Organization_$Project_$Models$Toast(
									$author$project$Services$Toasts$error(
										'Unable to decode JavaScript message: ' + ($elm$json$Json$Decode$errorToString(err) + (' in ' + A2($elm$json$Json$Encode$encode, 0, json)))))),
								$author$project$Ports$track(
								A2($author$project$Track$jsonError, 'js_message', err))
							])));
		}
	});
var $author$project$Track$layoutDetails = function (layout) {
	return _List_fromArray(
		[
			_Utils_Tuple2(
			'nb_table',
			$elm$json$Json$Encode$int(
				$elm$core$List$length(layout.oM))),
			_Utils_Tuple2(
			'nb_memos',
			$elm$json$Json$Encode$int(
				$elm$core$List$length(layout.gw)))
		]);
};
var $author$project$Track$layoutDeleted = F2(
	function (project, layout) {
		return A3(
			$author$project$Track$createEvent,
			'editor_layout_deleted',
			$author$project$Track$layoutDetails(layout),
			$elm$core$Maybe$Just(project));
	});
var $author$project$Services$Lenses$mapLayouts = A2(
	$author$project$Services$Lenses$map_,
	function ($) {
		return $.i$;
	},
	$author$project$Services$Lenses$setLayouts);
var $author$project$PagesComponents$Organization_$Project_$Updates$Layout$deleteLayout = F2(
	function (name, erd) {
		return _Utils_eq(name, erd.id) ? _Utils_Tuple2(
			erd,
			$author$project$Libs$Task$send(
				$author$project$PagesComponents$Organization_$Project_$Models$Toast(
					$author$project$Services$Toasts$warning('Can\'t delete current layout (' + (name + ')'))))) : A2(
			$elm$core$Maybe$withDefault,
			_Utils_Tuple2(
				erd,
				$author$project$Libs$Task$send(
					$author$project$PagesComponents$Organization_$Project_$Models$Toast(
						$author$project$Services$Toasts$warning('Can\'t find layout \'' + (name + '\' to delete'))))),
			A2(
				$elm$core$Maybe$map,
				function (layout) {
					return _Utils_Tuple2(
						A2(
							$author$project$Services$Lenses$mapLayouts,
							$elm$core$Dict$remove(name),
							erd),
						$author$project$Ports$track(
							A2($author$project$Track$layoutDeleted, erd.nN, layout)));
				},
				A2($elm$core$Dict$get, name, erd.i$)));
	});
var $author$project$Track$layoutLoaded = F2(
	function (project, layout) {
		return A3(
			$author$project$Track$createEvent,
			'editor_layout_loaded',
			$author$project$Track$layoutDetails(layout),
			$elm$core$Maybe$Just(project));
	});
var $author$project$Services$Lenses$setCurrentLayout = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.id;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{id: value});
		}));
var $author$project$PagesComponents$Organization_$Project_$Updates$Layout$loadLayout = F2(
	function (name, erd) {
		return A3(
			$author$project$Libs$Maybe$mapOrElse,
			function (layout) {
				return _Utils_Tuple2(
					A2($author$project$Services$Lenses$setCurrentLayout, name, erd),
					$elm$core$Platform$Cmd$batch(
						_List_fromArray(
							[
								$author$project$Ports$observeLayout(layout),
								$author$project$Ports$track(
								A2($author$project$Track$layoutLoaded, erd.nN, layout))
							])));
			},
			_Utils_Tuple2(erd, $elm$core$Platform$Cmd$none),
			A2($elm$core$Dict$get, name, erd.i$));
	});
var $author$project$PagesComponents$Organization_$Project_$Updates$Layout$handleLayout = F2(
	function (msg, model) {
		if (!msg.$) {
			var name = msg.a;
			return $author$project$PagesComponents$Organization_$Project_$Updates$Utils$setDirtyCmd(
				A2(
					$author$project$Services$Lenses$mapErdMCmd,
					$author$project$PagesComponents$Organization_$Project_$Updates$Layout$loadLayout(name),
					model));
		} else {
			var name = msg.a;
			return $author$project$PagesComponents$Organization_$Project_$Updates$Utils$setDirtyCmd(
				A2(
					$author$project$Services$Lenses$mapErdMCmd,
					$author$project$PagesComponents$Organization_$Project_$Updates$Layout$deleteLayout(name),
					model));
		}
	});
var $author$project$PagesComponents$Organization_$Project_$Models$Erd$canCreateMemo = function (erd) {
	return true;
};
var $author$project$PagesComponents$Organization_$Project_$Models$ErdLayout$createMemo = F2(
	function (layout, position) {
		var id = A2(
			$elm$core$Maybe$withDefault,
			0,
			$elm$core$List$maximum(
				A2(
					$elm$core$List$map,
					function ($) {
						return $.H;
					},
					layout.gw))) + 1;
		return {
			A: $elm$core$Maybe$Nothing,
			cX: '',
			H: id,
			e$: $author$project$Models$Position$onGrid(
				A2(
					$author$project$Models$Position$moveCanvas,
					{aY: -75, aZ: -75},
					position)),
			ox: $author$project$Models$Size$canvas(
				A2($author$project$Libs$Models$Size$Size, 150, 150))
		};
	});
var $elm$core$Task$onError = _Scheduler_onError;
var $elm$core$Task$attempt = F2(
	function (resultToMessage, task) {
		return $elm$core$Task$command(
			A2(
				$elm$core$Task$onError,
				A2(
					$elm$core$Basics$composeL,
					A2($elm$core$Basics$composeL, $elm$core$Task$succeed, resultToMessage),
					$elm$core$Result$Err),
				A2(
					$elm$core$Task$andThen,
					A2(
						$elm$core$Basics$composeL,
						A2($elm$core$Basics$composeL, $elm$core$Task$succeed, resultToMessage),
						$elm$core$Result$Ok),
					task)));
	});
var $elm$browser$Browser$Dom$focus = _Browser_call('focus');
var $author$project$Services$Lenses$setEditMemo = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.lw;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{lw: value});
		}));
var $author$project$PagesComponents$Organization_$Project_$Models$MemoId$toInputId = function (id) {
	return $author$project$PagesComponents$Organization_$Project_$Models$MemoId$htmlIdPrefix + ($elm$core$String$fromInt(id) + '-input');
};
var $author$project$PagesComponents$Organization_$Project_$Updates$Memo$editMemo = F3(
	function (createMode, memo, model) {
		return _Utils_Tuple2(
			A2(
				$author$project$Services$Lenses$setEditMemo,
				$elm$core$Maybe$Just(
					{cX: memo.cX, k6: createMode, H: memo.H}),
				model),
			A2(
				$elm$core$Task$attempt,
				function (_v0) {
					return $author$project$PagesComponents$Organization_$Project_$Models$Noop('focus-memo-input');
				},
				$elm$browser$Browser$Dom$focus(
					$author$project$PagesComponents$Organization_$Project_$Models$MemoId$toInputId(memo.H))));
	});
var $author$project$PagesComponents$Organization_$Project_$Models$Erd$getOrganization = F2(
	function (urlOrganization, erd) {
		return A2(
			$author$project$PagesComponents$Organization_$Project_$Models$Erd$getOrganizationM,
			urlOrganization,
			$elm$core$Maybe$Just(erd));
	});
var $author$project$Libs$String$inflect = F4(
	function (none, one, many, count) {
		return (!count) ? none : ((count === 1) ? one : many);
	});
var $author$project$Libs$String$plural = function (word) {
	return (A2($elm$core$String$endsWith, 'y', word) && (!(A2($elm$core$String$endsWith, 'ay', word) || (A2($elm$core$String$endsWith, 'ey', word) || (A2($elm$core$String$endsWith, 'oy', word) || A2($elm$core$String$endsWith, 'uy', word)))))) ? (A2($elm$core$String$dropRight, 1, word) + 'ies') : ((A2($elm$core$String$endsWith, 's', word) || (A2($elm$core$String$endsWith, 'x', word) || (A2($elm$core$String$endsWith, 'z', word) || (A2($elm$core$String$endsWith, 'sh', word) || A2($elm$core$String$endsWith, 'ch', word))))) ? (word + 'es') : (word + 's'));
};
var $author$project$Libs$String$pluralize = F2(
	function (word, count) {
		return A4(
			$author$project$Libs$String$inflect,
			'0 ' + word,
			'1 ' + word,
			$elm$core$String$fromInt(count) + (' ' + $author$project$Libs$String$plural(word)),
			count);
	});
var $author$project$Components$Slices$ProPlan$memosModalBody = F3(
	function (organization, close, titleId) {
		var limit = A2($elm$core$Maybe$withDefault, $author$project$Conf$features.gw.lS, organization.jv.gw);
		var color = $author$project$Libs$Tailwind$amber;
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('max-w-2xl')
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$author$project$Libs$Html$Attributes$css(
							_List_fromArray(
								[
									'px-6 pt-6',
									$author$project$Libs$Tailwind$sm(
									_List_fromArray(
										['flex items-start']))
								]))
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$author$project$Libs$Html$Attributes$css(
									_List_fromArray(
										[
											$author$project$Libs$Tailwind$bg_100(color),
											'mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full',
											$author$project$Libs$Tailwind$sm(
											_List_fromArray(
												['mx-0 h-10 w-10']))
										]))
								]),
							_List_fromArray(
								[
									A2(
									$author$project$Components$Atoms$Icon$outline,
									146,
									$author$project$Libs$Tailwind$text_600(color))
								])),
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$author$project$Libs$Html$Attributes$css(
									_List_fromArray(
										[
											'mt-3 text-center',
											$author$project$Libs$Tailwind$sm(
											_List_fromArray(
												['mt-0 ml-4 text-left']))
										]))
								]),
							_List_fromArray(
								[
									A2(
									$elm$html$Html$h3,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$id(titleId),
											$elm$html$Html$Attributes$class('text-lg leading-6 font-medium text-gray-900')
										]),
									_List_fromArray(
										[
											$elm$html$Html$text('Layout memos')
										])),
									A2(
									$elm$html$Html$div,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$class('mt-3')
										]),
									_List_fromArray(
										[
											A2(
											$elm$html$Html$p,
											_List_fromArray(
												[
													$elm$html$Html$Attributes$class('text-sm text-gray-500')
												]),
											_List_fromArray(
												[
													$author$project$Libs$Html$bText(
													'You just hit a plan limit, you have only ' + (A2($author$project$Libs$String$pluralize, 'memo', limit) + ' per layout!'))
												])),
											A2(
											$elm$html$Html$p,
											_List_fromArray(
												[
													$elm$html$Html$Attributes$class('mt-2 text-sm text-gray-500')
												]),
											_List_fromArray(
												[
													$elm$html$Html$text('I\'m a huge fan of memos and it seems you too. They are awesome for documentation, quick notes or even branding as you can write any markdown, including links and images.')
												])),
											A2(
											$elm$html$Html$p,
											_List_fromArray(
												[
													$elm$html$Html$Attributes$class('text-sm text-gray-500')
												]),
											_List_fromArray(
												[
													$elm$html$Html$text('We see this as a long term feature to document database schema so it\'s reserved for pro accounts. '),
													$author$project$Libs$Html$bText('Consider subscribing'),
													$elm$html$Html$text(' or '),
													A2(
													$elm$html$Html$a,
													_List_fromArray(
														[
															$elm$html$Html$Attributes$href('mailto:' + $author$project$Conf$constants.kB),
															$elm$html$Html$Attributes$target('_blank'),
															$elm$html$Html$Attributes$rel('noopener'),
															$elm$html$Html$Attributes$class('link')
														]),
													_List_fromArray(
														[
															$elm$html$Html$text('reach at us')
														])),
													$elm$html$Html$text(' to contribute improving Azimutt.')
												]))
										]))
								]))
						])),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('px-6 py-3 mt-6 flex items-center flex-row-reverse bg-gray-50 rounded-b-lg')
						]),
					_List_fromArray(
						[
							A3(
							$author$project$Components$Atoms$Link$primary3,
							color,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$href(
									A2($author$project$Services$Backend$organizationBillingUrl, organization.H, $author$project$Conf$features.gw.eS)),
									$elm$html$Html$Attributes$target('_blank'),
									$elm$html$Html$Attributes$rel('noopener'),
									$author$project$Libs$Html$Attributes$css(
									_List_fromArray(
										[
											'w-full text-base',
											$author$project$Libs$Tailwind$sm(
											_List_fromArray(
												['ml-3 w-auto text-sm']))
										]))
								]),
							_List_fromArray(
								[
									A2($author$project$Components$Atoms$Icon$solid, 204, 'mr-1'),
									$elm$html$Html$text('Upgrade plan')
								])),
							A3(
							$author$project$Components$Atoms$Button$white3,
							$author$project$Libs$Tailwind$gray,
							_List_fromArray(
								[
									$elm$html$Html$Events$onClick(close),
									$author$project$Libs$Html$Attributes$css(
									_List_fromArray(
										[
											'mt-3 w-full text-base',
											$author$project$Libs$Tailwind$sm(
											_List_fromArray(
												['mt-0 w-auto text-sm']))
										]))
								]),
							_List_fromArray(
								[
									$elm$html$Html$text('Cancel')
								]))
						]))
				]));
	});
var $author$project$Ports$observeMemoSize = function (id) {
	return $author$project$Ports$observeSizes(
		_List_fromArray(
			[
				$author$project$PagesComponents$Organization_$Project_$Models$MemoId$toHtmlId(id)
			]));
};
var $author$project$Track$proPlanLimit = F2(
	function (feature, erd) {
		return A3(
			$author$project$Track$createEvent,
			'pro_plan_limit',
			_List_fromArray(
				[
					_Utils_Tuple2(
					'feature',
					$elm$json$Json$Encode$string(feature))
				]),
			A2(
				$elm$core$Maybe$map,
				function ($) {
					return $.nN;
				},
				erd));
	});
var $author$project$PagesComponents$Organization_$Project_$Updates$Memo$createMemo = F4(
	function (now, position, erd, model) {
		return $author$project$PagesComponents$Organization_$Project_$Models$Erd$canCreateMemo(model.lE) ? function (memo) {
			return A2(
				$elm$core$Tuple$mapSecond,
				function (cmd) {
					return $elm$core$Platform$Cmd$batch(
						_List_fromArray(
							[
								cmd,
								$author$project$Ports$observeMemoSize(memo.H)
							]));
				},
				A3(
					$author$project$PagesComponents$Organization_$Project_$Updates$Memo$editMemo,
					true,
					memo,
					A2(
						$author$project$Services$Lenses$mapErdM,
						A2(
							$author$project$PagesComponents$Organization_$Project_$Models$Erd$mapCurrentLayoutWithTime,
							now,
							$author$project$Services$Lenses$mapMemos(
								$elm$core$List$append(
									_List_fromArray(
										[memo])))),
						model)));
		}(
			A2(
				$author$project$PagesComponents$Organization_$Project_$Models$ErdLayout$createMemo,
				$author$project$PagesComponents$Organization_$Project_$Models$Erd$currentLayout(erd),
				position)) : _Utils_Tuple2(
			model,
			$elm$core$Platform$Cmd$batch(
				_List_fromArray(
					[
						$author$project$Libs$Task$send(
						$author$project$PagesComponents$Organization_$Project_$Models$CustomModalOpen(
							$author$project$Components$Slices$ProPlan$memosModalBody(
								A2($author$project$PagesComponents$Organization_$Project_$Models$Erd$getOrganization, $elm$core$Maybe$Nothing, erd)))),
						$author$project$Ports$track(
						A2(
							$author$project$Track$proPlanLimit,
							$author$project$Conf$features.gw.eS,
							$elm$core$Maybe$Just(erd)))
					])));
	});
var $author$project$Track$memoDeleted = function (erd) {
	return A3(
		$author$project$Track$createEvent,
		'editor_memo_deleted',
		_List_Nil,
		A2(
			$elm$core$Maybe$map,
			function ($) {
				return $.nN;
			},
			erd));
};
var $author$project$PagesComponents$Organization_$Project_$Updates$Memo$deleteMemo = F4(
	function (now, id, createMode, model) {
		return function (m) {
			return createMode ? _Utils_Tuple2(m, $elm$core$Platform$Cmd$none) : $author$project$PagesComponents$Organization_$Project_$Updates$Utils$setDirtyCmd(
				_Utils_Tuple2(
					m,
					$author$project$Ports$track(
						$author$project$Track$memoDeleted(model.lE))));
		}(
			A2(
				$author$project$Services$Lenses$mapErdM,
				A2(
					$author$project$PagesComponents$Organization_$Project_$Models$Erd$mapCurrentLayoutWithTime,
					now,
					$author$project$Services$Lenses$mapMemos(
						$elm$core$List$filter(
							function (m) {
								return !_Utils_eq(m.H, id);
							}))),
				model));
	});
var $author$project$Services$Lenses$mapEditMemoM = A2(
	$author$project$Services$Lenses$mapM_,
	function ($) {
		return $.lw;
	},
	$author$project$Services$Lenses$setEditMemo);
var $author$project$Services$Lenses$mapL_ = F6(
	function (get, update, getKey, key, transform, item) {
		return A2(
			update,
			A2(
				$elm$core$List$map,
				function (v) {
					return _Utils_eq(
						getKey(v),
						key) ? transform(v) : v;
				},
				get(item)),
			item);
	});
var $author$project$Services$Lenses$mapMemosL = A2(
	$author$project$Services$Lenses$mapL_,
	function ($) {
		return $.gw;
	},
	$author$project$Services$Lenses$setMemos);
var $author$project$Track$memoSaved = F3(
	function (createMode, content, erd) {
		return A3(
			$author$project$Track$createEvent,
			A3($author$project$Libs$Bool$cond, createMode, 'editor_memo_created', 'editor_memo_updated'),
			_List_fromArray(
				[
					_Utils_Tuple2(
					'length',
					$elm$json$Json$Encode$int(
						$elm$core$String$length(content)))
				]),
			A2(
				$elm$core$Maybe$map,
				function ($) {
					return $.nN;
				},
				erd));
	});
var $author$project$PagesComponents$Organization_$Project_$Updates$Memo$saveMemo = F3(
	function (now, edit, model) {
		var memoContent = A3(
			$author$project$Libs$Maybe$mapOrElse,
			function ($) {
				return $.cX;
			},
			'',
			A2(
				$elm$core$Maybe$andThen,
				function (erd) {
					return A3(
						$author$project$Libs$List$findBy,
						function ($) {
							return $.H;
						},
						edit.H,
						$author$project$PagesComponents$Organization_$Project_$Models$Erd$currentLayout(erd).gw);
				},
				model.lE));
		return ($elm$core$String$trim(edit.cX) === '') ? A4(
			$author$project$PagesComponents$Organization_$Project_$Updates$Memo$deleteMemo,
			now,
			edit.H,
			edit.k6,
			A2($author$project$Services$Lenses$setEditMemo, $elm$core$Maybe$Nothing, model)) : (_Utils_eq(edit.cX, memoContent) ? _Utils_Tuple2(
			A2($author$project$Services$Lenses$setEditMemo, $elm$core$Maybe$Nothing, model),
			$elm$core$Platform$Cmd$none) : $author$project$PagesComponents$Organization_$Project_$Updates$Utils$setDirtyCmd(
			_Utils_Tuple2(
				A2(
					$author$project$Services$Lenses$mapErdM,
					A2(
						$author$project$PagesComponents$Organization_$Project_$Models$Erd$mapCurrentLayoutWithTime,
						now,
						A3(
							$author$project$Services$Lenses$mapMemosL,
							function ($) {
								return $.H;
							},
							edit.H,
							$author$project$Services$Lenses$setContent(edit.cX))),
					A2($author$project$Services$Lenses$setEditMemo, $elm$core$Maybe$Nothing, model)),
				$author$project$Ports$track(
					A3($author$project$Track$memoSaved, edit.k6, edit.cX, model.lE)))));
	});
var $author$project$Services$Lenses$setColor = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.A;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{A: value});
		}));
var $author$project$PagesComponents$Organization_$Project_$Updates$Memo$handleMemo = F3(
	function (now, msg, model) {
		switch (msg.$) {
			case 0:
				var pos = msg.a;
				return A3(
					$author$project$Libs$Maybe$mapOrElse,
					function (erd) {
						return A4($author$project$PagesComponents$Organization_$Project_$Updates$Memo$createMemo, now, pos, erd, model);
					},
					_Utils_Tuple2(model, $elm$core$Platform$Cmd$none),
					model.lE);
			case 1:
				var memo = msg.a;
				return A3($author$project$PagesComponents$Organization_$Project_$Updates$Memo$editMemo, false, memo, model);
			case 2:
				var content = msg.a;
				return _Utils_Tuple2(
					A2(
						$author$project$Services$Lenses$mapEditMemoM,
						$author$project$Services$Lenses$setContent(content),
						model),
					$elm$core$Platform$Cmd$none);
			case 3:
				return A2(
					$elm$core$Maybe$withDefault,
					_Utils_Tuple2(
						model,
						$author$project$Libs$Task$send(
							$author$project$PagesComponents$Organization_$Project_$Models$Toast(
								A2($author$project$Services$Toasts$create, 'warning', 'No memo to save')))),
					A2(
						$elm$core$Maybe$map,
						function (memo) {
							return A3($author$project$PagesComponents$Organization_$Project_$Updates$Memo$saveMemo, now, memo, model);
						},
						model.lw));
			case 4:
				var id = msg.a;
				var color = msg.b;
				return $author$project$PagesComponents$Organization_$Project_$Updates$Utils$setDirty(
					A2(
						$author$project$Services$Lenses$mapErdM,
						A2(
							$author$project$PagesComponents$Organization_$Project_$Models$Erd$mapCurrentLayoutWithTime,
							now,
							A3(
								$author$project$Services$Lenses$mapMemosL,
								function ($) {
									return $.H;
								},
								id,
								$author$project$Services$Lenses$setColor(color))),
						model));
			default:
				var id = msg.a;
				return A4($author$project$PagesComponents$Organization_$Project_$Updates$Memo$deleteMemo, now, id, false, model);
		}
	});
var $author$project$Models$Project$ColumnPath$get = F2(
	function (path, dict) {
		return A2(
			$elm$core$Dict$get,
			$author$project$Models$Project$ColumnPath$toString(path),
			dict);
	});
var $author$project$PagesComponents$Organization_$Project_$Models$ErdNotes$get = F2(
	function (ref, notes) {
		switch (ref.$) {
			case 2:
				return $elm$core$Maybe$Nothing;
			case 0:
				var table = ref.a;
				return A2(
					$elm$core$Maybe$andThen,
					function ($) {
						return $.aq;
					},
					A2($elm$core$Dict$get, table, notes));
			default:
				var table = ref.a.aq;
				var column = ref.a.bH;
				return A2(
					$elm$core$Maybe$andThen,
					A2(
						$elm$core$Basics$composeR,
						function ($) {
							return $.M;
						},
						$author$project$Models$Project$ColumnPath$get(column)),
					A2($elm$core$Dict$get, table, notes));
		}
	});
var $author$project$Services$Lenses$setEditNotes = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $._;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{_: value});
		}));
var $author$project$Services$Lenses$mapEditNotesM = A2(
	$author$project$Services$Lenses$mapM_,
	function ($) {
		return $._;
	},
	$author$project$Services$Lenses$setEditNotes);
var $author$project$Services$Lenses$setNotes = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.bP;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{bP: value});
		}));
var $author$project$Services$Lenses$mapNotes = A2(
	$author$project$Services$Lenses$map_,
	function ($) {
		return $.bP;
	},
	$author$project$Services$Lenses$setNotes);
var $author$project$Track$notesCreated = F2(
	function (content, erd) {
		return A3(
			$author$project$Track$createEvent,
			'editor_notes_created',
			_List_fromArray(
				[
					_Utils_Tuple2(
					'length',
					$elm$json$Json$Encode$int(
						$elm$core$String$length(content)))
				]),
			A2(
				$elm$core$Maybe$map,
				function ($) {
					return $.nN;
				},
				erd));
	});
var $author$project$Track$notesDeleted = function (erd) {
	return A3(
		$author$project$Track$createEvent,
		'editor_notes_deleted',
		_List_Nil,
		A2(
			$elm$core$Maybe$map,
			function ($) {
				return $.nN;
			},
			erd));
};
var $author$project$Track$notesUpdated = F2(
	function (content, erd) {
		return A3(
			$author$project$Track$createEvent,
			'editor_notes_updated',
			_List_fromArray(
				[
					_Utils_Tuple2(
					'length',
					$elm$json$Json$Encode$int(
						$elm$core$String$length(content)))
				]),
			A2(
				$elm$core$Maybe$map,
				function ($) {
					return $.nN;
				},
				erd));
	});
var $author$project$PagesComponents$Organization_$Project_$Updates$Notes$handleNotes = F2(
	function (msg, model) {
		switch (msg.$) {
			case 0:
				var ref = msg.a;
				var notes = A2(
					$elm$core$Maybe$withDefault,
					'',
					A2(
						$elm$core$Maybe$andThen,
						A2(
							$elm$core$Basics$composeR,
							function ($) {
								return $.bP;
							},
							$author$project$PagesComponents$Organization_$Project_$Models$ErdNotes$get(ref)),
						model.lE));
				return _Utils_Tuple2(
					A2(
						$author$project$Services$Lenses$setEditNotes,
						$elm$core$Maybe$Just(
							{H: $author$project$Conf$ids.lx, l8: notes, bP: notes, dG: ref}),
						model),
					$elm$core$Platform$Cmd$batch(
						_List_fromArray(
							[
								A2(
								$author$project$Libs$Task$sendAfter,
								1,
								$author$project$PagesComponents$Organization_$Project_$Models$ModalOpen($author$project$Conf$ids.lx)),
								$elm$core$Platform$Cmd$none
							])));
			case 1:
				var notes = msg.a;
				return _Utils_Tuple2(
					A2(
						$author$project$Services$Lenses$mapEditNotesM,
						$author$project$Services$Lenses$setNotes(notes),
						model),
					$elm$core$Platform$Cmd$none);
			case 2:
				var ref = msg.a;
				var initialNotes = msg.b;
				var notes = msg.c;
				var cmd = _Utils_eq(initialNotes, notes) ? $elm$core$Platform$Cmd$none : ((notes === '') ? $author$project$Ports$track(
					$author$project$Track$notesDeleted(model.lE)) : ((initialNotes === '') ? $author$project$Ports$track(
					A2($author$project$Track$notesCreated, notes, model.lE)) : $author$project$Ports$track(
					A2($author$project$Track$notesUpdated, notes, model.lE))));
				return $author$project$PagesComponents$Organization_$Project_$Updates$Utils$setDirtyCmd(
					_Utils_Tuple2(
						A2(
							$author$project$Services$Lenses$mapErdM,
							$author$project$Services$Lenses$mapNotes(
								A2(
									$author$project$PagesComponents$Organization_$Project_$Models$ErdNotes$set,
									ref,
									$author$project$Libs$String$nonEmptyMaybe(notes))),
							A2($author$project$Services$Lenses$setEditNotes, $elm$core$Maybe$Nothing, model)),
						cmd));
			default:
				return _Utils_Tuple2(
					A2($author$project$Services$Lenses$setEditNotes, $elm$core$Maybe$Nothing, model),
					$elm$core$Platform$Cmd$none);
		}
	});
var $author$project$PagesComponents$Organization_$Project_$Updates$ProjectSettings$getShownTables = function (erd) {
	return A3(
		$author$project$Libs$Maybe$mapOrElse,
		A2(
			$elm$core$Basics$composeR,
			$author$project$PagesComponents$Organization_$Project_$Models$Erd$currentLayout,
			A2(
				$elm$core$Basics$composeR,
				function ($) {
					return $.oM;
				},
				$elm$core$List$map(
					function ($) {
						return $.H;
					}))),
		_List_Nil,
		erd);
};
var $author$project$Services$Lenses$setCollapseTableColumns = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.cR;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{cR: value});
		}));
var $author$project$Services$Lenses$mapCollapseTableColumns = A2(
	$author$project$Services$Lenses$map_,
	function ($) {
		return $.cR;
	},
	$author$project$Services$Lenses$setCollapseTableColumns);
var $author$project$Services$Lenses$setColumnBasicTypes = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.cT;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{cT: value});
		}));
var $author$project$Services$Lenses$mapColumnBasicTypes = A2(
	$author$project$Services$Lenses$map_,
	function ($) {
		return $.cT;
	},
	$author$project$Services$Lenses$setColumnBasicTypes);
var $author$project$Services$Lenses$setEnabled = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.ip;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{ip: value});
		}));
var $author$project$Services$Lenses$mapEnabled = A2(
	$author$project$Services$Lenses$map_,
	function ($) {
		return $.ip;
	},
	$author$project$Services$Lenses$setEnabled);
var $author$project$Services$Lenses$setHiddenColumns = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.ay;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{ay: value});
		}));
var $author$project$Services$Lenses$mapHiddenColumns = A2(
	$author$project$Services$Lenses$map_,
	function ($) {
		return $.ay;
	},
	$author$project$Services$Lenses$setHiddenColumns);
var $author$project$Services$Lenses$setRemoveViews = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.n2;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{n2: value});
		}));
var $author$project$Services$Lenses$mapRemoveViews = A2(
	$author$project$Services$Lenses$map_,
	function ($) {
		return $.n2;
	},
	$author$project$Services$Lenses$setRemoveViews);
var $author$project$Services$Lenses$setRemovedSchemas = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.n3;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{n3: value});
		}));
var $author$project$Services$Lenses$mapRemovedSchemas = A2(
	$author$project$Services$Lenses$map_,
	function ($) {
		return $.n3;
	},
	$author$project$Services$Lenses$setRemovedSchemas);
var $author$project$PagesComponents$Organization_$Project_$Models$Erd$setSettings = F2(
	function (settings, erd) {
		if (_Utils_eq(erd.dM, settings)) {
			return erd;
		} else {
			var _v0 = A2($author$project$PagesComponents$Organization_$Project_$Models$Erd$computeSources, settings, erd.hs);
			var _v1 = _v0.a;
			var tables = _v1.a;
			var relations = _v1.b;
			var types = _v1.c;
			var relationsByTable = _v0.b;
			return _Utils_update(
				erd,
				{bT: relations, e2: relationsByTable, dM: settings, oM: tables, d3: types});
		}
	});
var $author$project$PagesComponents$Organization_$Project_$Models$Erd$mapSettings = F2(
	function (transform, erd) {
		return A2(
			$author$project$PagesComponents$Organization_$Project_$Models$Erd$setSettings,
			transform(erd.dM),
			erd);
	});
var $author$project$Services$Lenses$setSourceUpdate = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.oA;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{oA: value});
		}));
var $author$project$Services$Lenses$mapSourceUpdateCmd = A2(
	$author$project$Services$Lenses$mapCmd_,
	function ($) {
		return $.oA;
	},
	$author$project$Services$Lenses$setSourceUpdate);
var $author$project$PagesComponents$Organization_$Project_$Models$Erd$mapSources = F2(
	function (transform, erd) {
		return A2(
			$author$project$PagesComponents$Organization_$Project_$Models$Erd$setSources,
			transform(erd.hs),
			erd);
	});
var $author$project$Ports$observeTablesSize = function (ids) {
	return $author$project$Ports$observeSizes(
		A2($elm$core$List$map, $author$project$Models$Project$TableId$toHtmlId, ids));
};
var $author$project$Models$Project$SourceKind$same = F2(
	function (k2, k1) {
		var _v0 = _Utils_Tuple2(k1, k2);
		_v0$6:
		while (true) {
			switch (_v0.a.$) {
				case 0:
					if (!_v0.b.$) {
						return true;
					} else {
						break _v0$6;
					}
				case 1:
					if (_v0.b.$ === 1) {
						var _v1 = _v0.a;
						var _v2 = _v0.b;
						return true;
					} else {
						break _v0$6;
					}
				case 2:
					if (_v0.b.$ === 2) {
						var _v3 = _v0.a;
						var _v4 = _v0.b;
						return true;
					} else {
						break _v0$6;
					}
				case 3:
					if (_v0.b.$ === 3) {
						var _v5 = _v0.a;
						var _v6 = _v0.b;
						return true;
					} else {
						break _v0$6;
					}
				case 4:
					if (_v0.b.$ === 4) {
						var _v7 = _v0.a;
						var _v8 = _v0.b;
						return true;
					} else {
						break _v0$6;
					}
				default:
					if (_v0.b.$ === 5) {
						var _v9 = _v0.a;
						var _v10 = _v0.b;
						return true;
					} else {
						break _v0$6;
					}
			}
		}
		return false;
	});
var $author$project$Models$Project$Source$refreshWith = F2(
	function (_new, current) {
		return (_Utils_eq(_new.H, current.H) && A2($author$project$Models$Project$SourceKind$same, current.gi, _new.gi)) ? _Utils_update(
			current,
			{cX: _new.cX, gi: _new.gi, bT: _new.bT, oM: _new.oM, d3: _new.d3, kb: _new.kb}) : current;
	});
var $author$project$Services$Lenses$setColumnOrder = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.cW;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{cW: value});
		}));
var $author$project$Services$Lenses$setDefaultSchema = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.cb;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{cb: value});
		}));
var $author$project$Services$Lenses$setList = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.bn;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{bn: value});
		}));
var $author$project$Services$Lenses$setMax = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.mE;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{mE: value});
		}));
var $author$project$Services$Lenses$setRelationStyle = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.dH;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{dH: value});
		}));
var $author$project$Services$Lenses$setRemovedTables = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.n4;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{n4: value});
		}));
var $author$project$Track$sourceAdded = F2(
	function (erd, source) {
		return A3(
			$author$project$Track$createEvent,
			'editor_source_added',
			$author$project$Track$sourceDetails(source),
			A2(
				$elm$core$Maybe$map,
				function ($) {
					return $.nN;
				},
				erd));
	});
var $author$project$Track$sourceDeleted = F2(
	function (erd, source) {
		return A3(
			$author$project$Track$createEvent,
			'editor_source_deleted',
			$author$project$Track$sourceDetails(source),
			A2(
				$elm$core$Maybe$map,
				function ($) {
					return $.nN;
				},
				erd));
	});
var $author$project$Track$sourceRefreshed = F2(
	function (erd, source) {
		return A3(
			$author$project$Track$createEvent,
			'editor_source_refreshed',
			$author$project$Track$sourceDetails(source),
			A2(
				$elm$core$Maybe$map,
				function ($) {
					return $.nN;
				},
				erd));
	});
var $author$project$Libs$List$toggle = F2(
	function (item, list) {
		return A2($elm$core$List$member, item, list) ? A2(
			$elm$core$List$filter,
			function (i) {
				return !_Utils_eq(i, item);
			},
			list) : _Utils_ap(
			list,
			_List_fromArray(
				[item]));
	});
var $author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$AmlSourceMsg = function (a) {
	return {$: 5, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$DatabaseSourceMsg = function (a) {
	return {$: 2, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$TabDatabase = 0;
var $author$project$Services$AmlSource$init = {eS: '', g8: $elm$core$Maybe$Nothing};
var $author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$init = F3(
	function (noop, dialogId, source) {
		return {
			d9: $author$project$Services$AmlSource$init,
			ca: A2(
				$author$project$Services$DatabaseSource$init,
				source,
				function (_v0) {
					return noop('project-settings-database-source-callback');
				}),
			H: dialogId,
			cm: A2(
				$author$project$Services$JsonSource$init,
				source,
				function (_v1) {
					return noop('project-settings-json-source-callback');
				}),
			a0: 0,
			fj: source,
			cA: A2(
				$author$project$Services$SqlSource$init,
				source,
				function (_v2) {
					return noop('project-settings-sql-source-callback');
				})
		};
	});
var $author$project$Services$Lenses$setAmlSource = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.d9;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{d9: value});
		}));
var $author$project$Services$Lenses$mapAmlSourceCmd = A2(
	$author$project$Services$Lenses$mapCmd_,
	function ($) {
		return $.d9;
	},
	$author$project$Services$Lenses$setAmlSource);
var $author$project$Services$Lenses$mapDatabaseSourceCmd = A2(
	$author$project$Services$Lenses$mapCmd_,
	function ($) {
		return $.ca;
	},
	$author$project$Services$Lenses$setDatabaseSource);
var $author$project$Services$Lenses$mapJsonSourceCmd = A2(
	$author$project$Services$Lenses$mapCmd_,
	function ($) {
		return $.cm;
	},
	$author$project$Services$Lenses$setJsonSource);
var $author$project$Services$Lenses$mapMCmd = F2(
	function (transform, item) {
		return A3(
			$author$project$Libs$Maybe$mapOrElse,
			A2(
				$elm$core$Basics$composeR,
				transform,
				$elm$core$Tuple$mapFirst($elm$core$Maybe$Just)),
			_Utils_Tuple2($elm$core$Maybe$Nothing, $elm$core$Platform$Cmd$none),
			item);
	});
var $author$project$Services$Lenses$mapSqlSourceCmd = A2(
	$author$project$Services$Lenses$mapCmd_,
	function ($) {
		return $.cA;
	},
	$author$project$Services$Lenses$setSqlSource);
var $author$project$Services$AmlSource$BuildSource = function (a) {
	return {$: 1, a: a};
};
var $author$project$Track$amlSourceCreated = F2(
	function (project, source) {
		return A3(
			$author$project$Track$createEvent,
			'editor_source_created',
			_Utils_ap(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'format',
						$elm$json$Json$Encode$string('aml'))
					]),
				$author$project$Track$sourceDetails(source)),
			project);
	});
var $author$project$Services$AmlSource$update = F5(
	function (wrap, now, project, msg, model) {
		if (!msg.$) {
			var name = msg.a;
			return (name === '') ? _Utils_Tuple2(
				_Utils_update(
					model,
					{eS: name, g8: $elm$core$Maybe$Nothing}),
				$elm$core$Platform$Cmd$none) : (_Utils_eq(model.g8, $elm$core$Maybe$Nothing) ? _Utils_Tuple2(
				_Utils_update(
					model,
					{eS: name}),
				A2(
					$elm$random$Random$generate,
					A2($elm$core$Basics$composeR, $author$project$Services$AmlSource$BuildSource, wrap),
					$author$project$Models$Project$SourceId$generator)) : _Utils_Tuple2(
				_Utils_update(
					model,
					{
						eS: name,
						g8: A2(
							$elm$core$Maybe$map,
							$elm$core$Result$map(
								function (s) {
									return _Utils_update(
										s,
										{eS: name});
								}),
							model.g8)
					}),
				$elm$core$Platform$Cmd$none));
		} else {
			var id = msg.a;
			return (model.eS === '') ? _Utils_Tuple2(model, $elm$core$Platform$Cmd$none) : function (source) {
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{
							g8: $elm$core$Maybe$Just(
								$elm$core$Result$Ok(source))
						}),
					$author$project$Ports$track(
						A2($author$project$Track$amlSourceCreated, project, source)));
			}(
				A3($author$project$Models$Project$Source$aml, model.eS, now, id));
		}
	});
var $author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$update = F7(
	function (wrap, modalOpen, noop, now, project, msg, model) {
		switch (msg.$) {
			case 0:
				var source = msg.a;
				return _Utils_Tuple2(
					$elm$core$Maybe$Just(
						A3($author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$init, noop, $author$project$Conf$ids.oB, source)),
					A2(
						$author$project$Libs$Task$sendAfter,
						1,
						modalOpen($author$project$Conf$ids.oB)));
			case 1:
				return _Utils_Tuple2($elm$core$Maybe$Nothing, $elm$core$Platform$Cmd$none);
			case 2:
				var message = msg.a;
				return A2(
					$author$project$Services$Lenses$mapMCmd,
					$author$project$Services$Lenses$mapDatabaseSourceCmd(
						A4(
							$author$project$Services$DatabaseSource$update,
							A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$DatabaseSourceMsg, wrap),
							now,
							project,
							message)),
					model);
			case 3:
				var message = msg.a;
				return A2(
					$author$project$Services$Lenses$mapMCmd,
					$author$project$Services$Lenses$mapSqlSourceCmd(
						A4(
							$author$project$Services$SqlSource$update,
							A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$SqlSourceMsg, wrap),
							now,
							project,
							message)),
					model);
			case 4:
				var message = msg.a;
				return A2(
					$author$project$Services$Lenses$mapMCmd,
					$author$project$Services$Lenses$mapJsonSourceCmd(
						A4(
							$author$project$Services$JsonSource$update,
							A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$JsonSourceMsg, wrap),
							now,
							project,
							message)),
					model);
			case 5:
				var message = msg.a;
				return A2(
					$author$project$Services$Lenses$mapMCmd,
					$author$project$Services$Lenses$mapAmlSourceCmd(
						A4(
							$author$project$Services$AmlSource$update,
							A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$AmlSourceMsg, wrap),
							now,
							project,
							message)),
					model);
			default:
				var kind = msg.a;
				return _Utils_Tuple2(
					A2(
						$elm$core$Maybe$map,
						function (m) {
							return _Utils_update(
								m,
								{a0: kind});
						},
						model),
					$elm$core$Platform$Cmd$none);
		}
	});
var $author$project$PagesComponents$Organization_$Project_$Updates$ProjectSettings$handleProjectSettings = F3(
	function (now, msg, model) {
		switch (msg.$) {
			case 0:
				return _Utils_Tuple2(
					A2(
						$author$project$Services$Lenses$setSettings,
						$elm$core$Maybe$Just(
							{H: $author$project$Conf$ids.or}),
						model),
					$elm$core$Platform$Cmd$batch(
						_List_fromArray(
							[
								A2(
								$author$project$Libs$Task$sendAfter,
								1,
								$author$project$PagesComponents$Organization_$Project_$Models$ModalOpen($author$project$Conf$ids.or))
							])));
			case 1:
				return _Utils_Tuple2(
					A2($author$project$Services$Lenses$setSettings, $elm$core$Maybe$Nothing, model),
					$elm$core$Platform$Cmd$none);
			case 2:
				var source = msg.a;
				return $author$project$PagesComponents$Organization_$Project_$Updates$Utils$setDirtyCmd(
					function (updated) {
						return _Utils_Tuple2(
							updated,
							$elm$core$Platform$Cmd$batch(
								_List_fromArray(
									[
										$author$project$Ports$observeTablesSize(
										$author$project$PagesComponents$Organization_$Project_$Updates$ProjectSettings$getShownTables(updated.lE)),
										$author$project$Libs$Task$send(
										$author$project$PagesComponents$Organization_$Project_$Models$Toast(
											$author$project$Services$Toasts$info(
												'Source ' + (source.eS + (' set to ' + (A3($author$project$Libs$Bool$cond, source.ip, 'hidden', 'visible') + '.'))))))
									])));
					}(
						A2(
							$author$project$Services$Lenses$mapErdM,
							A2(
								$author$project$PagesComponents$Organization_$Project_$Models$Erd$mapSource,
								source.H,
								$author$project$Services$Lenses$mapEnabled($elm$core$Basics$not)),
							model)));
			case 3:
				var source = msg.a;
				return $author$project$PagesComponents$Organization_$Project_$Updates$Utils$setDirtyCmd(
					_Utils_Tuple2(
						A2(
							$author$project$Services$Lenses$mapErdM,
							$author$project$PagesComponents$Organization_$Project_$Models$Erd$mapSources(
								$elm$core$List$filter(
									function (s) {
										return !_Utils_eq(s.H, source.H);
									})),
							model),
						$elm$core$Platform$Cmd$batch(
							_List_fromArray(
								[
									$author$project$Libs$Task$send(
									$author$project$PagesComponents$Organization_$Project_$Models$Toast(
										$author$project$Services$Toasts$info('Source ' + (source.eS + ' has been deleted from your project.')))),
									$author$project$Ports$track(
									A2($author$project$Track$sourceDeleted, model.lE, source))
								]))));
			case 4:
				var message = msg.a;
				return A2(
					$author$project$Services$Lenses$mapSourceUpdateCmd,
					A6(
						$author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$update,
						A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Models$PSSourceUpdate, $author$project$PagesComponents$Organization_$Project_$Models$ProjectSettingsMsg),
						$author$project$PagesComponents$Organization_$Project_$Models$ModalOpen,
						$author$project$PagesComponents$Organization_$Project_$Models$Noop,
						now,
						A2(
							$elm$core$Maybe$map,
							function ($) {
								return $.nN;
							},
							model.lE),
						message),
					model);
			case 5:
				var source = msg.a;
				return A3(
					$author$project$Libs$Maybe$mapOrElse,
					function (erd) {
						return A3(
							$author$project$Libs$List$memberBy,
							function ($) {
								return $.H;
							},
							source.H,
							erd.hs);
					},
					false,
					model.lE) ? $author$project$PagesComponents$Organization_$Project_$Updates$Utils$setDirtyCmd(
					_Utils_Tuple2(
						A2(
							$author$project$Services$Lenses$mapErdM,
							A2(
								$author$project$PagesComponents$Organization_$Project_$Models$Erd$mapSource,
								source.H,
								$author$project$Models$Project$Source$refreshWith(source)),
							model),
						$elm$core$Platform$Cmd$batch(
							_List_fromArray(
								[
									$author$project$Libs$Task$send(
									$author$project$PagesComponents$Organization_$Project_$Models$ModalClose(
										$author$project$PagesComponents$Organization_$Project_$Models$ProjectSettingsMsg(
											$author$project$PagesComponents$Organization_$Project_$Models$PSSourceUpdate($author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$Close)))),
									$author$project$Ports$track(
									A2($author$project$Track$sourceRefreshed, model.lE, source))
								])))) : $author$project$PagesComponents$Organization_$Project_$Updates$Utils$setDirtyCmd(
					_Utils_Tuple2(
						A2(
							$author$project$Services$Lenses$mapErdM,
							$author$project$PagesComponents$Organization_$Project_$Models$Erd$mapSources(
								$author$project$Libs$List$add(source)),
							model),
						$elm$core$Platform$Cmd$batch(
							_List_fromArray(
								[
									$author$project$Libs$Task$send(
									$author$project$PagesComponents$Organization_$Project_$Models$ModalClose(
										$author$project$PagesComponents$Organization_$Project_$Models$ProjectSettingsMsg(
											$author$project$PagesComponents$Organization_$Project_$Models$PSSourceUpdate($author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$Close)))),
									$author$project$Ports$track(
									A2($author$project$Track$sourceAdded, model.lE, source))
								]))));
			case 6:
				var value = msg.a;
				return $author$project$PagesComponents$Organization_$Project_$Updates$Utils$setDirty(
					A2(
						$author$project$Services$Lenses$mapErdM,
						$author$project$PagesComponents$Organization_$Project_$Models$Erd$mapSettings(
							$author$project$Services$Lenses$setDefaultSchema(value)),
						model));
			case 7:
				var schema = msg.a;
				return $author$project$PagesComponents$Organization_$Project_$Updates$Utils$setDirtyCmd(
					function (m) {
						return _Utils_Tuple2(
							m,
							$author$project$Ports$observeTablesSize(
								$author$project$PagesComponents$Organization_$Project_$Updates$ProjectSettings$getShownTables(m.lE)));
					}(
						A2(
							$author$project$Services$Lenses$mapErdM,
							$author$project$PagesComponents$Organization_$Project_$Models$Erd$mapSettings(
								$author$project$Services$Lenses$mapRemovedSchemas(
									$author$project$Libs$List$toggle(schema))),
							model)));
			case 8:
				return $author$project$PagesComponents$Organization_$Project_$Updates$Utils$setDirtyCmd(
					function (m) {
						return _Utils_Tuple2(
							m,
							$author$project$Ports$observeTablesSize(
								$author$project$PagesComponents$Organization_$Project_$Updates$ProjectSettings$getShownTables(m.lE)));
					}(
						A2(
							$author$project$Services$Lenses$mapErdM,
							$author$project$PagesComponents$Organization_$Project_$Models$Erd$mapSettings(
								$author$project$Services$Lenses$mapRemoveViews($elm$core$Basics$not)),
							model)));
			case 9:
				var values = msg.a;
				return $author$project$PagesComponents$Organization_$Project_$Updates$Utils$setDirtyCmd(
					function (m) {
						return _Utils_Tuple2(
							m,
							$author$project$Ports$observeTablesSize(
								$author$project$PagesComponents$Organization_$Project_$Updates$ProjectSettings$getShownTables(m.lE)));
					}(
						A2(
							$author$project$Services$Lenses$mapErdM,
							$author$project$PagesComponents$Organization_$Project_$Models$Erd$mapSettings(
								A2(
									$elm$core$Basics$composeR,
									$author$project$Services$Lenses$setRemovedTables(values),
									$author$project$Models$Project$ProjectSettings$fillFindPath)),
							model)));
			case 10:
				var values = msg.a;
				return $author$project$PagesComponents$Organization_$Project_$Updates$Utils$setDirty(
					A2(
						$author$project$Services$Lenses$mapErdM,
						$author$project$PagesComponents$Organization_$Project_$Models$Erd$mapSettings(
							A2(
								$elm$core$Basics$composeR,
								$author$project$Services$Lenses$mapHiddenColumns(
									$author$project$Services$Lenses$setList(values)),
								$author$project$Models$Project$ProjectSettings$fillFindPath)),
						model));
			case 11:
				var value = msg.a;
				return $author$project$PagesComponents$Organization_$Project_$Updates$Utils$setDirty(
					A3(
						$author$project$Libs$Maybe$mapOrElse,
						function (max) {
							return A2(
								$author$project$Services$Lenses$mapErdM,
								$author$project$PagesComponents$Organization_$Project_$Models$Erd$mapSettings(
									A2(
										$elm$core$Basics$composeR,
										$author$project$Services$Lenses$mapHiddenColumns(
											$author$project$Services$Lenses$setMax(max)),
										$author$project$Models$Project$ProjectSettings$fillFindPath)),
								model);
						},
						model,
						$elm$core$String$toInt(value)));
			case 12:
				return $author$project$PagesComponents$Organization_$Project_$Updates$Utils$setDirty(
					A2(
						$author$project$Services$Lenses$mapErdM,
						$author$project$PagesComponents$Organization_$Project_$Models$Erd$mapSettings(
							$author$project$Services$Lenses$mapHiddenColumns(
								$author$project$Services$Lenses$mapProps($elm$core$Basics$not))),
						model));
			case 13:
				return $author$project$PagesComponents$Organization_$Project_$Updates$Utils$setDirty(
					A2(
						$author$project$Services$Lenses$mapErdM,
						$author$project$PagesComponents$Organization_$Project_$Models$Erd$mapSettings(
							$author$project$Services$Lenses$mapHiddenColumns(
								$author$project$Services$Lenses$mapRelations($elm$core$Basics$not))),
						model));
			case 14:
				var order = msg.a;
				return $author$project$PagesComponents$Organization_$Project_$Updates$Utils$setDirty(
					A2(
						$author$project$Services$Lenses$mapErdM,
						function (e) {
							return A2(
								$author$project$PagesComponents$Organization_$Project_$Models$Erd$mapSettings,
								$author$project$Services$Lenses$setColumnOrder(order),
								e);
						},
						model));
			case 15:
				var style = msg.a;
				return $author$project$PagesComponents$Organization_$Project_$Updates$Utils$setDirty(
					A2(
						$author$project$Services$Lenses$mapErdM,
						function (e) {
							return A2(
								$author$project$PagesComponents$Organization_$Project_$Models$Erd$mapSettings,
								$author$project$Services$Lenses$setRelationStyle(style),
								e);
						},
						model));
			case 16:
				return $author$project$PagesComponents$Organization_$Project_$Updates$Utils$setDirty(
					A2(
						$author$project$Services$Lenses$mapErdM,
						$author$project$PagesComponents$Organization_$Project_$Models$Erd$mapSettings(
							$author$project$Services$Lenses$mapColumnBasicTypes($elm$core$Basics$not)),
						model));
			default:
				return $author$project$PagesComponents$Organization_$Project_$Updates$Utils$setDirty(
					A2(
						$author$project$Services$Lenses$mapErdM,
						$author$project$PagesComponents$Organization_$Project_$Models$Erd$mapSettings(
							$author$project$Services$Lenses$mapCollapseTableColumns($elm$core$Basics$not)),
						model));
		}
	});
var $author$project$PagesComponents$Organization_$Project_$Models$CreateRelation = F2(
	function (a, b) {
		return {$: 35, a: a, b: b};
	});
var $author$project$PagesComponents$Organization_$Project_$Updates$VirtualRelation$adaptPosition = F3(
	function (model, erd, pos) {
		return function (l) {
			return A4($author$project$Models$Position$canvasToViewport, model.lF.e$, l.fJ.e$, l.fJ.hU, pos);
		}(
			$author$project$PagesComponents$Organization_$Project_$Models$Erd$currentLayout(erd));
	});
var $author$project$Libs$List$zipWithIndex = function (list) {
	return A2(
		$elm$core$List$indexedMap,
		F2(
			function (i, a) {
				return _Utils_Tuple2(a, i);
			}),
		list);
};
var $author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$getIndex = F2(
	function (path, columns) {
		return A2(
			$elm$core$Maybe$map,
			function (_v1) {
				var i = _v1.b;
				return i;
			},
			A2(
				$author$project$Libs$List$find,
				function (_v0) {
					var p = _v0.a;
					return _Utils_eq(p, path);
				},
				$author$project$Libs$List$zipWithIndex(
					$author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$unpackAll(columns))));
	});
var $author$project$PagesComponents$Organization_$Project_$Models$Erd$getColumnPos = F2(
	function (ref, erd) {
		return A2(
			$elm$core$Maybe$map,
			function (_v0) {
				var t = _v0.a;
				var index = _v0.b;
				return function (delta) {
					return A2(
						$author$project$Models$Position$moveCanvas,
						delta,
						$author$project$Models$Position$offGrid(t.e$));
				}(
					t.cS ? {
						aY: $author$project$Models$Size$extractCanvas(t.ox).bB / 2,
						aZ: $author$project$Conf$ui.oK * 0.5
					} : {
						aY: $author$project$Models$Size$extractCanvas(t.ox).bB / 2,
						aZ: $author$project$Conf$ui.oK + ($author$project$Conf$ui.oJ * (0.5 + index))
					});
			},
			A2(
				$elm$core$Maybe$andThen,
				function (t) {
					return A2(
						$elm$core$Maybe$map,
						function (i) {
							return _Utils_Tuple2(t.nU, i);
						},
						A2($author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$getIndex, ref.bH, t.M));
				},
				A2(
					$author$project$Libs$List$find,
					function (t) {
						return _Utils_eq(t.H, ref.aq);
					},
					$author$project$PagesComponents$Organization_$Project_$Models$Erd$currentLayout(erd).oM)));
	});
var $author$project$PagesComponents$Organization_$Project_$Updates$VirtualRelation$computeInitialPosition = F2(
	function (model, src) {
		return A2(
			$elm$core$Maybe$andThen,
			$elm$core$Basics$identity,
			A3(
				$elm$core$Maybe$map2,
				F2(
					function (c, erd) {
						return A2(
							$elm$core$Maybe$map,
							A2($author$project$PagesComponents$Organization_$Project_$Updates$VirtualRelation$adaptPosition, model, erd),
							A2($author$project$PagesComponents$Organization_$Project_$Models$Erd$getColumnPos, c, erd));
					}),
				src,
				model.lE));
	});
var $author$project$Services$Lenses$setVirtualRelation = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.o4;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{o4: value});
		}));
var $author$project$Services$Lenses$mapVirtualRelationM = A2(
	$author$project$Services$Lenses$mapM_,
	function ($) {
		return $.o4;
	},
	$author$project$Services$Lenses$setVirtualRelation);
var $author$project$Services$Lenses$setMouse = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.mU;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{mU: value});
		}));
var $author$project$PagesComponents$Organization_$Project_$Updates$VirtualRelation$handleVirtualRelation = F2(
	function (msg, model) {
		switch (msg.$) {
			case 0:
				var src = msg.a;
				return _Utils_Tuple2(
					A2(
						$author$project$Services$Lenses$setVirtualRelation,
						$elm$core$Maybe$Just(
							{
								mU: A2(
									$elm$core$Maybe$withDefault,
									$author$project$Models$Position$zeroViewport,
									A2($author$project$PagesComponents$Organization_$Project_$Updates$VirtualRelation$computeInitialPosition, model, src)),
								ht: src
							}),
						model),
					$elm$core$Platform$Cmd$none);
			case 1:
				var ref = msg.a;
				var pos = msg.b;
				var _v1 = A2(
					$elm$core$Maybe$map,
					function ($) {
						return $.ht;
					},
					model.o4);
				if (_v1.$ === 1) {
					return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
				} else {
					if (_v1.a.$ === 1) {
						var _v2 = _v1.a;
						return _Utils_Tuple2(
							A2(
								$author$project$Services$Lenses$setVirtualRelation,
								$elm$core$Maybe$Just(
									{
										mU: pos,
										ht: $elm$core$Maybe$Just(ref)
									}),
								model),
							$elm$core$Platform$Cmd$none);
					} else {
						var src = _v1.a.a;
						return _Utils_Tuple2(
							A2($author$project$Services$Lenses$setVirtualRelation, $elm$core$Maybe$Nothing, model),
							$author$project$Libs$Task$send(
								A2($author$project$PagesComponents$Organization_$Project_$Models$CreateRelation, src, ref)));
					}
				}
			case 2:
				var pos = msg.a;
				return _Utils_Tuple2(
					A2(
						$author$project$Services$Lenses$mapVirtualRelationM,
						$author$project$Services$Lenses$setMouse(pos),
						model),
					$elm$core$Platform$Cmd$none);
			default:
				return _Utils_Tuple2(
					A2($author$project$Services$Lenses$setVirtualRelation, $elm$core$Maybe$Nothing, model),
					$elm$core$Platform$Cmd$none);
		}
	});
var $author$project$Libs$Models$Delta$adjust = F2(
	function (zoom, delta) {
		return A2($author$project$Libs$Models$Delta$Delta, delta.aY * zoom, delta.aZ * zoom);
	});
var $author$project$Libs$Models$Delta$negate = function (delta) {
	return A2($author$project$Libs$Models$Delta$Delta, -delta.aY, -delta.aZ);
};
var $author$project$Libs$Models$Position$round = function (pos) {
	return A2(
		$author$project$Libs$Models$Position$Position,
		$elm$core$Basics$round(pos.C),
		$elm$core$Basics$round(pos.ad));
};
var $author$project$Models$Position$roundDiagram = function (_v0) {
	var pos = _v0;
	return $author$project$Models$Position$diagram(
		$author$project$Libs$Models$Position$round(pos));
};
var $author$project$PagesComponents$Organization_$Project_$Updates$Canvas$performZoom = F4(
	function (erdElem, delta, target, canvas) {
		var newZoom = A3($elm$core$Basics$clamp, $author$project$Conf$canvas.hU.mM, $author$project$Conf$canvas.hU.mE, canvas.hU + delta);
		var targetDelta = A2(
			$author$project$Models$Position$diffViewport,
			target,
			A4(
				$author$project$Models$Position$canvasToViewport,
				erdElem.e$,
				canvas.e$,
				newZoom,
				A4($author$project$Models$Position$viewportToCanvas, erdElem.e$, canvas.e$, canvas.hU, target)));
		return {
			e$: $author$project$Models$Position$roundDiagram(
				A2(
					$author$project$Models$Position$moveDiagram,
					$author$project$Libs$Models$Delta$negate(targetDelta),
					canvas.e$)),
			hU: newZoom
		};
	});
var $author$project$PagesComponents$Organization_$Project_$Updates$Canvas$handleWheel = F3(
	function (event, erdElem, canvas) {
		return event.at ? A4($author$project$PagesComponents$Organization_$Project_$Updates$Canvas$performZoom, erdElem, ((-event.lk.aZ) * $author$project$Conf$canvas.hU.oC) * canvas.hU, event.h3, canvas) : _Utils_update(
			canvas,
			{
				e$: A2(
					$author$project$Models$Position$moveDiagram,
					A2(
						$author$project$Libs$Models$Delta$adjust,
						canvas.hU,
						$author$project$Libs$Models$Delta$negate(event.lk)),
					canvas.e$)
			});
	});
var $author$project$PagesComponents$Organization_$Project_$Models$DragState$hasMoved = function (dragging) {
	return !_Utils_eq(dragging.bl, dragging.iZ);
};
var $author$project$Services$Lenses$mapTablesL = A2(
	$author$project$Services$Lenses$mapL_,
	function ($) {
		return $.oM;
	},
	$author$project$Services$Lenses$setTables);
var $author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$children = function (column) {
	return function (_v0) {
		var cols = _v0;
		return cols;
	}(column.bd);
};
var $author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$mapChildren = F2(
	function (f, column) {
		return _Utils_update(
			column,
			{
				bd: f(
					$author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$children(column))
			});
	});
var $author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$remove = F2(
	function (path, columns) {
		return A2(
			$elm$core$List$filterMap,
			function (c) {
				return _Utils_eq(c.eS, path.ev) ? A2(
					$elm$core$Maybe$map,
					function (p) {
						return A2(
							$author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$mapChildren,
							$author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$remove(p),
							c);
					},
					$author$project$Libs$Nel$fromList(path.oO)) : $elm$core$Maybe$Just(c);
			},
			columns);
	});
var $author$project$PagesComponents$Organization_$Project_$Updates$Table$hideColumn = F4(
	function (now, table, column, erd) {
		return A3(
			$author$project$PagesComponents$Organization_$Project_$Models$Erd$mapCurrentLayoutWithTime,
			now,
			A3(
				$author$project$Services$Lenses$mapTablesL,
				function ($) {
					return $.H;
				},
				table,
				$author$project$Services$Lenses$mapColumns(
					$author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$remove(column))),
			erd);
	});
var $author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$filterNested = F3(
	function (path, predicate, columns) {
		return A2(
			$elm$core$List$map,
			function (c) {
				return A2(
					$author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$mapChildren,
					A2(
						$author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$filterNested,
						A2($author$project$Models$Project$ColumnPath$child, c.eS, path),
						predicate),
					c);
			},
			A2(
				$elm$core$List$filter,
				function (c) {
					return A2(
						predicate,
						A2($author$project$Models$Project$ColumnPath$child, c.eS, path),
						c);
				},
				columns));
	});
var $author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$filter = F2(
	function (predicate, columns) {
		return A2(
			$elm$core$List$map,
			function (c) {
				return A2(
					$author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$mapChildren,
					A2(
						$author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$filterNested,
						$author$project$Models$Project$ColumnPath$fromString(c.eS),
						predicate),
					c);
			},
			A2(
				$elm$core$List$filter,
				function (c) {
					return A2(
						predicate,
						$author$project$Models$Project$ColumnPath$fromString(c.eS),
						c);
				},
				columns));
	});
var $author$project$PagesComponents$Organization_$Project_$Models$ErdColumn$getColumn = F2(
	function (path, column) {
		return A2(
			$elm$core$Maybe$andThen,
			function (col) {
				return A3(
					$author$project$Libs$Maybe$mapOrElse,
					function (next) {
						return A2($author$project$PagesComponents$Organization_$Project_$Models$ErdColumn$getColumn, next, col);
					},
					$elm$core$Maybe$Just(col),
					$author$project$Libs$Nel$fromList(path.oO));
			},
			A2(
				$elm$core$Maybe$andThen,
				function (_v0) {
					var cols = _v0;
					return A2($author$project$Libs$Ned$get, path.ev, cols);
				},
				column.M));
	});
var $author$project$PagesComponents$Organization_$Project_$Models$ErdTable$getColumn = F2(
	function (path, table) {
		return A2(
			$elm$core$Maybe$andThen,
			function (col) {
				return A3(
					$author$project$Libs$Maybe$mapOrElse,
					function (next) {
						return A2($author$project$PagesComponents$Organization_$Project_$Models$ErdColumn$getColumn, next, col);
					},
					$elm$core$Maybe$Just(col),
					$author$project$Libs$Nel$fromList(path.oO));
			},
			A2($elm$core$Dict$get, path.ev, table.M));
	});
var $author$project$PagesComponents$Organization_$Project_$Models$ErdTable$hasColumn = F2(
	function (column, columns) {
		return A2(
			$elm$core$List$any,
			function (c) {
				return A2($author$project$Models$Project$ColumnPath$startsWith, column, c);
			},
			columns);
	});
var $author$project$PagesComponents$Organization_$Project_$Models$ErdTable$inIndexes = F2(
	function (table, column) {
		return A2(
			$elm$core$List$filter,
			function (i) {
				return A2(
					$author$project$PagesComponents$Organization_$Project_$Models$ErdTable$hasColumn,
					column,
					$author$project$Libs$Nel$toList(i.M));
			},
			table.dg);
	});
var $author$project$PagesComponents$Organization_$Project_$Models$ErdTable$inPrimaryKey = F2(
	function (table, column) {
		return A2(
			$author$project$Libs$Maybe$filter,
			function (_v0) {
				var columns = _v0.M;
				return A2(
					$author$project$PagesComponents$Organization_$Project_$Models$ErdTable$hasColumn,
					column,
					$author$project$Libs$Nel$toList(columns));
			},
			table.nL);
	});
var $author$project$PagesComponents$Organization_$Project_$Models$ErdTable$inUniques = F2(
	function (table, column) {
		return A2(
			$elm$core$List$filter,
			function (u) {
				return A2(
					$author$project$PagesComponents$Organization_$Project_$Models$ErdTable$hasColumn,
					column,
					$author$project$Libs$Nel$toList(u.M));
			},
			table.d5);
	});
var $author$project$Models$Project$Relation$linkedToTable = F2(
	function (table, relation) {
		return _Utils_eq(relation.ht.aq, table) || _Utils_eq(relation.dG.aq, table);
	});
var $author$project$PagesComponents$Organization_$Project_$Updates$Table$mapColumnsForTableOrSelectedProps = F4(
	function (now, id, transform, erd) {
		var selected = A3(
			$author$project$Libs$Maybe$mapOrElse,
			A2(
				$elm$core$Basics$composeR,
				function ($) {
					return $.nU;
				},
				function ($) {
					return $.cy;
				}),
			false,
			A3(
				$author$project$Libs$List$findBy,
				function ($) {
					return $.H;
				},
				id,
				$author$project$PagesComponents$Organization_$Project_$Models$Erd$currentLayout(erd).oM));
		return A3(
			$author$project$PagesComponents$Organization_$Project_$Models$Erd$mapCurrentLayoutWithTime,
			now,
			$author$project$Services$Lenses$mapTables(
				$elm$core$List$map(
					function (props) {
						return (_Utils_eq(props.H, id) || (selected && props.nU.cy)) ? A2(
							$elm$core$Maybe$withDefault,
							props,
							A2(
								$elm$core$Maybe$map,
								function (table) {
									return A2(
										$author$project$Services$Lenses$mapColumns,
										A2(
											$elm$core$Basics$composeR,
											transform(table),
											$author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$filter(
												F2(
													function (p, _v0) {
														return $author$project$Libs$Maybe$isJust(
															A2($author$project$PagesComponents$Organization_$Project_$Models$ErdTable$getColumn, p, table));
													}))),
										props);
								},
								A2($elm$core$Dict$get, props.H, erd.oM))) : props;
					})),
			erd);
	});
var $author$project$Models$Project$Relation$outRelation = F2(
	function (tableOutRelations, column) {
		return A2(
			$elm$core$List$filter,
			function (r) {
				return A2($author$project$Models$Project$ColumnPath$startsWith, column, r.ht.bH);
			},
			tableOutRelations);
	});
var $author$project$PagesComponents$Organization_$Project_$Updates$Table$hideColumns = F4(
	function (now, id, kind, erd) {
		return _Utils_Tuple2(
			A4(
				$author$project$PagesComponents$Organization_$Project_$Updates$Table$mapColumnsForTableOrSelectedProps,
				now,
				id,
				F2(
					function (table, columns) {
						return function (tableRelations) {
							return A2(
								$author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$filter,
								F2(
									function (path, _v0) {
										var _v1 = _Utils_Tuple2(
											kind,
											A2($author$project$PagesComponents$Organization_$Project_$Models$ErdTable$getColumn, path, table));
										_v1$4:
										while (true) {
											switch (_v1.a) {
												case 3:
													if (!_v1.b.$) {
														var _v2 = _v1.a;
														return $author$project$Libs$List$nonEmpty(
															A2($author$project$Models$Project$Relation$outRelation, tableRelations, path));
													} else {
														break _v1$4;
													}
												case 2:
													if (!_v1.b.$) {
														var _v3 = _v1.a;
														return $author$project$Libs$Maybe$isJust(
															A2($author$project$PagesComponents$Organization_$Project_$Models$ErdTable$inPrimaryKey, table, path)) || ($author$project$Libs$List$nonEmpty(
															A2($author$project$Models$Project$Relation$outRelation, tableRelations, path)) || ($author$project$Libs$List$nonEmpty(
															A2($author$project$PagesComponents$Organization_$Project_$Models$ErdTable$inUniques, table, path)) || $author$project$Libs$List$nonEmpty(
															A2($author$project$PagesComponents$Organization_$Project_$Models$ErdTable$inIndexes, table, path))));
													} else {
														break _v1$4;
													}
												case 1:
													if (!_v1.b.$) {
														var _v4 = _v1.a;
														var c = _v1.b.a;
														return !c.nf;
													} else {
														break _v1$4;
													}
												default:
													var _v5 = _v1.a;
													return false;
											}
										}
										return false;
									}),
								columns);
						}(
							A2(
								$elm$core$List$filter,
								$author$project$Models$Project$Relation$linkedToTable(id),
								erd.bT));
					}),
				erd),
			$elm$core$Platform$Cmd$none);
	});
var $author$project$PagesComponents$Organization_$Project_$Updates$Table$hideRelatedTables = F2(
	function (id, erd) {
		var related = A2(
			$elm$core$List$map,
			function (r) {
				return _Utils_eq(r.ht.aq, id) ? r.dG.aq : r.ht.aq;
			},
			A3($author$project$Libs$Dict$getOrElse, id, _List_Nil, erd.e2));
		return _Utils_Tuple2(
			erd,
			$elm$core$Platform$Cmd$batch(
				A2(
					$elm$core$List$map,
					function (t) {
						return $author$project$Libs$Task$send(
							$author$project$PagesComponents$Organization_$Project_$Models$HideTable(t));
					},
					related)));
	});
var $author$project$Libs$List$removeBy = F3(
	function (getKey, item, list) {
		return A2(
			$elm$core$List$filter,
			function (i) {
				return !_Utils_eq(
					getKey(i),
					item);
			},
			list);
	});
var $author$project$Services$Lenses$setRelatedTables = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.n$;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{n$: value});
		}));
var $author$project$Services$Lenses$mapRelatedTables = A2(
	$author$project$Services$Lenses$map_,
	function ($) {
		return $.n$;
	},
	$author$project$Services$Lenses$setRelatedTables);
var $author$project$Services$Lenses$setShown = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.fh;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{fh: value});
		}));
var $author$project$PagesComponents$Organization_$Project_$Updates$Table$updateRelatedTables = function (tables) {
	return function (shownTables) {
		return A2(
			$elm$core$List$map,
			$author$project$Services$Lenses$mapRelatedTables(
				$elm$core$Dict$map(
					function (id) {
						return $author$project$Services$Lenses$setShown(
							A2($elm$core$Set$member, id, shownTables));
					})),
			tables);
	}(
		$elm$core$Set$fromList(
			A2(
				$elm$core$List$map,
				function ($) {
					return $.H;
				},
				tables)));
};
var $author$project$PagesComponents$Organization_$Project_$Updates$Table$performHideTable = F3(
	function (now, table, erd) {
		return A3(
			$author$project$PagesComponents$Organization_$Project_$Models$Erd$mapCurrentLayoutWithTime,
			now,
			A2(
				$elm$core$Basics$composeR,
				$author$project$Services$Lenses$mapTables(
					A2(
						$author$project$Libs$List$removeBy,
						function ($) {
							return $.H;
						},
						table)),
				$author$project$Services$Lenses$mapTables($author$project$PagesComponents$Organization_$Project_$Updates$Table$updateRelatedTables)),
			erd);
	});
var $author$project$PagesComponents$Organization_$Project_$Updates$Table$hideTable = F3(
	function (now, id, erd) {
		return A2(
			$elm$core$Maybe$withDefault,
			false,
			A2(
				$elm$core$Maybe$map,
				A2(
					$elm$core$Basics$composeR,
					function ($) {
						return $.nU;
					},
					function ($) {
						return $.cy;
					}),
				A3(
					$author$project$Libs$List$findBy,
					function ($) {
						return $.H;
					},
					id,
					$author$project$PagesComponents$Organization_$Project_$Models$Erd$currentLayout(erd).oM))) ? A3(
			$elm$core$List$foldl,
			function (p) {
				return A2($author$project$PagesComponents$Organization_$Project_$Updates$Table$performHideTable, now, p.H);
			},
			erd,
			A2(
				$elm$core$List$filter,
				A2(
					$elm$core$Basics$composeR,
					function ($) {
						return $.nU;
					},
					function ($) {
						return $.cy;
					}),
				$author$project$PagesComponents$Organization_$Project_$Models$Erd$currentLayout(erd).oM)) : A3($author$project$PagesComponents$Organization_$Project_$Updates$Table$performHideTable, now, id, erd);
	});
var $author$project$Models$Project$ColumnId$from = F2(
	function (table, column) {
		return _Utils_Tuple2(
			table.H,
			$author$project$Models$Project$ColumnPath$toString(column.aA));
	});
var $author$project$PagesComponents$Organization_$Project_$Models$ErdRelation$linkedTo = F2(
	function (column, relation) {
		return (_Utils_eq(relation.ht.aq, column.aq) && _Utils_eq(relation.ht.bH, column.bH)) || (_Utils_eq(relation.dG.aq, column.aq) && _Utils_eq(relation.dG.bH, column.bH));
	});
var $author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$mapNested = F3(
	function (path, f, columns) {
		return A2(
			$elm$core$List$map,
			function (c) {
				return A2(
					$author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$mapChildren,
					A2(
						$author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$mapNested,
						A2($author$project$Models$Project$ColumnPath$child, c.eS, path),
						f),
					A2(
						f,
						A2($author$project$Models$Project$ColumnPath$child, c.eS, path),
						c));
			},
			columns);
	});
var $author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$map = F2(
	function (f, columns) {
		return A2(
			$elm$core$List$map,
			function (c) {
				return A2(
					$author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$mapChildren,
					A2(
						$author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$mapNested,
						$author$project$Models$Project$ColumnPath$fromString(c.eS),
						f),
					A2(
						f,
						$author$project$Models$Project$ColumnPath$fromString(c.eS),
						c));
			},
			columns);
	});
var $author$project$Services$Lenses$setHighlighted = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.az;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{az: value});
		}));
var $author$project$PagesComponents$Organization_$Project_$Updates$Table$hoverColumn = F4(
	function (column, enter, erd, tables) {
		var highlightedColumns = enter ? A2(
			$elm$core$Set$insert,
			$author$project$Models$Project$ColumnId$fromRef(column),
			$elm$core$Set$fromList(
				A2(
					$elm$core$List$concatMap,
					function (r) {
						return _List_fromArray(
							[
								$author$project$Models$Project$ColumnId$fromRef(r.ht),
								$author$project$Models$Project$ColumnId$fromRef(r.dG)
							]);
					},
					A2(
						$elm$core$List$filter,
						$author$project$PagesComponents$Organization_$Project_$Models$ErdRelation$linkedTo(column),
						A3($author$project$Libs$Dict$getOrElse, column.aq, _List_Nil, erd.e2))))) : $elm$core$Set$empty;
		return A2(
			$elm$core$List$map,
			function (t) {
				return A2(
					$author$project$Services$Lenses$mapColumns,
					$author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$map(
						F2(
							function (p, c) {
								return A2(
									$author$project$Services$Lenses$setHighlighted,
									A2(
										$elm$core$Set$member,
										A2(
											$author$project$Models$Project$ColumnId$from,
											t,
											{aA: p}),
										highlightedColumns),
									c);
							})),
					t);
			},
			tables);
	});
var $author$project$Libs$List$dropWhile = F2(
	function (predicate, list) {
		dropWhile:
		while (true) {
			if (!list.b) {
				return _List_Nil;
			} else {
				var x = list.a;
				var xs = list.b;
				if (predicate(x)) {
					var $temp$predicate = predicate,
						$temp$list = xs;
					predicate = $temp$predicate;
					list = $temp$list;
					continue dropWhile;
				} else {
					return list;
				}
			}
		}
	});
var $author$project$Libs$List$dropUntil = F2(
	function (predicate, list) {
		return A2(
			$author$project$Libs$List$dropWhile,
			function (a) {
				return !predicate(a);
			},
			list);
	});
var $author$project$Services$Lenses$setHoverColumn = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.l1;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{l1: value});
		}));
var $author$project$PagesComponents$Organization_$Project_$Updates$Table$hoverNextColumn = F3(
	function (table, column, model) {
		var nextColumn = A2(
			$elm$core$Maybe$andThen,
			A2(
				$elm$core$Basics$composeR,
				function ($) {
					return $.M;
				},
				A2(
					$elm$core$Basics$composeR,
					$author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$unpackAll,
					A2(
						$elm$core$Basics$composeR,
						$author$project$Libs$List$dropUntil(
							function (p) {
								return _Utils_eq(p, column);
							}),
						A2(
							$elm$core$Basics$composeR,
							$elm$core$List$drop(1),
							$elm$core$List$head)))),
			A2(
				$elm$core$Maybe$andThen,
				A2(
					$elm$core$Basics$composeR,
					$author$project$PagesComponents$Organization_$Project_$Models$Erd$currentLayout,
					A2(
						$elm$core$Basics$composeR,
						function ($) {
							return $.oM;
						},
						A2(
							$author$project$Libs$List$findBy,
							function ($) {
								return $.H;
							},
							table))),
				model.lE));
		return A2(
			$author$project$Services$Lenses$setHoverColumn,
			A2(
				$elm$core$Maybe$map,
				$author$project$Models$Project$ColumnRef$ColumnRef(table),
				nextColumn),
			model);
	});
var $author$project$Libs$Nel$last = function (nel) {
	return A2(
		$elm$core$Maybe$withDefault,
		nel.ev,
		$author$project$Libs$List$last(nel.oO));
};
var $author$project$Services$Lenses$setAmlSidebar = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.kr;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{kr: value});
		}));
var $author$project$Services$Lenses$mapAmlSidebarM = A2(
	$author$project$Services$Lenses$mapM_,
	function ($) {
		return $.kr;
	},
	$author$project$Services$Lenses$setAmlSidebar);
var $author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$mapAt = F3(
	function (path, f, columns) {
		return A3(
			$author$project$Libs$Maybe$mapOrElse,
			function (p) {
				return A2(
					$elm$core$List$map,
					$author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$mapChildren(
						A2(
							$author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$mapAt,
							$author$project$Libs$Nel$fromList(p.oO),
							f)),
					columns);
			},
			f(columns),
			path);
	});
var $author$project$Services$Lenses$setContextMenu = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.k3;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{k3: value});
		}));
var $author$project$Services$Lenses$mapContextMenuM = A2(
	$author$project$Services$Lenses$mapM_,
	function ($) {
		return $.k3;
	},
	$author$project$Services$Lenses$setContextMenu);
var $author$project$Services$Lenses$mapDCmd_ = F5(
	function (get, update, key, transform, item) {
		return A3(
			$author$project$Libs$Maybe$mapOrElse,
			A2(
				$elm$core$Basics$composeR,
				transform,
				$elm$core$Tuple$mapFirst(
					function (n) {
						return A5(
							$author$project$Services$Lenses$mapD_,
							get,
							update,
							key,
							function (_v0) {
								return n;
							},
							item);
					})),
			_Utils_Tuple2(item, $elm$core$Platform$Cmd$none),
			A2(
				$elm$core$Dict$get,
				key,
				get(item)));
	});
var $author$project$Services$Lenses$mapLayoutsDCmd = A2(
	$author$project$Services$Lenses$mapDCmd_,
	function ($) {
		return $.i$;
	},
	$author$project$Services$Lenses$setLayouts);
var $author$project$PagesComponents$Organization_$Project_$Models$Erd$mapCurrentLayoutCmd = F3(
	function (now, transform, erd) {
		return A3(
			$author$project$Services$Lenses$mapLayoutsDCmd,
			erd.id,
			A2(
				$elm$core$Basics$composeR,
				transform,
				$elm$core$Tuple$mapFirst(
					function (l) {
						return _Utils_update(
							l,
							{kb: now});
					})),
			erd);
	});
var $author$project$Services$Lenses$setDetailsSidebar = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.lq;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{lq: value});
		}));
var $author$project$Services$Lenses$mapDetailsSidebarCmd = A2(
	$author$project$Services$Lenses$mapCmd_,
	function ($) {
		return $.lq;
	},
	$author$project$Services$Lenses$setDetailsSidebar);
var $author$project$Services$Lenses$setEmbedSourceParsing = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.lB;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{lB: value});
		}));
var $author$project$Services$Lenses$mapEmbedSourceParsingMCmd = A2(
	$author$project$Services$Lenses$mapMCmd_,
	function ($) {
		return $.lB;
	},
	$author$project$Services$Lenses$setEmbedSourceParsing);
var $author$project$Services$Lenses$setHoverTable = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.l2;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{l2: value});
		}));
var $author$project$Services$Lenses$mapHoverTable = A2(
	$author$project$Services$Lenses$map_,
	function ($) {
		return $.l2;
	},
	$author$project$Services$Lenses$setHoverTable);
var $author$project$Services$Lenses$setMobileMenuOpen = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.mR;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{mR: value});
		}));
var $author$project$Services$Lenses$mapMobileMenuOpen = A2(
	$author$project$Services$Lenses$map_,
	function ($) {
		return $.mR;
	},
	$author$project$Services$Lenses$setMobileMenuOpen);
var $author$project$Services$Lenses$setOpenedDialogs = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.nt;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{nt: value});
		}));
var $author$project$Services$Lenses$mapOpenedDialogs = A2(
	$author$project$Services$Lenses$map_,
	function ($) {
		return $.nt;
	},
	$author$project$Services$Lenses$setOpenedDialogs);
var $author$project$Services$Lenses$setOrganization = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.nx;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{nx: value});
		}));
var $author$project$Services$Lenses$mapOrganizationM = A2(
	$author$project$Services$Lenses$mapM_,
	function ($) {
		return $.nx;
	},
	$author$project$Services$Lenses$setOrganization);
var $author$project$Services$Lenses$setPlan = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.jv;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{jv: value});
		}));
var $author$project$Services$Lenses$mapPlan = A2(
	$author$project$Services$Lenses$map_,
	function ($) {
		return $.jv;
	},
	$author$project$Services$Lenses$setPlan);
var $author$project$Services$Lenses$setProject = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.nN;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{nN: value});
		}));
var $author$project$Services$Lenses$mapProject = A2(
	$author$project$Services$Lenses$map_,
	function ($) {
		return $.nN;
	},
	$author$project$Services$Lenses$setProject);
var $author$project$Services$Lenses$setPrompt = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.nS;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{nS: value});
		}));
var $author$project$Services$Lenses$mapPromptM = A2(
	$author$project$Services$Lenses$mapM_,
	function ($) {
		return $.nS;
	},
	$author$project$Services$Lenses$setPrompt);
var $author$project$Services$Lenses$setSave = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.fa;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{fa: value});
		}));
var $author$project$Services$Lenses$mapSaveCmd = A2(
	$author$project$Services$Lenses$mapCmd_,
	function ($) {
		return $.fa;
	},
	$author$project$Services$Lenses$setSave);
var $author$project$Services$Lenses$setSchemaAnalysis = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.oi;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{oi: value});
		}));
var $author$project$Services$Lenses$mapSchemaAnalysisM = A2(
	$author$project$Services$Lenses$mapM_,
	function ($) {
		return $.oi;
	},
	$author$project$Services$Lenses$setSchemaAnalysis);
var $author$project$Services$Lenses$mapSelected = A2(
	$author$project$Services$Lenses$map_,
	function ($) {
		return $.cy;
	},
	$author$project$Services$Lenses$setSelected);
var $author$project$Services$Lenses$setSharing = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.os;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{os: value});
		}));
var $author$project$Services$Lenses$mapSharingCmd = A2(
	$author$project$Services$Lenses$mapCmd_,
	function ($) {
		return $.os;
	},
	$author$project$Services$Lenses$setSharing);
var $author$project$Services$Lenses$setShowHiddenColumns = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.bx;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{bx: value});
		}));
var $author$project$Services$Lenses$mapShowHiddenColumns = A2(
	$author$project$Services$Lenses$map_,
	function ($) {
		return $.bx;
	},
	$author$project$Services$Lenses$setShowHiddenColumns);
var $author$project$PagesComponents$Organization_$Project_$Updates$Table$mapTablePropOrSelected = F4(
	function (defaultSchema, id, transform, tableLayouts) {
		return A2(
			$elm$core$Maybe$withDefault,
			_Utils_Tuple2(
				tableLayouts,
				$author$project$Libs$Task$send(
					$author$project$PagesComponents$Organization_$Project_$Models$Toast(
						$author$project$Services$Toasts$info(
							'Table ' + (A2($author$project$Models$Project$TableId$show, defaultSchema, id) + ' not found'))))),
			A2(
				$elm$core$Maybe$map,
				function (tableLayout) {
					return tableLayout.nU.cy ? _Utils_Tuple2(
						A4(
							$author$project$Libs$List$updateBy,
							A2(
								$elm$core$Basics$composeR,
								function ($) {
									return $.nU;
								},
								function ($) {
									return $.cy;
								}),
							true,
							transform,
							tableLayouts),
						$elm$core$Platform$Cmd$none) : _Utils_Tuple2(
						A4(
							$author$project$Libs$List$updateBy,
							function ($) {
								return $.H;
							},
							id,
							transform,
							tableLayouts),
						$elm$core$Platform$Cmd$none);
				},
				A3(
					$author$project$Libs$List$findBy,
					function ($) {
						return $.H;
					},
					id,
					tableLayouts)));
	});
var $author$project$Services$Lenses$mapTablesCmd = A2(
	$author$project$Services$Lenses$mapCmd_,
	function ($) {
		return $.oM;
	},
	$author$project$Services$Lenses$setTables);
var $author$project$Libs$List$addAt = F3(
	function (item, index, list) {
		return (_Utils_cmp(
			index,
			$elm$core$List$length(list)) > -1) ? _Utils_ap(
			list,
			_List_fromArray(
				[item])) : ((index < 0) ? A2($elm$core$List$cons, item, list) : A3(
			$elm$core$List$foldr,
			F2(
				function (a, _v0) {
					var res = _v0.a;
					var i = _v0.b;
					return _Utils_Tuple2(
						A3(
							$author$project$Libs$Bool$cond,
							_Utils_eq(i, index),
							A2(
								$elm$core$List$cons,
								item,
								A2($elm$core$List$cons, a, res)),
							A2($elm$core$List$cons, a, res)),
						i - 1);
				}),
			_Utils_Tuple2(
				_List_Nil,
				$elm$core$List$length(list) - 1),
			list).a);
	});
var $author$project$Libs$List$get = F2(
	function (index, list) {
		return (index < 0) ? $elm$core$Maybe$Nothing : $elm$core$List$head(
			A2($elm$core$List$drop, index, list));
	});
var $author$project$Libs$List$removeAt = F2(
	function (index, list) {
		return A2(
			$elm$core$List$map,
			function (_v1) {
				var a = _v1.b;
				return a;
			},
			A2(
				$elm$core$List$filter,
				function (_v0) {
					var i = _v0.a;
					return !_Utils_eq(i, index);
				},
				A2(
					$elm$core$List$indexedMap,
					F2(
						function (i, a) {
							return _Utils_Tuple2(i, a);
						}),
					list)));
	});
var $author$project$Libs$List$moveIndex = F3(
	function (from, to, list) {
		return A3(
			$author$project$Libs$Maybe$mapOrElse,
			function (v) {
				return A3(
					$author$project$Libs$List$addAt,
					v,
					to,
					A2($author$project$Libs$List$removeAt, from, list));
			},
			list,
			A2($author$project$Libs$List$get, from, list));
	});
var $author$project$Libs$List$moveBy = F4(
	function (matcher, value, position, list) {
		return A3(
			$author$project$Libs$Maybe$mapOrElse,
			function (index) {
				return A3($author$project$Libs$List$moveIndex, index, position, list);
			},
			list,
			A3($author$project$Libs$List$findIndexBy, matcher, value, list));
	});
var $author$project$Ports$MoveProjectTo = F2(
	function (a, b) {
		return {$: 14, a: a, b: b};
	});
var $author$project$Ports$moveProjectTo = F2(
	function (project, storage) {
		return $author$project$Ports$messageToJs(
			A2($author$project$Ports$MoveProjectTo, project, storage));
	});
var $author$project$PagesComponents$Organization_$Project_$Updates$Project$moveProject = F2(
	function (storage, model) {
		return model.Z.fa ? _Utils_Tuple2(
			model,
			$elm$core$Platform$Cmd$batch(
				A3(
					$author$project$Libs$Maybe$mapOrElse,
					function (p) {
						return _List_fromArray(
							[
								A2($author$project$Ports$moveProjectTo, p, storage)
							]);
					},
					_List_fromArray(
						[
							$author$project$Libs$Task$send(
							$author$project$PagesComponents$Organization_$Project_$Models$Toast(
								$author$project$Services$Toasts$warning('No project to move')))
						]),
					A2($elm$core$Maybe$map, $author$project$PagesComponents$Organization_$Project_$Models$Erd$unpack, model.lE)))) : _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
	});
var $author$project$Services$Backend$dashboardUrl = '/home';
var $author$project$Services$Backend$organizationUrl = function (organization) {
	return A3(
		$author$project$Libs$Maybe$mapOrElse,
		function (id) {
			return '/organizations/' + id;
		},
		$author$project$Services$Backend$dashboardUrl,
		A2(
			$author$project$Libs$Maybe$filter,
			function (id) {
				return !_Utils_eq(id, $author$project$Models$OrganizationId$zero);
			},
			organization));
};
var $author$project$Libs$List$dropRight = F2(
	function (n, list) {
		return A2(
			$elm$core$List$take,
			$elm$core$List$length(list) - n,
			list);
	});
var $author$project$Models$Project$ColumnPath$parent = function (path) {
	return $author$project$Libs$Nel$fromList(
		A2(
			$author$project$Libs$List$dropRight,
			1,
			$author$project$Libs$Nel$toList(path)));
};
var $author$project$Track$searchClicked = F3(
	function (kind, shown, erd) {
		return A3(
			$author$project$Track$createEvent,
			'editor_search_clicked',
			_List_fromArray(
				[
					_Utils_Tuple2(
					'kind',
					$elm$json$Json$Encode$string(kind)),
					_Utils_Tuple2(
					'shown',
					$elm$json$Json$Encode$bool(shown))
				]),
			A2(
				$elm$core$Maybe$map,
				function ($) {
					return $.nN;
				},
				erd));
	});
var $author$project$Services$Lenses$setCollapsed = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.cS;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{cS: value});
		}));
var $author$project$Services$Lenses$setColors = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.eg;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{eg: value});
		}));
var $author$project$Services$Lenses$setConfirm = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.b8;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{b8: value});
		}));
var $author$project$Services$Lenses$setDragging = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.ep;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{ep: value});
		}));
var $author$project$Services$Lenses$setInput = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.eF;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{eF: value});
		}));
var $author$project$Services$Lenses$setLast = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.iZ;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{iZ: value});
		}));
var $author$project$Services$Lenses$setModal = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.mS;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{mS: value});
		}));
var $author$project$Services$Lenses$setName = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.eS;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{eS: value});
		}));
var $author$project$Services$Lenses$setOpenedDropdown = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.jo;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{jo: value});
		}));
var $author$project$Services$Lenses$setOpenedPopover = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.eX;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{eX: value});
		}));
var $author$project$PagesComponents$Organization_$Project_$Components$AmlSidebar$setOtherSourcesTableIdsCache = F2(
	function (sourceId, model) {
		return A2(
			$author$project$Services$Lenses$mapAmlSidebarM,
			function (v) {
				return _Utils_update(
					v,
					{
						g_: A2($author$project$PagesComponents$Organization_$Project_$Components$AmlSidebar$getOtherSourcesTableIds, sourceId, model.lE)
					});
			},
			model);
	});
var $author$project$PagesComponents$Organization_$Project_$Components$AmlSidebar$setSource = F2(
	function (source, model) {
		return A2(
			$author$project$Services$Lenses$setSelected,
			A2(
				$elm$core$Maybe$map,
				function ($) {
					return $.H;
				},
				source),
			model);
	});
var $author$project$Services$Lenses$setText = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.fp;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{fp: value});
		}));
var $elm$core$Array$repeat = F2(
	function (n, e) {
		return A2(
			$elm$core$Array$initialize,
			n,
			function (_v0) {
				return e;
			});
	});
var $truqu$elm_md5$MD5$emptyWords = A2($elm$core$Array$repeat, 16, 0);
var $truqu$elm_md5$MD5$addUnsigned = F2(
	function (x, y) {
		return 4294967295 & (x + y);
	});
var $truqu$elm_md5$MD5$rotateLeft = F2(
	function (bits, input) {
		return (input << bits) | (input >>> (32 - bits));
	});
var $truqu$elm_md5$MD5$cmn = F8(
	function (fun, a, b, c, d, x, s, ac) {
		return A2(
			$truqu$elm_md5$MD5$addUnsigned,
			b,
			A2(
				$truqu$elm_md5$MD5$rotateLeft,
				s,
				A2(
					$truqu$elm_md5$MD5$addUnsigned,
					a,
					A2(
						$truqu$elm_md5$MD5$addUnsigned,
						ac,
						A2(
							$truqu$elm_md5$MD5$addUnsigned,
							A3(fun, b, c, d),
							x)))));
	});
var $truqu$elm_md5$MD5$f = F3(
	function (x, y, z) {
		return z ^ (x & (y ^ z));
	});
var $truqu$elm_md5$MD5$ff = F7(
	function (a, b, c, d, x, s, ac) {
		return A8($truqu$elm_md5$MD5$cmn, $truqu$elm_md5$MD5$f, a, b, c, d, x, s, ac);
	});
var $truqu$elm_md5$MD5$g = F3(
	function (x, y, z) {
		return y ^ (z & (x ^ y));
	});
var $truqu$elm_md5$MD5$gg = F7(
	function (a, b, c, d, x, s, ac) {
		return A8($truqu$elm_md5$MD5$cmn, $truqu$elm_md5$MD5$g, a, b, c, d, x, s, ac);
	});
var $truqu$elm_md5$MD5$h = F3(
	function (x, y, z) {
		return z ^ (x ^ y);
	});
var $truqu$elm_md5$MD5$hh = F7(
	function (a, b, c, d, x, s, ac) {
		return A8($truqu$elm_md5$MD5$cmn, $truqu$elm_md5$MD5$h, a, b, c, d, x, s, ac);
	});
var $truqu$elm_md5$MD5$i = F3(
	function (x, y, z) {
		return y ^ (x | (~z));
	});
var $truqu$elm_md5$MD5$ii = F7(
	function (a, b, c, d, x, s, ac) {
		return A8($truqu$elm_md5$MD5$cmn, $truqu$elm_md5$MD5$i, a, b, c, d, x, s, ac);
	});
var $truqu$elm_md5$MD5$hex_ = F2(
	function (xs, acc) {
		var a = acc.d6;
		var b = acc.ea;
		var c = acc.ec;
		var d = acc.em;
		if ((((((((((((((((xs.b && xs.b.b) && xs.b.b.b) && xs.b.b.b.b) && xs.b.b.b.b.b) && xs.b.b.b.b.b.b) && xs.b.b.b.b.b.b.b) && xs.b.b.b.b.b.b.b.b) && xs.b.b.b.b.b.b.b.b.b) && xs.b.b.b.b.b.b.b.b.b.b) && xs.b.b.b.b.b.b.b.b.b.b.b) && xs.b.b.b.b.b.b.b.b.b.b.b.b) && xs.b.b.b.b.b.b.b.b.b.b.b.b.b) && xs.b.b.b.b.b.b.b.b.b.b.b.b.b.b) && xs.b.b.b.b.b.b.b.b.b.b.b.b.b.b.b) && xs.b.b.b.b.b.b.b.b.b.b.b.b.b.b.b.b) && (!xs.b.b.b.b.b.b.b.b.b.b.b.b.b.b.b.b.b)) {
			var x0 = xs.a;
			var _v1 = xs.b;
			var x1 = _v1.a;
			var _v2 = _v1.b;
			var x2 = _v2.a;
			var _v3 = _v2.b;
			var x3 = _v3.a;
			var _v4 = _v3.b;
			var x4 = _v4.a;
			var _v5 = _v4.b;
			var x5 = _v5.a;
			var _v6 = _v5.b;
			var x6 = _v6.a;
			var _v7 = _v6.b;
			var x7 = _v7.a;
			var _v8 = _v7.b;
			var x8 = _v8.a;
			var _v9 = _v8.b;
			var x9 = _v9.a;
			var _v10 = _v9.b;
			var x10 = _v10.a;
			var _v11 = _v10.b;
			var x11 = _v11.a;
			var _v12 = _v11.b;
			var x12 = _v12.a;
			var _v13 = _v12.b;
			var x13 = _v13.a;
			var _v14 = _v13.b;
			var x14 = _v14.a;
			var _v15 = _v14.b;
			var x15 = _v15.a;
			var s44 = 21;
			var s43 = 15;
			var s42 = 10;
			var s41 = 6;
			var s34 = 23;
			var s33 = 16;
			var s32 = 11;
			var s31 = 4;
			var s24 = 20;
			var s23 = 14;
			var s22 = 9;
			var s21 = 5;
			var s14 = 22;
			var s13 = 17;
			var s12 = 12;
			var s11 = 7;
			var d00 = d;
			var c00 = c;
			var b00 = b;
			var a00 = a;
			var a01 = A7($truqu$elm_md5$MD5$ff, a00, b00, c00, d00, x0, s11, 3614090360);
			var d01 = A7($truqu$elm_md5$MD5$ff, d00, a01, b00, c00, x1, s12, 3905402710);
			var c01 = A7($truqu$elm_md5$MD5$ff, c00, d01, a01, b00, x2, s13, 606105819);
			var b01 = A7($truqu$elm_md5$MD5$ff, b00, c01, d01, a01, x3, s14, 3250441966);
			var a02 = A7($truqu$elm_md5$MD5$ff, a01, b01, c01, d01, x4, s11, 4118548399);
			var d02 = A7($truqu$elm_md5$MD5$ff, d01, a02, b01, c01, x5, s12, 1200080426);
			var c02 = A7($truqu$elm_md5$MD5$ff, c01, d02, a02, b01, x6, s13, 2821735955);
			var b02 = A7($truqu$elm_md5$MD5$ff, b01, c02, d02, a02, x7, s14, 4249261313);
			var a03 = A7($truqu$elm_md5$MD5$ff, a02, b02, c02, d02, x8, s11, 1770035416);
			var d03 = A7($truqu$elm_md5$MD5$ff, d02, a03, b02, c02, x9, s12, 2336552879);
			var c03 = A7($truqu$elm_md5$MD5$ff, c02, d03, a03, b02, x10, s13, 4294925233);
			var b03 = A7($truqu$elm_md5$MD5$ff, b02, c03, d03, a03, x11, s14, 2304563134);
			var a04 = A7($truqu$elm_md5$MD5$ff, a03, b03, c03, d03, x12, s11, 1804603682);
			var d04 = A7($truqu$elm_md5$MD5$ff, d03, a04, b03, c03, x13, s12, 4254626195);
			var c04 = A7($truqu$elm_md5$MD5$ff, c03, d04, a04, b03, x14, s13, 2792965006);
			var b04 = A7($truqu$elm_md5$MD5$ff, b03, c04, d04, a04, x15, s14, 1236535329);
			var a05 = A7($truqu$elm_md5$MD5$gg, a04, b04, c04, d04, x1, s21, 4129170786);
			var d05 = A7($truqu$elm_md5$MD5$gg, d04, a05, b04, c04, x6, s22, 3225465664);
			var c05 = A7($truqu$elm_md5$MD5$gg, c04, d05, a05, b04, x11, s23, 643717713);
			var b05 = A7($truqu$elm_md5$MD5$gg, b04, c05, d05, a05, x0, s24, 3921069994);
			var a06 = A7($truqu$elm_md5$MD5$gg, a05, b05, c05, d05, x5, s21, 3593408605);
			var d06 = A7($truqu$elm_md5$MD5$gg, d05, a06, b05, c05, x10, s22, 38016083);
			var c06 = A7($truqu$elm_md5$MD5$gg, c05, d06, a06, b05, x15, s23, 3634488961);
			var b06 = A7($truqu$elm_md5$MD5$gg, b05, c06, d06, a06, x4, s24, 3889429448);
			var a07 = A7($truqu$elm_md5$MD5$gg, a06, b06, c06, d06, x9, s21, 568446438);
			var d07 = A7($truqu$elm_md5$MD5$gg, d06, a07, b06, c06, x14, s22, 3275163606);
			var c07 = A7($truqu$elm_md5$MD5$gg, c06, d07, a07, b06, x3, s23, 4107603335);
			var b07 = A7($truqu$elm_md5$MD5$gg, b06, c07, d07, a07, x8, s24, 1163531501);
			var a08 = A7($truqu$elm_md5$MD5$gg, a07, b07, c07, d07, x13, s21, 2850285829);
			var d08 = A7($truqu$elm_md5$MD5$gg, d07, a08, b07, c07, x2, s22, 4243563512);
			var c08 = A7($truqu$elm_md5$MD5$gg, c07, d08, a08, b07, x7, s23, 1735328473);
			var b08 = A7($truqu$elm_md5$MD5$gg, b07, c08, d08, a08, x12, s24, 2368359562);
			var a09 = A7($truqu$elm_md5$MD5$hh, a08, b08, c08, d08, x5, s31, 4294588738);
			var d09 = A7($truqu$elm_md5$MD5$hh, d08, a09, b08, c08, x8, s32, 2272392833);
			var c09 = A7($truqu$elm_md5$MD5$hh, c08, d09, a09, b08, x11, s33, 1839030562);
			var b09 = A7($truqu$elm_md5$MD5$hh, b08, c09, d09, a09, x14, s34, 4259657740);
			var a10 = A7($truqu$elm_md5$MD5$hh, a09, b09, c09, d09, x1, s31, 2763975236);
			var d10 = A7($truqu$elm_md5$MD5$hh, d09, a10, b09, c09, x4, s32, 1272893353);
			var c10 = A7($truqu$elm_md5$MD5$hh, c09, d10, a10, b09, x7, s33, 4139469664);
			var b10 = A7($truqu$elm_md5$MD5$hh, b09, c10, d10, a10, x10, s34, 3200236656);
			var a11 = A7($truqu$elm_md5$MD5$hh, a10, b10, c10, d10, x13, s31, 681279174);
			var d11 = A7($truqu$elm_md5$MD5$hh, d10, a11, b10, c10, x0, s32, 3936430074);
			var c11 = A7($truqu$elm_md5$MD5$hh, c10, d11, a11, b10, x3, s33, 3572445317);
			var b11 = A7($truqu$elm_md5$MD5$hh, b10, c11, d11, a11, x6, s34, 76029189);
			var a12 = A7($truqu$elm_md5$MD5$hh, a11, b11, c11, d11, x9, s31, 3654602809);
			var d12 = A7($truqu$elm_md5$MD5$hh, d11, a12, b11, c11, x12, s32, 3873151461);
			var c12 = A7($truqu$elm_md5$MD5$hh, c11, d12, a12, b11, x15, s33, 530742520);
			var b12 = A7($truqu$elm_md5$MD5$hh, b11, c12, d12, a12, x2, s34, 3299628645);
			var a13 = A7($truqu$elm_md5$MD5$ii, a12, b12, c12, d12, x0, s41, 4096336452);
			var d13 = A7($truqu$elm_md5$MD5$ii, d12, a13, b12, c12, x7, s42, 1126891415);
			var c13 = A7($truqu$elm_md5$MD5$ii, c12, d13, a13, b12, x14, s43, 2878612391);
			var b13 = A7($truqu$elm_md5$MD5$ii, b12, c13, d13, a13, x5, s44, 4237533241);
			var a14 = A7($truqu$elm_md5$MD5$ii, a13, b13, c13, d13, x12, s41, 1700485571);
			var d14 = A7($truqu$elm_md5$MD5$ii, d13, a14, b13, c13, x3, s42, 2399980690);
			var c14 = A7($truqu$elm_md5$MD5$ii, c13, d14, a14, b13, x10, s43, 4293915773);
			var b14 = A7($truqu$elm_md5$MD5$ii, b13, c14, d14, a14, x1, s44, 2240044497);
			var a15 = A7($truqu$elm_md5$MD5$ii, a14, b14, c14, d14, x8, s41, 1873313359);
			var d15 = A7($truqu$elm_md5$MD5$ii, d14, a15, b14, c14, x15, s42, 4264355552);
			var c15 = A7($truqu$elm_md5$MD5$ii, c14, d15, a15, b14, x6, s43, 2734768916);
			var b15 = A7($truqu$elm_md5$MD5$ii, b14, c15, d15, a15, x13, s44, 1309151649);
			var a16 = A7($truqu$elm_md5$MD5$ii, a15, b15, c15, d15, x4, s41, 4149444226);
			var d16 = A7($truqu$elm_md5$MD5$ii, d15, a16, b15, c15, x11, s42, 3174756917);
			var c16 = A7($truqu$elm_md5$MD5$ii, c15, d16, a16, b15, x2, s43, 718787259);
			var b16 = A7($truqu$elm_md5$MD5$ii, b15, c16, d16, a16, x9, s44, 3951481745);
			var b17 = A2($truqu$elm_md5$MD5$addUnsigned, b00, b16);
			var c17 = A2($truqu$elm_md5$MD5$addUnsigned, c00, c16);
			var d17 = A2($truqu$elm_md5$MD5$addUnsigned, d00, d16);
			var a17 = A2($truqu$elm_md5$MD5$addUnsigned, a00, a16);
			return {d6: a17, ea: b17, ec: c17, em: d17};
		} else {
			return acc;
		}
	});
var $elm$core$Array$getHelp = F3(
	function (shift, index, tree) {
		getHelp:
		while (true) {
			var pos = $elm$core$Array$bitMask & (index >>> shift);
			var _v0 = A2($elm$core$Elm$JsArray$unsafeGet, pos, tree);
			if (!_v0.$) {
				var subTree = _v0.a;
				var $temp$shift = shift - $elm$core$Array$shiftStep,
					$temp$index = index,
					$temp$tree = subTree;
				shift = $temp$shift;
				index = $temp$index;
				tree = $temp$tree;
				continue getHelp;
			} else {
				var values = _v0.a;
				return A2($elm$core$Elm$JsArray$unsafeGet, $elm$core$Array$bitMask & index, values);
			}
		}
	});
var $elm$core$Array$tailIndex = function (len) {
	return (len >>> 5) << 5;
};
var $elm$core$Array$get = F2(
	function (index, _v0) {
		var len = _v0.a;
		var startShift = _v0.b;
		var tree = _v0.c;
		var tail = _v0.d;
		return ((index < 0) || (_Utils_cmp(index, len) > -1)) ? $elm$core$Maybe$Nothing : ((_Utils_cmp(
			index,
			$elm$core$Array$tailIndex(len)) > -1) ? $elm$core$Maybe$Just(
			A2($elm$core$Elm$JsArray$unsafeGet, $elm$core$Array$bitMask & index, tail)) : $elm$core$Maybe$Just(
			A3($elm$core$Array$getHelp, startShift, index, tree)));
	});
var $truqu$elm_md5$MD5$iget = F2(
	function (index, array) {
		return A2(
			$elm$core$Maybe$withDefault,
			0,
			A2($elm$core$Array$get, index, array));
	});
var $elm$core$Array$setHelp = F4(
	function (shift, index, value, tree) {
		var pos = $elm$core$Array$bitMask & (index >>> shift);
		var _v0 = A2($elm$core$Elm$JsArray$unsafeGet, pos, tree);
		if (!_v0.$) {
			var subTree = _v0.a;
			var newSub = A4($elm$core$Array$setHelp, shift - $elm$core$Array$shiftStep, index, value, subTree);
			return A3(
				$elm$core$Elm$JsArray$unsafeSet,
				pos,
				$elm$core$Array$SubTree(newSub),
				tree);
		} else {
			var values = _v0.a;
			var newLeaf = A3($elm$core$Elm$JsArray$unsafeSet, $elm$core$Array$bitMask & index, value, values);
			return A3(
				$elm$core$Elm$JsArray$unsafeSet,
				pos,
				$elm$core$Array$Leaf(newLeaf),
				tree);
		}
	});
var $elm$core$Array$set = F3(
	function (index, value, array) {
		var len = array.a;
		var startShift = array.b;
		var tree = array.c;
		var tail = array.d;
		return ((index < 0) || (_Utils_cmp(index, len) > -1)) ? array : ((_Utils_cmp(
			index,
			$elm$core$Array$tailIndex(len)) > -1) ? A4(
			$elm$core$Array$Array_elm_builtin,
			len,
			startShift,
			tree,
			A3($elm$core$Elm$JsArray$unsafeSet, $elm$core$Array$bitMask & index, value, tail)) : A4(
			$elm$core$Array$Array_elm_builtin,
			len,
			startShift,
			A4($elm$core$Array$setHelp, startShift, index, value, tree),
			tail));
	});
var $truqu$elm_md5$MD5$consume = F2(
	function (_char, _v0) {
		var hashState = _v0.a;
		var _v1 = _v0.b;
		var byteCount = _v1.a;
		var words = _v1.b;
		var totalByteCount = _v0.c;
		var wordCount = (byteCount / 4) | 0;
		var oldWord = A2($truqu$elm_md5$MD5$iget, wordCount, words);
		var bytePosition = 8 * (byteCount % 4);
		var code = _char << bytePosition;
		var newWord = oldWord | code;
		var newWords = A3($elm$core$Array$set, wordCount, newWord, words);
		return (byteCount === 63) ? _Utils_Tuple3(
			A2(
				$truqu$elm_md5$MD5$hex_,
				$elm$core$Array$toList(newWords),
				hashState),
			_Utils_Tuple2(0, $truqu$elm_md5$MD5$emptyWords),
			totalByteCount + 1) : _Utils_Tuple3(
			hashState,
			_Utils_Tuple2(byteCount + 1, newWords),
			totalByteCount + 1);
	});
var $truqu$elm_md5$MD5$finishUp = function (_v0) {
	var hashState = _v0.a;
	var _v1 = _v0.b;
	var byteCount = _v1.a;
	var words = _v1.b;
	var totalByteCount = _v0.c;
	var wordCount = (byteCount / 4) | 0;
	var oldWord = A2($truqu$elm_md5$MD5$iget, wordCount, words);
	var bytePosition = 8 * (byteCount % 4);
	var code = 128 << bytePosition;
	var newWord = oldWord | code;
	var newWords = A3($elm$core$Array$set, wordCount, newWord, words);
	return (wordCount < 14) ? function (x) {
		return A2($truqu$elm_md5$MD5$hex_, x, hashState);
	}(
		$elm$core$Array$toList(
			A3(
				$elm$core$Array$set,
				15,
				totalByteCount >>> 29,
				A3($elm$core$Array$set, 14, totalByteCount << 3, newWords)))) : function (x) {
		return A2(
			$truqu$elm_md5$MD5$hex_,
			x,
			A2(
				$truqu$elm_md5$MD5$hex_,
				$elm$core$Array$toList(newWords),
				hashState));
	}(
		$elm$core$Array$toList(
			A3(
				$elm$core$Array$set,
				15,
				totalByteCount >>> 29,
				A3($elm$core$Array$set, 14, totalByteCount << 3, $truqu$elm_md5$MD5$emptyWords))));
};
var $zwilias$elm_utf_tools$String$UTF8$utf32ToUtf8 = F3(
	function (add, _char, acc) {
		return (_char < 128) ? A2(add, _char, acc) : ((_char < 2048) ? A2(
			add,
			128 | (63 & _char),
			A2(add, 192 | (_char >>> 6), acc)) : ((_char < 65536) ? A2(
			add,
			128 | (63 & _char),
			A2(
				add,
				128 | (63 & (_char >>> 6)),
				A2(add, 224 | (_char >>> 12), acc))) : A2(
			add,
			128 | (63 & _char),
			A2(
				add,
				128 | (63 & (_char >>> 6)),
				A2(
					add,
					128 | (63 & (_char >>> 12)),
					A2(add, 240 | (_char >>> 18), acc))))));
	});
var $zwilias$elm_utf_tools$String$UTF8$foldl = F3(
	function (op, initialAcc, input) {
		return A3(
			$elm$core$String$foldl,
			F2(
				function (_char, acc) {
					return A3(
						$zwilias$elm_utf_tools$String$UTF8$utf32ToUtf8,
						op,
						$elm$core$Char$toCode(_char),
						acc);
				}),
			initialAcc,
			input);
	});
var $truqu$elm_md5$MD5$State = F4(
	function (a, b, c, d) {
		return {d6: a, ea: b, ec: c, em: d};
	});
var $truqu$elm_md5$MD5$initialHashState = A4($truqu$elm_md5$MD5$State, 1732584193, 4023233417, 2562383102, 271733878);
var $truqu$elm_md5$MD5$hash = function (input) {
	return $truqu$elm_md5$MD5$finishUp(
		A3(
			$zwilias$elm_utf_tools$String$UTF8$foldl,
			$truqu$elm_md5$MD5$consume,
			_Utils_Tuple3(
				$truqu$elm_md5$MD5$initialHashState,
				_Utils_Tuple2(0, $truqu$elm_md5$MD5$emptyWords),
				0),
			input));
};
var $truqu$elm_md5$MD5$bytes = function (string) {
	var _v0 = $truqu$elm_md5$MD5$hash(string);
	var a = _v0.d6;
	var b = _v0.ea;
	var c = _v0.ec;
	var d = _v0.em;
	return _List_fromArray(
		[a & 255, (a >>> 8) & 255, (a >>> 16) & 255, (a >>> 24) & 255, b & 255, (b >>> 8) & 255, (b >>> 16) & 255, (b >>> 24) & 255, c & 255, (c >>> 8) & 255, (c >>> 16) & 255, (c >>> 24) & 255, d & 255, (d >>> 8) & 255, (d >>> 16) & 255, (d >>> 24) & 255]);
};
var $truqu$elm_md5$MD5$toHex = function (_byte) {
	switch (_byte) {
		case 0:
			return '0';
		case 1:
			return '1';
		case 2:
			return '2';
		case 3:
			return '3';
		case 4:
			return '4';
		case 5:
			return '5';
		case 6:
			return '6';
		case 7:
			return '7';
		case 8:
			return '8';
		case 9:
			return '9';
		case 10:
			return 'a';
		case 11:
			return 'b';
		case 12:
			return 'c';
		case 13:
			return 'd';
		case 14:
			return 'e';
		case 15:
			return 'f';
		default:
			return _Utils_ap(
				$truqu$elm_md5$MD5$toHex((_byte / 16) | 0),
				$truqu$elm_md5$MD5$toHex(_byte % 16));
	}
};
var $truqu$elm_md5$MD5$hex = function (s) {
	return A3(
		$elm$core$List$foldl,
		F2(
			function (b, acc) {
				return _Utils_ap(
					acc,
					A3(
						$elm$core$String$padLeft,
						2,
						'0',
						$truqu$elm_md5$MD5$toHex(b)));
			}),
		'',
		$truqu$elm_md5$MD5$bytes(s));
};
var $author$project$Libs$String$maxSafeInteger = A2($elm$core$Basics$pow, 2, 53) - 1;
var $elm$core$String$toList = function (string) {
	return A3($elm$core$String$foldr, $elm$core$List$cons, _List_Nil, string);
};
var $author$project$Libs$String$hashCode = function (input) {
	return A3(
		$elm$core$List$foldl,
		F2(
			function (c, code) {
				return A2(
					$elm$core$Basics$modBy,
					$author$project$Libs$String$maxSafeInteger,
					(31 * code) + $elm$core$Char$toCode(c));
			}),
		7,
		$elm$core$String$toList(
			$truqu$elm_md5$MD5$hex(input)));
};
var $author$project$Libs$String$wordSplit = function (input) {
	return A3(
		$elm$core$List$foldl,
		F2(
			function (sep, words) {
				return A2(
					$elm$core$List$concatMap,
					function (word) {
						return A2($elm$core$String$split, sep, word);
					},
					words);
			}),
		_List_fromArray(
			[input]),
		_List_fromArray(
			['_', '-', ' ']));
};
var $author$project$PagesComponents$Organization_$Project_$Models$ErdTableProps$computeColor = function (_v0) {
	var table = _v0.b;
	return A2(
		$elm$core$Maybe$withDefault,
		$author$project$Libs$Tailwind$default,
		A2(
			$elm$core$Maybe$andThen,
			function (index) {
				return A2($author$project$Libs$List$get, index, $author$project$Libs$Tailwind$list);
			},
			A2(
				$elm$core$Maybe$map,
				$elm$core$Basics$modBy(
					$elm$core$List$length($author$project$Libs$Tailwind$list)),
				A2(
					$elm$core$Maybe$map,
					$author$project$Libs$String$hashCode,
					$elm$core$List$head(
						$author$project$Libs$String$wordSplit(table))))));
};
var $author$project$PagesComponents$Organization_$Project_$Models$ErdTableProps$init = F3(
	function (collapsed, hint, table) {
		return {
			cS: collapsed,
			A: $author$project$PagesComponents$Organization_$Project_$Models$ErdTableProps$computeColor(table.H),
			e$: $author$project$Models$Position$zeroGrid,
			hb: hint,
			cy: false,
			bx: false,
			ox: $author$project$Models$Size$zeroCanvas
		};
	});
var $author$project$Models$Project$ProjectSettings$hasProperty = function (c) {
	return c.iV || ($author$project$Libs$List$nonEmpty(c.iO) || ($author$project$Libs$List$nonEmpty(c.jr) || ($author$project$Libs$List$nonEmpty(c.d5) || ($author$project$Libs$List$nonEmpty(c.dg) || $author$project$Libs$List$nonEmpty(c.cQ)))));
};
var $author$project$Models$Project$ProjectSettings$hasRelation = function (column) {
	return $author$project$Libs$List$nonEmpty(column.iO) || $author$project$Libs$List$nonEmpty(column.jr);
};
var $author$project$Models$Project$ProjectSettings$hideColumn = F2(
	function (hiddenColumns, column) {
		return A2($author$project$Models$Project$ProjectSettings$removeColumn, hiddenColumns.bn, column.aA) || ((hiddenColumns.bT && (!$author$project$Models$Project$ProjectSettings$hasRelation(column))) || (hiddenColumns.nU && (!$author$project$Models$Project$ProjectSettings$hasProperty(column))));
	});
var $author$project$Models$ColumnOrder$sortOffset = function (b) {
	return b ? 0.5 : 0;
};
var $elm$core$String$toLower = _String_toLower;
var $author$project$PagesComponents$Organization_$Project_$Models$ErdColumn$withNullable = F2(
	function (column, text) {
		return column.nf ? (text + '?') : text;
	});
var $author$project$Models$ColumnOrder$sortBy = F4(
	function (order, table, relations, columns) {
		var tableRelations = A2(
			$elm$core$List$filter,
			function (r) {
				return _Utils_eq(r.ht.aq, table.H);
			},
			relations);
		switch (order) {
			case 0:
				return A2(
					$elm$core$List$sortBy,
					A2(
						$elm$core$Basics$composeR,
						$elm$core$Tuple$first,
						function ($) {
							return $.l7;
						}),
					columns);
			case 1:
				return A2(
					$elm$core$List$sortBy,
					function (_v1) {
						var c = _v1.a;
						return $author$project$Libs$Maybe$isJust(
							A2($author$project$PagesComponents$Organization_$Project_$Models$ErdTable$inPrimaryKey, table, c.aA)) ? _Utils_Tuple2(
							0 + $author$project$Models$ColumnOrder$sortOffset(c.nf),
							c.l7) : ($author$project$Libs$List$nonEmpty(
							A2($author$project$Models$Project$Relation$outRelation, tableRelations, c.aA)) ? _Utils_Tuple2(
							1 + $author$project$Models$ColumnOrder$sortOffset(c.nf),
							c.l7) : ($author$project$Libs$List$nonEmpty(
							A2($author$project$PagesComponents$Organization_$Project_$Models$ErdTable$inUniques, table, c.aA)) ? _Utils_Tuple2(
							2 + $author$project$Models$ColumnOrder$sortOffset(c.nf),
							c.l7) : ($author$project$Libs$List$nonEmpty(
							A2($author$project$PagesComponents$Organization_$Project_$Models$ErdTable$inIndexes, table, c.aA)) ? _Utils_Tuple2(
							3 + $author$project$Models$ColumnOrder$sortOffset(c.nf),
							c.l7) : _Utils_Tuple2(
							4 + $author$project$Models$ColumnOrder$sortOffset(c.nf),
							c.l7))));
					},
					columns);
			case 2:
				return A2(
					$elm$core$List$sortBy,
					A2(
						$elm$core$Basics$composeR,
						$elm$core$Tuple$first,
						A2(
							$elm$core$Basics$composeR,
							function ($) {
								return $.aA;
							},
							A2($elm$core$Basics$composeR, $author$project$Models$Project$ColumnPath$toString, $elm$core$String$toLower))),
					columns);
			default:
				return A2(
					$elm$core$List$sortBy,
					function (_v2) {
						var c = _v2.a;
						return A2(
							$author$project$PagesComponents$Organization_$Project_$Models$ErdColumn$withNullable,
							c,
							$elm$core$String$toLower(c.gi));
					},
					columns);
		}
	});
var $author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$initAll = F3(
	function (settings, relations, table) {
		var tableRelations = A2(
			$elm$core$List$filter,
			function (r) {
				return _Utils_eq(r.ht.aq, table.H);
			},
			relations);
		return A2(
			$elm$core$List$map,
			function (_v0) {
				var c = _v0.a;
				return {bd: _List_Nil, az: false, eS: c.aA.ev};
			},
			A2(
				$elm$core$List$take,
				settings.ay.mE,
				A4(
					$author$project$Models$ColumnOrder$sortBy,
					settings.cW,
					table,
					tableRelations,
					$author$project$Libs$List$zipWithIndex(
						A2(
							$author$project$Libs$List$filterNot,
							$author$project$Models$Project$ProjectSettings$hideColumn(settings.ay),
							$elm$core$Dict$values(table.M))))));
	});
var $author$project$PagesComponents$Organization_$Project_$Models$ErdTableLayout$init = F6(
	function (settings, shownTables, relations, collapsed, hint, table) {
		return {
			M: A3($author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$initAll, settings, relations, table),
			H: table.H,
			nU: A3($author$project$PagesComponents$Organization_$Project_$Models$ErdTableProps$init, collapsed, hint, table),
			n$: A2($author$project$PagesComponents$Organization_$Project_$Models$ErdTableLayout$buildRelatedTables, shownTables, relations)
		};
	});
var $author$project$PagesComponents$Organization_$Project_$Updates$Table$showAllTables = F2(
	function (now, erd) {
		var shownIds = $elm$core$Set$fromList(
			A2(
				$elm$core$List$map,
				function ($) {
					return $.H;
				},
				$author$project$PagesComponents$Organization_$Project_$Models$Erd$currentLayout(erd).oM));
		var tablesToShow = A2(
			$elm$core$List$filter,
			function (t) {
				return !A2($elm$core$Set$member, t.H, shownIds);
			},
			$elm$core$Dict$values(erd.oM));
		var newTables = A2(
			$elm$core$List$map,
			function (t) {
				return A6(
					$author$project$PagesComponents$Organization_$Project_$Models$ErdTableLayout$init,
					erd.dM,
					shownIds,
					A3($author$project$Libs$Dict$getOrElse, t.H, _List_Nil, erd.e2),
					erd.dM.cR,
					$elm$core$Maybe$Nothing,
					t);
			},
			tablesToShow);
		return _Utils_Tuple2(
			A3(
				$author$project$PagesComponents$Organization_$Project_$Models$Erd$mapCurrentLayoutWithTime,
				now,
				$author$project$Services$Lenses$mapTables(
					function (old) {
						return _Utils_ap(newTables, old);
					}),
				erd),
			$elm$core$Platform$Cmd$batch(
				_List_fromArray(
					[
						$author$project$Ports$observeTablesSize(
						A2(
							$elm$core$List$map,
							function ($) {
								return $.H;
							},
							newTables))
					])));
	});
var $author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$add = F2(
	function (path, columns) {
		return A3(
			$author$project$Libs$List$memberBy,
			function ($) {
				return $.eS;
			},
			path.ev,
			columns) ? A2(
			$elm$core$List$map,
			function (c) {
				return _Utils_eq(c.eS, path.ev) ? A3(
					$author$project$Libs$Maybe$mapOrElse,
					function (p) {
						return A2(
							$author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$mapChildren,
							$author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$add(p),
							c);
					},
					c,
					$author$project$Libs$Nel$fromList(path.oO)) : c;
			},
			columns) : _Utils_ap(
			columns,
			_List_fromArray(
				[
					{
					bd: A3(
						$author$project$Libs$Maybe$mapOrElse,
						function (p) {
							return A2($author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$add, p, _List_Nil);
						},
						_List_Nil,
						$author$project$Libs$Nel$fromList(path.oO)),
					az: false,
					eS: path.ev
				}
				]));
	});
var $author$project$PagesComponents$Organization_$Project_$Updates$Table$showColumn = F4(
	function (now, table, column, erd) {
		return A3(
			$author$project$PagesComponents$Organization_$Project_$Models$Erd$mapCurrentLayoutWithTime,
			now,
			A3(
				$author$project$Services$Lenses$mapTablesL,
				function ($) {
					return $.H;
				},
				table,
				$author$project$Services$Lenses$mapColumns(
					A2(
						$elm$core$Basics$composeR,
						$author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$remove(column),
						$author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$add(column)))),
			erd);
	});
var $author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$find = F2(
	function (path, columns) {
		return A2(
			$elm$core$Maybe$andThen,
			function (c) {
				return A3(
					$author$project$Libs$Maybe$mapOrElse,
					function (p) {
						return A2(
							$author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$find,
							p,
							$author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$children(c));
					},
					$elm$core$Maybe$Just(c),
					$author$project$Libs$Nel$fromList(path.oO));
			},
			A2(
				$author$project$Libs$List$find,
				function (c) {
					return _Utils_eq(c.eS, path.ev);
				},
				columns));
	});
var $author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$member = F2(
	function (path, columns) {
		return $author$project$Libs$Maybe$isJust(
			A2($author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$find, path, columns));
	});
var $author$project$PagesComponents$Organization_$Project_$Models$ShowColumns$filterBy = F4(
	function (kind, tableRelations, table, columns) {
		return _Utils_ap(
			columns,
			$author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$createAll(
				A2(
					$elm$core$List$map,
					function ($) {
						return $.aA;
					},
					A2(
						$elm$core$List$filter,
						function (column) {
							switch (kind.$) {
								case 0:
									return true;
								case 1:
									return $author$project$Libs$List$nonEmpty(
										A2($author$project$Models$Project$Relation$outRelation, tableRelations, column.aA));
								default:
									var cols = kind.a;
									return A2($elm$core$List$member, column.aA, cols);
							}
						},
						A2(
							$elm$core$List$filter,
							function (c) {
								return !A2($author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$member, c.aA, columns);
							},
							$elm$core$Dict$values(table.M))))));
	});
var $author$project$PagesComponents$Organization_$Project_$Models$ShowColumns$sortBy = F2(
	function (kind, columns) {
		switch (kind.$) {
			case 0:
				return columns;
			case 1:
				return columns;
			default:
				var cols = kind.a;
				var _v1 = A2(
					$elm$core$List$partition,
					function (c) {
						return A2(
							$elm$core$List$member,
							c.eS,
							A2(
								$elm$core$List$map,
								function ($) {
									return $.ev;
								},
								cols));
					},
					columns);
				var shown = _v1.a;
				var others = _v1.b;
				var shownSorted = A2(
					$elm$core$List$filterMap,
					function (path) {
						return A3(
							$author$project$Libs$List$findBy,
							function ($) {
								return $.eS;
							},
							path.ev,
							shown);
					},
					cols);
				return _Utils_ap(others, shownSorted);
		}
	});
var $author$project$PagesComponents$Organization_$Project_$Updates$Table$showColumns = F4(
	function (now, id, kind, erd) {
		return _Utils_Tuple2(
			A4(
				$author$project$PagesComponents$Organization_$Project_$Updates$Table$mapColumnsForTableOrSelectedProps,
				now,
				id,
				F2(
					function (table, columns) {
						return function (cols) {
							return A2($author$project$PagesComponents$Organization_$Project_$Models$ShowColumns$sortBy, kind, cols);
						}(
							function (tableRelations) {
								return A4($author$project$PagesComponents$Organization_$Project_$Models$ShowColumns$filterBy, kind, tableRelations, table, columns);
							}(
								A2(
									$elm$core$List$filter,
									$author$project$Models$Project$Relation$linkedToTable(id),
									erd.bT)));
					}),
				erd),
			$elm$core$Platform$Cmd$none);
	});
var $author$project$PagesComponents$Organization_$Project_$Updates$Table$guessHeight = F2(
	function (id, erd) {
		return A2(
			$elm$core$Maybe$withDefault,
			200,
			A2(
				$author$project$Libs$Maybe$orElse,
				A2(
					$elm$core$Maybe$map,
					function (t) {
						return $author$project$Conf$ui.oK + ($author$project$Conf$ui.oJ * A2(
							$elm$core$Basics$min,
							15,
							$elm$core$Dict$size(t.M)));
					},
					A2($author$project$PagesComponents$Organization_$Project_$Models$Erd$getTable, id, erd)),
				A2(
					$elm$core$Maybe$map,
					function (t) {
						return $author$project$Conf$ui.oK + ($author$project$Conf$ui.oJ * $elm$core$List$length(t.M));
					},
					A3(
						$author$project$Libs$List$findBy,
						function ($) {
							return $.H;
						},
						id,
						$author$project$PagesComponents$Organization_$Project_$Models$Erd$currentLayout(erd).oM))));
	});
var $author$project$PagesComponents$Organization_$Project_$Updates$Table$showRelatedTables = F2(
	function (id, erd) {
		return A3(
			$author$project$Libs$Maybe$mapOrElse,
			function (table) {
				var related = $author$project$Libs$List$unique(
					A2(
						$elm$core$List$map,
						function (r) {
							return _Utils_eq(r.ht.aq, id) ? r.dG.aq : r.ht.aq;
						},
						A3($author$project$Libs$Dict$getOrElse, id, _List_Nil, erd.e2)));
				var toShow = A2(
					$elm$core$List$map,
					function (t) {
						return _Utils_Tuple2(
							t,
							A2($author$project$PagesComponents$Organization_$Project_$Updates$Table$guessHeight, t, erd));
					},
					A2(
						$author$project$Libs$List$filterNot,
						function (t) {
							return A3(
								$author$project$Libs$List$memberBy,
								function ($) {
									return $.H;
								},
								t,
								$author$project$PagesComponents$Organization_$Project_$Models$Erd$currentLayout(erd).oM);
						},
						related));
				var padding = {aY: 50, aZ: 20};
				var height = A3(
					$elm$core$List$foldl,
					F2(
						function (h, acc) {
							return h + acc;
						}),
					0,
					A2(
						$elm$core$List$intersperse,
						padding.aZ,
						A2(
							$elm$core$List$map,
							function (_v4) {
								var h = _v4.b;
								return h;
							},
							toShow)));
				var _v0 = _Utils_Tuple2(
					$author$project$Models$Position$extractGrid(table.nU.e$),
					$author$project$Models$Size$extractCanvas(table.nU.ox));
				var tablePos = _v0.a;
				var tableSize = _v0.b;
				var left = (tablePos.C + tableSize.bB) + padding.aY;
				var top = (tablePos.ad + (tableSize.bj / 2)) - (height / 2);
				var shows = A3(
					$elm$core$List$foldl,
					F2(
						function (_v2, _v3) {
							var t = _v2.a;
							var h = _v2.b;
							var cur = _v3.a;
							var res = _v3.b;
							return _Utils_Tuple2(
								(cur + h) + padding.aZ,
								A2(
									$elm$core$List$cons,
									_Utils_Tuple2(
										t,
										$elm$core$Maybe$Just(
											$author$project$PagesComponents$Organization_$Project_$Models$PositionHint$PlaceAt(
												$author$project$Models$Position$grid(
													{C: left, ad: cur})))),
									res));
						}),
					_Utils_Tuple2(top, _List_Nil),
					toShow).b;
				return _Utils_Tuple2(
					erd,
					$elm$core$Platform$Cmd$batch(
						A2(
							$elm$core$List$map,
							function (_v1) {
								var t = _v1.a;
								var hint = _v1.b;
								return $author$project$Libs$Task$send(
									A2($author$project$PagesComponents$Organization_$Project_$Models$ShowTable, t, hint));
							},
							shows)));
			},
			_Utils_Tuple2(erd, $elm$core$Platform$Cmd$none),
			A3(
				$author$project$Libs$List$findBy,
				function ($) {
					return $.H;
				},
				id,
				$author$project$PagesComponents$Organization_$Project_$Models$Erd$currentLayout(erd).oM));
	});
var $author$project$PagesComponents$Organization_$Project_$Models$Erd$isShown = F2(
	function (table, erd) {
		return $author$project$Libs$Maybe$isJust(
			A2($author$project$PagesComponents$Organization_$Project_$Models$Erd$getLayoutTable, table, erd));
	});
var $author$project$Ports$observeTableSize = function (id) {
	return $author$project$Ports$observeSizes(
		_List_fromArray(
			[
				$author$project$Models$Project$TableId$toHtmlId(id)
			]));
};
var $author$project$PagesComponents$Organization_$Project_$Updates$Table$performShowTable = F4(
	function (now, table, hint, erd) {
		return A3(
			$author$project$PagesComponents$Organization_$Project_$Models$Erd$mapCurrentLayoutWithTime,
			now,
			A2(
				$elm$core$Basics$composeR,
				$author$project$Services$Lenses$mapTables(
					function (tables) {
						return A2(
							$elm$core$List$cons,
							A6(
								$author$project$PagesComponents$Organization_$Project_$Models$ErdTableLayout$init,
								erd.dM,
								$elm$core$Set$fromList(
									A2(
										$elm$core$List$map,
										function ($) {
											return $.H;
										},
										tables)),
								A3($author$project$Libs$Dict$getOrElse, table.H, _List_Nil, erd.e2),
								erd.dM.cR,
								hint,
								table),
							tables);
					}),
				$author$project$Services$Lenses$mapTables($author$project$PagesComponents$Organization_$Project_$Updates$Table$updateRelatedTables)),
			erd);
	});
var $author$project$PagesComponents$Organization_$Project_$Updates$Table$showTable = F4(
	function (now, id, hint, erd) {
		var _v0 = A2($author$project$PagesComponents$Organization_$Project_$Models$Erd$getTable, id, erd);
		if (!_v0.$) {
			var table = _v0.a;
			return A2($author$project$PagesComponents$Organization_$Project_$Models$Erd$isShown, id, erd) ? _Utils_Tuple2(
				erd,
				$author$project$Libs$Task$send(
					$author$project$PagesComponents$Organization_$Project_$Models$Toast(
						$author$project$Services$Toasts$info(
							'Table ' + (A2($author$project$Models$Project$TableId$show, erd.dM.cb, id) + ' already shown'))))) : _Utils_Tuple2(
				A4($author$project$PagesComponents$Organization_$Project_$Updates$Table$performShowTable, now, table, hint, erd),
				$elm$core$Platform$Cmd$batch(
					_List_fromArray(
						[
							$author$project$Ports$observeTableSize(table.H)
						])));
		} else {
			return _Utils_Tuple2(
				erd,
				$author$project$Libs$Task$send(
					$author$project$PagesComponents$Organization_$Project_$Models$Toast(
						$author$project$Services$Toasts$error(
							'Can\'t show table ' + (A2($author$project$Models$Project$TableId$show, erd.dM.cb, id) + ': not found')))));
		}
	});
var $author$project$PagesComponents$Organization_$Project_$Models$PositionHint$PlaceLeft = function (a) {
	return {$: 0, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Models$PositionHint$PlaceRight = F2(
	function (a, b) {
		return {$: 1, a: a, b: b};
	});
var $author$project$PagesComponents$Organization_$Project_$Models$PositionHint$move = F2(
	function (delta, hint) {
		switch (hint.$) {
			case 0:
				var pos = hint.a;
				return $author$project$PagesComponents$Organization_$Project_$Models$PositionHint$PlaceLeft(
					A2($author$project$Models$Position$moveGrid, delta, pos));
			case 1:
				var pos = hint.a;
				var size = hint.b;
				return A2(
					$author$project$PagesComponents$Organization_$Project_$Models$PositionHint$PlaceRight,
					A2($author$project$Models$Position$moveGrid, delta, pos),
					size);
			default:
				var pos = hint.a;
				return $author$project$PagesComponents$Organization_$Project_$Models$PositionHint$PlaceAt(pos);
		}
	});
var $author$project$PagesComponents$Organization_$Project_$Updates$Table$showTables = F4(
	function (now, ids, hint, erd) {
		return function (_v4) {
			var e = _v4.a;
			var _v5 = _v4.b;
			var found = _v5.a;
			var shown = _v5.b;
			var notFound = _v5.c;
			return _Utils_Tuple2(
				e,
				$elm$core$Platform$Cmd$batch(
					_List_fromArray(
						[
							$author$project$Ports$observeTablesSize(found),
							A3(
							$author$project$Libs$Bool$cond,
							$elm$core$List$isEmpty(shown),
							$elm$core$Platform$Cmd$none,
							$author$project$Libs$Task$send(
								$author$project$PagesComponents$Organization_$Project_$Models$Toast(
									$author$project$Services$Toasts$info(
										'Tables ' + (A2(
											$elm$core$String$join,
											', ',
											A2(
												$elm$core$List$map,
												$author$project$Models$Project$TableId$show(erd.dM.cb),
												shown)) + ' are already shown'))))),
							A3(
							$author$project$Libs$Bool$cond,
							$elm$core$List$isEmpty(notFound),
							$elm$core$Platform$Cmd$none,
							$author$project$Libs$Task$send(
								$author$project$PagesComponents$Organization_$Project_$Models$Toast(
									$author$project$Services$Toasts$info(
										'Can\'t show tables ' + (A2(
											$elm$core$String$join,
											', ',
											A2(
												$elm$core$List$map,
												$author$project$Models$Project$TableId$show(erd.dM.cb),
												notFound)) + ': can\'t found them')))))
						])));
		}(
			A3(
				$elm$core$List$foldl,
				F2(
					function (_v0, _v1) {
						var id = _v0.a;
						var maybeTable = _v0.b;
						var tableHint = _v0.c;
						var e = _v1.a;
						var _v2 = _v1.b;
						var found = _v2.a;
						var shown = _v2.b;
						var notFound = _v2.c;
						if (!maybeTable.$) {
							var table = maybeTable.a;
							return A2($author$project$PagesComponents$Organization_$Project_$Models$Erd$isShown, id, erd) ? _Utils_Tuple2(
								e,
								_Utils_Tuple3(
									found,
									A2($elm$core$List$cons, id, shown),
									notFound)) : _Utils_Tuple2(
								A4($author$project$PagesComponents$Organization_$Project_$Updates$Table$performShowTable, now, table, tableHint, e),
								_Utils_Tuple3(
									A2($elm$core$List$cons, id, found),
									shown,
									notFound));
						} else {
							return _Utils_Tuple2(
								e,
								_Utils_Tuple3(
									found,
									shown,
									A2($elm$core$List$cons, id, notFound)));
						}
					}),
				_Utils_Tuple2(
					erd,
					_Utils_Tuple3(_List_Nil, _List_Nil, _List_Nil)),
				A2(
					$elm$core$List$indexedMap,
					F2(
						function (i, id) {
							return _Utils_Tuple3(
								id,
								A2($author$project$PagesComponents$Organization_$Project_$Models$Erd$getTable, id, erd),
								A2(
									$elm$core$Maybe$map,
									$author$project$PagesComponents$Organization_$Project_$Models$PositionHint$move(
										{aY: 0, aZ: $author$project$Conf$ui.oK * i}),
									hint));
						}),
					ids)));
	});
var $author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$mapAllNested = F3(
	function (path, f, columns) {
		return A2(
			$elm$core$List$map,
			function (col) {
				return A2(
					$author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$mapChildren,
					A2(
						$author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$mapAllNested,
						A2($author$project$Models$Project$ColumnPath$child, col.eS, path),
						f),
					col);
			},
			A2(
				f,
				$elm$core$Maybe$Just(path),
				columns));
	});
var $author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$mapAll = F2(
	function (f, columns) {
		return A2(
			$elm$core$List$map,
			function (col) {
				return A2(
					$author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$mapChildren,
					A2(
						$author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$mapAllNested,
						$author$project$Models$Project$ColumnPath$fromString(col.eS),
						f),
					col);
			},
			A2(f, $elm$core$Maybe$Nothing, columns));
	});
var $author$project$PagesComponents$Organization_$Project_$Updates$Table$sortColumns = F4(
	function (now, id, kind, erd) {
		return _Utils_Tuple2(
			A4(
				$author$project$PagesComponents$Organization_$Project_$Updates$Table$mapColumnsForTableOrSelectedProps,
				now,
				id,
				F2(
					function (table, columns) {
						return A2(
							$author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$mapAll,
							F2(
								function (path, cols) {
									return A2(
										$elm$core$List$map,
										$elm$core$Tuple$second,
										A4(
											$author$project$Models$ColumnOrder$sortBy,
											kind,
											table,
											erd.bT,
											A2(
												$elm$core$List$filterMap,
												function (col) {
													return A2(
														$elm$core$Maybe$map,
														function (c) {
															return _Utils_Tuple2(c, col);
														},
														A2(
															$author$project$PagesComponents$Organization_$Project_$Models$ErdTable$getColumn,
															A3(
																$author$project$Libs$Maybe$mapOrElse,
																$author$project$Models$Project$ColumnPath$child(col.eS),
																$author$project$Models$Project$ColumnPath$fromString(col.eS),
																path),
															table));
												},
												cols)));
								}),
							columns);
					}),
				erd),
			$elm$core$Platform$Cmd$none);
	});
var $author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$createChildren = F2(
	function (names, column) {
		return _Utils_update(
			column,
			{
				bd: A2(
					$elm$core$List$map,
					function (name) {
						return {bd: _List_Nil, az: false, eS: name};
					},
					names)
			});
	});
var $author$project$PagesComponents$Organization_$Project_$Updates$Table$toggleNestedColumn = F5(
	function (now, id, path, open, erd) {
		return A4(
			$author$project$PagesComponents$Organization_$Project_$Updates$Table$mapColumnsForTableOrSelectedProps,
			now,
			id,
			F2(
				function (table, columns) {
					return A2(
						$author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$map,
						F2(
							function (p, col) {
								return _Utils_eq(p, path) ? (open ? A2(
									$author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$createChildren,
									A3(
										$author$project$Libs$Maybe$mapOrElse,
										function (_v0) {
											var cols = _v0;
											return A2(
												$elm$core$List$map,
												A2(
													$elm$core$Basics$composeR,
													function ($) {
														return $.aA;
													},
													$author$project$Libs$Nel$last),
												$author$project$Libs$Nel$toList(
													$author$project$Libs$Ned$values(cols)));
										},
										_List_Nil,
										A2(
											$elm$core$Maybe$andThen,
											function ($) {
												return $.M;
											},
											A2($author$project$PagesComponents$Organization_$Project_$Models$ErdTable$getColumn, path, table))),
									col) : A2($author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$createChildren, _List_Nil, col)) : col;
							}),
						columns);
				}),
			erd);
	});
var $author$project$PagesComponents$Organization_$Project_$Components$ProjectSaveDialog$Open = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $author$project$PagesComponents$Organization_$Project_$Models$UpdateProject = {$: 5};
var $elm$http$Http$expectBytesResponse = F2(
	function (toMsg, toResult) {
		return A3(
			_Http_expect,
			'arraybuffer',
			_Http_toDataView,
			A2($elm$core$Basics$composeR, toResult, toMsg));
	});
var $elm$http$Http$expectWhatever = function (toMsg) {
	return A2(
		$elm$http$Http$expectBytesResponse,
		toMsg,
		$elm$http$Http$resolve(
			function (_v0) {
				return $elm$core$Result$Ok(0);
			}));
};
var $author$project$Libs$List$one = function (list) {
	if (!list.b) {
		return $elm$core$Maybe$Nothing;
	} else {
		if (!list.b.b) {
			var a = list.a;
			return $elm$core$Maybe$Just(a);
		} else {
			return $elm$core$Maybe$Nothing;
		}
	}
};
var $elm$http$Http$post = function (r) {
	return $elm$http$Http$request(
		{kM: r.kM, lI: r.lI, f9: _List_Nil, gy: 'POST', hK: $elm$core$Maybe$Nothing, hM: $elm$core$Maybe$Nothing, o1: r.o1});
};
var $author$project$PagesComponents$Organization_$Project_$Updates$Project$triggerSaveProject = F3(
	function (urlOrganization, organizations, model) {
		var preselectedOrg = A2(
			$author$project$Libs$Maybe$orElse,
			$author$project$Libs$List$one(organizations),
			A2(
				$elm$core$Maybe$andThen,
				function (id) {
					return A3(
						$author$project$Libs$List$findBy,
						function ($) {
							return $.H;
						},
						id,
						organizations);
				},
				urlOrganization));
		return _Utils_Tuple2(
			_Utils_update(
				model,
				{ls: false}),
			A3(
				$author$project$Libs$Maybe$mapOrElse,
				function (e) {
					return A2(
						$elm$core$Maybe$withDefault,
						_Utils_eq(e.nN.H, $author$project$Models$Project$ProjectId$zero) ? $elm$core$Platform$Cmd$batch(
							_List_fromArray(
								[
									$elm$http$Http$post(
									{
										kM: $elm$http$Http$jsonBody(
											$author$project$Models$Project$encode(
												$author$project$PagesComponents$Organization_$Project_$Models$Erd$unpack(e))),
										lI: $elm$http$Http$expectWhatever(
											$elm$core$Basics$always($author$project$PagesComponents$Organization_$Project_$Models$UpdateProject)),
										o1: '/post'
									}),
									$author$project$Ports$projectDirty(false)
								])) : $author$project$Libs$Task$send(
							$author$project$PagesComponents$Organization_$Project_$Models$ProjectSaveMsg(
								A2($author$project$PagesComponents$Organization_$Project_$Components$ProjectSaveDialog$Open, e.nN.eS, preselectedOrg))),
						A2(
							$elm$core$Maybe$map,
							function (_v0) {
								return $author$project$Libs$Task$send($author$project$PagesComponents$Organization_$Project_$Models$UpdateProject);
							},
							e.nN.nx));
				},
				$elm$core$Platform$Cmd$none,
				model.lE));
	});
var $author$project$Services$Lenses$mapOpenedDropdown = A2(
	$author$project$Services$Lenses$map_,
	function ($) {
		return $.jo;
	},
	$author$project$Services$Lenses$setOpenedDropdown);
var $author$project$Components$Molecules$Dropdown$update = F2(
	function (id, model) {
		return A2(
			$author$project$Services$Lenses$mapOpenedDropdown,
			function (d) {
				return A3(
					$author$project$Libs$Bool$cond,
					_Utils_eq(d, id),
					'',
					id);
			},
			model);
	});
var $author$project$PagesComponents$Organization_$Project_$Models$AOpen = function (a) {
	return {$: 0, a: a};
};
var $author$project$Services$Lenses$setErrors = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.lG;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{lG: value});
		}));
var $author$project$PagesComponents$Organization_$Project_$Models$ShowColumns$List = function (a) {
	return {$: 2, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Models$ShowColumns = F2(
	function (a, b) {
		return {$: 19, a: a, b: b};
	});
var $author$project$PagesComponents$Organization_$Project_$Components$AmlSidebar$associateTables = F2(
	function (removed, added) {
		return (($elm$core$List$length(added) === 1) && ($elm$core$List$length(removed) === 1)) ? A2(
			$elm$core$List$map,
			function (t) {
				return _Utils_Tuple2(
					t,
					$elm$core$List$head(removed));
			},
			added) : A2(
			$elm$core$List$map,
			function (table) {
				return _Utils_Tuple2(table, $elm$core$Maybe$Nothing);
			},
			added);
	});
var $author$project$DataSources$AmlMiner$AmlAdapter$AmlSchema = F4(
	function (tables, relations, types, errors) {
		return {lG: errors, bT: relations, oM: tables, d3: types};
	});
var $author$project$DataSources$AmlMiner$AmlAdapter$AmlSchemaError = F3(
	function (row, col, problem) {
		return {fO: col, hc: problem, hl: row};
	});
var $author$project$DataSources$AmlMiner$AmlAdapter$createRelation = F3(
	function (source, from, to) {
		var toId = _Utils_Tuple2(
			A2($elm$core$Maybe$withDefault, $author$project$Conf$schema.lC, to.aI),
			to.aq);
		var fromId = _Utils_Tuple2(
			A2($elm$core$Maybe$withDefault, $author$project$Conf$schema.lC, from.aI),
			from.aq);
		return {
			H: _Utils_Tuple2(
				_Utils_Tuple2(fromId, from.bH),
				_Utils_Tuple2(toId, to.bH)),
			eS: A2(
				$author$project$DataSources$Helpers$defaultRelName,
				from.aq,
				$author$project$Models$Project$ColumnPath$fromString(from.bH)),
			jq: _List_fromArray(
				[
					{H: source, a$: _List_Nil}
				]),
			dG: {
				bH: $author$project$Models$Project$ColumnPath$fromString(to.bH),
				aq: toId
			},
			ht: {
				bH: $author$project$Models$Project$ColumnPath$fromString(from.bH),
				aq: fromId
			}
		};
	});
var $author$project$DataSources$AmlMiner$AmlAdapter$createComment = F2(
	function (source, notes) {
		return {
			jq: _List_fromArray(
				[
					{H: source, a$: _List_Nil}
				]),
			fp: notes
		};
	});
var $author$project$DataSources$AmlMiner$AmlAdapter$createColumn = F3(
	function (source, index, column) {
		return {
			M: $elm$core$Maybe$Nothing,
			h4: A2(
				$elm$core$Maybe$map,
				$author$project$DataSources$AmlMiner$AmlAdapter$createComment(source),
				column.bP),
			lf: column.lf,
			l7: index,
			gi: A2($elm$core$Maybe$withDefault, $author$project$Conf$schema.bH.o0, column.gi),
			eS: column.eS,
			nf: column.nf,
			jq: _List_fromArray(
				[
					{H: source, a$: _List_Nil}
				])
		};
	});
var $author$project$Libs$Nel$from = function (value) {
	return A2($author$project$Libs$Nel$Nel, value, _List_Nil);
};
var $author$project$DataSources$AmlMiner$AmlAdapter$createConstraint = F3(
	function (get, defaultName, columns) {
		return A3(
			$elm$core$List$foldl,
			F2(
				function (_v0, acc) {
					var name = _v0.a;
					var cols = _v0.b;
					return (name === '') ? _Utils_ap(
						A2(
							$elm$core$List$map,
							function (c) {
								return _Utils_Tuple2(
									defaultName(c.eS),
									$author$project$Libs$Nel$from(
										$author$project$Models$Project$ColumnPath$fromString(c.eS)));
							},
							cols),
						acc) : A2(
						$elm$core$List$cons,
						_Utils_Tuple2(
							name,
							A2(
								$elm$core$Maybe$withDefault,
								$author$project$Libs$Nel$from(
									$author$project$Models$Project$ColumnPath$fromString(name)),
								$author$project$Libs$Nel$fromList(
									A2(
										$elm$core$List$map,
										A2(
											$elm$core$Basics$composeR,
											function ($) {
												return $.eS;
											},
											$author$project$Models$Project$ColumnPath$fromString),
										cols)))),
						acc);
				}),
			_List_Nil,
			$elm$core$Dict$toList(
				A2(
					$author$project$Libs$List$groupBy,
					function (c) {
						return A2(
							$elm$core$Maybe$withDefault,
							'',
							get(c));
					},
					A2(
						$elm$core$List$filter,
						function (c) {
							return !_Utils_eq(
								get(c),
								$elm$core$Maybe$Nothing);
						},
						columns))));
	});
var $author$project$DataSources$AmlMiner$AmlAdapter$createPrimaryKey = F2(
	function (source, columns) {
		return A2(
			$elm$core$Maybe$map,
			function (cols) {
				return {
					M: A2($author$project$Libs$Nel$map, $author$project$Models$Project$ColumnPath$fromString, cols),
					eS: $elm$core$Maybe$Nothing,
					jq: _List_fromArray(
						[
							{H: source, a$: _List_Nil}
						])
				};
			},
			$author$project$Libs$Nel$fromList(
				A2(
					$elm$core$List$map,
					function ($) {
						return $.eS;
					},
					A2(
						$elm$core$List$filter,
						function ($) {
							return $.nL;
						},
						columns))));
	});
var $author$project$DataSources$AmlMiner$AmlAdapter$createTableId = function (table) {
	return _Utils_Tuple2(
		A2($elm$core$Maybe$withDefault, $author$project$Conf$schema.lC, table.aI),
		table.aq);
};
var $author$project$DataSources$AmlMiner$AmlAdapter$createType = F4(
	function (source, schema, name, values) {
		return {
			H: _Utils_Tuple2(
				A2($elm$core$Maybe$withDefault, $author$project$Conf$schema.lC, schema),
				name),
			eS: name,
			jq: _List_fromArray(
				[
					{H: source, a$: _List_Nil}
				]),
			a5: $author$project$Models$Project$CustomTypeValue$Enum(
				$author$project$Libs$Nel$toList(values))
		};
	});
var $author$project$Models$Project$TableId$name = function (_v0) {
	var t = _v0.b;
	return t;
};
var $author$project$Models$Project$TableId$schema = function (_v0) {
	var s = _v0.a;
	return s;
};
var $author$project$DataSources$AmlMiner$AmlAdapter$createTable = F2(
	function (source, table) {
		var id = $author$project$DataSources$AmlMiner$AmlAdapter$createTableId(table);
		return _Utils_Tuple3(
			{
				cQ: A2(
					$elm$core$List$map,
					function (_v0) {
						var name = _v0.a;
						var cols = _v0.b;
						return A4(
							$author$project$Models$Project$Check$Check,
							name,
							$author$project$Libs$Nel$toList(cols),
							$elm$core$Maybe$Nothing,
							_List_fromArray(
								[
									{H: source, a$: _List_Nil}
								]));
					},
					A3(
						$author$project$DataSources$AmlMiner$AmlAdapter$createConstraint,
						function ($) {
							return $.kY;
						},
						$author$project$DataSources$Helpers$defaultCheckName(table.aq),
						table.M)),
				M: A2(
					$author$project$Libs$Dict$fromListMap,
					function ($) {
						return $.eS;
					},
					A2(
						$elm$core$List$indexedMap,
						$author$project$DataSources$AmlMiner$AmlAdapter$createColumn(source),
						table.M)),
				h4: A2(
					$elm$core$Maybe$map,
					$author$project$DataSources$AmlMiner$AmlAdapter$createComment(source),
					table.bP),
				H: id,
				dg: A2(
					$elm$core$List$map,
					function (_v1) {
						var name = _v1.a;
						var cols = _v1.b;
						return A4(
							$author$project$Models$Project$Index$Index,
							name,
							cols,
							$elm$core$Maybe$Nothing,
							_List_fromArray(
								[
									{H: source, a$: _List_Nil}
								]));
					},
					A3(
						$author$project$DataSources$AmlMiner$AmlAdapter$createConstraint,
						function ($) {
							return $.l7;
						},
						$author$project$DataSources$Helpers$defaultIndexName(table.aq),
						table.M)),
				eS: $author$project$Models$Project$TableId$name(id),
				jq: _List_fromArray(
					[
						{H: source, a$: _List_Nil}
					]),
				nL: A2($author$project$DataSources$AmlMiner$AmlAdapter$createPrimaryKey, source, table.M),
				aI: $author$project$Models$Project$TableId$schema(id),
				d5: A2(
					$elm$core$List$map,
					function (_v2) {
						var name = _v2.a;
						var cols = _v2.b;
						return A4(
							$author$project$Models$Project$Unique$Unique,
							name,
							cols,
							$elm$core$Maybe$Nothing,
							_List_fromArray(
								[
									{H: source, a$: _List_Nil}
								]));
					},
					A3(
						$author$project$DataSources$AmlMiner$AmlAdapter$createConstraint,
						function ($) {
							return $.o$;
						},
						$author$project$DataSources$Helpers$defaultUniqueName(table.aq),
						table.M)),
				o3: table.eH
			},
			A2(
				$elm$core$List$filterMap,
				function (c) {
					return A2(
						$elm$core$Maybe$map,
						A2(
							$author$project$DataSources$AmlMiner$AmlAdapter$createRelation,
							source,
							{bH: c.eS, aI: table.aI, aq: table.aq}),
						c.lQ);
				},
				table.M),
			A2(
				$author$project$Libs$Dict$fromListMap,
				function ($) {
					return $.H;
				},
				A2(
					$elm$core$List$filterMap,
					function (c) {
						return A3(
							$elm$core$Maybe$map2,
							A2(
								$author$project$DataSources$AmlMiner$AmlAdapter$createType,
								source,
								A2($author$project$Libs$Maybe$orElse, table.aI, c.mj)),
							c.gi,
							c.o2);
					},
					table.M)));
	});
var $author$project$DataSources$AmlMiner$AmlAdapter$evolve = F3(
	function (source, statement, schema) {
		switch (statement.$) {
			case 0:
				var amlTable = statement.a;
				var _v1 = A2($author$project$DataSources$AmlMiner$AmlAdapter$createTable, source, amlTable);
				var table = _v1.a;
				var relations = _v1.b;
				var types = _v1.c;
				return A2(
					$elm$core$Maybe$withDefault,
					_Utils_update(
						schema,
						{
							bT: _Utils_ap(relations, schema.bT),
							oM: A3($elm$core$Dict$insert, table.H, table, schema.oM),
							d3: A2($elm$core$Dict$union, types, schema.d3)
						}),
					A2(
						$elm$core$Maybe$map,
						function (_v2) {
							return _Utils_update(
								schema,
								{
									lG: A2(
										$elm$core$List$cons,
										A3(
											$author$project$DataSources$AmlMiner$AmlAdapter$AmlSchemaError,
											0,
											0,
											'Table \'' + (A2($author$project$Models$Project$TableId$show, $author$project$Conf$schema.lC, table.H) + '\' is already defined')),
										schema.lG)
								});
						},
						A2($elm$core$Dict$get, table.H, schema.oM)));
			case 1:
				var amlRelation = statement.a;
				var relation = A3($author$project$DataSources$AmlMiner$AmlAdapter$createRelation, source, amlRelation.bK, amlRelation.oT);
				return _Utils_update(
					schema,
					{
						bT: A2($elm$core$List$cons, relation, schema.bT)
					});
			default:
				return schema;
		}
	});
var $author$project$Libs$Parser$problemToString = function (problem) {
	switch (problem.$) {
		case 0:
			var token = problem.a;
			return 'Expecting \'' + (token + '\'');
		case 1:
			return 'ExpectingInt';
		case 2:
			return 'ExpectingHex';
		case 3:
			return 'ExpectingOctal';
		case 4:
			return 'ExpectingBinary';
		case 5:
			return 'ExpectingFloat';
		case 6:
			return 'ExpectingNumber';
		case 7:
			return 'ExpectingVariable';
		case 8:
			var symbol = problem.a;
			return 'ExpectingSymbol \'' + (symbol + '\'');
		case 9:
			var keywork = problem.a;
			return 'ExpectingKeyword \'' + (keywork + '\'');
		case 10:
			return 'ExpectingEnd';
		case 11:
			return 'UnexpectedChar';
		case 12:
			var err = problem.a;
			return 'Problem: \'' + (err + '\'');
		default:
			return 'BadRepeat';
	}
};
var $author$project$DataSources$AmlMiner$AmlAdapter$tablesColumnsOrdered = F2(
	function (statement, tables) {
		switch (statement.$) {
			case 0:
				var table = statement.a;
				return A3(
					$elm$core$Dict$insert,
					$author$project$DataSources$AmlMiner$AmlAdapter$createTableId(table),
					A2(
						$elm$core$List$map,
						A2(
							$elm$core$Basics$composeR,
							function ($) {
								return $.eS;
							},
							$author$project$Models$Project$ColumnPath$fromString),
						table.M),
					tables);
			case 1:
				return tables;
			default:
				return tables;
		}
	});
var $author$project$DataSources$AmlMiner$AmlAdapter$buildSource = F3(
	function (source, content, result) {
		var schema = A3(
			$author$project$Libs$Result$fold,
			function (err) {
				return A4(
					$author$project$DataSources$AmlMiner$AmlAdapter$AmlSchema,
					$elm$core$Dict$empty,
					_List_Nil,
					$elm$core$Dict$empty,
					A2(
						$elm$core$List$map,
						function (e) {
							return {
								fO: e.fO,
								hc: $author$project$Libs$Parser$problemToString(e.hc),
								hl: e.hl
							};
						},
						err));
			},
			A2(
				$elm$core$List$foldl,
				$author$project$DataSources$AmlMiner$AmlAdapter$evolve(source.H),
				A4($author$project$DataSources$AmlMiner$AmlAdapter$AmlSchema, $elm$core$Dict$empty, _List_Nil, $elm$core$Dict$empty, _List_Nil)),
			result);
		var orderedColumns = A3(
			$author$project$Libs$Result$fold,
			function (_v0) {
				return $elm$core$Dict$empty;
			},
			A2($elm$core$List$foldl, $author$project$DataSources$AmlMiner$AmlAdapter$tablesColumnsOrdered, $elm$core$Dict$empty),
			result);
		return _Utils_Tuple3(
			$elm$core$List$reverse(schema.lG),
			{
				cX: content,
				ic: source.ic,
				ip: source.ip,
				iB: source.iB,
				H: source.H,
				gi: source.gi,
				eS: source.eS,
				bT: $elm$core$List$reverse(schema.bT),
				oM: schema.oM,
				d3: schema.d3,
				kb: source.kb
			},
			orderedColumns);
	});
var $author$project$PagesComponents$Organization_$Project_$Components$AmlSidebar$contentSplit = function (input) {
	return $elm$core$Array$fromList(
		A2($elm$core$String$split, '\n', input));
};
var $author$project$Libs$Tuple3$mapSecond = F2(
	function (f, _v0) {
		var a = _v0.a;
		var b = _v0.b;
		var c = _v0.c;
		return _Utils_Tuple3(
			a,
			f(b),
			c);
	});
var $author$project$Libs$List$zipBy = F3(
	function (getKey, list1, list2) {
		var dict2 = $elm$core$Dict$fromList(
			A2(
				$elm$core$List$map,
				function (a) {
					return _Utils_Tuple2(
						getKey(a),
						a);
				},
				list2));
		var dict1 = $elm$core$Dict$fromList(
			A2(
				$elm$core$List$map,
				function (a) {
					return _Utils_Tuple2(
						getKey(a),
						a);
				},
				list1));
		var only2 = A2(
			$elm$core$List$filter,
			function (a2) {
				return !A2(
					$elm$core$Dict$member,
					getKey(a2),
					dict1);
			},
			list2);
		var _v0 = A3(
			$elm$core$List$foldr,
			F2(
				function (a1, _v1) {
					var r1 = _v1.a;
					var r = _v1.b;
					return A2(
						$elm$core$Maybe$withDefault,
						_Utils_Tuple2(
							A2($elm$core$List$cons, a1, r1),
							r),
						A2(
							$elm$core$Maybe$map,
							function (a2) {
								return _Utils_Tuple2(
									r1,
									A2(
										$elm$core$List$cons,
										_Utils_Tuple2(a1, a2),
										r));
							},
							A2(
								$elm$core$Dict$get,
								getKey(a1),
								dict2)));
				}),
			_Utils_Tuple2(_List_Nil, _List_Nil),
			list1);
		var only1 = _v0.a;
		var both = _v0.b;
		return _Utils_Tuple3(only1, both, only2);
	});
var $author$project$Libs$List$diff = F3(
	function (getKey, list1, list2) {
		return A2(
			$author$project$Libs$Tuple3$mapSecond,
			$elm$core$List$filter(
				function (_v0) {
					var a1 = _v0.a;
					var a2 = _v0.b;
					return !_Utils_eq(a1, a2);
				}),
			A3($author$project$Libs$List$zipBy, getKey, list1, list2));
	});
var $author$project$DataSources$AmlMiner$AmlParser$listHelp = F2(
	function (p, revList) {
		return $elm$parser$Parser$oneOf(
			_List_fromArray(
				[
					A2(
					$elm$parser$Parser$keeper,
					$elm$parser$Parser$succeed(
						function (col) {
							return $elm$parser$Parser$Loop(
								A2($elm$core$List$cons, col, revList));
						}),
					p),
					A2(
					$elm$parser$Parser$map,
					function (_v0) {
						return $elm$parser$Parser$Done(
							$elm$core$List$reverse(revList));
					},
					$elm$parser$Parser$succeed(0))
				]));
	});
var $author$project$DataSources$AmlMiner$AmlParser$list = function (p) {
	return A2(
		$elm$parser$Parser$loop,
		_List_Nil,
		$author$project$DataSources$AmlMiner$AmlParser$listHelp(p));
};
var $author$project$DataSources$AmlMiner$AmlParser$AmlEmptyStatement = function (a) {
	return {$: 2, a: a};
};
var $author$project$DataSources$AmlMiner$AmlParser$AmlRelationStatement = function (a) {
	return {$: 1, a: a};
};
var $author$project$DataSources$AmlMiner$AmlParser$AmlTableStatement = function (a) {
	return {$: 0, a: a};
};
var $author$project$DataSources$AmlMiner$AmlParser$until = function (stop) {
	return $elm$parser$Parser$getChompedString(
		$elm$parser$Parser$chompWhile(
			function (c) {
				return !A2($elm$core$List$member, c, stop);
			}));
};
var $author$project$DataSources$AmlMiner$AmlParser$quoted = F2(
	function (first, last) {
		return A2(
			$elm$parser$Parser$keeper,
			A2(
				$elm$parser$Parser$ignorer,
				$elm$parser$Parser$succeed($elm$core$Basics$identity),
				$elm$parser$Parser$chompIf(
					function (c) {
						return _Utils_eq(c, first);
					})),
			A2(
				$elm$parser$Parser$ignorer,
				$author$project$DataSources$AmlMiner$AmlParser$until(
					_List_fromArray(
						[last])),
				$elm$parser$Parser$chompIf(
					function (c) {
						return _Utils_eq(c, last);
					})));
	});
var $author$project$DataSources$AmlMiner$AmlParser$spaces = $elm$parser$Parser$chompWhile(
	function (c) {
		return c === ' ';
	});
var $author$project$DataSources$AmlMiner$AmlParser$comment = A2(
	$elm$parser$Parser$keeper,
	A2(
		$elm$parser$Parser$ignorer,
		A2(
			$elm$parser$Parser$ignorer,
			$elm$parser$Parser$succeed($elm$core$String$trim),
			$elm$parser$Parser$symbol('#')),
		$author$project$DataSources$AmlMiner$AmlParser$spaces),
	$elm$parser$Parser$oneOf(
		_List_fromArray(
			[
				A2($author$project$DataSources$AmlMiner$AmlParser$quoted, '\"', '\"'),
				$author$project$DataSources$AmlMiner$AmlParser$until(
				_List_fromArray(
					['\n']))
			])));
var $author$project$DataSources$AmlMiner$AmlParser$endOfLine = $elm$parser$Parser$symbol('\n');
var $author$project$DataSources$AmlMiner$AmlParser$maybe = function (p) {
	return $elm$parser$Parser$oneOf(
		_List_fromArray(
			[
				A2(
				$elm$parser$Parser$keeper,
				$elm$parser$Parser$succeed($elm$core$Maybe$Just),
				p),
				$elm$parser$Parser$succeed($elm$core$Maybe$Nothing)
			]));
};
var $author$project$DataSources$AmlMiner$AmlParser$empty = A2(
	$elm$parser$Parser$keeper,
	$elm$parser$Parser$succeed(
		function (coms) {
			return {h4: coms};
		}),
	A2(
		$elm$parser$Parser$ignorer,
		$author$project$DataSources$AmlMiner$AmlParser$maybe(
			A2(
				$elm$parser$Parser$keeper,
				$elm$parser$Parser$succeed($elm$core$Basics$identity),
				A2($elm$parser$Parser$ignorer, $author$project$DataSources$AmlMiner$AmlParser$comment, $author$project$DataSources$AmlMiner$AmlParser$spaces))),
		$author$project$DataSources$AmlMiner$AmlParser$endOfLine));
var $author$project$DataSources$AmlMiner$AmlParser$untilNonEmpty = function (stop) {
	return A2(
		$elm$parser$Parser$keeper,
		A2(
			$elm$parser$Parser$keeper,
			$elm$parser$Parser$succeed(
				F2(
					function (first, others) {
						return _Utils_ap(first, others);
					})),
			$elm$parser$Parser$getChompedString(
				$elm$parser$Parser$chompIf(
					function (c) {
						return !A2($elm$core$List$member, c, stop);
					}))),
		$author$project$DataSources$AmlMiner$AmlParser$until(stop));
};
var $author$project$DataSources$AmlMiner$AmlParser$columnName = $elm$parser$Parser$oneOf(
	_List_fromArray(
		[
			A2($author$project$DataSources$AmlMiner$AmlParser$quoted, '\"', '\"'),
			$author$project$DataSources$AmlMiner$AmlParser$untilNonEmpty(
			_List_fromArray(
				['.', ' ', '\n']))
		]));
var $author$project$DataSources$AmlMiner$AmlParser$schemaName = $elm$parser$Parser$oneOf(
	_List_fromArray(
		[
			A2($author$project$DataSources$AmlMiner$AmlParser$quoted, '\"', '\"'),
			$author$project$DataSources$AmlMiner$AmlParser$untilNonEmpty(
			_List_fromArray(
				['.', ' ', '\n', '*']))
		]));
var $author$project$DataSources$AmlMiner$AmlParser$tableName = $elm$parser$Parser$oneOf(
	_List_fromArray(
		[
			A2($author$project$DataSources$AmlMiner$AmlParser$quoted, '\"', '\"'),
			$author$project$DataSources$AmlMiner$AmlParser$untilNonEmpty(
			_List_fromArray(
				['.', ' ', '\n', '*']))
		]));
var $author$project$DataSources$AmlMiner$AmlParser$columnRef = A2(
	$elm$parser$Parser$keeper,
	A2(
		$elm$parser$Parser$keeper,
		A2(
			$elm$parser$Parser$keeper,
			$elm$parser$Parser$succeed(
				F3(
					function (name1, name2, name3) {
						return A2(
							$elm$core$Maybe$withDefault,
							{bH: name2, aI: $elm$core$Maybe$Nothing, aq: name1},
							A2(
								$elm$core$Maybe$map,
								function (c) {
									return {
										bH: c,
										aI: $elm$core$Maybe$Just(name1),
										aq: name2
									};
								},
								name3));
					})),
			A2(
				$elm$parser$Parser$ignorer,
				$author$project$DataSources$AmlMiner$AmlParser$schemaName,
				$elm$parser$Parser$symbol('.'))),
		$author$project$DataSources$AmlMiner$AmlParser$tableName),
	$author$project$DataSources$AmlMiner$AmlParser$maybe(
		A2(
			$elm$parser$Parser$keeper,
			A2(
				$elm$parser$Parser$ignorer,
				$elm$parser$Parser$succeed($elm$core$Basics$identity),
				$elm$parser$Parser$symbol('.')),
			$author$project$DataSources$AmlMiner$AmlParser$columnName)));
var $author$project$DataSources$AmlMiner$AmlParser$symbolI = function (s) {
	return $elm$parser$Parser$oneOf(
		_List_fromArray(
			[
				$elm$parser$Parser$symbol(
				$elm$core$String$toLower(s)),
				$elm$parser$Parser$symbol(
				$elm$core$String$toUpper(s))
			]));
};
var $author$project$DataSources$AmlMiner$AmlParser$relation = A2(
	$elm$parser$Parser$keeper,
	A2(
		$elm$parser$Parser$keeper,
		A2(
			$elm$parser$Parser$keeper,
			A2(
				$elm$parser$Parser$ignorer,
				A2(
					$elm$parser$Parser$ignorer,
					$elm$parser$Parser$succeed(
						F3(
							function (from, to, coms) {
								return {h4: coms, bK: from, oT: to};
							})),
					$author$project$DataSources$AmlMiner$AmlParser$symbolI('fk')),
				$author$project$DataSources$AmlMiner$AmlParser$spaces),
			A2(
				$elm$parser$Parser$ignorer,
				A2(
					$elm$parser$Parser$ignorer,
					A2($elm$parser$Parser$ignorer, $author$project$DataSources$AmlMiner$AmlParser$columnRef, $author$project$DataSources$AmlMiner$AmlParser$spaces),
					$elm$parser$Parser$symbol('->')),
				$author$project$DataSources$AmlMiner$AmlParser$spaces)),
		A2($elm$parser$Parser$ignorer, $author$project$DataSources$AmlMiner$AmlParser$columnRef, $author$project$DataSources$AmlMiner$AmlParser$spaces)),
	A2(
		$elm$parser$Parser$ignorer,
		$author$project$DataSources$AmlMiner$AmlParser$maybe(
			A2(
				$elm$parser$Parser$keeper,
				$elm$parser$Parser$succeed($elm$core$Basics$identity),
				A2($elm$parser$Parser$ignorer, $author$project$DataSources$AmlMiner$AmlParser$comment, $author$project$DataSources$AmlMiner$AmlParser$spaces))),
		$author$project$DataSources$AmlMiner$AmlParser$endOfLine));
var $elm$parser$Parser$Forbidden = 0;
var $author$project$DataSources$AmlMiner$AmlParser$property = A2(
	$elm$parser$Parser$keeper,
	A2(
		$elm$parser$Parser$keeper,
		$elm$parser$Parser$succeed(
			F2(
				function (key, value) {
					return _Utils_Tuple2(
						key,
						A2($elm$core$Maybe$withDefault, '', value));
				})),
		A2(
			$elm$parser$Parser$ignorer,
			$elm$parser$Parser$oneOf(
				_List_fromArray(
					[
						A2($author$project$DataSources$AmlMiner$AmlParser$quoted, '\"', '\"'),
						$author$project$DataSources$AmlMiner$AmlParser$untilNonEmpty(
						_List_fromArray(
							[' ', '=', ',', '}']))
					])),
			$author$project$DataSources$AmlMiner$AmlParser$spaces)),
	$author$project$DataSources$AmlMiner$AmlParser$maybe(
		A2(
			$elm$parser$Parser$keeper,
			A2(
				$elm$parser$Parser$ignorer,
				A2(
					$elm$parser$Parser$ignorer,
					$elm$parser$Parser$succeed($elm$core$Basics$identity),
					$elm$parser$Parser$symbol('=')),
				$author$project$DataSources$AmlMiner$AmlParser$spaces),
			$elm$parser$Parser$oneOf(
				_List_fromArray(
					[
						A2($author$project$DataSources$AmlMiner$AmlParser$quoted, '\"', '\"'),
						$author$project$DataSources$AmlMiner$AmlParser$until(
						_List_fromArray(
							[' ', ',', '}']))
					])))));
var $elm$parser$Parser$Advanced$revAlways = F2(
	function (_v0, b) {
		return b;
	});
var $elm$parser$Parser$Advanced$skip = F2(
	function (iParser, kParser) {
		return A3($elm$parser$Parser$Advanced$map2, $elm$parser$Parser$Advanced$revAlways, iParser, kParser);
	});
var $elm$parser$Parser$Advanced$sequenceEndForbidden = F5(
	function (ender, ws, parseItem, sep, revItems) {
		var chompRest = function (item) {
			return A5(
				$elm$parser$Parser$Advanced$sequenceEndForbidden,
				ender,
				ws,
				parseItem,
				sep,
				A2($elm$core$List$cons, item, revItems));
		};
		return A2(
			$elm$parser$Parser$Advanced$skip,
			ws,
			$elm$parser$Parser$Advanced$oneOf(
				_List_fromArray(
					[
						A2(
						$elm$parser$Parser$Advanced$skip,
						sep,
						A2(
							$elm$parser$Parser$Advanced$skip,
							ws,
							A2(
								$elm$parser$Parser$Advanced$map,
								function (item) {
									return $elm$parser$Parser$Advanced$Loop(
										A2($elm$core$List$cons, item, revItems));
								},
								parseItem))),
						A2(
						$elm$parser$Parser$Advanced$map,
						function (_v0) {
							return $elm$parser$Parser$Advanced$Done(
								$elm$core$List$reverse(revItems));
						},
						ender)
					])));
	});
var $elm$parser$Parser$Advanced$sequenceEndMandatory = F4(
	function (ws, parseItem, sep, revItems) {
		return $elm$parser$Parser$Advanced$oneOf(
			_List_fromArray(
				[
					A2(
					$elm$parser$Parser$Advanced$map,
					function (item) {
						return $elm$parser$Parser$Advanced$Loop(
							A2($elm$core$List$cons, item, revItems));
					},
					A2(
						$elm$parser$Parser$Advanced$ignorer,
						parseItem,
						A2(
							$elm$parser$Parser$Advanced$ignorer,
							ws,
							A2($elm$parser$Parser$Advanced$ignorer, sep, ws)))),
					A2(
					$elm$parser$Parser$Advanced$map,
					function (_v0) {
						return $elm$parser$Parser$Advanced$Done(
							$elm$core$List$reverse(revItems));
					},
					$elm$parser$Parser$Advanced$succeed(0))
				]));
	});
var $elm$parser$Parser$Advanced$sequenceEndOptional = F5(
	function (ender, ws, parseItem, sep, revItems) {
		var parseEnd = A2(
			$elm$parser$Parser$Advanced$map,
			function (_v0) {
				return $elm$parser$Parser$Advanced$Done(
					$elm$core$List$reverse(revItems));
			},
			ender);
		return A2(
			$elm$parser$Parser$Advanced$skip,
			ws,
			$elm$parser$Parser$Advanced$oneOf(
				_List_fromArray(
					[
						A2(
						$elm$parser$Parser$Advanced$skip,
						sep,
						A2(
							$elm$parser$Parser$Advanced$skip,
							ws,
							$elm$parser$Parser$Advanced$oneOf(
								_List_fromArray(
									[
										A2(
										$elm$parser$Parser$Advanced$map,
										function (item) {
											return $elm$parser$Parser$Advanced$Loop(
												A2($elm$core$List$cons, item, revItems));
										},
										parseItem),
										parseEnd
									])))),
						parseEnd
					])));
	});
var $elm$parser$Parser$Advanced$sequenceEnd = F5(
	function (ender, ws, parseItem, sep, trailing) {
		var chompRest = function (item) {
			switch (trailing) {
				case 0:
					return A2(
						$elm$parser$Parser$Advanced$loop,
						_List_fromArray(
							[item]),
						A4($elm$parser$Parser$Advanced$sequenceEndForbidden, ender, ws, parseItem, sep));
				case 1:
					return A2(
						$elm$parser$Parser$Advanced$loop,
						_List_fromArray(
							[item]),
						A4($elm$parser$Parser$Advanced$sequenceEndOptional, ender, ws, parseItem, sep));
				default:
					return A2(
						$elm$parser$Parser$Advanced$ignorer,
						A2(
							$elm$parser$Parser$Advanced$skip,
							ws,
							A2(
								$elm$parser$Parser$Advanced$skip,
								sep,
								A2(
									$elm$parser$Parser$Advanced$skip,
									ws,
									A2(
										$elm$parser$Parser$Advanced$loop,
										_List_fromArray(
											[item]),
										A3($elm$parser$Parser$Advanced$sequenceEndMandatory, ws, parseItem, sep))))),
						ender);
			}
		};
		return $elm$parser$Parser$Advanced$oneOf(
			_List_fromArray(
				[
					A2($elm$parser$Parser$Advanced$andThen, chompRest, parseItem),
					A2(
					$elm$parser$Parser$Advanced$map,
					function (_v0) {
						return _List_Nil;
					},
					ender)
				]));
	});
var $elm$parser$Parser$Advanced$sequence = function (i) {
	return A2(
		$elm$parser$Parser$Advanced$skip,
		$elm$parser$Parser$Advanced$token(i.hu),
		A2(
			$elm$parser$Parser$Advanced$skip,
			i.jZ,
			A5(
				$elm$parser$Parser$Advanced$sequenceEnd,
				$elm$parser$Parser$Advanced$token(i.ir),
				i.jZ,
				i.f,
				$elm$parser$Parser$Advanced$token(i.jV),
				i.j7)));
};
var $elm$parser$Parser$Advanced$Forbidden = 0;
var $elm$parser$Parser$Advanced$Mandatory = 2;
var $elm$parser$Parser$Advanced$Optional = 1;
var $elm$parser$Parser$toAdvancedTrailing = function (trailing) {
	switch (trailing) {
		case 0:
			return 0;
		case 1:
			return 1;
		default:
			return 2;
	}
};
var $elm$parser$Parser$Expecting = function (a) {
	return {$: 0, a: a};
};
var $elm$parser$Parser$toToken = function (str) {
	return A2(
		$elm$parser$Parser$Advanced$Token,
		str,
		$elm$parser$Parser$Expecting(str));
};
var $elm$parser$Parser$sequence = function (i) {
	return $elm$parser$Parser$Advanced$sequence(
		{
			ir: $elm$parser$Parser$toToken(i.ir),
			f: i.f,
			jV: $elm$parser$Parser$toToken(i.jV),
			jZ: i.jZ,
			hu: $elm$parser$Parser$toToken(i.hu),
			j7: $elm$parser$Parser$toAdvancedTrailing(i.j7)
		});
};
var $author$project$DataSources$AmlMiner$AmlParser$properties = A2(
	$elm$parser$Parser$map,
	$elm$core$Dict$fromList,
	$elm$parser$Parser$sequence(
		{ir: '}', f: $author$project$DataSources$AmlMiner$AmlParser$property, jV: ',', jZ: $author$project$DataSources$AmlMiner$AmlParser$spaces, hu: '{', j7: 0}));
var $author$project$DataSources$AmlMiner$AmlParser$columnProps = A2(
	$elm$parser$Parser$andThen,
	A2(
		$elm$core$Dict$foldl,
		F3(
			function (k, v, acc) {
				if (k === 'hidden') {
					return (v === '') ? A2(
						$elm$parser$Parser$map,
						function (a) {
							return _Utils_update(
								a,
								{gc: true});
						},
						acc) : $elm$parser$Parser$problem('Property \'hidden\' should have no value');
				} else {
					return $elm$parser$Parser$problem('Unknown property \'' + (k + '\''));
				}
			}),
		$elm$parser$Parser$succeed(
			{gc: false})),
	$author$project$DataSources$AmlMiner$AmlParser$properties);
var $author$project$DataSources$AmlMiner$AmlParser$buildColumnType = F4(
	function (name1, name2, values, _default) {
		var vals = A2($elm$core$Maybe$withDefault, _List_Nil, values);
		var _v0 = A3(
			$author$project$Libs$Maybe$mapOrElse,
			function (n) {
				return _Utils_Tuple2(
					$elm$core$Maybe$Just(name1),
					n);
			},
			_Utils_Tuple2($elm$core$Maybe$Nothing, name1),
			name2);
		var schema = _v0.a;
		var name = _v0.b;
		return ((0 < $elm$core$List$length(vals)) && (($elm$core$List$length(vals) <= 2) && A2(
			$elm$core$List$all,
			function (v) {
				return !_Utils_eq(
					$elm$core$String$toInt(v),
					$elm$core$Maybe$Nothing);
			},
			vals))) ? {
			lf: _default,
			eS: name + ('(' + (A2($elm$core$String$join, ', ', vals) + ')')),
			aI: schema,
			o2: $elm$core$Maybe$Nothing
		} : {
			lf: _default,
			eS: name,
			aI: schema,
			o2: A2(
				$elm$core$Maybe$andThen,
				A2(
					$elm$core$Basics$composeR,
					$elm$core$List$map($elm$core$String$trim),
					$author$project$Libs$Nel$fromList),
				values)
		};
	});
var $author$project$DataSources$AmlMiner$AmlParser$columnValue = $elm$parser$Parser$oneOf(
	_List_fromArray(
		[
			A2($author$project$DataSources$AmlMiner$AmlParser$quoted, '\"', '\"'),
			$author$project$DataSources$AmlMiner$AmlParser$untilNonEmpty(
			_List_fromArray(
				[' ', '\n']))
		]));
var $author$project$DataSources$AmlMiner$AmlParser$columnTypeDefault = A2(
	$elm$parser$Parser$keeper,
	A2(
		$elm$parser$Parser$ignorer,
		A2(
			$elm$parser$Parser$ignorer,
			$elm$parser$Parser$succeed($elm$core$Basics$identity),
			$elm$parser$Parser$symbol('=')),
		$author$project$DataSources$AmlMiner$AmlParser$spaces),
	$author$project$DataSources$AmlMiner$AmlParser$columnValue);
var $elm$parser$Parser$ExpectingVariable = {$: 7};
var $elm$parser$Parser$Advanced$varHelp = F7(
	function (isGood, offset, row, col, src, indent, context) {
		varHelp:
		while (true) {
			var newOffset = A3($elm$parser$Parser$Advanced$isSubChar, isGood, offset, src);
			if (_Utils_eq(newOffset, -1)) {
				return {fO: col, n: context, w: indent, g: offset, hl: row, ht: src};
			} else {
				if (_Utils_eq(newOffset, -2)) {
					var $temp$isGood = isGood,
						$temp$offset = offset + 1,
						$temp$row = row + 1,
						$temp$col = 1,
						$temp$src = src,
						$temp$indent = indent,
						$temp$context = context;
					isGood = $temp$isGood;
					offset = $temp$offset;
					row = $temp$row;
					col = $temp$col;
					src = $temp$src;
					indent = $temp$indent;
					context = $temp$context;
					continue varHelp;
				} else {
					var $temp$isGood = isGood,
						$temp$offset = newOffset,
						$temp$row = row,
						$temp$col = col + 1,
						$temp$src = src,
						$temp$indent = indent,
						$temp$context = context;
					isGood = $temp$isGood;
					offset = $temp$offset;
					row = $temp$row;
					col = $temp$col;
					src = $temp$src;
					indent = $temp$indent;
					context = $temp$context;
					continue varHelp;
				}
			}
		}
	});
var $elm$parser$Parser$Advanced$variable = function (i) {
	return function (s) {
		var firstOffset = A3($elm$parser$Parser$Advanced$isSubChar, i.hu, s.g, s.ht);
		if (_Utils_eq(firstOffset, -1)) {
			return A2(
				$elm$parser$Parser$Advanced$Bad,
				false,
				A2($elm$parser$Parser$Advanced$fromState, s, i.iu));
		} else {
			var s1 = _Utils_eq(firstOffset, -2) ? A7($elm$parser$Parser$Advanced$varHelp, i.ma, s.g + 1, s.hl + 1, 1, s.ht, s.w, s.n) : A7($elm$parser$Parser$Advanced$varHelp, i.ma, firstOffset, s.hl, s.fO + 1, s.ht, s.w, s.n);
			var name = A3($elm$core$String$slice, s.g, s1.g, s.ht);
			return A2($elm$core$Set$member, name, i.n8) ? A2(
				$elm$parser$Parser$Advanced$Bad,
				false,
				A2($elm$parser$Parser$Advanced$fromState, s, i.iu)) : A3($elm$parser$Parser$Advanced$Good, true, name, s1);
		}
	};
};
var $elm$parser$Parser$variable = function (i) {
	return $elm$parser$Parser$Advanced$variable(
		{iu: $elm$parser$Parser$ExpectingVariable, ma: i.ma, n8: i.n8, hu: i.hu});
};
var $author$project$DataSources$AmlMiner$AmlParser$columnTypeName = $elm$parser$Parser$oneOf(
	_List_fromArray(
		[
			A2($author$project$DataSources$AmlMiner$AmlParser$quoted, '\"', '\"'),
			$elm$parser$Parser$variable(
			{
				ma: function (c) {
					return !A2(
						$elm$core$List$member,
						c,
						_List_fromArray(
							['.', '(', '=', ' ', '\n']));
				},
				n8: $elm$core$Set$fromList(
					_List_fromArray(
						['nullable', 'NULLABLE', 'pk', 'PK', 'index', 'INDEX', 'unique', 'UNIQUE', 'check', 'CHECK', 'fk', 'FK'])),
				hu: function (c) {
					return !A2(
						$elm$core$List$member,
						c,
						_List_fromArray(
							['.', '(', '=', ' ', '\n', '{', '|', '#']));
				}
			})
		]));
var $elm$parser$Parser$Optional = 1;
var $author$project$DataSources$AmlMiner$AmlParser$columnTypeValues = $elm$parser$Parser$sequence(
	{
		ir: ')',
		f: $elm$parser$Parser$oneOf(
			_List_fromArray(
				[
					A2($author$project$DataSources$AmlMiner$AmlParser$quoted, '\"', '\"'),
					$author$project$DataSources$AmlMiner$AmlParser$untilNonEmpty(
					_List_fromArray(
						[',', ')', '\n']))
				])),
		jV: ',',
		jZ: $author$project$DataSources$AmlMiner$AmlParser$spaces,
		hu: '(',
		j7: 1
	});
var $author$project$DataSources$AmlMiner$AmlParser$columnType = A2(
	$elm$parser$Parser$keeper,
	A2(
		$elm$parser$Parser$keeper,
		A2(
			$elm$parser$Parser$keeper,
			A2(
				$elm$parser$Parser$keeper,
				$elm$parser$Parser$succeed($author$project$DataSources$AmlMiner$AmlParser$buildColumnType),
				$author$project$DataSources$AmlMiner$AmlParser$columnTypeName),
			A2(
				$elm$parser$Parser$ignorer,
				$author$project$DataSources$AmlMiner$AmlParser$maybe(
					A2(
						$elm$parser$Parser$keeper,
						A2(
							$elm$parser$Parser$ignorer,
							$elm$parser$Parser$succeed($elm$core$Basics$identity),
							$elm$parser$Parser$symbol('.')),
						$author$project$DataSources$AmlMiner$AmlParser$columnTypeName)),
				$author$project$DataSources$AmlMiner$AmlParser$spaces)),
		A2(
			$elm$parser$Parser$ignorer,
			$author$project$DataSources$AmlMiner$AmlParser$maybe($author$project$DataSources$AmlMiner$AmlParser$columnTypeValues),
			$author$project$DataSources$AmlMiner$AmlParser$spaces)),
	$author$project$DataSources$AmlMiner$AmlParser$maybe($author$project$DataSources$AmlMiner$AmlParser$columnTypeDefault));
var $author$project$DataSources$AmlMiner$AmlParser$constraint = function (kind) {
	return A2(
		$elm$parser$Parser$keeper,
		A2(
			$elm$parser$Parser$ignorer,
			A2(
				$elm$parser$Parser$ignorer,
				$elm$parser$Parser$succeed(
					function (value) {
						return A2($elm$core$Maybe$withDefault, '', value);
					}),
				$author$project$DataSources$AmlMiner$AmlParser$symbolI(kind)),
			$author$project$DataSources$AmlMiner$AmlParser$spaces),
		$author$project$DataSources$AmlMiner$AmlParser$maybe(
			A2(
				$elm$parser$Parser$keeper,
				A2(
					$elm$parser$Parser$ignorer,
					A2(
						$elm$parser$Parser$ignorer,
						$elm$parser$Parser$succeed($elm$core$Basics$identity),
						$elm$parser$Parser$symbol('=')),
					$author$project$DataSources$AmlMiner$AmlParser$spaces),
				$elm$parser$Parser$oneOf(
					_List_fromArray(
						[
							A2($author$project$DataSources$AmlMiner$AmlParser$quoted, '\"', '\"'),
							$author$project$DataSources$AmlMiner$AmlParser$until(
							_List_fromArray(
								[' ', '\n']))
						])))));
};
var $author$project$DataSources$AmlMiner$AmlParser$notes = A2(
	$elm$parser$Parser$keeper,
	A2(
		$elm$parser$Parser$ignorer,
		A2(
			$elm$parser$Parser$ignorer,
			$elm$parser$Parser$succeed($elm$core$String$trim),
			$elm$parser$Parser$symbol('|')),
		$author$project$DataSources$AmlMiner$AmlParser$spaces),
	$elm$parser$Parser$oneOf(
		_List_fromArray(
			[
				A2($author$project$DataSources$AmlMiner$AmlParser$quoted, '\"', '\"'),
				$author$project$DataSources$AmlMiner$AmlParser$until(
				_List_fromArray(
					['#', '\n']))
			])));
var $author$project$DataSources$AmlMiner$AmlParser$column = A2(
	$elm$parser$Parser$keeper,
	A2(
		$elm$parser$Parser$keeper,
		A2(
			$elm$parser$Parser$keeper,
			A2(
				$elm$parser$Parser$keeper,
				A2(
					$elm$parser$Parser$keeper,
					A2(
						$elm$parser$Parser$keeper,
						A2(
							$elm$parser$Parser$keeper,
							A2(
								$elm$parser$Parser$keeper,
								A2(
									$elm$parser$Parser$keeper,
									A2(
										$elm$parser$Parser$keeper,
										A2(
											$elm$parser$Parser$keeper,
											A2(
												$elm$parser$Parser$ignorer,
												$elm$parser$Parser$succeed(
													function (name) {
														return function (kind) {
															return function (nullable) {
																return function (pk) {
																	return function (idx) {
																		return function (unq) {
																			return function (chk) {
																				return function (fk) {
																					return function (props) {
																						return function (ntes) {
																							return function (coms) {
																								return {
																									kY: chk,
																									h4: coms,
																									lf: A2(
																										$elm$core$Maybe$andThen,
																										function ($) {
																											return $.lf;
																										},
																										kind),
																									lQ: fk,
																									l7: idx,
																									gi: A2(
																										$elm$core$Maybe$map,
																										function ($) {
																											return $.eS;
																										},
																										kind),
																									mj: A2(
																										$elm$core$Maybe$andThen,
																										function ($) {
																											return $.aI;
																										},
																										kind),
																									eS: name,
																									bP: ntes,
																									nf: !_Utils_eq(nullable, $elm$core$Maybe$Nothing),
																									nL: !_Utils_eq(pk, $elm$core$Maybe$Nothing),
																									nU: props,
																									o$: unq,
																									o2: A2(
																										$elm$core$Maybe$andThen,
																										function ($) {
																											return $.o2;
																										},
																										kind)
																								};
																							};
																						};
																					};
																				};
																			};
																		};
																	};
																};
															};
														};
													}),
												$elm$parser$Parser$symbol('  ')),
											A2($elm$parser$Parser$ignorer, $author$project$DataSources$AmlMiner$AmlParser$columnName, $author$project$DataSources$AmlMiner$AmlParser$spaces)),
										$author$project$DataSources$AmlMiner$AmlParser$maybe(
											A2(
												$elm$parser$Parser$keeper,
												$elm$parser$Parser$succeed($elm$core$Basics$identity),
												A2($elm$parser$Parser$ignorer, $author$project$DataSources$AmlMiner$AmlParser$columnType, $author$project$DataSources$AmlMiner$AmlParser$spaces)))),
									$author$project$DataSources$AmlMiner$AmlParser$maybe(
										A2(
											$elm$parser$Parser$ignorer,
											A2(
												$elm$parser$Parser$ignorer,
												$elm$parser$Parser$succeed($elm$core$Basics$identity),
												$author$project$DataSources$AmlMiner$AmlParser$symbolI('nullable')),
											$author$project$DataSources$AmlMiner$AmlParser$spaces))),
								$author$project$DataSources$AmlMiner$AmlParser$maybe(
									A2(
										$elm$parser$Parser$ignorer,
										A2(
											$elm$parser$Parser$ignorer,
											$elm$parser$Parser$succeed($elm$core$Basics$identity),
											$author$project$DataSources$AmlMiner$AmlParser$symbolI('pk')),
										$author$project$DataSources$AmlMiner$AmlParser$spaces))),
							$author$project$DataSources$AmlMiner$AmlParser$maybe(
								A2(
									$elm$parser$Parser$keeper,
									$elm$parser$Parser$succeed($elm$core$Basics$identity),
									A2(
										$elm$parser$Parser$ignorer,
										$author$project$DataSources$AmlMiner$AmlParser$constraint('index'),
										$author$project$DataSources$AmlMiner$AmlParser$spaces)))),
						$author$project$DataSources$AmlMiner$AmlParser$maybe(
							A2(
								$elm$parser$Parser$keeper,
								$elm$parser$Parser$succeed($elm$core$Basics$identity),
								A2(
									$elm$parser$Parser$ignorer,
									$author$project$DataSources$AmlMiner$AmlParser$constraint('unique'),
									$author$project$DataSources$AmlMiner$AmlParser$spaces)))),
					$author$project$DataSources$AmlMiner$AmlParser$maybe(
						A2(
							$elm$parser$Parser$keeper,
							$elm$parser$Parser$succeed($elm$core$Basics$identity),
							A2(
								$elm$parser$Parser$ignorer,
								$author$project$DataSources$AmlMiner$AmlParser$constraint('check'),
								$author$project$DataSources$AmlMiner$AmlParser$spaces)))),
				$author$project$DataSources$AmlMiner$AmlParser$maybe(
					A2(
						$elm$parser$Parser$keeper,
						A2(
							$elm$parser$Parser$ignorer,
							A2(
								$elm$parser$Parser$ignorer,
								$elm$parser$Parser$succeed($elm$core$Basics$identity),
								$author$project$DataSources$AmlMiner$AmlParser$symbolI('fk')),
							$author$project$DataSources$AmlMiner$AmlParser$spaces),
						A2($elm$parser$Parser$ignorer, $author$project$DataSources$AmlMiner$AmlParser$columnRef, $author$project$DataSources$AmlMiner$AmlParser$spaces)))),
			$author$project$DataSources$AmlMiner$AmlParser$maybe(
				A2(
					$elm$parser$Parser$keeper,
					$elm$parser$Parser$succeed($elm$core$Basics$identity),
					A2($elm$parser$Parser$ignorer, $author$project$DataSources$AmlMiner$AmlParser$columnProps, $author$project$DataSources$AmlMiner$AmlParser$spaces)))),
		$author$project$DataSources$AmlMiner$AmlParser$maybe(
			A2(
				$elm$parser$Parser$keeper,
				$elm$parser$Parser$succeed($elm$core$Basics$identity),
				A2($elm$parser$Parser$ignorer, $author$project$DataSources$AmlMiner$AmlParser$notes, $author$project$DataSources$AmlMiner$AmlParser$spaces)))),
	A2(
		$elm$parser$Parser$ignorer,
		$author$project$DataSources$AmlMiner$AmlParser$maybe(
			A2(
				$elm$parser$Parser$keeper,
				$elm$parser$Parser$succeed($elm$core$Basics$identity),
				A2($elm$parser$Parser$ignorer, $author$project$DataSources$AmlMiner$AmlParser$comment, $author$project$DataSources$AmlMiner$AmlParser$spaces))),
		$author$project$DataSources$AmlMiner$AmlParser$endOfLine));
var $author$project$Libs$Tailwind$from = function (value) {
	return A2(
		$author$project$Libs$List$find,
		function (_v0) {
			var c = _v0;
			return _Utils_eq(c, value);
		},
		$author$project$Libs$Tailwind$all);
};
var $author$project$DataSources$AmlMiner$AmlParser$tableProps = A2(
	$elm$parser$Parser$andThen,
	function (p) {
		return A3(
			$elm$core$Dict$foldl,
			F3(
				function (k, v, acc) {
					switch (k) {
						case 'color':
							return A2(
								$elm$core$Maybe$withDefault,
								$elm$parser$Parser$problem('Unknown color \'' + (v + '\'')),
								A2(
									$elm$core$Maybe$map,
									function (c) {
										return A2(
											$elm$parser$Parser$map,
											function (a) {
												return _Utils_update(
													a,
													{
														A: $elm$core$Maybe$Just(c)
													});
											},
											acc);
									},
									$author$project$Libs$Tailwind$from(v)));
						case 'left':
							var _v1 = _Utils_Tuple2(
								$elm$core$String$toFloat(v),
								A2(
									$elm$core$Maybe$map,
									$elm$core$String$toFloat,
									A2($elm$core$Dict$get, 'top', p)));
							_v1$1:
							while (true) {
								if (!_v1.b.$) {
									if (!_v1.a.$) {
										if (!_v1.b.a.$) {
											var left = _v1.a.a;
											var top = _v1.b.a.a;
											return A2(
												$elm$parser$Parser$map,
												function (a) {
													return _Utils_update(
														a,
														{
															e$: $elm$core$Maybe$Just(
																{C: left, ad: top})
														});
												},
												acc);
										} else {
											var _v3 = _v1.b.a;
											return $elm$parser$Parser$problem('Property \'top\' should be a number');
										}
									} else {
										break _v1$1;
									}
								} else {
									if (_v1.a.$ === 1) {
										break _v1$1;
									} else {
										var _v4 = _v1.b;
										return $elm$parser$Parser$problem('Missing property \'top\'');
									}
								}
							}
							var _v2 = _v1.a;
							return $elm$parser$Parser$problem('Property \'left\' should be a number');
						case 'top':
							var _v5 = _Utils_Tuple2(
								A2(
									$elm$core$Maybe$map,
									$elm$core$String$toFloat,
									A2($elm$core$Dict$get, 'left', p)),
								$elm$core$String$toFloat(v));
							_v5$1:
							while (true) {
								if (!_v5.a.$) {
									if (!_v5.a.a.$) {
										if (!_v5.b.$) {
											var left = _v5.a.a.a;
											var top = _v5.b.a;
											return A2(
												$elm$parser$Parser$map,
												function (a) {
													return _Utils_update(
														a,
														{
															e$: $elm$core$Maybe$Just(
																{C: left, ad: top})
														});
												},
												acc);
										} else {
											break _v5$1;
										}
									} else {
										if (_v5.b.$ === 1) {
											break _v5$1;
										} else {
											var _v7 = _v5.a.a;
											return $elm$parser$Parser$problem('Property \'left\' should be a number');
										}
									}
								} else {
									if (_v5.b.$ === 1) {
										break _v5$1;
									} else {
										var _v8 = _v5.a;
										return $elm$parser$Parser$problem('Missing property \'left\'');
									}
								}
							}
							var _v6 = _v5.b;
							return $elm$parser$Parser$problem('Property \'top\' should be a number');
						default:
							return $elm$parser$Parser$problem('Unknown property \'' + (k + '\''));
					}
				}),
			$elm$parser$Parser$succeed(
				{A: $elm$core$Maybe$Nothing, e$: $elm$core$Maybe$Nothing}),
			p);
	},
	$author$project$DataSources$AmlMiner$AmlParser$properties);
var $author$project$DataSources$AmlMiner$AmlParser$tableRef = A2(
	$elm$parser$Parser$keeper,
	A2(
		$elm$parser$Parser$keeper,
		$elm$parser$Parser$succeed(
			F2(
				function (schema, tbl) {
					if (!tbl.$) {
						var t = tbl.a;
						return {
							aI: $elm$core$Maybe$Just(schema),
							aq: t
						};
					} else {
						return {aI: $elm$core$Maybe$Nothing, aq: schema};
					}
				})),
		$author$project$DataSources$AmlMiner$AmlParser$schemaName),
	$author$project$DataSources$AmlMiner$AmlParser$maybe(
		A2(
			$elm$parser$Parser$keeper,
			A2(
				$elm$parser$Parser$ignorer,
				$elm$parser$Parser$succeed($elm$core$Basics$identity),
				$elm$parser$Parser$symbol('.')),
			$author$project$DataSources$AmlMiner$AmlParser$tableName)));
var $author$project$DataSources$AmlMiner$AmlParser$table = A2(
	$elm$parser$Parser$keeper,
	A2(
		$elm$parser$Parser$keeper,
		A2(
			$elm$parser$Parser$keeper,
			A2(
				$elm$parser$Parser$keeper,
				A2(
					$elm$parser$Parser$keeper,
					A2(
						$elm$parser$Parser$keeper,
						A2(
							$elm$parser$Parser$ignorer,
							$elm$parser$Parser$succeed(
								F6(
									function (ref, view, props, ntes, coms, cols) {
										return {
											M: cols,
											h4: coms,
											eH: !_Utils_eq(view, $elm$core$Maybe$Nothing),
											bP: ntes,
											nU: props,
											aI: ref.aI,
											aq: ref.aq
										};
									})),
							$author$project$DataSources$AmlMiner$AmlParser$spaces),
						$author$project$DataSources$AmlMiner$AmlParser$tableRef),
					A2(
						$elm$parser$Parser$ignorer,
						$author$project$DataSources$AmlMiner$AmlParser$maybe(
							A2(
								$elm$parser$Parser$ignorer,
								A2(
									$elm$parser$Parser$ignorer,
									$elm$parser$Parser$succeed($elm$core$Basics$identity),
									$elm$parser$Parser$symbol('*')),
								$author$project$DataSources$AmlMiner$AmlParser$spaces)),
						$author$project$DataSources$AmlMiner$AmlParser$spaces)),
				$author$project$DataSources$AmlMiner$AmlParser$maybe(
					A2(
						$elm$parser$Parser$keeper,
						$elm$parser$Parser$succeed($elm$core$Basics$identity),
						A2($elm$parser$Parser$ignorer, $author$project$DataSources$AmlMiner$AmlParser$tableProps, $author$project$DataSources$AmlMiner$AmlParser$spaces)))),
			$author$project$DataSources$AmlMiner$AmlParser$maybe(
				A2(
					$elm$parser$Parser$keeper,
					$elm$parser$Parser$succeed($elm$core$Basics$identity),
					A2($elm$parser$Parser$ignorer, $author$project$DataSources$AmlMiner$AmlParser$notes, $author$project$DataSources$AmlMiner$AmlParser$spaces)))),
		A2(
			$elm$parser$Parser$ignorer,
			$author$project$DataSources$AmlMiner$AmlParser$maybe(
				A2(
					$elm$parser$Parser$keeper,
					$elm$parser$Parser$succeed($elm$core$Basics$identity),
					A2($elm$parser$Parser$ignorer, $author$project$DataSources$AmlMiner$AmlParser$comment, $author$project$DataSources$AmlMiner$AmlParser$spaces))),
			$author$project$DataSources$AmlMiner$AmlParser$endOfLine)),
	$author$project$DataSources$AmlMiner$AmlParser$list($author$project$DataSources$AmlMiner$AmlParser$column));
var $author$project$DataSources$AmlMiner$AmlParser$statement = $elm$parser$Parser$oneOf(
	_List_fromArray(
		[
			A2($elm$parser$Parser$map, $author$project$DataSources$AmlMiner$AmlParser$AmlEmptyStatement, $author$project$DataSources$AmlMiner$AmlParser$empty),
			A2($elm$parser$Parser$map, $author$project$DataSources$AmlMiner$AmlParser$AmlRelationStatement, $author$project$DataSources$AmlMiner$AmlParser$relation),
			A2($elm$parser$Parser$map, $author$project$DataSources$AmlMiner$AmlParser$AmlTableStatement, $author$project$DataSources$AmlMiner$AmlParser$table)
		]));
var $author$project$DataSources$AmlMiner$AmlParser$parser = A2(
	$elm$parser$Parser$keeper,
	$elm$parser$Parser$succeed($elm$core$Basics$identity),
	A2(
		$elm$parser$Parser$ignorer,
		$author$project$DataSources$AmlMiner$AmlParser$list($author$project$DataSources$AmlMiner$AmlParser$statement),
		$elm$parser$Parser$end));
var $author$project$DataSources$AmlMiner$AmlParser$parse = function (input) {
	return A2($elm$parser$Parser$run, $author$project$DataSources$AmlMiner$AmlParser$parser, input);
};
var $author$project$Models$Project$Source$toInfo = function (source) {
	return {ic: source.ic, ip: source.ip, iB: source.iB, H: source.H, gi: source.gi, eS: source.eS, kb: source.kb};
};
var $author$project$Libs$Basics$tupled = F2(
	function (f, _v0) {
		var a = _v0.a;
		var b = _v0.b;
		return A2(f, a, b);
	});
var $author$project$PagesComponents$Organization_$Project_$Components$AmlSidebar$updateSource = F4(
	function (now, source, input, model) {
		var tableLayouts = A3(
			$author$project$Libs$Maybe$mapOrElse,
			A2(
				$elm$core$Basics$composeR,
				$author$project$PagesComponents$Organization_$Project_$Models$Erd$currentLayout,
				function ($) {
					return $.oM;
				}),
			_List_Nil,
			model.lE);
		var otherSourcesTableIds = A3(
			$author$project$Libs$Maybe$mapOrElse,
			function ($) {
				return $.g_;
			},
			$elm$core$Set$empty,
			model.kr);
		var content = $author$project$PagesComponents$Organization_$Project_$Components$AmlSidebar$contentSplit(input);
		var _v0 = A3(
			$author$project$DataSources$AmlMiner$AmlAdapter$buildSource,
			$author$project$Models$Project$Source$toInfo(source),
			content,
			$author$project$DataSources$AmlMiner$AmlParser$parse(
				$elm$core$String$trim(input) + '\n'));
		var errors = _v0.a;
		var parsed = _v0.b;
		var amlColumns = _v0.c;
		var _v1 = A3(
			$author$project$Libs$List$diff,
			function ($) {
				return $.H;
			},
			$elm$core$Dict$values(source.oM),
			$elm$core$Dict$values(parsed.oM));
		var removed = _v1.a;
		var bothPresent = _v1.b;
		var added = _v1.c;
		var updated = A2(
			$elm$core$List$map,
			$elm$core$Tuple$second,
			A2(
				$elm$core$List$filter,
				function (_v3) {
					var t1 = _v3.a;
					var t2 = _v3.b;
					return !_Utils_eq(t1, t2);
				},
				bothPresent));
		var toHide = A2(
			$elm$core$List$map,
			function ($) {
				return $.H;
			},
			A2(
				$author$project$Libs$List$filterNot,
				function (t) {
					return A2($elm$core$Set$member, t.H, otherSourcesTableIds);
				},
				removed));
		var toShow = A2(
			$elm$core$List$map,
			function (_v2) {
				var table = _v2.a;
				var previous = _v2.b;
				return _Utils_Tuple2(
					table.H,
					A2(
						$elm$core$Maybe$map,
						$author$project$PagesComponents$Organization_$Project_$Models$PositionHint$PlaceAt,
						A2(
							$author$project$Libs$Maybe$filter,
							function (p) {
								return !_Utils_eq(p, $author$project$Models$Position$zeroGrid);
							},
							A2(
								$elm$core$Maybe$map,
								A2(
									$elm$core$Basics$composeR,
									function ($) {
										return $.nU;
									},
									function ($) {
										return $.e$;
									}),
								A2(
									$elm$core$Maybe$andThen,
									function (t) {
										return A3(
											$author$project$Libs$List$findBy,
											function ($) {
												return $.H;
											},
											t.H,
											tableLayouts);
									},
									previous)))));
			},
			A2(
				$author$project$PagesComponents$Organization_$Project_$Components$AmlSidebar$associateTables,
				removed,
				A2(
					$author$project$Libs$List$filterNot,
					function (t) {
						return A2(
							$elm$core$List$member,
							t.H,
							A2(
								$elm$core$List$map,
								function ($) {
									return $.H;
								},
								tableLayouts));
					},
					_Utils_ap(updated, added))));
		return $author$project$Libs$List$nonEmpty(errors) ? _Utils_Tuple2(
			A2(
				$author$project$Services$Lenses$mapAmlSidebarM,
				$author$project$Services$Lenses$setErrors(errors),
				A2(
					$author$project$Services$Lenses$mapErdM,
					A2(
						$author$project$PagesComponents$Organization_$Project_$Models$Erd$mapSource,
						source.H,
						A2(
							$elm$core$Basics$composeR,
							$author$project$Services$Lenses$setContent(content),
							$author$project$Services$Lenses$setUpdatedAt(now))),
					model)),
			$elm$core$Platform$Cmd$none) : _Utils_Tuple2(
			A2(
				$author$project$Services$Lenses$mapAmlSidebarM,
				$author$project$Services$Lenses$setErrors(_List_Nil),
				A2(
					$author$project$Services$Lenses$mapErdM,
					A2(
						$author$project$PagesComponents$Organization_$Project_$Models$Erd$mapSource,
						source.H,
						$author$project$Models$Project$Source$refreshWith(parsed)),
					model)),
			$elm$core$Platform$Cmd$batch(
				A2(
					$elm$core$List$map,
					$author$project$Libs$Task$send,
					_Utils_ap(
						A2(
							$elm$core$List$map,
							$author$project$Libs$Basics$tupled($author$project$PagesComponents$Organization_$Project_$Models$ShowTable),
							toShow),
						_Utils_ap(
							A2($elm$core$List$map, $author$project$PagesComponents$Organization_$Project_$Models$HideTable, toHide),
							A2(
								$elm$core$List$map,
								function (t) {
									return A2(
										$author$project$PagesComponents$Organization_$Project_$Models$ShowColumns,
										t.H,
										$author$project$PagesComponents$Organization_$Project_$Models$ShowColumns$List(
											A3($author$project$Libs$Dict$getOrElse, t.H, _List_Nil, amlColumns)));
								},
								updated))))));
	});
var $author$project$PagesComponents$Organization_$Project_$Components$AmlSidebar$update = F3(
	function (now, msg, model) {
		switch (msg.$) {
			case 0:
				var id = msg.a;
				return _Utils_Tuple2(
					A2(
						$author$project$Services$Lenses$setAmlSidebar,
						$elm$core$Maybe$Just(
							A2($author$project$PagesComponents$Organization_$Project_$Components$AmlSidebar$init, id, model.lE)),
						model),
					$elm$core$Platform$Cmd$none);
			case 1:
				return _Utils_Tuple2(
					A2($author$project$Services$Lenses$setAmlSidebar, $elm$core$Maybe$Nothing, model),
					$elm$core$Platform$Cmd$none);
			case 2:
				return _Utils_Tuple2(
					model,
					$author$project$Libs$Task$send(
						$author$project$PagesComponents$Organization_$Project_$Models$AmlSidebarMsg(
							A3(
								$author$project$Libs$Bool$cond,
								_Utils_eq(model.kr, $elm$core$Maybe$Nothing),
								$author$project$PagesComponents$Organization_$Project_$Models$AOpen($elm$core$Maybe$Nothing),
								$author$project$PagesComponents$Organization_$Project_$Models$AClose))));
			case 3:
				var source = msg.a;
				return _Utils_Tuple2(
					A2(
						$author$project$PagesComponents$Organization_$Project_$Components$AmlSidebar$setOtherSourcesTableIdsCache,
						source,
						A2(
							$author$project$Services$Lenses$mapAmlSidebarM,
							$author$project$Services$Lenses$setSelected(source),
							model)),
					$elm$core$Platform$Cmd$none);
			default:
				var id = msg.a;
				var value = msg.b;
				return A2(
					$elm$core$Maybe$withDefault,
					_Utils_Tuple2(
						A2(
							$author$project$Services$Lenses$mapAmlSidebarM,
							$author$project$Services$Lenses$setErrors(
								_List_fromArray(
									[
										{fO: 0, hc: 'Invalid source', hl: 0}
									])),
							model),
						$elm$core$Platform$Cmd$none),
					A2(
						$elm$core$Maybe$map,
						function (s) {
							return $author$project$PagesComponents$Organization_$Project_$Updates$Utils$setDirtyCmd(
								A4($author$project$PagesComponents$Organization_$Project_$Components$AmlSidebar$updateSource, now, s, value, model));
						},
						A2(
							$elm$core$Maybe$andThen,
							A2(
								$elm$core$Basics$composeR,
								function ($) {
									return $.hs;
								},
								$author$project$Libs$List$find(
									function (s) {
										return _Utils_eq(s.H, id);
									})),
							model.lE)));
		}
	});
var $author$project$PagesComponents$Organization_$Project_$Models$NotesMsg$NSave = F3(
	function (a, b, c) {
		return {$: 2, a: a, b: b, c: c};
	});
var $author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$ColumnView = function (a) {
	return {$: 3, a: a};
};
var $author$project$Libs$Dict$find = F2(
	function (predicate, dict) {
		return A3(
			$elm$core$Dict$foldl,
			F3(
				function (k, v, acc) {
					if (!acc.$) {
						return acc;
					} else {
						return A2(predicate, k, v) ? $elm$core$Maybe$Just(
							_Utils_Tuple2(k, v)) : $elm$core$Maybe$Nothing;
					}
				}),
			$elm$core$Maybe$Nothing,
			dict);
	});
var $author$project$Components$Organisms$Details$buildColumnHeading = F3(
	function (erd, table, column) {
		return {
			f: column,
			bO: A2(
				$elm$core$Maybe$map,
				$elm$core$Tuple$second,
				A2(
					$author$project$Libs$Dict$find,
					F2(
						function (_v0, c) {
							return _Utils_eq(c.l7, column.l7 + 1);
						}),
					table.M)),
			bR: A2(
				$elm$core$Maybe$map,
				$elm$core$Tuple$second,
				A2(
					$author$project$Libs$Dict$find,
					F2(
						function (_v1, c) {
							return _Utils_eq(c.l7, column.l7 - 1);
						}),
					table.M)),
			fh: A2(
				$elm$core$Maybe$andThen,
				A2(
					$elm$core$Basics$composeR,
					function ($) {
						return $.M;
					},
					$author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$find(column.aA)),
				A3(
					$author$project$Libs$List$findBy,
					function ($) {
						return $.H;
					},
					table.H,
					$author$project$PagesComponents$Organization_$Project_$Models$Erd$currentLayout(erd).oM))
		};
	});
var $author$project$Components$Organisms$Details$buildSchemaHeading = F2(
	function (erd, name) {
		var sortedSchemas = $elm$core$List$sort(
			$author$project$Libs$List$unique(
				A2(
					$elm$core$List$map,
					function ($) {
						return $.aI;
					},
					$elm$core$Dict$values(erd.oM))));
		var index = A2(
			$author$project$Libs$List$findIndex,
			function (s) {
				return _Utils_eq(s, name);
			},
			sortedSchemas);
		return {
			f: name,
			bO: A2(
				$elm$core$Maybe$andThen,
				function (i) {
					return A2($author$project$Libs$List$get, i + 1, sortedSchemas);
				},
				index),
			bR: A2(
				$elm$core$Maybe$andThen,
				function (i) {
					return A2($author$project$Libs$List$get, i - 1, sortedSchemas);
				},
				index),
			fh: $elm$core$Maybe$Nothing
		};
	});
var $author$project$Libs$List$filterBy = F3(
	function (matcher, value, list) {
		return A2(
			$elm$core$List$filter,
			function (a) {
				return _Utils_eq(
					matcher(a),
					value);
			},
			list);
	});
var $author$project$Components$Organisms$Details$buildTableHeading = F2(
	function (erd, table) {
		var sortedTables = A2(
			$elm$core$List$sortBy,
			function ($) {
				return $.eS;
			},
			A3(
				$author$project$Libs$List$filterBy,
				function ($) {
					return $.aI;
				},
				table.aI,
				$elm$core$Dict$values(erd.oM)));
		var index = A3(
			$author$project$Libs$List$findIndexBy,
			function ($) {
				return $.eS;
			},
			table.eS,
			sortedTables);
		return {
			f: table,
			bO: A2(
				$elm$core$Maybe$andThen,
				function (i) {
					return A2($author$project$Libs$List$get, i + 1, sortedTables);
				},
				index),
			bR: A2(
				$elm$core$Maybe$andThen,
				function (i) {
					return A2($author$project$Libs$List$get, i - 1, sortedTables);
				},
				index),
			fh: A3(
				$author$project$Libs$List$findBy,
				function ($) {
					return $.H;
				},
				table.H,
				$author$project$PagesComponents$Organization_$Project_$Models$Erd$currentLayout(erd).oM)
		};
	});
var $author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$ListView = {$: 0};
var $author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$listView = $author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$ListView;
var $author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$TableView = function (a) {
	return {$: 2, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$tableView = F2(
	function (erd, id) {
		return A3(
			$author$project$Libs$Maybe$mapOrElse,
			function (table) {
				return $author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$TableView(
					{
						H: table.H,
						aI: A2($author$project$Components$Organisms$Details$buildSchemaHeading, erd, table.aI),
						aq: A2($author$project$Components$Organisms$Details$buildTableHeading, erd, table)
					});
			},
			$author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$listView,
			A2($author$project$PagesComponents$Organization_$Project_$Models$Erd$getTable, id, erd));
	});
var $author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$columnView = F2(
	function (erd, ref) {
		return A3(
			$author$project$Libs$Maybe$mapOrElse,
			function (table) {
				return A3(
					$author$project$Libs$Maybe$mapOrElse,
					function (column) {
						return $author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$ColumnView(
							{
								bH: A3($author$project$Components$Organisms$Details$buildColumnHeading, erd, table, column),
								H: {bH: column.aA, aq: table.H},
								aI: A2($author$project$Components$Organisms$Details$buildSchemaHeading, erd, table.aI),
								aq: A2($author$project$Components$Organisms$Details$buildTableHeading, erd, table)
							});
					},
					A2($author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$tableView, erd, table.H),
					A2($author$project$PagesComponents$Organization_$Project_$Models$ErdTable$getColumn, ref.bH, table));
			},
			$author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$listView,
			A2($author$project$PagesComponents$Organization_$Project_$Models$Erd$getTable, ref.aq, erd));
	});
var $author$project$Models$Project$Source$databaseUrl = function (source) {
	var _v0 = source.gi;
	if (!_v0.$) {
		var url = _v0.a;
		return $elm$core$Maybe$Just(url);
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$filterDatabaseSources = function (sources) {
	return A2(
		$elm$core$List$filterMap,
		function (s) {
			return A2(
				$elm$core$Maybe$map,
				function (url) {
					return _Utils_Tuple2(s.H, url);
				},
				$author$project$Models$Project$Source$databaseUrl(s));
		},
		sources);
};
var $author$project$Ports$GetColumnStats = F3(
	function (a, b, c) {
		return {$: 20, a: a, b: b, c: c};
	});
var $author$project$Ports$getColumnStats = F2(
	function (column, _v0) {
		var source = _v0.a;
		var database = _v0.b;
		return $author$project$Ports$messageToJs(
			A3($author$project$Ports$GetColumnStats, source, database, column));
	});
var $author$project$Ports$GetTableStats = F3(
	function (a, b, c) {
		return {$: 19, a: a, b: b, c: c};
	});
var $author$project$Ports$getTableStats = F2(
	function (table, _v0) {
		var source = _v0.a;
		var database = _v0.b;
		return $author$project$Ports$messageToJs(
			A3($author$project$Ports$GetTableStats, source, database, table));
	});
var $author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$init = function (v) {
	return {_: $elm$core$Maybe$Nothing, H: $author$project$Conf$ids.lr, bt: '', fb: '', o3: v};
};
var $author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$SchemaView = function (a) {
	return {$: 1, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$schemaView = F2(
	function (erd, name) {
		return $author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$SchemaView(
			{
				H: name,
				aI: A2($author$project$Components$Organisms$Details$buildSchemaHeading, erd, name),
				oM: A2(
					$elm$core$List$sortBy,
					function ($) {
						return $.eS;
					},
					A3(
						$author$project$Libs$List$filterBy,
						function ($) {
							return $.aI;
						},
						name,
						$elm$core$Dict$values(erd.oM)))
			});
	});
var $author$project$Services$Lenses$setView = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.o3;
	},
	F2(
		function (view, item) {
			return _Utils_update(
				item,
				{o3: view});
		}));
var $author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$setViewM = F2(
	function (v, model) {
		return $elm$core$Maybe$Just(
			A3(
				$author$project$Libs$Maybe$mapOrElse,
				A2(
					$elm$core$Basics$composeR,
					$author$project$Services$Lenses$setView(v),
					$author$project$Services$Lenses$setEditNotes($elm$core$Maybe$Nothing)),
				$author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$init(v),
				model));
	});
var $author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$update = F5(
	function (noop, notesMsg, erd, msg, model) {
		switch (msg.$) {
			case 0:
				return _Utils_Tuple2($elm$core$Maybe$Nothing, $elm$core$Platform$Cmd$none);
			case 1:
				return _Utils_Tuple2(
					A3(
						$author$project$Libs$Maybe$mapOrElse,
						function (_v1) {
							return $elm$core$Maybe$Nothing;
						},
						$elm$core$Maybe$Just(
							$author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$init($author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$listView)),
						model),
					$elm$core$Platform$Cmd$none);
			case 2:
				var search = msg.a;
				return _Utils_Tuple2(
					A2(
						$elm$core$Maybe$map,
						$author$project$Services$Lenses$setSearch(search),
						model),
					$elm$core$Platform$Cmd$none);
			case 3:
				return _Utils_Tuple2(
					A2($author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$setViewM, $author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$listView, model),
					$elm$core$Platform$Cmd$none);
			case 4:
				var schema = msg.a;
				return _Utils_Tuple2(
					A2(
						$author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$setViewM,
						A2($author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$schemaView, erd, schema),
						model),
					$elm$core$Platform$Cmd$none);
			case 5:
				var table = msg.a;
				return _Utils_Tuple2(
					A2(
						$author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$setViewM,
						A2($author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$tableView, erd, table),
						model),
					$elm$core$Platform$Cmd$batch(
						A2(
							$elm$core$List$map,
							$author$project$Ports$getTableStats(table),
							$author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$filterDatabaseSources(erd.hs))));
			case 6:
				var column = msg.a;
				return _Utils_Tuple2(
					A2(
						$author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$setViewM,
						A2($author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$columnView, erd, column),
						model),
					$elm$core$Platform$Cmd$batch(
						A2(
							$elm$core$List$map,
							$author$project$Ports$getColumnStats(column),
							$author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$filterDatabaseSources(erd.hs))));
			case 7:
				var id = msg.a;
				return _Utils_Tuple2(
					A2(
						$elm$core$Maybe$map,
						function (m) {
							return _Utils_update(
								m,
								{
									bt: A3(
										$author$project$Libs$Bool$cond,
										_Utils_eq(m.bt, id),
										'',
										id)
								});
						},
						model),
					$elm$core$Platform$Cmd$none);
			case 8:
				var id = msg.a;
				var content = msg.b;
				return _Utils_Tuple2(
					A2(
						$elm$core$Maybe$map,
						function (m) {
							return _Utils_update(
								m,
								{
									_: $elm$core$Maybe$Just(content)
								});
						},
						model),
					A2(
						$elm$core$Task$attempt,
						function (_v2) {
							return noop('focus-notes-input');
						},
						$elm$browser$Browser$Dom$focus(id)));
			case 9:
				var content = msg.a;
				return _Utils_Tuple2(
					A2(
						$elm$core$Maybe$map,
						function (m) {
							return _Utils_update(
								m,
								{
									_: A2(
										$elm$core$Maybe$map,
										function (_v3) {
											return content;
										},
										m._)
								});
						},
						model),
					$elm$core$Platform$Cmd$none);
			default:
				var ref = msg.a;
				var initialNotes = msg.b;
				var updatedNotes = msg.c;
				return _Utils_Tuple2(
					A2(
						$elm$core$Maybe$map,
						function (m) {
							return _Utils_update(
								m,
								{_: $elm$core$Maybe$Nothing});
						},
						model),
					$author$project$Libs$Task$send(
						notesMsg(
							A3($author$project$PagesComponents$Organization_$Project_$Models$NotesMsg$NSave, ref, initialNotes, updatedNotes))));
		}
	});
var $author$project$PagesComponents$Organization_$Project_$Components$EmbedSourceParsingDialog$update = F5(
	function (wrap, now, project, msg, model) {
		switch (msg.$) {
			case 0:
				var message = msg.a;
				return A2(
					$author$project$Services$Lenses$mapDatabaseSourceMCmd,
					A4(
						$author$project$Services$DatabaseSource$update,
						A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Components$EmbedSourceParsingDialog$EmbedDatabaseSource, wrap),
						now,
						project,
						message),
					model);
			case 1:
				var message = msg.a;
				return A2(
					$author$project$Services$Lenses$mapSqlSourceMCmd,
					A4(
						$author$project$Services$SqlSource$update,
						A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Components$EmbedSourceParsingDialog$EmbedSqlSource, wrap),
						now,
						project,
						message),
					model);
			default:
				var message = msg.a;
				return A2(
					$author$project$Services$Lenses$mapJsonSourceMCmd,
					A4(
						$author$project$Services$JsonSource$update,
						A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Components$EmbedSourceParsingDialog$EmbedJsonSource, wrap),
						now,
						project,
						message),
					model);
		}
	});
var $author$project$PagesComponents$Organization_$Project_$Components$ProjectSaveDialog$dialogId = 'project-save-dialog';
var $author$project$Components$Slices$ProjectSaveDialogBody$init = F3(
	function (id, name, organization) {
		return {H: id, eS: name, nx: organization, cD: 1};
	});
var $author$project$Components$Slices$ProjectSaveDialogBody$update = F2(
	function (msg, model) {
		switch (msg.$) {
			case 0:
				var value = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{eS: value}),
					$elm$core$Platform$Cmd$none);
			case 1:
				var value = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{nx: value}),
					$elm$core$Platform$Cmd$none);
			default:
				var value = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{cD: value}),
					$elm$core$Platform$Cmd$none);
		}
	});
var $author$project$PagesComponents$Organization_$Project_$Components$ProjectSaveDialog$update = F3(
	function (modalOpen, msg, model) {
		switch (msg.$) {
			case 0:
				var name = msg.a;
				var orga = msg.b;
				return _Utils_Tuple2(
					$elm$core$Maybe$Just(
						A3($author$project$Components$Slices$ProjectSaveDialogBody$init, $author$project$PagesComponents$Organization_$Project_$Components$ProjectSaveDialog$dialogId, name, orga)),
					$elm$core$Platform$Cmd$batch(
						_List_fromArray(
							[
								A2(
								$author$project$Libs$Task$sendAfter,
								1,
								modalOpen($author$project$PagesComponents$Organization_$Project_$Components$ProjectSaveDialog$dialogId))
							])));
			case 1:
				return _Utils_Tuple2($elm$core$Maybe$Nothing, $elm$core$Platform$Cmd$none);
			default:
				var m = msg.a;
				return A3(
					$author$project$Libs$Maybe$mapOrElse,
					A2(
						$elm$core$Basics$composeR,
						$author$project$Components$Slices$ProjectSaveDialogBody$update(m),
						$elm$core$Tuple$mapFirst($elm$core$Maybe$Just)),
					_Utils_Tuple2(model, $elm$core$Platform$Cmd$none),
					model);
		}
	});
var $author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$GotTokens = function (a) {
	return {$: 6, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$TokenCreated = function (a) {
	return {$: 10, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$TokenRevoked = function (a) {
	return {$: 12, a: a};
};
var $justinmimbs$time_extra$Time$Extra$Day = 11;
var $justinmimbs$date$Date$Days = 3;
var $justinmimbs$time_extra$Time$Extra$Millisecond = 15;
var $justinmimbs$time_extra$Time$Extra$Month = 2;
var $justinmimbs$date$Date$Months = 1;
var $justinmimbs$date$Date$RD = $elm$core$Basics$identity;
var $justinmimbs$date$Date$isLeapYear = function (y) {
	return ((!A2($elm$core$Basics$modBy, 4, y)) && (!(!A2($elm$core$Basics$modBy, 100, y)))) || (!A2($elm$core$Basics$modBy, 400, y));
};
var $justinmimbs$date$Date$daysBeforeMonth = F2(
	function (y, m) {
		var leapDays = $justinmimbs$date$Date$isLeapYear(y) ? 1 : 0;
		switch (m) {
			case 0:
				return 0;
			case 1:
				return 31;
			case 2:
				return 59 + leapDays;
			case 3:
				return 90 + leapDays;
			case 4:
				return 120 + leapDays;
			case 5:
				return 151 + leapDays;
			case 6:
				return 181 + leapDays;
			case 7:
				return 212 + leapDays;
			case 8:
				return 243 + leapDays;
			case 9:
				return 273 + leapDays;
			case 10:
				return 304 + leapDays;
			default:
				return 334 + leapDays;
		}
	});
var $justinmimbs$date$Date$floorDiv = F2(
	function (a, b) {
		return $elm$core$Basics$floor(a / b);
	});
var $justinmimbs$date$Date$daysBeforeYear = function (y1) {
	var y = y1 - 1;
	var leapYears = (A2($justinmimbs$date$Date$floorDiv, y, 4) - A2($justinmimbs$date$Date$floorDiv, y, 100)) + A2($justinmimbs$date$Date$floorDiv, y, 400);
	return (365 * y) + leapYears;
};
var $justinmimbs$date$Date$daysInMonth = F2(
	function (y, m) {
		switch (m) {
			case 0:
				return 31;
			case 1:
				return $justinmimbs$date$Date$isLeapYear(y) ? 29 : 28;
			case 2:
				return 31;
			case 3:
				return 30;
			case 4:
				return 31;
			case 5:
				return 30;
			case 6:
				return 31;
			case 7:
				return 31;
			case 8:
				return 30;
			case 9:
				return 31;
			case 10:
				return 30;
			default:
				return 31;
		}
	});
var $justinmimbs$date$Date$monthToNumber = function (m) {
	switch (m) {
		case 0:
			return 1;
		case 1:
			return 2;
		case 2:
			return 3;
		case 3:
			return 4;
		case 4:
			return 5;
		case 5:
			return 6;
		case 6:
			return 7;
		case 7:
			return 8;
		case 8:
			return 9;
		case 9:
			return 10;
		case 10:
			return 11;
		default:
			return 12;
	}
};
var $elm$time$Time$Apr = 3;
var $elm$time$Time$Aug = 7;
var $elm$time$Time$Dec = 11;
var $elm$time$Time$Feb = 1;
var $elm$time$Time$Jan = 0;
var $elm$time$Time$Jul = 6;
var $elm$time$Time$Jun = 5;
var $elm$time$Time$Mar = 2;
var $elm$time$Time$May = 4;
var $elm$time$Time$Nov = 10;
var $elm$time$Time$Oct = 9;
var $elm$time$Time$Sep = 8;
var $justinmimbs$date$Date$numberToMonth = function (mn) {
	var _v0 = A2($elm$core$Basics$max, 1, mn);
	switch (_v0) {
		case 1:
			return 0;
		case 2:
			return 1;
		case 3:
			return 2;
		case 4:
			return 3;
		case 5:
			return 4;
		case 6:
			return 5;
		case 7:
			return 6;
		case 8:
			return 7;
		case 9:
			return 8;
		case 10:
			return 9;
		case 11:
			return 10;
		default:
			return 11;
	}
};
var $justinmimbs$date$Date$toCalendarDateHelp = F3(
	function (y, m, d) {
		toCalendarDateHelp:
		while (true) {
			var monthDays = A2($justinmimbs$date$Date$daysInMonth, y, m);
			var mn = $justinmimbs$date$Date$monthToNumber(m);
			if ((mn < 12) && (_Utils_cmp(d, monthDays) > 0)) {
				var $temp$y = y,
					$temp$m = $justinmimbs$date$Date$numberToMonth(mn + 1),
					$temp$d = d - monthDays;
				y = $temp$y;
				m = $temp$m;
				d = $temp$d;
				continue toCalendarDateHelp;
			} else {
				return {en: d, $7: m, fy: y};
			}
		}
	});
var $justinmimbs$date$Date$divWithRemainder = F2(
	function (a, b) {
		return _Utils_Tuple2(
			A2($justinmimbs$date$Date$floorDiv, a, b),
			A2($elm$core$Basics$modBy, b, a));
	});
var $justinmimbs$date$Date$year = function (_v0) {
	var rd = _v0;
	var _v1 = A2($justinmimbs$date$Date$divWithRemainder, rd, 146097);
	var n400 = _v1.a;
	var r400 = _v1.b;
	var _v2 = A2($justinmimbs$date$Date$divWithRemainder, r400, 36524);
	var n100 = _v2.a;
	var r100 = _v2.b;
	var _v3 = A2($justinmimbs$date$Date$divWithRemainder, r100, 1461);
	var n4 = _v3.a;
	var r4 = _v3.b;
	var _v4 = A2($justinmimbs$date$Date$divWithRemainder, r4, 365);
	var n1 = _v4.a;
	var r1 = _v4.b;
	var n = (!r1) ? 0 : 1;
	return ((((n400 * 400) + (n100 * 100)) + (n4 * 4)) + n1) + n;
};
var $justinmimbs$date$Date$toOrdinalDate = function (_v0) {
	var rd = _v0;
	var y = $justinmimbs$date$Date$year(rd);
	return {
		gZ: rd - $justinmimbs$date$Date$daysBeforeYear(y),
		fy: y
	};
};
var $justinmimbs$date$Date$toCalendarDate = function (_v0) {
	var rd = _v0;
	var date = $justinmimbs$date$Date$toOrdinalDate(rd);
	return A3($justinmimbs$date$Date$toCalendarDateHelp, date.fy, 0, date.gZ);
};
var $justinmimbs$date$Date$add = F3(
	function (unit, n, _v0) {
		var rd = _v0;
		switch (unit) {
			case 0:
				return A3($justinmimbs$date$Date$add, 1, 12 * n, rd);
			case 1:
				var date = $justinmimbs$date$Date$toCalendarDate(rd);
				var wholeMonths = ((12 * (date.fy - 1)) + ($justinmimbs$date$Date$monthToNumber(date.$7) - 1)) + n;
				var m = $justinmimbs$date$Date$numberToMonth(
					A2($elm$core$Basics$modBy, 12, wholeMonths) + 1);
				var y = A2($justinmimbs$date$Date$floorDiv, wholeMonths, 12) + 1;
				return ($justinmimbs$date$Date$daysBeforeYear(y) + A2($justinmimbs$date$Date$daysBeforeMonth, y, m)) + A2(
					$elm$core$Basics$min,
					date.en,
					A2($justinmimbs$date$Date$daysInMonth, y, m));
			case 2:
				return rd + (7 * n);
			default:
				return rd + n;
		}
	});
var $justinmimbs$date$Date$fromCalendarDate = F3(
	function (y, m, d) {
		return ($justinmimbs$date$Date$daysBeforeYear(y) + A2($justinmimbs$date$Date$daysBeforeMonth, y, m)) + A3(
			$elm$core$Basics$clamp,
			1,
			A2($justinmimbs$date$Date$daysInMonth, y, m),
			d);
	});
var $elm$time$Time$flooredDiv = F2(
	function (numerator, denominator) {
		return $elm$core$Basics$floor(numerator / denominator);
	});
var $elm$time$Time$toAdjustedMinutesHelp = F3(
	function (defaultOffset, posixMinutes, eras) {
		toAdjustedMinutesHelp:
		while (true) {
			if (!eras.b) {
				return posixMinutes + defaultOffset;
			} else {
				var era = eras.a;
				var olderEras = eras.b;
				if (_Utils_cmp(era.hu, posixMinutes) < 0) {
					return posixMinutes + era.g;
				} else {
					var $temp$defaultOffset = defaultOffset,
						$temp$posixMinutes = posixMinutes,
						$temp$eras = olderEras;
					defaultOffset = $temp$defaultOffset;
					posixMinutes = $temp$posixMinutes;
					eras = $temp$eras;
					continue toAdjustedMinutesHelp;
				}
			}
		}
	});
var $elm$time$Time$toAdjustedMinutes = F2(
	function (_v0, time) {
		var defaultOffset = _v0.a;
		var eras = _v0.b;
		return A3(
			$elm$time$Time$toAdjustedMinutesHelp,
			defaultOffset,
			A2(
				$elm$time$Time$flooredDiv,
				$elm$time$Time$posixToMillis(time),
				60000),
			eras);
	});
var $elm$time$Time$toCivil = function (minutes) {
	var rawDay = A2($elm$time$Time$flooredDiv, minutes, 60 * 24) + 719468;
	var era = (((rawDay >= 0) ? rawDay : (rawDay - 146096)) / 146097) | 0;
	var dayOfEra = rawDay - (era * 146097);
	var yearOfEra = ((((dayOfEra - ((dayOfEra / 1460) | 0)) + ((dayOfEra / 36524) | 0)) - ((dayOfEra / 146096) | 0)) / 365) | 0;
	var dayOfYear = dayOfEra - (((365 * yearOfEra) + ((yearOfEra / 4) | 0)) - ((yearOfEra / 100) | 0));
	var mp = (((5 * dayOfYear) + 2) / 153) | 0;
	var month = mp + ((mp < 10) ? 3 : (-9));
	var year = yearOfEra + (era * 400);
	return {
		en: (dayOfYear - ((((153 * mp) + 2) / 5) | 0)) + 1,
		$7: month,
		fy: year + ((month <= 2) ? 1 : 0)
	};
};
var $elm$time$Time$toDay = F2(
	function (zone, time) {
		return $elm$time$Time$toCivil(
			A2($elm$time$Time$toAdjustedMinutes, zone, time)).en;
	});
var $elm$time$Time$toMonth = F2(
	function (zone, time) {
		var _v0 = $elm$time$Time$toCivil(
			A2($elm$time$Time$toAdjustedMinutes, zone, time)).$7;
		switch (_v0) {
			case 1:
				return 0;
			case 2:
				return 1;
			case 3:
				return 2;
			case 4:
				return 3;
			case 5:
				return 4;
			case 6:
				return 5;
			case 7:
				return 6;
			case 8:
				return 7;
			case 9:
				return 8;
			case 10:
				return 9;
			case 11:
				return 10;
			default:
				return 11;
		}
	});
var $elm$time$Time$toYear = F2(
	function (zone, time) {
		return $elm$time$Time$toCivil(
			A2($elm$time$Time$toAdjustedMinutes, zone, time)).fy;
	});
var $justinmimbs$date$Date$fromPosix = F2(
	function (zone, posix) {
		return A3(
			$justinmimbs$date$Date$fromCalendarDate,
			A2($elm$time$Time$toYear, zone, posix),
			A2($elm$time$Time$toMonth, zone, posix),
			A2($elm$time$Time$toDay, zone, posix));
	});
var $justinmimbs$date$Date$toRataDie = function (_v0) {
	var rd = _v0;
	return rd;
};
var $justinmimbs$time_extra$Time$Extra$dateToMillis = function (date) {
	var daysSinceEpoch = $justinmimbs$date$Date$toRataDie(date) - 719163;
	return daysSinceEpoch * 86400000;
};
var $justinmimbs$time_extra$Time$Extra$timeFromClock = F4(
	function (hour, minute, second, millisecond) {
		return (((hour * 3600000) + (minute * 60000)) + (second * 1000)) + millisecond;
	});
var $elm$time$Time$toHour = F2(
	function (zone, time) {
		return A2(
			$elm$core$Basics$modBy,
			24,
			A2(
				$elm$time$Time$flooredDiv,
				A2($elm$time$Time$toAdjustedMinutes, zone, time),
				60));
	});
var $elm$time$Time$toMillis = F2(
	function (_v0, time) {
		return A2(
			$elm$core$Basics$modBy,
			1000,
			$elm$time$Time$posixToMillis(time));
	});
var $elm$time$Time$toMinute = F2(
	function (zone, time) {
		return A2(
			$elm$core$Basics$modBy,
			60,
			A2($elm$time$Time$toAdjustedMinutes, zone, time));
	});
var $elm$time$Time$toSecond = F2(
	function (_v0, time) {
		return A2(
			$elm$core$Basics$modBy,
			60,
			A2(
				$elm$time$Time$flooredDiv,
				$elm$time$Time$posixToMillis(time),
				1000));
	});
var $justinmimbs$time_extra$Time$Extra$timeFromPosix = F2(
	function (zone, posix) {
		return A4(
			$justinmimbs$time_extra$Time$Extra$timeFromClock,
			A2($elm$time$Time$toHour, zone, posix),
			A2($elm$time$Time$toMinute, zone, posix),
			A2($elm$time$Time$toSecond, zone, posix),
			A2($elm$time$Time$toMillis, zone, posix));
	});
var $justinmimbs$time_extra$Time$Extra$toOffset = F2(
	function (zone, posix) {
		var millis = $elm$time$Time$posixToMillis(posix);
		var localMillis = $justinmimbs$time_extra$Time$Extra$dateToMillis(
			A2($justinmimbs$date$Date$fromPosix, zone, posix)) + A2($justinmimbs$time_extra$Time$Extra$timeFromPosix, zone, posix);
		return ((localMillis - millis) / 60000) | 0;
	});
var $justinmimbs$time_extra$Time$Extra$posixFromDateTime = F3(
	function (zone, date, time) {
		var millis = $justinmimbs$time_extra$Time$Extra$dateToMillis(date) + time;
		var offset0 = A2(
			$justinmimbs$time_extra$Time$Extra$toOffset,
			zone,
			$elm$time$Time$millisToPosix(millis));
		var posix1 = $elm$time$Time$millisToPosix(millis - (offset0 * 60000));
		var offset1 = A2($justinmimbs$time_extra$Time$Extra$toOffset, zone, posix1);
		if (_Utils_eq(offset0, offset1)) {
			return posix1;
		} else {
			var posix2 = $elm$time$Time$millisToPosix(millis - (offset1 * 60000));
			var offset2 = A2($justinmimbs$time_extra$Time$Extra$toOffset, zone, posix2);
			return _Utils_eq(offset1, offset2) ? posix2 : posix1;
		}
	});
var $justinmimbs$time_extra$Time$Extra$add = F4(
	function (interval, n, zone, posix) {
		add:
		while (true) {
			switch (interval) {
				case 15:
					return $elm$time$Time$millisToPosix(
						$elm$time$Time$posixToMillis(posix) + n);
				case 14:
					var $temp$interval = 15,
						$temp$n = n * 1000,
						$temp$zone = zone,
						$temp$posix = posix;
					interval = $temp$interval;
					n = $temp$n;
					zone = $temp$zone;
					posix = $temp$posix;
					continue add;
				case 13:
					var $temp$interval = 15,
						$temp$n = n * 60000,
						$temp$zone = zone,
						$temp$posix = posix;
					interval = $temp$interval;
					n = $temp$n;
					zone = $temp$zone;
					posix = $temp$posix;
					continue add;
				case 12:
					var $temp$interval = 15,
						$temp$n = n * 3600000,
						$temp$zone = zone,
						$temp$posix = posix;
					interval = $temp$interval;
					n = $temp$n;
					zone = $temp$zone;
					posix = $temp$posix;
					continue add;
				case 11:
					return A3(
						$justinmimbs$time_extra$Time$Extra$posixFromDateTime,
						zone,
						A3(
							$justinmimbs$date$Date$add,
							3,
							n,
							A2($justinmimbs$date$Date$fromPosix, zone, posix)),
						A2($justinmimbs$time_extra$Time$Extra$timeFromPosix, zone, posix));
				case 2:
					return A3(
						$justinmimbs$time_extra$Time$Extra$posixFromDateTime,
						zone,
						A3(
							$justinmimbs$date$Date$add,
							1,
							n,
							A2($justinmimbs$date$Date$fromPosix, zone, posix)),
						A2($justinmimbs$time_extra$Time$Extra$timeFromPosix, zone, posix));
				case 0:
					var $temp$interval = 2,
						$temp$n = n * 12,
						$temp$zone = zone,
						$temp$posix = posix;
					interval = $temp$interval;
					n = $temp$n;
					zone = $temp$zone;
					posix = $temp$posix;
					continue add;
				case 1:
					var $temp$interval = 2,
						$temp$n = n * 3,
						$temp$zone = zone,
						$temp$posix = posix;
					interval = $temp$interval;
					n = $temp$n;
					zone = $temp$zone;
					posix = $temp$posix;
					continue add;
				case 3:
					var $temp$interval = 11,
						$temp$n = n * 7,
						$temp$zone = zone,
						$temp$posix = posix;
					interval = $temp$interval;
					n = $temp$n;
					zone = $temp$zone;
					posix = $temp$posix;
					continue add;
				default:
					var weekday = interval;
					var $temp$interval = 11,
						$temp$n = n * 7,
						$temp$zone = zone,
						$temp$posix = posix;
					interval = $temp$interval;
					n = $temp$n;
					zone = $temp$zone;
					posix = $temp$posix;
					continue add;
			}
		}
	});
var $rtfeldman$elm_iso8601_date_strings$Iso8601$fromMonth = function (month) {
	switch (month) {
		case 0:
			return 1;
		case 1:
			return 2;
		case 2:
			return 3;
		case 3:
			return 4;
		case 4:
			return 5;
		case 5:
			return 6;
		case 6:
			return 7;
		case 7:
			return 8;
		case 8:
			return 9;
		case 9:
			return 10;
		case 10:
			return 11;
		default:
			return 12;
	}
};
var $rtfeldman$elm_iso8601_date_strings$Iso8601$toPaddedString = F2(
	function (digits, time) {
		return A3(
			$elm$core$String$padLeft,
			digits,
			'0',
			$elm$core$String$fromInt(time));
	});
var $elm$time$Time$utc = A2($elm$time$Time$Zone, 0, _List_Nil);
var $rtfeldman$elm_iso8601_date_strings$Iso8601$fromTime = function (time) {
	return A2(
		$rtfeldman$elm_iso8601_date_strings$Iso8601$toPaddedString,
		4,
		A2($elm$time$Time$toYear, $elm$time$Time$utc, time)) + ('-' + (A2(
		$rtfeldman$elm_iso8601_date_strings$Iso8601$toPaddedString,
		2,
		$rtfeldman$elm_iso8601_date_strings$Iso8601$fromMonth(
			A2($elm$time$Time$toMonth, $elm$time$Time$utc, time))) + ('-' + (A2(
		$rtfeldman$elm_iso8601_date_strings$Iso8601$toPaddedString,
		2,
		A2($elm$time$Time$toDay, $elm$time$Time$utc, time)) + ('T' + (A2(
		$rtfeldman$elm_iso8601_date_strings$Iso8601$toPaddedString,
		2,
		A2($elm$time$Time$toHour, $elm$time$Time$utc, time)) + (':' + (A2(
		$rtfeldman$elm_iso8601_date_strings$Iso8601$toPaddedString,
		2,
		A2($elm$time$Time$toMinute, $elm$time$Time$utc, time)) + (':' + (A2(
		$rtfeldman$elm_iso8601_date_strings$Iso8601$toPaddedString,
		2,
		A2($elm$time$Time$toSecond, $elm$time$Time$utc, time)) + ('.' + (A2(
		$rtfeldman$elm_iso8601_date_strings$Iso8601$toPaddedString,
		3,
		A2($elm$time$Time$toMillis, $elm$time$Time$utc, time)) + 'Z'))))))))))));
};
var $rtfeldman$elm_iso8601_date_strings$Iso8601$encode = A2($elm$core$Basics$composeR, $rtfeldman$elm_iso8601_date_strings$Iso8601$fromTime, $elm$json$Json$Encode$string);
var $author$project$Libs$Time$encodeIso = function (value) {
	return $rtfeldman$elm_iso8601_date_strings$Iso8601$encode(value);
};
var $author$project$Services$Backend$expectEmpty = function (toMsg) {
	return A2(
		$elm$http$Http$expectStringResponse,
		toMsg,
		A2(
			$elm$core$Basics$composeR,
			$author$project$Services$Backend$handleResponse,
			$elm$core$Result$andThen(
				function (v) {
					return A3(
						$author$project$Libs$Bool$cond,
						v === '',
						$elm$core$Result$Ok(0),
						$elm$core$Result$Err(
							A2($author$project$Services$Backend$Error, 0, 'Expected empty string but got: ' + v)));
				})));
};
var $author$project$Models$ProjectInfo$organizationId = function (p) {
	return A3(
		$author$project$Libs$Maybe$mapOrElse,
		function ($) {
			return $.H;
		},
		$author$project$Models$OrganizationId$zero,
		p.nx);
};
var $author$project$Services$Backend$createProjectToken = F4(
	function (name, expireAt, project, toMsg) {
		return $author$project$Services$Backend$riskyPost(
			{
				kM: $elm$http$Http$jsonBody(
					$elm$json$Json$Encode$object(
						_List_fromArray(
							[
								_Utils_Tuple2(
								'name',
								$elm$json$Json$Encode$string(name)),
								_Utils_Tuple2(
								'expire_at',
								A2($author$project$Libs$Json$Encode$maybe, $author$project$Libs$Time$encodeIso, expireAt))
							]))),
				lI: $author$project$Services$Backend$expectEmpty(toMsg),
				o1: '/api/v1/organizations/' + ($author$project$Models$ProjectInfo$organizationId(project) + ('/projects/' + (project.H + '/access-tokens')))
			});
	});
var $author$project$Models$ProjectToken$ProjectToken = F7(
	function (id, name, nbAccess, lastAccess, expireAt, createdAt, createdBy) {
		return {ic: createdAt, k7: createdBy, lK: expireAt, H: id, ml: lastAccess, eS: name, m0: nbAccess};
	});
var $author$project$Models$ProjectTokenId$decode = $author$project$Libs$Models$Uuid$decode;
var $author$project$Models$User$UserLight = function (id) {
	return function (slug) {
		return function (name) {
			return function (email) {
				return function (avatar) {
					return function (company) {
						return function (location) {
							return function (description) {
								return function (github) {
									return function (twitter) {
										return {fD: avatar, h6: company, bf: description, io: email, iE: github, H: id, gu: location, eS: name, hr: slug, ka: twitter};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var $author$project$Libs$Models$Email$isValid = function (value) {
	return A2($author$project$Libs$Regex$matchI, '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$', value);
};
var $author$project$Libs$Models$Email$decode = A2(
	$elm$json$Json$Decode$andThen,
	function (v) {
		return $author$project$Libs$Models$Email$isValid(v) ? $elm$json$Json$Decode$succeed(v) : $elm$json$Json$Decode$fail('\'' + (v + '\' is not a valid Email'));
	},
	$elm$json$Json$Decode$string);
var $author$project$Models$UserId$decode = $author$project$Libs$Models$Uuid$decode;
var $author$project$Models$UserSlug$decode = $author$project$Libs$Models$Slug$decode;
var $author$project$Models$Username$decode = $elm$json$Json$Decode$string;
var $author$project$Models$User$decodeLight = $author$project$Libs$Json$Decode$map10($author$project$Models$User$UserLight)(
	A2($elm$json$Json$Decode$field, 'id', $author$project$Models$UserId$decode))(
	A2($elm$json$Json$Decode$field, 'slug', $author$project$Models$UserSlug$decode))(
	A2($elm$json$Json$Decode$field, 'name', $author$project$Models$Username$decode))(
	A2($elm$json$Json$Decode$field, 'email', $author$project$Libs$Models$Email$decode))(
	A2($elm$json$Json$Decode$field, 'avatar', $elm$json$Json$Decode$string))(
	A2($author$project$Libs$Json$Decode$maybeField, 'company', $elm$json$Json$Decode$string))(
	A2($author$project$Libs$Json$Decode$maybeField, 'location', $elm$json$Json$Decode$string))(
	A2($author$project$Libs$Json$Decode$maybeField, 'description', $elm$json$Json$Decode$string))(
	A2($author$project$Libs$Json$Decode$maybeField, 'github_username', $author$project$Models$Username$decode))(
	A2($author$project$Libs$Json$Decode$maybeField, 'twitter_username', $author$project$Models$Username$decode));
var $author$project$Models$ProjectToken$decode = A8(
	$elm$json$Json$Decode$map7,
	$author$project$Models$ProjectToken$ProjectToken,
	A2($elm$json$Json$Decode$field, 'id', $author$project$Models$ProjectTokenId$decode),
	A2($elm$json$Json$Decode$field, 'name', $elm$json$Json$Decode$string),
	A2($elm$json$Json$Decode$field, 'nb_access', $elm$json$Json$Decode$int),
	A2($author$project$Libs$Json$Decode$maybeField, 'last_access', $author$project$Libs$Time$decode),
	A2($author$project$Libs$Json$Decode$maybeField, 'expire_at', $author$project$Libs$Time$decode),
	A2($elm$json$Json$Decode$field, 'created_at', $author$project$Libs$Time$decode),
	A2($elm$json$Json$Decode$field, 'created_by', $author$project$Models$User$decodeLight));
var $author$project$Services$Backend$riskyGet = function (r) {
	return $elm$http$Http$riskyRequest(
		{kM: $elm$http$Http$emptyBody, lI: r.lI, f9: _List_Nil, gy: 'GET', hK: $elm$core$Maybe$Nothing, hM: $elm$core$Maybe$Nothing, o1: r.o1});
};
var $author$project$Services$Backend$getProjectTokens = F2(
	function (project, toMsg) {
		return $author$project$Services$Backend$riskyGet(
			{
				lI: A2(
					$author$project$Services$Backend$expectJson,
					toMsg,
					$elm$json$Json$Decode$list($author$project$Models$ProjectToken$decode)),
				o1: '/api/v1/organizations/' + ($author$project$Models$ProjectInfo$organizationId(project) + ('/projects/' + (project.H + '/access-tokens')))
			});
	});
var $author$project$PagesComponents$Organization_$Project_$Models$EmbedKind$EmbedProjectId = 0;
var $author$project$PagesComponents$Organization_$Project_$Models$EmbedKind$EmbedProjectUrl = 1;
var $author$project$PagesComponents$Organization_$Project_$Models$EmbedMode$default = $author$project$PagesComponents$Organization_$Project_$Models$EmbedMode$layout;
var $author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$init = F2(
	function (dialogId, maybeErd) {
		return A3(
			$author$project$Libs$Maybe$mapOrElse,
			function (erd) {
				return {cX: erd.nN.H, H: dialogId, gi: 0, aM: erd.id, eQ: $author$project$PagesComponents$Organization_$Project_$Models$EmbedMode$default, aJ: $elm$core$Maybe$Nothing, d0: _List_Nil};
			},
			{
				cX: '',
				H: dialogId,
				gi: 1,
				aM: A3(
					$author$project$Libs$Maybe$mapOrElse,
					function ($) {
						return $.id;
					},
					'',
					maybeErd),
				eQ: $author$project$PagesComponents$Organization_$Project_$Models$EmbedMode$default,
				aJ: $elm$core$Maybe$Nothing,
				d0: _List_Nil
			},
			A2(
				$author$project$Libs$Maybe$filter,
				function (erd) {
					return erd.nN.cD === 1;
				},
				maybeErd));
	});
var $author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$initTokenForm = {bi: $elm$core$Maybe$Nothing, c6: $elm$core$Maybe$Nothing, cp: false, eS: '', hL: $elm$core$Maybe$Nothing};
var $author$project$Services$Lenses$setTokenForm = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.aJ;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{aJ: value});
		}));
var $author$project$Services$Lenses$mapTokenFormM = A2(
	$author$project$Services$Lenses$mapM_,
	function ($) {
		return $.aJ;
	},
	$author$project$Services$Lenses$setTokenForm);
var $author$project$Services$Backend$riskyDelete = function (r) {
	return $elm$http$Http$riskyRequest(
		{kM: $elm$http$Http$emptyBody, lI: r.lI, f9: _List_Nil, gy: 'DELETE', hK: $elm$core$Maybe$Nothing, hM: $elm$core$Maybe$Nothing, o1: r.o1});
};
var $author$project$Services$Backend$revokeProjectToken = F3(
	function (token, project, toMsg) {
		return $author$project$Services$Backend$riskyDelete(
			{
				lI: $author$project$Services$Backend$expectEmpty(toMsg),
				o1: '/api/v1/organizations/' + ($author$project$Models$ProjectInfo$organizationId(project) + ('/projects/' + (project.H + ('/access-tokens/' + token.H))))
			});
	});
var $author$project$Services$Lenses$setExpire = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.c6;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{c6: value});
		}));
var $author$project$Services$Lenses$setToken = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.hL;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{hL: value});
		}));
var $author$project$Services$Lenses$setTokens = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.d0;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{d0: value});
		}));
var $author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$update = F8(
	function (wrap, modalOpen, toast, zone, now, erd, msg, model) {
		switch (msg.$) {
			case 0:
				return _Utils_Tuple2(
					$elm$core$Maybe$Just(
						A2($author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$init, $author$project$Conf$ids.ot, erd)),
					$elm$core$Platform$Cmd$batch(
						_List_fromArray(
							[
								A2(
								$author$project$Libs$Task$sendAfter,
								1,
								modalOpen($author$project$Conf$ids.ot))
							])));
			case 1:
				return _Utils_Tuple2($elm$core$Maybe$Nothing, $elm$core$Platform$Cmd$none);
			case 2:
				var kind = msg.a;
				return _Utils_Tuple2(
					A2(
						$elm$core$Maybe$map,
						function (s) {
							return _Utils_update(
								s,
								{cX: '', gi: kind, aJ: $elm$core$Maybe$Nothing});
						},
						model),
					$elm$core$Platform$Cmd$none);
			case 3:
				var content = msg.a;
				return _Utils_Tuple2(
					A2(
						$elm$core$Maybe$map,
						function (s) {
							return _Utils_update(
								s,
								{cX: content});
						},
						model),
					$elm$core$Platform$Cmd$none);
			case 4:
				return _Utils_Tuple2(
					A2(
						$elm$core$Maybe$map,
						$author$project$Services$Lenses$setTokenForm(
							$elm$core$Maybe$Just($author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$initTokenForm)),
						model),
					A2($author$project$PagesComponents$Organization_$Project_$Models$Erd$getOrganizationM, $elm$core$Maybe$Nothing, erd).jv.nM ? A3(
						$author$project$Libs$Maybe$mapOrElse,
						function (e) {
							return A2(
								$author$project$Services$Backend$getProjectTokens,
								e.nN,
								A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$GotTokens, wrap));
						},
						$elm$core$Platform$Cmd$none,
						erd) : $author$project$Ports$track(
						A2($author$project$Track$proPlanLimit, $author$project$Conf$features.nM.eS, erd)));
			case 5:
				return _Utils_Tuple2(
					A2(
						$elm$core$Maybe$map,
						$author$project$Services$Lenses$setTokenForm($elm$core$Maybe$Nothing),
						model),
					$elm$core$Platform$Cmd$none);
			case 6:
				if (!msg.a.$) {
					var tokens = msg.a.a;
					return _Utils_Tuple2(
						A2(
							$elm$core$Maybe$map,
							$author$project$Services$Lenses$setTokens(tokens),
							model),
						$elm$core$Platform$Cmd$none);
				} else {
					var err = msg.a.a;
					return _Utils_Tuple2(
						model,
						$author$project$Libs$Task$send(
							toast(
								A2(
									$author$project$Services$Toasts$create,
									'warning',
									$author$project$Services$Backend$errorToString(err)))));
				}
			case 7:
				var name = msg.a;
				return _Utils_Tuple2(
					A2(
						$elm$core$Maybe$map,
						$author$project$Services$Lenses$mapTokenFormM(
							$author$project$Services$Lenses$setName(name)),
						model),
					$elm$core$Platform$Cmd$none);
			case 8:
				var expire = msg.a;
				return _Utils_Tuple2(
					A2(
						$elm$core$Maybe$map,
						$author$project$Services$Lenses$mapTokenFormM(
							$author$project$Services$Lenses$setExpire(expire)),
						model),
					$elm$core$Platform$Cmd$none);
			case 9:
				var form = msg.a;
				return _Utils_Tuple2(
					A2(
						$elm$core$Maybe$map,
						$author$project$Services$Lenses$mapTokenFormM(
							function (f) {
								return _Utils_update(
									f,
									{bi: $elm$core$Maybe$Nothing, cp: true});
							}),
						model),
					A3(
						$author$project$Libs$Maybe$mapOrElse,
						function (e) {
							return A4(
								$author$project$Services$Backend$createProjectToken,
								form.eS,
								A2(
									$elm$core$Maybe$map,
									function (i) {
										return A4($justinmimbs$time_extra$Time$Extra$add, i, 1, zone, now);
									},
									form.c6),
								e.nN,
								A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$TokenCreated, wrap));
						},
						$elm$core$Platform$Cmd$none,
						erd));
			case 10:
				if (!msg.a.$) {
					return _Utils_Tuple2(
						A2(
							$elm$core$Maybe$map,
							$author$project$Services$Lenses$mapTokenFormM(
								function (f) {
									return _Utils_update(
										f,
										{bi: $elm$core$Maybe$Nothing, c6: $elm$core$Maybe$Nothing, cp: false, eS: ''});
								}),
							model),
						A3(
							$author$project$Libs$Maybe$mapOrElse,
							function (e) {
								return A2(
									$author$project$Services$Backend$getProjectTokens,
									e.nN,
									A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$GotTokens, wrap));
							},
							$elm$core$Platform$Cmd$none,
							erd));
				} else {
					var err = msg.a.a;
					return _Utils_Tuple2(
						A2(
							$elm$core$Maybe$map,
							$author$project$Services$Lenses$mapTokenFormM(
								function (f) {
									return _Utils_update(
										f,
										{
											bi: $elm$core$Maybe$Just(
												$author$project$Services$Backend$errorToString(err)),
											cp: false
										});
								}),
							model),
						$elm$core$Platform$Cmd$none);
				}
			case 11:
				var token = msg.a;
				return _Utils_Tuple2(
					A2(
						$elm$core$Maybe$map,
						$author$project$Services$Lenses$mapTokenFormM(
							function (f) {
								return _Utils_update(
									f,
									{bi: $elm$core$Maybe$Nothing});
							}),
						model),
					A3(
						$author$project$Libs$Maybe$mapOrElse,
						function (e) {
							return A3(
								$author$project$Services$Backend$revokeProjectToken,
								token,
								e.nN,
								A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$TokenRevoked, wrap));
						},
						$elm$core$Platform$Cmd$none,
						erd));
			case 12:
				if (!msg.a.$) {
					return _Utils_Tuple2(
						model,
						A3(
							$author$project$Libs$Maybe$mapOrElse,
							function (e) {
								return A2(
									$author$project$Services$Backend$getProjectTokens,
									e.nN,
									A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$GotTokens, wrap));
							},
							$elm$core$Platform$Cmd$none,
							erd));
				} else {
					var err = msg.a.a;
					return _Utils_Tuple2(
						A2(
							$elm$core$Maybe$map,
							$author$project$Services$Lenses$mapTokenFormM(
								function (f) {
									return _Utils_update(
										f,
										{
											bi: $elm$core$Maybe$Just(
												$author$project$Services$Backend$errorToString(err))
										});
								}),
							model),
						$elm$core$Platform$Cmd$none);
				}
			case 13:
				var token = msg.a;
				return _Utils_Tuple2(
					A2(
						$elm$core$Maybe$map,
						$author$project$Services$Lenses$mapTokenFormM(
							$author$project$Services$Lenses$setToken(token)),
						model),
					$elm$core$Platform$Cmd$none);
			case 14:
				var layout = msg.a;
				return _Utils_Tuple2(
					A2(
						$elm$core$Maybe$map,
						function (s) {
							return _Utils_update(
								s,
								{aM: layout});
						},
						model),
					$elm$core$Platform$Cmd$none);
			default:
				var mode = msg.a;
				return _Utils_Tuple2(
					A2(
						$elm$core$Maybe$map,
						function (s) {
							return _Utils_update(
								s,
								{eQ: mode});
						},
						model),
					$elm$core$Platform$Cmd$none);
		}
	});
var $author$project$PagesComponents$Organization_$Project_$Models$Erd$canCreateLayout = function (erd) {
	return true;
};
var $author$project$Track$layoutCreated = F2(
	function (project, layout) {
		return A3(
			$author$project$Track$createEvent,
			'editor_layout_created',
			$author$project$Track$layoutDetails(layout),
			$elm$core$Maybe$Just(project));
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$NewLayout$createLayout = F5(
	function (toast, from, name, now, erd) {
		return A3(
			$author$project$Libs$Maybe$mapOrElse,
			function (_v0) {
				return _Utils_Tuple2(
					erd,
					$author$project$Libs$Task$send(
						toast(
							$author$project$Services$Toasts$error('Layout ' + (name + ' already exists')))));
			},
			function (layout) {
				return _Utils_Tuple2(
					A2(
						$author$project$Services$Lenses$mapLayouts,
						A2($elm$core$Dict$insert, name, layout),
						A2($author$project$Services$Lenses$setCurrentLayout, name, erd)),
					$author$project$Ports$track(
						A2($author$project$Track$layoutCreated, erd.nN, layout)));
			}(
				A2(
					$elm$core$Maybe$withDefault,
					$author$project$PagesComponents$Organization_$Project_$Models$ErdLayout$empty(now),
					A2(
						$elm$core$Maybe$andThen,
						function (f) {
							return A2($elm$core$Dict$get, f, erd.i$);
						},
						from))),
			A2($elm$core$Dict$get, name, erd.i$));
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$NewLayout$dialogId = 'new-layout-dialog';
var $author$project$Components$Slices$NewLayoutBody$init = F2(
	function (id, from) {
		return {bK: from, H: id, eS: ''};
	});
var $author$project$Components$Slices$ProPlan$layoutsModalBody = F3(
	function (organization, close, titleId) {
		var color = $author$project$Libs$Tailwind$rose;
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('max-w-2xl')
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$author$project$Libs$Html$Attributes$css(
							_List_fromArray(
								[
									'px-6 pt-6',
									$author$project$Libs$Tailwind$sm(
									_List_fromArray(
										['flex items-start']))
								]))
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$author$project$Libs$Html$Attributes$css(
									_List_fromArray(
										[
											$author$project$Libs$Tailwind$bg_100(color),
											'mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full',
											$author$project$Libs$Tailwind$sm(
											_List_fromArray(
												['mx-0 h-10 w-10']))
										]))
								]),
							_List_fromArray(
								[
									A2(
									$author$project$Components$Atoms$Icon$outline,
									201,
									$author$project$Libs$Tailwind$text_600(color))
								])),
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$author$project$Libs$Html$Attributes$css(
									_List_fromArray(
										[
											'mt-3 text-center',
											$author$project$Libs$Tailwind$sm(
											_List_fromArray(
												['mt-0 ml-4 text-left']))
										]))
								]),
							_List_fromArray(
								[
									A2(
									$elm$html$Html$h3,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$id(titleId),
											$elm$html$Html$Attributes$class('text-lg leading-6 font-medium text-gray-900')
										]),
									_List_fromArray(
										[
											$elm$html$Html$text('New layout')
										])),
									A2(
									$elm$html$Html$div,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$class('mt-3')
										]),
									_List_fromArray(
										[
											A2(
											$elm$html$Html$p,
											_List_fromArray(
												[
													$elm$html$Html$Attributes$class('text-sm text-gray-500')
												]),
											_List_fromArray(
												[
													$elm$html$Html$text('Hey! It\'s so great to see people using Azimutt and we are quite proud to make this tool for you. It\'s already great but we have so much more to do to make it at full potential, we need your support to make it grow and help more and more people.')
												])),
											A2(
											$elm$html$Html$p,
											_List_fromArray(
												[
													$elm$html$Html$Attributes$class('text-sm text-gray-500')
												]),
											_List_fromArray(
												[
													$elm$html$Html$text('That\'s why we created a paid plan. Please consider your contribution to this awesome Azimutt community, it will '),
													$author$project$Libs$Html$bText('bring us much further together'),
													$elm$html$Html$text('.')
												]))
										]))
								]))
						])),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('px-6 py-3 mt-6 flex items-center flex-row-reverse bg-gray-50 rounded-b-lg')
						]),
					_List_fromArray(
						[
							A3(
							$author$project$Components$Atoms$Link$primary3,
							color,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$href(
									A2($author$project$Services$Backend$organizationBillingUrl, organization.H, $author$project$Conf$features.i$.eS)),
									$elm$html$Html$Attributes$target('_blank'),
									$elm$html$Html$Attributes$rel('noopener'),
									$author$project$Libs$Html$Attributes$css(
									_List_fromArray(
										[
											'w-full text-base',
											$author$project$Libs$Tailwind$sm(
											_List_fromArray(
												['ml-3 w-auto text-sm']))
										]))
								]),
							_List_fromArray(
								[
									A2($author$project$Components$Atoms$Icon$solid, 189, 'mr-1'),
									$elm$html$Html$text('Upgrade plan')
								])),
							A3(
							$author$project$Components$Atoms$Button$white3,
							$author$project$Libs$Tailwind$gray,
							_List_fromArray(
								[
									$elm$html$Html$Events$onClick(close),
									$author$project$Libs$Html$Attributes$css(
									_List_fromArray(
										[
											'mt-3 w-full text-base',
											$author$project$Libs$Tailwind$sm(
											_List_fromArray(
												['mt-0 w-auto text-sm']))
										]))
								]),
							_List_fromArray(
								[
									$elm$html$Html$text('Cancel')
								]))
						]))
				]));
	});
var $author$project$Services$Lenses$setNewLayout = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.m3;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{m3: value});
		}));
var $author$project$Services$Lenses$mapNewLayoutMCmd = A2(
	$author$project$Services$Lenses$mapMCmd_,
	function ($) {
		return $.m3;
	},
	$author$project$Services$Lenses$setNewLayout);
var $author$project$Components$Slices$NewLayoutBody$update = F2(
	function (msg, model) {
		var value = msg;
		return _Utils_Tuple2(
			_Utils_update(
				model,
				{eS: value}),
			$elm$core$Platform$Cmd$none);
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$NewLayout$update = F6(
	function (modalOpen, toast, customModalOpen, now, msg, model) {
		switch (msg.$) {
			case 0:
				var from = msg.a;
				return $author$project$PagesComponents$Organization_$Project_$Models$Erd$canCreateLayout(model.lE) ? _Utils_Tuple2(
					A2(
						$author$project$Services$Lenses$setNewLayout,
						$elm$core$Maybe$Just(
							A2($author$project$Components$Slices$NewLayoutBody$init, $author$project$PagesComponents$Organization_$Project_$Views$Modals$NewLayout$dialogId, from)),
						model),
					$elm$core$Platform$Cmd$batch(
						_List_fromArray(
							[
								A2(
								$author$project$Libs$Task$sendAfter,
								1,
								modalOpen($author$project$PagesComponents$Organization_$Project_$Views$Modals$NewLayout$dialogId))
							]))) : _Utils_Tuple2(
					model,
					$elm$core$Platform$Cmd$batch(
						_List_fromArray(
							[
								$author$project$Libs$Task$send(
								customModalOpen(
									$author$project$Components$Slices$ProPlan$layoutsModalBody(
										A2($author$project$PagesComponents$Organization_$Project_$Models$Erd$getOrganizationM, $elm$core$Maybe$Nothing, model.lE)))),
								$author$project$Ports$track(
								A2($author$project$Track$proPlanLimit, $author$project$Conf$features.i$.eS, model.lE))
							])));
			case 1:
				var m = msg.a;
				return A2(
					$author$project$Services$Lenses$mapNewLayoutMCmd,
					$author$project$Components$Slices$NewLayoutBody$update(m),
					model);
			case 2:
				var from = msg.a;
				var name = msg.b;
				return $author$project$PagesComponents$Organization_$Project_$Updates$Utils$setDirtyCmd(
					A2(
						$author$project$Services$Lenses$mapErdMCmd,
						A4($author$project$PagesComponents$Organization_$Project_$Views$Modals$NewLayout$createLayout, toast, from, name, now),
						A2($author$project$Services$Lenses$setNewLayout, $elm$core$Maybe$Nothing, model)));
			default:
				return _Utils_Tuple2(
					A2($author$project$Services$Lenses$setNewLayout, $elm$core$Maybe$Nothing, model),
					$elm$core$Platform$Cmd$none);
		}
	});
var $author$project$Ports$UpdateProject = function (a) {
	return {$: 13, a: a};
};
var $author$project$Ports$updateProject = function (project) {
	return $author$project$Ports$messageToJs(
		$author$project$Ports$UpdateProject(project));
};
var $author$project$PagesComponents$Organization_$Project_$Updates$Project$updateProject = function (model) {
	return model.Z.fa ? _Utils_Tuple2(
		model,
		$elm$core$Platform$Cmd$batch(
			A3(
				$author$project$Libs$Maybe$mapOrElse,
				function (p) {
					return A2(
						$elm$core$Maybe$withDefault,
						_List_fromArray(
							[
								$author$project$Libs$Task$send(
								$author$project$PagesComponents$Organization_$Project_$Models$Toast(
									$author$project$Services$Toasts$info('Project saved')))
							]),
						A2(
							$elm$core$Maybe$map,
							function (_v0) {
								return _List_fromArray(
									[
										$author$project$Ports$updateProject(p)
									]);
							},
							p.nx));
				},
				_List_fromArray(
					[
						$author$project$Libs$Task$send(
						$author$project$PagesComponents$Organization_$Project_$Models$Toast(
							$author$project$Services$Toasts$warning('No project to save')))
					]),
				A2($elm$core$Maybe$map, $author$project$PagesComponents$Organization_$Project_$Models$Erd$unpack, model.lE)))) : _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
};
var $author$project$PagesComponents$Organization_$Project_$Updates$Canvas$zoomCanvas = F3(
	function (delta, erdElem, canvas) {
		return A4(
			$author$project$PagesComponents$Organization_$Project_$Updates$Canvas$performZoom,
			erdElem,
			delta,
			$author$project$Models$Area$centerViewport(erdElem),
			canvas);
	});
var $author$project$PagesComponents$Organization_$Project_$Updates$update = F8(
	function (currentLayout, zone, now, urlOrganization, organizations, projects, msg, model) {
		switch (msg.$) {
			case 0:
				return _Utils_Tuple2(
					A2(
						$author$project$Services$Lenses$mapNavbar,
						$author$project$Services$Lenses$mapMobileMenuOpen($elm$core$Basics$not),
						model),
					$elm$core$Platform$Cmd$none);
			case 1:
				var search = msg.a;
				return _Utils_Tuple2(
					A2(
						$author$project$Services$Lenses$mapNavbar,
						$author$project$Services$Lenses$mapSearch(
							A2(
								$elm$core$Basics$composeR,
								$author$project$Services$Lenses$setText(search),
								$author$project$Services$Lenses$setActive(0))),
						model),
					$elm$core$Platform$Cmd$none);
			case 2:
				var kind = msg.a;
				var table = msg.b;
				return A2(
					$elm$core$List$any,
					function (t) {
						return _Utils_eq(t.H, table);
					},
					A3(
						$author$project$Libs$Maybe$mapOrElse,
						A2(
							$elm$core$Basics$composeR,
							$author$project$PagesComponents$Organization_$Project_$Models$Erd$currentLayout,
							function ($) {
								return $.oM;
							}),
						_List_Nil,
						model.lE)) ? _Utils_Tuple2(
					model,
					$elm$core$Platform$Cmd$batch(
						_List_fromArray(
							[
								$author$project$Libs$Task$send(
								$author$project$PagesComponents$Organization_$Project_$Models$GoToTable(table)),
								$author$project$Ports$track(
								A3($author$project$Track$searchClicked, kind, true, model.lE))
							]))) : _Utils_Tuple2(
					model,
					$elm$core$Platform$Cmd$batch(
						_List_fromArray(
							[
								$author$project$Libs$Task$send(
								A2($author$project$PagesComponents$Organization_$Project_$Models$ShowTable, table, $elm$core$Maybe$Nothing)),
								$author$project$Ports$track(
								A3($author$project$Track$searchClicked, kind, false, model.lE))
							])));
			case 3:
				return A3($author$project$PagesComponents$Organization_$Project_$Updates$Project$triggerSaveProject, urlOrganization, organizations, model);
			case 4:
				var name = msg.a;
				var organization = msg.b;
				var storage = msg.c;
				return A4($author$project$PagesComponents$Organization_$Project_$Updates$Project$createProject, name, organization, storage, model);
			case 5:
				return $author$project$PagesComponents$Organization_$Project_$Updates$Project$updateProject(model);
			case 6:
				var storage = msg.a;
				return A2($author$project$PagesComponents$Organization_$Project_$Updates$Project$moveProject, storage, model);
			case 7:
				var name = msg.a;
				return $author$project$PagesComponents$Organization_$Project_$Updates$Utils$setDirty(
					A2(
						$author$project$Services$Lenses$mapErdM,
						$author$project$Services$Lenses$mapProject(
							$author$project$Services$Lenses$setName(name)),
						model));
			case 8:
				var project = msg.a;
				return _Utils_Tuple2(
					model,
					A2(
						$author$project$Ports$deleteProject,
						project,
						$elm$core$Maybe$Just(
							$author$project$Services$Backend$organizationUrl(
								A2(
									$elm$core$Maybe$map,
									function ($) {
										return $.H;
									},
									project.nx)))));
			case 9:
				var id = msg.a;
				return $author$project$PagesComponents$Organization_$Project_$Updates$Utils$setDirtyCmd(
					A2(
						$author$project$Services$Lenses$mapErdMCmd,
						A3($author$project$PagesComponents$Organization_$Project_$Updates$Table$goToTable, now, id, model.lF),
						model));
			case 10:
				var id = msg.a;
				var hint = msg.b;
				return $author$project$PagesComponents$Organization_$Project_$Updates$Utils$setDirtyCmd(
					A2(
						$author$project$Services$Lenses$mapErdMCmd,
						A3($author$project$PagesComponents$Organization_$Project_$Updates$Table$showTable, now, id, hint),
						model));
			case 11:
				var ids = msg.a;
				var hint = msg.b;
				return $author$project$PagesComponents$Organization_$Project_$Updates$Utils$setDirtyCmd(
					A2(
						$author$project$Services$Lenses$mapErdMCmd,
						A3($author$project$PagesComponents$Organization_$Project_$Updates$Table$showTables, now, ids, hint),
						model));
			case 12:
				return $author$project$PagesComponents$Organization_$Project_$Updates$Utils$setDirtyCmd(
					A2(
						$author$project$Services$Lenses$mapErdMCmd,
						$author$project$PagesComponents$Organization_$Project_$Updates$Table$showAllTables(now),
						model));
			case 13:
				var id = msg.a;
				return $author$project$PagesComponents$Organization_$Project_$Updates$Utils$setDirty(
					A2(
						$author$project$Services$Lenses$mapHoverTable,
						function (h) {
							return A3(
								$author$project$Libs$Bool$cond,
								_Utils_eq(
									h,
									$elm$core$Maybe$Just(id)),
								$elm$core$Maybe$Nothing,
								h);
						},
						A2(
							$author$project$Services$Lenses$mapErdM,
							A2($author$project$PagesComponents$Organization_$Project_$Updates$Table$hideTable, now, id),
							model)));
			case 14:
				var id = msg.a;
				return $author$project$PagesComponents$Organization_$Project_$Updates$Utils$setDirtyCmd(
					A2(
						$author$project$Services$Lenses$mapErdMCmd,
						$author$project$PagesComponents$Organization_$Project_$Updates$Table$showRelatedTables(id),
						model));
			case 15:
				var id = msg.a;
				return $author$project$PagesComponents$Organization_$Project_$Updates$Utils$setDirtyCmd(
					A2(
						$author$project$Services$Lenses$mapErdMCmd,
						$author$project$PagesComponents$Organization_$Project_$Updates$Table$hideRelatedTables(id),
						model));
			case 16:
				var id = msg.a;
				var collapsed = A3(
					$author$project$Libs$Maybe$mapOrElse,
					A2(
						$elm$core$Basics$composeR,
						function ($) {
							return $.nU;
						},
						function ($) {
							return $.cS;
						}),
					false,
					A2(
						$elm$core$Maybe$andThen,
						A2(
							$elm$core$Basics$composeR,
							$author$project$PagesComponents$Organization_$Project_$Models$Erd$currentLayout,
							A2(
								$elm$core$Basics$composeR,
								function ($) {
									return $.oM;
								},
								A2(
									$author$project$Libs$List$findBy,
									function ($) {
										return $.H;
									},
									id))),
						model.lE));
				return $author$project$PagesComponents$Organization_$Project_$Updates$Utils$setDirtyCmd(
					A2(
						$author$project$Services$Lenses$mapErdMCmd,
						function (erd) {
							return A3(
								$author$project$PagesComponents$Organization_$Project_$Models$Erd$mapCurrentLayoutCmd,
								now,
								$author$project$Services$Lenses$mapTablesCmd(
									A3(
										$author$project$PagesComponents$Organization_$Project_$Updates$Table$mapTablePropOrSelected,
										erd.dM.cb,
										id,
										$author$project$Services$Lenses$mapProps(
											$author$project$Services$Lenses$setCollapsed(!collapsed)))),
								erd);
						},
						model));
			case 17:
				var table = msg.a.aq;
				var column = msg.a.bH;
				return $author$project$PagesComponents$Organization_$Project_$Updates$Utils$setDirty(
					A2(
						$author$project$Services$Lenses$mapErdM,
						A3($author$project$PagesComponents$Organization_$Project_$Updates$Table$showColumn, now, table, column),
						model));
			case 18:
				var table = msg.a.aq;
				var column = msg.a.bH;
				return $author$project$PagesComponents$Organization_$Project_$Updates$Utils$setDirty(
					A3(
						$author$project$PagesComponents$Organization_$Project_$Updates$Table$hoverNextColumn,
						table,
						column,
						A2(
							$author$project$Services$Lenses$mapErdM,
							A3($author$project$PagesComponents$Organization_$Project_$Updates$Table$hideColumn, now, table, column),
							model)));
			case 19:
				var id = msg.a;
				var kind = msg.b;
				return $author$project$PagesComponents$Organization_$Project_$Updates$Utils$setDirtyCmd(
					A2(
						$author$project$Services$Lenses$mapErdMCmd,
						A3($author$project$PagesComponents$Organization_$Project_$Updates$Table$showColumns, now, id, kind),
						model));
			case 20:
				var id = msg.a;
				var kind = msg.b;
				return $author$project$PagesComponents$Organization_$Project_$Updates$Utils$setDirtyCmd(
					A2(
						$author$project$Services$Lenses$mapErdMCmd,
						A3($author$project$PagesComponents$Organization_$Project_$Updates$Table$hideColumns, now, id, kind),
						model));
			case 21:
				var id = msg.a;
				var kind = msg.b;
				return $author$project$PagesComponents$Organization_$Project_$Updates$Utils$setDirtyCmd(
					A2(
						$author$project$Services$Lenses$mapErdMCmd,
						A3($author$project$PagesComponents$Organization_$Project_$Updates$Table$sortColumns, now, id, kind),
						model));
			case 22:
				var table = msg.a;
				var path = msg.b;
				var open = msg.c;
				return $author$project$PagesComponents$Organization_$Project_$Updates$Utils$setDirty(
					A2(
						$author$project$Services$Lenses$mapErdM,
						A4($author$project$PagesComponents$Organization_$Project_$Updates$Table$toggleNestedColumn, now, table, path, open),
						model));
			case 23:
				var id = msg.a;
				return $author$project$PagesComponents$Organization_$Project_$Updates$Utils$setDirty(
					A2(
						$author$project$Services$Lenses$mapErdM,
						A2(
							$author$project$PagesComponents$Organization_$Project_$Models$Erd$mapCurrentLayoutWithTime,
							now,
							$author$project$Services$Lenses$mapTables(
								A3(
									$author$project$Libs$List$updateBy,
									function ($) {
										return $.H;
									},
									id,
									$author$project$Services$Lenses$mapProps(
										$author$project$Services$Lenses$mapShowHiddenColumns($elm$core$Basics$not))))),
						model));
			case 24:
				var tableId = msg.a;
				var ctrl = msg.b;
				return A2($author$project$Libs$Maybe$any, $author$project$PagesComponents$Organization_$Project_$Models$DragState$hasMoved, model.ep) ? _Utils_Tuple2(model, $elm$core$Platform$Cmd$none) : $author$project$PagesComponents$Organization_$Project_$Updates$Utils$setDirty(
					A2(
						$author$project$Services$Lenses$mapErdM,
						A2(
							$author$project$PagesComponents$Organization_$Project_$Models$Erd$mapCurrentLayoutWithTime,
							now,
							$author$project$Services$Lenses$mapTables(
								$elm$core$List$map(
									function (t) {
										return A2(
											$author$project$Services$Lenses$mapProps,
											$author$project$Services$Lenses$mapSelected(
												function (s) {
													return A3(
														$author$project$Libs$Bool$cond,
														_Utils_eq(t.H, tableId),
														!s,
														A3($author$project$Libs$Bool$cond, ctrl, s, false));
												}),
											t);
									}))),
						model));
			case 25:
				return $author$project$PagesComponents$Organization_$Project_$Updates$Utils$setDirty(
					A2(
						$author$project$Services$Lenses$mapErdM,
						A2(
							$author$project$PagesComponents$Organization_$Project_$Models$Erd$mapCurrentLayoutWithTime,
							now,
							$author$project$Services$Lenses$mapTables(
								$elm$core$List$map(
									$author$project$Services$Lenses$mapProps(
										$author$project$Services$Lenses$setSelected(true))))),
						model));
			case 26:
				var id = msg.a;
				var delta = msg.b;
				return $author$project$PagesComponents$Organization_$Project_$Updates$Utils$setDirty(
					A2(
						$author$project$Services$Lenses$mapErdM,
						A2(
							$author$project$PagesComponents$Organization_$Project_$Models$Erd$mapCurrentLayoutWithTime,
							now,
							$author$project$Services$Lenses$mapTables(
								A3(
									$author$project$Libs$List$updateBy,
									function ($) {
										return $.H;
									},
									id,
									$author$project$Services$Lenses$mapProps(
										$author$project$Services$Lenses$mapPosition(
											$author$project$Models$Position$moveGrid(delta)))))),
						model));
			case 27:
				var id = msg.a;
				var position = msg.b;
				return $author$project$PagesComponents$Organization_$Project_$Updates$Utils$setDirty(
					A2(
						$author$project$Services$Lenses$mapErdM,
						A2(
							$author$project$PagesComponents$Organization_$Project_$Models$Erd$mapCurrentLayoutWithTime,
							now,
							$author$project$Services$Lenses$mapTables(
								A3(
									$author$project$Libs$List$updateBy,
									function ($) {
										return $.H;
									},
									id,
									$author$project$Services$Lenses$mapProps(
										$author$project$Services$Lenses$setPosition(position))))),
						model));
			case 28:
				var id = msg.a;
				var index = msg.b;
				return $author$project$PagesComponents$Organization_$Project_$Updates$Utils$setDirty(
					A2(
						$author$project$Services$Lenses$mapErdM,
						A2(
							$author$project$PagesComponents$Organization_$Project_$Models$Erd$mapCurrentLayoutWithTime,
							now,
							$author$project$Services$Lenses$mapTables(
								function (tables) {
									return A4(
										$author$project$Libs$List$moveBy,
										function ($) {
											return $.H;
										},
										id,
										($elm$core$List$length(tables) - 1) - index,
										tables);
								})),
						model));
			case 29:
				var id = msg.a;
				var color = msg.b;
				var organization = A2($author$project$PagesComponents$Organization_$Project_$Models$Erd$getOrganizationM, $elm$core$Maybe$Nothing, model.lE);
				return $author$project$PagesComponents$Organization_$Project_$Models$Erd$canChangeTableColor(model.lE) ? $author$project$PagesComponents$Organization_$Project_$Updates$Utils$setDirtyCmd(
					A2(
						$author$project$Services$Lenses$mapErdMCmd,
						function (erd) {
							return A3(
								$author$project$PagesComponents$Organization_$Project_$Models$Erd$mapCurrentLayoutCmd,
								now,
								$author$project$Services$Lenses$mapTablesCmd(
									A3(
										$author$project$PagesComponents$Organization_$Project_$Updates$Table$mapTablePropOrSelected,
										erd.dM.cb,
										id,
										$author$project$Services$Lenses$mapProps(
											$author$project$Services$Lenses$setColor(color)))),
								erd);
						},
						model)) : _Utils_Tuple2(
					model,
					$elm$core$Platform$Cmd$batch(
						_List_fromArray(
							[
								$author$project$Libs$Task$send(
								$author$project$PagesComponents$Organization_$Project_$Models$CustomModalOpen(
									A3($author$project$Components$Slices$ProPlan$colorsModalBody, organization, $author$project$PagesComponents$Organization_$Project_$Models$ProPlanColors, $author$project$Components$Slices$ProPlan$colorsInit))),
								$author$project$Ports$track(
								A2($author$project$Track$proPlanLimit, $author$project$Conf$features.oI.eS, model.lE))
							])));
			case 30:
				var column = msg.a;
				var position = msg.b;
				return $author$project$PagesComponents$Organization_$Project_$Updates$Utils$setDirty(
					A2(
						$author$project$Services$Lenses$mapErdM,
						function (erd) {
							return A3(
								$author$project$PagesComponents$Organization_$Project_$Models$Erd$mapCurrentLayoutWithTime,
								now,
								$author$project$Services$Lenses$mapTables(
									A3(
										$author$project$Libs$List$updateBy,
										function ($) {
											return $.H;
										},
										column.aq,
										$author$project$Services$Lenses$mapColumns(
											A2(
												$author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$mapAt,
												$author$project$Models$Project$ColumnPath$parent(column.bH),
												A3(
													$author$project$Libs$List$moveBy,
													function ($) {
														return $.eS;
													},
													$author$project$Libs$Nel$last(column.bH),
													position))))),
								erd);
						},
						model));
			case 31:
				var table = msg.a;
				var on = msg.b;
				return _Utils_Tuple2(
					A2(
						$author$project$Services$Lenses$setHoverTable,
						A3(
							$author$project$Libs$Bool$cond,
							on,
							$elm$core$Maybe$Just(table),
							$elm$core$Maybe$Nothing),
						model),
					$elm$core$Platform$Cmd$none);
			case 32:
				var column = msg.a;
				var on = msg.b;
				return _Utils_Tuple2(
					A2(
						$author$project$Services$Lenses$mapErdM,
						function (e) {
							return A3(
								$author$project$PagesComponents$Organization_$Project_$Models$Erd$mapCurrentLayoutWithTime,
								now,
								$author$project$Services$Lenses$mapTables(
									A3($author$project$PagesComponents$Organization_$Project_$Updates$Table$hoverColumn, column, on, e)),
								e);
						},
						A2(
							$author$project$Services$Lenses$setHoverColumn,
							A3(
								$author$project$Libs$Bool$cond,
								on,
								$elm$core$Maybe$Just(column),
								$elm$core$Maybe$Nothing),
							model)),
					$elm$core$Platform$Cmd$none);
			case 33:
				var name = msg.a;
				return _Utils_Tuple2(
					model,
					A2(
						$elm$random$Random$generate,
						A2(
							$elm$core$Basics$composeR,
							A2($author$project$Models$Project$Source$aml, name, now),
							$author$project$PagesComponents$Organization_$Project_$Models$CreateUserSourceWithId),
						$author$project$Models$Project$SourceId$generator));
			case 34:
				var source = msg.a;
				return $author$project$PagesComponents$Organization_$Project_$Updates$Utils$setDirty(
					A2(
						$author$project$PagesComponents$Organization_$Project_$Components$AmlSidebar$setOtherSourcesTableIdsCache,
						$elm$core$Maybe$Just(source.H),
						function (updated) {
							return A2(
								$author$project$Services$Lenses$mapAmlSidebarM,
								$author$project$PagesComponents$Organization_$Project_$Components$AmlSidebar$setSource(
									A2(
										$elm$core$Maybe$andThen,
										A2(
											$elm$core$Basics$composeR,
											function ($) {
												return $.hs;
											},
											$author$project$Libs$List$last),
										updated.lE)),
								updated);
						}(
							A2(
								$author$project$Services$Lenses$mapErdM,
								$author$project$PagesComponents$Organization_$Project_$Models$Erd$mapSources(
									$author$project$Libs$List$add(source)),
								model))));
			case 35:
				var src = msg.a;
				var ref = msg.b;
				return $author$project$PagesComponents$Organization_$Project_$Updates$Utils$setDirtyCmd(
					A2(
						$author$project$Services$Lenses$mapErdMCmd,
						A3($author$project$PagesComponents$Organization_$Project_$Updates$Source$createRelation, now, src, ref),
						model));
			case 36:
				var message = msg.a;
				return A6($author$project$PagesComponents$Organization_$Project_$Views$Modals$NewLayout$update, $author$project$PagesComponents$Organization_$Project_$Models$ModalOpen, $author$project$PagesComponents$Organization_$Project_$Models$Toast, $author$project$PagesComponents$Organization_$Project_$Models$CustomModalOpen, now, message, model);
			case 37:
				var message = msg.a;
				return A2($author$project$PagesComponents$Organization_$Project_$Updates$Layout$handleLayout, message, model);
			case 38:
				var message = msg.a;
				return A2($author$project$PagesComponents$Organization_$Project_$Updates$Notes$handleNotes, message, model);
			case 39:
				var message = msg.a;
				return A3($author$project$PagesComponents$Organization_$Project_$Updates$Memo$handleMemo, now, message, model);
			case 40:
				var message = msg.a;
				return A3($author$project$PagesComponents$Organization_$Project_$Components$AmlSidebar$update, now, message, model);
			case 41:
				var message = msg.a;
				return A3(
					$author$project$Libs$Maybe$mapOrElse,
					function (erd) {
						return A2(
							$author$project$Services$Lenses$mapDetailsSidebarCmd,
							A4($author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$update, $author$project$PagesComponents$Organization_$Project_$Models$Noop, $author$project$PagesComponents$Organization_$Project_$Models$NotesMsg, erd, message),
							model);
					},
					_Utils_Tuple2(model, $elm$core$Platform$Cmd$none),
					model.lE);
			case 42:
				var message = msg.a;
				return A2($author$project$PagesComponents$Organization_$Project_$Updates$VirtualRelation$handleVirtualRelation, message, model);
			case 43:
				var message = msg.a;
				return A2($author$project$PagesComponents$Organization_$Project_$Updates$FindPath$handleFindPath, message, model);
			case 44:
				switch (msg.a.$) {
					case 0:
						var _v1 = msg.a;
						return _Utils_Tuple2(
							A2(
								$author$project$Services$Lenses$setSchemaAnalysis,
								$elm$core$Maybe$Just(
									{H: $author$project$Conf$ids.oj, dy: ''}),
								model),
							$elm$core$Platform$Cmd$batch(
								_List_fromArray(
									[
										A2(
										$author$project$Libs$Task$sendAfter,
										1,
										$author$project$PagesComponents$Organization_$Project_$Models$ModalOpen($author$project$Conf$ids.oj)),
										$author$project$Ports$track(
										$author$project$Track$dbAnalysisOpened(model.lE))
									])));
					case 1:
						var section = msg.a.a;
						return _Utils_Tuple2(
							A2(
								$author$project$Services$Lenses$mapSchemaAnalysisM,
								$author$project$Services$Lenses$mapOpened(
									function (opened) {
										return A3(
											$author$project$Libs$Bool$cond,
											_Utils_eq(opened, section),
											'',
											section);
									}),
								model),
							$elm$core$Platform$Cmd$none);
					default:
						var _v2 = msg.a;
						return _Utils_Tuple2(
							A2($author$project$Services$Lenses$setSchemaAnalysis, $elm$core$Maybe$Nothing, model),
							$elm$core$Platform$Cmd$none);
				}
			case 45:
				var message = msg.a;
				return A2(
					$author$project$Services$Lenses$mapSharingCmd,
					A7($author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$update, $author$project$PagesComponents$Organization_$Project_$Models$SharingMsg, $author$project$PagesComponents$Organization_$Project_$Models$ModalOpen, $author$project$PagesComponents$Organization_$Project_$Models$Toast, zone, now, model.lE, message),
					model);
			case 46:
				var message = msg.a;
				return A2(
					$author$project$Services$Lenses$mapSaveCmd,
					A2($author$project$PagesComponents$Organization_$Project_$Components$ProjectSaveDialog$update, $author$project$PagesComponents$Organization_$Project_$Models$ModalOpen, message),
					model);
			case 47:
				var message = msg.a;
				return A3($author$project$PagesComponents$Organization_$Project_$Updates$ProjectSettings$handleProjectSettings, now, message, model);
			case 48:
				var message = msg.a;
				return A2(
					$author$project$Services$Lenses$mapEmbedSourceParsingMCmd,
					A4(
						$author$project$PagesComponents$Organization_$Project_$Components$EmbedSourceParsingDialog$update,
						$author$project$PagesComponents$Organization_$Project_$Models$EmbedSourceParsingMsg,
						now,
						A2(
							$elm$core$Maybe$map,
							function ($) {
								return $.nN;
							},
							model.lE),
						message),
					model);
			case 49:
				var source = msg.a;
				return _Utils_Tuple2(
					model,
					$author$project$Libs$Task$send(
						$author$project$PagesComponents$Organization_$Project_$Models$JsMessage(
							$author$project$Ports$GotProject(
								$elm$core$Maybe$Just(
									$elm$core$Result$Ok(
										A3($author$project$Models$Project$create, projects, source.eS, source)))))));
			case 50:
				if (msg.b.$ === 4) {
					var _v3 = msg.b;
					return _Utils_Tuple2(
						A2(
							$author$project$Services$Lenses$mapErdM,
							$author$project$Services$Lenses$mapProject(
								$author$project$Services$Lenses$mapOrganizationM(
									$author$project$Services$Lenses$mapPlan(
										$author$project$Services$Lenses$setColors(true)))),
							model),
						$author$project$Ports$fireworks);
				} else {
					var state = msg.a;
					var message = msg.b;
					return A2(
						$elm$core$Tuple$mapFirst,
						function (s) {
							return _Utils_update(
								model,
								{
									mS: A2(
										$elm$core$Maybe$map,
										function (m) {
											return _Utils_update(
												m,
												{
													cX: A3(
														$author$project$Components$Slices$ProPlan$colorsModalBody,
														A2($author$project$PagesComponents$Organization_$Project_$Models$Erd$getOrganizationM, $elm$core$Maybe$Nothing, model.lE),
														$author$project$PagesComponents$Organization_$Project_$Models$ProPlanColors,
														s)
												});
										},
										model.mS)
								});
						},
						A3($author$project$Components$Slices$ProPlan$colorsUpdate, $author$project$PagesComponents$Organization_$Project_$Models$ProPlanColors, message, state));
				}
			case 51:
				var message = msg.a;
				return A2($author$project$PagesComponents$Organization_$Project_$Updates$Help$handleHelp, message, model);
			case 52:
				var mode = msg.a;
				return _Utils_Tuple2(
					A2($author$project$Services$Lenses$setCursorMode, mode, model),
					$elm$core$Platform$Cmd$none);
			case 53:
				return $author$project$PagesComponents$Organization_$Project_$Updates$Utils$setDirtyCmd(
					A2(
						$author$project$Services$Lenses$mapErdMCmd,
						A2($author$project$PagesComponents$Organization_$Project_$Updates$Canvas$fitCanvas, now, model.lF),
						model));
			case 54:
				return $author$project$PagesComponents$Organization_$Project_$Updates$Utils$setDirtyCmd(
					A2(
						$author$project$Services$Lenses$mapErdMCmd,
						A2($author$project$PagesComponents$Organization_$Project_$Updates$Canvas$arrangeTables, now, model.lF),
						model));
			case 55:
				var id = msg.a;
				return _Utils_Tuple2(
					model,
					$author$project$Ports$fullscreen(id));
			case 56:
				var event = msg.a;
				return $author$project$PagesComponents$Organization_$Project_$Updates$Utils$setDirty(
					A2(
						$author$project$Services$Lenses$mapErdM,
						A2(
							$author$project$PagesComponents$Organization_$Project_$Models$Erd$mapCurrentLayoutWithTime,
							now,
							$author$project$Services$Lenses$mapCanvas(
								A2($author$project$PagesComponents$Organization_$Project_$Updates$Canvas$handleWheel, event, model.lF))),
						model));
			case 57:
				var delta = msg.a;
				return $author$project$PagesComponents$Organization_$Project_$Updates$Utils$setDirty(
					A2(
						$author$project$Services$Lenses$mapErdM,
						A2(
							$author$project$PagesComponents$Organization_$Project_$Models$Erd$mapCurrentLayoutWithTime,
							now,
							$author$project$Services$Lenses$mapCanvas(
								A2($author$project$PagesComponents$Organization_$Project_$Updates$Canvas$zoomCanvas, delta, model.lF))),
						model));
			case 58:
				var id = msg.a;
				return _Utils_Tuple2(
					model,
					$author$project$Ports$focus(id));
			case 59:
				var id = msg.a;
				return _Utils_Tuple2(
					A2($author$project$Components$Molecules$Dropdown$update, id, model),
					$elm$core$Platform$Cmd$none);
			case 60:
				var id = msg.a;
				return _Utils_Tuple2(
					A2($author$project$Services$Lenses$setOpenedDropdown, id, model),
					$elm$core$Platform$Cmd$none);
			case 61:
				return _Utils_Tuple2(
					A2($author$project$Services$Lenses$setOpenedDropdown, '', model),
					$elm$core$Platform$Cmd$none);
			case 62:
				var id = msg.a;
				return _Utils_Tuple2(
					A2($author$project$Services$Lenses$setOpenedPopover, id, model),
					$elm$core$Platform$Cmd$none);
			case 63:
				var content = msg.a;
				var event = msg.b;
				return _Utils_Tuple2(
					A2(
						$author$project$Services$Lenses$setContextMenu,
						$elm$core$Maybe$Just(
							{cX: content, e$: event.h3, ov: false}),
						model),
					A2($author$project$Libs$Task$sendAfter, 1, $author$project$PagesComponents$Organization_$Project_$Models$ContextMenuShow));
			case 64:
				return _Utils_Tuple2(
					A2(
						$author$project$Services$Lenses$mapContextMenuM,
						$author$project$Services$Lenses$setShow(true),
						model),
					$elm$core$Platform$Cmd$none);
			case 65:
				return _Utils_Tuple2(
					A2($author$project$Services$Lenses$setContextMenu, $elm$core$Maybe$Nothing, model),
					$elm$core$Platform$Cmd$none);
			case 66:
				var id = msg.a;
				var pos = msg.b;
				return A3(
					$author$project$Libs$Maybe$mapOrElse,
					function (d) {
						return _Utils_Tuple2(
							model,
							$author$project$Libs$Task$send(
								$author$project$PagesComponents$Organization_$Project_$Models$Toast(
									$author$project$Services$Toasts$info('Already dragging ' + d.H))));
					},
					function (d) {
						return A4(
							$author$project$PagesComponents$Organization_$Project_$Updates$Drag$handleDrag,
							now,
							d,
							false,
							A2(
								$author$project$Services$Lenses$setDragging,
								$elm$core$Maybe$Just(d),
								model));
					}(
						{H: id, bl: pos, iZ: pos}),
					model.ep);
			case 67:
				var pos = msg.a;
				return A3(
					$author$project$Libs$Maybe$mapOrElse,
					function (d) {
						return A4(
							$author$project$PagesComponents$Organization_$Project_$Updates$Drag$handleDrag,
							now,
							d,
							false,
							A2(
								$author$project$Services$Lenses$setDragging,
								$elm$core$Maybe$Just(d),
								model));
					},
					_Utils_Tuple2(model, $elm$core$Platform$Cmd$none),
					A2(
						$elm$core$Maybe$map,
						$author$project$Services$Lenses$setLast(pos),
						model.ep));
			case 68:
				var pos = msg.a;
				return A3(
					$author$project$Libs$Maybe$mapOrElse,
					function (d) {
						return A4(
							$author$project$PagesComponents$Organization_$Project_$Updates$Drag$handleDrag,
							now,
							d,
							true,
							A2($author$project$Services$Lenses$setDragging, $elm$core$Maybe$Nothing, model));
					},
					_Utils_Tuple2(model, $elm$core$Platform$Cmd$none),
					A2(
						$elm$core$Maybe$map,
						$author$project$Services$Lenses$setLast(pos),
						model.ep));
			case 69:
				return _Utils_Tuple2(
					A2($author$project$Services$Lenses$setDragging, $elm$core$Maybe$Nothing, model),
					$elm$core$Platform$Cmd$none);
			case 70:
				var message = msg.a;
				return A2(
					$author$project$Services$Lenses$mapToastsCmd,
					A2($author$project$Services$Toasts$update, $author$project$PagesComponents$Organization_$Project_$Models$Toast, message),
					model);
			case 71:
				var content = msg.a;
				return _Utils_Tuple2(
					A2(
						$author$project$Services$Lenses$setModal,
						$elm$core$Maybe$Just(
							{cX: content, H: $author$project$Conf$ids.k9}),
						model),
					A2(
						$author$project$Libs$Task$sendAfter,
						1,
						$author$project$PagesComponents$Organization_$Project_$Models$ModalOpen($author$project$Conf$ids.k9)));
			case 72:
				return _Utils_Tuple2(
					A2($author$project$Services$Lenses$setModal, $elm$core$Maybe$Nothing, model),
					$elm$core$Platform$Cmd$none);
			case 73:
				var confirm = msg.a;
				return _Utils_Tuple2(
					A2(
						$author$project$Services$Lenses$setConfirm,
						$elm$core$Maybe$Just(
							{cX: confirm, H: $author$project$Conf$ids.k1}),
						model),
					A2(
						$author$project$Libs$Task$sendAfter,
						1,
						$author$project$PagesComponents$Organization_$Project_$Models$ModalOpen($author$project$Conf$ids.k1)));
			case 74:
				var answer = msg.a;
				var cmd = msg.b;
				return _Utils_Tuple2(
					A2($author$project$Services$Lenses$setConfirm, $elm$core$Maybe$Nothing, model),
					A3($author$project$Libs$Bool$cond, answer, cmd, $elm$core$Platform$Cmd$none));
			case 75:
				var prompt = msg.a;
				var input = msg.b;
				return _Utils_Tuple2(
					A2(
						$author$project$Services$Lenses$setPrompt,
						$elm$core$Maybe$Just(
							{cX: prompt, H: $author$project$Conf$ids.nT, eF: input}),
						model),
					A2(
						$author$project$Libs$Task$sendAfter,
						1,
						$author$project$PagesComponents$Organization_$Project_$Models$ModalOpen($author$project$Conf$ids.nT)));
			case 76:
				var input = msg.a;
				return _Utils_Tuple2(
					A2(
						$author$project$Services$Lenses$mapPromptM,
						$author$project$Services$Lenses$setInput(input),
						model),
					$elm$core$Platform$Cmd$none);
			case 77:
				var cmd = msg.a;
				return _Utils_Tuple2(
					A2($author$project$Services$Lenses$setPrompt, $elm$core$Maybe$Nothing, model),
					cmd);
			case 78:
				var id = msg.a;
				return _Utils_Tuple2(
					A2(
						$author$project$Services$Lenses$mapOpenedDialogs,
						function (dialogs) {
							return A2($elm$core$List$cons, id, dialogs);
						},
						model),
					$author$project$Ports$autofocusWithin(id));
			case 79:
				var message = msg.a;
				return _Utils_Tuple2(
					A2(
						$author$project$Services$Lenses$mapOpenedDialogs,
						$elm$core$List$drop(1),
						model),
					A2($author$project$Libs$Task$sendAfter, $author$project$Conf$ui.k_, message));
			case 80:
				var message = msg.a;
				return A4($author$project$PagesComponents$Organization_$Project_$Updates$handleJsMessage, now, currentLayout, message, model);
			case 81:
				var messages = msg.a;
				return _Utils_Tuple2(
					model,
					$elm$core$Platform$Cmd$batch(
						A2($elm$core$List$map, $author$project$Libs$Task$send, messages)));
			case 82:
				var cmd = msg.a;
				return _Utils_Tuple2(model, cmd);
			default:
				return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
		}
	});
var $elm$virtual_dom$VirtualDom$lazy = _VirtualDom_lazy;
var $elm$html$Html$Lazy$lazy = $elm$virtual_dom$VirtualDom$lazy;
var $elm$virtual_dom$VirtualDom$lazy5 = _VirtualDom_lazy5;
var $elm$html$Html$Lazy$lazy5 = $elm$virtual_dom$VirtualDom$lazy5;
var $author$project$Libs$Models$Platform$toString = function (value) {
	if (!value) {
		return 'pc';
	} else {
		return 'mac';
	}
};
var $author$project$PagesComponents$Organization_$Project_$Models$CursorMode$toString = function (mode) {
	if (!mode) {
		return 'drag';
	} else {
		return 'select';
	}
};
var $author$project$PagesComponents$Organization_$Project_$Views$Erd$argsToString = F6(
	function (platform, cursorMode, hoverTable, openedDropdown, openedPopover, selected) {
		return A2(
			$elm$core$String$join,
			'~',
			_List_fromArray(
				[
					$author$project$Libs$Models$Platform$toString(platform),
					$author$project$PagesComponents$Organization_$Project_$Models$CursorMode$toString(cursorMode),
					A3($author$project$Libs$Maybe$mapOrElse, $author$project$Models$Project$TableId$toString, '', hoverTable),
					openedDropdown,
					openedPopover,
					selected
				]));
	});
var $elm$url$Url$addPort = F2(
	function (maybePort, starter) {
		if (maybePort.$ === 1) {
			return starter;
		} else {
			var port_ = maybePort.a;
			return starter + (':' + $elm$core$String$fromInt(port_));
		}
	});
var $elm$url$Url$addPrefixed = F3(
	function (prefix, maybeSegment, starter) {
		if (maybeSegment.$ === 1) {
			return starter;
		} else {
			var segment = maybeSegment.a;
			return _Utils_ap(
				starter,
				_Utils_ap(prefix, segment));
		}
	});
var $elm$url$Url$toString = function (url) {
	var http = function () {
		var _v0 = url.jB;
		if (!_v0) {
			return 'http://';
		} else {
			return 'https://';
		}
	}();
	return A3(
		$elm$url$Url$addPrefixed,
		'#',
		url.iA,
		A3(
			$elm$url$Url$addPrefixed,
			'?',
			url.e1,
			_Utils_ap(
				A2(
					$elm$url$Url$addPort,
					url.jw,
					_Utils_ap(http, url.iK)),
				url.aA)));
};
var $author$project$PagesComponents$Organization_$Project_$Views$Navbar$argsToString = F6(
	function (currentUrl, urlOrganization, userOrganizations, htmlId, openedDropdown, dirty) {
		return A2(
			$elm$core$String$join,
			'~',
			_List_fromArray(
				[
					$elm$url$Url$toString(currentUrl),
					A2($elm$core$Maybe$withDefault, '', urlOrganization),
					A2($elm$core$String$join, ',', userOrganizations),
					htmlId,
					openedDropdown,
					A3($author$project$Libs$Bool$cond, dirty, 'Y', 'N')
				]));
	});
var $author$project$Models$Position$extractViewport = function (_v0) {
	var pos = _v0;
	return pos;
};
var $author$project$Libs$String$filterStartsWith = F2(
	function (prefix, str) {
		return A2($elm$core$String$startsWith, prefix, str) ? str : '';
	});
var $elm$virtual_dom$VirtualDom$lazy8 = _VirtualDom_lazy8;
var $elm$html$Html$Lazy$lazy8 = $elm$virtual_dom$VirtualDom$lazy8;
var $elm$html$Html$main_ = _VirtualDom_node('main');
var $elm$html$Html$section = _VirtualDom_node('section');
var $author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$selected = function (model) {
	var _v0 = model.o3;
	switch (_v0.$) {
		case 0:
			return '';
		case 1:
			var data = _v0.a;
			return data.aI.f;
		case 2:
			var data = _v0.a;
			return data.aI.f + ('.' + data.aq.f.eS);
		default:
			var data = _v0.a;
			return data.aI.f + ('.' + (data.aq.f.eS + ('.' + $author$project$Models$Project$ColumnPath$toString(data.bH.f.aA))));
	}
};
var $elm$virtual_dom$VirtualDom$style = _VirtualDom_style;
var $elm$html$Html$Attributes$style = $elm$virtual_dom$VirtualDom$style;
var $author$project$PagesComponents$Organization_$Project_$Models$AToggle = {$: 2};
var $author$project$PagesComponents$Organization_$Project_$Models$ArrangeTables = {$: 54};
var $author$project$PagesComponents$Organization_$Project_$Models$CursorMode = function (a) {
	return {$: 52, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Models$Fullscreen = function (a) {
	return {$: 55, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$Toggle = {$: 1};
var $author$project$Components$Molecules$ContextMenu$TopLeft = 3;
var $author$project$Libs$Html$Attributes$ariaExpanded = function (value) {
	return A2(
		$elm$html$Html$Attributes$attribute,
		'aria-expanded',
		$author$project$Libs$Bool$toString(value));
};
var $author$project$Libs$Html$Attributes$ariaHaspopup = function (value) {
	return A2($elm$html$Html$Attributes$attribute, 'aria-haspopup', value);
};
var $author$project$Components$Molecules$ContextMenu$itemStyles = $author$project$Libs$Tailwind$batch(
	_List_fromArray(
		[
			'py-2 px-4 text-sm text-gray-700',
			$author$project$Libs$Tailwind$hover(
			_List_fromArray(
				['bg-gray-100 text-gray-900'])),
			$author$project$Libs$Tailwind$disabled(
			_List_fromArray(
				['text-gray-400']))
		]));
var $author$project$Libs$Html$Attributes$role = function (text) {
	return A2($elm$html$Html$Attributes$attribute, 'role', text);
};
var $elm$html$Html$Attributes$tabindex = function (n) {
	return A2(
		_VirtualDom_attribute,
		'tabIndex',
		$elm$core$String$fromInt(n));
};
var $author$project$Components$Molecules$ContextMenu$btn = F3(
	function (styles, message, content) {
		return A2(
			$elm$html$Html$button,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$type_('button'),
					$elm$html$Html$Events$onClick(message),
					$author$project$Libs$Html$Attributes$role('menuitem'),
					$elm$html$Html$Attributes$tabindex(-1),
					$author$project$Libs$Html$Attributes$css(
					_List_fromArray(
						[
							'block w-full text-left',
							$author$project$Libs$Tailwind$focus(
							_List_fromArray(
								['outline-none'])),
							$author$project$Components$Molecules$ContextMenu$itemStyles,
							styles
						]))
				]),
			content);
	});
var $author$project$Libs$Html$Attributes$ariaLabelledby = function (targetId) {
	return A2($elm$html$Html$Attributes$attribute, 'aria-labelledby', targetId);
};
var $author$project$Libs$Html$Attributes$ariaOrientation = function (text) {
	return A2($elm$html$Html$Attributes$attribute, 'aria-orientation', text);
};
var $author$project$Components$Molecules$ContextMenu$menuStyles = 'absolute z-max w-48 min-w-max py-1 bg-white rounded-md shadow-lg ring-1 ring-black ring-opacity-5';
var $author$project$Components$Molecules$ContextMenu$menu = F5(
	function (id, direction, offset, isOpen, content) {
		var transitionStyles = isOpen ? 'transition ease-in duration-75 opacity-100 transform scale-100' : 'transition ease-out duration-100 opacity-0 transform scale-95 pointer-events-none';
		var directionStyles = function () {
			switch (direction) {
				case 0:
					return 'origin-top-left left-0 top-full mt-' + $elm$core$String$fromInt(offset);
				case 1:
					return 'origin-top-right right-0 top-full mt-' + $elm$core$String$fromInt(offset);
				case 2:
					return 'origin-bottom-left left-0 bottom-full mb-' + $elm$core$String$fromInt(offset);
				default:
					return 'origin-bottom-right right-0 bottom-full mb-' + $elm$core$String$fromInt(offset);
			}
		}();
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$author$project$Libs$Html$Attributes$role('menu'),
					$author$project$Libs$Html$Attributes$ariaOrientation('vertical'),
					$author$project$Libs$Html$Attributes$ariaLabelledby(id),
					$elm$html$Html$Attributes$tabindex(-1),
					$author$project$Libs$Html$Attributes$css(
					_List_fromArray(
						[$author$project$Components$Molecules$ContextMenu$menuStyles, directionStyles, transitionStyles]))
				]),
			_List_fromArray(
				[content]));
	});
var $author$project$Components$Molecules$Dropdown$dropdown = F3(
	function (model, elt, content) {
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('relative inline-block text-left')
				]),
			_List_fromArray(
				[
					elt(model),
					A5(
					$author$project$Components$Molecules$ContextMenu$menu,
					model.H,
					model.bg,
					2,
					model.bm,
					content(model))
				]));
	});
var $author$project$Libs$Html$none = $elm$html$Html$text('');
var $myrho$elm_round$Round$addSign = F2(
	function (signed, str) {
		var isNotZero = A2(
			$elm$core$List$any,
			function (c) {
				return (c !== '0') && (c !== '.');
			},
			$elm$core$String$toList(str));
		return _Utils_ap(
			(signed && isNotZero) ? '-' : '',
			str);
	});
var $elm$core$Char$fromCode = _Char_fromCode;
var $myrho$elm_round$Round$increaseNum = function (_v0) {
	var head = _v0.a;
	var tail = _v0.b;
	if (head === '9') {
		var _v1 = $elm$core$String$uncons(tail);
		if (_v1.$ === 1) {
			return '01';
		} else {
			var headtail = _v1.a;
			return A2(
				$elm$core$String$cons,
				'0',
				$myrho$elm_round$Round$increaseNum(headtail));
		}
	} else {
		var c = $elm$core$Char$toCode(head);
		return ((c >= 48) && (c < 57)) ? A2(
			$elm$core$String$cons,
			$elm$core$Char$fromCode(c + 1),
			tail) : '0';
	}
};
var $elm$core$Basics$isInfinite = _Basics_isInfinite;
var $elm$core$Basics$isNaN = _Basics_isNaN;
var $elm$core$String$padRight = F3(
	function (n, _char, string) {
		return _Utils_ap(
			string,
			A2(
				$elm$core$String$repeat,
				n - $elm$core$String$length(string),
				$elm$core$String$fromChar(_char)));
	});
var $elm$core$String$reverse = _String_reverse;
var $myrho$elm_round$Round$splitComma = function (str) {
	var _v0 = A2($elm$core$String$split, '.', str);
	if (_v0.b) {
		if (_v0.b.b) {
			var before = _v0.a;
			var _v1 = _v0.b;
			var after = _v1.a;
			return _Utils_Tuple2(before, after);
		} else {
			var before = _v0.a;
			return _Utils_Tuple2(before, '0');
		}
	} else {
		return _Utils_Tuple2('0', '0');
	}
};
var $myrho$elm_round$Round$toDecimal = function (fl) {
	var _v0 = A2(
		$elm$core$String$split,
		'e',
		$elm$core$String$fromFloat(
			$elm$core$Basics$abs(fl)));
	if (_v0.b) {
		if (_v0.b.b) {
			var num = _v0.a;
			var _v1 = _v0.b;
			var exp = _v1.a;
			var e = A2(
				$elm$core$Maybe$withDefault,
				0,
				$elm$core$String$toInt(
					A2($elm$core$String$startsWith, '+', exp) ? A2($elm$core$String$dropLeft, 1, exp) : exp));
			var _v2 = $myrho$elm_round$Round$splitComma(num);
			var before = _v2.a;
			var after = _v2.b;
			var total = _Utils_ap(before, after);
			var zeroed = (e < 0) ? A2(
				$elm$core$Maybe$withDefault,
				'0',
				A2(
					$elm$core$Maybe$map,
					function (_v3) {
						var a = _v3.a;
						var b = _v3.b;
						return a + ('.' + b);
					},
					A2(
						$elm$core$Maybe$map,
						$elm$core$Tuple$mapFirst($elm$core$String$fromChar),
						$elm$core$String$uncons(
							_Utils_ap(
								A2(
									$elm$core$String$repeat,
									$elm$core$Basics$abs(e),
									'0'),
								total))))) : A3($elm$core$String$padRight, e + 1, '0', total);
			return _Utils_ap(
				(fl < 0) ? '-' : '',
				zeroed);
		} else {
			var num = _v0.a;
			return _Utils_ap(
				(fl < 0) ? '-' : '',
				num);
		}
	} else {
		return '';
	}
};
var $myrho$elm_round$Round$roundFun = F3(
	function (functor, s, fl) {
		if ($elm$core$Basics$isInfinite(fl) || $elm$core$Basics$isNaN(fl)) {
			return $elm$core$String$fromFloat(fl);
		} else {
			var signed = fl < 0;
			var _v0 = $myrho$elm_round$Round$splitComma(
				$myrho$elm_round$Round$toDecimal(
					$elm$core$Basics$abs(fl)));
			var before = _v0.a;
			var after = _v0.b;
			var r = $elm$core$String$length(before) + s;
			var normalized = _Utils_ap(
				A2($elm$core$String$repeat, (-r) + 1, '0'),
				A3(
					$elm$core$String$padRight,
					r,
					'0',
					_Utils_ap(before, after)));
			var totalLen = $elm$core$String$length(normalized);
			var roundDigitIndex = A2($elm$core$Basics$max, 1, r);
			var increase = A2(
				functor,
				signed,
				A3($elm$core$String$slice, roundDigitIndex, totalLen, normalized));
			var remains = A3($elm$core$String$slice, 0, roundDigitIndex, normalized);
			var num = increase ? $elm$core$String$reverse(
				A2(
					$elm$core$Maybe$withDefault,
					'1',
					A2(
						$elm$core$Maybe$map,
						$myrho$elm_round$Round$increaseNum,
						$elm$core$String$uncons(
							$elm$core$String$reverse(remains))))) : remains;
			var numLen = $elm$core$String$length(num);
			var numZeroed = (num === '0') ? num : ((s <= 0) ? _Utils_ap(
				num,
				A2(
					$elm$core$String$repeat,
					$elm$core$Basics$abs(s),
					'0')) : ((_Utils_cmp(
				s,
				$elm$core$String$length(after)) < 0) ? (A3($elm$core$String$slice, 0, numLen - s, num) + ('.' + A3($elm$core$String$slice, numLen - s, numLen, num))) : _Utils_ap(
				before + '.',
				A3($elm$core$String$padRight, s, '0', after))));
			return A2($myrho$elm_round$Round$addSign, signed, numZeroed);
		}
	});
var $myrho$elm_round$Round$round = $myrho$elm_round$Round$roundFun(
	F2(
		function (signed, str) {
			var _v0 = $elm$core$String$uncons(str);
			if (_v0.$ === 1) {
				return false;
			} else {
				if ('5' === _v0.a.a) {
					if (_v0.a.b === '') {
						var _v1 = _v0.a;
						return !signed;
					} else {
						var _v2 = _v0.a;
						return true;
					}
				} else {
					var _v3 = _v0.a;
					var _int = _v3.a;
					return function (i) {
						return ((i > 53) && signed) || ((i >= 53) && (!signed));
					}(
						$elm$core$Char$toCode(_int));
				}
			}
		}));
var $author$project$Libs$Basics$prettyNumber = function (value) {
	return (!value) ? '0' : ((value > 10) ? A2($myrho$elm_round$Round$round, 0, value) : ((value > 1) ? A2($myrho$elm_round$Round$round, 1, value) : A2($myrho$elm_round$Round$round, 2, value)));
};
var $author$project$Components$Molecules$Tooltip$tooltip = F4(
	function (bubble, caret, value, content) {
		return (value === '') ? A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('inline-flex')
				]),
			_List_fromArray(
				[content])) : A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('group relative inline-flex flex-col items-center')
				]),
			_List_fromArray(
				[
					content,
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('group-hover:flex hidden absolute flex-col z-max ' + bubble)
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('absolute w-3 h-3 bg-black transform rotate-45 ' + caret)
								]),
							_List_Nil),
							A2(
							$elm$html$Html$span,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('relative p-2 bg-black text-white text-xs leading-none whitespace-nowrap rounded shadow-lg')
								]),
							_List_fromArray(
								[
									$elm$html$Html$text(value)
								]))
						]))
				]));
	});
var $author$project$Components$Molecules$Tooltip$t = A2($author$project$Components$Molecules$Tooltip$tooltip, 'bottom-full mb-3 items-center', 'top-full -translate-y-2/4');
var $author$project$Components$Molecules$Tooltip$tl = A2($author$project$Components$Molecules$Tooltip$tooltip, 'bottom-full mb-3 right-0 items-end', 'top-full -translate-y-2/4 mr-3');
var $author$project$PagesComponents$Organization_$Project_$Views$Commands$viewCommands = F8(
	function (conf, cursorMode, canvasZoom, htmlId, hasTables, openedDropdown, amlSidebar, detailsSidebar) {
		var inverted = $author$project$Libs$Tailwind$batch(
			_List_fromArray(
				[
					'bg-gray-700 text-white',
					$author$project$Libs$Tailwind$hover(
					_List_fromArray(
						['bg-gray-600']))
				]));
		var classic = $author$project$Libs$Tailwind$batch(
			_List_fromArray(
				[
					'bg-white text-gray-700',
					$author$project$Libs$Tailwind$hover(
					_List_fromArray(
						['bg-gray-50']))
				]));
		var buttonStyles = $author$project$Libs$Tailwind$batch(
			_List_fromArray(
				[
					'relative inline-flex items-center p-2 border border-gray-300 text-sm font-medium',
					$author$project$Libs$Tailwind$focus(
					_List_fromArray(
						['z-10 outline-none ring-1 ring-primary-500 border-primary-500']))
				]));
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('az-commands absolute bottom-0 right-0 m-3 print:hidden')
				]),
			_List_fromArray(
				[
					(conf.jb && hasTables) ? A2(
					$elm$html$Html$span,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('relative z-0 inline-flex shadow-sm rounded-md')
						]),
					_List_fromArray(
						[
							A2(
							$author$project$Components$Molecules$Tooltip$t,
							'Fit diagram to screen',
							A2(
								$elm$html$Html$button,
								_List_fromArray(
									[
										$elm$html$Html$Attributes$type_('button'),
										$elm$html$Html$Events$onClick($author$project$PagesComponents$Organization_$Project_$Models$FitToScreen),
										$author$project$Libs$Html$Attributes$css(
										_List_fromArray(
											['rounded-l-md', buttonStyles, classic]))
									]),
								_List_fromArray(
									[
										A2($author$project$Components$Atoms$Icon$solid, 20, '')
									]))),
							A2(
							$author$project$Components$Molecules$Tooltip$t,
							'Arrange tables',
							A2(
								$elm$html$Html$button,
								_List_fromArray(
									[
										$elm$html$Html$Attributes$type_('button'),
										$elm$html$Html$Events$onClick($author$project$PagesComponents$Organization_$Project_$Models$ArrangeTables),
										$author$project$Libs$Html$Attributes$css(
										_List_fromArray(
											['-ml-px rounded-r-md', buttonStyles, classic]))
									]),
								_List_fromArray(
									[
										A2($author$project$Components$Atoms$Icon$solid, 67, '')
									])))
						])) : $author$project$Libs$Html$none,
					conf.fv ? A2(
					$elm$html$Html$span,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('relative z-0 inline-flex shadow-sm rounded-md ml-2')
						]),
					_List_fromArray(
						[
							A5(
							$author$project$Libs$Bool$cond,
							conf.fe && hasTables,
							$author$project$Components$Molecules$Tooltip$t,
							$author$project$Components$Molecules$Tooltip$tl,
							'Open table list',
							A2(
								$elm$html$Html$button,
								_List_fromArray(
									[
										$elm$html$Html$Attributes$type_('button'),
										$elm$html$Html$Events$onClick(
										$author$project$PagesComponents$Organization_$Project_$Models$DetailsSidebarMsg($author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$Toggle)),
										$author$project$Libs$Html$Attributes$css(
										_List_fromArray(
											[
												'rounded-l-md',
												buttonStyles,
												A3($author$project$Libs$Bool$cond, detailsSidebar, inverted, classic)
											]))
									]),
								_List_fromArray(
									[
										A2($author$project$Components$Atoms$Icon$solid, 135, '')
									]))),
							A5(
							$author$project$Libs$Bool$cond,
							conf.jb && hasTables,
							$author$project$Components$Molecules$Tooltip$t,
							$author$project$Components$Molecules$Tooltip$tl,
							'Update your schema',
							A2(
								$elm$html$Html$button,
								_List_fromArray(
									[
										$elm$html$Html$Attributes$type_('button'),
										$elm$html$Html$Events$onClick(
										$author$project$PagesComponents$Organization_$Project_$Models$AmlSidebarMsg($author$project$PagesComponents$Organization_$Project_$Models$AToggle)),
										$author$project$Libs$Html$Attributes$css(
										_List_fromArray(
											[
												'-ml-px rounded-r-md',
												buttonStyles,
												A3($author$project$Libs$Bool$cond, amlSidebar, inverted, classic)
											]))
									]),
								_List_fromArray(
									[
										A2($author$project$Components$Atoms$Icon$solid, 151, '')
									])))
						])) : $author$project$Libs$Html$none,
					(conf.jb && hasTables) ? A2(
					$elm$html$Html$span,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('relative z-0 inline-flex shadow-sm rounded-md ml-2')
						]),
					_List_fromArray(
						[
							A2(
							$author$project$Components$Molecules$Tooltip$t,
							'Select tool',
							A2(
								$elm$html$Html$button,
								_List_fromArray(
									[
										$elm$html$Html$Attributes$type_('button'),
										$elm$html$Html$Events$onClick(
										$author$project$PagesComponents$Organization_$Project_$Models$CursorMode(1)),
										$author$project$Libs$Html$Attributes$css(
										_List_fromArray(
											[
												'rounded-l-md',
												buttonStyles,
												A3($author$project$Libs$Bool$cond, cursorMode === 1, inverted, classic)
											]))
									]),
								_List_fromArray(
									[
										A2($author$project$Components$Atoms$Icon$solid, 74, '')
									]))),
							A2(
							$author$project$Components$Molecules$Tooltip$t,
							'Drag tool',
							A2(
								$elm$html$Html$button,
								_List_fromArray(
									[
										$elm$html$Html$Attributes$type_('button'),
										$elm$html$Html$Events$onClick(
										$author$project$PagesComponents$Organization_$Project_$Models$CursorMode(0)),
										$author$project$Libs$Html$Attributes$css(
										_List_fromArray(
											[
												'-ml-px rounded-r-md',
												buttonStyles,
												A3($author$project$Libs$Bool$cond, !cursorMode, inverted, classic)
											]))
									]),
								_List_fromArray(
									[
										A2($author$project$Components$Atoms$Icon$solid, 114, '')
									])))
						])) : $author$project$Libs$Html$none,
					(conf.jb && hasTables) ? A2(
					$elm$html$Html$span,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('relative z-0 inline-flex shadow-sm rounded-md ml-2')
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$button,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$type_('button'),
									$elm$html$Html$Events$onClick(
									$author$project$PagesComponents$Organization_$Project_$Models$Zoom((-canvasZoom) / 10)),
									$author$project$Libs$Html$Attributes$css(
									_List_fromArray(
										['rounded-l-md', buttonStyles, classic]))
								]),
							_List_fromArray(
								[
									A2($author$project$Components$Atoms$Icon$solid, 141, '')
								])),
							A3(
							$author$project$Components$Molecules$Dropdown$dropdown,
							{
								bg: 3,
								H: htmlId + '-zoom-level',
								bm: _Utils_eq(openedDropdown, htmlId + '-zoom-level')
							},
							function (m) {
								return A2(
									$elm$html$Html$button,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$type_('button'),
											$elm$html$Html$Attributes$id(m.H),
											$elm$html$Html$Events$onClick(
											$author$project$PagesComponents$Organization_$Project_$Models$DropdownToggle(m.H)),
											$author$project$Libs$Html$Attributes$ariaExpanded(false),
											$author$project$Libs$Html$Attributes$ariaHaspopup('true'),
											$author$project$Libs$Html$Attributes$css(
											_List_fromArray(
												['-ml-px', buttonStyles, classic]))
										]),
									_List_fromArray(
										[
											$elm$html$Html$text(
											$author$project$Libs$Basics$prettyNumber(canvasZoom * 100) + ' %')
										]));
							},
							function (_v0) {
								return A2(
									$elm$html$Html$div,
									_List_Nil,
									_List_fromArray(
										[
											A3(
											$author$project$Components$Molecules$ContextMenu$btn,
											'',
											$author$project$PagesComponents$Organization_$Project_$Models$Zoom(0.05 - canvasZoom),
											_List_fromArray(
												[
													$elm$html$Html$text('5%')
												])),
											A3(
											$author$project$Components$Molecules$ContextMenu$btn,
											'',
											$author$project$PagesComponents$Organization_$Project_$Models$Zoom(0.25 - canvasZoom),
											_List_fromArray(
												[
													$elm$html$Html$text('25%')
												])),
											A3(
											$author$project$Components$Molecules$ContextMenu$btn,
											'',
											$author$project$PagesComponents$Organization_$Project_$Models$Zoom(0.5 - canvasZoom),
											_List_fromArray(
												[
													$elm$html$Html$text('50%')
												])),
											A3(
											$author$project$Components$Molecules$ContextMenu$btn,
											'',
											$author$project$PagesComponents$Organization_$Project_$Models$Zoom(0.8 - canvasZoom),
											_List_fromArray(
												[
													$elm$html$Html$text('80%')
												])),
											A3(
											$author$project$Components$Molecules$ContextMenu$btn,
											'',
											$author$project$PagesComponents$Organization_$Project_$Models$Zoom(1 - canvasZoom),
											_List_fromArray(
												[
													$elm$html$Html$text('100%')
												])),
											A3(
											$author$project$Components$Molecules$ContextMenu$btn,
											'',
											$author$project$PagesComponents$Organization_$Project_$Models$Zoom(1.2 - canvasZoom),
											_List_fromArray(
												[
													$elm$html$Html$text('120%')
												])),
											A3(
											$author$project$Components$Molecules$ContextMenu$btn,
											'',
											$author$project$PagesComponents$Organization_$Project_$Models$Zoom(1.5 - canvasZoom),
											_List_fromArray(
												[
													$elm$html$Html$text('150%')
												])),
											A3(
											$author$project$Components$Molecules$ContextMenu$btn,
											'',
											$author$project$PagesComponents$Organization_$Project_$Models$Zoom(2 - canvasZoom),
											_List_fromArray(
												[
													$elm$html$Html$text('200%')
												])),
											A3(
											$author$project$Components$Molecules$ContextMenu$btn,
											'',
											$author$project$PagesComponents$Organization_$Project_$Models$Zoom(5 - canvasZoom),
											_List_fromArray(
												[
													$elm$html$Html$text('500%')
												]))
										]));
							}),
							A2(
							$elm$html$Html$button,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$type_('button'),
									$elm$html$Html$Events$onClick(
									$author$project$PagesComponents$Organization_$Project_$Models$Zoom(canvasZoom / 10)),
									$author$project$Libs$Html$Attributes$css(
									_List_fromArray(
										['-ml-px rounded-r-md', buttonStyles, classic]))
								]),
							_List_fromArray(
								[
									A2($author$project$Components$Atoms$Icon$solid, 159, '')
								]))
						])) : $author$project$Libs$Html$none,
					conf.f3 ? A2(
					$elm$html$Html$span,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('relative z-0 inline-flex shadow-sm rounded-md ml-2')
						]),
					_List_fromArray(
						[
							A2(
							$author$project$Components$Molecules$Tooltip$tl,
							'View in full screen',
							A2(
								$elm$html$Html$button,
								_List_fromArray(
									[
										$elm$html$Html$Attributes$type_('button'),
										$elm$html$Html$Events$onClick(
										$author$project$PagesComponents$Organization_$Project_$Models$Fullscreen($elm$core$Maybe$Nothing)),
										$author$project$Libs$Html$Attributes$css(
										_List_fromArray(
											['rounded-l-md rounded-r-md', buttonStyles, classic]))
									]),
								_List_fromArray(
									[
										A2($author$project$Components$Atoms$Icon$solid, 162, '')
									])))
						])) : $author$project$Libs$Html$none
				]));
	});
var $author$project$PagesComponents$Organization_$Project_$Models$ContextMenuCreate = F2(
	function (a, b) {
		return {$: 63, a: a, b: b};
	});
var $author$project$PagesComponents$Organization_$Project_$Models$OnWheel = function (a) {
	return {$: 56, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Views$Erd$Relation$ColumnInfo = F3(
	function (table, index, highlighted) {
		return {az: highlighted, l7: index, aq: table};
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Erd$Relation$findColumn = F2(
	function (column, columns) {
		var _v0 = A3(
			$author$project$Libs$List$findBy,
			A2(
				$elm$core$Basics$composeR,
				$elm$core$Tuple$first,
				function ($) {
					return $.aA;
				}),
			column,
			columns);
		if (!_v0.$) {
			var res = _v0.a;
			return $elm$core$Maybe$Just(res);
		} else {
			return A2(
				$elm$core$Maybe$andThen,
				function (parent) {
					return A2($author$project$PagesComponents$Organization_$Project_$Views$Erd$Relation$findColumn, parent, columns);
				},
				$author$project$Models$Project$ColumnPath$parent(column));
		}
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Erd$Relation$buildColumnInfo = F2(
	function (column, layout) {
		return A2(
			$elm$core$Maybe$andThen,
			function (t) {
				return A2(
					$elm$core$Maybe$map,
					function (_v0) {
						var c = _v0.a;
						var i = _v0.b;
						return A3($author$project$PagesComponents$Organization_$Project_$Views$Erd$Relation$ColumnInfo, t.nU, i, c.az);
					},
					A2(
						$author$project$PagesComponents$Organization_$Project_$Views$Erd$Relation$findColumn,
						column,
						$author$project$Libs$List$zipWithIndex(
							$author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$flatten(t.M))));
			},
			layout);
	});
var $elm$html$Html$Attributes$classList = function (classes) {
	return $elm$html$Html$Attributes$class(
		A2(
			$elm$core$String$join,
			' ',
			A2(
				$elm$core$List$map,
				$elm$core$Tuple$first,
				A2($elm$core$List$filter, $elm$core$Tuple$second, classes))));
};
var $author$project$Models$Project$CanvasProps$eventCanvas = F3(
	function (erdElem, canvasProps, event) {
		return A4($author$project$Models$Position$viewportToCanvas, erdElem.e$, canvasProps.e$, canvasProps.hU, event.h3);
	});
var $author$project$PagesComponents$Organization_$Project_$Models$Erd$getColumn = F2(
	function (ref, erd) {
		return A2(
			$elm$core$Maybe$andThen,
			$author$project$PagesComponents$Organization_$Project_$Models$ErdTable$getColumn(ref.bH),
			A2($author$project$PagesComponents$Organization_$Project_$Models$Erd$getTable, ref.aq, erd));
	});
var $author$project$PagesComponents$Organization_$Project_$Models$DragStart = F2(
	function (a, b) {
		return {$: 66, a: a, b: b};
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Erd$handleErdPointerDown = F3(
	function (conf, cursorMode, e) {
		if (e.kO === 1) {
			if (!cursorMode) {
				return conf.jb ? A2($author$project$PagesComponents$Organization_$Project_$Models$DragStart, $author$project$Conf$ids.lE, e.h3) : $author$project$PagesComponents$Organization_$Project_$Models$Noop('No erd drag');
			} else {
				return conf.fe ? A2($author$project$PagesComponents$Organization_$Project_$Models$DragStart, $author$project$Conf$ids.op, e.h3) : $author$project$PagesComponents$Organization_$Project_$Models$Noop('No selection box');
			}
		} else {
			if (e.kO === 2) {
				return conf.jb ? A2($author$project$PagesComponents$Organization_$Project_$Models$DragStart, $author$project$Conf$ids.lE, e.h3) : $author$project$PagesComponents$Organization_$Project_$Models$Noop('No middle button erd drag');
			} else {
				return $author$project$PagesComponents$Organization_$Project_$Models$Noop('No match on erd pointer down');
			}
		}
	});
var $elm$virtual_dom$VirtualDom$Custom = function (a) {
	return {$: 3, a: a};
};
var $elm$html$Html$Events$custom = F2(
	function (event, decoder) {
		return A2(
			$elm$virtual_dom$VirtualDom$on,
			event,
			$elm$virtual_dom$VirtualDom$Custom(decoder));
	});
var $author$project$Libs$Models$Platform$Mac = 1;
var $author$project$Libs$Html$Events$PointerEvent = F7(
	function (clientPos, pagePos, ctrl, alt, shift, meta, button) {
		return {fA: alt, kO: button, h3: clientPos, at: ctrl, i7: meta, js: pagePos, hp: shift};
	});
var $author$project$Libs$Html$Events$buttonFromId = function (id) {
	switch (id) {
		case 0:
			return 1;
		case 1:
			return 2;
		case 2:
			return 3;
		case 3:
			return 4;
		case 4:
			return 5;
		default:
			return 0;
	}
};
var $author$project$Models$Position$Document = $elm$core$Basics$identity;
var $author$project$Models$Position$document = function (pos) {
	return pos;
};
var $author$project$Models$Position$decodeDocument = A3(
	$elm$json$Json$Decode$map2,
	F2(
		function (x, y) {
			return $author$project$Models$Position$document(
				A2($author$project$Libs$Models$Position$Position, x, y));
		}),
	A2($elm$json$Json$Decode$field, 'pageX', $elm$json$Json$Decode$float),
	A2($elm$json$Json$Decode$field, 'pageY', $elm$json$Json$Decode$float));
var $author$project$Libs$Html$Events$pointerDecoder = function (platform) {
	return A8(
		$elm$json$Json$Decode$map7,
		$author$project$Libs$Html$Events$PointerEvent,
		$author$project$Models$Position$decodeViewport,
		$author$project$Models$Position$decodeDocument,
		A2(
			$elm$json$Json$Decode$field,
			A3($author$project$Libs$Bool$cond, platform === 1, 'metaKey', 'ctrlKey'),
			$elm$json$Json$Decode$bool),
		A2($elm$json$Json$Decode$field, 'altKey', $elm$json$Json$Decode$bool),
		A2($elm$json$Json$Decode$field, 'shiftKey', $elm$json$Json$Decode$bool),
		A2($elm$json$Json$Decode$field, 'metaKey', $elm$json$Json$Decode$bool),
		A2(
			$elm$json$Json$Decode$map,
			$author$project$Libs$Html$Events$buttonFromId,
			A2($elm$json$Json$Decode$field, 'button', $elm$json$Json$Decode$int)));
};
var $author$project$Libs$Html$Events$onContextMenu = F2(
	function (platform, msg) {
		return A2(
			$elm$html$Html$Events$custom,
			'contextmenu',
			A2(
				$elm$json$Json$Decode$map,
				function (e) {
					return {
						cq: msg(e),
						jy: true,
						hw: true
					};
				},
				$author$project$Libs$Html$Events$pointerDecoder(platform)));
	});
var $author$project$Libs$Html$Events$onDblClick = F2(
	function (platform, msg) {
		return A2(
			$elm$html$Html$Events$on,
			'dblclick',
			A2(
				$elm$json$Json$Decode$map,
				msg,
				$author$project$Libs$Html$Events$pointerDecoder(platform)));
	});
var $author$project$Libs$Html$Events$WheelEvent = F7(
	function (clientPos, pagePos, delta, ctrl, alt, shift, meta) {
		return {fA: alt, h3: clientPos, at: ctrl, lk: delta, i7: meta, js: pagePos, hp: shift};
	});
var $author$project$Libs$Models$Delta$decodeEvent = A3(
	$elm$json$Json$Decode$map2,
	$author$project$Libs$Models$Delta$Delta,
	A2($elm$json$Json$Decode$field, 'deltaX', $elm$json$Json$Decode$float),
	A2($elm$json$Json$Decode$field, 'deltaY', $elm$json$Json$Decode$float));
var $author$project$Libs$Html$Events$wheelDecoder = function (platform) {
	return A8(
		$elm$json$Json$Decode$map7,
		$author$project$Libs$Html$Events$WheelEvent,
		$author$project$Models$Position$decodeViewport,
		$author$project$Models$Position$decodeDocument,
		$author$project$Libs$Models$Delta$decodeEvent,
		A2(
			$elm$json$Json$Decode$field,
			A3($author$project$Libs$Bool$cond, platform === 1, 'metaKey', 'ctrlKey'),
			$elm$json$Json$Decode$bool),
		A2($elm$json$Json$Decode$field, 'altKey', $elm$json$Json$Decode$bool),
		A2($elm$json$Json$Decode$field, 'shiftKey', $elm$json$Json$Decode$bool),
		A2($elm$json$Json$Decode$field, 'metaKey', $elm$json$Json$Decode$bool));
};
var $author$project$Libs$Html$Events$onWheel = F2(
	function (platform, callback) {
		var preventDefaultAndStopPropagation = function (msg) {
			return {cq: msg, jy: true, hw: true};
		};
		return A2(
			$elm$html$Html$Events$custom,
			'wheel',
			A2(
				$elm$json$Json$Decode$map,
				A2($elm$core$Basics$composeR, callback, preventDefaultAndStopPropagation),
				$author$project$Libs$Html$Events$wheelDecoder(platform)));
	});
var $author$project$Libs$Html$Events$stopPointerDown = F2(
	function (platform, msg) {
		return A2(
			$elm$html$Html$Events$stopPropagationOn,
			'pointerdown',
			A2(
				$elm$json$Json$Decode$map,
				function (e) {
					return _Utils_Tuple2(
						msg(e),
						true);
				},
				$author$project$Libs$Html$Events$pointerDecoder(platform)));
	});
var $author$project$Libs$Models$Platform$PC = 0;
var $author$project$Libs$Models$Platform$fromString = function (value) {
	switch (value) {
		case 'pc':
			return 0;
		case 'mac':
			return 1;
		default:
			return 0;
	}
};
var $author$project$PagesComponents$Organization_$Project_$Models$CursorMode$fromString = function (value) {
	switch (value) {
		case 'drag':
			return 0;
		case 'select':
			return 1;
		default:
			return 0;
	}
};
var $author$project$PagesComponents$Organization_$Project_$Views$Erd$stringToArgs = function (args) {
	var _v0 = A2($elm$core$String$split, '~', args);
	if ((((((_v0.b && _v0.b.b) && _v0.b.b.b) && _v0.b.b.b.b) && _v0.b.b.b.b.b) && _v0.b.b.b.b.b.b) && (!_v0.b.b.b.b.b.b.b)) {
		var platform = _v0.a;
		var _v1 = _v0.b;
		var cursorMode = _v1.a;
		var _v2 = _v1.b;
		var hoverTable = _v2.a;
		var _v3 = _v2.b;
		var openedDropdown = _v3.a;
		var _v4 = _v3.b;
		var openedPopover = _v4.a;
		var _v5 = _v4.b;
		var selected = _v5.a;
		return _Utils_Tuple2(
			_Utils_Tuple3(
				$author$project$Libs$Models$Platform$fromString(platform),
				$author$project$PagesComponents$Organization_$Project_$Models$CursorMode$fromString(cursorMode),
				$author$project$Models$Project$TableId$fromString(hoverTable)),
			_Utils_Tuple3(openedDropdown, openedPopover, selected));
	} else {
		return _Utils_Tuple2(
			_Utils_Tuple3(0, 1, $elm$core$Maybe$Nothing),
			_Utils_Tuple3('', '', ''));
	}
};
var $author$project$Models$Position$styleTransformDiagram = F2(
	function (_v0, zoom) {
		var pos = _v0;
		return A2(
			$elm$html$Html$Attributes$style,
			'transform',
			'translate(' + ($elm$core$String$fromFloat(pos.C) + ('px, ' + ($elm$core$String$fromFloat(pos.ad) + ('px) scale(' + ($elm$core$String$fromFloat(zoom) + ')'))))));
	});
var $author$project$PagesComponents$Organization_$Project_$Models$SAOpen = {$: 0};
var $author$project$Libs$Tailwind$text_800 = function (_v0) {
	var color = _v0;
	return 'text-' + (color + '-800');
};
var $author$project$Components$Atoms$Badge$basicFlex = F3(
	function (color, attrs, content) {
		return A2(
			$elm$html$Html$span,
			_Utils_ap(
				_List_fromArray(
					[
						$author$project$Libs$Html$Attributes$css(
						_List_fromArray(
							[
								'inline-flex items-center px-2 py-0.5 rounded text-xs font-medium',
								$author$project$Libs$Tailwind$bg_100(color),
								$author$project$Libs$Tailwind$text_800(color)
							]))
					]),
				attrs),
			content);
	});
var $author$project$Components$Atoms$Kbd$badge = F2(
	function (attrs, keys) {
		return A3(
			$author$project$Components$Atoms$Badge$basicFlex,
			$author$project$Libs$Tailwind$gray,
			attrs,
			_List_fromArray(
				[
					$elm$html$Html$text(
					A2($elm$core$String$join, ' + ', keys))
				]));
	});
var $author$project$Libs$Models$Hotkey$keys = F2(
	function (platform, h) {
		return A2(
			$elm$core$List$filterMap,
			$elm$core$Basics$identity,
			_List_fromArray(
				[
					A3(
					$author$project$Libs$Bool$cond,
					h.at,
					$elm$core$Maybe$Just(
						A3($author$project$Libs$Bool$cond, platform === 1, 'Cmd', 'Ctrl')),
					$elm$core$Maybe$Nothing),
					A3(
					$author$project$Libs$Bool$cond,
					h.fA,
					$elm$core$Maybe$Just('Alt'),
					$elm$core$Maybe$Nothing),
					A3(
					$author$project$Libs$Bool$cond,
					h.hp,
					$elm$core$Maybe$Just('Shift'),
					$elm$core$Maybe$Nothing),
					$elm$core$Maybe$Just(
					function () {
						var _v0 = h.dk;
						switch (_v0) {
							case 'ArrowUp':
								return '↑';
							case 'ArrowDown':
								return '↓';
							case 'ArrowLeft':
								return '←';
							case 'ArrowRight':
								return '→';
							default:
								return h.dk;
						}
					}())
				]));
	});
var $author$project$Components$Molecules$ContextMenu$btnHotkey = F5(
	function (styles, action, content, platform, hotkey) {
		return A3(
			$author$project$Components$Molecules$ContextMenu$btn,
			styles + ' flex justify-between',
			action,
			_Utils_ap(
				content,
				A3(
					$author$project$Libs$Maybe$mapOrElse,
					function (k) {
						return _List_fromArray(
							[
								A2(
								$author$project$Components$Atoms$Kbd$badge,
								_List_fromArray(
									[
										$elm$html$Html$Attributes$class('ml-3')
									]),
								A2($author$project$Libs$Models$Hotkey$keys, platform, k))
							]);
					},
					_List_Nil,
					$elm$core$List$head(hotkey))));
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$ErdContextMenu$view = F4(
	function (platform, erdElem, canvasProps, event) {
		return A2(
			$elm$html$Html$div,
			_List_Nil,
			_List_fromArray(
				[
					A5(
					$author$project$Components$Molecules$ContextMenu$btnHotkey,
					'',
					$author$project$PagesComponents$Organization_$Project_$Models$SelectAllTables,
					_List_fromArray(
						[
							$elm$html$Html$text('Select all tables')
						]),
					platform,
					A3($author$project$Libs$Dict$getOrElse, 'select-all', _List_Nil, $author$project$Conf$hotkeys)),
					A5(
					$author$project$Components$Molecules$ContextMenu$btnHotkey,
					'',
					$author$project$PagesComponents$Organization_$Project_$Models$NewLayoutMsg(
						$author$project$PagesComponents$Organization_$Project_$Views$Modals$NewLayout$Open($elm$core$Maybe$Nothing)),
					_List_fromArray(
						[
							$elm$html$Html$text('New layout')
						]),
					platform,
					A3($author$project$Libs$Dict$getOrElse, 'create-layout', _List_Nil, $author$project$Conf$hotkeys)),
					A5(
					$author$project$Components$Molecules$ContextMenu$btnHotkey,
					'',
					$author$project$PagesComponents$Organization_$Project_$Models$MemoMsg(
						$author$project$PagesComponents$Organization_$Project_$Models$MCreate(
							A3($author$project$Models$Project$CanvasProps$eventCanvas, erdElem, canvasProps, event))),
					_List_fromArray(
						[
							$elm$html$Html$text('New memo')
						]),
					platform,
					A3($author$project$Libs$Dict$getOrElse, 'new-memo', _List_Nil, $author$project$Conf$hotkeys)),
					A3(
					$author$project$Components$Molecules$ContextMenu$btn,
					'',
					$author$project$PagesComponents$Organization_$Project_$Models$FitToScreen,
					_List_fromArray(
						[
							$elm$html$Html$text('Fit diagram to screen')
						])),
					A3(
					$author$project$Components$Molecules$ContextMenu$btn,
					'',
					$author$project$PagesComponents$Organization_$Project_$Models$AmlSidebarMsg($author$project$PagesComponents$Organization_$Project_$Models$AToggle),
					_List_fromArray(
						[
							$elm$html$Html$text('Update your schema')
						])),
					A5(
					$author$project$Components$Molecules$ContextMenu$btnHotkey,
					'',
					$author$project$PagesComponents$Organization_$Project_$Models$FindPathMsg(
						A2($author$project$PagesComponents$Organization_$Project_$Models$FPOpen, $elm$core$Maybe$Nothing, $elm$core$Maybe$Nothing)),
					_List_fromArray(
						[
							$elm$html$Html$text('Find path between tables')
						]),
					platform,
					A3($author$project$Libs$Dict$getOrElse, 'find-path', _List_Nil, $author$project$Conf$hotkeys)),
					A3(
					$author$project$Components$Molecules$ContextMenu$btn,
					'',
					$author$project$PagesComponents$Organization_$Project_$Models$SchemaAnalysisMsg($author$project$PagesComponents$Organization_$Project_$Models$SAOpen),
					_List_fromArray(
						[
							$elm$html$Html$text('Analyze schema')
						]))
				]));
	});
var $elm$svg$Svg$Attributes$height = _VirtualDom_attribute('height');
var $elm$svg$Svg$Attributes$width = _VirtualDom_attribute('width');
var $author$project$PagesComponents$Organization_$Project_$Views$Erd$Relation$viewEmptyRelation = A2(
	$elm$svg$Svg$svg,
	_List_fromArray(
		[
			$elm$svg$Svg$Attributes$class('az-empty-relation'),
			$elm$svg$Svg$Attributes$width('0px'),
			$elm$svg$Svg$Attributes$height('0px')
		]),
	_List_Nil);
var $author$project$PagesComponents$Organization_$Project_$Models$Focus = function (a) {
	return {$: 58, a: a};
};
var $elm$html$Html$h2 = _VirtualDom_node('h2');
var $author$project$Components$Atoms$Icon$outline2x = F2(
	function (icon, styles) {
		return function (lines) {
			return A2($author$project$Components$Atoms$Icon$viewOutline, lines, 'h-12 w-12 ' + styles);
		}(
			A3(
				$author$project$Libs$Maybe$mapOrElse,
				function ($) {
					return $.a;
				},
				_List_Nil,
				A2(
					$elm$core$Dict$get,
					A2(
						$elm$core$Maybe$withDefault,
						'',
						$author$project$Components$Atoms$Icon$toString(icon)),
					$author$project$Components$Atoms$Icon$icons)));
	});
var $author$project$Libs$String$pluralizeD = F2(
	function (word, list) {
		return A2(
			$author$project$Libs$String$pluralize,
			word,
			$elm$core$Dict$size(list));
	});
var $author$project$Components$Atoms$Badge$roundedFlex = F3(
	function (color, attrs, content) {
		return A2(
			$elm$html$Html$span,
			_Utils_ap(
				_List_fromArray(
					[
						$author$project$Libs$Html$Attributes$css(
						_List_fromArray(
							[
								'inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium',
								$author$project$Libs$Tailwind$bg_100(color),
								$author$project$Libs$Tailwind$text_800(color)
							]))
					]),
				attrs),
			content);
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Erd$viewEmptyState = F2(
	function (defaultSchema, tables) {
		var bestOneWordTables = A2(
			$elm$core$List$take,
			10,
			A2(
				$elm$core$List$sortBy,
				function (t) {
					return $elm$core$String$length(t.eS) - $elm$core$Dict$size(t.M);
				},
				A2(
					$author$project$Libs$List$filterNot,
					function (t) {
						return A2($elm$core$String$contains, '_', t.aI) || (A2($elm$core$String$contains, '_', t.eS) || (A2($elm$core$String$contains, '-', t.aI) || A2($elm$core$String$contains, '-', t.eS)));
					},
					$elm$core$Dict$values(tables))));
		var bestTables = $elm$core$List$isEmpty(bestOneWordTables) ? A2(
			$elm$core$List$take,
			10,
			A2(
				$elm$core$List$sortBy,
				function (t) {
					return $elm$core$String$length(t.eS) - $elm$core$Dict$size(t.M);
				},
				$elm$core$Dict$values(tables))) : bestOneWordTables;
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('flex h-full justify-center items-center')
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('max-w-prose p-6 bg-white border border-gray-200 rounded-lg')
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('text-center')
								]),
							_List_fromArray(
								[
									A2($author$project$Components$Atoms$Icon$outline2x, 201, 'mx-auto text-primary-500'),
									A2(
									$elm$html$Html$h2,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$class('mt-2 text-lg font-medium text-gray-900')
										]),
									_List_fromArray(
										[
											$elm$html$Html$text('Hello from Azimutt 👋')
										])),
									$elm$core$Dict$isEmpty(tables) ? A2(
									$elm$html$Html$p,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$class('mt-3 text-sm text-gray-500')
										]),
									_List_fromArray(
										[
											$elm$html$Html$text('Azimutt allows you to create and explore your database schema. Start writing your schema using '),
											A3(
											$author$project$Libs$Html$extLink,
											'https://github.com/azimuttapp/azimutt/blob/main/docs/aml/README.md',
											_List_fromArray(
												[
													$elm$html$Html$Attributes$class('link')
												]),
											_List_fromArray(
												[
													$elm$html$Html$text('AML syntax')
												])),
											$elm$html$Html$text(' or import and explore your schema. Add any source (database url, SQL or JSON) in project settings (top right '),
											A2($author$project$Components$Atoms$Icon$outline, 62, 'h-5 w-5 inline'),
											$elm$html$Html$text(').')
										])) : A2(
									$elm$html$Html$div,
									_List_Nil,
									_List_fromArray(
										[
											A2(
											$elm$html$Html$p,
											_List_fromArray(
												[
													$elm$html$Html$Attributes$class('mt-3 text-sm text-gray-500')
												]),
											_List_fromArray(
												[
													$elm$html$Html$text('Azimutt allows you to explore your database schema. Start by typing what you are looking for in the '),
													A2(
													$elm$html$Html$button,
													_List_fromArray(
														[
															$elm$html$Html$Events$onClick(
															$author$project$PagesComponents$Organization_$Project_$Models$Focus($author$project$Conf$ids.fc)),
															$author$project$Libs$Html$Attributes$css(
															_List_fromArray(
																[
																	'link',
																	$author$project$Libs$Tailwind$focus(
																	_List_fromArray(
																		['outline-none']))
																]))
														]),
													_List_fromArray(
														[
															$elm$html$Html$text('search bar')
														])),
													$elm$html$Html$text(', and then look at columns, follow relations and more... Create new layouts to save them for later.')
												])),
											A2(
											$elm$html$Html$p,
											_List_fromArray(
												[
													$elm$html$Html$Attributes$class('mt-3 text-sm text-gray-500')
												]),
											_List_fromArray(
												[
													$elm$html$Html$text('Your project has '),
													$author$project$Libs$Html$bText(
													A2($author$project$Libs$String$pluralizeD, 'table', tables)),
													$elm$html$Html$text('. Here are some that could be interesting:'),
													A2(
													$elm$html$Html$div,
													_List_Nil,
													A2(
														$elm$core$List$map,
														function (t) {
															return A2(
																$author$project$Components$Molecules$Tooltip$t,
																A2($author$project$Libs$String$pluralizeD, 'column', t.M),
																A3(
																	$author$project$Components$Atoms$Badge$roundedFlex,
																	$author$project$Libs$Tailwind$primary,
																	_List_fromArray(
																		[
																			$elm$html$Html$Events$onClick(
																			A2($author$project$PagesComponents$Organization_$Project_$Models$ShowTable, t.H, $elm$core$Maybe$Nothing)),
																			$elm$html$Html$Attributes$class('m-1 cursor-pointer')
																		]),
																	_List_fromArray(
																		[
																			$elm$html$Html$text(
																			A2($author$project$Models$Project$TableId$show, defaultSchema, t.H))
																		])));
														},
														bestTables))
												]))
										])),
									A2(
									$elm$html$Html$p,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$class('mt-3 text-sm text-gray-500')
										]),
									_List_fromArray(
										[
											$elm$html$Html$text('If you ❤️ Azimutt, '),
											A3(
											$author$project$Libs$Html$sendTweet,
											$author$project$Conf$constants.kZ,
											_List_fromArray(
												[
													$elm$html$Html$Attributes$class('link')
												]),
											_List_fromArray(
												[
													$elm$html$Html$text('come and say hi')
												])),
											$elm$html$Html$text('. We are eager to learn how you use it and for what. We also love '),
											A3(
											$author$project$Libs$Html$extLink,
											$author$project$Conf$constants.kC,
											_List_fromArray(
												[
													$elm$html$Html$Attributes$class('link')
												]),
											_List_fromArray(
												[
													$elm$html$Html$text('feedback and feature requests')
												])),
											$elm$html$Html$text('.')
										]))
								]))
						]))
				]));
	});
var $author$project$Libs$Maybe$filterBy = F3(
	function (transform, value, maybe) {
		return A2(
			$author$project$Libs$Maybe$filter,
			function (a) {
				return _Utils_eq(
					transform(a),
					value);
			},
			maybe);
	});
var $author$project$PagesComponents$Organization_$Project_$Models$MEdit = function (a) {
	return {$: 1, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Models$MEditSave = {$: 3};
var $author$project$PagesComponents$Organization_$Project_$Models$MEditUpdate = function (a) {
	return {$: 2, a: a};
};
var $elm$html$Html$Attributes$boolProperty = F2(
	function (key, bool) {
		return A2(
			_VirtualDom_property,
			key,
			$elm$json$Json$Encode$bool(bool));
	});
var $elm$html$Html$Attributes$autofocus = $elm$html$Html$Attributes$boolProperty('autofocus');
var $author$project$Libs$Tailwind$bg_200 = function (_v0) {
	var color = _v0;
	return 'bg-' + (color + '-200');
};
var $author$project$PagesComponents$Organization_$Project_$Views$Erd$Memo$handleMemoPointerDown = F2(
	function (htmlId, e) {
		return (e.kO === 1) ? A2($author$project$PagesComponents$Organization_$Project_$Models$DragStart, htmlId, e.h3) : ((e.kO === 2) ? A2($author$project$PagesComponents$Organization_$Project_$Models$DragStart, $author$project$Conf$ids.lE, e.h3) : $author$project$PagesComponents$Organization_$Project_$Models$Noop('No match on memo pointer down'));
	});
var $author$project$Libs$Html$Events$stopDoubleClick = function (m) {
	return A2(
		$elm$html$Html$Events$stopPropagationOn,
		'dblclick',
		$elm$json$Json$Decode$succeed(
			_Utils_Tuple2(m, true)));
};
var $author$project$Libs$Models$Size$styles = function (size) {
	return _List_fromArray(
		[
			A2(
			$elm$html$Html$Attributes$style,
			'width',
			$elm$core$String$fromFloat(size.bB) + 'px'),
			A2(
			$elm$html$Html$Attributes$style,
			'height',
			$elm$core$String$fromFloat(size.bj) + 'px')
		]);
};
var $author$project$Models$Size$stylesCanvas = function (_v0) {
	var size = _v0;
	return $author$project$Libs$Models$Size$styles(size);
};
var $author$project$Libs$Models$Position$styles = function (pos) {
	return _List_fromArray(
		[
			A2(
			$elm$html$Html$Attributes$style,
			'left',
			$elm$core$String$fromFloat(pos.C) + 'px'),
			A2(
			$elm$html$Html$Attributes$style,
			'top',
			$elm$core$String$fromFloat(pos.ad) + 'px')
		]);
};
var $author$project$Models$Position$stylesGrid = function (_v0) {
	var pos = _v0;
	return $author$project$Libs$Models$Position$styles(pos);
};
var $author$project$Models$Area$stylesGrid = function (area) {
	return _Utils_ap(
		$author$project$Models$Position$stylesGrid(area.e$),
		$author$project$Models$Size$stylesCanvas(area.ox));
};
var $elm$html$Html$textarea = _VirtualDom_node('textarea');
var $author$project$Components$Molecules$ContextMenu$Custom = function (a) {
	return {$: 2, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Models$MDelete = function (a) {
	return {$: 5, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Models$MSetColor = F2(
	function (a, b) {
		return {$: 4, a: a, b: b};
	});
var $author$project$Components$Molecules$ContextMenu$Simple = function (a) {
	return {$: 0, a: a};
};
var $author$project$Components$Molecules$ContextMenu$btnSubmenu = function (item) {
	var _v0 = item.b1;
	switch (_v0.$) {
		case 0:
			var action = _v0.a.b1;
			var platform = _v0.a.e_;
			var hotkeys = _v0.a.eB;
			return A5(
				$author$project$Components$Molecules$ContextMenu$btnHotkey,
				'',
				action,
				_List_fromArray(
					[
						$elm$html$Html$text(item.cn)
					]),
				platform,
				hotkeys);
		case 1:
			var submenus = _v0.a;
			return A2(
				$elm$html$Html$div,
				_List_fromArray(
					[
						$author$project$Libs$Html$Attributes$css(
						_List_fromArray(
							['group relative', $author$project$Components$Molecules$ContextMenu$itemStyles]))
					]),
				_List_fromArray(
					[
						$elm$html$Html$text(item.cn + ' »'),
						A2(
						$elm$html$Html$div,
						_List_fromArray(
							[
								$author$project$Libs$Html$Attributes$css(
								_List_fromArray(
									['group-hover:block hidden -top-1 left-full', $author$project$Components$Molecules$ContextMenu$menuStyles]))
							]),
						A2(
							$elm$core$List$map,
							function (submenu) {
								return A5(
									$author$project$Components$Molecules$ContextMenu$btnHotkey,
									'',
									submenu.b1,
									_List_fromArray(
										[
											$elm$html$Html$text(submenu.cn)
										]),
									submenu.e_,
									submenu.eB);
							},
							submenus))
					]));
		default:
			var html = _v0.a;
			return A2(
				$elm$html$Html$div,
				_List_fromArray(
					[
						$author$project$Libs$Html$Attributes$css(
						_List_fromArray(
							['group relative', $author$project$Components$Molecules$ContextMenu$itemStyles]))
					]),
				_List_fromArray(
					[
						$elm$html$Html$text(item.cn + ' »'),
						A2(
						$elm$html$Html$div,
						_List_fromArray(
							[
								$author$project$Libs$Html$Attributes$css(
								_List_fromArray(
									['group-hover:block hidden -top-1 left-full', $author$project$Components$Molecules$ContextMenu$menuStyles]))
							]),
						_List_fromArray(
							[html]))
					]));
	}
};
var $author$project$Libs$Tailwind$bg_500 = function (_v0) {
	var color = _v0;
	return 'bg-' + (color + '-500');
};
var $author$project$Libs$Tailwind$selectable = _Utils_ap(
	$author$project$Libs$Tailwind$list,
	_List_fromArray(
		[$author$project$Libs$Tailwind$gray]));
var $elm$html$Html$Attributes$title = $elm$html$Html$Attributes$stringProperty('title');
var $author$project$Libs$Tailwind$toString = function (_v0) {
	var color = _v0;
	return color;
};
var $author$project$Components$Organisms$ColorPicker$view = function (pickColor) {
	return A2(
		$elm$html$Html$div,
		_List_fromArray(
			[
				$author$project$Libs$Html$Attributes$css(
				_List_fromArray(
					['group-hover:grid grid-cols-6 gap-1 p-1 pl-2']))
			]),
		A2(
			$elm$core$List$map,
			function (c) {
				return A2(
					$elm$html$Html$button,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$type_('button'),
							$elm$html$Html$Events$onClick(
							pickColor(c)),
							$elm$html$Html$Attributes$title(
							$author$project$Libs$Tailwind$toString(c)),
							$author$project$Libs$Html$Attributes$role('menuitem'),
							$elm$html$Html$Attributes$tabindex(-1),
							$author$project$Libs$Html$Attributes$css(
							_List_fromArray(
								[
									'rounded-full w-6 h-6',
									$author$project$Libs$Tailwind$bg_500(c),
									$author$project$Libs$Tailwind$hover(
									_List_fromArray(
										['scale-125'])),
									$author$project$Libs$Tailwind$focus(
									_List_fromArray(
										['outline-none']))
								]))
						]),
					_List_Nil);
			},
			$author$project$Libs$Tailwind$selectable));
};
var $author$project$Libs$Maybe$when = F2(
	function (p, a) {
		return p ? $elm$core$Maybe$Just(a) : $elm$core$Maybe$Nothing;
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$MemoContextMenu$view = F3(
	function (platform, conf, memo) {
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('z-max')
				]),
			A2(
				$elm$core$List$map,
				$author$project$Components$Molecules$ContextMenu$btnSubmenu,
				A2(
					$elm$core$List$filterMap,
					$elm$core$Basics$identity,
					_List_fromArray(
						[
							A2(
							$author$project$Libs$Maybe$when,
							conf.aM,
							{
								b1: $author$project$Components$Molecules$ContextMenu$Simple(
									{
										b1: $author$project$PagesComponents$Organization_$Project_$Models$MemoMsg(
											$author$project$PagesComponents$Organization_$Project_$Models$MDelete(memo.H)),
										eB: _List_Nil,
										e_: platform
									}),
								cn: 'Delete memo'
							}),
							A2(
							$author$project$Libs$Maybe$when,
							conf.aM,
							{
								b1: $author$project$Components$Molecules$ContextMenu$Custom(
									$author$project$Components$Organisms$ColorPicker$view(
										function (c) {
											return $author$project$PagesComponents$Organization_$Project_$Models$MemoMsg(
												A2(
													$author$project$PagesComponents$Organization_$Project_$Models$MSetColor,
													memo.H,
													A2(
														$author$project$Libs$Bool$maybe,
														!_Utils_eq(c, $author$project$Libs$Tailwind$gray),
														c)));
										})),
								cn: 'Set memo color'
							})
						]))));
	});
var $author$project$Components$Atoms$Markdown$defaultOptions = {
	$8: $elm$core$Maybe$Nothing,
	iF: $elm$core$Maybe$Just(
		{kN: true, oM: true}),
	hm: true,
	jY: true
};
var $elm_explorations$markdown$Markdown$toHtmlWith = _Markdown_toHtml;
var $author$project$Components$Atoms$Markdown$render = F3(
	function (options, styles, md) {
		return A3(
			$elm_explorations$markdown$Markdown$toHtmlWith,
			options,
			_List_fromArray(
				[
					$author$project$Libs$Html$Attributes$css(
					_List_fromArray(
						['markdown', styles]))
				]),
			md);
	});
var $author$project$Components$Atoms$Markdown$markdown = F2(
	function (styles, md) {
		return A3($author$project$Components$Atoms$Markdown$render, $author$project$Components$Atoms$Markdown$defaultOptions, styles, md);
	});
var $author$project$Components$Atoms$Markdown$prose = F2(
	function (styles, md) {
		return A2($author$project$Components$Atoms$Markdown$markdown, styles + (' prose leading-tight ' + ('prose-p:my-2 ' + ('prose-ul:my-2 prose-li:my-0 ' + ('prose-img:my-2 ' + 'prose-pre:my-2 prose-pre:py-1 prose-pre:px-2 prose-pre:bg-gray-200 prose-pre:text-gray-700')))), md);
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Erd$Memo$viewMarkdown = function (content) {
	return A2($author$project$Components$Atoms$Markdown$prose, 'prose-img:pointer-events-none', content);
};
var $author$project$PagesComponents$Organization_$Project_$Views$Erd$Memo$viewMemo = F5(
	function (platform, conf, cursorMode, edit, memo) {
		var resizeMemo = A3(
			$author$project$Libs$Bool$cond,
			(!cursorMode) || (!conf.jb),
			_List_Nil,
			_List_fromArray(
				[
					A2(
					$author$project$Libs$Html$Events$stopPointerDown,
					platform,
					function (_v0) {
						return $author$project$PagesComponents$Organization_$Project_$Models$Noop('no drag on memo resize');
					})
				]));
		var htmlId = $author$project$PagesComponents$Organization_$Project_$Models$MemoId$toHtmlId(memo.H);
		var dragMemo = A3(
			$author$project$Libs$Bool$cond,
			(!cursorMode) || (!conf.jb),
			_List_Nil,
			_List_fromArray(
				[
					A2(
					$author$project$Libs$Html$Events$stopPointerDown,
					platform,
					$author$project$PagesComponents$Organization_$Project_$Views$Erd$Memo$handleMemoPointerDown(htmlId))
				]));
		return A2(
			$elm$core$Maybe$withDefault,
			A2(
				$elm$html$Html$div,
				_Utils_ap(
					_List_fromArray(
						[
							$elm$html$Html$Attributes$id(htmlId),
							$elm$html$Html$Attributes$class(
							'select-none absolute px-3 py-1 cursor-pointer overflow-hidden border border-transparent border-dashed hover:border-gray-300 hover:resize hover:overflow-auto' + A3(
								$author$project$Libs$Maybe$mapOrElse,
								function (c) {
									return ' shadow rounded ' + $author$project$Libs$Tailwind$bg_200(c);
								},
								'',
								memo.A))
						]),
					_Utils_ap(
						A3(
							$author$project$Libs$Bool$cond,
							conf.aM,
							_List_fromArray(
								[
									$author$project$Libs$Html$Events$stopDoubleClick(
									$author$project$PagesComponents$Organization_$Project_$Models$MemoMsg(
										$author$project$PagesComponents$Organization_$Project_$Models$MEdit(memo))),
									A2(
									$author$project$Libs$Html$Events$onContextMenu,
									platform,
									$author$project$PagesComponents$Organization_$Project_$Models$ContextMenuCreate(
										A3($author$project$PagesComponents$Organization_$Project_$Views$Modals$MemoContextMenu$view, platform, conf, memo)))
								]),
							_List_Nil),
						_Utils_ap(
							$author$project$Models$Area$stylesGrid(memo),
							resizeMemo))),
				_List_fromArray(
					[
						A2(
						$elm$html$Html$div,
						_Utils_ap(
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('w-full h-full')
								]),
							dragMemo),
						_List_fromArray(
							[
								$author$project$PagesComponents$Organization_$Project_$Views$Erd$Memo$viewMarkdown(memo.cX)
							]))
					])),
			A2(
				$elm$core$Maybe$map,
				function (v) {
					return A2(
						$elm$html$Html$div,
						_Utils_ap(
							_List_fromArray(
								[
									$elm$html$Html$Attributes$id(htmlId),
									$elm$html$Html$Attributes$class('absolute')
								]),
							$author$project$Models$Position$stylesGrid(memo.e$)),
						_List_fromArray(
							[
								A2(
								$elm$html$Html$textarea,
								_Utils_ap(
									_List_fromArray(
										[
											$elm$html$Html$Attributes$id(
											$author$project$PagesComponents$Organization_$Project_$Models$MemoId$toInputId(memo.H)),
											$elm$html$Html$Attributes$name(
											$author$project$PagesComponents$Organization_$Project_$Models$MemoId$toInputId(memo.H)),
											$elm$html$Html$Attributes$value(v),
											$elm$html$Html$Events$onInput(
											A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Models$MEditUpdate, $author$project$PagesComponents$Organization_$Project_$Models$MemoMsg)),
											$elm$html$Html$Events$onBlur(
											$author$project$PagesComponents$Organization_$Project_$Models$MemoMsg($author$project$PagesComponents$Organization_$Project_$Models$MEditSave)),
											$elm$html$Html$Attributes$autofocus(true),
											$elm$html$Html$Attributes$placeholder('Write any useful memo here!'),
											$elm$html$Html$Attributes$class('resize block rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500')
										]),
									$author$project$Models$Size$stylesCanvas(memo.ox)),
								_List_Nil)
							]));
				},
				edit));
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Erd$viewMemos = F5(
	function (platform, conf, cursorMode, editMemo, memos) {
		return A3(
			$elm$html$Html$Keyed$node,
			'div',
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('az-memos')
				]),
			A2(
				$elm$core$List$map,
				function (memo) {
					return _Utils_Tuple2(
						$author$project$PagesComponents$Organization_$Project_$Models$MemoId$toHtmlId(memo.H),
						A6(
							$elm$html$Html$Lazy$lazy5,
							$author$project$PagesComponents$Organization_$Project_$Views$Erd$Memo$viewMemo,
							platform,
							conf,
							cursorMode,
							A2(
								$elm$core$Maybe$map,
								function ($) {
									return $.cX;
								},
								A3(
									$author$project$Libs$Maybe$filterBy,
									function ($) {
										return $.H;
									},
									memo.H,
									editMemo)),
							memo));
				},
				memos));
	});
var $elm$virtual_dom$VirtualDom$lazy6 = _VirtualDom_lazy6;
var $elm$html$Html$Lazy$lazy6 = $elm$virtual_dom$VirtualDom$lazy6;
var $author$project$Components$Organisms$Relation$Left = 1;
var $author$project$Components$Organisms$Relation$Right = 0;
var $author$project$PagesComponents$Organization_$Project_$Models$ToggleHoverColumn = F2(
	function (a, b) {
		return {$: 32, a: a, b: b};
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Erd$Relation$deltaTop = F2(
	function (index, collapsed) {
		return collapsed ? ($author$project$Conf$ui.oK * 0.5) : ($author$project$Conf$ui.oK + ($author$project$Conf$ui.oJ * (0.5 + index)));
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Erd$Relation$getColor = F2(
	function (src, ref) {
		var _v0 = _Utils_Tuple2(src, ref);
		if (!_v0.a.$) {
			if (!_v0.b.$) {
				var s = _v0.a.a;
				var r = _v0.b.a;
				return A2($author$project$Libs$Bool$maybe, s.aq.cy || (r.aq.cy || (s.az && r.az)), s.aq.A);
			} else {
				var s = _v0.a.a;
				var _v1 = _v0.b;
				return A2($author$project$Libs$Bool$maybe, s.aq.cy || s.az, s.aq.A);
			}
		} else {
			if (!_v0.b.$) {
				var _v2 = _v0.a;
				var r = _v0.b.a;
				return A2($author$project$Libs$Bool$maybe, r.aq.cy || r.az, r.aq.A);
			} else {
				var _v3 = _v0.a;
				var _v4 = _v0.b;
				return $elm$core$Maybe$Nothing;
			}
		}
	});
var $author$project$Models$Project$ColumnPath$withName = F2(
	function (column, text) {
		return text + ('.' + $author$project$Models$Project$ColumnPath$show(column));
	});
var $author$project$Models$Project$ColumnRef$show = F2(
	function (defaultSchema, _v0) {
		var table = _v0.aq;
		var column = _v0.bH;
		return A2(
			$author$project$Models$Project$ColumnPath$withName,
			column,
			A2($author$project$Models$Project$TableId$show, defaultSchema, table));
	});
var $author$project$PagesComponents$Organization_$Project_$Models$ErdRelation$label = F2(
	function (defaultSchema, relation) {
		return A2($author$project$Models$Project$ColumnRef$show, defaultSchema, relation.ht) + (' -> ' + (relation.eS + (' -> ' + A2($author$project$Models$Project$ColumnRef$show, defaultSchema, relation.dG))));
	});
var $author$project$Components$Organisms$Relation$None = 2;
var $author$project$PagesComponents$Organization_$Project_$Views$Erd$Relation$leftCenterRight = function (_v0) {
	var position = _v0.e$;
	var size = _v0.ox;
	var width = $author$project$Models$Size$extractCanvas(size).bB;
	var pos = $author$project$Models$Position$extractCanvas(
		$author$project$Models$Position$offGrid(position));
	return _Utils_Tuple3(pos.C, pos.C + (width / 2), pos.C + width);
};
var $author$project$PagesComponents$Organization_$Project_$Views$Erd$Relation$positionLeft = F2(
	function (src, ref) {
		var _v0 = _Utils_Tuple2(
			$author$project$PagesComponents$Organization_$Project_$Views$Erd$Relation$leftCenterRight(src),
			$author$project$PagesComponents$Organization_$Project_$Views$Erd$Relation$leftCenterRight(ref));
		var _v1 = _v0.a;
		var srcLeft = _v1.a;
		var srcCenter = _v1.b;
		var srcRight = _v1.c;
		var _v2 = _v0.b;
		var refLeft = _v2.a;
		var refCenter = _v2.b;
		var refRight = _v2.c;
		return function (_v3) {
			var _v4 = _v3.a;
			var srcPos = _v4.a;
			var srcDir = _v4.b;
			var _v5 = _v3.b;
			var refPos = _v5.a;
			var refDir = _v5.b;
			return _Utils_Tuple2(
				src.cS ? _Utils_Tuple2(srcCenter, 2) : _Utils_Tuple2(srcPos, srcDir),
				ref.cS ? _Utils_Tuple2(refCenter, 2) : _Utils_Tuple2(refPos, refDir));
		}(
			(_Utils_cmp(srcRight, refLeft) < 0) ? _Utils_Tuple2(
				_Utils_Tuple2(srcRight, 0),
				_Utils_Tuple2(refLeft, 1)) : ((_Utils_cmp(srcCenter, refCenter) < 0) ? _Utils_Tuple2(
				_Utils_Tuple2(srcRight, 0),
				_Utils_Tuple2(refRight, 0)) : ((_Utils_cmp(srcLeft, refRight) < 0) ? _Utils_Tuple2(
				_Utils_Tuple2(srcLeft, 1),
				_Utils_Tuple2(refLeft, 1)) : _Utils_Tuple2(
				_Utils_Tuple2(srcLeft, 1),
				_Utils_Tuple2(refRight, 0)))));
	});
var $elm$svg$Svg$Attributes$style = _VirtualDom_attribute('style');
var $elm$svg$Svg$text = $elm$virtual_dom$VirtualDom$text;
var $author$project$Components$Organisms$Relation$buildSvg = F2(
	function (_v0, svgContent) {
		var src = _v0.ht;
		var ref = _v0.dG;
		var nullable = _v0.nf;
		var color = _v0.A;
		var label = _v0.cn;
		var padding = _v0.dC;
		var _v1 = _Utils_Tuple2(
			$author$project$Models$Position$extractCanvas(src),
			$author$project$Models$Position$extractCanvas(ref));
		var srcPos = _v1.a;
		var refPos = _v1.b;
		var origin = {
			C: A2($elm$core$Basics$min, srcPos.C, refPos.C) - padding,
			ad: A2($elm$core$Basics$min, srcPos.ad, refPos.ad) - padding
		};
		return A2(
			$elm$svg$Svg$svg,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$class('az-relation absolute select-none'),
					$elm$svg$Svg$Attributes$width(
					$elm$core$String$fromFloat(
						$elm$core$Basics$abs(srcPos.C - refPos.C) + (padding * 2))),
					$elm$svg$Svg$Attributes$height(
					$elm$core$String$fromFloat(
						$elm$core$Basics$abs(srcPos.ad - refPos.ad) + (padding * 2))),
					$elm$svg$Svg$Attributes$style(
					'left: ' + ($elm$core$String$fromFloat(origin.C) + ('px; top: ' + ($elm$core$String$fromFloat(origin.ad) + 'px;'))))
				]),
			A2(
				$elm$core$List$cons,
				$elm$svg$Svg$text(label),
				A3(
					svgContent,
					A2($author$project$Libs$Models$Position$diff, origin, $author$project$Libs$Models$Position$zero),
					nullable,
					color)));
	});
var $author$project$Components$Organisms$Relation$apply = function (dir) {
	switch (dir) {
		case 1:
			return -1;
		case 0:
			return 1;
		default:
			return 0;
	}
};
var $author$project$Components$Organisms$Relation$add = F3(
	function (strength, dir, pos) {
		return A2(
			$author$project$Libs$Models$Position$move,
			{
				aY: strength * $author$project$Components$Organisms$Relation$apply(dir),
				aZ: 0
			},
			pos);
	});
var $author$project$Components$Organisms$Relation$arrowSize = 10;
var $elm$svg$Svg$circle = $elm$svg$Svg$trustedNode('circle');
var $elm$svg$Svg$Attributes$cx = _VirtualDom_attribute('cx');
var $elm$svg$Svg$Attributes$cy = _VirtualDom_attribute('cy');
var $elm$svg$Svg$Attributes$r = _VirtualDom_attribute('r');
var $author$project$Libs$Svg$Utils$circle = F3(
	function (pos, radius, attrs) {
		return A2(
			$elm$svg$Svg$circle,
			A2(
				$elm$core$List$cons,
				$elm$svg$Svg$Attributes$cx(
					$elm$core$String$fromFloat(pos.C)),
				A2(
					$elm$core$List$cons,
					$elm$svg$Svg$Attributes$cy(
						$elm$core$String$fromFloat(pos.ad)),
					A2(
						$elm$core$List$cons,
						$elm$svg$Svg$Attributes$r(
							$elm$core$String$fromFloat(radius)),
						attrs))),
			_List_Nil);
	});
var $author$project$Libs$Svg$Utils$point = function (p) {
	return $elm$core$String$fromFloat(p.C) + (',' + $elm$core$String$fromFloat(p.ad));
};
var $author$project$Libs$Svg$Utils$curveTo = F3(
	function (from, anchor, to) {
		return 'C' + ($author$project$Libs$Svg$Utils$point(from) + (' ' + ($author$project$Libs$Svg$Utils$point(anchor) + (' ' + $author$project$Libs$Svg$Utils$point(to)))));
	});
var $author$project$Libs$Tailwind$fill_500 = function (_v0) {
	var color = _v0;
	return 'fill-' + (color + '-500');
};
var $author$project$Libs$List$prependIf = F3(
	function (predicate, item, list) {
		return predicate ? A2($elm$core$List$cons, item, list) : list;
	});
var $elm$svg$Svg$Attributes$strokeDasharray = _VirtualDom_attribute('stroke-dasharray');
var $author$project$Libs$Tailwind$stroke_500 = function (_v0) {
	var color = _v0;
	return 'stroke-' + (color + '-500');
};
var $author$project$Components$Organisms$Relation$lineAttrs = F2(
	function (nullable, color) {
		return A3(
			$author$project$Libs$List$prependIf,
			nullable,
			$elm$svg$Svg$Attributes$strokeDasharray('4'),
			_List_fromArray(
				[
					$author$project$Libs$Svg$Attributes$css(
					_List_fromArray(
						[
							'fill-transparent',
							A3(
							$author$project$Libs$Maybe$mapOrElse,
							function (c) {
								return $author$project$Libs$Tailwind$stroke_500(c) + ' stroke-2';
							},
							'stroke-default-400 stroke-1',
							color)
						]))
				]));
	});
var $author$project$Libs$Svg$Utils$lineTo = function (pos) {
	return 'L' + $author$project$Libs$Svg$Utils$point(pos);
};
var $author$project$Libs$Svg$Utils$moveTo = function (pos) {
	return 'M' + $author$project$Libs$Svg$Utils$point(pos);
};
var $elm$html$Html$Events$onMouseEnter = function (msg) {
	return A2(
		$elm$html$Html$Events$on,
		'mouseenter',
		$elm$json$Json$Decode$succeed(msg));
};
var $elm$html$Html$Events$onMouseLeave = function (msg) {
	return A2(
		$elm$html$Html$Events$on,
		'mouseleave',
		$elm$json$Json$Decode$succeed(msg));
};
var $author$project$Components$Organisms$Relation$drawCurve = F6(
	function (conf, _v0, _v1, onHover, nullable, color) {
		var pos1 = _v0.a;
		var dir1 = _v0.b;
		var pos2 = _v1.a;
		var dir2 = _v1.b;
		var hoverAttrs = conf.bk ? _List_fromArray(
			[
				$elm$html$Html$Events$onMouseEnter(
				onHover(true)),
				$elm$html$Html$Events$onMouseLeave(
				onHover(false))
			]) : _List_Nil;
		var _v2 = _Utils_Tuple2(
			$author$project$Models$Position$extractCanvas(pos1),
			$author$project$Models$Position$extractCanvas(pos2));
		var p1 = _v2.a;
		var p2 = _v2.b;
		var strength = A2(
			$elm$core$Basics$max,
			15,
			$elm$core$Basics$abs(p1.C - p2.C) / 2);
		var path = _List_fromArray(
			[
				$author$project$Libs$Svg$Utils$moveTo(p1),
				$author$project$Libs$Svg$Utils$lineTo(
				A3($author$project$Components$Organisms$Relation$add, $author$project$Components$Organisms$Relation$arrowSize, dir1, p1)),
				$author$project$Libs$Svg$Utils$moveTo(
				A2(
					$author$project$Libs$Models$Position$move,
					{aY: 0, aZ: -($author$project$Components$Organisms$Relation$arrowSize / 2)},
					p1)),
				$author$project$Libs$Svg$Utils$lineTo(
				A3($author$project$Components$Organisms$Relation$add, $author$project$Components$Organisms$Relation$arrowSize, dir1, p1)),
				$author$project$Libs$Svg$Utils$moveTo(
				A2(
					$author$project$Libs$Models$Position$move,
					{aY: 0, aZ: $author$project$Components$Organisms$Relation$arrowSize / 2},
					p1)),
				$author$project$Libs$Svg$Utils$lineTo(
				A3($author$project$Components$Organisms$Relation$add, $author$project$Components$Organisms$Relation$arrowSize, dir1, p1)),
				$author$project$Libs$Svg$Utils$moveTo(
				A3($author$project$Components$Organisms$Relation$add, $author$project$Components$Organisms$Relation$arrowSize, dir1, p1)),
				A3(
				$author$project$Libs$Svg$Utils$curveTo,
				A3($author$project$Components$Organisms$Relation$add, $author$project$Components$Organisms$Relation$arrowSize + strength, dir1, p1),
				A3($author$project$Components$Organisms$Relation$add, strength, dir2, p2),
				p2)
			]);
		return _List_fromArray(
			[
				A2(
				$elm$svg$Svg$path,
				_Utils_ap(
					_List_fromArray(
						[
							$elm$svg$Svg$Attributes$d(
							A2($elm$core$String$join, ' ', path))
						]),
					_Utils_ap(
						hoverAttrs,
						A2($author$project$Components$Organisms$Relation$lineAttrs, nullable, color))),
				_List_Nil),
				A3(
				$author$project$Libs$Svg$Utils$circle,
				A3($author$project$Components$Organisms$Relation$add, 2, dir2, p2),
				2.5,
				_List_fromArray(
					[
						$elm$svg$Svg$Attributes$class(
						A3(
							$author$project$Libs$Maybe$mapOrElse,
							function (c) {
								return $author$project$Libs$Tailwind$fill_500(c);
							},
							'fill-default-400',
							color))
					]))
			]);
	});
var $author$project$Components$Organisms$Relation$bezier = F7(
	function (conf, _v0, _v1, nullable, color, label, onHover) {
		var src = _v0.a;
		var srcDir = _v0.b;
		var ref = _v1.a;
		var refDir = _v1.b;
		return A2(
			$author$project$Components$Organisms$Relation$buildSvg,
			{A: color, cn: label, nf: nullable, dC: 50, dG: ref, ht: src},
			function (origin) {
				return A4(
					$author$project$Components$Organisms$Relation$drawCurve,
					conf,
					_Utils_Tuple2(
						A2($author$project$Models$Position$moveCanvas, origin, src),
						srcDir),
					_Utils_Tuple2(
						A2($author$project$Models$Position$moveCanvas, origin, ref),
						refDir),
					onHover);
			});
	});
var $author$project$Components$Organisms$Relation$drawSteps = F6(
	function (conf, _v0, _v1, onHover, nullable, color) {
		var pos1 = _v0.a;
		var dir1 = _v0.b;
		var pos2 = _v1.a;
		var dir2 = _v1.b;
		var hoverAttrs = conf.bk ? _List_fromArray(
			[
				$elm$html$Html$Events$onMouseEnter(
				onHover(true)),
				$elm$html$Html$Events$onMouseLeave(
				onHover(false))
			]) : _List_Nil;
		var _v2 = _Utils_Tuple2(
			$author$project$Models$Position$extractCanvas(pos1),
			$author$project$Models$Position$extractCanvas(pos2));
		var p1 = _v2.a;
		var p2 = _v2.b;
		var break1 = function () {
			var _v5 = _Utils_Tuple3(
				_Utils_cmp(p1.C, p2.C) < 0,
				dir1,
				dir2);
			_v5$8:
			while (true) {
				if (_v5.a) {
					switch (_v5.b) {
						case 0:
							switch (_v5.c) {
								case 1:
									var _v6 = _v5.b;
									var _v7 = _v5.c;
									return A3($author$project$Components$Organisms$Relation$add, (p2.C - p1.C) / 2, dir1, p1);
								case 0:
									var _v8 = _v5.b;
									var _v9 = _v5.c;
									return A3($author$project$Components$Organisms$Relation$add, (p2.C - p1.C) + ($author$project$Components$Organisms$Relation$arrowSize * 2), dir1, p1);
								default:
									break _v5$8;
							}
						case 1:
							switch (_v5.c) {
								case 1:
									var _v10 = _v5.b;
									var _v11 = _v5.c;
									return A3($author$project$Components$Organisms$Relation$add, $author$project$Components$Organisms$Relation$arrowSize * 2, dir1, p1);
								case 0:
									var _v12 = _v5.b;
									var _v13 = _v5.c;
									return A3($author$project$Components$Organisms$Relation$add, $author$project$Components$Organisms$Relation$arrowSize * 2, dir1, p1);
								default:
									break _v5$8;
							}
						default:
							break _v5$8;
					}
				} else {
					switch (_v5.b) {
						case 0:
							switch (_v5.c) {
								case 1:
									var _v14 = _v5.b;
									var _v15 = _v5.c;
									return A3($author$project$Components$Organisms$Relation$add, $author$project$Components$Organisms$Relation$arrowSize * 2, dir1, p1);
								case 0:
									var _v16 = _v5.b;
									var _v17 = _v5.c;
									return A3($author$project$Components$Organisms$Relation$add, $author$project$Components$Organisms$Relation$arrowSize * 2, dir1, p1);
								default:
									break _v5$8;
							}
						case 1:
							switch (_v5.c) {
								case 1:
									var _v18 = _v5.b;
									var _v19 = _v5.c;
									return A3($author$project$Components$Organisms$Relation$add, (p1.C - p2.C) + ($author$project$Components$Organisms$Relation$arrowSize * 2), dir1, p1);
								case 0:
									var _v20 = _v5.b;
									var _v21 = _v5.c;
									return A3($author$project$Components$Organisms$Relation$add, (p1.C - p2.C) / 2, dir1, p1);
								default:
									break _v5$8;
							}
						default:
							break _v5$8;
					}
				}
			}
			return p1;
		}();
		var break2 = {C: break1.C, ad: p2.ad};
		var _v3 = _Utils_Tuple2(
			A2(
				$author$project$Libs$Models$Position$move,
				{
					aY: 0,
					aZ: -(($author$project$Components$Organisms$Relation$arrowSize / 2) * A3(
						$author$project$Libs$Bool$cond,
						_Utils_cmp(p1.ad, p2.ad) < 0,
						1,
						-1))
				},
				break2),
			A2(
				$author$project$Libs$Models$Position$move,
				{
					aY: -(($author$project$Components$Organisms$Relation$arrowSize / 2) * $author$project$Components$Organisms$Relation$apply(dir2)),
					aZ: 0
				},
				break2));
		var break2a = _v3.a;
		var break2b = _v3.b;
		var _v4 = _Utils_Tuple2(
			A2(
				$author$project$Libs$Models$Position$move,
				{
					aY: -(($author$project$Components$Organisms$Relation$arrowSize / 2) * $author$project$Components$Organisms$Relation$apply(dir1)),
					aZ: 0
				},
				break1),
			A2(
				$author$project$Libs$Models$Position$move,
				{
					aY: 0,
					aZ: -(($author$project$Components$Organisms$Relation$arrowSize / 2) * A3(
						$author$project$Libs$Bool$cond,
						_Utils_cmp(p1.ad, p2.ad) > 0,
						1,
						-1))
				},
				break1));
		var break1a = _v4.a;
		var break1b = _v4.b;
		var path = _List_fromArray(
			[
				$author$project$Libs$Svg$Utils$moveTo(
				A2(
					$author$project$Libs$Models$Position$move,
					{aY: 0, aZ: -($author$project$Components$Organisms$Relation$arrowSize / 2)},
					p1)),
				$author$project$Libs$Svg$Utils$lineTo(
				A3($author$project$Components$Organisms$Relation$add, $author$project$Components$Organisms$Relation$arrowSize, dir1, p1)),
				$author$project$Libs$Svg$Utils$moveTo(
				A2(
					$author$project$Libs$Models$Position$move,
					{aY: 0, aZ: $author$project$Components$Organisms$Relation$arrowSize / 2},
					p1)),
				$author$project$Libs$Svg$Utils$lineTo(
				A3($author$project$Components$Organisms$Relation$add, $author$project$Components$Organisms$Relation$arrowSize, dir1, p1)),
				$author$project$Libs$Svg$Utils$moveTo(p1),
				$author$project$Libs$Svg$Utils$lineTo(break1a),
				A3($author$project$Libs$Svg$Utils$curveTo, break1a, break1, break1b),
				$author$project$Libs$Svg$Utils$lineTo(break2a),
				A3($author$project$Libs$Svg$Utils$curveTo, break2a, break2, break2b),
				$author$project$Libs$Svg$Utils$lineTo(p2)
			]);
		return _List_fromArray(
			[
				A2(
				$elm$svg$Svg$path,
				_Utils_ap(
					_List_fromArray(
						[
							$elm$svg$Svg$Attributes$d(
							A2($elm$core$String$join, ' ', path))
						]),
					_Utils_ap(
						hoverAttrs,
						A2($author$project$Components$Organisms$Relation$lineAttrs, nullable, color))),
				_List_Nil),
				A3(
				$author$project$Libs$Svg$Utils$circle,
				A3($author$project$Components$Organisms$Relation$add, 2, dir2, p2),
				2.5,
				_List_fromArray(
					[
						$elm$svg$Svg$Attributes$class(
						A3(
							$author$project$Libs$Maybe$mapOrElse,
							function (c) {
								return $author$project$Libs$Tailwind$fill_500(c);
							},
							'fill-default-400',
							color))
					]))
			]);
	});
var $author$project$Components$Organisms$Relation$steps = F7(
	function (conf, _v0, _v1, nullable, color, label, onHover) {
		var src = _v0.a;
		var srcDir = _v0.b;
		var ref = _v1.a;
		var refDir = _v1.b;
		return A2(
			$author$project$Components$Organisms$Relation$buildSvg,
			{A: color, cn: label, nf: nullable, dC: 50, dG: ref, ht: src},
			function (origin) {
				return A4(
					$author$project$Components$Organisms$Relation$drawSteps,
					conf,
					_Utils_Tuple2(
						A2($author$project$Models$Position$moveCanvas, origin, src),
						srcDir),
					_Utils_Tuple2(
						A2($author$project$Models$Position$moveCanvas, origin, ref),
						refDir),
					onHover);
			});
	});
var $elm$svg$Svg$line = $elm$svg$Svg$trustedNode('line');
var $elm$svg$Svg$Attributes$x1 = _VirtualDom_attribute('x1');
var $elm$svg$Svg$Attributes$x2 = _VirtualDom_attribute('x2');
var $elm$svg$Svg$Attributes$y1 = _VirtualDom_attribute('y1');
var $elm$svg$Svg$Attributes$y2 = _VirtualDom_attribute('y2');
var $author$project$Components$Organisms$Relation$drawLine = F6(
	function (conf, pos1, pos2, onHover, nullable, color) {
		var _v0 = _Utils_Tuple2(
			$author$project$Models$Position$extractCanvas(pos1),
			$author$project$Models$Position$extractCanvas(pos2));
		var p1 = _v0.a;
		var p2 = _v0.b;
		return _List_fromArray(
			[
				A2(
				$elm$svg$Svg$line,
				_Utils_ap(
					_List_fromArray(
						[
							$elm$svg$Svg$Attributes$x1(
							$elm$core$String$fromFloat(p1.C)),
							$elm$svg$Svg$Attributes$y1(
							$elm$core$String$fromFloat(p1.ad)),
							$elm$svg$Svg$Attributes$x2(
							$elm$core$String$fromFloat(p2.C)),
							$elm$svg$Svg$Attributes$y2(
							$elm$core$String$fromFloat(p2.ad))
						]),
					_Utils_ap(
						A2($author$project$Components$Organisms$Relation$lineAttrs, nullable, color),
						A3(
							$author$project$Libs$Bool$cond,
							conf.bk,
							_List_fromArray(
								[
									$elm$html$Html$Events$onMouseEnter(
									onHover(true)),
									$elm$html$Html$Events$onMouseLeave(
									onHover(false))
								]),
							_List_Nil))),
				_List_Nil)
			]);
	});
var $author$project$Components$Organisms$Relation$straight = F7(
	function (conf, _v0, _v1, nullable, color, label, onHover) {
		var src = _v0.a;
		var ref = _v1.a;
		return A2(
			$author$project$Components$Organisms$Relation$buildSvg,
			{A: color, cn: label, nf: nullable, dC: 12, dG: ref, ht: src},
			function (origin) {
				return A4(
					$author$project$Components$Organisms$Relation$drawLine,
					conf,
					A2($author$project$Models$Position$moveCanvas, origin, src),
					A2($author$project$Models$Position$moveCanvas, origin, ref),
					onHover);
			});
	});
var $author$project$Components$Organisms$Relation$show = F8(
	function (style, conf, src, ref, nullable, color, label, onHover) {
		switch (style) {
			case 0:
				return A7($author$project$Components$Organisms$Relation$bezier, conf, src, ref, nullable, color, label, onHover);
			case 1:
				return A7($author$project$Components$Organisms$Relation$straight, conf, src, ref, nullable, color, label, onHover);
			default:
				return A7($author$project$Components$Organisms$Relation$steps, conf, src, ref, nullable, color, label, onHover);
		}
	});
var $author$project$Models$Area$topLeftCanvasGrid = function (area) {
	return $author$project$Models$Position$offGrid(area.e$);
};
var $author$project$Models$Area$topRightCanvasGrid = function (area) {
	return A2(
		$author$project$Models$Position$moveCanvas,
		{
			aY: $author$project$Models$Size$extractCanvas(area.ox).bB,
			aZ: 0
		},
		$author$project$Models$Position$offGrid(area.e$));
};
var $author$project$PagesComponents$Organization_$Project_$Views$Erd$Relation$viewRelation = F6(
	function (defaultSchema, style, conf, srcTable, refTable, relation) {
		var relConf = {bk: conf.bk};
		var onHover = $author$project$PagesComponents$Organization_$Project_$Models$ToggleHoverColumn(
			{bH: relation.ht.bH, aq: relation.ht.aq});
		var label = A2($author$project$PagesComponents$Organization_$Project_$Models$ErdRelation$label, defaultSchema, relation);
		var _v0 = _Utils_Tuple2(
			A2($author$project$PagesComponents$Organization_$Project_$Views$Erd$Relation$buildColumnInfo, relation.ht.bH, srcTable),
			A2($author$project$PagesComponents$Organization_$Project_$Views$Erd$Relation$buildColumnInfo, relation.dG.bH, refTable));
		var src = _v0.a;
		var ref = _v0.b;
		var color = A2($author$project$PagesComponents$Organization_$Project_$Views$Erd$Relation$getColor, src, ref);
		var _v1 = _Utils_Tuple2(src, ref);
		if (_v1.a.$ === 1) {
			if (_v1.b.$ === 1) {
				var _v2 = _v1.a;
				var _v3 = _v1.b;
				return $author$project$PagesComponents$Organization_$Project_$Views$Erd$Relation$viewEmptyRelation;
			} else {
				var _v5 = _v1.a;
				var r = _v1.b.a;
				return r.aq.cS ? $author$project$PagesComponents$Organization_$Project_$Views$Erd$Relation$viewEmptyRelation : function (refPos) {
					return A7(
						$author$project$Components$Organisms$Relation$straight,
						relConf,
						_Utils_Tuple2(
							A2(
								$author$project$Models$Position$moveCanvas,
								{aY: -20, aZ: 0},
								refPos),
							1),
						_Utils_Tuple2(refPos, 0),
						relation.ht.nf,
						color,
						label,
						onHover);
				}(
					A2(
						$author$project$Models$Position$moveCanvas,
						{
							aY: 0,
							aZ: A2($author$project$PagesComponents$Organization_$Project_$Views$Erd$Relation$deltaTop, r.l7, r.aq.cS)
						},
						$author$project$Models$Area$topLeftCanvasGrid(r.aq)));
			}
		} else {
			if (_v1.b.$ === 1) {
				var s = _v1.a.a;
				var _v4 = _v1.b;
				return s.aq.cS ? $author$project$PagesComponents$Organization_$Project_$Views$Erd$Relation$viewEmptyRelation : function (srcPos) {
					return A7(
						$author$project$Components$Organisms$Relation$straight,
						relConf,
						_Utils_Tuple2(srcPos, 1),
						_Utils_Tuple2(
							A2(
								$author$project$Models$Position$moveCanvas,
								{aY: 20, aZ: 0},
								srcPos),
							0),
						relation.ht.nf,
						color,
						label,
						onHover);
				}(
					A2(
						$author$project$Models$Position$moveCanvas,
						{
							aY: 0,
							aZ: A2($author$project$PagesComponents$Organization_$Project_$Views$Erd$Relation$deltaTop, s.l7, s.aq.cS)
						},
						$author$project$Models$Area$topRightCanvasGrid(s.aq)));
			} else {
				var s = _v1.a.a;
				var r = _v1.b.a;
				var _v6 = A2($author$project$PagesComponents$Organization_$Project_$Views$Erd$Relation$positionLeft, s.aq, r.aq);
				var _v7 = _v6.a;
				var srcX = _v7.a;
				var srcDir = _v7.b;
				var _v8 = _v6.b;
				var refX = _v8.a;
				var refDir = _v8.b;
				var _v9 = _Utils_Tuple2(
					$author$project$Models$Position$extractGrid(s.aq.e$),
					$author$project$Models$Position$extractGrid(r.aq.e$));
				var sPos = _v9.a;
				var rPos = _v9.b;
				var _v10 = _Utils_Tuple2(
					sPos.ad + A2($author$project$PagesComponents$Organization_$Project_$Views$Erd$Relation$deltaTop, s.l7, s.aq.cS),
					rPos.ad + A2($author$project$PagesComponents$Organization_$Project_$Views$Erd$Relation$deltaTop, r.l7, r.aq.cS));
				var srcY = _v10.a;
				var refY = _v10.b;
				return A8(
					$author$project$Components$Organisms$Relation$show,
					style,
					relConf,
					_Utils_Tuple2(
						$author$project$Models$Position$canvas(
							{C: srcX, ad: srcY}),
						srcDir),
					_Utils_Tuple2(
						$author$project$Models$Position$canvas(
							{C: refX, ad: refY}),
						refDir),
					relation.ht.nf,
					color,
					label,
					onHover);
			}
		}
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Erd$viewRelations = F5(
	function (conf, defaultSchema, style, tableLayouts, relations) {
		return A3(
			$elm$html$Html$Keyed$node,
			'div',
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('az-relations')
				]),
			A2(
				$elm$core$List$map,
				function (r) {
					return _Utils_Tuple2(
						r.eS,
						A7(
							$elm$html$Html$Lazy$lazy6,
							$author$project$PagesComponents$Organization_$Project_$Views$Erd$Relation$viewRelation,
							defaultSchema,
							style,
							conf,
							A3(
								$author$project$Libs$List$findBy,
								function ($) {
									return $.H;
								},
								r.ht.aq,
								tableLayouts),
							A3(
								$author$project$Libs$List$findBy,
								function ($) {
									return $.H;
								},
								r.dG.aq,
								tableLayouts),
							r));
				},
				relations));
	});
var $author$project$Libs$Models$Position$styleTransform = function (pos) {
	return A2(
		$elm$html$Html$Attributes$style,
		'transform',
		'translate(' + ($elm$core$String$fromFloat(pos.C) + ('px, ' + ($elm$core$String$fromFloat(pos.ad) + 'px)'))));
};
var $author$project$Models$Position$styleTransformCanvas = function (_v0) {
	var pos = _v0;
	return $author$project$Libs$Models$Position$styleTransform(pos);
};
var $author$project$Models$Area$styleTransformCanvas = function (area) {
	return A2(
		$elm$core$List$cons,
		$author$project$Models$Position$styleTransformCanvas(area.e$),
		$author$project$Models$Size$stylesCanvas(area.ox));
};
var $author$project$PagesComponents$Organization_$Project_$Views$Erd$viewSelectionBox = function (area) {
	return _List_fromArray(
		[
			A2(
			$elm$html$Html$div,
			_Utils_ap(
				_List_fromArray(
					[
						$author$project$Libs$Html$Attributes$css(
						_List_fromArray(
							['absolute border-2 bg-opacity-25 z-max border-teal-400 bg-teal-400']))
					]),
				$author$project$Models$Area$styleTransformCanvas(area)),
			_List_Nil)
		]);
};
var $author$project$PagesComponents$Organization_$Project_$Views$Erd$Table$argsToString = function (platform) {
	return function (cursorMode) {
		return function (defaultSchema) {
			return function (openedDropdown) {
				return function (openedPopover) {
					return function (index) {
						return function (selected) {
							return function (isHover) {
								return function (dragging) {
									return function (virtualRelation) {
										return function (useBasicTypes) {
											return A2(
												$elm$core$String$join,
												'~',
												_List_fromArray(
													[
														$author$project$Libs$Models$Platform$toString(platform),
														$author$project$PagesComponents$Organization_$Project_$Models$CursorMode$toString(cursorMode),
														defaultSchema,
														openedDropdown,
														openedPopover,
														$elm$core$String$fromInt(index),
														selected,
														A3($author$project$Libs$Bool$cond, isHover, 'Y', 'N'),
														A3($author$project$Libs$Bool$cond, dragging, 'Y', 'N'),
														A3($author$project$Libs$Bool$cond, virtualRelation, 'Y', 'N'),
														A3($author$project$Libs$Bool$cond, useBasicTypes, 'Y', 'N')
													]));
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var $author$project$PagesComponents$Organization_$Project_$Models$PopoverSet = function (a) {
	return {$: 62, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Models$ShowTables = F2(
	function (a, b) {
		return {$: 11, a: a, b: b};
	});
var $author$project$PagesComponents$Organization_$Project_$Models$ToggleHiddenColumns = function (a) {
	return {$: 23, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Models$ToggleHoverTable = F2(
	function (a, b) {
		return {$: 31, a: a, b: b};
	});
var $author$project$PagesComponents$Organization_$Project_$Models$ToggleNestedColumn = F3(
	function (a, b, c) {
		return {$: 22, a: a, b: b, c: c};
	});
var $author$project$PagesComponents$Organization_$Project_$Models$VRUpdate = F2(
	function (a, b) {
		return {$: 1, a: a, b: b};
	});
var $author$project$Components$Organisms$Table$NestedColumns = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $author$project$Models$Project$ColumnType$Array = function (a) {
	return {$: 1, a: a};
};
var $author$project$Models$Project$ColumnType$Binary = {$: 13};
var $author$project$Models$Project$ColumnType$Bool = {$: 5};
var $author$project$Models$Project$ColumnType$Date = {$: 6};
var $author$project$Models$Project$ColumnType$Float = {$: 4};
var $author$project$Models$Project$ColumnType$Instant = {$: 8};
var $author$project$Models$Project$ColumnType$Int = {$: 3};
var $author$project$Models$Project$ColumnType$Interval = {$: 9};
var $author$project$Models$Project$ColumnType$Ip = {$: 11};
var $author$project$Models$Project$ColumnType$Json = {$: 12};
var $author$project$Models$Project$ColumnType$Text = {$: 2};
var $author$project$Models$Project$ColumnType$Time = {$: 7};
var $author$project$Models$Project$ColumnType$Unknown = function (a) {
	return {$: 0, a: a};
};
var $author$project$Models$Project$ColumnType$Uuid = {$: 10};
var $author$project$Models$Project$ColumnType$parse = function (kind) {
	return A2($elm$core$String$endsWith, '[]', kind) ? $author$project$Models$Project$ColumnType$Array(
		$author$project$Models$Project$ColumnType$parse(
			A2($elm$core$String$dropRight, 2, kind))) : ((A2($author$project$Libs$Regex$matchI, '^(tiny|medium|long|ci)?text$', kind) || (A2($author$project$Libs$Regex$matchI, '^character( varying)? ?(\\(\\d+\\))?$', kind) || A2($author$project$Libs$Regex$matchI, '^n?(var)?char ?(\\([^)]+\\))?$', kind))) ? $author$project$Models$Project$ColumnType$Text : ((A2($author$project$Libs$Regex$matchI, 'integer|bit', kind) || (A2($author$project$Libs$Regex$matchI, 'number\\(\\d+(\\s*,\\s*0)?\\)', kind) || (A2($author$project$Libs$Regex$matchI, '^(small)?serial$', kind) || A2($author$project$Libs$Regex$matchI, '^(tiny|small|big)?int ?(\\(\\d+\\))?( unsigned)?$', kind)))) ? $author$project$Models$Project$ColumnType$Int : ((A2($author$project$Libs$Regex$matchI, 'double precision', kind) || (A2($author$project$Libs$Regex$matchI, 'number', kind) || A2($author$project$Libs$Regex$matchI, '^numeric ?(\\(\\d+,\\d+\\))?$', kind))) ? $author$project$Models$Project$ColumnType$Float : (A2($author$project$Libs$Regex$matchI, 'boolean', kind) ? $author$project$Models$Project$ColumnType$Bool : (A2($author$project$Libs$Regex$matchI, 'date$', kind) ? $author$project$Models$Project$ColumnType$Date : (A2($author$project$Libs$Regex$matchI, '^time ?(\\(\\d+\\))?( with(out)? time zone)?$', kind) ? $author$project$Models$Project$ColumnType$Time : ((A2($author$project$Libs$Regex$matchI, '^datetime(offset)?$', kind) || A2($author$project$Libs$Regex$matchI, '^timestamp(tz)? ?(\\(\\d+\\))?( with(out)? time zone)?$', kind)) ? $author$project$Models$Project$ColumnType$Instant : (A2($author$project$Libs$Regex$matchI, '^interval ?(\\(\\d+\\))?$', kind) ? $author$project$Models$Project$ColumnType$Interval : (A2($author$project$Libs$Regex$matchI, 'uuid', kind) ? $author$project$Models$Project$ColumnType$Uuid : ((A2($author$project$Libs$Regex$matchI, 'cidr', kind) || A2($author$project$Libs$Regex$matchI, 'inet', kind)) ? $author$project$Models$Project$ColumnType$Ip : (A2($author$project$Libs$Regex$matchI, '^jsonb?$', kind) ? $author$project$Models$Project$ColumnType$Json : (A2($author$project$Libs$Regex$matchI, 'bytea', kind) ? $author$project$Models$Project$ColumnType$Binary : $author$project$Models$Project$ColumnType$Unknown(kind)))))))))))));
};
var $author$project$Models$Project$ColumnType$toString = function (kind) {
	switch (kind.$) {
		case 0:
			var value = kind.a;
			return value;
		case 1:
			var k = kind.a;
			return $author$project$Models$Project$ColumnType$toString(k) + '[]';
		case 2:
			return 'Text';
		case 3:
			return 'Int';
		case 4:
			return 'Float';
		case 5:
			return 'Bool';
		case 6:
			return 'Date';
		case 7:
			return 'Time';
		case 8:
			return 'Instant';
		case 9:
			return 'Interval';
		case 10:
			return 'Uuid';
		case 11:
			return 'Ip';
		case 12:
			return 'Json';
		default:
			return 'Binary';
	}
};
var $author$project$Models$Project$ColumnType$asBasic = function (kind) {
	return $author$project$Models$Project$ColumnType$toString(
		$author$project$Models$Project$ColumnType$parse(kind));
};
var $author$project$PagesComponents$Organization_$Project_$Views$Erd$Table$buildColumnRelation = F2(
	function (layout, relation) {
		return {
			bH: {bH: relation.bH, aI: relation.aq.a, aq: relation.aq.b},
			nf: relation.nf,
			cE: A3(
				$author$project$Libs$Maybe$mapOrElse,
				function ($) {
					return $.fh;
				},
				false,
				A2($elm$core$Dict$get, relation.aq, layout.n$))
		};
	});
var $author$project$Libs$Ned$size = function (ned) {
	return 1 + $elm$core$Dict$size(ned.oO);
};
var $author$project$PagesComponents$Organization_$Project_$Views$Erd$Table$buildColumn = F4(
	function (useBasicTypes, notes, layout, column) {
		return {
			cQ: A2(
				$elm$core$List$map,
				function (c) {
					return {eS: c};
				},
				column.cQ),
			bd: A2(
				$elm$core$Maybe$map,
				function (_v0) {
					var cols = _v0;
					return A2(
						$author$project$Components$Organisms$Table$NestedColumns,
						$author$project$Libs$Ned$size(cols),
						A2(
							$elm$core$List$map,
							function (c) {
								return A4($author$project$PagesComponents$Organization_$Project_$Views$Erd$Table$buildColumn, useBasicTypes, notes, layout, c);
							},
							A2(
								$elm$core$List$filterMap,
								function (p) {
									return A2($author$project$Libs$Ned$get, p.eS, cols);
								},
								A3(
									$author$project$Libs$Maybe$mapOrElse,
									$author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$children,
									_List_Nil,
									A2($author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$find, column.aA, layout.M)))));
				},
				column.M),
			h4: A2(
				$elm$core$Maybe$map,
				function ($) {
					return $.fp;
				},
				column.h4),
			lf: column.ig,
			iO: A2(
				$elm$core$List$map,
				$author$project$PagesComponents$Organization_$Project_$Views$Erd$Table$buildColumnRelation(layout),
				column.iO),
			l7: column.l7,
			dg: A2(
				$elm$core$List$map,
				function (i) {
					return {eS: i};
				},
				column.dg),
			iV: column.iV,
			gi: useBasicTypes ? $author$project$Models$Project$ColumnType$asBasic(column.iX) : column.iX,
			gj: A2(
				$elm$core$Maybe$map,
				function (t) {
					var _v1 = t.a5;
					if (!_v1.$) {
						var values = _v1.a;
						return 'Enum: ' + A2($elm$core$String$join, ', ', values);
					} else {
						var definition = _v1.a;
						return 'Type: ' + definition;
					}
				},
				column.ie),
			bP: A2($author$project$Models$Project$ColumnPath$get, column.aA, notes.M),
			nf: column.nf,
			jr: A2(
				$elm$core$List$map,
				$author$project$PagesComponents$Organization_$Project_$Views$Erd$Table$buildColumnRelation(layout),
				column.jr),
			aA: column.aA,
			d5: A2(
				$elm$core$List$map,
				function (u) {
					return {eS: u};
				},
				column.d5)
		};
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Erd$Table$handleTablePointerDown = F2(
	function (htmlId, e) {
		return (e.kO === 1) ? A2($author$project$PagesComponents$Organization_$Project_$Models$DragStart, htmlId, e.h3) : ((e.kO === 2) ? A2($author$project$PagesComponents$Organization_$Project_$Models$DragStart, $author$project$Conf$ids.lE, e.h3) : $author$project$PagesComponents$Organization_$Project_$Models$Noop('No match on table pointer down'));
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Erd$Table$stringToArgs = function (args) {
	var _v0 = A2($elm$core$String$split, '~', args);
	if (((((((((((_v0.b && _v0.b.b) && _v0.b.b.b) && _v0.b.b.b.b) && _v0.b.b.b.b.b) && _v0.b.b.b.b.b.b) && _v0.b.b.b.b.b.b.b) && _v0.b.b.b.b.b.b.b.b) && _v0.b.b.b.b.b.b.b.b.b) && _v0.b.b.b.b.b.b.b.b.b.b) && _v0.b.b.b.b.b.b.b.b.b.b.b) && (!_v0.b.b.b.b.b.b.b.b.b.b.b.b)) {
		var platform = _v0.a;
		var _v1 = _v0.b;
		var cursorMode = _v1.a;
		var _v2 = _v1.b;
		var defaultSchema = _v2.a;
		var _v3 = _v2.b;
		var openedDropdown = _v3.a;
		var _v4 = _v3.b;
		var openedPopover = _v4.a;
		var _v5 = _v4.b;
		var index = _v5.a;
		var _v6 = _v5.b;
		var selected = _v6.a;
		var _v7 = _v6.b;
		var isHover = _v7.a;
		var _v8 = _v7.b;
		var dragging = _v8.a;
		var _v9 = _v8.b;
		var virtualRelation = _v9.a;
		var _v10 = _v9.b;
		var useBasicTypes = _v10.a;
		return _Utils_Tuple3(
			_Utils_Tuple3(
				$author$project$Libs$Models$Platform$fromString(platform),
				$author$project$PagesComponents$Organization_$Project_$Models$CursorMode$fromString(cursorMode),
				defaultSchema),
			_Utils_Tuple2(
				_Utils_Tuple3(
					openedDropdown,
					openedPopover,
					A2(
						$elm$core$Maybe$withDefault,
						0,
						$elm$core$String$toInt(index))),
				selected),
			_Utils_Tuple2(
				_Utils_Tuple2(isHover === 'Y', dragging === 'Y'),
				_Utils_Tuple2(virtualRelation === 'Y', useBasicTypes === 'Y')));
	} else {
		return _Utils_Tuple3(
			_Utils_Tuple3(0, 0, $author$project$Conf$schema.lC),
			_Utils_Tuple2(
				_Utils_Tuple3('', '', 0),
				''),
			_Utils_Tuple2(
				_Utils_Tuple2(false, false),
				_Utils_Tuple2(false, false)));
	}
};
var $author$project$Components$Organisms$Table$flattenColumns = function (columns) {
	return A2(
		$elm$core$List$concatMap,
		function (_v0) {
			var c = _v0.a;
			var i = _v0.b;
			return A2(
				$elm$core$List$cons,
				_Utils_Tuple2(i, c),
				A3(
					$author$project$Libs$Maybe$mapOrElse,
					function (_v1) {
						var cols = _v1.b;
						return $author$project$Components$Organisms$Table$flattenColumns(cols);
					},
					_List_Nil,
					c.bd));
		},
		$author$project$Libs$List$zipWithIndex(columns));
};
var $author$project$Components$Organisms$Table$isHighlightedColumn = F2(
	function (model, path) {
		return A2(
			$elm$core$Set$member,
			$author$project$Models$Project$ColumnPath$toString(path),
			model.h.df) || A3(
			$author$project$Libs$Maybe$mapOrElse,
			$author$project$Components$Organisms$Table$isHighlightedColumn(model),
			false,
			$author$project$Models$Project$ColumnPath$parent(path));
	});
var $author$project$Libs$Nel$length = function (nel) {
	return 1 + $elm$core$List$length(nel.oO);
};
var $author$project$Libs$Html$Events$onPointerUp = F2(
	function (platform, msg) {
		return A2(
			$elm$html$Html$Events$on,
			'pointerup',
			A2(
				$elm$json$Json$Decode$map,
				msg,
				$author$project$Libs$Html$Events$pointerDecoder(platform)));
	});
var $author$project$Libs$Tailwind$text_500 = function (_v0) {
	var color = _v0;
	return 'text-' + (color + '-500');
};
var $author$project$Components$Atoms$Icons$columns = {kY: 42, lQ: 97, l7: 188, m1: 50, m2: 48, nL: 122, o$: 103};
var $author$project$Components$Organisms$Table$showColumnRef = F2(
	function (defaultSchema, ref) {
		return (_Utils_eq(ref.aI, defaultSchema) || _Utils_eq(ref.aI, $author$project$Conf$schema.lC)) ? (ref.aq + ('.' + $author$project$Models$Project$ColumnPath$show(ref.bH))) : (ref.aI + ('.' + (ref.aq + ('.' + $author$project$Models$Project$ColumnPath$show(ref.bH)))));
	});
var $author$project$Components$Organisms$Table$viewColumnIcon = F2(
	function (model, column) {
		var tooltip = A2(
			$elm$core$String$join,
			', ',
			A2(
				$elm$core$List$filterMap,
				function (a) {
					return a;
				},
				_List_fromArray(
					[
						A2($author$project$Libs$Bool$maybe, column.iV, 'Primary key'),
						A2(
						$author$project$Libs$Bool$maybe,
						$author$project$Libs$List$nonEmpty(column.jr),
						'Foreign key to ' + A3(
							$author$project$Libs$Maybe$mapOrElse,
							A2(
								$elm$core$Basics$composeR,
								function ($) {
									return $.bH;
								},
								$author$project$Components$Organisms$Table$showColumnRef(model.cb)),
							'',
							$elm$core$List$head(column.jr))),
						A2(
						$author$project$Libs$Bool$maybe,
						$author$project$Libs$List$nonEmpty(column.d5),
						'Unique constraint for ' + A2(
							$elm$core$String$join,
							', ',
							A2(
								$elm$core$List$map,
								function ($) {
									return $.eS;
								},
								column.d5))),
						A2(
						$author$project$Libs$Bool$maybe,
						$author$project$Libs$List$nonEmpty(column.dg),
						'Indexed by ' + A2(
							$elm$core$String$join,
							', ',
							A2(
								$elm$core$List$map,
								function ($) {
									return $.eS;
								},
								column.dg))),
						A2(
						$author$project$Libs$Bool$maybe,
						$author$project$Libs$List$nonEmpty(column.cQ),
						'In checks ' + A2(
							$elm$core$String$join,
							', ',
							A2(
								$elm$core$List$map,
								function ($) {
									return $.eS;
								},
								column.cQ))),
						A2(
						$elm$core$Maybe$map,
						function (_v1) {
							var count = _v1.a;
							return 'Has ' + ($elm$core$String$fromInt(count) + ' nested columns');
						},
						column.bd)
					])));
		return $author$project$Libs$List$nonEmpty(column.jr) ? (($author$project$Libs$List$nonEmpty(
			A2(
				$elm$core$List$filter,
				function ($) {
					return $.cE;
				},
				column.jr)) || (!model.Z.aM)) ? A2(
			$elm$html$Html$div,
			_List_Nil,
			_List_fromArray(
				[
					A2(
					$author$project$Components$Molecules$Tooltip$t,
					tooltip,
					A2($author$project$Components$Atoms$Icon$solid, $author$project$Components$Atoms$Icons$columns.lQ, 'w-4 h-4'))
				])) : A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$author$project$Libs$Html$Attributes$css(
					_List_fromArray(
						[
							'cursor-pointer',
							$author$project$Libs$Tailwind$text_500(model.h.A)
						])),
					$elm$html$Html$Events$onClick(
					A2(model.fz.cx, column.jr, true))
				]),
			_List_fromArray(
				[
					A2(
					$author$project$Components$Molecules$Tooltip$t,
					tooltip,
					A2($author$project$Components$Atoms$Icon$solid, $author$project$Components$Atoms$Icons$columns.lQ, 'w-4 h-4'))
				]))) : (column.iV ? A2(
			$elm$html$Html$div,
			_List_Nil,
			_List_fromArray(
				[
					A2(
					$author$project$Components$Molecules$Tooltip$t,
					tooltip,
					A2($author$project$Components$Atoms$Icon$solid, $author$project$Components$Atoms$Icons$columns.nL, 'w-4 h-4'))
				])) : ((!_Utils_eq(column.bd, $elm$core$Maybe$Nothing)) ? (A3(
			$author$project$Libs$Maybe$mapOrElse,
			function (_v0) {
				var cols = _v0.b;
				return $elm$core$List$isEmpty(cols);
			},
			true,
			column.bd) ? A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Events$onClick(
					A2(model.fz.dp, column.aA, true)),
					$elm$html$Html$Attributes$class('cursor-pointer')
				]),
			_List_fromArray(
				[
					A2(
					$author$project$Components$Molecules$Tooltip$t,
					tooltip,
					A2($author$project$Components$Atoms$Icon$solid, $author$project$Components$Atoms$Icons$columns.m1, 'w-4 h-4'))
				])) : A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Events$onClick(
					A2(model.fz.dp, column.aA, false)),
					$elm$html$Html$Attributes$class('cursor-pointer')
				]),
			_List_fromArray(
				[
					A2(
					$author$project$Components$Molecules$Tooltip$t,
					tooltip,
					A2($author$project$Components$Atoms$Icon$solid, $author$project$Components$Atoms$Icons$columns.m2, 'w-4 h-4'))
				]))) : ($author$project$Libs$List$nonEmpty(column.d5) ? A2(
			$elm$html$Html$div,
			_List_Nil,
			_List_fromArray(
				[
					A2(
					$author$project$Components$Molecules$Tooltip$t,
					tooltip,
					A2($author$project$Components$Atoms$Icon$solid, $author$project$Components$Atoms$Icons$columns.o$, 'w-4 h-4'))
				])) : ($author$project$Libs$List$nonEmpty(column.dg) ? A2(
			$elm$html$Html$div,
			_List_Nil,
			_List_fromArray(
				[
					A2(
					$author$project$Components$Molecules$Tooltip$t,
					tooltip,
					A2($author$project$Components$Atoms$Icon$solid, $author$project$Components$Atoms$Icons$columns.l7, 'w-4 h-4'))
				])) : ($author$project$Libs$List$nonEmpty(column.cQ) ? A2(
			$elm$html$Html$div,
			_List_Nil,
			_List_fromArray(
				[
					A2(
					$author$project$Components$Molecules$Tooltip$t,
					tooltip,
					A2($author$project$Components$Atoms$Icon$solid, $author$project$Components$Atoms$Icons$columns.kY, 'w-4 h-4'))
				])) : A2(
			$elm$html$Html$div,
			_List_Nil,
			_List_fromArray(
				[
					A2($author$project$Components$Atoms$Icon$solid, 94, 'w-4 h-4')
				])))))));
	});
var $author$project$Components$Molecules$ContextMenu$BottomRight = 0;
var $author$project$Components$Molecules$ContextMenu$itemDisabledStyles = $author$project$Libs$Tailwind$batch(
	_List_fromArray(
		[
			'py-2 px-4 text-sm text-gray-400',
			$author$project$Libs$Tailwind$hover(
			_List_fromArray(
				['bg-gray-50']))
		]));
var $author$project$Components$Molecules$ContextMenu$btnDisabled = F2(
	function (styles, content) {
		return A2(
			$elm$html$Html$button,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$type_('button'),
					$author$project$Libs$Html$Attributes$role('menuitem'),
					$elm$html$Html$Attributes$tabindex(-1),
					$author$project$Libs$Html$Attributes$css(
					_List_fromArray(
						[
							'block w-full text-left',
							$author$project$Libs$Tailwind$focus(
							_List_fromArray(
								['outline-none'])),
							$author$project$Components$Molecules$ContextMenu$itemDisabledStyles,
							styles
						]))
				]),
			content);
	});
var $author$project$Libs$String$pluralizeL = F2(
	function (word, list) {
		return A2(
			$author$project$Libs$String$pluralize,
			word,
			$elm$core$List$length(list));
	});
var $author$project$Components$Organisms$Table$showTableRef = F2(
	function (defaultSchema, ref) {
		return (_Utils_eq(ref.aI, defaultSchema) || _Utils_eq(ref.aI, $author$project$Conf$schema.lC)) ? ref.aq : (ref.aI + ('.' + ref.aq));
	});
var $author$project$Components$Organisms$Table$viewColumnIconDropdownItem = F2(
	function (message, content) {
		return A2(
			$elm$html$Html$button,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$type_('button'),
					$elm$html$Html$Events$onClick(message),
					$author$project$Libs$Html$Attributes$role('menuitem'),
					$elm$html$Html$Attributes$tabindex(-1),
					$author$project$Libs$Html$Attributes$css(
					_List_fromArray(
						[
							'py-1 block w-full text-left',
							$author$project$Libs$Tailwind$focus(
							_List_fromArray(
								['outline-none'])),
							$author$project$Components$Molecules$ContextMenu$itemStyles
						]))
				]),
			content);
	});
var $author$project$Components$Organisms$Table$viewColumnIconDropdown = F3(
	function (model, column, icon) {
		var tablesToShow = A2(
			$author$project$Libs$List$filterNot,
			function ($) {
				return $.cE;
			},
			column.iO);
		var dropdownId = model.H + ('-' + ($author$project$Models$Project$ColumnPath$toString(column.aA) + '-dropdown'));
		return ($elm$core$List$isEmpty(column.iO) || (!model.Z.aM)) ? A2(
			$elm$html$Html$div,
			_List_Nil,
			_List_fromArray(
				[
					A2(
					$elm$html$Html$button,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$type_('button'),
							$elm$html$Html$Attributes$id(dropdownId),
							$author$project$Libs$Html$Attributes$css(
							_List_fromArray(
								[
									'cursor-default',
									$author$project$Libs$Tailwind$focus(
									_List_fromArray(
										['outline-none']))
								]))
						]),
					_List_fromArray(
						[icon]))
				])) : A3(
			$author$project$Components$Molecules$Dropdown$dropdown,
			{
				bg: 0,
				H: dropdownId,
				bm: _Utils_eq(model.h.jo, dropdownId)
			},
			function (m) {
				return A2(
					$elm$html$Html$button,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$type_('button'),
							$elm$html$Html$Attributes$id(m.H),
							$elm$html$Html$Events$onClick(
							model.fz.dc(m.H)),
							$author$project$Libs$Html$Attributes$ariaExpanded(m.bm),
							$author$project$Libs$Html$Attributes$ariaHaspopup('true'),
							$author$project$Libs$Html$Attributes$css(
							_List_fromArray(
								[
									A3(
									$author$project$Libs$Bool$cond,
									$elm$core$List$isEmpty(tablesToShow),
									'',
									$author$project$Libs$Tailwind$text_500(model.h.A)),
									$author$project$Libs$Tailwind$focus(
									_List_fromArray(
										['outline-none']))
								]))
						]),
					_List_fromArray(
						[icon]));
			},
			function (_v0) {
				return A2(
					$elm$html$Html$div,
					_List_Nil,
					_Utils_ap(
						A2(
							$elm$core$List$map,
							function (rels) {
								var content = _List_fromArray(
									[
										A2($author$project$Components$Atoms$Icon$solid, $author$project$Components$Atoms$Icons$columns.lQ, 'inline'),
										$author$project$Libs$Html$bText(
										A2(
											$author$project$Components$Organisms$Table$showTableRef,
											model.cb,
											{aI: rels.ev.bH.aI, aq: rels.ev.bH.aq})),
										$elm$html$Html$text(
										'.' + A2(
											$elm$core$String$join,
											', ',
											A2(
												$elm$core$List$map,
												function (r) {
													return _Utils_ap(
														$author$project$Models$Project$ColumnPath$show(r.bH.bH),
														A3($author$project$Libs$Bool$cond, r.nf, '?', ''));
												},
												$author$project$Libs$Nel$toList(rels))))
									]);
								return rels.ev.cE ? A2($author$project$Components$Molecules$ContextMenu$btnDisabled, 'py-1', content) : A2(
									$author$project$Components$Organisms$Table$viewColumnIconDropdownItem,
									A2(
										model.fz.cx,
										_List_fromArray(
											[rels.ev]),
										false),
									content);
							},
							A2(
								$elm$core$List$filterMap,
								A2(
									$elm$core$Basics$composeR,
									$elm$core$List$sortBy(
										A2(
											$elm$core$Basics$composeR,
											function ($) {
												return $.bH;
											},
											A2(
												$elm$core$Basics$composeR,
												function ($) {
													return $.bH;
												},
												$author$project$Models$Project$ColumnPath$toString))),
									$author$project$Libs$Nel$fromList),
								$elm$core$Dict$values(
									A2(
										$author$project$Libs$List$groupBy,
										function (r) {
											return r.bH.aI + ('-' + r.bH.aq);
										},
										column.iO)))),
						($elm$core$List$length(tablesToShow) > 1) ? _List_fromArray(
							[
								A2(
								$author$project$Components$Organisms$Table$viewColumnIconDropdownItem,
								A2(model.fz.cx, tablesToShow, false),
								_List_fromArray(
									[
										$elm$html$Html$text(
										'Show all (' + (A2($author$project$Libs$String$pluralizeL, 'table', tablesToShow) + ')'))
									]))
							]) : _List_Nil));
			});
	});
var $author$project$Components$Organisms$Table$viewColumnKind = F2(
	function (model, column) {
		var tooltip = $author$project$Libs$String$nonEmptyMaybe(
			A2(
				$elm$core$String$join,
				' / ',
				A2(
					$elm$core$List$filterMap,
					$elm$core$Basics$identity,
					_List_fromArray(
						[
							column.gj,
							A2(
							$elm$core$Maybe$map,
							function (_default) {
								return 'Default value: ' + _default;
							},
							column.lf)
						]))));
		var opacity = A3(
			$author$project$Libs$Bool$cond,
			A2($author$project$Components$Organisms$Table$isHighlightedColumn, model, column.aA),
			'opacity-100',
			'opacity-50');
		var value = A3(
			$author$project$Libs$Maybe$mapOrElse,
			function (content) {
				return A2(
					$author$project$Components$Molecules$Tooltip$t,
					content,
					A2(
						$elm$html$Html$span,
						_List_fromArray(
							[
								$author$project$Libs$Html$Attributes$css(
								_List_fromArray(
									['underline', opacity]))
							]),
						_List_fromArray(
							[
								$elm$html$Html$text(column.gi)
							])));
			},
			A2(
				$elm$html$Html$span,
				_List_fromArray(
					[
						$elm$html$Html$Attributes$class(opacity)
					]),
				_List_fromArray(
					[
						$elm$html$Html$text(column.gi)
					])),
			tooltip);
		var nullable = column.nf ? _List_fromArray(
			[
				A2(
				$author$project$Components$Molecules$Tooltip$t,
				'nullable',
				A2(
					$elm$html$Html$span,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class(opacity)
						]),
					_List_fromArray(
						[
							$elm$html$Html$text('?')
						])))
			]) : _List_fromArray(
			[
				A2(
				$elm$html$Html$span,
				_List_fromArray(
					[
						$elm$html$Html$Attributes$class('opacity-0')
					]),
				_List_fromArray(
					[
						$elm$html$Html$text('?')
					]))
			]);
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('ml-1')
				]),
			A2($elm$core$List$cons, value, nullable));
	});
var $author$project$Libs$List$appendOn = F3(
	function (maybe, transform, list) {
		if (!maybe.$) {
			var b = maybe.a;
			return _Utils_ap(
				list,
				_List_fromArray(
					[
						transform(b)
					]));
		} else {
			return list;
		}
	});
var $author$project$Components$Organisms$Table$buildTooltipContent = function (content) {
	var trimmed = $elm$core$String$trim(content);
	return function (show) {
		return A3(
			$author$project$Libs$Bool$cond,
			_Utils_eq(show, trimmed),
			show,
			show + '… double click to see all');
	}(
		A2(
			$elm$core$String$left,
			50,
			A2(
				$elm$core$Maybe$withDefault,
				'',
				$elm$core$List$head(
					A2($elm$core$String$split, '\n', trimmed)))));
};
var $author$project$Components$Atoms$Icons$comment = 39;
var $author$project$Components$Organisms$Table$viewComment = function (comment) {
	return A2(
		$author$project$Components$Molecules$Tooltip$t,
		$author$project$Components$Organisms$Table$buildTooltipContent(comment),
		A2($author$project$Components$Atoms$Icon$outline, $author$project$Components$Atoms$Icons$comment, 'w-4 ml-1 opacity-50'));
};
var $author$project$Components$Atoms$Icons$notes = 86;
var $author$project$Components$Organisms$Table$viewNotes = F3(
	function (model, column, notes) {
		return A2(
			$author$project$Components$Molecules$Tooltip$t,
			$author$project$Components$Organisms$Table$buildTooltipContent(notes),
			A2(
				$elm$html$Html$span,
				_Utils_ap(
					_List_fromArray(
						[
							$elm$html$Html$Attributes$classList(
							_List_fromArray(
								[
									_Utils_Tuple2('cursor-pointer', model.Z.aM)
								]))
						]),
					A3(
						$author$project$Libs$Bool$cond,
						model.Z.aM,
						_List_fromArray(
							[
								$elm$html$Html$Events$onClick(
								model.fz.eU(column))
							]),
						_List_Nil)),
				_List_fromArray(
					[
						A2($author$project$Components$Atoms$Icon$outline, $author$project$Components$Atoms$Icons$notes, 'w-4 ml-1 opacity-50')
					])));
	});
var $author$project$Components$Organisms$Table$viewColumnName = F2(
	function (model, column) {
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$author$project$Libs$Html$Attributes$css(
					_List_fromArray(
						[
							'ml-1 flex flex-grow',
							A3($author$project$Libs$Bool$cond, column.iV, 'font-bold', '')
						]))
				]),
			A3(
				$author$project$Libs$List$appendOn,
				column.bP,
				A2(
					$author$project$Components$Organisms$Table$viewNotes,
					model,
					$elm$core$Maybe$Just(column.aA)),
				A3(
					$author$project$Libs$List$appendOn,
					column.h4,
					$author$project$Components$Organisms$Table$viewComment,
					_List_fromArray(
						[
							$elm$html$Html$text(
							$author$project$Models$Project$ColumnPath$name(column.aA))
						]))));
	});
var $author$project$Components$Organisms$Table$viewColumn = F5(
	function (model, styles, isLast, nestIndex, column) {
		return A2(
			$elm$html$Html$div,
			_Utils_ap(
				_List_fromArray(
					[
						$elm$html$Html$Attributes$title(
						$author$project$Models$Project$ColumnPath$name(column.aA) + (' (' + (column.gi + (A3($author$project$Libs$Bool$cond, column.nf, '?', '') + ')')))),
						$author$project$Libs$Html$Attributes$css(
						_List_fromArray(
							[
								'h-6 flex items-center align-middle whitespace-nowrap relative',
								styles,
								A3(
								$author$project$Libs$Bool$cond,
								A2($author$project$Components$Organisms$Table$isHighlightedColumn, model, column.aA),
								$author$project$Libs$Tailwind$batch(
									_List_fromArray(
										[
											$author$project$Libs$Tailwind$text_500(model.h.A),
											$author$project$Libs$Tailwind$bg_50(model.h.A)
										])),
								'text-default-500 bg-white'),
								A3($author$project$Libs$Bool$cond, isLast, 'rounded-b-lg', '')
							])),
						A2(
						$elm$html$Html$Attributes$style,
						'padding-left',
						$elm$core$String$fromInt(
							A3(
								$author$project$Libs$Maybe$mapOrElse,
								$author$project$Libs$Nel$length,
								0,
								$author$project$Models$Project$ColumnPath$parent(column.aA))) + '.5rem'),
						A2($elm$html$Html$Attributes$style, 'padding-right', '0.5rem')
					]),
				_Utils_ap(
					A3(
						$author$project$Libs$Bool$cond,
						model.Z.bk,
						_List_fromArray(
							[
								$elm$html$Html$Events$onMouseEnter(
								A2(model.fz.cU, column.aA, true)),
								$elm$html$Html$Events$onMouseLeave(
								A2(model.fz.cU, column.aA, false))
							]),
						_List_Nil),
					_Utils_ap(
						A3(
							$author$project$Libs$Bool$cond,
							model.Z.aM,
							_List_fromArray(
								[
									$author$project$Libs$Html$Events$stopDoubleClick(
									model.fz.ei(column.aA)),
									A2(
									$author$project$Libs$Html$Events$onContextMenu,
									model.e_,
									A2(model.fz.ej, nestIndex, column.aA))
								]),
							_List_Nil),
						A3(
							$author$project$Libs$Maybe$mapOrElse,
							function (action) {
								return _List_fromArray(
									[
										A2(
										$author$project$Libs$Html$Events$onPointerUp,
										model.e_,
										action(column.aA))
									]);
							},
							_List_Nil,
							model.fz.eh)))),
			_List_fromArray(
				[
					A3(
					$author$project$Components$Organisms$Table$viewColumnIconDropdown,
					model,
					column,
					A2($author$project$Components$Organisms$Table$viewColumnIcon, model, column)),
					A2($author$project$Components$Organisms$Table$viewColumnName, model, column),
					A2($author$project$Components$Organisms$Table$viewColumnKind, model, column)
				]));
	});
var $author$project$Components$Organisms$Table$viewColumns = function (model) {
	var columns = $author$project$Components$Organisms$Table$flattenColumns(model.M);
	var count = $elm$core$List$length(columns) + $elm$core$List$length(model.ay);
	return A3(
		$elm$html$Html$Keyed$node,
		'div',
		_List_Nil,
		A2(
			$elm$core$List$indexedMap,
			F2(
				function (index, _v0) {
					var i = _v0.a;
					var c = _v0.b;
					return _Utils_Tuple2(
						$author$project$Models$Project$ColumnPath$toString(c.aA),
						A6(
							$elm$html$Html$Lazy$lazy5,
							$author$project$Components$Organisms$Table$viewColumn,
							model,
							'',
							_Utils_eq(index + 1, count),
							i,
							c));
				}),
			columns));
};
var $author$project$Components$Molecules$ContextMenu$BottomLeft = 1;
var $author$project$Components$Organisms$Table$viewHeader = function (model) {
	var headerTextSize = (model.hU < 0.5) ? _List_Nil : _List_Nil;
	var dropdownId = model.H + '-dropdown';
	return A2(
		$elm$html$Html$div,
		_List_fromArray(
			[
				$elm$html$Html$Attributes$title(model.cn),
				$author$project$Libs$Html$Attributes$css(
				_List_fromArray(
					[
						'flex items-center justify-items-center px-3 py-1 border-t-8 border-b border-b-default-200',
						(model.h.cS || ($elm$core$List$isEmpty(model.M) && $elm$core$List$isEmpty(model.ay))) ? 'rounded-lg' : 'rounded-t-lg',
						$author$project$Libs$Tailwind$border_500(model.h.A),
						$author$project$Libs$Tailwind$bg_50(
						A3($author$project$Libs$Bool$cond, model.h.bN, model.h.A, $author$project$Libs$Tailwind$default))
					]))
			]),
		_List_fromArray(
			[
				A2(
				$elm$html$Html$div,
				_Utils_ap(
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('flex-grow text-center whitespace-nowrap')
						]),
					_Utils_ap(
						A3(
							$author$project$Libs$Bool$cond,
							model.Z.fe,
							_List_fromArray(
								[
									A2($author$project$Libs$Html$Events$onPointerUp, model.e_, model.fz.ew)
								]),
							_List_Nil),
						A3(
							$author$project$Libs$Bool$cond,
							model.Z.aM,
							_List_fromArray(
								[
									$author$project$Libs$Html$Events$stopDoubleClick(model.fz.ex),
									A2($author$project$Libs$Html$Events$onContextMenu, model.e_, model.fz.ey)
								]),
							_List_Nil))),
				A3(
					$author$project$Libs$List$appendOn,
					model.bP,
					A2($author$project$Components$Organisms$Table$viewNotes, model, $elm$core$Maybe$Nothing),
					A3(
						$author$project$Libs$List$appendOn,
						model.h4,
						$author$project$Components$Organisms$Table$viewComment,
						_List_fromArray(
							[
								model.eH ? A2(
								$author$project$Components$Molecules$Tooltip$t,
								'This is a view',
								A2(
									$elm$html$Html$span,
									_Utils_ap(
										_List_fromArray(
											[
												$elm$html$Html$Attributes$class('text-xl italic underline decoration-dotted')
											]),
										headerTextSize),
									_List_fromArray(
										[
											$elm$html$Html$text(model.cn)
										]))) : A2(
								$elm$html$Html$span,
								_Utils_ap(
									_List_fromArray(
										[
											$elm$html$Html$Attributes$class('text-xl')
										]),
									headerTextSize),
								_List_fromArray(
									[
										$elm$html$Html$text(model.cn)
									]))
							])))),
				A3(
				$author$project$Libs$Maybe$mapOrElse,
				function (dropdownContent) {
					return A3(
						$author$project$Components$Molecules$Dropdown$dropdown,
						{
							bg: 1,
							H: dropdownId,
							bm: _Utils_eq(model.h.jo, dropdownId)
						},
						function (m) {
							return A2(
								$elm$html$Html$button,
								_List_fromArray(
									[
										$elm$html$Html$Attributes$type_('button'),
										$elm$html$Html$Attributes$id(m.H),
										$elm$html$Html$Events$onClick(
										model.fz.dc(m.H)),
										$author$project$Libs$Html$Attributes$ariaExpanded(m.bm),
										$author$project$Libs$Html$Attributes$ariaHaspopup('true'),
										$author$project$Libs$Html$Attributes$css(
										_List_fromArray(
											[
												'flex text-sm opacity-25',
												$author$project$Libs$Tailwind$focus(
												_List_fromArray(
													['outline-none']))
											]))
									]),
								_List_fromArray(
									[
										A2(
										$elm$html$Html$span,
										_List_fromArray(
											[
												$elm$html$Html$Attributes$class('sr-only')
											]),
										_List_fromArray(
											[
												$elm$html$Html$text('Open table settings')
											])),
										A2($author$project$Components$Atoms$Icon$solid, 89, '')
									]));
						},
						function (_v0) {
							return dropdownContent;
						});
				},
				$author$project$Libs$Html$none,
				model.fU)
			]));
};
var $author$project$Components$Molecules$Popover$popover = F4(
	function (bubble, content, isOpen, item) {
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('relative inline-flex flex-col w-full')
				]),
			_List_fromArray(
				[
					item,
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$author$project$Libs$Html$Attributes$css(
							_List_fromArray(
								[
									'absolute flex-col z-max',
									bubble,
									A3($author$project$Libs$Bool$cond, isOpen, 'flex', 'hidden')
								]))
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('relative leading-none')
								]),
							_List_fromArray(
								[content]))
						]))
				]));
	});
var $author$project$Components$Molecules$Popover$r = $author$project$Components$Molecules$Popover$popover('left-full ml-3 top-1/2 transform -translate-y-2/4');
var $author$project$Components$Organisms$Table$viewHiddenColumns = function (model) {
	if ($elm$core$List$isEmpty(model.ay)) {
		return A2($elm$html$Html$div, _List_Nil, _List_Nil);
	} else {
		var popoverId = model.H;
		var showPopover = _Utils_eq(model.h.eX, popoverId) && (!model.h.bx);
		var popover = showPopover ? A3(
			$elm$html$Html$Keyed$node,
			'div',
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('py-2 rounded-lg bg-white shadow-md')
				]),
			A2(
				$elm$core$List$indexedMap,
				F2(
					function (i, c) {
						return _Utils_Tuple2(
							$author$project$Models$Project$ColumnPath$toString(c.aA),
							A6($elm$html$Html$Lazy$lazy5, $author$project$Components$Organisms$Table$viewColumn, model, '', false, i, c));
					}),
				model.ay)) : A2($elm$html$Html$div, _List_Nil, _List_Nil);
		var label = A2($author$project$Libs$String$pluralizeL, 'more column', model.ay);
		var hiddenColumns = model.h.bx ? A2(
			$elm$core$List$indexedMap,
			F2(
				function (i, c) {
					return _Utils_Tuple2(
						$author$project$Models$Project$ColumnPath$toString(c.aA),
						A6(
							$elm$html$Html$Lazy$lazy5,
							$author$project$Components$Organisms$Table$viewColumn,
							model,
							'opacity-50',
							_Utils_eq(
								i,
								$elm$core$List$length(model.ay) - 1),
							i,
							c));
				}),
			model.ay) : _List_Nil;
		return A3(
			$elm$html$Html$Keyed$node,
			'div',
			_List_Nil,
			A2(
				$elm$core$List$cons,
				_Utils_Tuple2(
					label,
					A3(
						$author$project$Components$Molecules$Popover$r,
						popover,
						showPopover,
						A2(
							$elm$html$Html$div,
							_Utils_ap(
								_List_fromArray(
									[
										$elm$html$Html$Attributes$title(label),
										$elm$html$Html$Attributes$class('h-6 pl-7 pr-2 whitespace-nowrap text-default-500 opacity-50 hover:opacity-100'),
										$elm$html$Html$Attributes$classList(
										_List_fromArray(
											[
												_Utils_Tuple2('cursor-pointer', model.Z.aM)
											]))
									]),
								_Utils_ap(
									A3(
										$author$project$Libs$Bool$cond,
										model.Z.bk,
										_List_fromArray(
											[
												$elm$html$Html$Events$onMouseEnter(
												A2(model.fz.de, popoverId, true)),
												$elm$html$Html$Events$onMouseLeave(
												A2(model.fz.de, popoverId, false))
											]),
										_List_Nil),
									A3(
										$author$project$Libs$Bool$cond,
										model.Z.aM,
										_List_fromArray(
											[
												$elm$html$Html$Events$onClick(model.fz.ez)
											]),
										_List_Nil))),
							_List_fromArray(
								[
									$elm$html$Html$text('... ' + label)
								])))),
				hiddenColumns));
	}
};
var $author$project$Components$Organisms$Table$table = function (model) {
	return A2(
		$elm$html$Html$div,
		_Utils_ap(
			_List_fromArray(
				[
					$elm$html$Html$Attributes$id(model.H),
					$author$project$Libs$Html$Attributes$css(
					_List_fromArray(
						[
							'inline-block bg-white rounded-lg',
							A3($author$project$Libs$Bool$cond, model.h.bN, 'shadow-lg', 'shadow-md'),
							A3(
							$author$project$Libs$Bool$cond,
							model.h.cy,
							'ring-4 ' + $author$project$Libs$Tailwind$ring_500(model.h.A),
							''),
							A3($author$project$Libs$Bool$cond, model.h.ep, 'cursor-move', '')
						]))
				]),
			A3(
				$author$project$Libs$Bool$cond,
				model.Z.bk,
				_List_fromArray(
					[
						$elm$html$Html$Events$onMouseEnter(
						model.fz.bk(true)),
						$elm$html$Html$Events$onMouseLeave(
						model.fz.bk(false))
					]),
				_List_Nil)),
		_List_fromArray(
			[
				A2($elm$html$Html$Lazy$lazy, $author$project$Components$Organisms$Table$viewHeader, model),
				model.h.cS ? A2($elm$html$Html$div, _List_Nil, _List_Nil) : A2(
				$elm$html$Html$div,
				_List_Nil,
				_List_fromArray(
					[
						A2($elm$html$Html$Lazy$lazy, $author$project$Components$Organisms$Table$viewColumns, model),
						A2($elm$html$Html$Lazy$lazy, $author$project$Components$Organisms$Table$viewHiddenColumns, model)
					]))
			]));
};
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$ColumnContextMenu$view = F4(
	function (platform, index, column, notes) {
		return A2(
			$elm$html$Html$div,
			_List_Nil,
			_List_fromArray(
				[
					A3(
					$author$project$Components$Molecules$ContextMenu$btn,
					'',
					$author$project$PagesComponents$Organization_$Project_$Models$DetailsSidebarMsg(
						$author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$ShowColumn(column)),
					_List_fromArray(
						[
							$elm$html$Html$text('Show details')
						])),
					A5(
					$author$project$Components$Molecules$ContextMenu$btnHotkey,
					'',
					$author$project$PagesComponents$Organization_$Project_$Models$HideColumn(column),
					_List_fromArray(
						[
							$elm$html$Html$text('Hide column')
						]),
					platform,
					A3($author$project$Libs$Dict$getOrElse, 'hide', _List_Nil, $author$project$Conf$hotkeys)),
					A5(
					$author$project$Components$Molecules$ContextMenu$btnHotkey,
					'',
					$author$project$PagesComponents$Organization_$Project_$Models$NotesMsg(
						$author$project$PagesComponents$Organization_$Project_$Models$NotesMsg$NOpen(
							$author$project$PagesComponents$Organization_$Project_$Models$Notes$fromColumn(column))),
					_List_fromArray(
						[
							$elm$html$Html$text(
							A3(
								$author$project$Libs$Maybe$mapOrElse,
								function (_v0) {
									return 'Update notes';
								},
								'Add notes',
								notes))
						]),
					platform,
					A3($author$project$Libs$Dict$getOrElse, 'notes', _List_Nil, $author$project$Conf$hotkeys)),
					A5(
					$author$project$Components$Molecules$ContextMenu$btnHotkey,
					'',
					$author$project$PagesComponents$Organization_$Project_$Models$VirtualRelationMsg(
						$author$project$PagesComponents$Organization_$Project_$Models$VRCreate(
							$elm$core$Maybe$Just(column))),
					_List_fromArray(
						[
							$elm$html$Html$text('Add relation')
						]),
					platform,
					A3($author$project$Libs$Dict$getOrElse, 'create-virtual-relation', _List_Nil, $author$project$Conf$hotkeys)),
					A3(
					$author$project$Components$Molecules$ContextMenu$btn,
					'',
					A2($author$project$PagesComponents$Organization_$Project_$Models$MoveColumn, column, index - 1),
					_List_fromArray(
						[
							$elm$html$Html$text('Move up')
						])),
					A3(
					$author$project$Components$Molecules$ContextMenu$btn,
					'',
					A2($author$project$PagesComponents$Organization_$Project_$Models$MoveColumn, column, index + 1),
					_List_fromArray(
						[
							$elm$html$Html$text('Move down')
						])),
					A3(
					$author$project$Components$Molecules$ContextMenu$btn,
					'',
					A2($author$project$PagesComponents$Organization_$Project_$Models$MoveColumn, column, 0),
					_List_fromArray(
						[
							$elm$html$Html$text('Move top')
						])),
					A3(
					$author$project$Components$Molecules$ContextMenu$btn,
					'',
					A2($author$project$PagesComponents$Organization_$Project_$Models$MoveColumn, column, 100),
					_List_fromArray(
						[
							$elm$html$Html$text('Move bottom')
						]))
				]));
	});
var $author$project$PagesComponents$Organization_$Project_$Models$HideColumns$All = 0;
var $author$project$PagesComponents$Organization_$Project_$Models$ShowColumns$All = {$: 0};
var $author$project$PagesComponents$Organization_$Project_$Models$HideColumns = F2(
	function (a, b) {
		return {$: 20, a: a, b: b};
	});
var $author$project$PagesComponents$Organization_$Project_$Models$HideColumns$Nullable = 1;
var $author$project$PagesComponents$Organization_$Project_$Models$HideColumns$Regular = 2;
var $author$project$PagesComponents$Organization_$Project_$Models$HideColumns$Relations = 3;
var $author$project$PagesComponents$Organization_$Project_$Models$ShowColumns$Relations = {$: 1};
var $author$project$PagesComponents$Organization_$Project_$Models$SortColumns = F2(
	function (a, b) {
		return {$: 21, a: a, b: b};
	});
var $author$project$Components$Molecules$ContextMenu$SubMenu = function (a) {
	return {$: 1, a: a};
};
var $author$project$Models$ColumnOrder$all = _List_fromArray(
	[1, 2, 0, 3]);
var $author$project$Models$ColumnOrder$show = function (order) {
	switch (order) {
		case 0:
			return 'By SQL order';
		case 1:
			return 'By property';
		case 2:
			return 'By name';
		default:
			return 'By type';
	}
};
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$TableContextMenu$view = F6(
	function (platform, conf, index, table, layout, notes) {
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('z-max')
				]),
			A2(
				$elm$core$List$map,
				$author$project$Components$Molecules$ContextMenu$btnSubmenu,
				A2(
					$elm$core$List$filterMap,
					$elm$core$Basics$identity,
					_List_fromArray(
						[
							A2(
							$author$project$Libs$Maybe$when,
							conf.aM,
							{
								b1: $author$project$Components$Molecules$ContextMenu$Simple(
									{
										b1: $author$project$PagesComponents$Organization_$Project_$Models$DetailsSidebarMsg(
											$author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$ShowTable(table.H)),
										eB: _List_Nil,
										e_: platform
									}),
								cn: 'Show details'
							}),
							A2(
							$author$project$Libs$Maybe$when,
							conf.aM,
							{
								b1: $author$project$Components$Molecules$ContextMenu$Simple(
									{
										b1: $author$project$PagesComponents$Organization_$Project_$Models$HideTable(table.H),
										eB: A3($author$project$Libs$Dict$getOrElse, 'hide', _List_Nil, $author$project$Conf$hotkeys),
										e_: platform
									}),
								cn: A3($author$project$Libs$Bool$cond, layout.nU.cy, 'Hide selected tables', 'Hide table')
							}),
							A2(
							$author$project$Libs$Maybe$when,
							conf.aM,
							{
								b1: $author$project$Components$Molecules$ContextMenu$Simple(
									{
										b1: $author$project$PagesComponents$Organization_$Project_$Models$NotesMsg(
											$author$project$PagesComponents$Organization_$Project_$Models$NotesMsg$NOpen(
												$author$project$PagesComponents$Organization_$Project_$Models$Notes$fromTable(table.H))),
										eB: A3($author$project$Libs$Dict$getOrElse, 'notes', _List_Nil, $author$project$Conf$hotkeys),
										e_: platform
									}),
								cn: A3(
									$author$project$Libs$Maybe$mapOrElse,
									function (_v0) {
										return 'Update notes';
									},
									'Add notes',
									notes)
							}),
							A2(
							$author$project$Libs$Maybe$when,
							conf.aM,
							{
								b1: $author$project$Components$Molecules$ContextMenu$Custom(
									$author$project$Components$Organisms$ColorPicker$view(
										$author$project$PagesComponents$Organization_$Project_$Models$TableColor(table.H))),
								cn: A3($author$project$Libs$Bool$cond, layout.nU.cy, 'Set color of selected tables', 'Set color')
							}),
							A2(
							$author$project$Libs$Maybe$when,
							conf.aM,
							{
								b1: $author$project$Components$Molecules$ContextMenu$SubMenu(
									A2(
										$elm$core$List$map,
										function (o) {
											return {
												b1: A2($author$project$PagesComponents$Organization_$Project_$Models$SortColumns, table.H, o),
												eB: _List_Nil,
												cn: $author$project$Models$ColumnOrder$show(o),
												e_: platform
											};
										},
										$author$project$Models$ColumnOrder$all)),
								cn: A3($author$project$Libs$Bool$cond, layout.nU.cy, 'Sort columns of selected tables', 'Sort columns')
							}),
							A2(
							$author$project$Libs$Maybe$when,
							conf.aM,
							{
								b1: $author$project$Components$Molecules$ContextMenu$SubMenu(
									_List_fromArray(
										[
											{
											b1: A2($author$project$PagesComponents$Organization_$Project_$Models$HideColumns, table.H, 3),
											eB: _List_Nil,
											cn: 'Without relation',
											e_: platform
										},
											{
											b1: A2($author$project$PagesComponents$Organization_$Project_$Models$HideColumns, table.H, 2),
											eB: _List_Nil,
											cn: 'Regular ones',
											e_: platform
										},
											{
											b1: A2($author$project$PagesComponents$Organization_$Project_$Models$HideColumns, table.H, 1),
											eB: _List_Nil,
											cn: 'Nullable ones',
											e_: platform
										},
											{
											b1: A2($author$project$PagesComponents$Organization_$Project_$Models$HideColumns, table.H, 0),
											eB: _List_Nil,
											cn: 'All',
											e_: platform
										}
										])),
								cn: A3($author$project$Libs$Bool$cond, layout.nU.cy, 'Hide columns of selected tables', 'Hide columns')
							}),
							A2(
							$author$project$Libs$Maybe$when,
							conf.aM,
							{
								b1: $author$project$Components$Molecules$ContextMenu$SubMenu(
									_List_fromArray(
										[
											{
											b1: A2($author$project$PagesComponents$Organization_$Project_$Models$ShowColumns, table.H, $author$project$PagesComponents$Organization_$Project_$Models$ShowColumns$Relations),
											eB: _List_Nil,
											cn: 'With relations',
											e_: platform
										},
											{
											b1: A2($author$project$PagesComponents$Organization_$Project_$Models$ShowColumns, table.H, $author$project$PagesComponents$Organization_$Project_$Models$ShowColumns$All),
											eB: _List_Nil,
											cn: 'All',
											e_: platform
										}
										])),
								cn: A3($author$project$Libs$Bool$cond, layout.nU.cy, 'Show columns of selected tables', 'Show columns')
							}),
							A2(
							$author$project$Libs$Maybe$when,
							conf.aM,
							{
								b1: $author$project$Components$Molecules$ContextMenu$SubMenu(
									_List_fromArray(
										[
											{
											b1: A2($author$project$PagesComponents$Organization_$Project_$Models$TableOrder, table.H, index + 1),
											eB: A3($author$project$Libs$Dict$getOrElse, 'move-forward', _List_Nil, $author$project$Conf$hotkeys),
											cn: 'Bring forward',
											e_: platform
										},
											{
											b1: A2($author$project$PagesComponents$Organization_$Project_$Models$TableOrder, table.H, index - 1),
											eB: A3($author$project$Libs$Dict$getOrElse, 'move-backward', _List_Nil, $author$project$Conf$hotkeys),
											cn: 'Send backward',
											e_: platform
										},
											{
											b1: A2($author$project$PagesComponents$Organization_$Project_$Models$TableOrder, table.H, 1000),
											eB: A3($author$project$Libs$Dict$getOrElse, 'move-to-top', _List_Nil, $author$project$Conf$hotkeys),
											cn: 'Bring to front',
											e_: platform
										},
											{
											b1: A2($author$project$PagesComponents$Organization_$Project_$Models$TableOrder, table.H, 0),
											eB: A3($author$project$Libs$Dict$getOrElse, 'move-to-back', _List_Nil, $author$project$Conf$hotkeys),
											cn: 'Send to back',
											e_: platform
										}
										])),
								cn: 'Table order'
							}),
							A2(
							$author$project$Libs$Maybe$when,
							conf.aM,
							{
								b1: $author$project$Components$Molecules$ContextMenu$Simple(
									{
										b1: $author$project$PagesComponents$Organization_$Project_$Models$ToggleColumns(table.H),
										eB: A3($author$project$Libs$Dict$getOrElse, 'collapse', _List_Nil, $author$project$Conf$hotkeys),
										e_: platform
									}),
								cn: layout.nU.cS ? A3($author$project$Libs$Bool$cond, layout.nU.cy, 'Expand selected tables', 'Expand table') : A3($author$project$Libs$Bool$cond, layout.nU.cy, 'Collapse selected tables', 'Collapse table')
							}),
							A2(
							$author$project$Libs$Maybe$when,
							conf.aM,
							{
								b1: $author$project$Components$Molecules$ContextMenu$Simple(
									{
										b1: $author$project$PagesComponents$Organization_$Project_$Models$ShowRelatedTables(table.H),
										eB: A3($author$project$Libs$Dict$getOrElse, 'expand', _List_Nil, $author$project$Conf$hotkeys),
										e_: platform
									}),
								cn: 'Show related'
							}),
							A2(
							$author$project$Libs$Maybe$when,
							conf.aM,
							{
								b1: $author$project$Components$Molecules$ContextMenu$Simple(
									{
										b1: $author$project$PagesComponents$Organization_$Project_$Models$HideRelatedTables(table.H),
										eB: A3($author$project$Libs$Dict$getOrElse, 'shrink', _List_Nil, $author$project$Conf$hotkeys),
										e_: platform
									}),
								cn: 'Hide related'
							}),
							A2(
							$author$project$Libs$Maybe$when,
							conf.c8,
							{
								b1: $author$project$Components$Molecules$ContextMenu$Simple(
									{
										b1: $author$project$PagesComponents$Organization_$Project_$Models$FindPathMsg(
											A2(
												$author$project$PagesComponents$Organization_$Project_$Models$FPOpen,
												$elm$core$Maybe$Just(table.H),
												$elm$core$Maybe$Nothing)),
										eB: _List_Nil,
										e_: platform
									}),
								cn: 'Find path from this table'
							})
						]))));
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$ColumnContextMenu$viewHidden = F4(
	function (platform, _v0, column, _v1) {
		return A2(
			$elm$html$Html$div,
			_List_Nil,
			_List_fromArray(
				[
					A5(
					$author$project$Components$Molecules$ContextMenu$btnHotkey,
					'',
					$author$project$PagesComponents$Organization_$Project_$Models$ShowColumn(column),
					_List_fromArray(
						[
							$elm$html$Html$text('Show column')
						]),
					platform,
					A3($author$project$Libs$Dict$getOrElse, 'show', _List_Nil, $author$project$Conf$hotkeys))
				]));
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Erd$Table$viewTable = F6(
	function (conf, zoom, args, notes, layout, table) {
		var _v0 = $author$project$PagesComponents$Organization_$Project_$Views$Erd$Table$stringToArgs(args);
		var _v1 = _v0.a;
		var platform = _v1.a;
		var cursorMode = _v1.b;
		var defaultSchema = _v1.c;
		var _v2 = _v0.b;
		var _v3 = _v2.a;
		var openedDropdown = _v3.a;
		var openedPopover = _v3.b;
		var index = _v3.c;
		var selected = _v2.b;
		var _v4 = _v0.c;
		var _v5 = _v4.a;
		var isHover = _v5.a;
		var dragging = _v5.b;
		var _v6 = _v4.b;
		var virtualRelation = _v6.a;
		var useBasicTypes = _v6.b;
		var drag = A3(
			$author$project$Libs$Bool$cond,
			(!cursorMode) || (!conf.jb),
			_List_Nil,
			_List_fromArray(
				[
					A2(
					$author$project$Libs$Html$Events$stopPointerDown,
					platform,
					$author$project$PagesComponents$Organization_$Project_$Views$Erd$Table$handleTablePointerDown(table.iL))
				]));
		var dropdown = A6($author$project$PagesComponents$Organization_$Project_$Views$Modals$TableContextMenu$view, platform, conf, index, table, layout, notes.aq);
		var _v7 = function () {
			var _v8 = A2($elm$core$String$split, '.', selected);
			_v8$2:
			while (true) {
				if (_v8.b && _v8.b.b) {
					if (_v8.b.b.b) {
						if (!_v8.b.b.b.b) {
							var schemaName = _v8.a;
							var _v9 = _v8.b;
							var tableName = _v9.a;
							var _v10 = _v9.b;
							var columnPathStr = _v10.a;
							return A3(
								$author$project$Libs$Bool$cond,
								_Utils_eq(schemaName, table.aI) && _Utils_eq(tableName, table.eS),
								_Utils_Tuple2(
									true,
									_List_fromArray(
										[
											$author$project$Models$Project$ColumnPath$fromString(columnPathStr)
										])),
								_Utils_Tuple2(false, _List_Nil));
						} else {
							break _v8$2;
						}
					} else {
						var schemaName = _v8.a;
						var _v11 = _v8.b;
						var tableName = _v11.a;
						return A3(
							$author$project$Libs$Bool$cond,
							_Utils_eq(schemaName, table.aI) && _Utils_eq(tableName, table.eS),
							_Utils_Tuple2(true, _List_Nil),
							_Utils_Tuple2(false, _List_Nil));
					}
				} else {
					break _v8$2;
				}
			}
			return _Utils_Tuple2(false, _List_Nil);
		}();
		var selectedTable = _v7.a;
		var selectedColumn = _v7.b;
		var _v12 = A2(
			$elm$core$List$partition,
			function (c) {
				return A2($author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$member, c.aA, layout.M);
			},
			A2(
				$elm$core$List$map,
				function (c) {
					return A4($author$project$PagesComponents$Organization_$Project_$Views$Erd$Table$buildColumn, useBasicTypes, notes, layout, c);
				},
				$elm$core$Dict$values(table.M)));
		var columns = _v12.a;
		var hiddenColumns = _v12.b;
		return A2(
			$elm$html$Html$div,
			_Utils_ap(
				_List_fromArray(
					[
						$author$project$Libs$Html$Attributes$css(
						_List_fromArray(
							['select-none absolute'])),
						$elm$html$Html$Attributes$classList(
						_List_fromArray(
							[
								_Utils_Tuple2('z-max', layout.nU.cy),
								_Utils_Tuple2(
								'invisible',
								_Utils_eq(layout.nU.ox, $author$project$Models$Size$zeroCanvas))
							]))
					]),
				_Utils_ap(
					$author$project$Models$Position$stylesGrid(layout.nU.e$),
					drag)),
			_List_fromArray(
				[
					$author$project$Components$Organisms$Table$table(
					{
						fz: {
							eh: A2(
								$author$project$Libs$Bool$maybe,
								virtualRelation,
								F2(
									function (col, e) {
										return $author$project$PagesComponents$Organization_$Project_$Models$VirtualRelationMsg(
											A2(
												$author$project$PagesComponents$Organization_$Project_$Models$VRUpdate,
												{bH: col, aq: table.H},
												e.h3));
									})),
							ei: function (col) {
								return $author$project$PagesComponents$Organization_$Project_$Models$DetailsSidebarMsg(
									$author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$ShowColumn(
										{bH: col, aq: table.H}));
							},
							cU: F2(
								function (col, on) {
									return A2(
										$author$project$PagesComponents$Organization_$Project_$Models$ToggleHoverColumn,
										{bH: col, aq: table.H},
										on);
								}),
							ej: F2(
								function (i, col) {
									return $author$project$PagesComponents$Organization_$Project_$Models$ContextMenuCreate(
										A7(
											$author$project$Libs$Bool$cond,
											A2($author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$member, col, layout.M),
											$author$project$PagesComponents$Organization_$Project_$Views$Modals$ColumnContextMenu$view,
											$author$project$PagesComponents$Organization_$Project_$Views$Modals$ColumnContextMenu$viewHidden,
											platform,
											i,
											{bH: col, aq: table.H},
											A2($author$project$Models$Project$ColumnPath$get, col, notes.M)));
								}),
							ew: function (e) {
								return A3(
									$author$project$Libs$Bool$cond,
									e.kO === 1,
									A2($author$project$PagesComponents$Organization_$Project_$Models$SelectTable, table.H, e.at || e.hp),
									$author$project$PagesComponents$Organization_$Project_$Models$Noop('non-main-button-table-header-click'));
							},
							ex: $author$project$PagesComponents$Organization_$Project_$Models$DetailsSidebarMsg(
								$author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$ShowTable(table.H)),
							dc: $author$project$PagesComponents$Organization_$Project_$Models$DropdownToggle,
							ey: $author$project$PagesComponents$Organization_$Project_$Models$ContextMenuCreate(dropdown),
							ez: $author$project$PagesComponents$Organization_$Project_$Models$ToggleHiddenColumns(table.H),
							de: F2(
								function (id, on) {
									return $author$project$PagesComponents$Organization_$Project_$Models$PopoverSet(
										A3($author$project$Libs$Bool$cond, on, id, ''));
								}),
							bk: $author$project$PagesComponents$Organization_$Project_$Models$ToggleHoverTable(table.H),
							dp: $author$project$PagesComponents$Organization_$Project_$Models$ToggleNestedColumn(table.H),
							eU: function (col) {
								return $author$project$PagesComponents$Organization_$Project_$Models$NotesMsg(
									$author$project$PagesComponents$Organization_$Project_$Models$NotesMsg$NOpen(
										A3(
											$author$project$Libs$Maybe$mapOrElse,
											function (c) {
												return $author$project$PagesComponents$Organization_$Project_$Models$Notes$fromColumn(
													{bH: c, aq: table.H});
											},
											$author$project$PagesComponents$Organization_$Project_$Models$Notes$fromTable(table.H),
											col)));
							},
							cx: F2(
								function (cols, isOut) {
									return function (hint) {
										if (!cols.b) {
											return $author$project$PagesComponents$Organization_$Project_$Models$Noop('No table to show');
										} else {
											if (!cols.b.b) {
												var col = cols.a;
												return A2(
													$author$project$PagesComponents$Organization_$Project_$Models$ShowTable,
													_Utils_Tuple2(col.bH.aI, col.bH.aq),
													hint);
											} else {
												return A2(
													$author$project$PagesComponents$Organization_$Project_$Models$ShowTables,
													A2(
														$elm$core$List$map,
														function (col) {
															return _Utils_Tuple2(col.bH.aI, col.bH.aq);
														},
														cols),
													hint);
											}
										}
									}(
										$elm$core$Maybe$Just(
											A3(
												$author$project$Libs$Bool$cond,
												isOut,
												A2($author$project$PagesComponents$Organization_$Project_$Models$PositionHint$PlaceRight, layout.nU.e$, layout.nU.ox),
												$author$project$PagesComponents$Organization_$Project_$Models$PositionHint$PlaceLeft(layout.nU.e$))));
								})
						},
						M: A2(
							$elm$core$List$filterMap,
							function (c) {
								return A3(
									$author$project$Libs$List$findBy,
									function ($) {
										return $.aA;
									},
									c.aA,
									columns);
							},
							$author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$flatten(layout.M)),
						h4: A2(
							$elm$core$Maybe$map,
							function ($) {
								return $.fp;
							},
							table.h4),
						Z: {bk: conf.bk, aM: conf.aM, jb: conf.jb, fe: conf.fe},
						cb: defaultSchema,
						fU: $elm$core$Maybe$Just(dropdown),
						ay: A2(
							$elm$core$List$sortBy,
							function ($) {
								return $.l7;
							},
							hiddenColumns),
						H: table.iL,
						eH: table.o3,
						cn: table.cn,
						bP: notes.aq,
						e_: platform,
						dG: {aI: table.aI, aq: table.eS},
						h: {
							cS: layout.nU.cS,
							A: layout.nU.A,
							ep: dragging,
							df: $elm$core$Set$fromList(
								A2(
									$elm$core$List$map,
									$author$project$Models$Project$ColumnPath$toString,
									A2(
										$elm$core$List$append,
										selectedColumn,
										A2(
											$elm$core$List$map,
											function ($) {
												return $.aA;
											},
											A2(
												$elm$core$List$filter,
												function ($) {
													return $.az;
												},
												$author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$flatten(layout.M)))))),
							bN: isHover,
							jo: openedDropdown,
							eX: openedPopover,
							cy: layout.nU.cy || selectedTable,
							bx: layout.nU.bx
						},
						hU: zoom
					})
				]));
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Erd$viewTables = function (platform) {
	return function (conf) {
		return function (cursorMode) {
			return function (virtualRelation) {
				return function (openedDropdown) {
					return function (openedPopover) {
						return function (hoverTable) {
							return function (dragging) {
								return function (zoom) {
									return function (defaultSchema) {
										return function (selected) {
											return function (useBasicTypes) {
												return function (tables) {
													return function (notes) {
														return function (tableLayouts) {
															return A3(
																$elm$html$Html$Keyed$node,
																'div',
																_List_fromArray(
																	[
																		$elm$html$Html$Attributes$class('az-tables')
																	]),
																A2(
																	$elm$core$List$map,
																	function (_v1) {
																		var index = _v1.a;
																		var table = _v1.b;
																		var tableLayout = _v1.c;
																		return _Utils_Tuple2(
																			$author$project$Models$Project$TableId$toString(table.H),
																			A7(
																				$elm$html$Html$Lazy$lazy6,
																				$author$project$PagesComponents$Organization_$Project_$Views$Erd$Table$viewTable,
																				conf,
																				zoom,
																				$author$project$PagesComponents$Organization_$Project_$Views$Erd$Table$argsToString(platform)(cursorMode)(defaultSchema)(
																					A3(
																						$author$project$Libs$Bool$cond,
																						A2($elm$core$String$startsWith, table.iL, openedDropdown),
																						openedDropdown,
																						''))(
																					A3(
																						$author$project$Libs$Bool$cond,
																						A2($elm$core$String$startsWith, table.iL, openedPopover),
																						openedPopover,
																						''))(index)(selected)(
																					_Utils_eq(
																						hoverTable,
																						$elm$core$Maybe$Just(table.H)))(
																					A2(
																						$author$project$Libs$Maybe$any,
																						function (d) {
																							return _Utils_eq(d.H, table.iL) && (!_Utils_eq(d.bl, d.iZ));
																						},
																						dragging))(
																					!_Utils_eq(virtualRelation, $elm$core$Maybe$Nothing))(useBasicTypes),
																				A3($author$project$Libs$Dict$getOrElse, table.H, $author$project$PagesComponents$Organization_$Project_$Models$ErdNotesTable$empty, notes),
																				tableLayout,
																				table));
																	},
																	A2(
																		$elm$core$List$filterMap,
																		function (_v0) {
																			var index = _v0.a;
																			var tableLayout = _v0.b;
																			return A2(
																				$elm$core$Maybe$map,
																				function (table) {
																					return _Utils_Tuple3(index, table, tableLayout);
																				},
																				A2($elm$core$Dict$get, tableLayout.H, tables));
																		},
																		A2(
																			$elm$core$List$indexedMap,
																			$author$project$Libs$Tuple$new,
																			$elm$core$List$reverse(tableLayouts)))));
														};
													};
												};
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var $author$project$PagesComponents$Organization_$Project_$Views$Erd$Relation$viewVirtualRelation = F2(
	function (style, _v0) {
		var _v1 = _v0.a;
		var maybeProps = _v1.a;
		var column = _v1.b;
		var position = _v0.b;
		if (!maybeProps.$) {
			var props = maybeProps.a;
			var _v3 = _Utils_Tuple3(
				$author$project$Models$Position$extractCanvas(position),
				$author$project$Models$Position$extractGrid(props.aq.e$),
				$author$project$Models$Size$extractCanvas(props.aq.ox));
			var pos = _v3.a;
			var tablePos = _v3.b;
			var tableSize = _v3.c;
			var isRight = _Utils_cmp(pos.C, tablePos.C + (tableSize.bB / 2)) > 0;
			return A8(
				$author$project$Components$Organisms$Relation$show,
				style,
				{bk: false},
				_Utils_Tuple2(
					A2(
						$author$project$Models$Position$moveCanvas,
						{
							aY: A3($author$project$Libs$Bool$cond, isRight, tableSize.bB, 0),
							aZ: A2($author$project$PagesComponents$Organization_$Project_$Views$Erd$Relation$deltaTop, props.l7, props.aq.cS)
						},
						$author$project$Models$Position$offGrid(props.aq.e$)),
					A3($author$project$Libs$Bool$cond, isRight, 0, 1)),
				_Utils_Tuple2(
					position,
					A3($author$project$Libs$Bool$cond, isRight, 1, 0)),
				column.nf,
				$elm$core$Maybe$Just(props.aq.A),
				'virtual relation',
				function (_v4) {
					return $author$project$PagesComponents$Organization_$Project_$Models$Noop('hover new virtual relation');
				});
		} else {
			return $author$project$PagesComponents$Organization_$Project_$Views$Erd$Relation$viewEmptyRelation;
		}
	});
var $author$project$PagesComponents$Organization_$Project_$Models$Erd$viewportToCanvas = F3(
	function (erdElem, canvas, pos) {
		return A4($author$project$Models$Position$viewportToCanvas, erdElem.e$, canvas.e$, canvas.hU, pos);
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Erd$viewErd = F8(
	function (conf, erdElem, erd, selectionBox, virtualRelation, editMemo, args, dragging) {
		var layout = $author$project$PagesComponents$Organization_$Project_$Models$Erd$currentLayout(erd);
		var canvas = A3(
			$author$project$Libs$Maybe$mapOrElse,
			function (d) {
				return A2($author$project$PagesComponents$Organization_$Project_$Updates$Drag$moveCanvas, d, layout.fJ);
			},
			layout.fJ,
			A2(
				$author$project$Libs$Maybe$filter,
				function (d) {
					return _Utils_eq(d.H, $author$project$Conf$ids.lE);
				},
				dragging));
		var memos = A3(
			$author$project$Libs$Maybe$mapOrElse,
			function (d) {
				return A3($author$project$PagesComponents$Organization_$Project_$Updates$Drag$moveMemos, d, canvas.hU, layout.gw);
			},
			layout.gw,
			A2(
				$author$project$Libs$Maybe$filter,
				A2(
					$elm$core$Basics$composeR,
					function ($) {
						return $.H;
					},
					$author$project$PagesComponents$Organization_$Project_$Models$MemoId$isHtmlId),
				dragging));
		var tableProps = A3(
			$author$project$Libs$Maybe$mapOrElse,
			function (d) {
				return A3($author$project$PagesComponents$Organization_$Project_$Updates$Drag$moveTables, d, canvas.hU, layout.oM);
			},
			layout.oM,
			A2(
				$author$project$Libs$Maybe$filter,
				function (d) {
					return !_Utils_eq(d.H, $author$project$Conf$ids.lE);
				},
				dragging));
		var displayedTables = A2(
			$elm$core$List$filter,
			function (t) {
				return !_Utils_eq(t.nU.ox, $author$project$Models$Size$zeroCanvas);
			},
			tableProps);
		var displayedIds = $elm$core$Set$fromList(
			A2(
				$elm$core$List$map,
				function ($) {
					return $.H;
				},
				displayedTables));
		var displayedRelations = A2(
			$elm$core$List$filter,
			function (r) {
				return A2(
					$elm$core$List$any,
					function (c) {
						return A2($elm$core$Set$member, c.aq, displayedIds);
					},
					_List_fromArray(
						[r.ht, r.dG]));
			},
			erd.bT);
		var virtualRelationInfo = A2(
			$elm$core$Maybe$andThen,
			function (vr) {
				return A2(
					$elm$core$Maybe$andThen,
					function (src) {
						return A2(
							$elm$core$Maybe$map,
							function (ref) {
								return _Utils_Tuple2(
									_Utils_Tuple2(
										A2(
											$author$project$PagesComponents$Organization_$Project_$Views$Erd$Relation$buildColumnInfo,
											src.bH,
											A3(
												$author$project$Libs$List$findBy,
												function ($) {
													return $.H;
												},
												src.aq,
												tableProps)),
										ref),
									A3($author$project$PagesComponents$Organization_$Project_$Models$Erd$viewportToCanvas, erdElem, canvas, vr.mU));
							},
							A2($author$project$PagesComponents$Organization_$Project_$Models$Erd$getColumn, src, erd));
					},
					vr.ht);
			},
			virtualRelation);
		var _v0 = $author$project$PagesComponents$Organization_$Project_$Views$Erd$stringToArgs(args);
		var _v1 = _v0.a;
		var platform = _v1.a;
		var cursorMode = _v1.b;
		var hoverTable = _v1.c;
		var _v2 = _v0.b;
		var openedDropdown = _v2.a;
		var openedPopover = _v2.b;
		var selected = _v2.c;
		return A2(
			$elm$html$Html$div,
			_Utils_ap(
				_List_fromArray(
					[
						$elm$html$Html$Attributes$id($author$project$Conf$ids.lE),
						$elm$html$Html$Attributes$class('az-erd h-full bg-gray-100 overflow-hidden'),
						$elm$html$Html$Attributes$classList(
						_List_fromArray(
							[
								_Utils_Tuple2(
								'invisible',
								_Utils_eq(erdElem.ox, $author$project$Models$Size$zeroViewport)),
								_Utils_Tuple2(
								'cursor-grab-all',
								(!cursorMode) && (_Utils_eq(dragging, $elm$core$Maybe$Nothing) && _Utils_eq(virtualRelation, $elm$core$Maybe$Nothing))),
								_Utils_Tuple2(
								'cursor-grabbing-all',
								(!cursorMode) && ((!_Utils_eq(dragging, $elm$core$Maybe$Nothing)) && _Utils_eq(virtualRelation, $elm$core$Maybe$Nothing))),
								_Utils_Tuple2(
								'cursor-crosshair-all',
								!_Utils_eq(virtualRelation, $elm$core$Maybe$Nothing))
							]))
					]),
				_Utils_ap(
					A3(
						$author$project$Libs$Bool$cond,
						conf.jb && (!$elm$core$List$isEmpty(tableProps)),
						_List_fromArray(
							[
								A2($author$project$Libs$Html$Events$onWheel, platform, $author$project$PagesComponents$Organization_$Project_$Models$OnWheel)
							]),
						_List_Nil),
					_Utils_ap(
						A3(
							$author$project$Libs$Bool$cond,
							(conf.jb || conf.fe) && (_Utils_eq(virtualRelation, $elm$core$Maybe$Nothing) && _Utils_eq(editMemo, $elm$core$Maybe$Nothing)),
							_List_fromArray(
								[
									A2(
									$author$project$Libs$Html$Events$stopPointerDown,
									platform,
									A2($author$project$PagesComponents$Organization_$Project_$Views$Erd$handleErdPointerDown, conf, cursorMode))
								]),
							_List_Nil),
						A3(
							$author$project$Libs$Bool$cond,
							conf.aM && (_Utils_eq(virtualRelation, $elm$core$Maybe$Nothing) && _Utils_eq(editMemo, $elm$core$Maybe$Nothing)),
							_List_fromArray(
								[
									A2(
									$author$project$Libs$Html$Events$onDblClick,
									platform,
									A2(
										$elm$core$Basics$composeR,
										A2($author$project$Models$Project$CanvasProps$eventCanvas, erdElem, canvas),
										A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Models$MCreate, $author$project$PagesComponents$Organization_$Project_$Models$MemoMsg))),
									A2(
									$author$project$Libs$Html$Events$onContextMenu,
									platform,
									function (e) {
										return A2(
											$author$project$PagesComponents$Organization_$Project_$Models$ContextMenuCreate,
											A4($author$project$PagesComponents$Organization_$Project_$Views$Modals$ErdContextMenu$view, platform, erdElem, canvas, e),
											e);
									})
								]),
							_List_Nil)))),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('az-canvas origin-top-left'),
							A2($author$project$Models$Position$styleTransformDiagram, canvas.e$, canvas.hU)
						]),
					_List_fromArray(
						[
							A6($elm$html$Html$Lazy$lazy5, $author$project$PagesComponents$Organization_$Project_$Views$Erd$viewRelations, conf, erd.dM.cb, erd.dM.dH, displayedTables, displayedRelations),
							$author$project$PagesComponents$Organization_$Project_$Views$Erd$viewTables(platform)(conf)(cursorMode)(virtualRelation)(openedDropdown)(openedPopover)(hoverTable)(dragging)(canvas.hU)(erd.dM.cb)(selected)(erd.dM.cT)(erd.oM)(erd.bP)(tableProps),
							A5($author$project$PagesComponents$Organization_$Project_$Views$Erd$viewMemos, platform, conf, cursorMode, editMemo, memos),
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('az-selection-box pointer-events-none')
								]),
							A3(
								$author$project$Libs$Maybe$mapOrElse,
								$author$project$PagesComponents$Organization_$Project_$Views$Erd$viewSelectionBox,
								_List_Nil,
								A2(
									$author$project$Libs$Maybe$filterNot,
									function (_v3) {
										return $elm$core$List$isEmpty(tableProps);
									},
									selectionBox))),
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('az-virtual-relation pointer-events-none')
								]),
							_List_fromArray(
								[
									A3(
									$author$project$Libs$Maybe$mapOrElse,
									function (i) {
										return A2($author$project$PagesComponents$Organization_$Project_$Views$Erd$Relation$viewVirtualRelation, erd.dM.dH, i);
									},
									$author$project$PagesComponents$Organization_$Project_$Views$Erd$Relation$viewEmptyRelation,
									virtualRelationInfo)
								]))
						])),
					$elm$core$List$isEmpty(tableProps) ? A2($author$project$PagesComponents$Organization_$Project_$Views$Erd$viewEmptyState, erd.dM.cb, erd.oM) : A2($elm$html$Html$div, _List_Nil, _List_Nil)
				]));
	});
var $author$project$PagesComponents$Organization_$Project_$Models$LLoad = function (a) {
	return {$: 0, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Models$LayoutMsg = function (a) {
	return {$: 37, a: a};
};
var $elm$html$Html$aside = _VirtualDom_node('aside');
var $author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$Close = {$: 0};
var $author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$EditNotes = F2(
	function (a, b) {
		return {$: 8, a: a, b: b};
	});
var $author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$EditNotesUpdate = function (a) {
	return {$: 9, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$SaveNotes = F3(
	function (a, b, c) {
		return {$: 10, a: a, b: b, c: c};
	});
var $author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$ToggleCollapse = function (a) {
	return {$: 7, a: a};
};
var $author$project$Libs$List$filterZip = F2(
	function (f, xs) {
		return A2(
			$elm$core$List$filterMap,
			function (a) {
				return A2(
					$elm$core$Maybe$map,
					function (b) {
						return _Utils_Tuple2(a, b);
					},
					f(a));
			},
			xs);
	});
var $author$project$PagesComponents$Organization_$Project_$Models$ErdNotes$getColumn = F2(
	function (ref, notes) {
		return A2(
			$elm$core$Maybe$andThen,
			A2(
				$elm$core$Basics$composeR,
				function ($) {
					return $.M;
				},
				$author$project$Models$Project$ColumnPath$get(ref.bH)),
			A2($elm$core$Dict$get, ref.aq, notes));
	});
var $author$project$Libs$List$memberWith = F2(
	function (matcher, list) {
		return $author$project$Libs$Maybe$isJust(
			A2($author$project$Libs$List$find, matcher, list));
	});
var $author$project$Libs$List$nonEmptyMap = F3(
	function (f, _default, list) {
		if (!list.b) {
			return _default;
		} else {
			return f(list);
		}
	});
var $author$project$PagesComponents$Organization_$Project_$Models$ErdColumnRef$toId = function (ref) {
	return _Utils_Tuple2(
		ref.aq,
		$author$project$Models$Project$ColumnPath$toString(ref.bH));
};
var $author$project$Libs$Bool$list = F2(
	function (a, predicate) {
		return predicate ? _List_fromArray(
			[a]) : _List_Nil;
	});
var $author$project$Components$Molecules$Tooltip$r = A2($author$project$Components$Molecules$Tooltip$tooltip, 'left-full ml-3 top-1/2 transform -translate-y-2/4', 'top-1/2 -translate-x-2/4 -translate-y-2/4');
var $author$project$Components$Organisms$Details$viewColumnConstraint = F3(
	function (constraint, _v0, name) {
		var columns = _v0.a;
		var definition = _v0.b;
		var label = A2(
			$elm$core$String$join,
			', ',
			A2($elm$core$List$map, $author$project$Models$Project$ColumnPath$show, columns));
		var columnsHtml = ($elm$core$List$length(columns) > 1) ? _List_fromArray(
			[
				$elm$html$Html$text(' ('),
				A2(
				$elm$html$Html$span,
				_List_fromArray(
					[
						$elm$html$Html$Attributes$title(label)
					]),
				_List_fromArray(
					[
						$elm$html$Html$text(label)
					])),
				$elm$html$Html$text(')')
			]) : _List_Nil;
		return A2(
			$elm$core$Maybe$withDefault,
			A2(
				$elm$html$Html$span,
				_List_fromArray(
					[
						$elm$html$Html$Attributes$class('truncate')
					]),
				A2(
					$elm$core$List$cons,
					$elm$html$Html$text(
						A2($elm$core$Maybe$withDefault, constraint, name)),
					columnsHtml)),
			A2(
				$elm$core$Maybe$map,
				function (d) {
					return A2(
						$elm$html$Html$span,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$class('truncate'),
								$elm$html$Html$Attributes$title(d)
							]),
						A2(
							$elm$core$List$cons,
							$elm$html$Html$text(
								A2($elm$core$Maybe$withDefault, constraint, name)),
							columnsHtml));
				},
				definition));
	});
var $author$project$Components$Organisms$Details$viewColumnCheck = F2(
	function (constraints, name) {
		return A3(
			$author$project$Components$Organisms$Details$viewColumnConstraint,
			'Check',
			A3(
				$author$project$Libs$Maybe$mapOrElse,
				function (u) {
					return _Utils_Tuple2(u.M, u.nI);
				},
				_Utils_Tuple2(_List_Nil, $elm$core$Maybe$Nothing),
				A3(
					$author$project$Libs$List$findBy,
					function ($) {
						return $.eS;
					},
					name,
					constraints)),
			$elm$core$Maybe$Just(name));
	});
var $author$project$Components$Organisms$Details$viewColumnIndex = F2(
	function (constraints, name) {
		return A3(
			$author$project$Components$Organisms$Details$viewColumnConstraint,
			'Index',
			A3(
				$author$project$Libs$Maybe$mapOrElse,
				function (u) {
					return _Utils_Tuple2(
						$author$project$Libs$Nel$toList(u.M),
						u.ii);
				},
				_Utils_Tuple2(_List_Nil, $elm$core$Maybe$Nothing),
				A3(
					$author$project$Libs$List$findBy,
					function ($) {
						return $.eS;
					},
					name,
					constraints)),
			$elm$core$Maybe$Just(name));
	});
var $author$project$Components$Organisms$Details$viewColumnPrimaryKey = function (primaryKey) {
	return A3(
		$author$project$Components$Organisms$Details$viewColumnConstraint,
		'Primary key',
		A3(
			$author$project$Libs$Maybe$mapOrElse,
			function (pk) {
				return _Utils_Tuple2(
					$author$project$Libs$Nel$toList(pk.M),
					$elm$core$Maybe$Nothing);
			},
			_Utils_Tuple2(_List_Nil, $elm$core$Maybe$Nothing),
			primaryKey),
		A2(
			$elm$core$Maybe$andThen,
			function ($) {
				return $.eS;
			},
			primaryKey));
};
var $author$project$Components$Organisms$Details$viewColumnUnique = F2(
	function (constraints, name) {
		return A3(
			$author$project$Components$Organisms$Details$viewColumnConstraint,
			'Unique',
			A3(
				$author$project$Libs$Maybe$mapOrElse,
				function (u) {
					return _Utils_Tuple2(
						$author$project$Libs$Nel$toList(u.M),
						u.ii);
				},
				_Utils_Tuple2(_List_Nil, $elm$core$Maybe$Nothing),
				A3(
					$author$project$Libs$List$findBy,
					function ($) {
						return $.eS;
					},
					name,
					constraints)),
			$elm$core$Maybe$Just(name));
	});
var $author$project$Components$Organisms$Details$viewProp = F2(
	function (label, content) {
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('mt-3')
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('text-sm font-medium text-gray-500')
						]),
					_List_fromArray(
						[
							$elm$html$Html$text(label)
						])),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('mt-1 text-sm text-gray-900')
						]),
					content)
				]));
	});
var $author$project$Components$Organisms$Details$viewColumnConstraints = F2(
	function (table, column) {
		return ((!column.iV) && ($elm$core$List$isEmpty(column.d5) && ($elm$core$List$isEmpty(column.dg) && $elm$core$List$isEmpty(column.cQ)))) ? A2($elm$html$Html$div, _List_Nil, _List_Nil) : A2(
			$author$project$Components$Organisms$Details$viewProp,
			'Constraints',
			A2(
				$elm$core$List$map,
				function (_v0) {
					var kind = _v0.a;
					var icon = _v0.b;
					var content = _v0.c;
					return A2(
						$elm$html$Html$div,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$class('flex flex-row')
							]),
						_List_fromArray(
							[
								A2(
								$author$project$Components$Molecules$Tooltip$r,
								kind,
								A2($author$project$Components$Atoms$Icon$solid, icon, 'inline text-gray-500 w-4 mr-1')),
								content
							]));
				},
				_Utils_ap(
					A2(
						$author$project$Libs$Bool$list,
						_Utils_Tuple3(
							'Primary key',
							$author$project$Components$Atoms$Icons$columns.nL,
							$author$project$Components$Organisms$Details$viewColumnPrimaryKey(table.nL)),
						column.iV),
					_Utils_ap(
						A2(
							$elm$core$List$map,
							function (u) {
								return _Utils_Tuple3(
									'Unique',
									$author$project$Components$Atoms$Icons$columns.o$,
									A2($author$project$Components$Organisms$Details$viewColumnUnique, table.d5, u));
							},
							$elm$core$List$sort(column.d5)),
						_Utils_ap(
							A2(
								$elm$core$List$map,
								function (i) {
									return _Utils_Tuple3(
										'Index',
										$author$project$Components$Atoms$Icons$columns.l7,
										A2($author$project$Components$Organisms$Details$viewColumnIndex, table.dg, i));
								},
								$elm$core$List$sort(column.dg)),
							A2(
								$elm$core$List$map,
								function (c) {
									return _Utils_Tuple3(
										'Check',
										$author$project$Components$Atoms$Icons$columns.kY,
										A2($author$project$Components$Organisms$Details$viewColumnCheck, table.cQ, c));
								},
								$elm$core$List$sort(column.cQ)))))));
	});
var $elm$html$Html$Attributes$disabled = $elm$html$Html$Attributes$boolProperty('disabled');
var $author$project$Components$Molecules$Tooltip$tr = A2($author$project$Components$Molecules$Tooltip$tooltip, 'bottom-full mb-3 left-0', 'top-full -translate-y-2/4 ml-3');
var $author$project$Components$Organisms$Details$viewColumnHeading = F4(
	function (goToTable, goToColumn, table, model) {
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('pl-7 flex items-center justify-between border-b border-gray-200 bg-gray-50 px-1 py-1 text-sm font-medium text-gray-500')
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('flex')
						]),
					_List_fromArray(
						[
							A2(
							$author$project$Components$Molecules$Tooltip$tr,
							'Table details',
							A2(
								$elm$html$Html$button,
								_List_fromArray(
									[
										$elm$html$Html$Attributes$type_('button'),
										$elm$html$Html$Events$onClick(
										goToTable(table))
									]),
								_List_fromArray(
									[
										A2($author$project$Components$Atoms$Icon$solid, 51, '')
									]))),
							A2(
							$elm$html$Html$h3,
							_List_Nil,
							_List_fromArray(
								[
									$elm$html$Html$text(
									$author$project$Models$Project$ColumnPath$show(model.f.aA))
								]))
						])),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('flex')
						]),
					_List_fromArray(
						[
							A2(
							$elm$core$Maybe$withDefault,
							A2(
								$elm$html$Html$button,
								_List_fromArray(
									[
										$elm$html$Html$Attributes$type_('button'),
										$elm$html$Html$Attributes$disabled(true),
										$elm$html$Html$Attributes$class('text-gray-300')
									]),
								_List_fromArray(
									[
										A2($author$project$Components$Atoms$Icon$solid, 49, '')
									])),
							A2(
								$elm$core$Maybe$map,
								function (c) {
									return A2(
										$author$project$Components$Molecules$Tooltip$tl,
										$author$project$Models$Project$ColumnPath$show(c.aA),
										A2(
											$elm$html$Html$button,
											_List_fromArray(
												[
													$elm$html$Html$Attributes$type_('button'),
													$elm$html$Html$Events$onClick(
													goToColumn(
														{bH: c.aA, aq: table}))
												]),
											_List_fromArray(
												[
													A2($author$project$Components$Atoms$Icon$solid, 49, '')
												])));
								},
								model.bR)),
							A2(
							$elm$core$Maybe$withDefault,
							A2(
								$elm$html$Html$button,
								_List_fromArray(
									[
										$elm$html$Html$Attributes$type_('button'),
										$elm$html$Html$Attributes$disabled(true),
										$elm$html$Html$Attributes$class('text-gray-300')
									]),
								_List_fromArray(
									[
										A2($author$project$Components$Atoms$Icon$solid, 50, '')
									])),
							A2(
								$elm$core$Maybe$map,
								function (c) {
									return A2(
										$author$project$Components$Molecules$Tooltip$tl,
										$author$project$Models$Project$ColumnPath$show(c.aA),
										A2(
											$elm$html$Html$button,
											_List_fromArray(
												[
													$elm$html$Html$Attributes$type_('button'),
													$elm$html$Html$Events$onClick(
													goToColumn(
														{bH: c.aA, aq: table}))
												]),
											_List_fromArray(
												[
													A2($author$project$Components$Atoms$Icon$solid, 50, '')
												])));
								},
								model.bO))
						]))
				]));
	});
var $author$project$Components$Organisms$Details$viewColumnRelation = F3(
	function (click, defaultSchema, relation) {
		return A2(
			$elm$html$Html$div,
			_List_Nil,
			_List_fromArray(
				[
					A2(
					$author$project$Components$Molecules$Tooltip$r,
					'View column',
					A2(
						$elm$html$Html$span,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$class('underline cursor-pointer'),
								$elm$html$Html$Events$onClick(
								click(
									{bH: relation.bH, aq: relation.aq}))
							]),
						_List_fromArray(
							[
								$elm$html$Html$text(
								A2($author$project$Models$Project$ColumnRef$show, defaultSchema, relation))
							])))
				]));
	});
var $author$project$Libs$Basics$percent = F2(
	function (total, value) {
		return (100 * value) / total;
	});
var $author$project$Components$Organisms$Details$viewColumnValue = function (value) {
	return A2(
		$author$project$Components$Molecules$Tooltip$tr,
		$elm$core$String$fromInt(value.ib) + ' occurrences',
		(value.a5 === '') ? A3(
			$author$project$Components$Atoms$Badge$basicFlex,
			$author$project$Libs$Tailwind$gray,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('mr-1 italic')
				]),
			_List_fromArray(
				[
					$elm$html$Html$text('Empty string')
				])) : A3(
			$author$project$Components$Atoms$Badge$basicFlex,
			$author$project$Libs$Tailwind$gray,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('mr-1')
				]),
			_List_fromArray(
				[
					$elm$html$Html$text(value.a5)
				])));
};
var $author$project$Components$Organisms$Details$viewColumnStats = F2(
	function (sources, stats) {
		return A2(
			$elm$html$Html$div,
			_List_Nil,
			A2(
				$elm$core$List$map,
				function (_v1) {
					var sourceName = _v1.a;
					var s = _v1.b;
					return (!s.bV) ? A2(
						$author$project$Components$Organisms$Details$viewProp,
						'Values in ' + (sourceName + ' source'),
						_List_fromArray(
							[
								A2(
								$elm$html$Html$div,
								_List_Nil,
								_List_fromArray(
									[
										$elm$html$Html$text(
										'Rows: ' + $elm$core$String$fromInt(s.bV))
									]))
							])) : A2(
						$author$project$Components$Organisms$Details$viewProp,
						'Values in ' + (sourceName + ' source'),
						_List_fromArray(
							[
								A2(
								$elm$html$Html$div,
								_List_Nil,
								A2(
									$elm$core$List$cons,
									$elm$html$Html$text('Samples: '),
									A2(
										$elm$core$List$map,
										$author$project$Components$Organisms$Details$viewColumnValue,
										A2($elm$core$List$take, 5, s.h5)))),
								A2(
								$elm$html$Html$div,
								_List_Nil,
								A2(
									$elm$core$List$intersperse,
									$elm$html$Html$text(', '),
									_List_fromArray(
										[
											A2(
											$elm$html$Html$span,
											_List_Nil,
											_List_fromArray(
												[
													$elm$html$Html$text(
													'Rows: ' + $elm$core$String$fromInt(s.bV))
												])),
											A2(
											$elm$html$Html$span,
											_List_Nil,
											_List_fromArray(
												[
													$elm$html$Html$text(
													'Cardinality: ' + $elm$core$String$fromInt(s.kS))
												])),
											A2(
											$author$project$Components$Molecules$Tooltip$t,
											$elm$core$String$fromInt(s.ji) + ' nulls',
											$elm$html$Html$text(
												'Nulls: ' + ($author$project$Libs$Basics$prettyNumber(
													A2($author$project$Libs$Basics$percent, s.bV, s.ji)) + '%')))
										])))
							]));
				},
				A2(
					$elm$core$List$sortBy,
					$elm$core$Tuple$first,
					A2(
						$elm$core$List$map,
						function (_v0) {
							var sourceId = _v0.a;
							var s = _v0.b;
							return _Utils_Tuple2(
								A3(
									$author$project$Libs$Maybe$mapOrElse,
									function ($) {
										return $.eS;
									},
									sourceId,
									A3(
										$author$project$Libs$List$findBy,
										A2(
											$elm$core$Basics$composeR,
											function ($) {
												return $.H;
											},
											$author$project$Models$Project$SourceId$toString),
										sourceId,
										sources)),
								s);
						},
						$elm$core$Dict$toList(stats)))));
	});
var $author$project$Components$Organisms$Details$viewMarkdown = function (content) {
	return A2($author$project$Components$Atoms$Markdown$prose, 'prose-sm -mt-1', content);
};
var $author$project$Components$Organisms$Details$viewComment = function (comment) {
	return A2(
		$elm$html$Html$div,
		_List_fromArray(
			[
				$elm$html$Html$Attributes$class('mt-1 flex flex-row')
			]),
		_List_fromArray(
			[
				A2(
				$author$project$Components$Molecules$Tooltip$r,
				'SQL comment',
				A2($author$project$Components$Atoms$Icon$outline, $author$project$Components$Atoms$Icons$comment, 'w-4 opacity-50 mr-1')),
				$author$project$Components$Organisms$Details$viewMarkdown(comment.fp)
			]));
};
var $author$project$Components$Organisms$Details$viewLayout = F2(
	function (loadLayout, layout) {
		return A2(
			$elm$html$Html$div,
			_List_Nil,
			_List_fromArray(
				[
					A2(
					$author$project$Components$Molecules$Tooltip$r,
					'View layout',
					A2(
						$elm$html$Html$span,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$class('underline cursor-pointer'),
								$elm$html$Html$Events$onClick(
								loadLayout(layout))
							]),
						_List_fromArray(
							[
								$elm$html$Html$text(layout)
							])))
				]));
	});
var $elm$html$Html$Attributes$rows = function (n) {
	return A2(
		_VirtualDom_attribute,
		'rows',
		$elm$core$String$fromInt(n));
};
var $author$project$Components$Organisms$Details$viewNotes = function (model) {
	var inputId = 'edit-notes';
	return A2(
		$elm$html$Html$div,
		_List_fromArray(
			[
				$elm$html$Html$Attributes$class('mt-1 flex flex-row')
			]),
		_List_fromArray(
			[
				A2(
				$author$project$Components$Molecules$Tooltip$r,
				'Azimutt notes',
				A2($author$project$Components$Atoms$Icon$outline, $author$project$Components$Atoms$Icons$notes, 'w-4 opacity-50 mr-1')),
				A2(
				$elm$core$Maybe$withDefault,
				A2(
					$elm$core$Maybe$withDefault,
					A2(
						$elm$html$Html$div,
						_List_fromArray(
							[
								$elm$html$Html$Events$onClick(
								A2(model.c4, inputId, model.bP)),
								$elm$html$Html$Attributes$class('w-full text-sm text-gray-400 italic underline cursor-pointer')
							]),
						_List_fromArray(
							[
								$elm$html$Html$text('Click to write notes')
							])),
					A2(
						$elm$core$Maybe$map,
						function (n) {
							return A2(
								$elm$html$Html$div,
								_List_fromArray(
									[
										$elm$html$Html$Events$onClick(
										A2(model.c4, inputId, model.bP)),
										$elm$html$Html$Attributes$class('w-full cursor-pointer')
									]),
								_List_fromArray(
									[
										$author$project$Components$Organisms$Details$viewMarkdown(n)
									]));
						},
						$author$project$Libs$String$nonEmptyMaybe(model.bP))),
				A2(
					$elm$core$Maybe$map,
					function (content) {
						return A2(
							$elm$html$Html$textarea,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$id(inputId),
									$elm$html$Html$Attributes$name(inputId),
									$elm$html$Html$Attributes$rows(
									$elm$core$List$length(
										A2($elm$core$String$split, '\n', model.bP))),
									$elm$html$Html$Attributes$value(content),
									$elm$html$Html$Events$onInput(model.fv),
									$elm$html$Html$Events$onBlur(
									model.fa(content)),
									$elm$html$Html$Attributes$autofocus(true),
									$elm$html$Html$Attributes$placeholder('Write your notes...'),
									$elm$html$Html$Attributes$class('block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm')
								]),
							_List_Nil);
					},
					model.es))
			]));
};
var $author$project$Models$Project$SchemaName$show = F2(
	function (defaultSchema, schema) {
		return (!_Utils_eq(schema, $author$project$Conf$schema.lC)) ? schema : ((!_Utils_eq(defaultSchema, $author$project$Conf$schema.lC)) ? defaultSchema : 'default');
	});
var $author$project$Components$Organisms$Details$viewSchemaHeading = F4(
	function (goToList, goToSchema, defaultSchema, model) {
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('flex items-center justify-between border-t border-b border-gray-200 bg-gray-50 px-1 py-1 text-sm font-medium text-gray-500')
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('flex')
						]),
					_List_fromArray(
						[
							A2(
							$author$project$Components$Molecules$Tooltip$tr,
							'List all tables',
							A2(
								$elm$html$Html$button,
								_List_fromArray(
									[
										$elm$html$Html$Attributes$type_('button'),
										$elm$html$Html$Events$onClick(goToList)
									]),
								_List_fromArray(
									[
										A2($author$project$Components$Atoms$Icon$solid, 51, '')
									]))),
							A2(
							$elm$html$Html$h3,
							_List_Nil,
							_List_fromArray(
								[
									$elm$html$Html$text(
									A2($author$project$Models$Project$SchemaName$show, defaultSchema, model.f))
								]))
						])),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('flex')
						]),
					_List_fromArray(
						[
							A2(
							$elm$core$Maybe$withDefault,
							A2(
								$elm$html$Html$button,
								_List_fromArray(
									[
										$elm$html$Html$Attributes$type_('button'),
										$elm$html$Html$Attributes$disabled(true),
										$elm$html$Html$Attributes$class('text-gray-300')
									]),
								_List_fromArray(
									[
										A2($author$project$Components$Atoms$Icon$solid, 49, '')
									])),
							A2(
								$elm$core$Maybe$map,
								function (s) {
									return A2(
										$author$project$Components$Molecules$Tooltip$tl,
										s,
										A2(
											$elm$html$Html$button,
											_List_fromArray(
												[
													$elm$html$Html$Attributes$type_('button'),
													$elm$html$Html$Events$onClick(
													goToSchema(s))
												]),
											_List_fromArray(
												[
													A2($author$project$Components$Atoms$Icon$solid, 49, '')
												])));
								},
								model.bR)),
							A2(
							$elm$core$Maybe$withDefault,
							A2(
								$elm$html$Html$button,
								_List_fromArray(
									[
										$elm$html$Html$Attributes$type_('button'),
										$elm$html$Html$Attributes$disabled(true),
										$elm$html$Html$Attributes$class('text-gray-300')
									]),
								_List_fromArray(
									[
										A2($author$project$Components$Atoms$Icon$solid, 50, '')
									])),
							A2(
								$elm$core$Maybe$map,
								function (s) {
									return A2(
										$author$project$Components$Molecules$Tooltip$tl,
										s,
										A2(
											$elm$html$Html$button,
											_List_fromArray(
												[
													$elm$html$Html$Attributes$type_('button'),
													$elm$html$Html$Events$onClick(
													goToSchema(s))
												]),
											_List_fromArray(
												[
													A2($author$project$Components$Atoms$Icon$solid, 50, '')
												])));
								},
								model.bO))
						]))
				]));
	});
var $author$project$Components$Atoms$Icons$sources = {kq: 212, lc: 75, lC: 79, mh: 61, nN: 108, n1: 59, od: 111, oD: 86};
var $author$project$Components$Organisms$Details$viewSource = F2(
	function (rows, _v0) {
		var source = _v0.b;
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('mt-1 flex flex-row')
				]),
			_List_fromArray(
				[
					function () {
					var _v1 = source.gi;
					switch (_v1.$) {
						case 0:
							return A2(
								$author$project$Components$Molecules$Tooltip$r,
								'Database source',
								A2($author$project$Components$Atoms$Icon$solid, $author$project$Components$Atoms$Icons$sources.lc, 'w-4 opacity-50 mr-1'));
						case 1:
							return A2(
								$author$project$Components$Molecules$Tooltip$r,
								'SQL source',
								A2($author$project$Components$Atoms$Icon$solid, $author$project$Components$Atoms$Icons$sources.oD, 'w-4 opacity-50 mr-1'));
						case 2:
							return A2(
								$author$project$Components$Molecules$Tooltip$r,
								'SQL source',
								A2($author$project$Components$Atoms$Icon$solid, $author$project$Components$Atoms$Icons$sources.oD, 'w-4 opacity-50 mr-1'));
						case 3:
							return A2(
								$author$project$Components$Molecules$Tooltip$r,
								'JSON source',
								A2($author$project$Components$Atoms$Icon$solid, $author$project$Components$Atoms$Icons$sources.mh, 'w-4 opacity-50 mr-1'));
						case 4:
							return A2(
								$author$project$Components$Molecules$Tooltip$r,
								'JSON source',
								A2($author$project$Components$Atoms$Icon$solid, $author$project$Components$Atoms$Icons$sources.mh, 'w-4 opacity-50 mr-1'));
						default:
							return A2(
								$author$project$Components$Molecules$Tooltip$r,
								'AML source',
								A2($author$project$Components$Atoms$Icon$solid, $author$project$Components$Atoms$Icons$sources.kq, 'w-4 opacity-50 mr-1'));
					}
				}(),
					$elm$html$Html$text(
					_Utils_ap(
						source.eS,
						A3(
							$author$project$Libs$Maybe$mapOrElse,
							function (r) {
								return ' (' + ($elm$core$String$fromInt(r) + ' rows)');
							},
							'',
							rows)))
				]));
	});
var $author$project$Components$Organisms$Details$viewTableHeading = F3(
	function (goToSchema, goToTable, model) {
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('pl-4 flex items-center justify-between border-b border-gray-200 bg-gray-50 px-1 py-1 text-sm font-medium text-gray-500')
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('flex')
						]),
					_List_fromArray(
						[
							A2(
							$author$project$Components$Molecules$Tooltip$tr,
							'Schema details',
							A2(
								$elm$html$Html$button,
								_List_fromArray(
									[
										$elm$html$Html$Attributes$type_('button'),
										$elm$html$Html$Events$onClick(
										goToSchema(model.f.aI))
									]),
								_List_fromArray(
									[
										A2($author$project$Components$Atoms$Icon$solid, 51, '')
									]))),
							A2(
							$elm$html$Html$h3,
							_List_Nil,
							_List_fromArray(
								[
									$elm$html$Html$text(model.f.eS)
								]))
						])),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('flex')
						]),
					_List_fromArray(
						[
							A2(
							$elm$core$Maybe$withDefault,
							A2(
								$elm$html$Html$button,
								_List_fromArray(
									[
										$elm$html$Html$Attributes$type_('button'),
										$elm$html$Html$Attributes$disabled(true),
										$elm$html$Html$Attributes$class('text-gray-300')
									]),
								_List_fromArray(
									[
										A2($author$project$Components$Atoms$Icon$solid, 49, '')
									])),
							A2(
								$elm$core$Maybe$map,
								function (t) {
									return A2(
										$author$project$Components$Molecules$Tooltip$tl,
										t.eS,
										A2(
											$elm$html$Html$button,
											_List_fromArray(
												[
													$elm$html$Html$Attributes$type_('button'),
													$elm$html$Html$Events$onClick(
													goToTable(t.H))
												]),
											_List_fromArray(
												[
													A2($author$project$Components$Atoms$Icon$solid, 49, '')
												])));
								},
								model.bR)),
							A2(
							$elm$core$Maybe$withDefault,
							A2(
								$elm$html$Html$button,
								_List_fromArray(
									[
										$elm$html$Html$Attributes$type_('button'),
										$elm$html$Html$Attributes$disabled(true),
										$elm$html$Html$Attributes$class('text-gray-300')
									]),
								_List_fromArray(
									[
										A2($author$project$Components$Atoms$Icon$solid, 50, '')
									])),
							A2(
								$elm$core$Maybe$map,
								function (t) {
									return A2(
										$author$project$Components$Molecules$Tooltip$tl,
										t.eS,
										A2(
											$elm$html$Html$button,
											_List_fromArray(
												[
													$elm$html$Html$Attributes$type_('button'),
													$elm$html$Html$Events$onClick(
													goToTable(t.H))
												]),
											_List_fromArray(
												[
													A2($author$project$Components$Atoms$Icon$solid, 50, '')
												])));
								},
								model.bO))
						]))
				]));
	});
var $author$project$Components$Organisms$Details$viewTitle = function (content) {
	return A2(
		$elm$html$Html$h2,
		_List_fromArray(
			[
				$elm$html$Html$Attributes$class('mt-2 text-xl font-bold text-gray-900')
			]),
		_List_fromArray(
			[
				$elm$html$Html$text(content)
			]));
};
var $author$project$Components$Organisms$Details$viewColumn = function (goToList) {
	return function (goToSchema) {
		return function (goToTable) {
			return function (goToColumn) {
				return function (loadLayout) {
					return function (_v0) {
						return function (_v1) {
							return function (defaultSchema) {
								return function (schema) {
									return function (table) {
										return function (column) {
											return function (notes) {
												return function (inLayouts) {
													return function (inSources) {
														return function (stats) {
															return A2(
																$elm$html$Html$div,
																_List_Nil,
																_List_fromArray(
																	[
																		A4($author$project$Components$Organisms$Details$viewSchemaHeading, goToList, goToSchema, defaultSchema, schema),
																		A3($author$project$Components$Organisms$Details$viewTableHeading, goToSchema, goToTable, table),
																		A4($author$project$Components$Organisms$Details$viewColumnHeading, goToTable, goToColumn, table.f.H, column),
																		A2(
																		$elm$html$Html$div,
																		_List_fromArray(
																			[
																				$elm$html$Html$Attributes$class('px-3')
																			]),
																		_List_fromArray(
																			[
																				$author$project$Components$Organisms$Details$viewTitle(
																				$elm$core$String$fromInt(column.f.l7) + ('. ' + $author$project$Models$Project$ColumnPath$show(column.f.aA))),
																				A2(
																				$elm$html$Html$div,
																				_List_fromArray(
																					[
																						$elm$html$Html$Attributes$class('flex flex-row flex-wrap')
																					]),
																				A2(
																					$elm$core$List$map,
																					function (_v2) {
																						var icon = _v2.a;
																						var content = _v2.b;
																						return A2(
																							$elm$html$Html$div,
																							_List_fromArray(
																								[
																									$elm$html$Html$Attributes$class('mt-1 mr-3 flex flex-shrink-0 items-center text-sm text-gray-500')
																								]),
																							_List_fromArray(
																								[
																									A2($author$project$Components$Atoms$Icon$solid, icon, 'text-gray-400 mr-1'),
																									$elm$html$Html$text(content)
																								]));
																					},
																					A2(
																						$elm$core$List$filterMap,
																						$elm$core$Basics$identity,
																						_List_fromArray(
																							[
																								$elm$core$Maybe$Just(
																								_Utils_Tuple2(200, column.f.gi)),
																								$elm$core$Maybe$Just(
																								A3(
																									$author$project$Libs$Bool$cond,
																									column.f.nf,
																									_Utils_Tuple2(184, 'Nullable'),
																									_Utils_Tuple2(183, 'NOT NULL'))),
																								A2(
																								$elm$core$Maybe$map,
																								function (v) {
																									return _Utils_Tuple2(160, 'Default: ' + v);
																								},
																								column.f.lf)
																							])))),
																				A3(
																				$author$project$Libs$Maybe$mapOrElse,
																				$author$project$Components$Organisms$Details$viewComment,
																				A2($elm$html$Html$div, _List_Nil, _List_Nil),
																				column.f.h4),
																				$author$project$Components$Organisms$Details$viewNotes(notes),
																				A2(
																				$author$project$Components$Organisms$Details$viewColumnStats,
																				A2($elm$core$List$map, $elm$core$Tuple$second, inSources),
																				stats),
																				A3(
																				$author$project$Libs$List$nonEmptyMap,
																				function (r) {
																					return A2(
																						$author$project$Components$Organisms$Details$viewProp,
																						'References',
																						A2(
																							$elm$core$List$map,
																							A2($author$project$Components$Organisms$Details$viewColumnRelation, goToColumn, defaultSchema),
																							A2($elm$core$List$sortBy, $author$project$PagesComponents$Organization_$Project_$Models$ErdColumnRef$toId, r)));
																				},
																				A2($elm$html$Html$div, _List_Nil, _List_Nil),
																				column.f.jr),
																				A3(
																				$author$project$Libs$List$nonEmptyMap,
																				function (r) {
																					return A2(
																						$author$project$Components$Organisms$Details$viewProp,
																						'Referenced by',
																						A2(
																							$elm$core$List$map,
																							A2($author$project$Components$Organisms$Details$viewColumnRelation, goToColumn, defaultSchema),
																							A2($elm$core$List$sortBy, $author$project$PagesComponents$Organization_$Project_$Models$ErdColumnRef$toId, r)));
																				},
																				A2($elm$html$Html$div, _List_Nil, _List_Nil),
																				column.f.iO),
																				A2($author$project$Components$Organisms$Details$viewColumnConstraints, table.f, column.f),
																				A3(
																				$author$project$Libs$List$nonEmptyMap,
																				function (l) {
																					return A2(
																						$author$project$Components$Organisms$Details$viewProp,
																						'In layouts',
																						A2(
																							$elm$core$List$map,
																							$author$project$Components$Organisms$Details$viewLayout(loadLayout),
																							$elm$core$List$sort(l)));
																				},
																				A2($elm$html$Html$div, _List_Nil, _List_Nil),
																				inLayouts),
																				A3(
																				$author$project$Libs$List$nonEmptyMap,
																				function (s) {
																					return A2(
																						$author$project$Components$Organisms$Details$viewProp,
																						'From sources',
																						A2(
																							$elm$core$List$map,
																							$author$project$Components$Organisms$Details$viewSource($elm$core$Maybe$Nothing),
																							A2(
																								$elm$core$List$sortBy,
																								A2(
																									$elm$core$Basics$composeR,
																									$elm$core$Tuple$second,
																									function ($) {
																										return $.eS;
																									}),
																								s)));
																				},
																				A2($elm$html$Html$div, _List_Nil, _List_Nil),
																				inSources)
																			]))
																	]));
														};
													};
												};
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var $author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$viewColumn = function (wrap) {
	return function (_v0) {
		return function (_v1) {
			return function (_v2) {
				return function (_v3) {
					return function (loadLayout) {
						return function (erd) {
							return function (editNotes) {
								return function (openedCollapse) {
									return function (stats) {
										return function (model) {
											var notes = A2(
												$elm$core$Maybe$withDefault,
												'',
												A2($author$project$PagesComponents$Organization_$Project_$Models$ErdNotes$getColumn, model.H, erd.bP));
											var notesModel = {
												c4: F2(
													function (id, content) {
														return wrap(
															A2($author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$EditNotes, id, content));
													}),
												es: editNotes,
												bP: notes,
												fa: A2(
													$elm$core$Basics$composeR,
													A2(
														$author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$SaveNotes,
														$author$project$PagesComponents$Organization_$Project_$Models$Notes$fromColumn(model.H),
														notes),
													wrap),
												fv: A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$EditNotesUpdate, wrap)
											};
											var inSources = A2(
												$author$project$Libs$List$filterZip,
												function (o) {
													return A3(
														$author$project$Libs$List$findBy,
														function ($) {
															return $.H;
														},
														o.H,
														erd.hs);
												},
												model.bH.f.jq);
											var inLayouts = $elm$core$Dict$keys(
												A2(
													$elm$core$Dict$filter,
													F2(
														function (_v4, l) {
															return A2(
																$author$project$Libs$List$memberWith,
																function (t) {
																	return _Utils_eq(t.H, model.H.aq) && A2($author$project$PagesComponents$Organization_$Project_$Models$ErdColumnProps$member, model.H.bH, t.M);
																},
																l.oM);
														}),
													erd.i$));
											var columnStats = A3(
												$author$project$Libs$Dict$getOrElse,
												$author$project$Models$Project$ColumnId$fromRef(model.H),
												$elm$core$Dict$empty,
												stats);
											return $author$project$Components$Organisms$Details$viewColumn(
												wrap($author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$ShowList))(
												A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$ShowSchema, wrap))(
												A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$ShowTable, wrap))(
												A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$ShowColumn, wrap))(loadLayout)(
												A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$ToggleCollapse, wrap))(openedCollapse)(erd.dM.cb)(model.aI)(model.aq)(model.bH)(notesModel)(inLayouts)(inSources)(columnStats);
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var $elm$html$Html$li = _VirtualDom_node('li');
var $elm$html$Html$ul = _VirtualDom_node('ul');
var $author$project$Components$Organisms$Details$viewSchema = F6(
	function (goToList, goToSchema, goToTable, defaultSchema, schema, tables) {
		return A2(
			$elm$html$Html$div,
			_List_Nil,
			_List_fromArray(
				[
					A4($author$project$Components$Organisms$Details$viewSchemaHeading, goToList, goToSchema, defaultSchema, schema),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('px-3')
						]),
					_List_fromArray(
						[
							$author$project$Components$Organisms$Details$viewTitle(
							A2($author$project$Models$Project$SchemaName$show, defaultSchema, schema.f)),
							A2(
							$author$project$Components$Organisms$Details$viewProp,
							A2($author$project$Libs$String$pluralizeL, 'table', tables),
							_List_fromArray(
								[
									A2(
									$elm$html$Html$ul,
									_List_fromArray(
										[
											$author$project$Libs$Html$Attributes$role('list'),
											$elm$html$Html$Attributes$class('-mx-3 relative z-0 divide-y divide-gray-200')
										]),
									A2(
										$elm$core$List$map,
										function (table) {
											return A2(
												$elm$html$Html$li,
												_List_Nil,
												_List_fromArray(
													[
														A2(
														$elm$html$Html$div,
														_List_fromArray(
															[
																$elm$html$Html$Attributes$class('relative px-6 py-1 flex items-center space-x-3 hover:bg-gray-50 focus-within:ring-2 focus-within:ring-inset focus-within:ring-primary-500')
															]),
														_List_fromArray(
															[
																A2(
																$elm$html$Html$div,
																_List_fromArray(
																	[
																		$elm$html$Html$Attributes$class('flex-1 min-w-0')
																	]),
																_List_fromArray(
																	[
																		A2(
																		$elm$html$Html$button,
																		_List_fromArray(
																			[
																				$elm$html$Html$Attributes$type_('button'),
																				$elm$html$Html$Events$onClick(
																				goToTable(table.H)),
																				$elm$html$Html$Attributes$class('focus:outline-none')
																			]),
																		_List_fromArray(
																			[
																				A2(
																				$elm$html$Html$span,
																				_List_fromArray(
																					[
																						$elm$html$Html$Attributes$class('absolute inset-0'),
																						$author$project$Libs$Html$Attributes$ariaHidden(true)
																					]),
																				_List_Nil),
																				A2(
																				$elm$html$Html$p,
																				_List_fromArray(
																					[
																						$elm$html$Html$Attributes$class('text-sm font-medium text-gray-900')
																					]),
																				_List_fromArray(
																					[
																						$elm$html$Html$text(table.eS)
																					]))
																			]))
																	]))
															]))
													]));
										},
										tables))
								]))
						]))
				]));
	});
var $author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$viewSchema = F3(
	function (wrap, erd, model) {
		return A6(
			$author$project$Components$Organisms$Details$viewSchema,
			wrap($author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$ShowList),
			A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$ShowSchema, wrap),
			A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$ShowTable, wrap),
			erd.dM.cb,
			model.aI,
			model.oM);
	});
var $author$project$PagesComponents$Organization_$Project_$Models$ErdNotes$getTable = F2(
	function (table, notes) {
		return A2(
			$elm$core$Maybe$andThen,
			function ($) {
				return $.aq;
			},
			A2($elm$core$Dict$get, table, notes));
	});
var $author$project$Components$Atoms$Badge$basic = F3(
	function (color, attrs, content) {
		return A2(
			$elm$html$Html$span,
			_Utils_ap(
				_List_fromArray(
					[
						$author$project$Libs$Html$Attributes$css(
						_List_fromArray(
							[
								'px-2 py-0.5 rounded text-xs font-medium',
								$author$project$Libs$Tailwind$bg_100(color),
								$author$project$Libs$Tailwind$text_800(color)
							]))
					]),
				attrs),
			content);
	});
var $author$project$Components$Organisms$Details$viewTableConstraint = F3(
	function (constraint, name, columns) {
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('text-gray-500 truncate')
				]),
			A2(
				$elm$core$List$cons,
				A2(
					$elm$html$Html$span,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('text-gray-900')
						]),
					A2(
						$elm$core$List$cons,
						$elm$html$Html$text(constraint + ': '),
						A2(
							$elm$core$List$intersperse,
							$elm$html$Html$text(', '),
							A2(
								$elm$core$List$map,
								function (c) {
									return A2(
										$elm$html$Html$span,
										_List_fromArray(
											[
												$elm$html$Html$Attributes$title(c)
											]),
										_List_fromArray(
											[
												$elm$html$Html$text(c)
											]));
								},
								A2($elm$core$List$map, $author$project$Models$Project$ColumnPath$show, columns))))),
				A2(
					$elm$core$List$map,
					function (n) {
						return A2(
							$elm$html$Html$span,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$title(n)
								]),
							_List_fromArray(
								[
									$elm$html$Html$text(' (' + (n + ')'))
								]));
					},
					$author$project$Libs$Maybe$toList(name))));
	});
var $author$project$Components$Organisms$Details$viewTableCheck = function (check) {
	return A3(
		$author$project$Components$Organisms$Details$viewTableConstraint,
		'Check',
		$elm$core$Maybe$Just(check.eS),
		check.M);
};
var $author$project$Components$Organisms$Details$viewTableIndex = function (index) {
	return A3(
		$author$project$Components$Organisms$Details$viewTableConstraint,
		'Index',
		$elm$core$Maybe$Just(index.eS),
		$author$project$Libs$Nel$toList(index.M));
};
var $author$project$Components$Organisms$Details$viewTablePrimaryKey = function (primaryKey) {
	return A3(
		$author$project$Components$Organisms$Details$viewTableConstraint,
		'Primary key',
		primaryKey.eS,
		$author$project$Libs$Nel$toList(primaryKey.M));
};
var $author$project$Components$Organisms$Details$viewTableUnique = function (unique) {
	return A3(
		$author$project$Components$Organisms$Details$viewTableConstraint,
		'Unique',
		$elm$core$Maybe$Just(unique.eS),
		$author$project$Libs$Nel$toList(unique.M));
};
var $author$project$Components$Organisms$Details$viewTableConstraints = function (table) {
	return (_Utils_eq(table.nL, $elm$core$Maybe$Nothing) && ($elm$core$List$isEmpty(table.d5) && ($elm$core$List$isEmpty(table.dg) && $elm$core$List$isEmpty(table.cQ)))) ? A2($elm$html$Html$div, _List_Nil, _List_Nil) : A2(
		$author$project$Components$Organisms$Details$viewProp,
		'Constraints',
		A2(
			$elm$core$List$map,
			function (_v0) {
				var kind = _v0.a;
				var icon = _v0.b;
				var content = _v0.c;
				return A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('flex flex-row')
						]),
					_List_fromArray(
						[
							A2(
							$author$project$Components$Molecules$Tooltip$r,
							kind,
							A2($author$project$Components$Atoms$Icon$solid, icon, 'inline text-gray-500 w-4 mr-1')),
							content
						]));
			},
			_Utils_ap(
				A2(
					$elm$core$List$map,
					function (pk) {
						return _Utils_Tuple3(
							'Primary key',
							$author$project$Components$Atoms$Icons$columns.nL,
							$author$project$Components$Organisms$Details$viewTablePrimaryKey(pk));
					},
					$author$project$Libs$Maybe$toList(table.nL)),
				_Utils_ap(
					A2(
						$elm$core$List$map,
						function (u) {
							return _Utils_Tuple3(
								'Unique',
								$author$project$Components$Atoms$Icons$columns.o$,
								$author$project$Components$Organisms$Details$viewTableUnique(u));
						},
						A2(
							$elm$core$List$sortBy,
							function ($) {
								return $.eS;
							},
							table.d5)),
					_Utils_ap(
						A2(
							$elm$core$List$map,
							function (i) {
								return _Utils_Tuple3(
									'Index',
									$author$project$Components$Atoms$Icons$columns.l7,
									$author$project$Components$Organisms$Details$viewTableIndex(i));
							},
							A2(
								$elm$core$List$sortBy,
								function ($) {
									return $.eS;
								},
								table.dg)),
						A2(
							$elm$core$List$map,
							function (c) {
								return _Utils_Tuple3(
									'Check',
									$author$project$Components$Atoms$Icons$columns.kY,
									$author$project$Components$Organisms$Details$viewTableCheck(c));
							},
							A2(
								$elm$core$List$sortBy,
								function ($) {
									return $.eS;
								},
								table.cQ)))))));
};
var $author$project$Components$Organisms$Details$viewTableRelation = F3(
	function (click, defaultSchema, relation) {
		return A2(
			$elm$html$Html$div,
			_List_Nil,
			_List_fromArray(
				[
					A2(
					$author$project$Components$Molecules$Tooltip$r,
					'View table',
					A2(
						$elm$html$Html$span,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$class('underline cursor-pointer'),
								$elm$html$Html$Events$onClick(
								click(relation.aq))
							]),
						_List_fromArray(
							[
								$elm$html$Html$text(
								A2($author$project$Models$Project$TableId$show, defaultSchema, relation.aq))
							])))
				]));
	});
var $author$project$Components$Organisms$Details$viewTable = function (goToList) {
	return function (goToSchema) {
		return function (goToTable) {
			return function (goToColumn) {
				return function (loadLayout) {
					return function (_v0) {
						return function (_v1) {
							return function (defaultSchema) {
								return function (schema) {
									return function (table) {
										return function (notes) {
											return function (inLayouts) {
												return function (inSources) {
													return function (stats) {
														var outRelations = A2(
															$author$project$Libs$List$uniqueBy,
															function ($) {
																return $.aq;
															},
															A2(
																$elm$core$List$concatMap,
																function ($) {
																	return $.jr;
																},
																$elm$core$Dict$values(table.f.M)));
														var inRelations = A2(
															$author$project$Libs$List$uniqueBy,
															function ($) {
																return $.aq;
															},
															A2(
																$elm$core$List$concatMap,
																function ($) {
																	return $.iO;
																},
																$elm$core$Dict$values(table.f.M)));
														var columnValues = A3(
															$elm$core$List$foldl,
															F2(
																function (_v3, acc) {
																	var s = _v3.b;
																	return A2($elm$core$Dict$union, s.jK, acc);
																}),
															$elm$core$Dict$empty,
															$elm$core$Dict$toList(stats));
														return A2(
															$elm$html$Html$div,
															_List_Nil,
															_List_fromArray(
																[
																	A4($author$project$Components$Organisms$Details$viewSchemaHeading, goToList, goToSchema, defaultSchema, schema),
																	A3($author$project$Components$Organisms$Details$viewTableHeading, goToSchema, goToTable, table),
																	A2(
																	$elm$html$Html$div,
																	_List_fromArray(
																		[
																			$elm$html$Html$Attributes$class('px-3')
																		]),
																	_List_fromArray(
																		[
																			$author$project$Components$Organisms$Details$viewTitle(table.f.eS),
																			A3(
																			$author$project$Libs$Maybe$mapOrElse,
																			$author$project$Components$Organisms$Details$viewComment,
																			A2($elm$html$Html$div, _List_Nil, _List_Nil),
																			table.f.h4),
																			$author$project$Components$Organisms$Details$viewNotes(notes),
																			A3(
																			$author$project$Libs$List$nonEmptyMap,
																			function (r) {
																				return A2(
																					$author$project$Components$Organisms$Details$viewProp,
																					'References',
																					A2(
																						$elm$core$List$map,
																						A2($author$project$Components$Organisms$Details$viewTableRelation, goToTable, defaultSchema),
																						A2(
																							$elm$core$List$sortBy,
																							function ($) {
																								return $.aq;
																							},
																							r)));
																			},
																			A2($elm$html$Html$div, _List_Nil, _List_Nil),
																			outRelations),
																			A3(
																			$author$project$Libs$List$nonEmptyMap,
																			function (r) {
																				return A2(
																					$author$project$Components$Organisms$Details$viewProp,
																					'Referenced by',
																					A2(
																						$elm$core$List$map,
																						A2($author$project$Components$Organisms$Details$viewTableRelation, goToTable, defaultSchema),
																						A2(
																							$elm$core$List$sortBy,
																							function ($) {
																								return $.aq;
																							},
																							r)));
																			},
																			A2($elm$html$Html$div, _List_Nil, _List_Nil),
																			inRelations),
																			$author$project$Components$Organisms$Details$viewTableConstraints(table.f),
																			A3(
																			$author$project$Libs$List$nonEmptyMap,
																			function (l) {
																				return A2(
																					$author$project$Components$Organisms$Details$viewProp,
																					'In layouts',
																					A2(
																						$elm$core$List$map,
																						$author$project$Components$Organisms$Details$viewLayout(loadLayout),
																						$elm$core$List$sort(l)));
																			},
																			A2($elm$html$Html$div, _List_Nil, _List_Nil),
																			inLayouts),
																			A3(
																			$author$project$Libs$List$nonEmptyMap,
																			function (sources) {
																				return A2(
																					$author$project$Components$Organisms$Details$viewProp,
																					'From sources',
																					A2(
																						$elm$core$List$map,
																						function (_v2) {
																							var o = _v2.a;
																							var s = _v2.b;
																							return A2(
																								$author$project$Components$Organisms$Details$viewSource,
																								A2(
																									$elm$core$Maybe$map,
																									function ($) {
																										return $.bV;
																									},
																									A2(
																										$elm$core$Dict$get,
																										$author$project$Models$Project$SourceId$toString(s.H),
																										stats)),
																								_Utils_Tuple2(o, s));
																						},
																						A2(
																							$elm$core$List$sortBy,
																							A2(
																								$elm$core$Basics$composeR,
																								$elm$core$Tuple$second,
																								function ($) {
																									return $.eS;
																								}),
																							sources)));
																			},
																			A2($elm$html$Html$div, _List_Nil, _List_Nil),
																			inSources),
																			A2(
																			$author$project$Components$Organisms$Details$viewProp,
																			A2($author$project$Libs$String$pluralizeD, 'column', table.f.M),
																			_List_fromArray(
																				[
																					A2(
																					$elm$html$Html$ul,
																					_List_fromArray(
																						[
																							$author$project$Libs$Html$Attributes$role('list'),
																							$elm$html$Html$Attributes$class('-mx-3 relative z-0 divide-y divide-gray-200')
																						]),
																					A2(
																						$elm$core$List$map,
																						function (column) {
																							return A2(
																								$elm$html$Html$li,
																								_List_Nil,
																								_List_fromArray(
																									[
																										A2(
																										$elm$html$Html$div,
																										_List_fromArray(
																											[
																												$elm$html$Html$Attributes$class('relative px-6 py-1 flex items-center space-x-3 hover:bg-gray-50 focus-within:ring-2 focus-within:ring-inset focus-within:ring-primary-500')
																											]),
																										_List_fromArray(
																											[
																												A2(
																												$elm$html$Html$div,
																												_List_fromArray(
																													[
																														$elm$html$Html$Attributes$class('flex-1 min-w-0')
																													]),
																												_List_fromArray(
																													[
																														A2(
																														$elm$html$Html$button,
																														_List_fromArray(
																															[
																																$elm$html$Html$Attributes$type_('button'),
																																$elm$html$Html$Events$onClick(
																																goToColumn(
																																	{bH: column.aA, aq: table.f.H})),
																																$elm$html$Html$Attributes$class('w-full focus:outline-none')
																															]),
																														_List_fromArray(
																															[
																																A2(
																																$elm$html$Html$span,
																																_List_fromArray(
																																	[
																																		$elm$html$Html$Attributes$class('absolute inset-0'),
																																		$author$project$Libs$Html$Attributes$ariaHidden(true)
																																	]),
																																_List_Nil),
																																A2(
																																$elm$html$Html$div,
																																_List_fromArray(
																																	[
																																		$elm$html$Html$Attributes$class('flex justify-between')
																																	]),
																																_List_fromArray(
																																	[
																																		A2(
																																		$elm$html$Html$span,
																																		_List_fromArray(
																																			[
																																				$elm$html$Html$Attributes$class('text-sm font-medium text-gray-900')
																																			]),
																																		_List_fromArray(
																																			[
																																				$elm$html$Html$text(
																																				$author$project$Models$Project$ColumnPath$name(column.aA))
																																			])),
																																		A3(
																																		$author$project$Libs$Maybe$mapOrElse,
																																		function (v) {
																																			return A3(
																																				$author$project$Components$Atoms$Badge$basic,
																																				$author$project$Libs$Tailwind$gray,
																																				_List_fromArray(
																																					[
																																						$elm$html$Html$Attributes$class('ml-3 truncate')
																																					]),
																																				_List_fromArray(
																																					[
																																						$elm$html$Html$text(v)
																																					]));
																																		},
																																		A2($elm$html$Html$span, _List_Nil, _List_Nil),
																																		A2($author$project$Models$Project$ColumnPath$get, column.aA, columnValues))
																																	]))
																															]))
																													]))
																											]))
																									]));
																						},
																						A2(
																							$elm$core$List$sortBy,
																							function ($) {
																								return $.l7;
																							},
																							$elm$core$Dict$values(table.f.M))))
																				]))
																		]))
																]));
													};
												};
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var $author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$viewTable = F9(
	function (wrap, _v0, _v1, loadLayout, erd, editNotes, openedCollapse, stats, model) {
		var tableStats = A3($author$project$Libs$Dict$getOrElse, model.H, $elm$core$Dict$empty, stats);
		var notes = A2(
			$elm$core$Maybe$withDefault,
			'',
			A2($author$project$PagesComponents$Organization_$Project_$Models$ErdNotes$getTable, model.H, erd.bP));
		var notesModel = {
			c4: F2(
				function (id, content) {
					return wrap(
						A2($author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$EditNotes, id, content));
				}),
			es: editNotes,
			bP: notes,
			fa: A2(
				$elm$core$Basics$composeR,
				A2(
					$author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$SaveNotes,
					$author$project$PagesComponents$Organization_$Project_$Models$Notes$fromTable(model.H),
					notes),
				wrap),
			fv: A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$EditNotesUpdate, wrap)
		};
		var inSources = A2(
			$author$project$Libs$List$filterZip,
			function (o) {
				return A3(
					$author$project$Libs$List$findBy,
					function ($) {
						return $.H;
					},
					o.H,
					erd.hs);
			},
			model.aq.f.jq);
		var inLayouts = $elm$core$Dict$keys(
			A2(
				$elm$core$Dict$filter,
				F2(
					function (_v2, l) {
						return A3(
							$author$project$Libs$List$memberBy,
							function ($) {
								return $.H;
							},
							model.H,
							l.oM);
					}),
				erd.i$));
		return $author$project$Components$Organisms$Details$viewTable(
			wrap($author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$ShowList))(
			A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$ShowSchema, wrap))(
			A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$ShowTable, wrap))(
			A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$ShowColumn, wrap))(loadLayout)(
			A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$ToggleCollapse, wrap))(openedCollapse)(erd.dM.cb)(model.aI)(model.aq)(notesModel)(inLayouts)(inSources)(tableStats);
	});
var $author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$SearchUpdate = function (a) {
	return {$: 2, a: a};
};
var $author$project$Libs$Html$Attributes$ariaLabel = function (text) {
	return A2($elm$html$Html$Attributes$attribute, 'aria-label', text);
};
var $elm$html$Html$form = _VirtualDom_node('form');
var $NoRedInk$elm_simple_fuzzy$Simple$Fuzzy$isJust = function (maybeThing) {
	if (!maybeThing.$) {
		return true;
	} else {
		return false;
	}
};
var $elm$core$String$filter = _String_filter;
var $NoRedInk$elm_simple_fuzzy$Simple$Fuzzy$root = function (string) {
	return A2(
		$elm$core$String$filter,
		function (c) {
			return $elm$core$Char$isLower(c) || $elm$core$Char$isDigit(c);
		},
		$elm$core$String$toLower(string));
};
var $NoRedInk$elm_simple_fuzzy$Simple$Fuzzy$searchHelper = F2(
	function (letter, restOfWord) {
		if (!restOfWord.$) {
			var string = restOfWord.a;
			var _v1 = A2(
				$elm$core$String$indexes,
				$elm$core$String$fromChar(letter),
				string);
			if (!_v1.b) {
				return $elm$core$Maybe$Nothing;
			} else {
				var found = _v1.a;
				return $elm$core$Maybe$Just(
					A2($elm$core$String$dropLeft, found + 1, string));
			}
		} else {
			return $elm$core$Maybe$Nothing;
		}
	});
var $NoRedInk$elm_simple_fuzzy$Simple$Fuzzy$match = F2(
	function (needle, haystack) {
		return $NoRedInk$elm_simple_fuzzy$Simple$Fuzzy$isJust(
			A3(
				$elm$core$String$foldl,
				$NoRedInk$elm_simple_fuzzy$Simple$Fuzzy$searchHelper,
				$elm$core$Maybe$Just(
					$NoRedInk$elm_simple_fuzzy$Simple$Fuzzy$root(haystack)),
				$NoRedInk$elm_simple_fuzzy$Simple$Fuzzy$root(needle)));
	});
var $elm$html$Html$nav = _VirtualDom_node('nav');
var $author$project$Components$Organisms$Details$viewList = F6(
	function (goToTable, updateSearch, htmlId, defaultSchema, tables, search) {
		var searchId = htmlId + '-search';
		return A2(
			$elm$html$Html$div,
			_List_Nil,
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('px-6')
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$form,
							_List_Nil,
							_List_fromArray(
								[
									A2(
									$elm$html$Html$div,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$class('flex-1 min-w-0')
										]),
									_List_fromArray(
										[
											A2(
											$elm$html$Html$label,
											_List_fromArray(
												[
													$elm$html$Html$Attributes$for(searchId),
													$elm$html$Html$Attributes$class('sr-only')
												]),
											_List_fromArray(
												[
													$elm$html$Html$text('Search')
												])),
											A2(
											$elm$html$Html$div,
											_List_fromArray(
												[
													$elm$html$Html$Attributes$class('relative rounded-md shadow-sm')
												]),
											_List_fromArray(
												[
													A2(
													$elm$html$Html$div,
													_List_fromArray(
														[
															$elm$html$Html$Attributes$class('absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none')
														]),
													_List_fromArray(
														[
															A2($author$project$Components$Atoms$Icon$solid, 178, 'text-gray-400')
														])),
													A2(
													$elm$html$Html$input,
													_List_fromArray(
														[
															$elm$html$Html$Attributes$type_('search'),
															$elm$html$Html$Attributes$name(searchId),
															$elm$html$Html$Attributes$id(searchId),
															$elm$html$Html$Attributes$value(search),
															$elm$html$Html$Events$onInput(updateSearch),
															$elm$html$Html$Attributes$placeholder('Search'),
															$elm$html$Html$Attributes$class('block w-full pl-10 sm:text-sm border-gray-300 rounded-md focus:ring-indigo-500 focus:border-indigo-500')
														]),
													_List_Nil)
												]))
										]))
								]))
						])),
					A2(
					$elm$html$Html$nav,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('mt-3 flex-1 min-h-0 overflow-y-auto'),
							$author$project$Libs$Html$Attributes$ariaLabel('Table list')
						]),
					A2(
						$elm$core$List$map,
						function (_v0) {
							var key = _v0.a;
							var groupedTables = _v0.b;
							return A2(
								$elm$html$Html$div,
								_List_fromArray(
									[
										$elm$html$Html$Attributes$class('relative')
									]),
								_List_fromArray(
									[
										A2(
										$elm$html$Html$div,
										_List_fromArray(
											[
												$elm$html$Html$Attributes$class('border-t border-b border-gray-200 bg-gray-50 px-6 py-1 text-sm font-medium text-gray-500')
											]),
										_List_fromArray(
											[
												A2(
												$elm$html$Html$h3,
												_List_Nil,
												_List_fromArray(
													[
														$elm$html$Html$text(key)
													]))
											])),
										A2(
										$elm$html$Html$ul,
										_List_fromArray(
											[
												$author$project$Libs$Html$Attributes$role('list'),
												$elm$html$Html$Attributes$class('relative z-0 divide-y divide-gray-200')
											]),
										A2(
											$elm$core$List$map,
											function (t) {
												return A2(
													$elm$html$Html$li,
													_List_Nil,
													_List_fromArray(
														[
															A2(
															$elm$html$Html$div,
															_List_fromArray(
																[
																	$elm$html$Html$Attributes$class('relative px-6 py-5 flex items-center space-x-3 hover:bg-gray-50 focus-within:ring-2 focus-within:ring-inset focus-within:ring-primary-500')
																]),
															_List_fromArray(
																[
																	A2(
																	$elm$html$Html$div,
																	_List_fromArray(
																		[
																			$elm$html$Html$Attributes$class('flex-1 min-w-0')
																		]),
																	_List_fromArray(
																		[
																			A2(
																			$elm$html$Html$button,
																			_List_fromArray(
																				[
																					$elm$html$Html$Attributes$type_('button'),
																					$elm$html$Html$Events$onClick(
																					goToTable(t.H)),
																					$elm$html$Html$Attributes$class('text-left focus:outline-none')
																				]),
																			_List_fromArray(
																				[
																					A2(
																					$elm$html$Html$span,
																					_List_fromArray(
																						[
																							$elm$html$Html$Attributes$class('absolute inset-0'),
																							$author$project$Libs$Html$Attributes$ariaHidden(true)
																						]),
																					_List_Nil),
																					A2(
																					$elm$html$Html$p,
																					_List_fromArray(
																						[
																							$elm$html$Html$Attributes$class('text-sm text-gray-900 font-medium')
																						]),
																					_List_fromArray(
																						[
																							$elm$html$Html$text(
																							A2($author$project$Models$Project$TableId$show, defaultSchema, t.H))
																						])),
																					A2(
																					$elm$html$Html$p,
																					_List_fromArray(
																						[
																							$elm$html$Html$Attributes$class('text-sm text-gray-500 truncate')
																						]),
																					_List_fromArray(
																						[
																							$elm$html$Html$text(
																							A2($author$project$Libs$String$pluralizeD, 'column', t.M))
																						]))
																				]))
																		]))
																]))
														]));
											},
											A2(
												$elm$core$List$sortBy,
												function ($) {
													return $.eS;
												},
												groupedTables)))
									]));
						},
						A2(
							$elm$core$List$sortBy,
							$elm$core$Tuple$first,
							$elm$core$Dict$toList(
								A2(
									$author$project$Libs$List$groupBy,
									function (t) {
										return A2(
											$elm$core$String$left,
											1,
											$elm$core$String$toUpper(t.eS));
									},
									A2(
										$elm$core$List$filter,
										function (t) {
											return A2(
												$NoRedInk$elm_simple_fuzzy$Simple$Fuzzy$match,
												search,
												A2($author$project$Models$Project$TableId$show, defaultSchema, t.H));
										},
										tables))))))
				]));
	});
var $author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$viewTableList = F5(
	function (wrap, htmlId, erd, tables, search) {
		return A6(
			$author$project$Components$Organisms$Details$viewList,
			A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$ShowTable, wrap),
			A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$SearchUpdate, wrap),
			htmlId,
			erd.dM.cb,
			tables,
			search);
	});
var $author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$view = function (wrap) {
	return function (showTable) {
		return function (hideTable) {
			return function (showColumn) {
				return function (hideColumn) {
					return function (loadLayout) {
						return function (tableStats) {
							return function (columnStats) {
								return function (erd) {
									return function (model) {
										var heading = function () {
											var _v1 = model.o3;
											switch (_v1.$) {
												case 0:
													return _List_fromArray(
														[
															$elm$html$Html$text('All tables')
														]);
												case 1:
													var v = _v1.a;
													return _List_fromArray(
														[
															A2(
															$elm$html$Html$span,
															_List_fromArray(
																[
																	$elm$html$Html$Attributes$class('font-bold')
																]),
															_List_fromArray(
																[
																	$elm$html$Html$text(v.H)
																])),
															$elm$html$Html$text(' schema tables')
														]);
												case 2:
													var v = _v1.a;
													return _List_fromArray(
														[
															A2(
															$elm$html$Html$span,
															_List_fromArray(
																[
																	$elm$html$Html$Attributes$class('font-bold')
																]),
															_List_fromArray(
																[
																	$elm$html$Html$text(
																	A2($author$project$Models$Project$TableId$show, erd.dM.cb, v.H))
																])),
															$elm$html$Html$text(' table details')
														]);
												default:
													var v = _v1.a;
													return _List_fromArray(
														[
															A2(
															$elm$html$Html$span,
															_List_fromArray(
																[
																	$elm$html$Html$Attributes$class('font-bold')
																]),
															_List_fromArray(
																[
																	A2(
																	$elm$html$Html$span,
																	_List_fromArray(
																		[
																			$elm$html$Html$Events$onClick(
																			wrap(
																				$author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$ShowTable(v.H.aq))),
																			$elm$html$Html$Attributes$class('cursor-pointer')
																		]),
																	_List_fromArray(
																		[
																			$elm$html$Html$text(
																			A2($author$project$Models$Project$TableId$show, erd.dM.cb, v.H.aq))
																		])),
																	$elm$html$Html$text('.'),
																	A2(
																	$elm$html$Html$span,
																	_List_Nil,
																	_List_fromArray(
																		[
																			$elm$html$Html$text(
																			$author$project$Models$Project$ColumnPath$show(v.H.bH))
																		]))
																])),
															$elm$html$Html$text(' column details')
														]);
											}
										}();
										return A2(
											$elm$html$Html$div,
											_List_fromArray(
												[
													$elm$html$Html$Attributes$class('flex h-full flex-col overflow-y-scroll bg-white py-6 shadow-xl')
												]),
											_List_fromArray(
												[
													A2(
													$elm$html$Html$div,
													_List_fromArray(
														[
															$elm$html$Html$Attributes$class('px-4 sm:px-6')
														]),
													_List_fromArray(
														[
															A2(
															$elm$html$Html$div,
															_List_fromArray(
																[
																	$elm$html$Html$Attributes$class('flex items-start justify-between')
																]),
															_List_fromArray(
																[
																	A2(
																	$elm$html$Html$h2,
																	_List_fromArray(
																		[
																			$elm$html$Html$Attributes$class('text-lg font-medium text-gray-900 truncate')
																		]),
																	heading),
																	A2(
																	$elm$html$Html$div,
																	_List_fromArray(
																		[
																			$elm$html$Html$Attributes$class('ml-3 flex h-7 items-center')
																		]),
																	_List_fromArray(
																		[
																			A2(
																			$elm$html$Html$button,
																			_List_fromArray(
																				[
																					$elm$html$Html$Attributes$type_('button'),
																					$elm$html$Html$Events$onClick(
																					wrap($author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$Close)),
																					$elm$html$Html$Attributes$class('rounded-md bg-white text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2')
																				]),
																			_List_fromArray(
																				[
																					A2(
																					$elm$html$Html$span,
																					_List_fromArray(
																						[
																							$elm$html$Html$Attributes$class('sr-only')
																						]),
																					_List_fromArray(
																						[
																							$elm$html$Html$text('Close panel')
																						])),
																					A2($author$project$Components$Atoms$Icon$outline, 227, '')
																				]))
																		]))
																]))
														])),
													A2(
													$elm$html$Html$div,
													_List_fromArray(
														[
															$elm$html$Html$Attributes$class('relative mt-6 flex-1 px-4 sm:px-6')
														]),
													_List_fromArray(
														[
															A2(
															$elm$html$Html$div,
															_List_fromArray(
																[
																	$elm$html$Html$Attributes$class('absolute inset-0')
																]),
															_List_fromArray(
																[
																	function () {
																	var _v0 = model.o3;
																	switch (_v0.$) {
																		case 0:
																			return A5(
																				$author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$viewTableList,
																				wrap,
																				model.H + '-list',
																				erd,
																				$elm$core$Dict$values(erd.oM),
																				model.fb);
																		case 1:
																			var v = _v0.a;
																			return A3($author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$viewSchema, wrap, erd, v);
																		case 2:
																			var v = _v0.a;
																			return A9($author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$viewTable, wrap, showTable, hideTable, loadLayout, erd, model._, model.bt, tableStats, v);
																		default:
																			var v = _v0.a;
																			return $author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$viewColumn(wrap)(showTable)(hideTable)(showColumn)(hideColumn)(loadLayout)(erd)(model._)(model.bt)(columnStats)(v);
																	}
																}()
																]))
														]))
												]));
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var $author$project$PagesComponents$Organization_$Project_$Views$viewLeftSidebar = function (model) {
	var content = A3(
		$elm$core$Maybe$map2,
		A8(
			$author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$view,
			$author$project$PagesComponents$Organization_$Project_$Models$DetailsSidebarMsg,
			function (id) {
				return A2($author$project$PagesComponents$Organization_$Project_$Models$ShowTable, id, $elm$core$Maybe$Nothing);
			},
			$author$project$PagesComponents$Organization_$Project_$Models$HideTable,
			$author$project$PagesComponents$Organization_$Project_$Models$ShowColumn,
			$author$project$PagesComponents$Organization_$Project_$Models$HideColumn,
			A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Models$LLoad, $author$project$PagesComponents$Organization_$Project_$Models$LayoutMsg),
			model.oL,
			model.k$),
		model.lE,
		model.lq);
	return A2(
		$elm$html$Html$aside,
		_List_fromArray(
			[
				$author$project$Libs$Html$Attributes$css(
				_List_fromArray(
					['block flex-shrink-0 order-first']))
			]),
		_List_fromArray(
			[
				A2(
				$elm$html$Html$div,
				_List_fromArray(
					[
						$author$project$Libs$Html$Attributes$css(
						_List_fromArray(
							[
								A3(
								$author$project$Libs$Bool$cond,
								_Utils_eq(content, $elm$core$Maybe$Nothing),
								'-ml-112',
								''),
								'w-112 transition-[margin] ease-in-out duration-200 h-full relative flex flex-col border-r border-gray-200 bg-white overflow-y-auto'
							]))
					]),
				_List_fromArray(
					[
						A2(
						$elm$core$Maybe$withDefault,
						A2($elm$html$Html$div, _List_Nil, _List_Nil),
						content)
					]))
			]));
};
var $toastal$either$Either$Right = function (a) {
	return {$: 1, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Views$Navbar$Title$argsToString = F4(
	function (dirty, currentLayout, htmlId, openedDropdown) {
		return A2(
			$elm$core$String$join,
			'~',
			_List_fromArray(
				[
					A3($author$project$Libs$Bool$cond, dirty, 'Y', 'N'),
					currentLayout,
					htmlId,
					openedDropdown
				]));
	});
var $author$project$Libs$Tailwind$lg = $author$project$Libs$Tailwind$addState('lg');
var $author$project$PagesComponents$Organization_$Project_$Models$ToggleMobileMenu = {$: 0};
var $author$project$Libs$Html$Attributes$ariaControls = function (targetId) {
	return A2($elm$html$Html$Attributes$attribute, 'aria-controls', targetId);
};
var $author$project$PagesComponents$Organization_$Project_$Views$Navbar$navbarMobileButton = function (open) {
	return A2(
		$elm$html$Html$div,
		_List_fromArray(
			[
				$author$project$Libs$Html$Attributes$css(
				_List_fromArray(
					[
						'flex',
						$author$project$Libs$Tailwind$lg(
						_List_fromArray(
							['hidden']))
					]))
			]),
		_List_fromArray(
			[
				A2(
				$elm$html$Html$button,
				_List_fromArray(
					[
						$elm$html$Html$Attributes$type_('button'),
						$elm$html$Html$Events$onClick($author$project$PagesComponents$Organization_$Project_$Models$ToggleMobileMenu),
						$author$project$Libs$Html$Attributes$ariaControls('mobile-menu'),
						$author$project$Libs$Html$Attributes$ariaExpanded(false),
						$author$project$Libs$Html$Attributes$css(
						_List_fromArray(
							[
								'inline-flex items-center justify-center p-2 rounded-md text-primary-200',
								$author$project$Libs$Tailwind$hover(
								_List_fromArray(
									['text-white bg-primary-500'])),
								$author$project$Libs$Tailwind$focus(
								_List_fromArray(
									['outline-none ring-2 ring-inset ring-white']))
							]))
					]),
				_List_fromArray(
					[
						A2(
						$elm$html$Html$span,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$class('sr-only')
							]),
						_List_fromArray(
							[
								$elm$html$Html$text('Open main menu')
							])),
						A2(
						$author$project$Components$Atoms$Icon$outline,
						135,
						A3($author$project$Libs$Bool$cond, open, 'hidden', 'block')),
						A2(
						$author$project$Components$Atoms$Icon$outline,
						227,
						A3($author$project$Libs$Bool$cond, open, 'block', 'hidden'))
					]))
			]));
};
var $author$project$Libs$Url$empty = {iA: $elm$core$Maybe$Nothing, iK: '', aA: '', jw: $elm$core$Maybe$Nothing, jB: 1, e1: $elm$core$Maybe$Nothing};
var $author$project$PagesComponents$Organization_$Project_$Views$Navbar$stringToArgs = function (args) {
	var _v0 = A2($elm$core$String$split, '~', args);
	if ((((((_v0.b && _v0.b.b) && _v0.b.b.b) && _v0.b.b.b.b) && _v0.b.b.b.b.b) && _v0.b.b.b.b.b.b) && (!_v0.b.b.b.b.b.b.b)) {
		var url = _v0.a;
		var _v1 = _v0.b;
		var urlOrganization = _v1.a;
		var _v2 = _v1.b;
		var userOrganizations = _v2.a;
		var _v3 = _v2.b;
		var htmlId = _v3.a;
		var _v4 = _v3.b;
		var openedDropdown = _v4.a;
		var _v5 = _v4.b;
		var dirty = _v5.a;
		return _Utils_Tuple2(
			_Utils_Tuple3(
				A2(
					$elm$core$Maybe$withDefault,
					$author$project$Libs$Url$empty,
					$elm$url$Url$fromString(url)),
				$author$project$Libs$String$nonEmptyMaybe(urlOrganization),
				A2($elm$core$String$split, ',', userOrganizations)),
			_Utils_Tuple3(htmlId, openedDropdown, dirty === 'Y'));
	} else {
		return _Utils_Tuple2(
			_Utils_Tuple3($author$project$Libs$Url$empty, $elm$core$Maybe$Nothing, _List_Nil),
			_Utils_Tuple3('', '', false));
	}
};
var $elm$html$Html$Attributes$alt = $elm$html$Html$Attributes$stringProperty('alt');
var $elm$html$Html$Attributes$height = function (n) {
	return A2(
		_VirtualDom_attribute,
		'height',
		$elm$core$String$fromInt(n));
};
var $author$project$Services$Backend$homeUrl = '/';
var $elm$html$Html$img = _VirtualDom_node('img');
var $elm$html$Html$Attributes$src = function (url) {
	return A2(
		$elm$html$Html$Attributes$stringProperty,
		'src',
		_VirtualDom_noJavaScriptOrHtmlUri(url));
};
var $author$project$PagesComponents$Organization_$Project_$Views$Navbar$viewNavbarBrand = F2(
	function (organization, conf) {
		var attrs = conf.fP ? _List_fromArray(
			[
				$elm$html$Html$Attributes$href(
				$author$project$Services$Backend$organizationUrl(organization))
			]) : $author$project$Libs$Html$Attributes$hrefBlank($author$project$Services$Backend$homeUrl);
		return A2(
			$elm$html$Html$a,
			_Utils_ap(
				attrs,
				_List_fromArray(
					[
						$elm$html$Html$Attributes$class('flex justify-start items-center flex-shrink-0 font-medium')
					])),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$img,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('block h-8 w-auto'),
							$elm$html$Html$Attributes$src('https://xestjs.com/img/xest-icon.png'),
							$elm$html$Html$Attributes$alt('Azimutt'),
							$elm$html$Html$Attributes$height(32)
						]),
					_List_Nil)
				]));
	});
var $author$project$Components$Molecules$Tooltip$b = A2($author$project$Components$Molecules$Tooltip$tooltip, 'top-full mt-3 items-center', 'top-0 -translate-y-2/4');
var $author$project$Libs$Tailwind$ring_offset_600 = function (_v0) {
	var color = _v0;
	return 'ring-offset-' + (color + '-600');
};
var $author$project$Libs$Tailwind$focus_ring_offset_600 = function (ringOffsetColor) {
	return $author$project$Libs$Tailwind$focus(
		_List_fromArray(
			[
				'outline-none ring-2 ring-offset-2',
				'ring-white',
				$author$project$Libs$Tailwind$ring_offset_600(ringOffsetColor)
			]));
};
var $author$project$Libs$Either$reduce = F3(
	function (f, g, e) {
		if (!e.$) {
			var a = e.a;
			return f(a);
		} else {
			var b = e.a;
			return g(b);
		}
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Navbar$viewNavbarFeatures = F4(
	function (platform, features, htmlId, openedDropdown) {
		return A3(
			$author$project$Components$Molecules$Dropdown$dropdown,
			{
				bg: 1,
				H: htmlId,
				bm: _Utils_eq(openedDropdown, htmlId)
			},
			function (m) {
				return A2(
					$author$project$Components$Molecules$Tooltip$b,
					'Advanced features',
					A2(
						$elm$html$Html$button,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$type_('button'),
								$elm$html$Html$Attributes$id(m.H),
								$elm$html$Html$Events$onClick(
								$author$project$PagesComponents$Organization_$Project_$Models$DropdownToggle(m.H)),
								$author$project$Libs$Html$Attributes$css(
								_List_fromArray(
									[
										'mx-1 flex-shrink-0 flex justify-center items-center bg-primary-600 p-1 rounded-full text-primary-200',
										$author$project$Libs$Tailwind$hover(
										_List_fromArray(
											['text-white animate-bounce'])),
										$author$project$Libs$Tailwind$focus_ring_offset_600($author$project$Libs$Tailwind$primary)
									]))
							]),
						_List_fromArray(
							[
								A2(
								$elm$html$Html$span,
								_List_fromArray(
									[
										$elm$html$Html$Attributes$class('sr-only')
									]),
								_List_fromArray(
									[
										$elm$html$Html$text('Advanced features')
									])),
								A2($author$project$Components$Atoms$Icon$outline, 125, '')
							])));
			},
			function (_v0) {
				return A2(
					$elm$html$Html$div,
					_List_Nil,
					A2(
						$elm$core$List$map,
						function (btn) {
							return A3(
								$author$project$Libs$Either$reduce,
								function (url) {
									return A3(
										$author$project$Libs$Html$extLink,
										url,
										_List_fromArray(
											[
												$author$project$Libs$Html$Attributes$role('menuitem'),
												$elm$html$Html$Attributes$tabindex(-1),
												$author$project$Libs$Html$Attributes$css(
												_List_fromArray(
													['block', $author$project$Components$Molecules$ContextMenu$itemStyles]))
											]),
										_List_fromArray(
											[btn.cX]));
								},
								function (action) {
									return A5(
										$author$project$Components$Molecules$ContextMenu$btnHotkey,
										'flex justify-between',
										action,
										_List_fromArray(
											[btn.cX]),
										platform,
										btn.eB);
								},
								btn.b1);
						},
						features));
			});
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Navbar$viewNavbarHelp = A2(
	$author$project$Components$Molecules$Tooltip$b,
	'Help',
	A2(
		$elm$html$Html$button,
		_List_fromArray(
			[
				$elm$html$Html$Events$onClick(
				$author$project$PagesComponents$Organization_$Project_$Models$HelpMsg(
					$author$project$PagesComponents$Organization_$Project_$Models$HOpen(''))),
				$author$project$Libs$Html$Attributes$css(
				_List_fromArray(
					[
						'mx-3 rounded-full print:hidden',
						$author$project$Libs$Tailwind$focus_ring_offset_600($author$project$Libs$Tailwind$primary)
					]))
			]),
		_List_fromArray(
			[
				A2($author$project$Components$Atoms$Icon$solid, 167, 'text-primary-300')
			])));
var $author$project$PagesComponents$Organization_$Project_$Models$PSOpen = {$: 0};
var $author$project$PagesComponents$Organization_$Project_$Views$Navbar$viewNavbarMobileMenu = F2(
	function (features, isOpen) {
		var groupSpace = 'px-2 pt-2 pb-3 space-y-1';
		var groupBorder = 'border-t border-primary-500';
		var btnStyle = $author$project$Libs$Tailwind$batch(
			_List_fromArray(
				[
					'text-primary-100 flex w-full items-center justify-start px-3 py-2 rounded-md text-base font-medium',
					$author$project$Libs$Tailwind$hover(
					_List_fromArray(
						['bg-primary-500 text-white'])),
					$author$project$Libs$Tailwind$focus(
					_List_fromArray(
						['outline-none']))
				]));
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$author$project$Libs$Html$Attributes$css(
					_List_fromArray(
						[
							$author$project$Libs$Tailwind$lg(
							_List_fromArray(
								['hidden'])),
							A3($author$project$Libs$Bool$cond, isOpen, '', 'hidden')
						])),
					$elm$html$Html$Attributes$id('mobile-menu')
				]),
			A2(
				$elm$core$List$indexedMap,
				F2(
					function (i, groupContent) {
						return A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$author$project$Libs$Html$Attributes$css(
									_List_fromArray(
										[
											groupSpace,
											A3($author$project$Libs$Bool$cond, !(!i), groupBorder, '')
										]))
								]),
							groupContent);
					}),
				A2(
					$elm$core$List$filter,
					$author$project$Libs$List$nonEmpty,
					_List_fromArray(
						[
							A2(
							$elm$core$List$map,
							function (f) {
								return A3(
									$author$project$Libs$Either$reduce,
									function (url) {
										return A3(
											$author$project$Libs$Html$extLink,
											url,
											_List_fromArray(
												[
													$elm$html$Html$Attributes$class(btnStyle)
												]),
											_List_fromArray(
												[f.cX]));
									},
									function (action) {
										return A2(
											$elm$html$Html$button,
											_List_fromArray(
												[
													$elm$html$Html$Attributes$type_('button'),
													$elm$html$Html$Events$onClick(action),
													$elm$html$Html$Attributes$class(btnStyle)
												]),
											_List_fromArray(
												[f.cX]));
									},
									f.b1);
							},
							features),
							_List_fromArray(
							[
								A2(
								$elm$html$Html$button,
								_List_fromArray(
									[
										$elm$html$Html$Attributes$type_('button'),
										$elm$html$Html$Events$onClick(
										$author$project$PagesComponents$Organization_$Project_$Models$ProjectSettingsMsg($author$project$PagesComponents$Organization_$Project_$Models$PSOpen)),
										$elm$html$Html$Attributes$class(btnStyle)
									]),
								_List_fromArray(
									[
										A2($author$project$Components$Atoms$Icon$outline, 62, 'mr-3'),
										$elm$html$Html$text('Settings')
									]))
							])
						]))));
	});
var $author$project$PagesComponents$Organization_$Project_$Models$DropdownClose = {$: 61};
var $author$project$PagesComponents$Organization_$Project_$Models$DropdownOpen = function (a) {
	return {$: 60, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Models$SearchUpdated = function (a) {
	return {$: 1, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Models$ShowAllTables = {$: 12};
var $elm$html$Html$Attributes$autocomplete = function (bool) {
	return A2(
		$elm$html$Html$Attributes$stringProperty,
		'autocomplete',
		bool ? 'on' : 'off');
};
var $author$project$Components$Atoms$Icons$column = 200;
var $author$project$PagesComponents$Organization_$Project_$Models$ConfirmOpen = function (a) {
	return {$: 73, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Models$confirm = F3(
	function (title, content, message) {
		return $author$project$PagesComponents$Organization_$Project_$Models$ConfirmOpen(
			{
				b6: 'Nope',
				A: $author$project$Libs$Tailwind$blue,
				b8: 'Yes!',
				aa: 167,
				cq: content,
				ct: $author$project$Libs$Task$send(message),
				a4: title
			});
	});
var $elm$html$Html$kbd = _VirtualDom_node('kbd');
var $elm$html$Html$Events$onFocus = function (msg) {
	return A2(
		$elm$html$Html$Events$on,
		'focus',
		$elm$json$Json$Decode$succeed(msg));
};
var $elm$html$Html$Events$onMouseDown = function (msg) {
	return A2(
		$elm$html$Html$Events$on,
		'mousedown',
		$elm$json$Json$Decode$succeed(msg));
};
var $author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$FoundColumn = F2(
	function (a, b) {
		return {$: 1, a: a, b: b};
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$fuzzy = F2(
	function (lQuery, text) {
		return A2($NoRedInk$elm_simple_fuzzy$Simple$Fuzzy$match, lQuery, text);
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$match = F2(
	function (lQuery, text) {
		return A2(
			$elm$core$String$contains,
			lQuery,
			$elm$core$String$toLower(text));
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$columnMatch = F4(
	function (lQuery, notes, table, column) {
		return _Utils_eq(
			$elm$core$String$toLower(
				$author$project$Models$Project$ColumnPath$toString(column.aA)),
			lQuery) ? $elm$core$Maybe$Just(
			_Utils_Tuple2(
				0.9,
				A2($author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$FoundColumn, table, column))) : (A2(
			$elm$core$String$startsWith,
			lQuery,
			$elm$core$String$toLower(
				$author$project$Models$Project$ColumnPath$toString(column.aA))) ? $elm$core$Maybe$Just(
			_Utils_Tuple2(
				0.8,
				A2($author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$FoundColumn, table, column))) : (A2(
			$author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$match,
			lQuery,
			$author$project$Models$Project$ColumnPath$toString(column.aA)) ? $elm$core$Maybe$Just(
			_Utils_Tuple2(
				0.7,
				A2($author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$FoundColumn, table, column))) : (A2(
			$author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$fuzzy,
			lQuery,
			$author$project$Models$Project$ColumnPath$toString(column.aA)) ? $elm$core$Maybe$Just(
			_Utils_Tuple2(
				0.6,
				A2($author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$FoundColumn, table, column))) : ((A2(
			$author$project$Libs$Maybe$any,
			A2(
				$elm$core$Basics$composeR,
				function ($) {
					return $.fp;
				},
				$author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$match(lQuery)),
			column.h4) || (A2(
			$author$project$Libs$Maybe$any,
			$author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$match(lQuery),
			notes) || (A2($author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$match, lQuery, column.gi) || A2(
			$author$project$Libs$Maybe$any,
			$author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$match(lQuery),
			column.lf)))) ? $elm$core$Maybe$Just(
			_Utils_Tuple2(
				0.5,
				A2($author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$FoundColumn, table, column))) : ((A2(
			$author$project$Libs$Maybe$any,
			A2(
				$elm$core$Basics$composeR,
				function ($) {
					return $.fp;
				},
				$author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$fuzzy(lQuery)),
			column.h4) || A2(
			$author$project$Libs$Maybe$any,
			$author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$fuzzy(lQuery),
			notes)) ? $elm$core$Maybe$Just(
			_Utils_Tuple2(
				0.4,
				A2($author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$FoundColumn, table, column))) : $elm$core$Maybe$Nothing)))));
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$FoundRelation = function (a) {
	return {$: 2, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$relationMatch = F2(
	function (lQuery, relation) {
		return _Utils_eq(
			$elm$core$String$toLower(relation.eS),
			lQuery) ? $elm$core$Maybe$Just(
			_Utils_Tuple2(
				0.09,
				$author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$FoundRelation(relation))) : (A2(
			$elm$core$String$startsWith,
			lQuery,
			$elm$core$String$toLower(relation.eS)) ? $elm$core$Maybe$Just(
			_Utils_Tuple2(
				0.08,
				$author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$FoundRelation(relation))) : (A2($author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$match, lQuery, relation.eS) ? $elm$core$Maybe$Just(
			_Utils_Tuple2(
				0.07,
				$author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$FoundRelation(relation))) : (A2($author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$fuzzy, lQuery, relation.eS) ? $elm$core$Maybe$Just(
			_Utils_Tuple2(
				0.06,
				$author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$FoundRelation(relation))) : ((A2(
			$author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$match,
			lQuery,
			$author$project$Models$Project$ColumnPath$toString(relation.ht.bH)) || (A2(
			$author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$match,
			lQuery,
			$author$project$Models$Project$ColumnPath$toString(relation.dG.bH)) || (A2($author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$match, lQuery, relation.ht.aq.b) || A2($author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$match, lQuery, relation.dG.aq.b)))) ? $elm$core$Maybe$Just(
			_Utils_Tuple2(
				0.05,
				$author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$FoundRelation(relation))) : $elm$core$Maybe$Nothing))));
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$FoundTable = function (a) {
	return {$: 0, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$shortBonus = function (text) {
	return 1 / $elm$core$String$length(text);
};
var $author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$tableMatch = F3(
	function (lQuery, notes, table) {
		return _Utils_eq(
			$elm$core$String$toLower(table.eS),
			lQuery) ? $elm$core$Maybe$Just(
			_Utils_Tuple2(
				9,
				$author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$FoundTable(table))) : (A2(
			$elm$core$String$startsWith,
			lQuery,
			$elm$core$String$toLower(table.eS)) ? $elm$core$Maybe$Just(
			_Utils_Tuple2(
				8 + $author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$shortBonus(table.eS),
				$author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$FoundTable(table))) : (A2($author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$match, lQuery, table.eS) ? $elm$core$Maybe$Just(
			_Utils_Tuple2(
				7 + $author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$shortBonus(table.eS),
				$author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$FoundTable(table))) : (A2($author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$fuzzy, lQuery, table.eS) ? $elm$core$Maybe$Just(
			_Utils_Tuple2(
				6 + $author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$shortBonus(table.eS),
				$author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$FoundTable(table))) : ((A2(
			$author$project$Libs$Maybe$any,
			A2(
				$elm$core$Basics$composeR,
				function ($) {
					return $.fp;
				},
				$author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$match(lQuery)),
			table.h4) || (A2(
			$author$project$Libs$Maybe$any,
			$author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$match(lQuery),
			notes) || (A2(
			$author$project$Libs$Maybe$any,
			$author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$match(lQuery),
			A2(
				$elm$core$Maybe$andThen,
				function ($) {
					return $.eS;
				},
				table.nL)) || (A2(
			$elm$core$List$any,
			function (u) {
				return A2($author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$match, lQuery, u.eS) || A2(
					$author$project$Libs$Maybe$any,
					$author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$match(lQuery),
					u.ii);
			},
			table.d5) || (A2(
			$elm$core$List$any,
			function (i) {
				return A2($author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$match, lQuery, i.eS) || A2(
					$author$project$Libs$Maybe$any,
					$author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$match(lQuery),
					i.ii);
			},
			table.dg) || A2(
			$elm$core$List$any,
			function (c) {
				return A2($author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$match, lQuery, c.eS) || A2(
					$author$project$Libs$Maybe$any,
					$author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$match(lQuery),
					c.nI);
			},
			table.cQ)))))) ? $elm$core$Maybe$Just(
			_Utils_Tuple2(
				5 + $author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$shortBonus(table.eS),
				$author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$FoundTable(table))) : ((A2(
			$author$project$Libs$Maybe$any,
			A2(
				$elm$core$Basics$composeR,
				function ($) {
					return $.fp;
				},
				$author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$fuzzy(lQuery)),
			table.h4) || A2(
			$author$project$Libs$Maybe$any,
			$author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$fuzzy(lQuery),
			notes)) ? $elm$core$Maybe$Just(
			_Utils_Tuple2(
				4 + $author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$shortBonus(table.eS),
				$author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$FoundTable(table))) : $elm$core$Maybe$Nothing)))));
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$performSearch = F4(
	function (tables, relations, notes, lQuery) {
		var tableResults = A2(
			$elm$core$List$filterMap,
			function (t) {
				return A3(
					$author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$tableMatch,
					lQuery,
					A2($author$project$PagesComponents$Organization_$Project_$Models$ErdNotes$getTable, t.H, notes),
					t);
			},
			$elm$core$Dict$values(tables));
		var maxResults = 30;
		var columnResults = (_Utils_cmp(
			$elm$core$List$length(tableResults),
			maxResults) < 0) ? A2(
			$elm$core$List$concatMap,
			function (table) {
				return function (n) {
					return A2(
						$elm$core$List$filterMap,
						function (c) {
							return A4(
								$author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$columnMatch,
								lQuery,
								A2(
									$elm$core$Maybe$andThen,
									A2(
										$elm$core$Basics$composeR,
										function ($) {
											return $.M;
										},
										$author$project$Models$Project$ColumnPath$get(c.aA)),
									n),
								table,
								c);
						},
						$elm$core$Dict$values(table.M));
				}(
					A2($elm$core$Dict$get, table.H, notes));
			},
			$elm$core$Dict$values(tables)) : _List_Nil;
		var relationResults = (_Utils_cmp(
			$elm$core$List$length(tableResults) + $elm$core$List$length(columnResults),
			maxResults) < 0) ? A2(
			$elm$core$List$filterMap,
			$author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$relationMatch(lQuery),
			relations) : _List_Nil;
		return A2(
			$elm$core$List$map,
			$elm$core$Tuple$second,
			A2(
				$elm$core$List$take,
				maxResults,
				A2(
					$elm$core$List$sortBy,
					function (_v0) {
						var r = _v0.a;
						return -r;
					},
					_Utils_ap(
						tableResults,
						_Utils_ap(columnResults, relationResults)))));
	});
var $author$project$Components$Atoms$Icons$table = 199;
var $author$project$PagesComponents$Organization_$Project_$Models$SearchClicked = F2(
	function (a, b) {
		return {$: 2, a: a, b: b};
	});
var $author$project$Components$Molecules$ContextMenu$itemActiveStyles = $author$project$Libs$Tailwind$batch(
	_List_fromArray(
		[
			'py-2 px-4 text-sm bg-primary-600 text-white',
			$author$project$Libs$Tailwind$hover(
			_List_fromArray(
				['bg-primary-700 text-primary-50']))
		]));
var $author$project$Components$Molecules$ContextMenu$itemDisabledActiveStyles = $author$project$Libs$Tailwind$batch(
	_List_fromArray(
		[
			'py-2 px-4 text-sm text-primary-400',
			$author$project$Libs$Tailwind$hover(
			_List_fromArray(
				['bg-primary-50']))
		]));
var $author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$viewSearchResult = F6(
	function (searchId, defaultSchema, shownTables, active, index, res) {
		var viewItem = F5(
			function (kind, table, icon, content, disabled) {
				var commonStyles = 'flex w-full items-center';
				var commonAttrs = _Utils_ap(
					_List_fromArray(
						[
							$elm$html$Html$Attributes$type_('button'),
							$elm$html$Html$Events$onMouseDown(
							A2($author$project$PagesComponents$Organization_$Project_$Models$SearchClicked, kind, table)),
							$author$project$Libs$Html$Attributes$role('menuitem'),
							$elm$html$Html$Attributes$tabindex(-1)
						]),
					A3(
						$author$project$Libs$Bool$cond,
						_Utils_eq(active, index),
						_List_fromArray(
							[
								$elm$html$Html$Attributes$id(searchId + '-active-item')
							]),
						_List_Nil));
				return disabled ? A2(
					$elm$html$Html$button,
					_Utils_ap(
						commonAttrs,
						_List_fromArray(
							[
								$author$project$Libs$Html$Attributes$css(
								_List_fromArray(
									[
										commonStyles,
										A3(
										$author$project$Libs$Bool$cond,
										_Utils_eq(active, index),
										$author$project$Components$Molecules$ContextMenu$itemDisabledActiveStyles,
										$author$project$Components$Molecules$ContextMenu$itemDisabledStyles)
									]))
							])),
					_Utils_ap(
						_List_fromArray(
							[
								A2($author$project$Components$Atoms$Icon$solid, icon, 'mr-3')
							]),
						content)) : A2(
					$elm$html$Html$button,
					_Utils_ap(
						commonAttrs,
						_List_fromArray(
							[
								$author$project$Libs$Html$Attributes$css(
								_List_fromArray(
									[
										commonStyles,
										$author$project$Libs$Tailwind$focus(
										_List_fromArray(
											['outline-none'])),
										A3(
										$author$project$Libs$Bool$cond,
										_Utils_eq(active, index),
										$author$project$Components$Molecules$ContextMenu$itemActiveStyles,
										$author$project$Components$Molecules$ContextMenu$itemStyles)
									]))
							])),
					_Utils_ap(
						_List_fromArray(
							[
								A2($author$project$Components$Atoms$Icon$solid, icon, 'mr-3')
							]),
						content));
			});
		switch (res.$) {
			case 0:
				var table = res.a;
				return A5(
					viewItem,
					'table',
					table.H,
					$author$project$Components$Atoms$Icons$table,
					_List_fromArray(
						[
							$elm$html$Html$text(
							A2($author$project$Models$Project$TableId$show, defaultSchema, table.H))
						]),
					A3(
						$author$project$Libs$List$memberBy,
						function ($) {
							return $.H;
						},
						table.H,
						shownTables));
			case 1:
				var table = res.a;
				var column = res.b;
				return A5(
					viewItem,
					'column',
					table.H,
					$author$project$Components$Atoms$Icons$column,
					_List_fromArray(
						[
							A2(
							$elm$html$Html$span,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('opacity-50')
								]),
							_List_fromArray(
								[
									$elm$html$Html$text(
									A2($author$project$Models$Project$TableId$show, defaultSchema, table.H) + '.')
								])),
							$elm$html$Html$text(
							$author$project$Models$Project$ColumnPath$show(column.aA))
						]),
					A3(
						$author$project$Libs$List$memberBy,
						function ($) {
							return $.H;
						},
						table.H,
						shownTables));
			default:
				var relation = res.a;
				return (!A3(
					$author$project$Libs$List$memberBy,
					function ($) {
						return $.H;
					},
					relation.ht.aq,
					shownTables)) ? A5(
					viewItem,
					'relation',
					relation.ht.aq,
					$author$project$Components$Atoms$Icons$columns.lQ,
					_List_fromArray(
						[
							$elm$html$Html$text(relation.eS)
						]),
					false) : ((!A3(
					$author$project$Libs$List$memberBy,
					function ($) {
						return $.H;
					},
					relation.dG.aq,
					shownTables)) ? A5(
					viewItem,
					'relation',
					relation.dG.aq,
					$author$project$Components$Atoms$Icons$columns.lQ,
					_List_fromArray(
						[
							$elm$html$Html$text(relation.eS)
						]),
					false) : A5(
					viewItem,
					'relation',
					relation.ht.aq,
					$author$project$Components$Atoms$Icons$columns.lQ,
					_List_fromArray(
						[
							$elm$html$Html$text(relation.eS)
						]),
					true));
		}
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$viewNavbarSearch = F8(
	function (defaultSchema, search, tables, relations, notes, shownTables, htmlId, openedDropdown) {
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('ml-6 print:hidden')
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$author$project$Libs$Html$Attributes$css(
							_List_fromArray(
								[
									'max-w-lg w-full',
									$author$project$Libs$Tailwind$lg(
									_List_fromArray(
										['max-w-xs']))
								]))
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$label,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$for(htmlId),
									$elm$html$Html$Attributes$class('sr-only')
								]),
							_List_fromArray(
								[
									$elm$html$Html$text('Search')
								])),
							A3(
							$author$project$Components$Molecules$Dropdown$dropdown,
							{
								bg: 0,
								H: htmlId,
								bm: _Utils_eq(openedDropdown, htmlId)
							},
							function (m) {
								return A2(
									$elm$html$Html$div,
									_List_Nil,
									_List_fromArray(
										[
											A2(
											$elm$html$Html$div,
											_List_fromArray(
												[
													$elm$html$Html$Attributes$class('pointer-events-none absolute inset-y-0 left-0 pl-3 flex items-center')
												]),
											_List_fromArray(
												[
													A2($author$project$Components$Atoms$Icon$solid, 178, 'text-primary-200')
												])),
											A2(
											$elm$html$Html$input,
											_List_fromArray(
												[
													$elm$html$Html$Attributes$type_('search'),
													$elm$html$Html$Attributes$name('search'),
													$elm$html$Html$Attributes$id(m.H),
													$elm$html$Html$Attributes$placeholder('Search'),
													$elm$html$Html$Attributes$autocomplete(false),
													$elm$html$Html$Attributes$value(search.fp),
													$elm$html$Html$Events$onInput($author$project$PagesComponents$Organization_$Project_$Models$SearchUpdated),
													$elm$html$Html$Events$onFocus(
													$author$project$PagesComponents$Organization_$Project_$Models$DropdownOpen(m.H)),
													$elm$html$Html$Events$onBlur($author$project$PagesComponents$Organization_$Project_$Models$DropdownClose),
													$author$project$Libs$Html$Attributes$css(
													_List_fromArray(
														[
															'block w-full pl-10 pr-3 py-2 border border-transparent rounded-md leading-5 bg-primary-500 text-primary-100 placeholder-primary-200',
															$author$project$Libs$Tailwind$focus(
															_List_fromArray(
																['outline-none bg-white border-white ring-white text-primary-900 placeholder-primary-400'])),
															$author$project$Libs$Tailwind$sm(
															_List_fromArray(
																['text-sm']))
														]))
												]),
											_List_Nil),
											A3(
											$author$project$Libs$Maybe$mapOrElse,
											function (h) {
												return A2(
													$elm$html$Html$div,
													_List_fromArray(
														[
															$elm$html$Html$Attributes$class('absolute inset-y-0 right-0 flex py-1.5 pr-1.5')
														]),
													_List_fromArray(
														[
															A2(
															$elm$html$Html$kbd,
															_List_fromArray(
																[
																	$elm$html$Html$Attributes$class('inline-flex items-center border border-primary-300 rounded px-2 text-sm font-sans font-medium text-primary-300')
																]),
															_List_fromArray(
																[
																	$elm$html$Html$text(h.dk)
																]))
														]));
											},
											A2($elm$html$Html$div, _List_Nil, _List_Nil),
											A2(
												$elm$core$Maybe$andThen,
												$elm$core$List$head,
												A2($elm$core$Dict$get, 'search-open', $author$project$Conf$hotkeys)))
										]));
							},
							function (m) {
								return (search.fp === '') ? A2(
									$elm$html$Html$div,
									_List_Nil,
									_List_fromArray(
										[
											A2(
											$elm$html$Html$span,
											_List_fromArray(
												[
													$author$project$Libs$Html$Attributes$role('menuitem'),
													$elm$html$Html$Attributes$tabindex(-1),
													$author$project$Libs$Html$Attributes$css(
													_List_fromArray(
														['flex w-full items-center', $author$project$Components$Molecules$ContextMenu$itemDisabledStyles]))
												]),
											_List_fromArray(
												[
													$elm$html$Html$text('Type to search into tables ('),
													A2($author$project$Components$Atoms$Icon$solid, $author$project$Components$Atoms$Icons$table, ''),
													$elm$html$Html$text('), columns ('),
													A2($author$project$Components$Atoms$Icon$solid, $author$project$Components$Atoms$Icons$column, ''),
													$elm$html$Html$text(') and relations ('),
													A2($author$project$Components$Atoms$Icon$solid, $author$project$Components$Atoms$Icons$columns.lQ, ''),
													$elm$html$Html$text(')')
												])),
											A2(
											$elm$html$Html$button,
											_List_fromArray(
												[
													$elm$html$Html$Attributes$type_('button'),
													$elm$html$Html$Events$onMouseDown(
													A3(
														$author$project$Libs$Bool$cond,
														$elm$core$Dict$size(tables) < 30,
														$author$project$PagesComponents$Organization_$Project_$Models$ShowAllTables,
														A3(
															$author$project$PagesComponents$Organization_$Project_$Models$confirm,
															'Show all tables',
															$elm$html$Html$text('You are about to add a lot of tables, it may show down your computer. Continue?'),
															$author$project$PagesComponents$Organization_$Project_$Models$ShowAllTables))),
													$author$project$Libs$Html$Attributes$role('menuitem'),
													$elm$html$Html$Attributes$tabindex(-1),
													$author$project$Libs$Html$Attributes$css(
													_List_fromArray(
														[
															'flex w-full items-center',
															$author$project$Libs$Tailwind$focus(
															_List_fromArray(
																['outline-none'])),
															$author$project$Components$Molecules$ContextMenu$itemStyles
														]))
												]),
											_List_fromArray(
												[
													$elm$html$Html$text(
													'Show all tables (' + ($elm$core$String$fromInt(
														$elm$core$Dict$size(tables)) + ')'))
												]))
										])) : function (results) {
									return $elm$core$List$isEmpty(results) ? A2(
										$elm$html$Html$div,
										_List_Nil,
										_List_fromArray(
											[
												A2(
												$elm$html$Html$span,
												_List_fromArray(
													[
														$author$project$Libs$Html$Attributes$role('menuitem'),
														$elm$html$Html$Attributes$tabindex(-1),
														$author$project$Libs$Html$Attributes$css(
														_List_fromArray(
															['flex w-full items-center', $author$project$Components$Molecules$ContextMenu$itemDisabledStyles]))
													]),
												_List_fromArray(
													[
														$elm$html$Html$text('No result :(')
													]))
											])) : A2(
										$elm$html$Html$div,
										_List_fromArray(
											[
												$elm$html$Html$Attributes$class('max-h-192 overflow-y-auto')
											]),
										A2(
											$elm$core$List$indexedMap,
											A4(
												$author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$viewSearchResult,
												m.H,
												defaultSchema,
												shownTables,
												A2(
													$elm$core$Basics$modBy,
													$elm$core$List$length(results),
													search.bb)),
											results));
								}(
									A4(
										$author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$performSearch,
										tables,
										relations,
										notes,
										$elm$core$String$toLower(search.fp)));
							})
						]))
				]));
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Navbar$viewNavbarSettings = A2(
	$author$project$Components$Molecules$Tooltip$b,
	'Settings',
	A2(
		$elm$html$Html$button,
		_List_fromArray(
			[
				$elm$html$Html$Attributes$type_('button'),
				$elm$html$Html$Events$onClick(
				$author$project$PagesComponents$Organization_$Project_$Models$ProjectSettingsMsg($author$project$PagesComponents$Organization_$Project_$Models$PSOpen)),
				$author$project$Libs$Html$Attributes$css(
				_List_fromArray(
					[
						'mx-1 flex-shrink-0 bg-primary-600 p-1 rounded-full text-primary-200',
						$author$project$Libs$Tailwind$hover(
						_List_fromArray(
							['text-white animate-spin'])),
						$author$project$Libs$Tailwind$focus_ring_offset_600($author$project$Libs$Tailwind$primary)
					]))
			]),
		_List_fromArray(
			[
				A2(
				$elm$html$Html$span,
				_List_fromArray(
					[
						$elm$html$Html$Attributes$class('sr-only')
					]),
				_List_fromArray(
					[
						$elm$html$Html$text('Settings')
					])),
				A2($author$project$Components$Atoms$Icon$outline, 62, '')
			])));
var $author$project$PagesComponents$Organization_$Project_$Models$MoveProjectTo = function (a) {
	return {$: 6, a: a};
};
var $author$project$Models$ProjectInfo$icon = function (project) {
	return (!project.cD) ? 106 : ((!(!project.hQ)) ? 113 : ((!_Utils_eq(
		A2(
			$elm$core$Maybe$andThen,
			function ($) {
				return $.gb;
			},
			project.nx),
		$elm$core$Maybe$Nothing)) ? 165 : 58));
};
var $elm$virtual_dom$VirtualDom$lazy7 = _VirtualDom_lazy7;
var $elm$html$Html$Lazy$lazy7 = $elm$virtual_dom$VirtualDom$lazy7;
var $author$project$PagesComponents$Organization_$Project_$Views$Navbar$Title$stringToArgs = function (args) {
	var _v0 = A2($elm$core$String$split, '~', args);
	if ((((_v0.b && _v0.b.b) && _v0.b.b.b) && _v0.b.b.b.b) && (!_v0.b.b.b.b.b)) {
		var dirty = _v0.a;
		var _v1 = _v0.b;
		var currentLayout = _v1.a;
		var _v2 = _v1.b;
		var htmlId = _v2.a;
		var _v3 = _v2.b;
		var openedDropdown = _v3.a;
		return _Utils_Tuple2(
			_Utils_Tuple2(dirty === 'Y', currentLayout),
			_Utils_Tuple2(htmlId, openedDropdown));
	} else {
		return _Utils_Tuple2(
			_Utils_Tuple2(false, ''),
			_Utils_Tuple2('', ''));
	}
};
var $author$project$Models$ProjectInfo$title = function (project) {
	return (!project.cD) ? 'Local project' : ((!(!project.hQ)) ? 'Public project' : ((!_Utils_eq(
		A2(
			$elm$core$Maybe$andThen,
			function ($) {
				return $.gb;
			},
			project.nx),
		$elm$core$Maybe$Nothing)) ? 'Heroku Add-on project' : 'Remote project'));
};
var $author$project$Components$Atoms$Icon$slash = function (styles) {
	return A2(
		$author$project$Components$Atoms$Icon$viewSolid,
		_List_fromArray(
			['M5.555 17.776l8-16 .894.448-8 16-.894-.448z']),
		'h-5 w-5 ' + styles);
};
var $author$project$PagesComponents$Organization_$Project_$Models$LDelete = function (a) {
	return {$: 1, a: a};
};
var $elm$html$Html$br = _VirtualDom_node('br');
var $author$project$PagesComponents$Organization_$Project_$Views$Navbar$Title$confirmDeleteLayout = F2(
	function (layout, name) {
		return $author$project$PagesComponents$Organization_$Project_$Models$ConfirmOpen(
			{
				b6: 'Cancel',
				A: $author$project$Libs$Tailwind$red,
				b8: 'Delete ' + (name + ' layout'),
				aa: 207,
				cq: A2(
					$elm$html$Html$span,
					_List_Nil,
					_List_fromArray(
						[
							$elm$html$Html$text('Are you sure you want to delete '),
							$author$project$Libs$Html$bText(name),
							$elm$html$Html$text(' layout?'),
							A2($elm$html$Html$br, _List_Nil, _List_Nil),
							$elm$html$Html$text(
							'It contains ' + (A2($author$project$Libs$String$pluralizeL, 'table', layout.oM) + '.'))
						])),
				ct: $author$project$Libs$Task$send(
					$author$project$PagesComponents$Organization_$Project_$Models$LayoutMsg(
						$author$project$PagesComponents$Organization_$Project_$Models$LDelete(name))),
				a4: 'Delete layout'
			});
	});
var $author$project$Components$Molecules$ContextMenu$itemCurrentStyles = $author$project$Libs$Tailwind$batch(
	_List_fromArray(
		[
			'py-2 px-4 text-sm text-gray-700 bg-gray-100',
			$author$project$Libs$Tailwind$hover(
			_List_fromArray(
				['bg-gray-200 text-gray-900'])),
			$author$project$Libs$Tailwind$disabled(
			_List_fromArray(
				['text-gray-400']))
		]));
var $elm$html$Html$small = _VirtualDom_node('small');
var $author$project$PagesComponents$Organization_$Project_$Views$Navbar$Title$viewLayoutItem = F3(
	function (isCurrent, name, layout) {
		return A2(
			$elm$html$Html$span,
			_List_fromArray(
				[
					$author$project$Libs$Html$Attributes$role('menuitem'),
					$elm$html$Html$Attributes$tabindex(-1),
					$author$project$Libs$Html$Attributes$css(
					_List_fromArray(
						[
							'flex',
							A3($author$project$Libs$Bool$cond, isCurrent, $author$project$Components$Molecules$ContextMenu$itemCurrentStyles, $author$project$Components$Molecules$ContextMenu$itemStyles)
						]))
				]),
			_List_fromArray(
				[
					A2(
					$author$project$Components$Molecules$Tooltip$t,
					A3($author$project$Libs$Bool$cond, isCurrent, '', 'Delete this layout'),
					A2(
						$elm$html$Html$button,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$type_('button'),
								$elm$html$Html$Events$onClick(
								A2($author$project$PagesComponents$Organization_$Project_$Views$Navbar$Title$confirmDeleteLayout, layout, name)),
								$elm$html$Html$Attributes$disabled(isCurrent),
								$author$project$Libs$Html$Attributes$css(
								_List_fromArray(
									[
										$author$project$Libs$Tailwind$focus(
										_List_fromArray(
											['outline-none'])),
										$author$project$Libs$Tailwind$disabled(
										_List_fromArray(
											['text-gray-400']))
									]))
							]),
						_List_fromArray(
							[
								A2($author$project$Components$Atoms$Icon$solid, 207, 'inline-block')
							]))),
					A2(
					$author$project$Components$Molecules$Tooltip$t,
					'Duplicate this layout',
					A2(
						$elm$html$Html$button,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$type_('button'),
								$elm$html$Html$Events$onClick(
								$author$project$PagesComponents$Organization_$Project_$Models$NewLayoutMsg(
									$author$project$PagesComponents$Organization_$Project_$Views$Modals$NewLayout$Open(
										$elm$core$Maybe$Just(name)))),
								$author$project$Libs$Html$Attributes$css(
								_List_fromArray(
									[
										'ml-1',
										$author$project$Libs$Tailwind$focus(
										_List_fromArray(
											['outline-none']))
									]))
							]),
						_List_fromArray(
							[
								A2($author$project$Components$Atoms$Icon$solid, 82, 'inline-block')
							]))),
					A2(
					$elm$html$Html$button,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$type_('button'),
							$elm$html$Html$Events$onClick(
							$author$project$PagesComponents$Organization_$Project_$Models$LayoutMsg(
								$author$project$PagesComponents$Organization_$Project_$Models$LLoad(name))),
							$author$project$Libs$Html$Attributes$css(
							_List_fromArray(
								[
									'flex-grow text-left ml-3',
									$author$project$Libs$Tailwind$focus(
									_List_fromArray(
										['outline-none']))
								]))
						]),
					_List_fromArray(
						[
							$elm$html$Html$text(name),
							$elm$html$Html$text(' '),
							A2(
							$elm$html$Html$small,
							_List_Nil,
							_List_fromArray(
								[
									$elm$html$Html$text(
									'(' + (A2($author$project$Libs$String$pluralizeL, 'table', layout.oM) + ')'))
								]))
						]))
				]));
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Navbar$Title$viewLayouts = F5(
	function (platform, currentLayout, layouts, htmlId, openedDropdown) {
		return A3(
			$author$project$Components$Molecules$Dropdown$dropdown,
			{
				bg: 1,
				H: htmlId,
				bm: _Utils_eq(openedDropdown, htmlId)
			},
			function (m) {
				return A2(
					$elm$html$Html$button,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$type_('button'),
							$elm$html$Html$Attributes$id(m.H),
							$elm$html$Html$Events$onClick(
							$author$project$PagesComponents$Organization_$Project_$Models$DropdownToggle(m.H)),
							$author$project$Libs$Html$Attributes$ariaExpanded(false),
							$author$project$Libs$Html$Attributes$ariaHaspopup('true'),
							$author$project$Libs$Html$Attributes$css(
							_List_fromArray(
								[
									'flex justify-center items-center p-1 rounded-full',
									$author$project$Libs$Tailwind$focus_ring_offset_600($author$project$Libs$Tailwind$primary)
								]))
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$span,
							_List_Nil,
							_List_fromArray(
								[
									$elm$html$Html$text(currentLayout)
								])),
							A2(
							$author$project$Components$Atoms$Icon$solid,
							48,
							'transform transition ' + A3($author$project$Libs$Bool$cond, m.bm, '-rotate-180', ''))
						]));
			},
			function (_v0) {
				return A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('min-w-max divide-y divide-gray-100')
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$author$project$Libs$Html$Attributes$role('none'),
									$elm$html$Html$Attributes$class('py-1')
								]),
							_List_fromArray(
								[
									A5(
									$author$project$Components$Molecules$ContextMenu$btnHotkey,
									'',
									$author$project$PagesComponents$Organization_$Project_$Models$NewLayoutMsg(
										$author$project$PagesComponents$Organization_$Project_$Views$Modals$NewLayout$Open($elm$core$Maybe$Nothing)),
									_List_fromArray(
										[
											$elm$html$Html$text('Create new layout')
										]),
									platform,
									A3($author$project$Libs$Dict$getOrElse, 'create-layout', _List_Nil, $author$project$Conf$hotkeys))
								])),
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$author$project$Libs$Html$Attributes$role('none'),
									$elm$html$Html$Attributes$class('py-1')
								]),
							A2(
								$elm$core$List$map,
								function (_v2) {
									var name = _v2.a;
									var layout = _v2.b;
									return A3(
										$author$project$PagesComponents$Organization_$Project_$Views$Navbar$Title$viewLayoutItem,
										_Utils_eq(currentLayout, name),
										name,
										layout);
								},
								A2(
									$elm$core$List$sortBy,
									function (_v1) {
										var name = _v1.a;
										return name;
									},
									$elm$core$Dict$toList(layouts))))
						]));
			});
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Navbar$Title$viewLayoutsMaybe = F6(
	function (platform, conf, currentLayout, layouts, htmlId, openedDropdown) {
		return conf.mq ? _List_fromArray(
			[
				$author$project$Components$Atoms$Icon$slash('text-primary-300'),
				A6($elm$html$Html$Lazy$lazy5, $author$project$PagesComponents$Organization_$Project_$Views$Navbar$Title$viewLayouts, platform, currentLayout, layouts, htmlId, openedDropdown)
			]) : _List_fromArray(
			[
				$author$project$Components$Atoms$Icon$slash('text-primary-300'),
				$elm$html$Html$text(currentLayout)
			]);
	});
var $author$project$Components$Molecules$ContextMenu$linkHtml = F3(
	function (url, attrs, content) {
		return A2(
			$elm$html$Html$a,
			_Utils_ap(
				_List_fromArray(
					[
						$elm$html$Html$Attributes$href(url),
						$author$project$Libs$Html$Attributes$role('menuitem'),
						$elm$html$Html$Attributes$tabindex(-1),
						$author$project$Libs$Html$Attributes$css(
						_List_fromArray(
							['block', $author$project$Components$Molecules$ContextMenu$itemStyles]))
					]),
				attrs),
			content);
	});
var $author$project$Components$Molecules$Avatar$xsWithIcon = F4(
	function (url, name, icon, styles) {
		return A2(
			$elm$html$Html$span,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('relative inline-block ' + styles)
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$img,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('h-6 w-6 rounded-full'),
							$elm$html$Html$Attributes$src(url),
							$elm$html$Html$Attributes$alt(name)
						]),
					_List_Nil),
					A2(
					$elm$html$Html$span,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('absolute block text-gray-700'),
							A2($elm$html$Html$Attributes$style, 'bottom', '-6px'),
							A2($elm$html$Html$Attributes$style, 'right', '-6px')
						]),
					_List_fromArray(
						[
							A2($author$project$Components$Atoms$Icon$solid, icon, 'h-4 w-4')
						]))
				]));
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Navbar$Title$viewProjectsDropdown = F7(
	function (platform, eConf, projects, project, dirty, htmlId, openedDropdown) {
		var userOrganizations = $author$project$Libs$List$unique(
			A2(
				$elm$core$List$map,
				function ($) {
					return $.H;
				},
				A2(
					$elm$core$List$filterMap,
					function ($) {
						return $.nx;
					},
					projects)));
		return A3(
			$author$project$Components$Molecules$Dropdown$dropdown,
			{
				bg: 0,
				H: htmlId,
				bm: _Utils_eq(openedDropdown, htmlId)
			},
			function (m) {
				return A2(
					$elm$html$Html$button,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$type_('button'),
							$elm$html$Html$Attributes$id(m.H),
							$elm$html$Html$Events$onClick(
							$author$project$PagesComponents$Organization_$Project_$Models$DropdownToggle(m.H)),
							$author$project$Libs$Html$Attributes$ariaExpanded(false),
							$author$project$Libs$Html$Attributes$ariaHaspopup('true'),
							$author$project$Libs$Html$Attributes$css(
							_List_fromArray(
								[
									'flex justify-center items-center p-1 rounded-full',
									$author$project$Libs$Tailwind$focus_ring_offset_600($author$project$Libs$Tailwind$primary)
								]))
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$span,
							_List_fromArray(
								[
									$author$project$Libs$Html$Attributes$css(
									_List_fromArray(
										[
											'mr-1',
											A3($author$project$Libs$Bool$cond, dirty, 'opacity-1', 'opacity-0')
										]))
								]),
							_List_fromArray(
								[
									$elm$html$Html$text('*')
								])),
							A2(
							$elm$html$Html$span,
							_List_Nil,
							_List_fromArray(
								[
									$elm$html$Html$text(project.eS)
								])),
							A2(
							$author$project$Components$Atoms$Icon$solid,
							48,
							'transform transition ' + A3($author$project$Libs$Bool$cond, m.bm, '-rotate-180', ''))
						]));
			},
			function (_v0) {
				return A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('divide-y divide-gray-100')
						]),
					A2(
						$elm$core$List$map,
						function (section) {
							return A2(
								$elm$html$Html$div,
								_List_fromArray(
									[
										$author$project$Libs$Html$Attributes$role('none'),
										$elm$html$Html$Attributes$class('py-1')
									]),
								section);
						},
						A2(
							$author$project$Libs$List$filterNot,
							$elm$core$List$isEmpty,
							_Utils_ap(
								_List_fromArray(
									[
										eConf.fa ? _List_fromArray(
										[
											A5(
											$author$project$Components$Molecules$ContextMenu$btnHotkey,
											'',
											$author$project$PagesComponents$Organization_$Project_$Models$TriggerSaveProject,
											_List_fromArray(
												[
													$elm$html$Html$text('Save project')
												]),
											platform,
											A3($author$project$Libs$Dict$getOrElse, 'save', _List_Nil, $author$project$Conf$hotkeys))
										]) : _List_fromArray(
										[
											A2(
											$author$project$Components$Molecules$ContextMenu$btnDisabled,
											'',
											_List_fromArray(
												[
													A2(
													$author$project$Components$Molecules$Tooltip$r,
													'You are in read-one mode',
													$elm$html$Html$text('Save project'))
												])),
											A2(
											$author$project$Components$Molecules$ContextMenu$btnDisabled,
											'',
											_List_fromArray(
												[
													A2(
													$author$project$Components$Molecules$Tooltip$r,
													'You are in read-one mode',
													$elm$html$Html$text('Rename project'))
												])),
											A2(
											$author$project$Components$Molecules$ContextMenu$btnDisabled,
											'',
											_List_fromArray(
												[
													A2(
													$author$project$Components$Molecules$Tooltip$r,
													'You are in read-one mode',
													$elm$html$Html$text('Delete project'))
												]))
										])
									]),
								A3(
									$author$project$Libs$Bool$cond,
									$elm$core$List$isEmpty(projects),
									_List_Nil,
									_List_fromArray(
										[
											A2(
											$elm$core$List$map,
											function (p) {
												return A3(
													$author$project$Components$Molecules$ContextMenu$linkHtml,
													$author$project$Gen$Route$toHref(
														$author$project$Gen$Route$Organization___Project_(
															{
																nx: $author$project$Models$ProjectInfo$organizationId(p),
																nN: p.H
															})),
													_List_fromArray(
														[
															$elm$html$Html$Attributes$class('flex'),
															$elm$html$Html$Attributes$classList(
															_List_fromArray(
																[
																	_Utils_Tuple2(
																	'text-gray-400',
																	_Utils_eq(p.H, project.H))
																]))
														]),
													_List_fromArray(
														[
															A2(
															$elm$core$Maybe$withDefault,
															A2(
																$author$project$Components$Atoms$Icon$outline,
																$author$project$Models$ProjectInfo$icon(p),
																'mr-2'),
															A2(
																$elm$core$Maybe$map,
																function (o) {
																	return A4(
																		$author$project$Components$Molecules$Avatar$xsWithIcon,
																		o.gv,
																		o.eS,
																		$author$project$Models$ProjectInfo$icon(p),
																		'mr-2');
																},
																p.nx)),
															$elm$html$Html$text(p.eS)
														]));
											},
											projects)
										]))))));
			});
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Navbar$Title$viewNavbarTitle = F6(
	function (gConf, eConf, projects, project, layouts, args) {
		var _v0 = $author$project$PagesComponents$Organization_$Project_$Views$Navbar$Title$stringToArgs(args);
		var _v1 = _v0.a;
		var dirty = _v1.a;
		var currentLayout = _v1.b;
		var _v2 = _v0.b;
		var htmlId = _v2.a;
		var openedDropdown = _v2.b;
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('flex justify-center items-center text-white')
				]),
			_Utils_ap(
				_List_fromArray(
					[
						eConf.hd ? A2(
						$author$project$Components$Molecules$Tooltip$b,
						$author$project$Models$ProjectInfo$title(project),
						A2(
							$elm$html$Html$button,
							_List_fromArray(
								[
									$elm$html$Html$Events$onClick(
									$author$project$PagesComponents$Organization_$Project_$Models$MoveProjectTo(
										A3($author$project$Libs$Bool$cond, !project.cD, 1, 0))),
									$author$project$Libs$Html$Attributes$css(
									_List_fromArray(
										[
											'mx-1 rounded-full',
											$author$project$Libs$Tailwind$focus_ring_offset_600($author$project$Libs$Tailwind$primary)
										]))
								]),
							_List_fromArray(
								[
									A2(
									$author$project$Components$Atoms$Icon$outline,
									$author$project$Models$ProjectInfo$icon(project),
									'')
								]))) : A2($elm$html$Html$div, _List_Nil, _List_Nil),
						eConf.hd ? A8(
						$elm$html$Html$Lazy$lazy7,
						$author$project$PagesComponents$Organization_$Project_$Views$Navbar$Title$viewProjectsDropdown,
						gConf.e_,
						eConf,
						projects,
						project,
						dirty,
						htmlId + '-projects',
						A2($author$project$Libs$String$filterStartsWith, htmlId + '-projects', openedDropdown)) : A2(
						$elm$html$Html$div,
						_List_Nil,
						_List_fromArray(
							[
								$elm$html$Html$text(project.eS)
							]))
					]),
				A6(
					$author$project$PagesComponents$Organization_$Project_$Views$Navbar$Title$viewLayoutsMaybe,
					gConf.e_,
					eConf,
					currentLayout,
					layouts,
					htmlId + '-layouts',
					A2($author$project$Libs$String$filterStartsWith, htmlId + '-layouts', openedDropdown))));
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Navbar$viewNavbar = F8(
	function (gConf, maybeUser, eConf, virtualRelation, erd, projects, model, args) {
		var features = A2(
			$elm$core$List$filterMap,
			$elm$core$Basics$identity,
			_List_fromArray(
				[
					A2(
					$author$project$Libs$Maybe$when,
					eConf.c8,
					{
						b1: $toastal$either$Either$Right(
							$author$project$PagesComponents$Organization_$Project_$Models$FindPathMsg(
								A2($author$project$PagesComponents$Organization_$Project_$Models$FPOpen, $elm$core$Maybe$Nothing, $elm$core$Maybe$Nothing))),
						cX: $elm$html$Html$text('Find path between tables'),
						eB: A3($author$project$Libs$Dict$getOrElse, 'find-path', _List_Nil, $author$project$Conf$hotkeys)
					}),
					$elm$core$Maybe$Just(
					{
						b1: $toastal$either$Either$Right(
							$author$project$PagesComponents$Organization_$Project_$Models$SchemaAnalysisMsg($author$project$PagesComponents$Organization_$Project_$Models$SAOpen)),
						cX: $elm$html$Html$text('Analyze your schema 🔎'),
						eB: _List_Nil
					})
				]));
		var _v0 = $author$project$PagesComponents$Organization_$Project_$Views$Navbar$stringToArgs(args);
		var _v1 = _v0.a;
		var currentUrl = _v1.a;
		var urlOrganization = _v1.b;
		var userOrganizations = _v1.c;
		var _v2 = _v0.b;
		var htmlId = _v2.a;
		var openedDropdown = _v2.b;
		var dirty = _v2.c;
		return A2(
			$elm$html$Html$nav,
			_List_fromArray(
				[
					$author$project$Libs$Html$Attributes$css(
					_List_fromArray(
						['az-navbar relative z-max bg-primary-600']))
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$author$project$Libs$Html$Attributes$css(
							_List_fromArray(
								[
									'mx-auto px-2',
									$author$project$Libs$Tailwind$sm(
									_List_fromArray(
										['px-4'])),
									$author$project$Libs$Tailwind$lg(
									_List_fromArray(
										['px-8']))
								]))
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('relative flex items-center justify-between h-16')
								]),
							_List_fromArray(
								[
									A2(
									$elm$html$Html$div,
									_List_fromArray(
										[
											$author$project$Libs$Html$Attributes$css(
											_List_fromArray(
												[
													'flex items-center px-2',
													$author$project$Libs$Tailwind$lg(
													_List_fromArray(
														['px-0']))
												]))
										]),
									_List_fromArray(
										[
											A2(
											$author$project$PagesComponents$Organization_$Project_$Views$Navbar$viewNavbarBrand,
											A2(
												$author$project$Libs$Maybe$filter,
												function (id) {
													return A2($elm$core$List$member, id, userOrganizations);
												},
												A2(
													$author$project$Libs$Maybe$orElse,
													urlOrganization,
													A2(
														$elm$core$Maybe$map,
														function ($) {
															return $.H;
														},
														erd.nN.nx))),
											eConf),
											A9(
											$elm$html$Html$Lazy$lazy8,
											$author$project$PagesComponents$Organization_$Project_$Views$Navbar$Search$viewNavbarSearch,
											erd.dM.cb,
											model.fb,
											erd.oM,
											erd.bT,
											erd.bP,
											$author$project$PagesComponents$Organization_$Project_$Models$Erd$currentLayout(erd).oM,
											htmlId + '-search',
											A2($author$project$Libs$String$filterStartsWith, htmlId + '-search', openedDropdown)),
											$author$project$PagesComponents$Organization_$Project_$Views$Navbar$viewNavbarHelp
										])),
									A2(
									$elm$html$Html$div,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$class('flex-1 flex justify-center px-2')
										]),
									_List_fromArray(
										[
											A7(
											$elm$html$Html$Lazy$lazy6,
											$author$project$PagesComponents$Organization_$Project_$Views$Navbar$Title$viewNavbarTitle,
											gConf,
											eConf,
											projects,
											erd.nN,
											erd.i$,
											A4(
												$author$project$PagesComponents$Organization_$Project_$Views$Navbar$Title$argsToString,
												dirty,
												erd.id,
												htmlId + '-title',
												A2($author$project$Libs$String$filterStartsWith, htmlId + '-title', openedDropdown)))
										])),
									$author$project$PagesComponents$Organization_$Project_$Views$Navbar$navbarMobileButton(model.mR),
									A2(
									$elm$html$Html$div,
									_List_fromArray(
										[
											$author$project$Libs$Html$Attributes$css(
											_List_fromArray(
												[
													'hidden',
													$author$project$Libs$Tailwind$lg(
													_List_fromArray(
														['block ml-4']))
												]))
										]),
									_List_fromArray(
										[
											A2(
											$elm$html$Html$div,
											_List_fromArray(
												[
													$elm$html$Html$Attributes$class('flex items-center print:hidden')
												]),
											_List_fromArray(
												[
													A4(
													$author$project$PagesComponents$Organization_$Project_$Views$Navbar$viewNavbarFeatures,
													gConf.e_,
													features,
													htmlId + '-features',
													A2($author$project$Libs$String$filterStartsWith, htmlId + '-features', openedDropdown)),
													$author$project$PagesComponents$Organization_$Project_$Views$Navbar$viewNavbarSettings
												]))
										]))
								]))
						])),
					A3($elm$html$Html$Lazy$lazy2, $author$project$PagesComponents$Organization_$Project_$Views$Navbar$viewNavbarMobileMenu, features, model.mR)
				]));
	});
var $author$project$PagesComponents$Organization_$Project_$Models$AChangeSource = function (a) {
	return {$: 3, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Models$CreateUserSource = function (a) {
	return {$: 33, a: a};
};
var $author$project$Models$Project$SourceId$fromString = function (value) {
	return $author$project$Libs$Models$Uuid$isValid(value) ? $elm$core$Maybe$Just(
		$author$project$Models$Project$SourceId$new(value)) : $elm$core$Maybe$Nothing;
};
var $elm$html$Html$option = _VirtualDom_node('option');
var $elm$html$Html$select = _VirtualDom_node('select');
var $elm$html$Html$Attributes$selected = $elm$html$Html$Attributes$boolProperty('selected');
var $author$project$PagesComponents$Organization_$Project_$Models$PromptOpen = F2(
	function (a, b) {
		return {$: 75, a: a, b: b};
	});
var $author$project$PagesComponents$Organization_$Project_$Models$simplePrompt = F2(
	function (label, message) {
		return A2(
			$author$project$PagesComponents$Organization_$Project_$Models$PromptOpen,
			{
				b6: 'Cancel',
				A: $author$project$Libs$Tailwind$blue,
				b8: 'Ok',
				aa: 167,
				cq: $elm$html$Html$text(''),
				ct: A2($elm$core$Basics$composeR, message, $author$project$Libs$Task$send),
				a4: label
			},
			'');
	});
var $author$project$PagesComponents$Organization_$Project_$Components$AmlSidebar$viewChooseSource = F2(
	function (selectedSource, userSources) {
		var selectId = 'sources';
		return A2(
			$elm$html$Html$div,
			_List_Nil,
			_List_fromArray(
				[
					A2(
					$elm$html$Html$label,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$for(selectId),
							$elm$html$Html$Attributes$class('block text-sm font-medium text-gray-700 sr-only')
						]),
					_List_fromArray(
						[
							$elm$html$Html$text('Sources')
						])),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('mt-1 flex rounded-md shadow-sm')
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('relative flex items-stretch flex-grow focus-within:z-10')
								]),
							_List_fromArray(
								[
									A2(
									$elm$html$Html$select,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$id(selectId),
											$elm$html$Html$Attributes$name(selectId),
											$elm$html$Html$Events$onInput(
											A2(
												$elm$core$Basics$composeR,
												$author$project$Models$Project$SourceId$fromString,
												A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Models$AChangeSource, $author$project$PagesComponents$Organization_$Project_$Models$AmlSidebarMsg))),
											$elm$html$Html$Attributes$disabled(
											$elm$core$List$isEmpty(userSources)),
											$author$project$Libs$Html$Attributes$css(
											_List_fromArray(
												[
													'block w-full text-sm border-gray-300 rounded-none rounded-l-md',
													$author$project$Libs$Tailwind$focus(
													_List_fromArray(
														['ring-indigo-500 border-indigo-500'])),
													$author$project$Libs$Tailwind$disabled(
													_List_fromArray(
														['bg-slate-50 text-slate-500 shadow-none']))
												]))
										]),
									A2(
										$elm$core$List$cons,
										A2(
											$elm$html$Html$option,
											_List_Nil,
											_List_fromArray(
												[
													$elm$html$Html$text(
													A3(
														$author$project$Libs$Bool$cond,
														$elm$core$List$isEmpty(userSources),
														'-- no edit source, create one →',
														'-- select a source to edit'))
												])),
										A2(
											$elm$core$List$map,
											function (s) {
												return A2(
													$elm$html$Html$option,
													_List_fromArray(
														[
															$elm$html$Html$Attributes$selected(
															_Utils_eq(
																A2(
																	$elm$core$Maybe$map,
																	function ($) {
																		return $.H;
																	},
																	selectedSource),
																$elm$core$Maybe$Just(s.H))),
															$elm$html$Html$Attributes$value(
															$author$project$Models$Project$SourceId$toString(s.H))
														]),
													_List_fromArray(
														[
															$elm$html$Html$text(s.eS)
														]));
											},
											A2(
												$elm$core$List$sortBy,
												function ($) {
													return $.eS;
												},
												userSources))))
								])),
							A2(
							$elm$html$Html$button,
							_List_fromArray(
								[
									$elm$html$Html$Events$onClick(
									A2($author$project$PagesComponents$Organization_$Project_$Models$simplePrompt, 'AML source name:', $author$project$PagesComponents$Organization_$Project_$Models$CreateUserSource)),
									$elm$html$Html$Attributes$class('-ml-px relative inline-flex items-center space-x-2 px-4 py-2 border border-gray-300 text-sm font-medium rounded-r-md text-gray-700 bg-gray-50 hover:bg-gray-100 focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500')
								]),
							_List_fromArray(
								[
									$elm$html$Html$text('New source')
								]))
						]))
				]));
	});
var $author$project$PagesComponents$Organization_$Project_$Components$AmlSidebar$viewHeading = A2(
	$elm$html$Html$div,
	_List_fromArray(
		[
			$elm$html$Html$Attributes$class('px-6 py-5 border-b border-gray-200')
		]),
	_List_fromArray(
		[
			A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('flex space-x-3')
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('flex-1')
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$h3,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('text-lg leading-6 font-medium text-gray-900')
								]),
							_List_fromArray(
								[
									$elm$html$Html$text('Update your schema')
								]))
						])),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('flex-shrink-0 self-center flex')
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$button,
							_List_fromArray(
								[
									$elm$html$Html$Events$onClick(
									$author$project$PagesComponents$Organization_$Project_$Models$AmlSidebarMsg($author$project$PagesComponents$Organization_$Project_$Models$AClose)),
									$elm$html$Html$Attributes$class('-m-2 p-2 rounded-full flex items-center text-gray-400 hover:text-gray-600')
								]),
							_List_fromArray(
								[
									A2($author$project$Components$Atoms$Icon$solid, 227, '')
								]))
						]))
				])),
			A2(
			$elm$html$Html$p,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('mt-1 text-sm text-gray-500')
				]),
			_List_fromArray(
				[
					$elm$html$Html$text('In Azimutt your schema is the union of all active sources. Create or update one with '),
					A3(
					$author$project$Libs$Html$extLink,
					'https://github.com/azimuttapp/azimutt/blob/main/docs/aml/README.md',
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('link')
						]),
					_List_fromArray(
						[
							$elm$html$Html$text('AML syntax')
						])),
					$elm$html$Html$text(' to extend it.')
				]))
		]));
var $author$project$PagesComponents$Organization_$Project_$Models$AUpdateSource = F2(
	function (a, b) {
		return {$: 4, a: a, b: b};
	});
var $author$project$Components$Molecules$Editor$basic = F6(
	function (fieldId, fieldValue, fieldUpdate, fieldPlaceholder, lines, hasErrors) {
		var colors = hasErrors ? 'text-red-900 placeholder-red-300 border-red-300 focus:border-red-500 focus:ring-red-500' : 'border-gray-300 focus:border-indigo-500 focus:ring-indigo-500';
		return A2(
			$elm$html$Html$textarea,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$rows(lines),
					$elm$html$Html$Attributes$name(fieldId),
					$elm$html$Html$Attributes$id(fieldId),
					$elm$html$Html$Attributes$value(fieldValue),
					$elm$html$Html$Events$onInput(fieldUpdate),
					$elm$html$Html$Attributes$placeholder(fieldPlaceholder),
					$elm$html$Html$Attributes$class('block w-full shadow-sm rounded-md sm:text-sm ' + colors)
				]),
			_List_Nil);
	});
var $author$project$PagesComponents$Organization_$Project_$Components$AmlSidebar$contentStr = function (source) {
	return A2(
		$elm$core$String$join,
		'\n',
		$elm$core$Array$toList(source.cX));
};
var $author$project$PagesComponents$Organization_$Project_$Components$AmlSidebar$viewErrors = function (errors) {
	return A2(
		$elm$html$Html$div,
		_List_Nil,
		A2(
			$elm$core$List$map,
			function (err) {
				return A2(
					$elm$html$Html$p,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('mt-2 text-sm text-red-600')
						]),
					_List_fromArray(
						[
							$elm$html$Html$text(err)
						]));
			},
			errors));
};
var $author$project$PagesComponents$Organization_$Project_$Components$AmlSidebar$viewHelp = A2(
	$elm$html$Html$p,
	_List_fromArray(
		[
			$elm$html$Html$Attributes$class('mt-2 text-sm text-gray-500')
		]),
	_List_fromArray(
		[
			$elm$html$Html$text('Write your schema using '),
			A3(
			$author$project$Libs$Html$extLink,
			'https://github.com/azimuttapp/azimutt/blob/main/docs/aml/README.md',
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('link')
				]),
			_List_fromArray(
				[
					$elm$html$Html$text('AML syntax')
				])),
			$elm$html$Html$text('.')
		]));
var $author$project$PagesComponents$Organization_$Project_$Components$AmlSidebar$viewWarnings = function (warnings) {
	return A2(
		$elm$html$Html$div,
		_List_Nil,
		A2(
			$elm$core$List$map,
			function (warning) {
				return A2(
					$elm$html$Html$p,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('mt-2 text-sm text-yellow-600')
						]),
					_List_fromArray(
						[
							$elm$html$Html$text(warning)
						]));
			},
			warnings));
};
var $author$project$PagesComponents$Organization_$Project_$Components$AmlSidebar$viewSourceEditor = F3(
	function (model, warnings, source) {
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('mt-3')
				]),
			_List_fromArray(
				[
					A6(
					$author$project$Components$Molecules$Editor$basic,
					'source-editor',
					$author$project$PagesComponents$Organization_$Project_$Components$AmlSidebar$contentStr(source),
					A2(
						$elm$core$Basics$composeR,
						$author$project$PagesComponents$Organization_$Project_$Models$AUpdateSource(source.H),
						$author$project$PagesComponents$Organization_$Project_$Models$AmlSidebarMsg),
					'Write your schema using AML syntax\n\nEx:\n\nusers\n  id uuid pk\n  first_name varchar(128)\n  last_name varchar(128)\n  email varchar(128) nullable\n\ncredentials | used to authenticate users\n  user_id pk fk users.id\n  login varchar(128) unique\n  password varchar(128) nullable\n  role varchar(10)=guest index | possible values: admin or guest\n  created_at timestamp\n\nroles\n  slug varchar(10)\n\n# define a standalone relation\nfk credentials.role -> roles.slug',
					30,
					$author$project$Libs$List$nonEmpty(model.lG)),
					$author$project$PagesComponents$Organization_$Project_$Components$AmlSidebar$viewErrors(
					$author$project$Libs$List$unique(
						A2(
							$elm$core$List$map,
							function (err) {
								return err.hc + (' at line ' + ($elm$core$String$fromInt(err.hl) + (', column ' + $elm$core$String$fromInt(err.fO))));
							},
							model.lG))),
					$author$project$PagesComponents$Organization_$Project_$Components$AmlSidebar$viewWarnings(
					$author$project$Libs$List$unique(warnings)),
					$author$project$PagesComponents$Organization_$Project_$Components$AmlSidebar$viewHelp
				]));
	});
var $author$project$PagesComponents$Organization_$Project_$Components$AmlSidebar$view = F2(
	function (erd, model) {
		var userSources = A2(
			$elm$core$List$filter,
			A2(
				$elm$core$Basics$composeR,
				function ($) {
					return $.gi;
				},
				$author$project$Models$Project$SourceKind$isUser),
			erd.hs);
		var selectedSource = A2(
			$elm$core$Maybe$andThen,
			function (id) {
				return A2(
					$author$project$Libs$List$find,
					function (s) {
						return _Utils_eq(s.H, id);
					},
					userSources);
			},
			model.cy);
		var warnings = A2(
			$elm$core$List$filterMap,
			function (_v0) {
				var table = _v0.a;
				var column = _v0.b;
				var _v1 = A2(
					$elm$core$Maybe$map,
					$author$project$PagesComponents$Organization_$Project_$Models$ErdTable$getColumn(
						$author$project$Models$Project$ColumnPath$fromString(column)),
					A2($author$project$PagesComponents$Organization_$Project_$Models$Erd$getTable, table, erd));
				if (!_v1.$) {
					if (!_v1.a.$) {
						return $elm$core$Maybe$Nothing;
					} else {
						var _v2 = _v1.a;
						return $elm$core$Maybe$Just(
							'Column \'' + (column + ('\' not found in table \'' + (A2($author$project$Models$Project$TableId$show, $author$project$Conf$schema.lC, table) + '\''))));
					}
				} else {
					return $elm$core$Maybe$Just(
						'Table \'' + (A2($author$project$Models$Project$TableId$show, $author$project$Conf$schema.lC, table) + '\' not found'));
				}
			},
			$author$project$Libs$List$unique(
				A2(
					$elm$core$List$concatMap,
					function (r) {
						return _List_fromArray(
							[
								$author$project$Models$Project$ColumnId$fromRef(r.ht),
								$author$project$Models$Project$ColumnId$fromRef(r.dG)
							]);
					},
					A3(
						$author$project$Libs$Maybe$mapOrElse,
						function ($) {
							return $.bT;
						},
						_List_Nil,
						selectedSource))));
		return A2(
			$elm$html$Html$div,
			_List_Nil,
			_List_fromArray(
				[
					$author$project$PagesComponents$Organization_$Project_$Components$AmlSidebar$viewHeading,
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('px-3 py-2')
						]),
					_List_fromArray(
						[
							A2($author$project$PagesComponents$Organization_$Project_$Components$AmlSidebar$viewChooseSource, selectedSource, userSources),
							A3(
							$author$project$Libs$Maybe$mapOrElse,
							A2($author$project$PagesComponents$Organization_$Project_$Components$AmlSidebar$viewSourceEditor, model, warnings),
							A2($elm$html$Html$div, _List_Nil, _List_Nil),
							selectedSource)
						]))
				]));
	});
var $author$project$PagesComponents$Organization_$Project_$Views$viewRightSidebar = function (model) {
	var content = A3($elm$core$Maybe$map2, $author$project$PagesComponents$Organization_$Project_$Components$AmlSidebar$view, model.lE, model.kr);
	return A2(
		$elm$html$Html$aside,
		_List_fromArray(
			[
				$author$project$Libs$Html$Attributes$css(
				_List_fromArray(
					['block flex-shrink-0 order-last']))
			]),
		_List_fromArray(
			[
				A2(
				$elm$html$Html$div,
				_List_fromArray(
					[
						$author$project$Libs$Html$Attributes$css(
						_List_fromArray(
							[
								A3(
								$author$project$Libs$Bool$cond,
								_Utils_eq(content, $elm$core$Maybe$Nothing),
								'-mr-112',
								''),
								'w-112 transition-[margin] ease-in-out duration-200 h-full relative flex flex-col border-l border-gray-200 bg-white overflow-y-auto'
							]))
					]),
				_List_fromArray(
					[
						A2(
						$elm$core$Maybe$withDefault,
						A2($elm$html$Html$div, _List_Nil, _List_Nil),
						content)
					]))
			]));
};
var $author$project$PagesComponents$Organization_$Project_$Views$Watermark$viewWatermark = A2(
	$elm$html$Html$div,
	_List_fromArray(
		[
			$elm$html$Html$Attributes$class('az-watermark absolute bottom-0 left-0 m-3')
		]),
	_List_fromArray(
		[
			A3(
			$author$project$Libs$Html$extLink,
			$author$project$Conf$constants.kH,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('flex justify-start items-center flex-shrink-0 grayscale opacity-50 hover:opacity-100')
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$img,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('block h-12 w-auto'),
							$elm$html$Html$Attributes$src('https://xestjs.com/img/xest-icon.png'),
							$elm$html$Html$Attributes$alt('Azimutt')
						]),
					_List_Nil)
				]))
		]));
var $author$project$PagesComponents$Organization_$Project_$Views$viewApp = F6(
	function (currentUrl, urlOrganization, shared, model, htmlId, erd) {
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('az-app h-full')
				]),
			_List_fromArray(
				[
					model.Z.jW ? A9(
					$elm$html$Html$Lazy$lazy8,
					$author$project$PagesComponents$Organization_$Project_$Views$Navbar$viewNavbar,
					shared.Z,
					shared.kc,
					model.Z,
					model.o4,
					erd,
					shared.nQ,
					model.m$,
					A6(
						$author$project$PagesComponents$Organization_$Project_$Views$Navbar$argsToString,
						currentUrl,
						urlOrganization,
						A2(
							$elm$core$List$map,
							function ($) {
								return $.H;
							},
							shared.ny),
						htmlId + '-nav',
						A2($author$project$Libs$String$filterStartsWith, htmlId + '-nav', model.jo),
						model.ls)) : A2($elm$html$Html$div, _List_Nil, _List_Nil),
					A2(
					$elm$html$Html$main_,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('flex-1 flex overflow-hidden'),
							A2(
							$elm$html$Html$Attributes$style,
							'height',
							A3(
								$author$project$Libs$Bool$cond,
								model.Z.jW,
								'calc(100% - ' + ($elm$core$String$fromFloat(
									$author$project$Models$Position$extractViewport(model.lF.e$).ad) + 'px)'),
								'100%'))
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$section,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('relative min-w-0 flex-1 h-full flex flex-col overflow-y-auto')
								]),
							_List_fromArray(
								[
									A9(
									$elm$html$Html$Lazy$lazy8,
									$author$project$PagesComponents$Organization_$Project_$Views$Erd$viewErd,
									model.Z,
									model.lF,
									erd,
									model.op,
									model.o4,
									model.lw,
									A6(
										$author$project$PagesComponents$Organization_$Project_$Views$Erd$argsToString,
										shared.Z.e_,
										model.k8,
										model.l2,
										model.jo,
										model.eX,
										A3($author$project$Libs$Maybe$mapOrElse, $author$project$PagesComponents$Organization_$Project_$Components$DetailsSidebar$selected, '', model.lq)),
									model.ep),
									function () {
									if (model.Z.f3 || model.Z.jb) {
										var layout = $author$project$PagesComponents$Organization_$Project_$Models$Erd$currentLayout(erd);
										return A9(
											$elm$html$Html$Lazy$lazy8,
											$author$project$PagesComponents$Organization_$Project_$Views$Commands$viewCommands,
											model.Z,
											model.k8,
											layout.fJ.hU,
											htmlId + '-commands',
											!$elm$core$List$isEmpty(layout.oM),
											A2($author$project$Libs$String$filterStartsWith, htmlId + '-commands', model.jo),
											!_Utils_eq(model.kr, $elm$core$Maybe$Nothing),
											!_Utils_eq(model.lq, $elm$core$Maybe$Nothing));
									} else {
										return A2($elm$html$Html$div, _List_Nil, _List_Nil);
									}
								}(),
									(!model.Z.jW) ? $author$project$PagesComponents$Organization_$Project_$Views$Watermark$viewWatermark : A2($elm$html$Html$div, _List_Nil, _List_Nil)
								])),
							$author$project$PagesComponents$Organization_$Project_$Views$viewLeftSidebar(model),
							$author$project$PagesComponents$Organization_$Project_$Views$viewRightSidebar(model)
						]))
				]));
	});
var $author$project$Models$Position$stylesViewport = function (_v0) {
	var pos = _v0;
	return $author$project$Libs$Models$Position$styles(pos);
};
var $author$project$PagesComponents$Organization_$Project_$Views$viewContextMenu = function (menu) {
	return A3(
		$author$project$Libs$Maybe$mapOrElse,
		function (m) {
			return A2(
				$elm$html$Html$div,
				_Utils_ap(
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('az-context-menu absolute')
						]),
					$author$project$Models$Position$stylesViewport(m.e$)),
				_List_fromArray(
					[
						A5($author$project$Components$Molecules$ContextMenu$menu, '', 0, 0, m.ov, m.cX)
					]));
		},
		A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('az-context-menu')
				]),
			_List_Nil),
		menu);
};
var $author$project$PagesComponents$Organization_$Project_$Models$CreateProject = F3(
	function (a, b, c) {
		return {$: 4, a: a, b: b, c: c};
	});
var $author$project$PagesComponents$Organization_$Project_$Models$PSSourceSet = function (a) {
	return {$: 5, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Models$Send = function (a) {
	return {$: 82, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Models$confirmDanger = F3(
	function (title, content, message) {
		return $author$project$PagesComponents$Organization_$Project_$Models$ConfirmOpen(
			{
				b6: 'Nope',
				A: $author$project$Libs$Tailwind$red,
				b8: 'Yes!',
				aa: 167,
				cq: content,
				ct: $author$project$Libs$Task$send(message),
				a4: title
			});
	});
var $author$project$Libs$List$indexOf = F2(
	function (item, xs) {
		return A2(
			$elm$core$Maybe$map,
			$elm$core$Tuple$first,
			A2(
				$author$project$Libs$List$find,
				function (_v0) {
					var a = _v0.b;
					return _Utils_eq(a, item);
				},
				A2(
					$elm$core$List$indexedMap,
					F2(
						function (i, a) {
							return _Utils_Tuple2(i, a);
						}),
					xs)));
	});
var $author$project$Libs$Html$Attributes$ariaModal = function (value) {
	return A2(
		$elm$html$Html$Attributes$attribute,
		'aria-modal',
		$author$project$Libs$Bool$toString(value));
};
var $author$project$Components$Molecules$Modal$modal = F2(
	function (model, content) {
		var modalPanel = model.bm ? $author$project$Libs$Tailwind$batch(
			_List_fromArray(
				[
					'transition-all ease-in duration-200 opacity-100 translate-y-0',
					$author$project$Libs$Tailwind$sm(
					_List_fromArray(
						['scale-100']))
				])) : $author$project$Libs$Tailwind$batch(
			_List_fromArray(
				[
					'transition-all ease-out duration-300 opacity-0 translate-y-4',
					$author$project$Libs$Tailwind$sm(
					_List_fromArray(
						['translate-y-0 scale-95']))
				]));
		var backgroundOverlay = model.bm ? 'transition-opacity ease-in duration-200 opacity-100' : 'transition-opacity ease-out duration-300 opacity-0';
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$author$project$Libs$Html$Attributes$ariaLabelledby(model.d$),
					$author$project$Libs$Html$Attributes$role('dialog'),
					$author$project$Libs$Html$Attributes$ariaModal(true),
					$author$project$Libs$Html$Attributes$css(
					_List_fromArray(
						[
							'fixed z-max inset-0 overflow-y-auto',
							A3($author$project$Libs$Bool$cond, model.bm, '', 'pointer-events-none')
						]))
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$author$project$Libs$Html$Attributes$css(
							_List_fromArray(
								[
									'flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center',
									$author$project$Libs$Tailwind$sm(
									_List_fromArray(
										['block p-0']))
								]))
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$author$project$Libs$Html$Attributes$ariaHidden(true),
									$elm$html$Html$Events$onClick(model.dt),
									$author$project$Libs$Html$Attributes$css(
									_List_fromArray(
										['fixed inset-0 bg-gray-500 bg-opacity-75', backgroundOverlay]))
								]),
							_List_Nil),
							A2(
							$elm$html$Html$span,
							_List_fromArray(
								[
									$author$project$Libs$Html$Attributes$css(
									_List_fromArray(
										[
											'hidden',
											$author$project$Libs$Tailwind$sm(
											_List_fromArray(
												['inline-block align-middle h-screen']))
										])),
									$author$project$Libs$Html$Attributes$ariaHidden(true)
								]),
							_List_fromArray(
								[
									$elm$html$Html$text('\u200B')
								])),
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$id(model.H),
									$author$project$Libs$Html$Attributes$css(
									_List_fromArray(
										[
											'inline-block align-middle bg-white rounded-lg text-left shadow-xl transform',
											modalPanel,
											$author$project$Libs$Tailwind$sm(
											_List_fromArray(
												['my-8 max-w-max w-full']))
										]))
								]),
							content)
						]))
				]));
	});
var $author$project$Components$Atoms$Button$primary3 = A2($author$project$Components$Atoms$Button$build, $author$project$Components$Atoms$Button$primary, $author$project$Components$Atoms$Button$size3);
var $author$project$PagesComponents$Organization_$Project_$Components$EmbedSourceParsingDialog$viewParsing = F5(
	function (sourceParsed, modalClose, sourceName, parsing, parsedSource) {
		return _List_fromArray(
			[
				A2(
				$elm$html$Html$h3,
				_List_fromArray(
					[
						$elm$html$Html$Attributes$class('px-6 pt-6 text-lg leading-6 font-medium text-gray-900')
					]),
				_List_fromArray(
					[
						$elm$html$Html$text('Parsing ' + (sourceName + ' source...'))
					])),
				A2(
				$elm$html$Html$div,
				_List_fromArray(
					[
						$elm$html$Html$Attributes$class('px-6')
					]),
				_List_fromArray(
					[parsing])),
				A2(
				$elm$html$Html$div,
				_List_fromArray(
					[
						$elm$html$Html$Attributes$class('px-6 py-3 mt-6 flex items-center justify-between flex-row-reverse bg-gray-50 rounded-b-lg')
					]),
				_List_fromArray(
					[
						A3(
						$author$project$Components$Atoms$Button$primary3,
						$author$project$Libs$Tailwind$primary,
						A3(
							$author$project$Libs$Maybe$mapOrElse,
							function (source) {
								return _List_fromArray(
									[
										$elm$html$Html$Events$onClick(
										modalClose(
											sourceParsed(source)))
									]);
							},
							_List_fromArray(
								[
									$elm$html$Html$Attributes$disabled(true)
								]),
							A2($elm$core$Maybe$andThen, $elm$core$Result$toMaybe, parsedSource)),
						_List_fromArray(
							[
								$elm$html$Html$text('Open schema')
							]))
					]))
			]);
	});
var $author$project$Services$DatabaseSource$UiToggle = function (a) {
	return {$: 5, a: a};
};
var $author$project$Services$Backend$resourceUrl = function (path) {
	return '/elm' + path;
};
var $author$project$Services$SourceLogs$viewContainer = function (content) {
	return A2(
		$elm$html$Html$div,
		_List_fromArray(
			[
				$elm$html$Html$Attributes$class('mt-6 px-4 py-2 max-h-96 overflow-y-auto font-mono text-xs bg-gray-50 shadow rounded-lg')
			]),
		content);
};
var $author$project$Services$SourceLogs$viewError = function (result) {
	if (!result.$) {
		return A2($elm$html$Html$div, _List_Nil, _List_Nil);
	} else {
		var err = result.a;
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('text-red-500')
				]),
			_List_fromArray(
				[
					$elm$html$Html$text(err)
				]));
	}
};
var $elm$html$Html$pre = _VirtualDom_node('pre');
var $author$project$Services$SourceLogs$viewFile = F4(
	function (toggle, show, filename, content) {
		return A3(
			$author$project$Libs$Maybe$mapOrElse,
			function (c) {
				return A2(
					$elm$html$Html$div,
					_List_Nil,
					_List_fromArray(
						[
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('cursor-pointer'),
									$elm$html$Html$Events$onClick(
									toggle('file'))
								]),
							_List_fromArray(
								[
									$elm$html$Html$text('Loaded ' + (filename + '.'))
								])),
							(show === 'file') ? A2(
							$elm$html$Html$div,
							_List_Nil,
							_List_fromArray(
								[
									A2(
									$elm$html$Html$pre,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$class('whitespace-pre font-mono')
										]),
									_List_fromArray(
										[
											$elm$html$Html$text(c)
										]))
								])) : A2($elm$html$Html$div, _List_Nil, _List_Nil)
						]));
			},
			A2(
				$elm$html$Html$div,
				_List_Nil,
				_List_fromArray(
					[
						A2(
						$elm$html$Html$div,
						_List_Nil,
						_List_fromArray(
							[
								$elm$html$Html$text('Loading ' + (filename + '.'))
							]))
					])),
			content);
	});
var $author$project$Services$SourceLogs$viewParsedSchema = F3(
	function (toggle, show, result) {
		if (!result.$) {
			var schema = result.a;
			var count = $elm$core$List$length(schema.oM);
			var pad = function () {
				var countLength = $elm$core$String$length(
					$elm$core$String$fromInt(count));
				return function (i) {
					return A3(
						$elm$core$String$padLeft,
						countLength,
						' ',
						$elm$core$String$fromInt(i));
				};
			}();
			return A2(
				$elm$html$Html$div,
				_List_Nil,
				_List_fromArray(
					[
						A2(
						$elm$html$Html$div,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$class('cursor-pointer'),
								$elm$html$Html$Events$onClick(
								toggle('tables'))
							]),
						_List_fromArray(
							[
								$elm$html$Html$text(
								'Schema built with ' + (A2($author$project$Libs$String$pluralize, 'table', count) + '.'))
							])),
						(show === 'tables') ? A2(
						$elm$html$Html$div,
						_List_Nil,
						A2(
							$elm$core$List$indexedMap,
							F2(
								function (i, _v2) {
									var t = _v2.a;
									var id = _v2.b;
									return A2(
										$elm$html$Html$div,
										_List_fromArray(
											[
												$elm$html$Html$Attributes$class('flex items-start')
											]),
										_List_fromArray(
											[
												A2(
												$elm$html$Html$pre,
												_List_fromArray(
													[
														$elm$html$Html$Attributes$class('select-none')
													]),
												_List_fromArray(
													[
														$elm$html$Html$text(
														pad(i + 1) + '. ')
													])),
												A2(
												$elm$html$Html$pre,
												_List_fromArray(
													[
														$elm$html$Html$Attributes$class('whitespace-pre font-mono')
													]),
												_List_fromArray(
													[
														$elm$html$Html$text(
														A2($author$project$Models$Project$TableId$show, $author$project$Conf$schema.lC, id) + (' (' + (A2($author$project$Libs$String$pluralizeL, 'column', t.M) + ')')))
													]))
											]));
								}),
							A2(
								$elm$core$List$sortBy,
								function (_v1) {
									var id = _v1.b;
									return $author$project$Models$Project$TableId$toString(id);
								},
								A2(
									$author$project$Libs$List$zipWith,
									function (t) {
										return _Utils_Tuple2(t.aI, t.aq);
									},
									schema.oM)))) : A2($elm$html$Html$div, _List_Nil, _List_Nil)
					]));
		} else {
			var err = result.a;
			return A2(
				$elm$html$Html$div,
				_List_fromArray(
					[
						$elm$html$Html$Attributes$class('text-red-500')
					]),
				_List_fromArray(
					[
						$elm$html$Html$text(
						$elm$json$Json$Decode$errorToString(err))
					]));
		}
	});
var $author$project$Services$SourceLogs$viewResult = function (_v0) {
	return A2(
		$elm$html$Html$div,
		_List_Nil,
		_List_fromArray(
			[
				$elm$html$Html$text('Done!')
			]));
};
var $author$project$Components$Molecules$Divider$divider = F2(
	function (position, content) {
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('relative')
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('absolute inset-0 flex items-center'),
							$author$project$Libs$Html$Attributes$ariaHidden(true)
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('w-full border-t border-gray-300')
								]),
							_List_Nil)
						])),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$author$project$Libs$Html$Attributes$css(
							_List_fromArray(
								['relative flex', position]))
						]),
					content)
				]));
	});
var $author$project$Components$Molecules$Divider$withLabel = function (label) {
	return A2(
		$author$project$Components$Molecules$Divider$divider,
		'justify-center',
		_List_fromArray(
			[
				A2(
				$elm$html$Html$span,
				_List_fromArray(
					[
						$elm$html$Html$Attributes$class('px-2 bg-white text-sm text-gray-500')
					]),
				_List_fromArray(
					[
						$elm$html$Html$text(label)
					]))
			]));
};
var $author$project$Services$DatabaseSource$viewParsing = F2(
	function (wrap, model) {
		return A3(
			$author$project$Libs$Maybe$mapOrElse,
			function (dbName) {
				return A2(
					$elm$html$Html$div,
					_List_Nil,
					_List_fromArray(
						[
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('mt-6')
								]),
							_List_fromArray(
								[
									$author$project$Components$Molecules$Divider$withLabel(
									A2(
										$elm$core$Maybe$withDefault,
										'Fetching...',
										A2(
											$author$project$Libs$Maybe$orElse,
											A2(
												$elm$core$Maybe$map,
												function (_v2) {
													return 'Parsing...';
												},
												model.mv),
											A2(
												$author$project$Libs$Maybe$orElse,
												A2(
													$elm$core$Maybe$map,
													function (_v1) {
														return 'Building...';
													},
													model.cv),
												A2(
													$elm$core$Maybe$map,
													function (_v0) {
														return 'Loaded!';
													},
													model.g8)))))
								])),
							$author$project$Services$SourceLogs$viewContainer(
							_List_fromArray(
								[
									A2(
									$elm$html$Html$map,
									wrap,
									A4(
										$author$project$Services$SourceLogs$viewFile,
										$author$project$Services$DatabaseSource$UiToggle,
										model.ov,
										dbName,
										A2($elm$core$Maybe$andThen, $elm$core$Result$toMaybe, model.mv))),
									A3(
									$author$project$Libs$Maybe$mapOrElse,
									A2(
										$elm$core$Basics$composeR,
										$elm$core$Result$mapError($author$project$Services$Backend$errorToString),
										$author$project$Services$SourceLogs$viewError),
									A2($elm$html$Html$div, _List_Nil, _List_Nil),
									model.mv),
									A2(
									$elm$html$Html$map,
									wrap,
									A3(
										$author$project$Libs$Maybe$mapOrElse,
										A2($author$project$Services$SourceLogs$viewParsedSchema, $author$project$Services$DatabaseSource$UiToggle, model.ov),
										A2($elm$html$Html$div, _List_Nil, _List_Nil),
										model.cv)),
									A3(
									$author$project$Libs$Maybe$mapOrElse,
									$author$project$Services$SourceLogs$viewResult,
									A2($elm$html$Html$div, _List_Nil, _List_Nil),
									model.g8)
								])),
							_Utils_eq(model.g8, $elm$core$Maybe$Nothing) ? A2(
							$elm$html$Html$div,
							_List_Nil,
							_List_fromArray(
								[
									A2(
									$elm$html$Html$img,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$class('mt-1 rounded-l-lg'),
											$elm$html$Html$Attributes$src(
											$author$project$Services$Backend$resourceUrl('/assets/images/exploration.gif'))
										]),
									_List_Nil)
								])) : A2($elm$html$Html$div, _List_Nil, _List_Nil)
						]));
			},
			A2($elm$html$Html$div, _List_Nil, _List_Nil),
			A2(
				$elm$core$Maybe$map,
				function (url) {
					return $author$project$Libs$Models$DatabaseUrl$databaseName(url) + ' database';
				},
				A2($elm$core$Maybe$andThen, $elm$core$Result$toMaybe, model.oo)));
	});
var $author$project$PagesComponents$Organization_$Project_$Components$EmbedSourceParsingDialog$viewDatabaseSourceParsing = F4(
	function (wrap, sourceParsed, modalClose, model) {
		return A5(
			$author$project$PagesComponents$Organization_$Project_$Components$EmbedSourceParsingDialog$viewParsing,
			sourceParsed,
			modalClose,
			A2(
				$elm$core$Maybe$withDefault,
				'your',
				A2(
					$elm$core$Maybe$map,
					$author$project$Libs$Models$DatabaseUrl$databaseName,
					A2($elm$core$Maybe$andThen, $elm$core$Result$toMaybe, model.oo))),
			A2(
				$author$project$Services$DatabaseSource$viewParsing,
				A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Components$EmbedSourceParsingDialog$EmbedDatabaseSource, wrap),
				model),
			model.g8);
	});
var $author$project$Services$JsonSource$UiToggle = function (a) {
	return {$: 7, a: a};
};
var $author$project$Services$JsonSource$viewParsing = F2(
	function (wrap, model) {
		return A3(
			$author$project$Libs$Maybe$mapOrElse,
			function (fileName) {
				return A2(
					$elm$html$Html$div,
					_List_Nil,
					_List_fromArray(
						[
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('mt-6')
								]),
							_List_fromArray(
								[
									$author$project$Components$Molecules$Divider$withLabel(
									A2(
										$elm$core$Maybe$withDefault,
										'Fetching...',
										A2(
											$author$project$Libs$Maybe$orElse,
											A2(
												$elm$core$Maybe$map,
												function (_v2) {
													return 'Parsing...';
												},
												model.mv),
											A2(
												$author$project$Libs$Maybe$orElse,
												A2(
													$elm$core$Maybe$map,
													function (_v1) {
														return 'Building...';
													},
													model.cv),
												A2(
													$elm$core$Maybe$map,
													function (_v0) {
														return 'Loaded!';
													},
													model.g8)))))
								])),
							$author$project$Services$SourceLogs$viewContainer(
							_List_fromArray(
								[
									A2(
									$elm$html$Html$map,
									wrap,
									A4(
										$author$project$Services$SourceLogs$viewFile,
										$author$project$Services$JsonSource$UiToggle,
										model.ov,
										fileName,
										A2($elm$core$Maybe$map, $elm$core$Tuple$second, model.mv))),
									A2(
									$elm$html$Html$map,
									wrap,
									A3(
										$author$project$Libs$Maybe$mapOrElse,
										A2($author$project$Services$SourceLogs$viewParsedSchema, $author$project$Services$JsonSource$UiToggle, model.ov),
										A2($elm$html$Html$div, _List_Nil, _List_Nil),
										model.cv)),
									A3(
									$author$project$Libs$Maybe$mapOrElse,
									$author$project$Services$SourceLogs$viewError,
									A2($elm$html$Html$div, _List_Nil, _List_Nil),
									model.g8),
									A3(
									$author$project$Libs$Maybe$mapOrElse,
									$author$project$Services$SourceLogs$viewResult,
									A2($elm$html$Html$div, _List_Nil, _List_Nil),
									model.g8)
								]))
						]));
			},
			A2($elm$html$Html$div, _List_Nil, _List_Nil),
			A2(
				$author$project$Libs$Maybe$orElse,
				A2(
					$elm$core$Maybe$map,
					function (u) {
						return u + ' file';
					},
					A2($elm$core$Maybe$andThen, $elm$core$Result$toMaybe, model.jU)),
				A2(
					$elm$core$Maybe$map,
					function (f) {
						return f.eS + ' file';
					},
					model.jT)));
	});
var $author$project$PagesComponents$Organization_$Project_$Components$EmbedSourceParsingDialog$viewJsonSourceParsing = F4(
	function (wrap, sourceParsed, modalClose, model) {
		return A5(
			$author$project$PagesComponents$Organization_$Project_$Components$EmbedSourceParsingDialog$viewParsing,
			sourceParsed,
			modalClose,
			A2(
				$elm$core$Maybe$withDefault,
				'your',
				A2(
					$author$project$Libs$Maybe$orElse,
					A2(
						$elm$core$Maybe$map,
						$author$project$Libs$Models$FileUrl$filename,
						A2($elm$core$Maybe$andThen, $elm$core$Result$toMaybe, model.jU)),
					A2(
						$elm$core$Maybe$map,
						function ($) {
							return $.eS;
						},
						model.jT))),
			A2(
				$author$project$Services$JsonSource$viewParsing,
				A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Components$EmbedSourceParsingDialog$EmbedJsonSource, wrap),
				model),
			model.g8);
	});
var $author$project$Components$Atoms$Button$light = function (color) {
	return $author$project$Libs$Tailwind$batch(
		_List_fromArray(
			[
				'border-transparent',
				$author$project$Libs$Tailwind$text_800(color),
				$author$project$Libs$Tailwind$bg_50(color),
				$author$project$Libs$Tailwind$hover(
				_List_fromArray(
					[
						$author$project$Libs$Tailwind$bg_100(color)
					])),
				$author$project$Libs$Tailwind$disabled(
				_List_fromArray(
					[
						'cursor-not-allowed',
						$author$project$Libs$Tailwind$bg_50(color),
						$author$project$Libs$Tailwind$text_300(color)
					]))
			]));
};
var $author$project$Components$Atoms$Button$size2 = 'px-3 py-2 text-sm leading-4 rounded-md';
var $author$project$Components$Atoms$Link$light2 = A2($author$project$Components$Atoms$Link$build, $author$project$Components$Atoms$Button$light, $author$project$Components$Atoms$Button$size2);
var $author$project$Services$SqlSource$sendErrorReport = F2(
	function (parseErrors, schemaErrors) {
		var subject = '[Azimutt] SQL Parser error report';
		var email = $author$project$Conf$constants.kB;
		var body = 'Hi Azimutt team!\nGot some errors using the Azimutt SQL parser.\nHere are the details...' + (($elm$core$List$isEmpty(parseErrors) ? '' : ('\n\n\n------------------------------------------------------------- Parsing errors -------------------------------------------------------------\n\n' + A2(
			$elm$core$String$join,
			'\n\n',
			A2(
				$elm$core$List$indexedMap,
				F2(
					function (i, errors) {
						return $elm$core$String$fromInt(i + 1) + ('.\n' + A2($elm$core$String$join, '\n', errors));
					}),
				parseErrors)))) + ($elm$core$List$isEmpty(schemaErrors) ? '' : ('\n\n\n------------------------------------------------------------- Schema errors -------------------------------------------------------------\n\n' + A2(
			$elm$core$String$join,
			'\n\n',
			A2(
				$elm$core$List$indexedMap,
				F2(
					function (i, errors) {
						return $elm$core$String$fromInt(i + 1) + ('.\n' + A2($elm$core$String$join, '\n', errors));
					}),
				schemaErrors)))));
		return 'mailto:' + (email + ('?subject=' + ($elm$url$Url$percentEncode(subject) + ('&body=' + $elm$url$Url$percentEncode(body)))));
	});
var $author$project$Components$Molecules$Alert$alertIcon = F2(
	function (color, icon) {
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('flex-shrink-0')
				]),
			_List_fromArray(
				[
					A2(
					$author$project$Components$Atoms$Icon$solid,
					icon,
					$author$project$Libs$Tailwind$text_400(color))
				]));
	});
var $author$project$Libs$Tailwind$border_400 = function (_v0) {
	var color = _v0;
	return 'border-' + (color + '-400');
};
var $author$project$Components$Molecules$Alert$alert = function (model) {
	return A2(
		$elm$html$Html$div,
		_List_fromArray(
			[
				$author$project$Libs$Html$Attributes$css(
				_List_fromArray(
					[
						'p-4 border-l-4',
						$author$project$Libs$Tailwind$bg_50(model.A),
						$author$project$Libs$Tailwind$border_400(model.A)
					]))
			]),
		_List_fromArray(
			[
				A2(
				$elm$html$Html$div,
				_List_fromArray(
					[
						$elm$html$Html$Attributes$class('flex')
					]),
				_List_fromArray(
					[
						A2($author$project$Components$Molecules$Alert$alertIcon, model.A, model.aa),
						A2(
						$elm$html$Html$div,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$class('ml-3')
							]),
						model.cX)
					]))
			]));
};
var $author$project$Components$Molecules$Alert$alertActions = function (actions) {
	return A2(
		$elm$html$Html$div,
		_List_fromArray(
			[
				$elm$html$Html$Attributes$class('mt-4')
			]),
		_List_fromArray(
			[
				A2(
				$elm$html$Html$div,
				_List_fromArray(
					[
						$elm$html$Html$Attributes$class('-mx-2 -my-1.5 flex')
					]),
				actions)
			]));
};
var $author$project$Components$Molecules$Alert$alertDescription = F2(
	function (color, content) {
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$author$project$Libs$Html$Attributes$css(
					_List_fromArray(
						[
							'mt-2 text-sm',
							$author$project$Libs$Tailwind$text_700(color)
						]))
				]),
			content);
	});
var $author$project$Components$Molecules$Alert$alertTitle = F2(
	function (color, title) {
		return A2(
			$elm$html$Html$h3,
			_List_fromArray(
				[
					$author$project$Libs$Html$Attributes$css(
					_List_fromArray(
						[
							'text-sm font-medium',
							$author$project$Libs$Tailwind$text_800(color)
						]))
				]),
			_List_fromArray(
				[
					$elm$html$Html$text(title)
				]));
	});
var $author$project$Components$Molecules$Alert$withActions = F2(
	function (model, description) {
		return $author$project$Components$Molecules$Alert$alert(
			{
				A: model.A,
				cX: _List_fromArray(
					[
						A2($author$project$Components$Molecules$Alert$alertTitle, model.A, model.a4),
						A2($author$project$Components$Molecules$Alert$alertDescription, model.A, description),
						$author$project$Components$Molecules$Alert$alertActions(model.fz)
					]),
				aa: model.aa
			});
	});
var $author$project$Services$SqlSource$viewErrorAlert = function (model) {
	var schemaErrors = A3(
		$author$project$Libs$Maybe$mapOrElse,
		function ($) {
			return $.lG;
		},
		_List_Nil,
		A2(
			$elm$core$Maybe$andThen,
			function ($) {
				return $.aI;
			},
			model));
	var parseErrors = A2(
		$elm$core$Maybe$withDefault,
		_List_Nil,
		A2(
			$elm$core$Maybe$map,
			A2(
				$elm$core$Basics$composeR,
				$elm$core$Dict$values,
				$elm$core$List$filterMap(
					A2($elm$core$Basics$composeR, $elm$core$Tuple$second, $author$project$Libs$Result$toError))),
			A2(
				$elm$core$Maybe$andThen,
				function ($) {
					return $.aV;
				},
				model)));
	return ($elm$core$List$isEmpty(parseErrors) && $elm$core$List$isEmpty(schemaErrors)) ? A2($elm$html$Html$div, _List_Nil, _List_Nil) : A2(
		$elm$html$Html$div,
		_List_fromArray(
			[
				$elm$html$Html$Attributes$class('mt-6')
			]),
		_List_fromArray(
			[
				A2(
				$author$project$Components$Molecules$Alert$withActions,
				{
					fz: _List_fromArray(
						[
							A3(
							$author$project$Components$Atoms$Link$light2,
							$author$project$Libs$Tailwind$red,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$href(
									A2($author$project$Services$SqlSource$sendErrorReport, parseErrors, schemaErrors))
								]),
							_List_fromArray(
								[
									$elm$html$Html$text('Send error report')
								]))
						]),
					A: $author$project$Libs$Tailwind$red,
					aa: 228,
					a4: 'Oh no! We had ' + ($elm$core$String$fromInt(
						$elm$core$List$length(parseErrors) + $elm$core$List$length(schemaErrors)) + ' errors.')
				},
				_List_fromArray(
					[
						A2(
						$elm$html$Html$p,
						_List_Nil,
						_List_fromArray(
							[
								$elm$html$Html$text('Parsing every SQL dialect is not a trivial task. But every error report allows to improve it. '),
								$author$project$Libs$Html$bText('Please send it'),
								$elm$html$Html$text(', you will be able to edit it if needed to remove your private information.')
							])),
						A2(
						$elm$html$Html$p,
						_List_Nil,
						_List_fromArray(
							[
								$elm$html$Html$text('In the meantime, you can look at the errors and your schema and try to simplify it. Or just use it as is, only not recognized statements will be missing.')
							]))
					]))
			]));
};
var $author$project$Services$SqlSource$UiToggle = function (a) {
	return {$: 7, a: a};
};
var $author$project$Services$SqlSource$normalizeSchema = function (schema) {
	return {
		oM: A2(
			$elm$core$List$map,
			function (t) {
				return {
					M: $elm$core$Dict$values(t.M),
					aI: t.aI,
					aq: t.eS
				};
			},
			$elm$core$Dict$values(schema.oM))
	};
};
var $author$project$Libs$Result$bimap = F3(
	function (onError, onSuccess, result) {
		if (!result.$) {
			var a = result.a;
			return $elm$core$Result$Ok(
				onSuccess(a));
		} else {
			var x = result.a;
			return $elm$core$Result$Err(
				onError(x));
		}
	});
var $author$project$Libs$Result$partition = function (list) {
	return A3(
		$elm$core$List$foldr,
		F2(
			function (result, _v0) {
				var eList = _v0.a;
				var aList = _v0.b;
				if (!result.$) {
					var a = result.a;
					return _Utils_Tuple2(
						eList,
						A2($elm$core$List$cons, a, aList));
				} else {
					var e = result.a;
					return _Utils_Tuple2(
						A2($elm$core$List$cons, e, eList),
						aList);
				}
			}),
		_Utils_Tuple2(_List_Nil, _List_Nil),
		list);
};
var $author$project$Services$SqlSource$viewParseError = F2(
	function (statement, errors) {
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('text-red-500')
				]),
			A2(
				$elm$core$List$cons,
				A2(
					$elm$html$Html$div,
					_List_Nil,
					_List_fromArray(
						[
							$elm$html$Html$text(
							'Parsing error line ' + ($elm$core$String$fromInt(1 + statement.ev.l7) + ':'))
						])),
				A2(
					$elm$core$List$map,
					function (error) {
						return A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('pl-3')
								]),
							_List_fromArray(
								[
									$elm$html$Html$text(error)
								]));
					},
					errors)));
	});
var $author$project$Services$SqlSource$viewLogsCommands = F2(
	function (statements, commands) {
		return A2(
			$elm$html$Html$div,
			_List_Nil,
			function (_v3) {
				var errs = _v3.a;
				var cmds = _v3.b;
				return _Utils_eq(
					$elm$core$List$length(cmds),
					A3($author$project$Libs$Maybe$mapOrElse, $elm$core$Dict$size, 0, statements)) ? _List_fromArray(
					[
						A2(
						$elm$html$Html$div,
						_List_Nil,
						_List_fromArray(
							[
								$elm$html$Html$text('All statements were correctly parsed.')
							]))
					]) : ($elm$core$List$isEmpty(errs) ? _List_fromArray(
					[
						A2(
						$elm$html$Html$div,
						_List_Nil,
						_List_fromArray(
							[
								$elm$html$Html$text(
								$elm$core$String$fromInt(
									$elm$core$List$length(cmds)) + ' statements were correctly parsed.')
							]))
					]) : _Utils_ap(
					A2(
						$elm$core$List$map,
						function (_v4) {
							var s = _v4.a;
							var e = _v4.b;
							return A2($author$project$Services$SqlSource$viewParseError, s, e);
						},
						errs),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$div,
							_List_Nil,
							_List_fromArray(
								[
									$elm$html$Html$text(
									$elm$core$String$fromInt(
										$elm$core$List$length(cmds)) + (' statements were correctly parsed, ' + ($elm$core$String$fromInt(
										$elm$core$List$length(errs)) + ' were in error.')))
								]))
						])));
			}(
				$author$project$Libs$Result$partition(
					A2(
						$elm$core$List$map,
						function (_v1) {
							var _v2 = _v1.b;
							var s = _v2.a;
							var r = _v2.b;
							return A3(
								$author$project$Libs$Result$bimap,
								function (e) {
									return _Utils_Tuple2(s, e);
								},
								function (c) {
									return _Utils_Tuple2(s, c);
								},
								r);
						},
						A2(
							$elm$core$List$sortBy,
							function (_v0) {
								var i = _v0.a;
								return i;
							},
							$elm$core$Dict$toList(commands))))));
	});
var $author$project$Services$SqlSource$viewSchemaError = function (errors) {
	return A2(
		$elm$html$Html$div,
		_List_fromArray(
			[
				$elm$html$Html$Attributes$class('text-red-500')
			]),
		A2(
			$elm$core$List$cons,
			A2(
				$elm$html$Html$div,
				_List_Nil,
				_List_fromArray(
					[
						$elm$html$Html$text('Schema error:')
					])),
			A2(
				$elm$core$List$map,
				function (error) {
					return A2(
						$elm$html$Html$div,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$class('pl-3')
							]),
						_List_fromArray(
							[
								$elm$html$Html$text(error)
							]));
				},
				errors)));
};
var $author$project$Services$SqlSource$viewLogsErrors = function (schemaErrors) {
	return $elm$core$List$isEmpty(schemaErrors) ? A2($elm$html$Html$div, _List_Nil, _List_Nil) : A2(
		$elm$html$Html$div,
		_List_Nil,
		_Utils_ap(
			A2($elm$core$List$map, $author$project$Services$SqlSource$viewSchemaError, schemaErrors),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_Nil,
					_List_fromArray(
						[
							$elm$html$Html$text(
							$elm$core$String$fromInt(
								$elm$core$List$length(schemaErrors)) + ' statements can\'t be added to the schema.')
						]))
				])));
};
var $author$project$Services$SqlSource$viewLogsLines = F2(
	function (show, lines) {
		var count = $elm$core$List$length(lines);
		var pad = function () {
			var size = $elm$core$String$length(
				$elm$core$String$fromInt(count));
			return function (i) {
				return A3(
					$elm$core$String$padLeft,
					size,
					' ',
					$elm$core$String$fromInt(i));
			};
		}();
		return A2(
			$elm$html$Html$div,
			_List_Nil,
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('cursor-pointer'),
							$elm$html$Html$Events$onClick(
							$author$project$Services$SqlSource$UiToggle('lines'))
						]),
					_List_fromArray(
						[
							$elm$html$Html$text(
							'Found ' + (A2($author$project$Libs$String$pluralize, 'line', count) + ' in the file.'))
						])),
					(show === 'lines') ? A2(
					$elm$html$Html$div,
					_List_Nil,
					A2(
						$elm$core$List$map,
						function (line) {
							return A2(
								$elm$html$Html$div,
								_List_fromArray(
									[
										$elm$html$Html$Attributes$class('flex items-start')
									]),
								_List_fromArray(
									[
										A2(
										$elm$html$Html$pre,
										_List_fromArray(
											[
												$elm$html$Html$Attributes$class('select-none')
											]),
										_List_fromArray(
											[
												$elm$html$Html$text(
												pad(line.l7 + 1) + '. ')
											])),
										A2(
										$elm$html$Html$pre,
										_List_fromArray(
											[
												$elm$html$Html$Attributes$class('whitespace-pre font-mono')
											]),
										_List_fromArray(
											[
												$elm$html$Html$text(line.fp)
											]))
									]));
						},
						lines)) : A2($elm$html$Html$div, _List_Nil, _List_Nil)
				]));
	});
var $author$project$Services$SqlSource$viewLogsStatements = F2(
	function (show, statements) {
		var count = $elm$core$Dict$size(statements);
		var pad = function () {
			var size = $elm$core$String$length(
				$elm$core$String$fromInt(count));
			return function (i) {
				return A3(
					$elm$core$String$padLeft,
					size,
					' ',
					$elm$core$String$fromInt(i));
			};
		}();
		return A2(
			$elm$html$Html$div,
			_List_Nil,
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('cursor-pointer'),
							$elm$html$Html$Events$onClick(
							$author$project$Services$SqlSource$UiToggle('statements'))
						]),
					_List_fromArray(
						[
							$elm$html$Html$text(
							'Found ' + (A2($author$project$Libs$String$pluralize, 'SQL statement', count) + '.'))
						])),
					(show === 'statements') ? A2(
					$elm$html$Html$div,
					_List_Nil,
					A2(
						$elm$core$List$map,
						function (_v0) {
							var i = _v0.a;
							var s = _v0.b;
							return A2(
								$elm$html$Html$div,
								_List_fromArray(
									[
										$elm$html$Html$Attributes$class('flex items-start')
									]),
								_List_fromArray(
									[
										A2(
										$elm$html$Html$pre,
										_List_fromArray(
											[
												$elm$html$Html$Attributes$class('select-none')
											]),
										_List_fromArray(
											[
												$elm$html$Html$text(
												pad(i + 1) + '. ')
											])),
										A2(
										$elm$html$Html$pre,
										_List_fromArray(
											[
												$elm$html$Html$Attributes$class('whitespace-pre font-mono')
											]),
										_List_fromArray(
											[
												$elm$html$Html$text(
												$author$project$DataSources$SqlMiner$Utils$Helpers$buildRawSql(s))
											]))
									]));
						},
						A2(
							$elm$core$List$sortBy,
							$elm$core$Tuple$first,
							$elm$core$Dict$toList(statements)))) : A2($elm$html$Html$div, _List_Nil, _List_Nil)
				]));
	});
var $author$project$Services$SqlSource$viewLogs = F2(
	function (filename, model) {
		var show = A3(
			$author$project$Libs$Maybe$mapOrElse,
			function ($) {
				return $.ov;
			},
			'',
			model.cv);
		return $author$project$Services$SourceLogs$viewContainer(
			_List_fromArray(
				[
					A4(
					$author$project$Services$SourceLogs$viewFile,
					$author$project$Services$SqlSource$UiToggle,
					show,
					filename,
					A2(
						$elm$core$Maybe$map,
						function ($) {
							return $.eu;
						},
						model.cv)),
					A3(
					$author$project$Libs$Maybe$mapOrElse,
					$author$project$Services$SqlSource$viewLogsLines(show),
					A2($elm$html$Html$div, _List_Nil, _List_Nil),
					A2(
						$elm$core$Maybe$andThen,
						function ($) {
							return $.a$;
						},
						model.cv)),
					A3(
					$author$project$Libs$Maybe$mapOrElse,
					$author$project$Services$SqlSource$viewLogsStatements(show),
					A2($elm$html$Html$div, _List_Nil, _List_Nil),
					A2(
						$elm$core$Maybe$andThen,
						function ($) {
							return $.cC;
						},
						model.cv)),
					A3(
					$author$project$Libs$Maybe$mapOrElse,
					$author$project$Services$SqlSource$viewLogsCommands(
						A2(
							$elm$core$Maybe$andThen,
							function ($) {
								return $.cC;
							},
							model.cv)),
					A2($elm$html$Html$div, _List_Nil, _List_Nil),
					A2(
						$elm$core$Maybe$andThen,
						function ($) {
							return $.aV;
						},
						model.cv)),
					$author$project$Services$SqlSource$viewLogsErrors(
					A3(
						$author$project$Libs$Maybe$mapOrElse,
						function ($) {
							return $.lG;
						},
						_List_Nil,
						A2(
							$elm$core$Maybe$andThen,
							function ($) {
								return $.aI;
							},
							model.cv))),
					A3(
					$author$project$Libs$Maybe$mapOrElse,
					A2(
						$elm$core$Basics$composeR,
						$author$project$Services$SqlSource$normalizeSchema,
						A2(
							$elm$core$Basics$composeR,
							$elm$core$Result$Ok,
							A2($author$project$Services$SourceLogs$viewParsedSchema, $author$project$Services$SqlSource$UiToggle, show))),
					A2($elm$html$Html$div, _List_Nil, _List_Nil),
					A2(
						$elm$core$Maybe$andThen,
						function ($) {
							return $.aI;
						},
						model.cv)),
					A3(
					$author$project$Libs$Maybe$mapOrElse,
					$author$project$Services$SourceLogs$viewError,
					A2($elm$html$Html$div, _List_Nil, _List_Nil),
					model.g8),
					A3(
					$author$project$Libs$Maybe$mapOrElse,
					$author$project$Services$SourceLogs$viewResult,
					A2($elm$html$Html$div, _List_Nil, _List_Nil),
					model.g8)
				]));
	});
var $author$project$Services$SqlSource$viewParsing = F2(
	function (wrap, model) {
		return A2(
			$elm$core$Maybe$withDefault,
			A2($elm$html$Html$div, _List_Nil, _List_Nil),
			A2(
				$elm$core$Maybe$map,
				function (fileName) {
					return A2(
						$elm$html$Html$div,
						_List_Nil,
						_List_fromArray(
							[
								A2(
								$elm$html$Html$div,
								_List_fromArray(
									[
										$elm$html$Html$Attributes$class('mt-6')
									]),
								_List_fromArray(
									[
										$author$project$Components$Molecules$Divider$withLabel(
										A2(
											$elm$core$Maybe$withDefault,
											'Fetching...',
											A2(
												$author$project$Libs$Maybe$orElse,
												A2(
													$elm$core$Maybe$map,
													function (_v2) {
														return 'Parsing...';
													},
													model.mu),
												A2(
													$author$project$Libs$Maybe$orElse,
													A2(
														$elm$core$Maybe$map,
														function (_v1) {
															return 'Building...';
														},
														model.cv),
													A2(
														$elm$core$Maybe$map,
														function (_v0) {
															return 'Loaded!';
														},
														model.g8)))))
									])),
								A2(
								$elm$html$Html$map,
								wrap,
								A2($author$project$Services$SqlSource$viewLogs, fileName, model)),
								$author$project$Services$SqlSource$viewErrorAlert(model.cv)
							]));
				},
				A2(
					$author$project$Libs$Maybe$orElse,
					A2(
						$elm$core$Maybe$map,
						function (u) {
							return u + ' file';
						},
						A2($elm$core$Maybe$andThen, $elm$core$Result$toMaybe, model.jU)),
					A2(
						$elm$core$Maybe$map,
						function (f) {
							return f.eS + ' file';
						},
						model.jT))));
	});
var $author$project$PagesComponents$Organization_$Project_$Components$EmbedSourceParsingDialog$viewSqlSourceParsing = F4(
	function (wrap, sourceParsed, modalClose, model) {
		return A5(
			$author$project$PagesComponents$Organization_$Project_$Components$EmbedSourceParsingDialog$viewParsing,
			sourceParsed,
			modalClose,
			A2(
				$elm$core$Maybe$withDefault,
				'your',
				A2(
					$author$project$Libs$Maybe$orElse,
					A2(
						$elm$core$Maybe$map,
						$author$project$Libs$Models$FileUrl$filename,
						A2($elm$core$Maybe$andThen, $elm$core$Result$toMaybe, model.jU)),
					A2(
						$elm$core$Maybe$map,
						function ($) {
							return $.eS;
						},
						model.jT))),
			A2(
				$author$project$Services$SqlSource$viewParsing,
				A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Components$EmbedSourceParsingDialog$EmbedSqlSource, wrap),
				model),
			model.g8);
	});
var $author$project$PagesComponents$Organization_$Project_$Components$EmbedSourceParsingDialog$view = F6(
	function (wrap, sourceParsed, modalClose, noop, opened, model) {
		var titleId = model.H + '-title';
		return A2(
			$author$project$Components$Molecules$Modal$modal,
			{
				H: model.H,
				bm: opened,
				dt: noop('close-source-parsing'),
				d$: titleId
			},
			A2(
				$elm$core$Maybe$withDefault,
				_List_fromArray(
					[
						A2(
						$elm$html$Html$div,
						_List_Nil,
						_List_fromArray(
							[
								$elm$html$Html$text('No source to parse in embed... Should never happen!')
							]))
					]),
				A2(
					$author$project$Libs$Maybe$orElse,
					A2(
						$elm$core$Maybe$map,
						A3($author$project$PagesComponents$Organization_$Project_$Components$EmbedSourceParsingDialog$viewJsonSourceParsing, wrap, sourceParsed, modalClose),
						model.cm),
					A2(
						$author$project$Libs$Maybe$orElse,
						A2(
							$elm$core$Maybe$map,
							A3($author$project$PagesComponents$Organization_$Project_$Components$EmbedSourceParsingDialog$viewSqlSourceParsing, wrap, sourceParsed, modalClose),
							model.cA),
						A2(
							$elm$core$Maybe$map,
							A3($author$project$PagesComponents$Organization_$Project_$Components$EmbedSourceParsingDialog$viewDatabaseSourceParsing, wrap, sourceParsed, modalClose),
							model.ca)))));
	});
var $author$project$PagesComponents$Organization_$Project_$Components$ProjectSaveDialog$BodyMsg = function (a) {
	return {$: 2, a: a};
};
var $author$project$Libs$Url$addQuery = F3(
	function (key, value, url) {
		return _Utils_update(
			url,
			{
				e1: $elm$core$Maybe$Just(
					A3(
						$author$project$Libs$Maybe$mapOrElse,
						function (q) {
							return q + '&';
						},
						'',
						url.e1) + (key + ('=' + $elm$url$Url$percentEncode(value))))
			});
	});
var $author$project$Libs$Url$addPrefixed = F3(
	function (prefix, maybeSegment, starter) {
		if (maybeSegment.$ === 1) {
			return starter;
		} else {
			var segment = maybeSegment.a;
			return _Utils_ap(
				starter,
				_Utils_ap(prefix, segment));
		}
	});
var $author$project$Libs$Url$relative = function (url) {
	return A3(
		$author$project$Libs$Url$addPrefixed,
		'#',
		url.iA,
		A3($author$project$Libs$Url$addPrefixed, '?', url.e1, url.aA));
};
var $author$project$Services$Backend$loginUrl = function (currentUrl) {
	var _v0 = _Utils_Tuple2(
		'/login',
		$author$project$Libs$Url$relative(currentUrl));
	var url = _v0.a;
	var redirect = _v0.b;
	return (redirect === '') ? url : (url + ('/redirect?url=' + $elm$url$Url$percentEncode(redirect)));
};
var $author$project$Components$Slices$ProjectSaveDialogBody$UpdateOrganization = function (a) {
	return {$: 1, a: a};
};
var $author$project$Components$Slices$ProjectSaveDialogBody$UpdateProjectName = function (a) {
	return {$: 0, a: a};
};
var $author$project$Components$Slices$ProjectSaveDialogBody$UpdateStorage = function (a) {
	return {$: 2, a: a};
};
var $author$project$Components$Molecules$FormLabel$bold = F4(
	function (styles, fieldId, fieldLabel, field) {
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class(styles)
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$label,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$for(fieldId),
							$elm$html$Html$Attributes$class('mb-1 block text-base font-medium text-gray-900')
						]),
					_List_fromArray(
						[
							$elm$html$Html$text(fieldLabel)
						])),
					field(fieldId)
				]));
	});
var $author$project$Components$Slices$ProjectSaveDialogBody$Card = F3(
	function (value, description, notes) {
		return {bf: description, bP: notes, a5: value};
	});
var $elm$html$Html$Attributes$checked = $elm$html$Html$Attributes$boolProperty('checked');
var $author$project$Components$Slices$ProjectSaveDialogBody$radioCardLabel = F5(
	function (htmlId, fieldValue, fieldChange, index, card) {
		var cardId = htmlId + ('-' + $elm$core$String$fromInt(index));
		var _v0 = _Utils_Tuple2(
			_Utils_eq(card.a5, fieldValue),
			_Utils_eq(card.a5, fieldValue));
		var isChecked = _v0.a;
		var isActive = _v0.b;
		return A2(
			$elm$html$Html$label,
			_List_fromArray(
				[
					$author$project$Libs$Html$Attributes$css(
					_List_fromArray(
						[
							'relative flex cursor-pointer rounded-lg border bg-white p-4 shadow-sm focus:outline-none',
							A3($author$project$Libs$Bool$cond, isChecked, 'border-transparent', 'border-gray-300')
						])),
					$elm$html$Html$Attributes$classList(
					_List_fromArray(
						[
							_Utils_Tuple2('border-indigo-500 ring-2 ring-indigo-500', isActive)
						]))
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$input,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$type_('radio'),
							$elm$html$Html$Attributes$name(htmlId),
							$elm$html$Html$Attributes$value(card.a5),
							$elm$html$Html$Events$onInput(fieldChange),
							$elm$html$Html$Attributes$checked(isChecked),
							$elm$html$Html$Attributes$class('sr-only'),
							$author$project$Libs$Html$Attributes$ariaLabelledby(cardId + '-label'),
							$author$project$Libs$Html$Attributes$ariaDescribedby(cardId + ('-description ' + (cardId + '-notes')))
						]),
					_List_Nil),
					A2(
					$elm$html$Html$span,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('flex flex-1')
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$span,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('flex flex-col')
								]),
							_List_fromArray(
								[
									A2(
									$elm$html$Html$span,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$id(cardId + '-label'),
											$elm$html$Html$Attributes$class('block text-sm font-medium text-gray-900')
										]),
									_List_fromArray(
										[
											$elm$html$Html$text(card.a5)
										])),
									A2(
									$elm$html$Html$span,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$id(cardId + '-description'),
											$elm$html$Html$Attributes$class('mt-1 flex items-center text-sm text-gray-500')
										]),
									_List_fromArray(
										[
											$elm$html$Html$text(card.bf)
										])),
									A2(
									$elm$html$Html$span,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$id(cardId + '-notes'),
											$elm$html$Html$Attributes$class('mt-6 text-sm font-medium text-gray-900')
										]),
									_List_fromArray(
										[
											$elm$html$Html$text(card.bP)
										]))
								]))
						])),
					A2(
					$author$project$Components$Atoms$Icon$solid,
					43,
					A3($author$project$Libs$Bool$cond, isChecked, 'text-indigo-600', 'invisible')),
					A2(
					$elm$html$Html$span,
					_List_fromArray(
						[
							$author$project$Libs$Html$Attributes$css(
							_List_fromArray(
								[
									'pointer-events-none absolute -inset-px rounded-lg border-2',
									A3($author$project$Libs$Bool$cond, isChecked, 'border-indigo-500', 'border-transparent'),
									A3($author$project$Libs$Bool$cond, isActive, 'border', 'border-2')
								])),
							$author$project$Libs$Html$Attributes$ariaHidden(true)
						]),
					_List_Nil)
				]));
	});
var $author$project$Components$Slices$ProjectSaveDialogBody$storageToString = function (storage) {
	if (!storage) {
		return 'Local';
	} else {
		return 'Remote';
	}
};
var $author$project$Components$Slices$ProjectSaveDialogBody$radioCards = F3(
	function (fieldId, fieldChange, fieldValue) {
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('grid grid-cols-1 gap-y-2')
				]),
			A2(
				$elm$core$List$indexedMap,
				A3(
					$author$project$Components$Slices$ProjectSaveDialogBody$radioCardLabel,
					fieldId,
					$author$project$Components$Slices$ProjectSaveDialogBody$storageToString(fieldValue),
					fieldChange),
				_List_fromArray(
					[
						A3(
						$author$project$Components$Slices$ProjectSaveDialogBody$Card,
						$author$project$Components$Slices$ProjectSaveDialogBody$storageToString(1),
						'Save in Azimutt and share it with other people',
						'Free up to 3 people'),
						A3(
						$author$project$Components$Slices$ProjectSaveDialogBody$Card,
						$author$project$Components$Slices$ProjectSaveDialogBody$storageToString(0),
						'Keep your project in your browser',
						'Free forever')
					])));
	});
var $author$project$Components$Molecules$InputText$simple = F4(
	function (fieldId, fieldPlaceholder, fieldValue, fieldChange) {
		return A2(
			$elm$html$Html$input,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$type_('text'),
					$elm$html$Html$Attributes$name(fieldId),
					$elm$html$Html$Attributes$id(fieldId),
					$elm$html$Html$Attributes$value(fieldValue),
					$elm$html$Html$Events$onInput(fieldChange),
					$elm$html$Html$Attributes$placeholder(fieldPlaceholder),
					$elm$html$Html$Attributes$class('block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm')
				]),
			_List_Nil);
	});
var $author$project$Components$Molecules$Select$simple = F4(
	function (fieldId, items, fieldValue, fieldChange) {
		return A2(
			$elm$html$Html$select,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$name(fieldId),
					$elm$html$Html$Attributes$id(fieldId),
					$elm$html$Html$Events$onInput(fieldChange),
					$elm$html$Html$Attributes$class('block w-full rounded-md border-gray-300 py-2 pl-3 pr-10 text-base focus:border-indigo-500 focus:outline-none focus:ring-indigo-500 sm:text-sm')
				]),
			A2(
				$elm$core$List$map,
				function (i) {
					return A2(
						$elm$html$Html$option,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$value(i.a5),
								$elm$html$Html$Attributes$selected(
								_Utils_eq(i.a5, fieldValue))
							]),
						_List_fromArray(
							[
								$elm$html$Html$text(i.cn)
							]));
				},
				items));
	});
var $author$project$Components$Slices$ProjectSaveDialogBody$stringToStorage = function (value) {
	switch (value) {
		case 'Local':
			return 0;
		case 'Remote':
			return 1;
		default:
			return 1;
	}
};
var $author$project$Components$Slices$ProjectSaveDialogBody$selectSave = F7(
	function (wrap, modalClose, save, titleId, organizations, projectName, model) {
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('px-4 p-6 max-w-2xl')
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_Nil,
					_List_fromArray(
						[
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-primary-100')
								]),
							_List_fromArray(
								[
									A2($author$project$Components$Atoms$Icon$outline, 174, 'text-primary-600')
								])),
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('mt-3 sm:mt-5')
								]),
							_List_fromArray(
								[
									A2(
									$elm$html$Html$h3,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$id(titleId),
											$elm$html$Html$Attributes$class('text-lg leading-6 font-medium text-center text-gray-900')
										]),
									_List_fromArray(
										[
											$elm$html$Html$text('Save ' + projectName)
										])),
									A2(
									$elm$html$Html$div,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$class('mt-2')
										]),
									_List_fromArray(
										[
											A4(
											$author$project$Components$Molecules$FormLabel$bold,
											'mt-3',
											model.H + '-project',
											'Name',
											function (fieldId) {
												return A4(
													$author$project$Components$Molecules$InputText$simple,
													fieldId,
													'',
													model.eS,
													A2($elm$core$Basics$composeR, $author$project$Components$Slices$ProjectSaveDialogBody$UpdateProjectName, wrap));
											}),
											A4(
											$author$project$Components$Molecules$FormLabel$bold,
											'mt-3',
											model.H + '-organization',
											'Organization',
											function (fieldId) {
												return A4(
													$author$project$Components$Molecules$Select$simple,
													fieldId,
													A2(
														$elm$core$List$cons,
														{cn: '-- choose an organization', a5: ''},
														A2(
															$elm$core$List$map,
															function (o) {
																return {cn: o.eS, a5: o.H};
															},
															A2(
																$elm$core$List$sortBy,
																function ($) {
																	return $.eS;
																},
																organizations))),
													A3(
														$author$project$Libs$Maybe$mapOrElse,
														function ($) {
															return $.H;
														},
														'',
														model.nx),
													function (orgId) {
														return wrap(
															$author$project$Components$Slices$ProjectSaveDialogBody$UpdateOrganization(
																A3(
																	$author$project$Libs$List$findBy,
																	function ($) {
																		return $.H;
																	},
																	orgId,
																	organizations)));
													});
											}),
											A4(
											$author$project$Components$Molecules$FormLabel$bold,
											'mt-3',
											model.H + '-storage',
											'How do you want to save?',
											function (fieldId) {
												return A3(
													$author$project$Components$Slices$ProjectSaveDialogBody$radioCards,
													fieldId,
													A2(
														$elm$core$Basics$composeR,
														$author$project$Components$Slices$ProjectSaveDialogBody$stringToStorage,
														A2($elm$core$Basics$composeR, $author$project$Components$Slices$ProjectSaveDialogBody$UpdateStorage, wrap)),
													model.cD);
											})
										]))
								]))
						])),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('mt-5 sm:mt-6 sm:grid sm:grid-cols-2 sm:gap-3 sm:grid-flow-row-dense')
						]),
					_List_fromArray(
						[
							A3(
							$author$project$Components$Atoms$Button$white3,
							$author$project$Libs$Tailwind$default,
							_List_fromArray(
								[
									$elm$html$Html$Events$onClick(modalClose)
								]),
							_List_fromArray(
								[
									$elm$html$Html$text('Stay in draft')
								])),
							A2(
							$elm$core$Maybe$withDefault,
							A3(
								$author$project$Components$Atoms$Button$primary3,
								$author$project$Libs$Tailwind$primary,
								_List_fromArray(
									[
										$elm$html$Html$Attributes$disabled(true),
										$elm$html$Html$Attributes$class('w-full')
									]),
								_List_fromArray(
									[
										$elm$html$Html$text('Create project')
									])),
							A2(
								$elm$core$Maybe$map,
								function (msg) {
									return A3(
										$author$project$Components$Atoms$Button$primary3,
										$author$project$Libs$Tailwind$primary,
										_List_fromArray(
											[
												$elm$html$Html$Events$onClick(msg),
												$elm$html$Html$Attributes$class('w-full')
											]),
										_List_fromArray(
											[
												$elm$html$Html$text('Create project')
											]));
								},
								A3(
									$elm$core$Maybe$map2,
									F2(
										function (name, orga) {
											return A3(save, name, orga, model.cD);
										}),
									$author$project$Libs$String$nonEmptyMaybe(model.eS),
									model.nx)))
						]))
				]));
	});
var $author$project$Components$Slices$ProjectSaveDialogBody$signIn = F3(
	function (modalClose, loginUrl, titleId) {
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('px-4 p-6 max-w-2xl')
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_Nil,
					_List_fromArray(
						[
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-emerald-100')
								]),
							_List_fromArray(
								[
									A2($author$project$Components$Atoms$Icon$outline, 130, 'text-emerald-600')
								])),
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('mt-3 text-center sm:mt-5')
								]),
							_List_fromArray(
								[
									A2(
									$elm$html$Html$h3,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$id(titleId),
											$elm$html$Html$Attributes$class('text-lg leading-6 font-medium text-gray-900')
										]),
									_List_fromArray(
										[
											$elm$html$Html$text('Sign in to save your project.')
										])),
									A2(
									$elm$html$Html$div,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$class('mt-2')
										]),
									_List_fromArray(
										[
											A2(
											$elm$html$Html$p,
											_List_fromArray(
												[
													$elm$html$Html$Attributes$class('text-sm text-gray-500')
												]),
											_List_fromArray(
												[
													$elm$html$Html$text('Azimutt has '),
													$author$project$Libs$Html$bText('evolved'),
													$elm$html$Html$text('!')
												])),
											A2(
											$elm$html$Html$p,
											_List_fromArray(
												[
													$elm$html$Html$Attributes$class('text-sm text-gray-500')
												]),
											_List_fromArray(
												[
													$elm$html$Html$text('Projects are not registered in your Azimutt account.')
												])),
											A2(
											$elm$html$Html$p,
											_List_fromArray(
												[
													$elm$html$Html$Attributes$class('text-sm text-gray-500')
												]),
											_List_fromArray(
												[
													$elm$html$Html$text('You can upload them and invite people to collaborate,')
												])),
											A2(
											$elm$html$Html$p,
											_List_fromArray(
												[
													$elm$html$Html$Attributes$class('text-sm text-gray-500')
												]),
											_List_fromArray(
												[
													$elm$html$Html$text('or keep them local for total privacy!')
												]))
										]))
								]))
						])),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('mt-5 sm:mt-6 sm:grid sm:grid-cols-2 sm:gap-3 sm:grid-flow-row-dense')
						]),
					_List_fromArray(
						[
							A3(
							$author$project$Components$Atoms$Button$white3,
							$author$project$Libs$Tailwind$default,
							_List_fromArray(
								[
									$elm$html$Html$Events$onClick(modalClose)
								]),
							_List_fromArray(
								[
									$elm$html$Html$text('No thanks')
								])),
							A3(
							$author$project$Components$Atoms$Link$primary3,
							$author$project$Libs$Tailwind$emerald,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$href(loginUrl),
									$elm$html$Html$Attributes$class('w-full')
								]),
							_List_fromArray(
								[
									$elm$html$Html$text('Sign in to save')
								]))
						]))
				]));
	});
var $author$project$PagesComponents$Organization_$Project_$Components$ProjectSaveDialog$view = F9(
	function (wrap, modalClose, saveProject, currentUrl, user, organizations, opened, erd, model) {
		var titleId = model.H + '-title';
		var close = modalClose(
			wrap($author$project$PagesComponents$Organization_$Project_$Components$ProjectSaveDialog$Close));
		return A2(
			$author$project$Components$Molecules$Modal$modal,
			{H: model.H, bm: opened, dt: close, d$: titleId},
			_List_fromArray(
				[
					A2(
					$elm$core$Maybe$withDefault,
					A3(
						$author$project$Components$Slices$ProjectSaveDialogBody$signIn,
						close,
						$author$project$Services$Backend$loginUrl(
							A3($author$project$Libs$Url$addQuery, 'save', '', currentUrl)),
						titleId),
					A2(
						$elm$core$Maybe$map,
						function (_v0) {
							return A7(
								$author$project$Components$Slices$ProjectSaveDialogBody$selectSave,
								A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Components$ProjectSaveDialog$BodyMsg, wrap),
								close,
								saveProject,
								titleId,
								organizations,
								erd.nN.eS,
								model);
						},
						user))
				]));
	});
var $author$project$Libs$Url$addPort = F2(
	function (maybePort, starter) {
		if (maybePort.$ === 1) {
			return starter;
		} else {
			var port_ = maybePort.a;
			return starter + (':' + $elm$core$String$fromInt(port_));
		}
	});
var $author$project$Libs$Url$domain = function (url) {
	var http = function () {
		var _v0 = url.jB;
		if (!_v0) {
			return 'http://';
		} else {
			return 'https://';
		}
	}();
	return A2(
		$author$project$Libs$Url$addPort,
		url.jw,
		_Utils_ap(http, url.iK));
};
var $author$project$PagesComponents$Organization_$Project_$Models$EmbedKind$value = function (kind) {
	switch (kind) {
		case 0:
			return $author$project$PagesComponents$Organization_$Project_$Models$EmbedKind$projectId;
		case 1:
			return $author$project$PagesComponents$Organization_$Project_$Models$EmbedKind$projectUrl;
		case 2:
			return $author$project$PagesComponents$Organization_$Project_$Models$EmbedKind$databaseSource;
		case 3:
			return $author$project$PagesComponents$Organization_$Project_$Models$EmbedKind$sqlSource;
		default:
			return $author$project$PagesComponents$Organization_$Project_$Models$EmbedKind$jsonSource;
	}
};
var $author$project$Services$Backend$embedUrl = F5(
	function (kind, content, layout, mode, token) {
		var queryString = $author$project$Libs$Url$buildQueryString(
			A2(
				$elm$core$List$filter,
				function (_v0) {
					var value = _v0.b;
					return value !== '';
				},
				_List_fromArray(
					[
						_Utils_Tuple2(
						$author$project$PagesComponents$Organization_$Project_$Models$EmbedKind$value(kind),
						content),
						_Utils_Tuple2('layout', layout),
						_Utils_Tuple2($author$project$PagesComponents$Organization_$Project_$Models$EmbedMode$key, mode),
						_Utils_Tuple2(
						'token',
						A3(
							$author$project$Libs$Maybe$mapOrElse,
							function ($) {
								return $.H;
							},
							'',
							token))
					])));
		return '/embed?' + queryString;
	});
var $author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$buildIframeUrl = F6(
	function (currentUrl, kind, content, layout, mode, token) {
		return (content !== '') ? $elm$core$Maybe$Just(
			_Utils_ap(
				$author$project$Libs$Url$domain(currentUrl),
				A5($author$project$Services$Backend$embedUrl, kind, content, layout, mode, token))) : $elm$core$Maybe$Nothing;
	});
var $author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$buildIframeHtml = function (iframeUrl) {
	return (iframeUrl !== '') ? ('<iframe width=\"100%\" height=\"800px\" src=\"' + (iframeUrl + '\" title=\"Embedded Azimutt diagram\" frameborder=\"0\" allowtransparency=\"true\" allowfullscreen=\"true\" scrolling=\"no\" style=\"box-shadow: 0 2px 8px 0 rgba(63,69,81,0.16); border-radius:5px;\"></iframe>')) : '';
};
var $author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$viewBodyIframe = F2(
	function (currentUrl, model) {
		return A3(
			$author$project$Libs$Maybe$mapOrElse,
			function (url) {
				return A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('mt-3')
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$span,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('block text-sm font-medium text-gray-700')
								]),
							_List_fromArray(
								[
									$elm$html$Html$text('Embed iframe:')
								])),
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('mt-1 bg-gray-100 text-gray-700 rounded text-sm px-3 py-2')
								]),
							_List_fromArray(
								[
									$elm$html$Html$text(
									$author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$buildIframeHtml(url))
								])),
							A2(
							$elm$html$Html$p,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('mt-2 text-sm text-gray-500')
								]),
							_List_fromArray(
								[
									$elm$html$Html$text('You are publishing your schema? Please '),
									A3(
									$author$project$Libs$Html$sendTweet,
									$author$project$Conf$constants.ou,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$class('link')
										]),
									_List_fromArray(
										[
											$elm$html$Html$text('let us know')
										])),
									$elm$html$Html$text(' and we can help spread it 🤗')
								]))
						]));
			},
			A2($elm$html$Html$div, _List_Nil, _List_Nil),
			A6(
				$author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$buildIframeUrl,
				currentUrl,
				model.gi,
				model.cX,
				model.aM,
				model.eQ,
				A2(
					$elm$core$Maybe$andThen,
					function ($) {
						return $.hL;
					},
					model.aJ)));
	});
var $author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$ContentUpdate = function (a) {
	return {$: 3, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$KindUpdate = function (a) {
	return {$: 2, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Models$EmbedKind$EmbedDatabaseSource = 2;
var $author$project$PagesComponents$Organization_$Project_$Models$EmbedKind$EmbedJsonSource = 4;
var $author$project$PagesComponents$Organization_$Project_$Models$EmbedKind$EmbedSqlSource = 3;
var $author$project$PagesComponents$Organization_$Project_$Models$EmbedKind$all = _List_fromArray(
	[0, 1, 2, 3, 4]);
var $author$project$Services$DatabaseSource$example = 'postgres://<user>:<password>@<host>:<port>/<db_name>';
var $author$project$Services$JsonSource$example = 'https://azimutt.app/elm/samples/basic.json';
var $author$project$Services$ProjectSource$example = 'https://azimutt.app/elm/samples/basic.azimutt.json';
var $author$project$Services$SqlSource$example = 'https://azimutt.app/elm/samples/basic.sql';
var $author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$embedKindPlaceholder = function (kind) {
	switch (kind) {
		case 0:
			return $author$project$Libs$Models$Uuid$zero;
		case 1:
			return $author$project$Services$ProjectSource$example;
		case 2:
			return $author$project$Services$DatabaseSource$example;
		case 3:
			return $author$project$Services$SqlSource$example;
		default:
			return $author$project$Services$JsonSource$example;
	}
};
var $author$project$PagesComponents$Organization_$Project_$Models$EmbedKind$fromValue = function (kind) {
	return _Utils_eq(kind, $author$project$PagesComponents$Organization_$Project_$Models$EmbedKind$projectId) ? $elm$core$Maybe$Just(0) : (_Utils_eq(kind, $author$project$PagesComponents$Organization_$Project_$Models$EmbedKind$projectUrl) ? $elm$core$Maybe$Just(1) : (_Utils_eq(kind, $author$project$PagesComponents$Organization_$Project_$Models$EmbedKind$databaseSource) ? $elm$core$Maybe$Just(2) : (_Utils_eq(kind, $author$project$PagesComponents$Organization_$Project_$Models$EmbedKind$sqlSource) ? $elm$core$Maybe$Just(3) : (_Utils_eq(kind, $author$project$PagesComponents$Organization_$Project_$Models$EmbedKind$jsonSource) ? $elm$core$Maybe$Just(4) : $elm$core$Maybe$Nothing))));
};
var $author$project$PagesComponents$Organization_$Project_$Models$EmbedKind$label = function (kind) {
	switch (kind) {
		case 0:
			return 'Project id';
		case 1:
			return 'Project url';
		case 2:
			return 'Database source';
		case 3:
			return 'SQL source';
		default:
			return 'JSON source';
	}
};
var $author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$viewBodyKindContentInput = F4(
	function (wrap, inputId, kind, content) {
		var _v0 = _Utils_Tuple2(inputId + '-kind', inputId + '-content');
		var kindInput = _v0.a;
		var contentInput = _v0.b;
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('mt-3')
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$label,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$for(contentInput),
							$elm$html$Html$Attributes$class('block text-sm font-medium text-gray-700')
						]),
					_List_fromArray(
						[
							$elm$html$Html$text('Share')
						])),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('mt-1 relative rounded-md shadow-sm')
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('absolute inset-y-0 left-0 flex items-center')
								]),
							_List_fromArray(
								[
									A2(
									$elm$html$Html$label,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$for(kindInput),
											$elm$html$Html$Attributes$class('sr-only')
										]),
									_List_fromArray(
										[
											$elm$html$Html$text('Content kind')
										])),
									A2(
									$elm$html$Html$select,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$id(kindInput),
											$elm$html$Html$Attributes$name(kindInput),
											$elm$html$Html$Events$onInput(
											A2(
												$elm$core$Basics$composeR,
												$author$project$PagesComponents$Organization_$Project_$Models$EmbedKind$fromValue,
												A2(
													$elm$core$Basics$composeR,
													$elm$core$Maybe$withDefault(1),
													A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$KindUpdate, wrap)))),
											$elm$html$Html$Attributes$class('h-full py-0 pl-2 pr-7 border-transparent bg-transparent text-gray-500 rounded-md sm:text-sm focus:ring-indigo-500 focus:border-indigo-500')
										]),
									A2(
										$elm$core$List$map,
										function (k) {
											return A2(
												$elm$html$Html$option,
												_List_fromArray(
													[
														$elm$html$Html$Attributes$value(
														$author$project$PagesComponents$Organization_$Project_$Models$EmbedKind$value(k)),
														$elm$html$Html$Attributes$selected(
														_Utils_eq(k, kind))
													]),
												_List_fromArray(
													[
														$elm$html$Html$text(
														$author$project$PagesComponents$Organization_$Project_$Models$EmbedKind$label(k))
													]));
										},
										$author$project$PagesComponents$Organization_$Project_$Models$EmbedKind$all))
								])),
							A2(
							$elm$html$Html$input,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$type_('text'),
									$elm$html$Html$Attributes$id(contentInput),
									$elm$html$Html$Attributes$name(contentInput),
									$elm$html$Html$Attributes$placeholder(
									'ex: ' + $author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$embedKindPlaceholder(kind)),
									$elm$html$Html$Attributes$value(content),
									$elm$html$Html$Events$onInput(
									A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$ContentUpdate, wrap)),
									$elm$html$Html$Attributes$class('block w-full pl-36 border-gray-300 rounded-md sm:text-sm focus:ring-indigo-500 focus:border-indigo-500')
								]),
							_List_Nil)
						]))
				]));
	});
var $author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$LayoutUpdate = function (a) {
	return {$: 14, a: a};
};
var $elm$html$Html$datalist = _VirtualDom_node('datalist');
var $elm$html$Html$Attributes$list = _VirtualDom_attribute('list');
var $author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$viewBodyLayoutInput = F4(
	function (wrap, inputId, inputValue, layouts) {
		var listId = inputId + '-list';
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('mt-3')
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('flex justify-between')
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$label,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$for(inputId),
									$elm$html$Html$Attributes$class('block text-sm font-medium text-gray-700')
								]),
							_List_fromArray(
								[
									$elm$html$Html$text('Layout')
								])),
							A2(
							$elm$html$Html$span,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('text-sm text-gray-500')
								]),
							_List_fromArray(
								[
									$elm$html$Html$text('Choose a layout to display.')
								]))
						])),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('mt-1')
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$input,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$type_('text'),
									$elm$html$Html$Attributes$id(inputId),
									$elm$html$Html$Attributes$name(inputId),
									$elm$html$Html$Attributes$list(listId),
									$elm$html$Html$Attributes$value(inputValue),
									$elm$html$Html$Events$onInput(
									A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$LayoutUpdate, wrap)),
									$author$project$Libs$Html$Attributes$css(
									_List_fromArray(
										[
											'block w-full border border-gray-300 rounded-md shadow-sm',
											$author$project$Libs$Tailwind$sm(
											_List_fromArray(
												['text-sm'])),
											$author$project$Libs$Tailwind$focus(
											_List_fromArray(
												['border-indigo-500 ring-indigo-500']))
										]))
								]),
							_List_Nil),
							A2(
							$elm$html$Html$datalist,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$id(listId)
								]),
							A2(
								$elm$core$List$map,
								function (l) {
									return A2(
										$elm$html$Html$option,
										_List_fromArray(
											[
												$elm$html$Html$Attributes$value(l)
											]),
										_List_Nil);
								},
								layouts))
						]))
				]));
	});
var $author$project$Models$Project$downloadContent = function (value) {
	return A2(
		$elm$json$Json$Encode$encode,
		2,
		$author$project$Libs$Json$Encode$notNullObject(
			_List_fromArray(
				[
					_Utils_Tuple2(
					'id',
					$author$project$Models$Project$ProjectId$encode(value.H)),
					_Utils_Tuple2(
					'name',
					$author$project$Models$Project$ProjectName$encode(value.eS)),
					_Utils_Tuple2(
					'description',
					A2($author$project$Libs$Json$Encode$maybe, $elm$json$Json$Encode$string, value.bf)),
					_Utils_Tuple2(
					'sources',
					A2($elm$json$Json$Encode$list, $author$project$Models$Project$Source$encode, value.hs)),
					_Utils_Tuple2(
					'notes',
					A3(
						$author$project$Libs$Json$Encode$withDefault,
						A2($elm$json$Json$Encode$dict, $elm$core$Basics$identity, $elm$json$Json$Encode$string),
						$elm$core$Dict$empty,
						value.bP)),
					_Utils_Tuple2(
					'usedLayout',
					$author$project$Models$Project$LayoutName$encode(value.fw)),
					_Utils_Tuple2(
					'layouts',
					A3($elm$json$Json$Encode$dict, $author$project$Models$Project$LayoutName$toString, $author$project$Models$Project$Layout$encode, value.i$)),
					_Utils_Tuple2(
					'settings',
					A3(
						$author$project$Libs$Json$Encode$withDefaultDeep,
						$author$project$Models$Project$ProjectSettings$encode,
						$author$project$Models$Project$ProjectSettings$init($author$project$Conf$schema.lC),
						value.dM)),
					_Utils_Tuple2(
					'createdAt',
					$author$project$Libs$Time$encode(value.ic)),
					_Utils_Tuple2(
					'updatedAt',
					$author$project$Libs$Time$encode(value.kb)),
					_Utils_Tuple2(
					'version',
					$elm$json$Json$Encode$int($author$project$Models$Project$ProjectEncodingVersion$current))
				]))) + '\n';
};
var $author$project$Ports$DownloadFile = F2(
	function (a, b) {
		return {$: 17, a: a, b: b};
	});
var $author$project$Ports$downloadFile = F2(
	function (filename, content) {
		return $author$project$Ports$messageToJs(
			A2($author$project$Ports$DownloadFile, filename, content));
	});
var $author$project$Models$Project$downloadFilename = function (project) {
	return A3($elm$core$String$replace, '.sql', '', project.eS) + '.azimutt.json';
};
var $author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$viewBodyLocalProject = F2(
	function (send, erd) {
		var project = $author$project$PagesComponents$Organization_$Project_$Models$Erd$unpack(erd);
		var filename = $author$project$Models$Project$downloadFilename(project);
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('mt-3')
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$p,
					_List_Nil,
					_List_fromArray(
						[
							$elm$html$Html$text('Local project are only on your machine, to share them you must download and host them ('),
							A3(
							$author$project$Libs$Html$extLink,
							'https://gist.github.com',
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('link')
								]),
							_List_fromArray(
								[
									$elm$html$Html$text('secret gist')
								])),
							$elm$html$Html$text(' are good for that), then fill the URL just below.')
						])),
					A3(
					$author$project$Components$Atoms$Button$primary3,
					$author$project$Libs$Tailwind$primary,
					_List_fromArray(
						[
							$elm$html$Html$Events$onClick(
							send(
								A2(
									$author$project$Ports$downloadFile,
									filename,
									$author$project$Models$Project$downloadContent(project)))),
							$elm$html$Html$Attributes$class('mt-1 whitespace-nowrap')
						]),
					_List_fromArray(
						[
							$elm$html$Html$text('Download project')
						]))
				]));
	});
var $author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$ModeUpdate = function (a) {
	return {$: 15, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$viewBodyModeInput = F3(
	function (wrap, inputId, inputValue) {
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('mt-3')
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$label,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$for(inputId),
							$elm$html$Html$Attributes$class('block text-sm font-medium text-gray-700')
						]),
					_List_fromArray(
						[
							$elm$html$Html$text('Mode')
						])),
					A2(
					$elm$html$Html$select,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$id(inputId),
							$elm$html$Html$Attributes$name(inputId),
							$elm$html$Html$Events$onInput(
							A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$ModeUpdate, wrap)),
							$author$project$Libs$Html$Attributes$css(
							_List_fromArray(
								[
									'mt-1 block w-full py-2 px-3 bg-white border border-gray-300 rounded-md shadow-sm',
									$author$project$Libs$Tailwind$sm(
									_List_fromArray(
										['text-sm'])),
									$author$project$Libs$Tailwind$focus(
									_List_fromArray(
										['outline-none border-indigo-500 ring-indigo-500']))
								]))
						]),
					A2(
						$elm$core$List$map,
						function (m) {
							return A2(
								$elm$html$Html$option,
								_List_fromArray(
									[
										$elm$html$Html$Attributes$value(m.H),
										$elm$html$Html$Attributes$selected(
										_Utils_eq(inputValue, m.H))
									]),
								_List_fromArray(
									[
										$elm$html$Html$text(m.H + (': ' + m.bf))
									]));
						},
						$author$project$PagesComponents$Organization_$Project_$Models$EmbedMode$all))
				]));
	});
var $author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$DisableTokenForm = {$: 5};
var $author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$EnableTokenForm = {$: 4};
var $author$project$Libs$Html$Attributes$ariaChecked = function (value) {
	return A2(
		$elm$html$Html$Attributes$attribute,
		'aria-checked',
		$author$project$Libs$Bool$toString(value));
};
var $author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$buildShareUrl = F6(
	function (currentUrl, project, kind, content, layout, token) {
		return ((!kind) && ((content !== '') && (!_Utils_eq(token, $elm$core$Maybe$Nothing)))) ? $elm$core$Maybe$Just(
			$author$project$Libs$Url$domain(currentUrl) + ($author$project$Gen$Route$toHref(
				$author$project$Gen$Route$Organization___Project_(
					{
						nx: $author$project$Models$ProjectInfo$organizationId(project),
						nN: content
					})) + ('?' + $author$project$Libs$Url$buildQueryString(
				A2(
					$elm$core$List$filter,
					function (_v0) {
						var v = _v0.b;
						return v !== '';
					},
					_List_fromArray(
						[
							_Utils_Tuple2('layout', layout),
							_Utils_Tuple2(
							'token',
							A3(
								$author$project$Libs$Maybe$mapOrElse,
								function ($) {
									return $.H;
								},
								'',
								token))
						])))))) : $elm$core$Maybe$Nothing;
	});
var $author$project$Models$Project$SourceKind$isDatabase = function (kind) {
	if (!kind.$) {
		return true;
	} else {
		return false;
	}
};
var $author$project$Components$Atoms$Button$secondary = function (color) {
	return $author$project$Libs$Tailwind$batch(
		_List_fromArray(
			[
				'border-transparent',
				$author$project$Libs$Tailwind$text_700(color),
				$author$project$Libs$Tailwind$bg_100(color),
				$author$project$Libs$Tailwind$hover(
				_List_fromArray(
					[
						$author$project$Libs$Tailwind$bg_200(color)
					])),
				$author$project$Libs$Tailwind$disabled(
				_List_fromArray(
					[
						'cursor-not-allowed',
						$author$project$Libs$Tailwind$bg_100(color),
						$author$project$Libs$Tailwind$text_300(color)
					]))
			]));
};
var $author$project$Components$Atoms$Link$secondary3 = A2($author$project$Components$Atoms$Link$build, $author$project$Components$Atoms$Button$secondary, $author$project$Components$Atoms$Button$size3);
var $author$project$Components$Slices$ProPlan$privateLinkWarning = function (organization) {
	var color = $author$project$Libs$Tailwind$cyan;
	return A2(
		$author$project$Components$Molecules$Alert$withActions,
		{
			fz: _List_fromArray(
				[
					A3(
					$author$project$Components$Atoms$Link$secondary3,
					color,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$href(
							A2($author$project$Services$Backend$organizationBillingUrl, organization.H, $author$project$Conf$features.nM.eS)),
							$elm$html$Html$Attributes$target('_blank'),
							$elm$html$Html$Attributes$rel('noopener')
						]),
					_List_fromArray(
						[
							A2($author$project$Components$Atoms$Icon$outline, 215, 'mr-1'),
							$elm$html$Html$text('Join us!')
						]))
				]),
			A: color,
			aa: 95,
			a4: 'Private links are a pro feature!'
		},
		_List_fromArray(
			[
				A2(
				$elm$html$Html$p,
				_List_Nil,
				_List_fromArray(
					[
						$elm$html$Html$text('They hold a great power to easily share projects or embed them in documentation.')
					])),
				A2(
				$elm$html$Html$p,
				_List_Nil,
				_List_fromArray(
					[
						$elm$html$Html$text('And thus, we keep them fresh for users wise enough to use our pro plan 😉')
					]))
			]));
};
var $author$project$Components$Molecules$Alert$simple = F3(
	function (color, icon, content) {
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$author$project$Libs$Html$Attributes$css(
					_List_fromArray(
						[
							'p-4 flex rounded-md',
							$author$project$Libs$Tailwind$bg_50(color)
						]))
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('flex-shrink-0')
						]),
					_List_fromArray(
						[
							A2(
							$author$project$Components$Atoms$Icon$solid,
							icon,
							$author$project$Libs$Tailwind$text_400(color))
						])),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$author$project$Libs$Html$Attributes$css(
							_List_fromArray(
								[
									'ml-3 text-left text-sm',
									$author$project$Libs$Tailwind$text_700(color)
								]))
						]),
					content)
				]));
	});
var $author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$RevokeToken = function (a) {
	return {$: 11, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$TokenUpdate = function (a) {
	return {$: 13, a: a};
};
var $author$project$Libs$Models$DateTime$formatMonth = function (month) {
	switch (month) {
		case 0:
			return {B: 'January', D: 1, E: 'Jan'};
		case 1:
			return {B: 'February', D: 2, E: 'Feb'};
		case 2:
			return {B: 'March', D: 3, E: 'Mar'};
		case 3:
			return {B: 'April', D: 4, E: 'Apr'};
		case 4:
			return {B: 'May', D: 5, E: 'May'};
		case 5:
			return {B: 'June', D: 6, E: 'Jun'};
		case 6:
			return {B: 'July', D: 7, E: 'Jul'};
		case 7:
			return {B: 'August', D: 8, E: 'Aug'};
		case 8:
			return {B: 'September', D: 9, E: 'Sep'};
		case 9:
			return {B: 'October', D: 10, E: 'Oct'};
		case 10:
			return {B: 'November', D: 11, E: 'Nov'};
		default:
			return {B: 'December', D: 12, E: 'Dec'};
	}
};
var $author$project$Libs$Models$DateTime$formatWeekday = function (day) {
	switch (day) {
		case 0:
			return {B: 'Monday', D: 1, E: 'Mon'};
		case 1:
			return {B: 'Tuesday', D: 2, E: 'Tue'};
		case 2:
			return {B: 'Wednesday', D: 3, E: 'Wed'};
		case 3:
			return {B: 'Thursday', D: 4, E: 'Thu'};
		case 4:
			return {B: 'Friday', D: 5, E: 'Fri'};
		case 5:
			return {B: 'Saturday', D: 6, E: 'Sat'};
		default:
			return {B: 'Sunday', D: 7, E: 'Sun'};
	}
};
var $elm$time$Time$Fri = 4;
var $elm$time$Time$Mon = 0;
var $elm$time$Time$Sat = 5;
var $elm$time$Time$Sun = 6;
var $elm$time$Time$Thu = 3;
var $elm$time$Time$Tue = 1;
var $elm$time$Time$Wed = 2;
var $elm$time$Time$toWeekday = F2(
	function (zone, time) {
		var _v0 = A2(
			$elm$core$Basics$modBy,
			7,
			A2(
				$elm$time$Time$flooredDiv,
				A2($elm$time$Time$toAdjustedMinutes, zone, time),
				60 * 24));
		switch (_v0) {
			case 0:
				return 3;
			case 1:
				return 4;
			case 2:
				return 5;
			case 3:
				return 6;
			case 4:
				return 0;
			case 5:
				return 1;
			default:
				return 2;
		}
	});
var $author$project$Libs$Models$DateTime$buildDateTime = F2(
	function (zone, date) {
		return {
			en: A2($elm$time$Time$toDay, zone, date),
			gd: A2($elm$time$Time$toHour, zone, date),
			gz: A2($elm$time$Time$toMillis, zone, date),
			gB: A2($elm$time$Time$toMinute, zone, date),
			$7: $author$project$Libs$Models$DateTime$formatMonth(
				A2($elm$time$Time$toMonth, zone, date)),
			hn: A2($elm$time$Time$toSecond, zone, date),
			kh: $author$project$Libs$Models$DateTime$formatWeekday(
				A2($elm$time$Time$toWeekday, zone, date)),
			fy: A2($elm$time$Time$toYear, zone, date)
		};
	});
var $author$project$Libs$Models$DateTime$padLeft = F3(
	function (text, size, _char) {
		padLeft:
		while (true) {
			if (_Utils_cmp(
				$elm$core$String$length(text),
				size) > -1) {
				return text;
			} else {
				var $temp$text = A2($elm$core$String$cons, _char, text),
					$temp$size = size,
					$temp$char = _char;
				text = $temp$text;
				size = $temp$size;
				_char = $temp$char;
				continue padLeft;
			}
		}
	});
var $author$project$Libs$Models$DateTime$format = F3(
	function (pattern, zone, time) {
		var date = A2($author$project$Libs$Models$DateTime$buildDateTime, zone, time);
		return A3(
			$elm$core$String$replace,
			'SSS',
			A3(
				$author$project$Libs$Models$DateTime$padLeft,
				$elm$core$String$fromInt(date.gz),
				3,
				'0'),
			A3(
				$elm$core$String$replace,
				'ss',
				A3(
					$author$project$Libs$Models$DateTime$padLeft,
					$elm$core$String$fromInt(date.hn),
					2,
					'0'),
				A3(
					$elm$core$String$replace,
					'mm',
					A3(
						$author$project$Libs$Models$DateTime$padLeft,
						$elm$core$String$fromInt(date.gB),
						2,
						'0'),
					A3(
						$elm$core$String$replace,
						'HH',
						A3(
							$author$project$Libs$Models$DateTime$padLeft,
							$elm$core$String$fromInt(date.gd),
							2,
							'0'),
						A3(
							$elm$core$String$replace,
							'd',
							$elm$core$String$fromInt(date.en),
							A3(
								$elm$core$String$replace,
								'dd',
								A3(
									$author$project$Libs$Models$DateTime$padLeft,
									$elm$core$String$fromInt(date.en),
									2,
									'0'),
								A3(
									$elm$core$String$replace,
									'MM',
									A3(
										$author$project$Libs$Models$DateTime$padLeft,
										$elm$core$String$fromInt(date.$7.D),
										2,
										'0'),
									A3(
										$elm$core$String$replace,
										'MMM',
										date.$7.E,
										A3(
											$elm$core$String$replace,
											'MMMMM',
											date.$7.B,
											A3(
												$elm$core$String$replace,
												'yy',
												$elm$core$String$fromInt(
													A2($elm$core$Basics$modBy, 100, date.fy)),
												A3(
													$elm$core$String$replace,
													'yyyy',
													$elm$core$String$fromInt(date.fy),
													pattern)))))))))));
	});
var $author$project$Libs$Models$DateTime$formatDatetime = F2(
	function (zone, time) {
		return A3($author$project$Libs$Models$DateTime$format, 'd MMM yyyy at HH:mm', zone, time);
	});
var $author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$viewBodyProjectToken = F7(
	function (wrap, confirm, zone, inputId, chosen, i, token) {
		var selected = A2(
			$author$project$Libs$Maybe$any,
			function (c) {
				return _Utils_eq(c.H, token.H);
			},
			chosen);
		var labelId = inputId + ('-' + ($elm$core$String$fromInt(i) + '-label'));
		var _v0 = _Utils_Tuple2(
			'Created by ' + (token.k7.eS + (' on ' + A2($author$project$Libs$Models$DateTime$formatDatetime, zone, token.ic))),
			$elm$core$String$fromInt(token.m0) + (' access since creation' + A3(
				$author$project$Libs$Maybe$mapOrElse,
				function (t) {
					return ' (last one on ' + (A2($author$project$Libs$Models$DateTime$formatDatetime, zone, t) + ')');
				},
				'',
				token.ml)));
		var created = _v0.a;
		var accessed = _v0.b;
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$author$project$Libs$Html$Attributes$css(
					_List_fromArray(
						[
							A3($author$project$Libs$Bool$cond, selected, 'bg-indigo-50 border-indigo-300 z-10', 'border-gray-300'),
							A3($author$project$Libs$Bool$cond, !i, 'rounded-t-md', ''),
							'border flex'
						]))
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$label,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('grow relative flex px-3 py-2 cursor-pointer focus:outline-none')
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$input,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$type_('radio'),
									$elm$html$Html$Attributes$name(inputId),
									$elm$html$Html$Attributes$value(token.H),
									$elm$html$Html$Events$onInput(
									function (_v1) {
										return wrap(
											$author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$TokenUpdate(
												A3(
													$author$project$Libs$Bool$cond,
													selected,
													$elm$core$Maybe$Nothing,
													$elm$core$Maybe$Just(token))));
									}),
									$author$project$Libs$Html$Attributes$ariaLabelledby(labelId),
									$elm$html$Html$Attributes$class('mt-0.5 h-4 w-4 shrink-0 cursor-pointer text-indigo-600 focus:ring-indigo-500')
								]),
							_List_Nil),
							A2(
							$elm$html$Html$span,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('ml-3 flex flex-col')
								]),
							_List_fromArray(
								[
									A2(
									$author$project$Components$Molecules$Tooltip$t,
									created + (', ' + accessed),
									A2(
										$elm$html$Html$span,
										_List_fromArray(
											[
												$elm$html$Html$Attributes$id(labelId),
												$author$project$Libs$Html$Attributes$css(
												_List_fromArray(
													[
														A3($author$project$Libs$Bool$cond, selected, 'text-indigo-900', 'text-gray-900'),
														'block text-sm font-medium'
													]))
											]),
										_List_fromArray(
											[
												$elm$html$Html$text(
												_Utils_ap(
													token.eS,
													A3(
														$author$project$Libs$Maybe$mapOrElse,
														function (t) {
															return ' (expire on ' + (A2($author$project$Libs$Models$DateTime$formatDatetime, zone, t) + ')');
														},
														' (does not expire)',
														token.lK)))
											])))
								]))
						])),
					A2(
					$author$project$Components$Molecules$Tooltip$tl,
					'Revoke token',
					A2(
						$elm$html$Html$button,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$type_('button'),
								$elm$html$Html$Events$onClick(
								A3(
									confirm,
									'Revoke token \'' + (token.eS + '\'?'),
									A2(
										$elm$html$Html$div,
										_List_Nil,
										_List_fromArray(
											[
												A2(
												$elm$html$Html$p,
												_List_Nil,
												_List_fromArray(
													[
														$elm$html$Html$text(created)
													])),
												A2(
												$elm$html$Html$p,
												_List_Nil,
												_List_fromArray(
													[
														$elm$html$Html$text(accessed)
													])),
												A2(
												$elm$html$Html$p,
												_List_fromArray(
													[
														$elm$html$Html$Attributes$class('mt-3')
													]),
												_List_fromArray(
													[
														$elm$html$Html$text('People with this token won\'t be able to access this project anymore.')
													]))
											])),
									wrap(
										$author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$RevokeToken(token)))),
								$elm$html$Html$Attributes$class('px-3 py-2')
							]),
						_List_fromArray(
							[
								A2($author$project$Components$Atoms$Icon$solid, 207, 'text-gray-300')
							])))
				]));
	});
var $author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$CreateToken = function (a) {
	return {$: 9, a: a};
};
var $justinmimbs$time_extra$Time$Extra$Hour = 12;
var $author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$TokenExpireUpdate = function (a) {
	return {$: 8, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$TokenNameUpdate = function (a) {
	return {$: 7, a: a};
};
var $author$project$Libs$Time$intervalToString = function (interval) {
	switch (interval) {
		case 0:
			return 'Year';
		case 1:
			return 'Quarter';
		case 2:
			return 'Month';
		case 3:
			return 'Week';
		case 4:
			return 'Monday';
		case 5:
			return 'Tuesday';
		case 6:
			return 'Wednesday';
		case 7:
			return 'Thursday';
		case 8:
			return 'Friday';
		case 9:
			return 'Saturday';
		case 10:
			return 'Sunday';
		case 11:
			return 'Day';
		case 12:
			return 'Hour';
		case 13:
			return 'Minute';
		case 14:
			return 'Second';
		default:
			return 'Millisecond';
	}
};
var $justinmimbs$time_extra$Time$Extra$Friday = 8;
var $justinmimbs$time_extra$Time$Extra$Minute = 13;
var $justinmimbs$time_extra$Time$Extra$Monday = 4;
var $justinmimbs$time_extra$Time$Extra$Quarter = 1;
var $justinmimbs$time_extra$Time$Extra$Saturday = 9;
var $justinmimbs$time_extra$Time$Extra$Second = 14;
var $justinmimbs$time_extra$Time$Extra$Sunday = 10;
var $justinmimbs$time_extra$Time$Extra$Thursday = 7;
var $justinmimbs$time_extra$Time$Extra$Tuesday = 5;
var $justinmimbs$time_extra$Time$Extra$Wednesday = 6;
var $justinmimbs$time_extra$Time$Extra$Week = 3;
var $justinmimbs$time_extra$Time$Extra$Year = 0;
var $author$project$Libs$Time$stringToInterval = function (interval) {
	switch (interval) {
		case 'Year':
			return $elm$core$Maybe$Just(0);
		case 'Quarter':
			return $elm$core$Maybe$Just(1);
		case 'Month':
			return $elm$core$Maybe$Just(2);
		case 'Week':
			return $elm$core$Maybe$Just(3);
		case 'Monday':
			return $elm$core$Maybe$Just(4);
		case 'Tuesday':
			return $elm$core$Maybe$Just(5);
		case 'Wednesday':
			return $elm$core$Maybe$Just(6);
		case 'Thursday':
			return $elm$core$Maybe$Just(7);
		case 'Friday':
			return $elm$core$Maybe$Just(8);
		case 'Saturday':
			return $elm$core$Maybe$Just(9);
		case 'Sunday':
			return $elm$core$Maybe$Just(10);
		case 'Day':
			return $elm$core$Maybe$Just(11);
		case 'Hour':
			return $elm$core$Maybe$Just(12);
		case 'Minute':
			return $elm$core$Maybe$Just(13);
		case 'Second':
			return $elm$core$Maybe$Just(14);
		case 'Millisecond':
			return $elm$core$Maybe$Just(15);
		default:
			return $elm$core$Maybe$Nothing;
	}
};
var $author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$viewBodyProjectTokenCreation = F4(
	function (wrap, inputId, roundFull, f) {
		var _v0 = _Utils_Tuple2(inputId + '-name', inputId + '-expire');
		var nameField = _v0.a;
		var expireField = _v0.b;
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('flex -space-x-px')
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('min-w-0 w-1/2 flex-1')
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$label,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$for(nameField),
									$elm$html$Html$Attributes$class('sr-only')
								]),
							_List_fromArray(
								[
									$elm$html$Html$text('Token name')
								])),
							A2(
							$elm$html$Html$input,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$type_('text'),
									$elm$html$Html$Attributes$name(nameField),
									$elm$html$Html$Attributes$id(nameField),
									$elm$html$Html$Attributes$value(f.eS),
									$elm$html$Html$Events$onInput(
									A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$TokenNameUpdate, wrap)),
									$elm$html$Html$Attributes$placeholder('Token name'),
									$author$project$Libs$Html$Attributes$css(
									_List_fromArray(
										[
											A3($author$project$Libs$Bool$cond, roundFull, 'rounded-l-md', 'rounded-bl-md'),
											'relative block w-full border border-gray-300 bg-transparent focus:z-10 focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm'
										]))
								]),
							_List_Nil)
						])),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('min-w-0')
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$label,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$for(expireField),
									$elm$html$Html$Attributes$class('sr-only')
								]),
							_List_fromArray(
								[
									$elm$html$Html$text('Expiration')
								])),
							A2(
							$elm$html$Html$select,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$name(expireField),
									$elm$html$Html$Attributes$id(expireField),
									$elm$html$Html$Events$onInput(
									A2(
										$elm$core$Basics$composeR,
										$author$project$Libs$Time$stringToInterval,
										A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$TokenExpireUpdate, wrap))),
									$elm$html$Html$Attributes$class('relative block w-full border border-gray-300 bg-transparent focus:z-10 focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm')
								]),
							A2(
								$elm$core$List$map,
								function (_v1) {
									var v = _v1.a;
									var l = _v1.b;
									return A2(
										$elm$html$Html$option,
										_List_fromArray(
											[
												$elm$html$Html$Attributes$value(
												A3($author$project$Libs$Maybe$mapOrElse, $author$project$Libs$Time$intervalToString, '', v)),
												$elm$html$Html$Attributes$selected(
												_Utils_eq(f.c6, v))
											]),
										_List_fromArray(
											[
												$elm$html$Html$text(l)
											]));
								},
								_List_fromArray(
									[
										_Utils_Tuple2($elm$core$Maybe$Nothing, 'does not expire'),
										_Utils_Tuple2(
										$elm$core$Maybe$Just(12),
										'expire in 1 hour'),
										_Utils_Tuple2(
										$elm$core$Maybe$Just(11),
										'expire in 1 day'),
										_Utils_Tuple2(
										$elm$core$Maybe$Just(2),
										'expire in 1 month')
									])))
						])),
					A2(
					$elm$html$Html$button,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$type_('button'),
							$elm$html$Html$Events$onClick(
							wrap(
								$author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$CreateToken(f))),
							$elm$html$Html$Attributes$disabled((f.eS === '') || f.cp),
							$author$project$Libs$Html$Attributes$css(
							_List_fromArray(
								[
									A3($author$project$Libs$Bool$cond, roundFull, 'rounded-r-md', 'rounded-br-md'),
									'relative block border border-gray-300 px-4 py-2 text-sm font-medium bg-gray-50 text-gray-700 hover:bg-gray-100 focus:border-indigo-500 focus:outline-none focus:ring-1 focus:ring-indigo-500 disabled:bg-gray-100 disabled:text-gray-400'
								]))
						]),
					_List_fromArray(
						[
							$elm$html$Html$text('Create token')
						]))
				]));
	});
var $author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$viewBodyPrivateLinkInput = F7(
	function (wrap, confirm, zone, inputId, currentUrl, erd, model) {
		var organization = A2($author$project$PagesComponents$Organization_$Project_$Models$Erd$getOrganization, $elm$core$Maybe$Nothing, erd);
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('mt-3')
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('flex justify-between')
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$label,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$for(inputId),
									$elm$html$Html$Attributes$class('block text-sm font-medium text-gray-700')
								]),
							_List_fromArray(
								[
									$elm$html$Html$text('Private link'),
									A2(
									$author$project$Components$Molecules$Tooltip$t,
									'Allow anyone with the token to access the project (read-only), it\'s great for quick sharing or embed in documentation.',
									A2($author$project$Components$Atoms$Icon$solid, 167, 'h-4 opacity-50'))
								])),
							A2(
							$author$project$Components$Molecules$Tooltip$tl,
							'Enable private tokens',
							A2(
								$elm$html$Html$button,
								_List_fromArray(
									[
										$elm$html$Html$Attributes$type_('button'),
										$elm$html$Html$Events$onClick(
										wrap(
											A3(
												$author$project$Libs$Maybe$mapOrElse,
												function (_v0) {
													return $author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$DisableTokenForm;
												},
												$author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$EnableTokenForm,
												model.aJ))),
										$author$project$Libs$Html$Attributes$role('switch'),
										$author$project$Libs$Html$Attributes$ariaChecked(true),
										$elm$html$Html$Attributes$class('group relative inline-flex h-5 w-10 flex-shrink-0 cursor-pointer items-center justify-center rounded-full focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2')
									]),
								_List_fromArray(
									[
										A2(
										$elm$html$Html$span,
										_List_fromArray(
											[
												$elm$html$Html$Attributes$class('sr-only')
											]),
										_List_fromArray(
											[
												$elm$html$Html$text('Use private tokens')
											])),
										A2(
										$elm$html$Html$span,
										_List_fromArray(
											[
												$author$project$Libs$Html$Attributes$ariaHidden(true),
												$elm$html$Html$Attributes$class('pointer-events-none absolute h-full w-full rounded-md bg-white')
											]),
										_List_Nil),
										A2(
										$elm$html$Html$span,
										_List_fromArray(
											[
												$author$project$Libs$Html$Attributes$ariaHidden(true),
												$author$project$Libs$Html$Attributes$css(
												_List_fromArray(
													[
														A3(
														$author$project$Libs$Maybe$mapOrElse,
														function (_v1) {
															return 'bg-indigo-600';
														},
														'bg-gray-200',
														model.aJ),
														'pointer-events-none absolute mx-auto h-4 w-9 rounded-full transition-colors duration-200 ease-in-out'
													]))
											]),
										_List_Nil),
										A2(
										$elm$html$Html$span,
										_List_fromArray(
											[
												$author$project$Libs$Html$Attributes$ariaHidden(true),
												$author$project$Libs$Html$Attributes$css(
												_List_fromArray(
													[
														A3(
														$author$project$Libs$Maybe$mapOrElse,
														function (_v2) {
															return 'translate-x-5';
														},
														'translate-x-0',
														model.aJ),
														'pointer-events-none absolute left-0 inline-block h-5 w-5 transform rounded-full border border-gray-200 bg-white shadow ring-0 transition-transform duration-200 ease-in-out'
													]))
											]),
										_List_Nil)
									])))
						])),
					A3(
					$author$project$Libs$Maybe$mapOrElse,
					function (f) {
						return organization.jv.nM ? A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('mt-1')
								]),
							_List_fromArray(
								[
									A2(
									$elm$html$Html$div,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$class('-space-y-px shadow-sm bg-white')
										]),
									_Utils_ap(
										A2(
											$elm$core$List$indexedMap,
											A5($author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$viewBodyProjectToken, wrap, confirm, zone, inputId, f.hL),
											model.d0),
										_List_fromArray(
											[
												A4(
												$author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$viewBodyProjectTokenCreation,
												wrap,
												inputId,
												_Utils_eq(model.d0, _List_Nil),
												f)
											]))),
									A3(
									$author$project$Libs$Maybe$mapOrElse,
									function (err) {
										return A2(
											$elm$html$Html$p,
											_List_fromArray(
												[
													$elm$html$Html$Attributes$class('mt-2 text-sm text-red-600')
												]),
											_List_fromArray(
												[
													$elm$html$Html$text(err)
												]));
									},
									A2($elm$html$Html$p, _List_Nil, _List_Nil),
									f.bi),
									A2(
									$elm$core$List$any,
									A2(
										$elm$core$Basics$composeR,
										function ($) {
											return $.gi;
										},
										$author$project$Models$Project$SourceKind$isDatabase),
									erd.hs) ? A2(
									$elm$html$Html$div,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$class('mt-2')
										]),
									_List_fromArray(
										[
											A3(
											$author$project$Components$Molecules$Alert$simple,
											$author$project$Libs$Tailwind$yellow,
											96,
											_List_fromArray(
												[
													$elm$html$Html$text('Your project has '),
													$author$project$Libs$Html$bText('database url'),
													$elm$html$Html$text(' as source. '),
													$elm$html$Html$text('It will be accessible from people you share the project with. '),
													$elm$html$Html$text('Make sure it\'s fine.')
												]))
										])) : A2($elm$html$Html$div, _List_Nil, _List_Nil)
								])) : A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('mt-1')
								]),
							_List_fromArray(
								[
									$author$project$Components$Slices$ProPlan$privateLinkWarning(organization)
								]));
					},
					A2($elm$html$Html$div, _List_Nil, _List_Nil),
					model.aJ),
					A3(
					$author$project$Libs$Maybe$mapOrElse,
					function (url) {
						return A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('mt-2 bg-gray-100 text-gray-700 rounded text-sm px-3 py-2')
								]),
							_List_fromArray(
								[
									A2(
									$elm$html$Html$a,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$href(url),
											$elm$html$Html$Attributes$target('_blank'),
											$elm$html$Html$Attributes$rel('noopener'),
											$elm$html$Html$Attributes$class('hover:link')
										]),
									_List_fromArray(
										[
											$elm$html$Html$text(url)
										]))
								]));
					},
					A2($elm$html$Html$div, _List_Nil, _List_Nil),
					A6(
						$author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$buildShareUrl,
						currentUrl,
						erd.nN,
						model.gi,
						model.cX,
						model.aM,
						A2(
							$elm$core$Maybe$andThen,
							function ($) {
								return $.hL;
							},
							model.aJ)))
				]));
	});
var $author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$viewBodyRemoteProject = A2($elm$html$Html$p, _List_Nil, _List_Nil);
var $author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$viewBody = F7(
	function (wrap, send, confirm, zone, currentUrl, erd, model) {
		return A2(
			$elm$html$Html$div,
			_List_Nil,
			_List_fromArray(
				[
					function () {
					var _v0 = erd.nN.cD;
					if (!_v0) {
						return A2($author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$viewBodyLocalProject, send, erd);
					} else {
						return $author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$viewBodyRemoteProject;
					}
				}(),
					A4($author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$viewBodyKindContentInput, wrap, model.H + '-input', model.gi, model.cX),
					A4(
					$author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$viewBodyLayoutInput,
					wrap,
					model.H + '-input-layout',
					model.aM,
					$elm$core$Dict$keys(erd.i$)),
					((erd.nN.cD === 1) && (!model.gi)) ? A7($author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$viewBodyPrivateLinkInput, wrap, confirm, zone, model.H + '-input-token', currentUrl, erd, model) : A2($elm$html$Html$div, _List_Nil, _List_Nil),
					A3($author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$viewBodyModeInput, wrap, model.H + '-input-mode', model.eQ),
					A2($author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$viewBodyIframe, currentUrl, model)
				]));
	});
var $author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$viewHeader = F3(
	function (wrap, modalClose, titleId) {
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$author$project$Libs$Html$Attributes$css(
					_List_fromArray(
						[
							$author$project$Libs$Tailwind$sm(
							_List_fromArray(
								['flex justify-between']))
						]))
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$author$project$Libs$Html$Attributes$css(
							_List_fromArray(
								[
									'mt-3 text-center',
									$author$project$Libs$Tailwind$sm(
									_List_fromArray(
										['mt-0 text-left']))
								]))
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$h3,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$id(titleId),
									$elm$html$Html$Attributes$class('text-lg leading-6 font-medium text-gray-900')
								]),
							_List_fromArray(
								[
									$elm$html$Html$text('Share your project')
								])),
							A2(
							$elm$html$Html$p,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('text-sm text-gray-500')
								]),
							_List_fromArray(
								[
									$elm$html$Html$text('Send it to people or embed it in your documentation or website.')
								]))
						])),
					A2(
					$elm$html$Html$span,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('cursor-pointer text-gray-400'),
							$elm$html$Html$Events$onClick(
							modalClose(
								wrap($author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$Close)))
						]),
					_List_fromArray(
						[
							A2($author$project$Components$Atoms$Icon$solid, 227, '')
						]))
				]));
	});
var $elm$html$Html$iframe = _VirtualDom_node('iframe');
var $author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$viewIframe = function (iframeUrl) {
	return A2(
		$elm$core$Maybe$withDefault,
		A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('flex items-center')
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$img,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('rounded-l-lg'),
							$elm$html$Html$Attributes$src(
							$author$project$Services$Backend$resourceUrl('/assets/images/education.gif'))
						]),
					_List_Nil)
				])),
		A2(
			$elm$core$Maybe$map,
			function (url) {
				return A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							A2($elm$html$Html$Attributes$style, 'width', '1000px')
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$iframe,
							_List_fromArray(
								[
									A2($elm$html$Html$Attributes$attribute, 'width', '100%'),
									$elm$html$Html$Attributes$height(800),
									$elm$html$Html$Attributes$src(url),
									$elm$html$Html$Attributes$title('Embedded Azimutt diagram'),
									A2($elm$html$Html$Attributes$attribute, 'frameborder', '0'),
									A2($elm$html$Html$Attributes$attribute, 'allowtransparency', 'true'),
									A2($elm$html$Html$Attributes$attribute, 'allowfullscreen', 'true'),
									A2($elm$html$Html$Attributes$attribute, 'scrolling', 'no'),
									A2($elm$html$Html$Attributes$style, 'box-shadow', '0 2px 8px 0 rgba(63,69,81,0.16)'),
									A2($elm$html$Html$Attributes$style, 'border-radius', '5px')
								]),
							_List_Nil)
						]));
			},
			$author$project$Libs$String$nonEmptyMaybe(iframeUrl)));
};
var $author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$view = F9(
	function (wrap, send, modalClose, confirm, zone, currentUrl, opened, erd, model) {
		var titleId = model.H + '-title';
		var iframeUrl = A6(
			$author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$buildIframeUrl,
			currentUrl,
			model.gi,
			model.cX,
			model.aM,
			model.eQ,
			A2(
				$elm$core$Maybe$andThen,
				function ($) {
					return $.hL;
				},
				model.aJ));
		return A2(
			$author$project$Components$Molecules$Modal$modal,
			{
				H: model.H,
				bm: opened,
				dt: modalClose(
					wrap($author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$Close)),
				d$: titleId
			},
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('flex')
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$Lazy$lazy,
							$author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$viewIframe,
							A2($elm$core$Maybe$withDefault, '', iframeUrl)),
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('p-4'),
									A2($elm$html$Html$Attributes$style, 'width', '70ch')
								]),
							_List_fromArray(
								[
									A3($author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$viewHeader, wrap, modalClose, titleId),
									A7($author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$viewBody, wrap, send, confirm, zone, currentUrl, erd, model)
								]))
						]))
				]));
	});
var $author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$modalTitle = F2(
	function (titleId, title) {
		return A2(
			$elm$html$Html$h3,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$id(titleId),
					$elm$html$Html$Attributes$class('text-lg leading-6 text-center font-medium text-gray-900')
				]),
			_List_fromArray(
				[
					$elm$html$Html$text(title)
				]));
	});
var $author$project$Components$Atoms$Button$size5 = 'px-6 py-3 text-base rounded-md';
var $author$project$Components$Atoms$Button$primary5 = A2($author$project$Components$Atoms$Button$build, $author$project$Components$Atoms$Button$primary, $author$project$Components$Atoms$Button$size5);
var $author$project$Libs$Models$DateTime$formatDate = F2(
	function (zone, time) {
		return A3($author$project$Libs$Models$DateTime$format, 'd MMM yyyy', zone, time);
	});
var $author$project$Libs$Models$DateTime$aSecond = 1000;
var $author$project$Libs$Models$DateTime$aMinute = $author$project$Libs$Models$DateTime$aSecond * 60;
var $author$project$Libs$Models$DateTime$anHour = $author$project$Libs$Models$DateTime$aMinute * 60;
var $author$project$Libs$Models$DateTime$aDay = $author$project$Libs$Models$DateTime$anHour * 24;
var $author$project$Libs$Models$DateTime$aYear = $author$project$Libs$Models$DateTime$aDay * 365;
var $author$project$Libs$Models$DateTime$aCentury = $author$project$Libs$Models$DateTime$aYear * 100;
var $author$project$Libs$Models$DateTime$aDecade = $author$project$Libs$Models$DateTime$aYear * 10;
var $author$project$Libs$Models$DateTime$aMonth = $author$project$Libs$Models$DateTime$aDay * 30;
var $author$project$Libs$Models$DateTime$humanDirection = F2(
	function (diff, text) {
		return (diff > 0) ? ('in ' + text) : (text + ' ago');
	});
var $author$project$Libs$Models$DateTime$humanText = F4(
	function (diff, unit, one, many) {
		return A2(
			$author$project$Libs$Models$DateTime$humanDirection,
			diff,
			A4(
				$author$project$Libs$String$inflect,
				one,
				one,
				many,
				$elm$core$Basics$abs(
					$elm$core$Basics$round(diff / unit))));
	});
var $author$project$Libs$Models$DateTime$human = F2(
	function (now, date) {
		var diff = $elm$time$Time$posixToMillis(date) - $elm$time$Time$posixToMillis(now);
		return (_Utils_cmp(
			$elm$core$Basics$abs(diff),
			$author$project$Libs$Models$DateTime$aSecond) < 0) ? 'just now' : ((_Utils_cmp(
			$elm$core$Basics$abs(diff),
			$author$project$Libs$Models$DateTime$aMinute) < 0) ? A2($author$project$Libs$Models$DateTime$humanDirection, diff, 'a few seconds') : ((_Utils_cmp(
			$elm$core$Basics$abs(diff),
			$author$project$Libs$Models$DateTime$anHour) < 0) ? A4($author$project$Libs$Models$DateTime$humanText, diff, $author$project$Libs$Models$DateTime$aMinute, 'a minute', 'minutes') : ((_Utils_cmp(
			$elm$core$Basics$abs(diff),
			$author$project$Libs$Models$DateTime$aDay) < 0) ? A4($author$project$Libs$Models$DateTime$humanText, diff, $author$project$Libs$Models$DateTime$anHour, 'an hour', 'hours') : ((_Utils_cmp(
			$elm$core$Basics$abs(diff),
			$author$project$Libs$Models$DateTime$aMonth) < 0) ? A4($author$project$Libs$Models$DateTime$humanText, diff, $author$project$Libs$Models$DateTime$aDay, 'a day', 'days') : ((_Utils_cmp(
			$elm$core$Basics$abs(diff),
			$author$project$Libs$Models$DateTime$aYear) < 0) ? A4($author$project$Libs$Models$DateTime$humanText, diff, $author$project$Libs$Models$DateTime$aMonth, 'a month', 'months') : ((_Utils_cmp(
			$elm$core$Basics$abs(diff),
			$author$project$Libs$Models$DateTime$aDecade) < 0) ? A4($author$project$Libs$Models$DateTime$humanText, diff, $author$project$Libs$Models$DateTime$aYear, 'a year', 'years') : ((_Utils_cmp(
			$elm$core$Basics$abs(diff),
			$author$project$Libs$Models$DateTime$aCentury) < 0) ? A4($author$project$Libs$Models$DateTime$humanText, diff, $author$project$Libs$Models$DateTime$aYear, 'a year', 'years') : A2($author$project$Libs$Models$DateTime$humanDirection, diff, 'a long time'))))))));
	});
var $author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$remoteFileInfo = F4(
	function (zone, now, fileUrl, updatedAt) {
		return A2(
			$elm$html$Html$p,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('text-sm text-gray-500')
				]),
			_List_fromArray(
				[
					$elm$html$Html$text('This source came from '),
					$author$project$Libs$Html$bText(fileUrl),
					$elm$html$Html$text(' which was fetched the '),
					$author$project$Libs$Html$bText(
					A2($author$project$Libs$Models$DateTime$formatDate, zone, updatedAt)),
					$elm$html$Html$text(
					' (' + (A2($author$project$Libs$Models$DateTime$human, now, updatedAt) + ').')),
					A2($elm$html$Html$br, _List_Nil, _List_Nil),
					$elm$html$Html$text('Click on the button to fetch it again now.')
				]));
	});
var $author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$closeBtn = function (close) {
	return A3(
		$author$project$Components$Atoms$Button$white3,
		$author$project$Libs$Tailwind$gray,
		_List_fromArray(
			[
				$elm$html$Html$Events$onClick(close)
			]),
		_List_fromArray(
			[
				$elm$html$Html$text('Close')
			]));
};
var $author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$primaryBtn = F2(
	function (clicked, label) {
		return A3(
			$author$project$Components$Atoms$Button$primary3,
			$author$project$Libs$Tailwind$primary,
			A3(
				$author$project$Libs$Maybe$mapOrElse,
				function (c) {
					return _List_fromArray(
						[
							$elm$html$Html$Events$onClick(c)
						]);
				},
				_List_fromArray(
					[
						$elm$html$Html$Attributes$disabled(true)
					]),
				clicked),
			_List_fromArray(
				[
					$elm$html$Html$text(label)
				]));
	});
var $author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$updateSourceButtons = F3(
	function (sourceSet, close, parsedSource) {
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('px-6 py-3 mt-3 flex items-center justify-between flex-row-reverse bg-gray-50 rounded-b-lg')
				]),
			_List_fromArray(
				[
					A2(
					$author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$primaryBtn,
					A2(
						$elm$core$Maybe$map,
						sourceSet,
						A2($elm$core$Maybe$andThen, $elm$core$Result$toMaybe, parsedSource)),
					'Update source'),
					$author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$closeBtn(close)
				]));
	});
var $author$project$Services$Lenses$setOrigins = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.jq;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{jq: value});
		}));
var $author$project$Models$Project$Relation$clearOrigins = function (relations) {
	return A2($author$project$Services$Lenses$setOrigins, _List_Nil, relations);
};
var $author$project$Models$Project$Check$clearOrigins = function (check) {
	return A2($author$project$Services$Lenses$setOrigins, _List_Nil, check);
};
var $author$project$Models$Project$Comment$clearOrigins = function (comment) {
	return A2($author$project$Services$Lenses$setOrigins, _List_Nil, comment);
};
var $author$project$Services$Lenses$setComment = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.h4;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{h4: value});
		}));
var $author$project$Services$Lenses$mapCommentM = A2(
	$author$project$Services$Lenses$mapM_,
	function ($) {
		return $.h4;
	},
	$author$project$Services$Lenses$setComment);
var $author$project$Models$Project$Column$clearOrigins = function (column) {
	return A2(
		$author$project$Services$Lenses$mapCommentM,
		$author$project$Models$Project$Comment$clearOrigins,
		A2($author$project$Services$Lenses$setOrigins, _List_Nil, column));
};
var $author$project$Models$Project$Index$clearOrigins = function (index) {
	return A2($author$project$Services$Lenses$setOrigins, _List_Nil, index);
};
var $author$project$Models$Project$PrimaryKey$clearOrigins = function (pk) {
	return A2($author$project$Services$Lenses$setOrigins, _List_Nil, pk);
};
var $author$project$Models$Project$Unique$clearOrigins = function (unique) {
	return A2($author$project$Services$Lenses$setOrigins, _List_Nil, unique);
};
var $author$project$Services$Lenses$setChecks = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.cQ;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{cQ: value});
		}));
var $author$project$Services$Lenses$mapChecks = A2(
	$author$project$Services$Lenses$map_,
	function ($) {
		return $.cQ;
	},
	$author$project$Services$Lenses$setChecks);
var $author$project$Services$Lenses$setIndexes = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.dg;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{dg: value});
		}));
var $author$project$Services$Lenses$mapIndexes = A2(
	$author$project$Services$Lenses$map_,
	function ($) {
		return $.dg;
	},
	$author$project$Services$Lenses$setIndexes);
var $author$project$Services$Lenses$setPrimaryKey = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.nL;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{nL: value});
		}));
var $author$project$Services$Lenses$mapPrimaryKeyM = A2(
	$author$project$Services$Lenses$mapM_,
	function ($) {
		return $.nL;
	},
	$author$project$Services$Lenses$setPrimaryKey);
var $author$project$Services$Lenses$setUniques = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.d5;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{d5: value});
		}));
var $author$project$Services$Lenses$mapUniques = A2(
	$author$project$Services$Lenses$map_,
	function ($) {
		return $.d5;
	},
	$author$project$Services$Lenses$setUniques);
var $author$project$Models$Project$Table$clearOrigins = function (table) {
	return A2(
		$author$project$Services$Lenses$mapCommentM,
		$author$project$Models$Project$Comment$clearOrigins,
		A2(
			$author$project$Services$Lenses$mapChecks,
			$elm$core$List$map($author$project$Models$Project$Check$clearOrigins),
			A2(
				$author$project$Services$Lenses$mapIndexes,
				$elm$core$List$map($author$project$Models$Project$Index$clearOrigins),
				A2(
					$author$project$Services$Lenses$mapUniques,
					$elm$core$List$map($author$project$Models$Project$Unique$clearOrigins),
					A2(
						$author$project$Services$Lenses$mapPrimaryKeyM,
						$author$project$Models$Project$PrimaryKey$clearOrigins,
						A2(
							$author$project$Services$Lenses$mapColumns,
							$elm$core$Dict$map(
								function (_v0) {
									return $author$project$Models$Project$Column$clearOrigins;
								}),
							A2($author$project$Services$Lenses$setOrigins, _List_Nil, table)))))));
};
var $author$project$Services$SourceDiff$relationDiff = F2(
	function (old, _new) {
		var name = !_Utils_eq(old.eS, _new.eS);
		return $author$project$Libs$String$nonEmptyMaybe(
			A2(
				$elm$core$String$join,
				', ',
				A2(
					$elm$core$List$filterMap,
					$elm$core$Basics$identity,
					_List_fromArray(
						[
							A2($author$project$Libs$Bool$maybe, name, 'name updated')
						]))));
	});
var $author$project$Models$Project$ColumnId$show = F2(
	function (defaultSchema, _v0) {
		var table = _v0.a;
		var column = _v0.b;
		return A2(
			$author$project$Models$Project$ColumnPath$withName,
			$author$project$Models$Project$ColumnPath$fromString(column),
			A2($author$project$Models$Project$TableId$show, defaultSchema, table));
	});
var $author$project$Models$Project$RelationId$show = F2(
	function (defaultSchema, _v0) {
		var src = _v0.a;
		var ref = _v0.b;
		return A2($author$project$Models$Project$ColumnId$show, defaultSchema, src) + (' -> ' + A2($author$project$Models$Project$ColumnId$show, defaultSchema, ref));
	});
var $author$project$Services$SourceDiff$tableDiff = F2(
	function (old, _new) {
		var primaryKey = !_Utils_eq(old.nL, _new.nL);
		var comment = !_Utils_eq(old.h4, _new.h4);
		var _v0 = A3(
			$author$project$Libs$List$diff,
			function ($) {
				return $.eS;
			},
			old.d5,
			_new.d5);
		var removedUniques = _v0.a;
		var updatedUniques = _v0.b;
		var newUniques = _v0.c;
		var _v1 = A3(
			$author$project$Libs$List$diff,
			function ($) {
				return $.eS;
			},
			old.dg,
			_new.dg);
		var removedIndexes = _v1.a;
		var updatedIndexes = _v1.b;
		var newIndexes = _v1.c;
		var _v2 = A3(
			$author$project$Libs$List$diff,
			function ($) {
				return $.eS;
			},
			$elm$core$Dict$values(old.M),
			$elm$core$Dict$values(_new.M));
		var removedColumns = _v2.a;
		var updatedColumns = _v2.b;
		var newColumns = _v2.c;
		var _v3 = A3(
			$author$project$Libs$List$diff,
			function ($) {
				return $.eS;
			},
			old.cQ,
			_new.cQ);
		var removedChecks = _v3.a;
		var updatedChecks = _v3.b;
		var newChecks = _v3.c;
		return $author$project$Libs$String$nonEmptyMaybe(
			A2(
				$elm$core$String$join,
				', ',
				A2(
					$elm$core$List$filterMap,
					$elm$core$Basics$identity,
					_List_fromArray(
						[
							A2(
							$elm$core$Maybe$map,
							function (_v4) {
								return A2($author$project$Libs$String$pluralizeL, 'new column', newColumns) + (': ' + A2(
									$elm$core$String$join,
									', ',
									A2(
										$elm$core$List$map,
										function ($) {
											return $.eS;
										},
										newColumns)));
							},
							$elm$core$List$head(newColumns)),
							A2(
							$elm$core$Maybe$map,
							function (_v5) {
								return A2($author$project$Libs$String$pluralizeL, 'removed column', removedColumns) + (': ' + A2(
									$elm$core$String$join,
									', ',
									A2(
										$elm$core$List$map,
										function ($) {
											return $.eS;
										},
										removedColumns)));
							},
							$elm$core$List$head(removedColumns)),
							A2(
							$elm$core$Maybe$map,
							function (_v6) {
								return A2($author$project$Libs$String$pluralizeL, 'updated column', updatedColumns) + (': ' + A2(
									$elm$core$String$join,
									', ',
									A2(
										$elm$core$List$map,
										function (_v7) {
											var c = _v7.a;
											return c.eS;
										},
										updatedColumns)));
							},
							$elm$core$List$head(updatedColumns)),
							A2($author$project$Libs$Bool$maybe, primaryKey, 'primary key updated'),
							A2(
							$elm$core$Maybe$map,
							function (_v8) {
								return A2($author$project$Libs$String$pluralizeL, 'new unique', newUniques) + (': ' + A2(
									$elm$core$String$join,
									', ',
									A2(
										$elm$core$List$map,
										function ($) {
											return $.eS;
										},
										newUniques)));
							},
							$elm$core$List$head(newUniques)),
							A2(
							$elm$core$Maybe$map,
							function (_v9) {
								return A2($author$project$Libs$String$pluralizeL, 'removed unique', removedUniques) + (': ' + A2(
									$elm$core$String$join,
									', ',
									A2(
										$elm$core$List$map,
										function ($) {
											return $.eS;
										},
										removedUniques)));
							},
							$elm$core$List$head(removedUniques)),
							A2(
							$elm$core$Maybe$map,
							function (_v10) {
								return A2($author$project$Libs$String$pluralizeL, 'updated unique', updatedUniques) + (': ' + A2(
									$elm$core$String$join,
									', ',
									A2(
										$elm$core$List$map,
										function (_v11) {
											var c = _v11.a;
											return c.eS;
										},
										updatedUniques)));
							},
							$elm$core$List$head(updatedUniques)),
							A2(
							$elm$core$Maybe$map,
							function (_v12) {
								return A2($author$project$Libs$String$pluralizeL, 'new index', newIndexes) + (': ' + A2(
									$elm$core$String$join,
									', ',
									A2(
										$elm$core$List$map,
										function ($) {
											return $.eS;
										},
										newIndexes)));
							},
							$elm$core$List$head(newIndexes)),
							A2(
							$elm$core$Maybe$map,
							function (_v13) {
								return A2($author$project$Libs$String$pluralizeL, 'removed index', removedIndexes) + (': ' + A2(
									$elm$core$String$join,
									', ',
									A2(
										$elm$core$List$map,
										function ($) {
											return $.eS;
										},
										removedIndexes)));
							},
							$elm$core$List$head(removedIndexes)),
							A2(
							$elm$core$Maybe$map,
							function (_v14) {
								return A2($author$project$Libs$String$pluralizeL, 'updated index', updatedIndexes) + (': ' + A2(
									$elm$core$String$join,
									', ',
									A2(
										$elm$core$List$map,
										function (_v15) {
											var c = _v15.a;
											return c.eS;
										},
										updatedIndexes)));
							},
							$elm$core$List$head(updatedIndexes)),
							A2(
							$elm$core$Maybe$map,
							function (_v16) {
								return A2($author$project$Libs$String$pluralizeL, 'new check', newChecks) + (': ' + A2(
									$elm$core$String$join,
									', ',
									A2(
										$elm$core$List$map,
										function ($) {
											return $.eS;
										},
										newChecks)));
							},
							$elm$core$List$head(newChecks)),
							A2(
							$elm$core$Maybe$map,
							function (_v17) {
								return A2($author$project$Libs$String$pluralizeL, 'removed check', removedChecks) + (': ' + A2(
									$elm$core$String$join,
									', ',
									A2(
										$elm$core$List$map,
										function ($) {
											return $.eS;
										},
										removedChecks)));
							},
							$elm$core$List$head(removedChecks)),
							A2(
							$elm$core$Maybe$map,
							function (_v18) {
								return A2($author$project$Libs$String$pluralizeL, 'updated check', updatedChecks) + (': ' + A2(
									$elm$core$String$join,
									', ',
									A2(
										$elm$core$List$map,
										function (_v19) {
											var c = _v19.a;
											return c.eS;
										},
										updatedChecks)));
							},
							$elm$core$List$head(updatedChecks)),
							A2($author$project$Libs$Bool$maybe, comment, 'comment updated')
						]))));
	});
var $author$project$Services$SourceDiff$viewDiffItem = F2(
	function (label, items) {
		return A2(
			$elm$core$Maybe$map,
			function (_v0) {
				return A2(
					$elm$html$Html$li,
					_List_Nil,
					_List_fromArray(
						[
							$author$project$Libs$Html$bText(
							A2($author$project$Libs$String$pluralizeL, label, items)),
							$elm$html$Html$text(' ('),
							A2(
							$elm$html$Html$span,
							_List_Nil,
							A2(
								$elm$core$List$intersperse,
								$elm$html$Html$text(', '),
								A2(
									$elm$core$List$map,
									function (_v1) {
										var item = _v1.a;
										var details = _v1.b;
										return A2(
											$author$project$Components$Molecules$Tooltip$t,
											A2($elm$core$Maybe$withDefault, '', details),
											$elm$html$Html$text(item));
									},
									items))),
							$elm$html$Html$text(')')
						]));
			},
			$elm$core$List$head(items));
	});
var $author$project$Components$Molecules$Alert$withDescription = F2(
	function (model, description) {
		return $author$project$Components$Molecules$Alert$alert(
			{
				A: model.A,
				cX: _List_fromArray(
					[
						A2($author$project$Components$Molecules$Alert$alertTitle, model.A, model.a4),
						A2($author$project$Components$Molecules$Alert$alertDescription, model.A, description)
					]),
				aa: model.aa
			});
	});
var $author$project$Services$SourceDiff$view = F3(
	function (defaultSchema, newSource, oldSource) {
		var _v0 = A3(
			$author$project$Libs$List$diff,
			function ($) {
				return $.H;
			},
			A2(
				$elm$core$List$map,
				$author$project$Models$Project$Table$clearOrigins,
				$elm$core$Dict$values(oldSource.oM)),
			A2(
				$elm$core$List$map,
				$author$project$Models$Project$Table$clearOrigins,
				$elm$core$Dict$values(newSource.oM)));
		var removedTables = _v0.a;
		var updatedTables = _v0.b;
		var newTables = _v0.c;
		var _v1 = A3(
			$author$project$Libs$List$diff,
			function ($) {
				return $.H;
			},
			A2($elm$core$List$map, $author$project$Models$Project$Relation$clearOrigins, oldSource.bT),
			A2($elm$core$List$map, $author$project$Models$Project$Relation$clearOrigins, newSource.bT));
		var removedRelations = _v1.a;
		var updatedRelations = _v1.b;
		var newRelations = _v1.c;
		return ($author$project$Libs$List$nonEmpty(updatedTables) || ($author$project$Libs$List$nonEmpty(newTables) || ($author$project$Libs$List$nonEmpty(removedTables) || ($author$project$Libs$List$nonEmpty(updatedRelations) || ($author$project$Libs$List$nonEmpty(newRelations) || $author$project$Libs$List$nonEmpty(removedRelations)))))) ? A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('mt-3')
				]),
			_List_fromArray(
				[
					A2(
					$author$project$Components$Molecules$Alert$withDescription,
					{A: $author$project$Libs$Tailwind$green, aa: 43, a4: 'Source parsed, here are the changes:'},
					_List_fromArray(
						[
							A2(
							$elm$html$Html$ul,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('list-disc list-inside')
								]),
							A2(
								$elm$core$List$filterMap,
								$elm$core$Basics$identity,
								_List_fromArray(
									[
										A2(
										$author$project$Services$SourceDiff$viewDiffItem,
										'modified table',
										A2(
											$elm$core$List$map,
											function (_v2) {
												var old = _v2.a;
												var _new = _v2.b;
												return _Utils_Tuple2(
													A2($author$project$Models$Project$TableId$show, defaultSchema, _new.H),
													A2($author$project$Services$SourceDiff$tableDiff, old, _new));
											},
											updatedTables)),
										A2(
										$author$project$Services$SourceDiff$viewDiffItem,
										'new table',
										A2(
											$elm$core$List$map,
											function (t) {
												return _Utils_Tuple2(
													A2($author$project$Models$Project$TableId$show, defaultSchema, t.H),
													$elm$core$Maybe$Nothing);
											},
											newTables)),
										A2(
										$author$project$Services$SourceDiff$viewDiffItem,
										'removed table',
										A2(
											$elm$core$List$map,
											function (t) {
												return _Utils_Tuple2(
													A2($author$project$Models$Project$TableId$show, defaultSchema, t.H),
													$elm$core$Maybe$Nothing);
											},
											removedTables)),
										A2(
										$author$project$Services$SourceDiff$viewDiffItem,
										'modified relation',
										A2(
											$elm$core$List$map,
											function (_v3) {
												var old = _v3.a;
												var _new = _v3.b;
												return _Utils_Tuple2(
													A2($author$project$Models$Project$RelationId$show, defaultSchema, _new.H),
													A2($author$project$Services$SourceDiff$relationDiff, old, _new));
											},
											updatedRelations)),
										A2(
										$author$project$Services$SourceDiff$viewDiffItem,
										'new relation',
										A2(
											$elm$core$List$map,
											function (r) {
												return _Utils_Tuple2(
													A2($author$project$Models$Project$RelationId$show, defaultSchema, r.H),
													$elm$core$Maybe$Nothing);
											},
											newRelations)),
										A2(
										$author$project$Services$SourceDiff$viewDiffItem,
										'removed relation',
										A2(
											$elm$core$List$map,
											function (r) {
												return _Utils_Tuple2(
													A2($author$project$Models$Project$RelationId$show, defaultSchema, r.H),
													$elm$core$Maybe$Nothing);
											},
											removedRelations))
									])))
						]))
				])) : A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('mt-3')
				]),
			_List_fromArray(
				[
					A2(
					$author$project$Components$Molecules$Alert$withDescription,
					{A: $author$project$Libs$Tailwind$green, aa: 43, a4: 'Source parsed'},
					_List_fromArray(
						[
							$elm$html$Html$text('There is no differences but you can still refresh the source to change the last updated date.')
						]))
				]));
	});
var $author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$viewSourceDiff = function (model) {
	return A2(
		$elm$core$Maybe$withDefault,
		A2($elm$html$Html$div, _List_Nil, _List_Nil),
		A3(
			$elm$core$Maybe$map2,
			$author$project$Services$SourceDiff$view($author$project$Conf$schema.lC),
			A2($elm$core$Maybe$andThen, $elm$core$Result$toMaybe, model.g8),
			model.fj));
};
var $author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$databaseModal = F9(
	function (wrap, sourceSet, close, zone, now, titleId, source, url, model) {
		return _List_fromArray(
			[
				A2(
				$elm$html$Html$div,
				_List_fromArray(
					[
						$elm$html$Html$Attributes$class('max-w-3xl mx-6 mt-6')
					]),
				_List_fromArray(
					[
						A2(
						$elm$html$Html$div,
						_List_fromArray(
							[
								$author$project$Libs$Html$Attributes$css(
								_List_fromArray(
									[
										'mt-3',
										$author$project$Libs$Tailwind$sm(
										_List_fromArray(
											['mt-5']))
									]))
							]),
						_List_fromArray(
							[
								A2($author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$modalTitle, titleId, 'Refresh ' + (source.eS + ' source')),
								A2(
								$elm$html$Html$div,
								_List_fromArray(
									[
										$elm$html$Html$Attributes$class('mt-2')
									]),
								_List_fromArray(
									[
										A4($author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$remoteFileInfo, zone, now, url, source.kb)
									]))
							])),
						A2(
						$elm$html$Html$div,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$class('mt-3 flex justify-center')
							]),
						_List_fromArray(
							[
								A3(
								$author$project$Components$Atoms$Button$primary5,
								$author$project$Libs$Tailwind$primary,
								_List_fromArray(
									[
										$elm$html$Html$Events$onClick(
										wrap(
											$author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$DatabaseSourceMsg(
												$author$project$Services$DatabaseSource$GetSchema(url))))
									]),
								_List_fromArray(
									[
										$elm$html$Html$text('Fetch schema again')
									]))
							])),
						A2(
						$author$project$Services$DatabaseSource$viewParsing,
						A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$DatabaseSourceMsg, wrap),
						model),
						$author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$viewSourceDiff(model)
					])),
				A3($author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$updateSourceButtons, sourceSet, close, model.g8)
			]);
	});
var $author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$localFileInfo = F4(
	function (zone, now, fileName, updatedAt) {
		return A2(
			$elm$html$Html$p,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('text-sm text-gray-500')
				]),
			_List_fromArray(
				[
					$elm$html$Html$text('This source came from the '),
					$author$project$Libs$Html$bText(
					A2($author$project$Libs$Models$DateTime$formatDate, zone, updatedAt)),
					$elm$html$Html$text(' version of '),
					$author$project$Libs$Html$bText(fileName),
					$elm$html$Html$text(
					' file (' + (A2($author$project$Libs$Models$DateTime$human, now, updatedAt) + ').')),
					A2($elm$html$Html$br, _List_Nil, _List_Nil),
					$elm$html$Html$text('Please upload its new version to update the source.')
				]));
	});
var $author$project$Libs$Models$DateTime$greaterThan = F2(
	function (b, a) {
		return _Utils_cmp(
			$elm$time$Time$posixToMillis(a),
			$elm$time$Time$posixToMillis(b)) > 0;
	});
var $author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$localFileWarnings = F2(
	function (_v0, _v1) {
		var name1 = _v0.a;
		var name2 = _v0.b;
		var updated1 = _v1.a;
		var updated2 = _v1.b;
		return function (warnings) {
			return _Utils_eq(warnings, _List_Nil) ? A2($elm$html$Html$div, _List_Nil, _List_Nil) : A2(
				$elm$html$Html$div,
				_List_fromArray(
					[
						$elm$html$Html$Attributes$class('mt-3')
					]),
				_List_fromArray(
					[
						A2(
						$author$project$Components$Molecules$Alert$withDescription,
						{A: $author$project$Libs$Tailwind$yellow, aa: 95, a4: 'Found some strange things'},
						_List_fromArray(
							[
								A2(
								$elm$html$Html$ul,
								_List_fromArray(
									[
										$author$project$Libs$Html$Attributes$role('list'),
										$elm$html$Html$Attributes$class('list-disc list-inside')
									]),
								A2(
									$elm$core$List$map,
									$elm$html$Html$li(_List_Nil),
									warnings))
							]))
					]));
		}(
			A2(
				$elm$core$List$filterMap,
				$elm$core$Basics$identity,
				_List_fromArray(
					[
						A2(
						$author$project$Libs$Maybe$filter,
						function (_v2) {
							return !_Utils_eq(name1, name2);
						},
						$elm$core$Maybe$Just(
							_List_fromArray(
								[
									$elm$html$Html$text('Your file name changed from '),
									$author$project$Libs$Html$bText(name1),
									$elm$html$Html$text(' to '),
									$author$project$Libs$Html$bText(name2)
								]))),
						A2(
						$author$project$Libs$Maybe$filter,
						function (_v3) {
							return A2($author$project$Libs$Models$DateTime$greaterThan, updated2, updated1);
						},
						$elm$core$Maybe$Just(
							_List_fromArray(
								[
									$elm$html$Html$text('You file is '),
									$author$project$Libs$Html$bText('older'),
									$elm$html$Html$text(' than the previous one')
								])))
					])));
	});
var $author$project$Services$JsonSource$GetLocalFile = function (a) {
	return {$: 3, a: a};
};
var $author$project$Libs$Tailwind$focusWithin = $author$project$Libs$Tailwind$addState('focus-within');
var $author$project$Libs$Tailwind$ring_600 = function (_v0) {
	var color = _v0;
	return 'ring-' + (color + '-600');
};
var $author$project$Libs$Tailwind$focus_ring_within_600 = function (ringColor) {
	return $author$project$Libs$Tailwind$focusWithin(
		_List_fromArray(
			[
				'outline-none ring-2 ring-offset-2',
				$author$project$Libs$Tailwind$ring_600(ringColor),
				'ring-offset-white'
			]));
};
var $elm$html$Html$Attributes$accept = $elm$html$Html$Attributes$stringProperty('accept');
var $mpizenberg$elm_file$FileValue$inputAttributes = F2(
	function (id, mimes) {
		return _List_fromArray(
			[
				$elm$html$Html$Attributes$id(id),
				$elm$html$Html$Attributes$type_('file'),
				A2($elm$html$Html$Attributes$style, 'display', 'none'),
				$elm$html$Html$Attributes$accept(
				A2($elm$core$String$join, ',', mimes))
			]);
	});
var $mpizenberg$elm_file$FileValue$loadFile = function (msgTag) {
	return A2(
		$elm$html$Html$Events$custom,
		'change',
		A2(
			$elm$json$Json$Decode$map,
			function (file) {
				return {
					cq: msgTag(file),
					jy: true,
					hw: true
				};
			},
			A2(
				$elm$json$Json$Decode$at,
				_List_fromArray(
					['target', 'files', '0']),
				$mpizenberg$elm_file$FileValue$decoder)));
};
var $mpizenberg$elm_file$FileValue$hiddenInputSingle = F3(
	function (id, mimes, msgTag) {
		return A2(
			$elm$html$Html$input,
			A2(
				$elm$core$List$cons,
				$mpizenberg$elm_file$FileValue$loadFile(msgTag),
				A2($mpizenberg$elm_file$FileValue$inputAttributes, id, mimes)),
			_List_Nil);
	});
var $mpizenberg$elm_file$FileValue$all = A2(
	$elm$core$List$foldr,
	$elm$json$Json$Decode$map2($elm$core$List$cons),
	$elm$json$Json$Decode$succeed(_List_Nil));
var $mpizenberg$elm_file$FileValue$dynamicListOf = function (itemDecoder) {
	var decodeOne = function (n) {
		return A2(
			$elm$json$Json$Decode$field,
			$elm$core$String$fromInt(n),
			itemDecoder);
	};
	var decodeN = function (n) {
		return $mpizenberg$elm_file$FileValue$all(
			A2(
				$elm$core$List$map,
				decodeOne,
				A2($elm$core$List$range, 0, n - 1)));
	};
	return A2(
		$elm$json$Json$Decode$andThen,
		decodeN,
		A2($elm$json$Json$Decode$field, 'length', $elm$json$Json$Decode$int));
};
var $mpizenberg$elm_file$FileValue$errorFile = {
	mo: $elm$time$Time$millisToPosix(0),
	i8: 'text/plain',
	eS: 'If you see this file, please report an error at https://github.com/mpizenberg/elm-files/issues',
	ox: 0,
	a5: $elm$json$Json$Encode$null
};
var $mpizenberg$elm_file$FileValue$multipleFilesDecoder = A2(
	$elm$json$Json$Decode$andThen,
	function (files) {
		if (files.b) {
			var file = files.a;
			var list = files.b;
			return $elm$json$Json$Decode$succeed(
				_Utils_Tuple2(file, list));
		} else {
			return $elm$json$Json$Decode$succeed(
				_Utils_Tuple2($mpizenberg$elm_file$FileValue$errorFile, _List_Nil));
		}
	},
	$mpizenberg$elm_file$FileValue$dynamicListOf($mpizenberg$elm_file$FileValue$decoder));
var $mpizenberg$elm_file$FileValue$filesOn = F2(
	function (event, msgTag) {
		return A2(
			$elm$html$Html$Events$custom,
			event,
			A2(
				$elm$json$Json$Decode$map,
				function (_v0) {
					var file = _v0.a;
					var list = _v0.b;
					return {
						cq: A2(msgTag, file, list),
						jy: true,
						hw: true
					};
				},
				A2(
					$elm$json$Json$Decode$at,
					_List_fromArray(
						['dataTransfer', 'files']),
					$mpizenberg$elm_file$FileValue$multipleFilesDecoder)));
	});
var $mpizenberg$elm_file$FileValue$onWithId = F3(
	function (id, event, msg) {
		return A2(
			$elm$html$Html$Events$custom,
			event,
			A2(
				$elm$json$Json$Decode$map,
				function (message) {
					return {cq: message, jy: true, hw: true};
				},
				A2(
					$elm$json$Json$Decode$andThen,
					function (targetId) {
						return _Utils_eq(targetId, id) ? $elm$json$Json$Decode$succeed(msg) : $elm$json$Json$Decode$fail('Wrong target');
					},
					A2(
						$elm$json$Json$Decode$at,
						_List_fromArray(
							['target', 'id']),
						$elm$json$Json$Decode$string))));
	});
var $mpizenberg$elm_file$FileValue$onDrop = function (config) {
	return A2(
		$elm$core$List$cons,
		A2($mpizenberg$elm_file$FileValue$filesOn, 'dragover', config.dw),
		A2(
			$elm$core$List$cons,
			A2($mpizenberg$elm_file$FileValue$filesOn, 'drop', config.du),
			function () {
				var _v0 = config.dv;
				if (_v0.$ === 1) {
					return _List_Nil;
				} else {
					var id = _v0.a.H;
					var msg = _v0.a.mW;
					return _List_fromArray(
						[
							$elm$html$Html$Attributes$id(id),
							A3($mpizenberg$elm_file$FileValue$onWithId, id, 'dragleave', msg)
						]);
				}
			}()));
};
var $author$project$Components$Molecules$FileInput$input = function (model) {
	return A2(
		$elm$html$Html$label,
		_Utils_ap(
			_List_fromArray(
				[
					$elm$html$Html$Attributes$for(model.H),
					$author$project$Libs$Html$Attributes$role('button'),
					$author$project$Libs$Html$Attributes$css(
					_List_fromArray(
						[
							'flex justify-center px-6 pt-5 pb-6 border-2 border-gray-300 border-dashed rounded-md text-gray-600',
							$author$project$Libs$Tailwind$hover(
							_List_fromArray(
								['border-primary-400 text-primary-600'])),
							$author$project$Libs$Tailwind$focus_ring_within_600($author$project$Libs$Tailwind$primary)
						]))
				]),
			$mpizenberg$elm_file$FileValue$onDrop(
				{du: model.du, dv: model.dv, dw: model.dw})),
		_List_fromArray(
			[
				model.cX,
				A3($mpizenberg$elm_file$FileValue$hiddenInputSingle, model.H, model.eP, model.eW)
			]));
};
var $author$project$Services$JsonSource$viewLocalInput = F3(
	function (wrap, noop, htmlId) {
		return $author$project$Components$Molecules$FileInput$input(
			{
				cX: A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$author$project$Libs$Html$Attributes$css(
							_List_fromArray(
								['space-y-1 text-center']))
						]),
					_List_fromArray(
						[
							A2($author$project$Components$Atoms$Icon$outline2x, 80, 'mx-auto'),
							A2(
							$elm$html$Html$p,
							_List_Nil,
							_List_fromArray(
								[
									A2(
									$elm$html$Html$span,
									_List_fromArray(
										[
											$author$project$Libs$Html$Attributes$css(
											_List_fromArray(
												['text-primary-600']))
										]),
									_List_fromArray(
										[
											$elm$html$Html$text('Upload your JSON schema')
										])),
									$elm$html$Html$text(' or drag and drop')
								])),
							A2(
							$elm$html$Html$p,
							_List_fromArray(
								[
									$author$project$Libs$Html$Attributes$css(
									_List_fromArray(
										['text-xs']))
								]),
							_List_fromArray(
								[
									$elm$html$Html$text('.json file only')
								]))
						])),
				H: htmlId,
				eP: _List_fromArray(
					['.json']),
				du: F2(
					function (f, _v0) {
						return wrap(
							$author$project$Services$JsonSource$GetLocalFile(f));
					}),
				dv: $elm$core$Maybe$Nothing,
				dw: F2(
					function (_v1, _v2) {
						return noop(htmlId);
					}),
				eW: A2($elm$core$Basics$composeR, $author$project$Services$JsonSource$GetLocalFile, wrap)
			});
	});
var $author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$jsonLocalFileModal = function (wrap) {
	return function (sourceSet) {
		return function (close) {
			return function (noop) {
				return function (zone) {
					return function (now) {
						return function (htmlId) {
							return function (titleId) {
								return function (source) {
									return function (fileName) {
										return function (updatedAt) {
											return function (model) {
												return _List_fromArray(
													[
														A2(
														$elm$html$Html$div,
														_List_fromArray(
															[
																$elm$html$Html$Attributes$class('max-w-3xl mx-6 mt-6')
															]),
														_List_fromArray(
															[
																A2(
																$elm$html$Html$div,
																_List_fromArray(
																	[
																		$author$project$Libs$Html$Attributes$css(
																		_List_fromArray(
																			[
																				'mt-3',
																				$author$project$Libs$Tailwind$sm(
																				_List_fromArray(
																					['mt-5']))
																			]))
																	]),
																_List_fromArray(
																	[
																		A2($author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$modalTitle, titleId, 'Refresh ' + (source.eS + ' source')),
																		A2(
																		$elm$html$Html$div,
																		_List_fromArray(
																			[
																				$elm$html$Html$Attributes$class('mt-2')
																			]),
																		_List_fromArray(
																			[
																				A4($author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$localFileInfo, zone, now, fileName, updatedAt)
																			]))
																	])),
																A2(
																$elm$html$Html$div,
																_List_fromArray(
																	[
																		$elm$html$Html$Attributes$class('mt-3')
																	]),
																_List_fromArray(
																	[
																		A3(
																		$author$project$Services$JsonSource$viewLocalInput,
																		A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$JsonSourceMsg, wrap),
																		noop,
																		htmlId + '-local-file')
																	])),
																function () {
																var _v0 = _Utils_Tuple2(
																	source.gi,
																	A2(
																		$elm$core$Maybe$map,
																		function (_v1) {
																			var src = _v1.a;
																			return src.gi;
																		},
																		model.mv));
																if (((_v0.a.$ === 3) && (!_v0.b.$)) && (_v0.b.a.$ === 3)) {
																	var _v2 = _v0.a;
																	var name1 = _v2.a;
																	var updated1 = _v2.c;
																	var _v3 = _v0.b.a;
																	var name2 = _v3.a;
																	var updated2 = _v3.c;
																	return A2(
																		$author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$localFileWarnings,
																		_Utils_Tuple2(name1, name2),
																		_Utils_Tuple2(updated1, updated2));
																} else {
																	return A2($elm$html$Html$div, _List_Nil, _List_Nil);
																}
															}(),
																A2(
																$author$project$Services$JsonSource$viewParsing,
																A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$JsonSourceMsg, wrap),
																model),
																$author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$viewSourceDiff(model)
															])),
														A3($author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$updateSourceButtons, sourceSet, close, model.g8)
													]);
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var $author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$jsonRemoteFileModal = F9(
	function (wrap, sourceSet, close, zone, now, titleId, source, fileUrl, model) {
		return _List_fromArray(
			[
				A2(
				$elm$html$Html$div,
				_List_fromArray(
					[
						$elm$html$Html$Attributes$class('max-w-3xl mx-6 mt-6')
					]),
				_List_fromArray(
					[
						A2(
						$elm$html$Html$div,
						_List_fromArray(
							[
								$author$project$Libs$Html$Attributes$css(
								_List_fromArray(
									[
										'mt-3',
										$author$project$Libs$Tailwind$sm(
										_List_fromArray(
											['mt-5']))
									]))
							]),
						_List_fromArray(
							[
								A2($author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$modalTitle, titleId, 'Refresh ' + (source.eS + ' source')),
								A2(
								$elm$html$Html$div,
								_List_fromArray(
									[
										$elm$html$Html$Attributes$class('mt-2')
									]),
								_List_fromArray(
									[
										A4($author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$remoteFileInfo, zone, now, fileUrl, source.kb)
									]))
							])),
						A2(
						$elm$html$Html$div,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$class('mt-3 flex justify-center')
							]),
						_List_fromArray(
							[
								A3(
								$author$project$Components$Atoms$Button$primary5,
								$author$project$Libs$Tailwind$primary,
								_List_fromArray(
									[
										$elm$html$Html$Events$onClick(
										A3(
											$elm$core$Basics$composeR,
											$author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$JsonSourceMsg,
											wrap,
											$author$project$Services$JsonSource$GetRemoteFile(fileUrl)))
									]),
								_List_fromArray(
									[
										$elm$html$Html$text('Fetch file again')
									]))
							])),
						A2(
						$author$project$Services$JsonSource$viewParsing,
						A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$JsonSourceMsg, wrap),
						model),
						$author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$viewSourceDiff(model)
					])),
				A3($author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$updateSourceButtons, sourceSet, close, model.g8)
			]);
	});
var $author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$TabAml = 3;
var $author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$TabJson = 2;
var $author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$TabSql = 1;
var $author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$UpdateTab = function (a) {
	return {$: 6, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$newSourceButtons = F3(
	function (sourceSet, close, parsedSource) {
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('px-6 py-3 mt-3 flex items-center justify-between flex-row-reverse bg-gray-50 rounded-b-lg')
				]),
			_List_fromArray(
				[
					A2(
					$author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$primaryBtn,
					A2(
						$elm$core$Maybe$map,
						sourceSet,
						A2($elm$core$Maybe$andThen, $elm$core$Result$toMaybe, parsedSource)),
					'Add source'),
					$author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$closeBtn(close)
				]));
	});
var $author$project$Components$Atoms$Button$size1 = 'px-2.5 py-1.5 text-xs rounded';
var $author$project$Components$Atoms$Button$primary1 = A2($author$project$Components$Atoms$Button$build, $author$project$Components$Atoms$Button$primary, $author$project$Components$Atoms$Button$size1);
var $author$project$Services$AmlSource$UpdateName = function (a) {
	return {$: 0, a: a};
};
var $author$project$Services$AmlSource$viewInput = F3(
	function (wrap, htmlId, model) {
		var fieldId = htmlId + '-layout';
		return A2(
			$elm$html$Html$div,
			_List_Nil,
			_List_fromArray(
				[
					A2(
					$elm$html$Html$p,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('mt-1 text-sm text-gray-500')
						]),
					_List_fromArray(
						[
							$elm$html$Html$text('AML means '),
							A3(
							$author$project$Libs$Html$extLink,
							'https://github.com/azimuttapp/azimutt/blob/main/docs/aml/README.md',
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('link')
								]),
							_List_fromArray(
								[
									$elm$html$Html$text('Azimutt Markup Language')
								])),
							$elm$html$Html$text(', it\'s our very simple language allowing you to define your own schema in Azimutt.')
						])),
					A2(
					$elm$html$Html$label,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$for(fieldId),
							$elm$html$Html$Attributes$class('mt-1 block text-sm font-medium text-gray-700')
						]),
					_List_fromArray(
						[
							$elm$html$Html$text('Source name')
						])),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('mt-1')
						]),
					_List_fromArray(
						[
							A4(
							$author$project$Components$Molecules$InputText$simple,
							fieldId,
							'ex: feature-xyz',
							model.eS,
							A2($elm$core$Basics$composeR, $author$project$Services$AmlSource$UpdateName, wrap))
						]))
				]));
	});
var $author$project$Services$DatabaseSource$UpdateUrl = function (a) {
	return {$: 0, a: a};
};
var $elm$html$Html$i = _VirtualDom_node('i');
var $author$project$Libs$Html$iText = function (content) {
	return A2(
		$elm$html$Html$i,
		_List_Nil,
		_List_fromArray(
			[
				$elm$html$Html$text(content)
			]));
};
var $author$project$Services$DatabaseSource$viewInput = F3(
	function (wrap, htmlId, model) {
		var error = A2($elm$core$Maybe$andThen, $author$project$Libs$Result$toError, model.oo);
		var inputStyles = A3(
			$author$project$Libs$Maybe$mapOrElse,
			function (_v1) {
				return 'text-red-500 placeholder-red-300 border-red-300 focus:border-red-500 focus:ring-red-500';
			},
			'border-gray-300 focus:ring-indigo-500 focus:border-indigo-500',
			error);
		return A2(
			$elm$html$Html$div,
			_List_Nil,
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('flex space-x-10')
						]),
					A2(
						$elm$core$List$map,
						function (_v0) {
							var name = _v0.a;
							var requestLink = _v0.b;
							return A3(
								$author$project$Libs$Maybe$mapOrElse,
								function (link) {
									return A2(
										$author$project$Components$Molecules$Tooltip$t,
										'Click to ask support (done on demand)',
										A3(
											$author$project$Libs$Html$extLink,
											link,
											_List_Nil,
											_List_fromArray(
												[
													A2(
													$elm$html$Html$img,
													_List_fromArray(
														[
															$elm$html$Html$Attributes$src(
															$author$project$Services$Backend$resourceUrl('/assets/logos/' + (name + '.png'))),
															$elm$html$Html$Attributes$class('grayscale opacity-50')
														]),
													_List_Nil)
												])));
								},
								A2(
									$elm$html$Html$span,
									_List_Nil,
									_List_fromArray(
										[
											A2(
											$elm$html$Html$img,
											_List_fromArray(
												[
													$elm$html$Html$Attributes$src(
													$author$project$Services$Backend$resourceUrl('/assets/logos/' + (name + '.png')))
												]),
											_List_Nil)
										])),
								requestLink);
						},
						_List_fromArray(
							[
								_Utils_Tuple2('postgresql', $elm$core$Maybe$Nothing),
								_Utils_Tuple2(
								'mysql',
								$elm$core$Maybe$Just('https://github.com/azimuttapp/azimutt/issues/114')),
								_Utils_Tuple2(
								'oracle',
								$elm$core$Maybe$Just(
									A2($author$project$Conf$constants.kE, 'Support oracle database import', ''))),
								_Utils_Tuple2(
								'sql-server',
								$elm$core$Maybe$Just('https://github.com/azimuttapp/azimutt/issues/113')),
								_Utils_Tuple2(
								'mariadb',
								$elm$core$Maybe$Just(
									A2($author$project$Conf$constants.kE, 'Support mariadb database import', ''))),
								_Utils_Tuple2(
								'sqlite',
								$elm$core$Maybe$Just('https://github.com/azimuttapp/azimutt/issues/115'))
							]))),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('mt-3 flex rounded-md shadow-sm')
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$span,
							_List_fromArray(
								[
									$author$project$Libs$Html$Attributes$css(
									_List_fromArray(
										[inputStyles, 'inline-flex items-center px-3 rounded-l-md border border-r-0 bg-gray-50 text-gray-500 sm:text-sm']))
								]),
							_List_fromArray(
								[
									$elm$html$Html$text('Database url')
								])),
							A2(
							$elm$html$Html$input,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$type_('text'),
									$elm$html$Html$Attributes$id(htmlId + '-url'),
									$elm$html$Html$Attributes$name(htmlId + '-url'),
									$elm$html$Html$Attributes$placeholder('ex: ' + $author$project$Services$DatabaseSource$example),
									$elm$html$Html$Attributes$value(model.o1),
									$elm$html$Html$Attributes$disabled(
									(!_Utils_eq(
										A2($elm$core$Maybe$andThen, $elm$core$Result$toMaybe, model.oo),
										$elm$core$Maybe$Nothing)) && _Utils_eq(model.mv, $elm$core$Maybe$Nothing)),
									$elm$html$Html$Events$onInput(
									A2($elm$core$Basics$composeR, $author$project$Services$DatabaseSource$UpdateUrl, wrap)),
									$elm$html$Html$Events$onBlur(
									wrap(
										$author$project$Services$DatabaseSource$GetSchema(model.o1))),
									$author$project$Libs$Html$Attributes$css(
									_List_fromArray(
										[
											inputStyles,
											'flex-1 min-w-0 block w-full px-3 py-2 rounded-none rounded-r-md sm:text-sm',
											$author$project$Libs$Tailwind$disabled(
											_List_fromArray(
												['bg-slate-50 text-slate-500 border-slate-200']))
										]))
								]),
							_List_Nil)
						])),
					A3(
					$author$project$Libs$Maybe$mapOrElse,
					function (err) {
						return A2(
							$elm$html$Html$p,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('mt-1 text-sm text-red-500')
								]),
							_List_fromArray(
								[
									$elm$html$Html$text(err)
								]));
					},
					A2($elm$html$Html$p, _List_Nil, _List_Nil),
					error),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('mt-3')
						]),
					_List_fromArray(
						[
							A3(
							$author$project$Components$Molecules$Alert$simple,
							$author$project$Libs$Tailwind$blue,
							167,
							_List_fromArray(
								[
									$elm$html$Html$text('Database url is a '),
									$author$project$Libs$Html$bText('very sensitive information'),
									$elm$html$Html$text('. It will be stored in your project, to allow schema refresh and show data statistics.'),
									$elm$html$Html$text(' For best security prefer to use a '),
									$author$project$Libs$Html$iText('read-only user'),
									$elm$html$Html$text(' and on a '),
									$author$project$Libs$Html$iText('non-production database'),
									$elm$html$Html$text('.')
								]))
						]))
				]));
	});
var $author$project$Services$JsonSource$UpdateRemoteFile = function (a) {
	return {$: 0, a: a};
};
var $author$project$Services$JsonSource$viewRemoteInput = F4(
	function (wrap, htmlId, model, error) {
		var inputStyles = A3(
			$author$project$Libs$Maybe$mapOrElse,
			function (_v0) {
				return 'text-red-500 placeholder-red-300 border-red-300 focus:border-red-500 focus:ring-red-500';
			},
			'border-gray-300 focus:ring-indigo-500 focus:border-indigo-500',
			error);
		return A2(
			$elm$html$Html$div,
			_List_Nil,
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('flex rounded-md shadow-sm')
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$span,
							_List_fromArray(
								[
									$author$project$Libs$Html$Attributes$css(
									_List_fromArray(
										[inputStyles, 'inline-flex items-center px-3 rounded-l-md border border-r-0 bg-gray-50 text-gray-500 sm:text-sm']))
								]),
							_List_fromArray(
								[
									$elm$html$Html$text('Remote schema')
								])),
							A2(
							$elm$html$Html$input,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$type_('text'),
									$elm$html$Html$Attributes$id(htmlId),
									$elm$html$Html$Attributes$name(htmlId),
									$elm$html$Html$Attributes$placeholder('ex: ' + $author$project$Services$JsonSource$example),
									$elm$html$Html$Attributes$value(model),
									$elm$html$Html$Events$onInput(
									A2($elm$core$Basics$composeR, $author$project$Services$JsonSource$UpdateRemoteFile, wrap)),
									$elm$html$Html$Events$onBlur(
									wrap(
										$author$project$Services$JsonSource$GetRemoteFile(model))),
									$author$project$Libs$Html$Attributes$css(
									_List_fromArray(
										[inputStyles, 'flex-1 min-w-0 block w-full px-3 py-2 rounded-none rounded-r-md sm:text-sm']))
								]),
							_List_Nil)
						])),
					A3(
					$author$project$Libs$Maybe$mapOrElse,
					function (err) {
						return A2(
							$elm$html$Html$p,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('mt-1 text-sm text-red-500')
								]),
							_List_fromArray(
								[
									$elm$html$Html$text(err)
								]));
					},
					A2($elm$html$Html$span, _List_Nil, _List_Nil),
					error)
				]));
	});
var $author$project$Services$JsonSource$viewInput = F4(
	function (wrap, noop, htmlId, model) {
		return A2(
			$elm$html$Html$div,
			_List_Nil,
			_List_fromArray(
				[
					A3($author$project$Services$JsonSource$viewLocalInput, wrap, noop, htmlId + '-local-file'),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('mt-3')
						]),
					_List_fromArray(
						[
							$author$project$Components$Molecules$Divider$withLabel('OR')
						])),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('mt-3')
						]),
					_List_fromArray(
						[
							A4(
							$author$project$Services$JsonSource$viewRemoteInput,
							wrap,
							htmlId + '-remote-file',
							model.o1,
							A2($elm$core$Maybe$andThen, $author$project$Libs$Result$toError, model.jU))
						]))
				]));
	});
var $author$project$Services$SqlSource$GetLocalFile = function (a) {
	return {$: 3, a: a};
};
var $author$project$Services$SqlSource$viewLocalInput = F3(
	function (wrap, noop, htmlId) {
		return $author$project$Components$Molecules$FileInput$input(
			{
				cX: A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$author$project$Libs$Html$Attributes$css(
							_List_fromArray(
								['space-y-1 text-center']))
						]),
					_List_fromArray(
						[
							A2($author$project$Components$Atoms$Icon$outline2x, 80, 'mx-auto'),
							A2(
							$elm$html$Html$p,
							_List_Nil,
							_List_fromArray(
								[
									A2(
									$elm$html$Html$span,
									_List_fromArray(
										[
											$author$project$Libs$Html$Attributes$css(
											_List_fromArray(
												['text-primary-600']))
										]),
									_List_fromArray(
										[
											$elm$html$Html$text('Upload your SQL schema')
										])),
									$elm$html$Html$text(' or drag and drop')
								])),
							A2(
							$elm$html$Html$p,
							_List_fromArray(
								[
									$author$project$Libs$Html$Attributes$css(
									_List_fromArray(
										['text-xs']))
								]),
							_List_fromArray(
								[
									$elm$html$Html$text('.sql file only')
								]))
						])),
				H: htmlId,
				eP: _List_fromArray(
					['.sql']),
				du: F2(
					function (f, _v0) {
						return wrap(
							$author$project$Services$SqlSource$GetLocalFile(f));
					}),
				dv: $elm$core$Maybe$Nothing,
				dw: F2(
					function (_v1, _v2) {
						return noop(htmlId);
					}),
				eW: A2($elm$core$Basics$composeR, $author$project$Services$SqlSource$GetLocalFile, wrap)
			});
	});
var $author$project$Services$SqlSource$UpdateRemoteFile = function (a) {
	return {$: 0, a: a};
};
var $author$project$Services$SqlSource$viewRemoteInput = F4(
	function (wrap, htmlId, model, error) {
		var inputStyles = A3(
			$author$project$Libs$Maybe$mapOrElse,
			function (_v0) {
				return 'text-red-500 placeholder-red-300 border-red-300 focus:border-red-500 focus:ring-red-500';
			},
			'border-gray-300 focus:ring-indigo-500 focus:border-indigo-500',
			error);
		return A2(
			$elm$html$Html$div,
			_List_Nil,
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('flex rounded-md shadow-sm')
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$span,
							_List_fromArray(
								[
									$author$project$Libs$Html$Attributes$css(
									_List_fromArray(
										[inputStyles, 'inline-flex items-center px-3 rounded-l-md border border-r-0 bg-gray-50 text-gray-500 sm:text-sm']))
								]),
							_List_fromArray(
								[
									$elm$html$Html$text('Remote schema')
								])),
							A2(
							$elm$html$Html$input,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$type_('text'),
									$elm$html$Html$Attributes$id(htmlId),
									$elm$html$Html$Attributes$name(htmlId),
									$elm$html$Html$Attributes$placeholder('ex: ' + $author$project$Services$SqlSource$example),
									$elm$html$Html$Attributes$value(model),
									$elm$html$Html$Events$onInput(
									A2($elm$core$Basics$composeR, $author$project$Services$SqlSource$UpdateRemoteFile, wrap)),
									$elm$html$Html$Events$onBlur(
									wrap(
										$author$project$Services$SqlSource$GetRemoteFile(model))),
									$author$project$Libs$Html$Attributes$css(
									_List_fromArray(
										[inputStyles, 'flex-1 min-w-0 block w-full px-3 py-2 rounded-none rounded-r-md sm:text-sm']))
								]),
							_List_Nil)
						])),
					A3(
					$author$project$Libs$Maybe$mapOrElse,
					function (err) {
						return A2(
							$elm$html$Html$p,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('mt-1 text-sm text-red-500')
								]),
							_List_fromArray(
								[
									$elm$html$Html$text(err)
								]));
					},
					A2($elm$html$Html$span, _List_Nil, _List_Nil),
					error)
				]));
	});
var $author$project$Services$SqlSource$viewInput = F4(
	function (wrap, noop, htmlId, model) {
		return A2(
			$elm$html$Html$div,
			_List_Nil,
			_List_fromArray(
				[
					A3($author$project$Services$SqlSource$viewLocalInput, wrap, noop, htmlId + '-local-file'),
					A2(
					$elm$html$Html$p,
					_List_fromArray(
						[
							$author$project$Libs$Html$Attributes$css(
							_List_fromArray(
								['mt-1 text-sm text-gray-500']))
						]),
					_List_fromArray(
						[
							$elm$html$Html$text('Azimutt has a flexible SQL parser which can handle '),
							$author$project$Libs$Html$bText('most SQL dialects'),
							$elm$html$Html$text('. Errors are fixed within a few days when sent.')
						])),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('mt-3')
						]),
					_List_fromArray(
						[
							$author$project$Components$Molecules$Divider$withLabel('OR')
						])),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('mt-3')
						]),
					_List_fromArray(
						[
							A4(
							$author$project$Services$SqlSource$viewRemoteInput,
							wrap,
							htmlId + '-remote-file',
							model.o1,
							A2($elm$core$Maybe$andThen, $author$project$Libs$Result$toError, model.jU))
						]))
				]));
	});
var $author$project$Components$Atoms$Button$white1 = A2($author$project$Components$Atoms$Button$build, $author$project$Components$Atoms$Button$white, $author$project$Components$Atoms$Button$size1);
var $author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$newSourceModal = F7(
	function (wrap, sourceSet, close, noop, htmlId, titleId, model) {
		return _List_fromArray(
			[
				A2(
				$elm$html$Html$div,
				_List_fromArray(
					[
						$elm$html$Html$Attributes$class('max-w-3xl mx-6 mt-6')
					]),
				_List_fromArray(
					[
						A2(
						$elm$html$Html$div,
						_List_fromArray(
							[
								$author$project$Libs$Html$Attributes$css(
								_List_fromArray(
									[
										'mt-3',
										$author$project$Libs$Tailwind$sm(
										_List_fromArray(
											['mt-5']))
									]))
							]),
						_List_fromArray(
							[
								A2($author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$modalTitle, titleId, 'Add a source'),
								A2(
								$elm$html$Html$div,
								_List_fromArray(
									[
										$elm$html$Html$Attributes$class('mt-2')
									]),
								_List_fromArray(
									[
										A2(
										$elm$html$Html$p,
										_List_fromArray(
											[
												$elm$html$Html$Attributes$class('text-sm text-gray-500')
											]),
										_List_fromArray(
											[
												$elm$html$Html$text('A project can have several sources. They are independent and merged together when enabled to build the usable schema.\n                      It\'s a great way to explore multiple database at once or create isolated schema evolutions.')
											]))
									]))
							])),
						A2(
						$elm$html$Html$div,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$class('mt-3')
							]),
						_List_fromArray(
							[
								A6(
								$author$project$Libs$Bool$cond,
								!model.a0,
								$author$project$Components$Atoms$Button$primary1,
								$author$project$Components$Atoms$Button$white1,
								$author$project$Libs$Tailwind$primary,
								_List_fromArray(
									[
										$elm$html$Html$Events$onClick(
										wrap(
											$author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$UpdateTab(0)))
									]),
								_List_fromArray(
									[
										$elm$html$Html$text('Database')
									])),
								A6(
								$author$project$Libs$Bool$cond,
								model.a0 === 1,
								$author$project$Components$Atoms$Button$primary1,
								$author$project$Components$Atoms$Button$white1,
								$author$project$Libs$Tailwind$primary,
								_List_fromArray(
									[
										$elm$html$Html$Events$onClick(
										wrap(
											$author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$UpdateTab(1))),
										$elm$html$Html$Attributes$class('ml-3')
									]),
								_List_fromArray(
									[
										$elm$html$Html$text('SQL')
									])),
								A6(
								$author$project$Libs$Bool$cond,
								model.a0 === 2,
								$author$project$Components$Atoms$Button$primary1,
								$author$project$Components$Atoms$Button$white1,
								$author$project$Libs$Tailwind$primary,
								_List_fromArray(
									[
										$elm$html$Html$Events$onClick(
										wrap(
											$author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$UpdateTab(2))),
										$elm$html$Html$Attributes$class('ml-3')
									]),
								_List_fromArray(
									[
										$elm$html$Html$text('JSON')
									])),
								A6(
								$author$project$Libs$Bool$cond,
								model.a0 === 3,
								$author$project$Components$Atoms$Button$primary1,
								$author$project$Components$Atoms$Button$white1,
								$author$project$Libs$Tailwind$primary,
								_List_fromArray(
									[
										$elm$html$Html$Events$onClick(
										wrap(
											$author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$UpdateTab(3))),
										$elm$html$Html$Attributes$class('ml-3')
									]),
								_List_fromArray(
									[
										$elm$html$Html$text('AML')
									]))
							])),
						A2(
						$elm$html$Html$div,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$class('mt-3')
							]),
						function () {
							var _v0 = model.a0;
							switch (_v0) {
								case 0:
									return _List_fromArray(
										[
											A3(
											$author$project$Services$DatabaseSource$viewInput,
											A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$DatabaseSourceMsg, wrap),
											htmlId + '-database',
											model.ca),
											A2(
											$author$project$Services$DatabaseSource$viewParsing,
											A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$DatabaseSourceMsg, wrap),
											model.ca)
										]);
								case 1:
									return _List_fromArray(
										[
											A4(
											$author$project$Services$SqlSource$viewInput,
											A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$SqlSourceMsg, wrap),
											noop,
											htmlId + '-sql',
											model.cA),
											A2(
											$author$project$Services$SqlSource$viewParsing,
											A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$SqlSourceMsg, wrap),
											model.cA)
										]);
								case 2:
									return _List_fromArray(
										[
											A4(
											$author$project$Services$JsonSource$viewInput,
											A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$JsonSourceMsg, wrap),
											noop,
											htmlId + '-json',
											model.cm),
											A2(
											$author$project$Services$JsonSource$viewParsing,
											A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$JsonSourceMsg, wrap),
											model.cm)
										]);
								default:
									return _List_fromArray(
										[
											A3(
											$author$project$Services$AmlSource$viewInput,
											A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$AmlSourceMsg, wrap),
											htmlId + '-aml',
											model.d9)
										]);
							}
						}())
					])),
				function () {
				var _v1 = model.a0;
				switch (_v1) {
					case 0:
						return A3($author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$newSourceButtons, sourceSet, close, model.ca.g8);
					case 1:
						return A3($author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$newSourceButtons, sourceSet, close, model.cA.g8);
					case 2:
						return A3($author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$newSourceButtons, sourceSet, close, model.cm.g8);
					default:
						return A3($author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$newSourceButtons, sourceSet, close, model.d9.g8);
				}
			}()
			]);
	});
var $author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$sqlLocalFileModal = function (wrap) {
	return function (sourceSet) {
		return function (close) {
			return function (noop) {
				return function (zone) {
					return function (now) {
						return function (htmlId) {
							return function (titleId) {
								return function (source) {
									return function (fileName) {
										return function (updatedAt) {
											return function (model) {
												return _List_fromArray(
													[
														A2(
														$elm$html$Html$div,
														_List_fromArray(
															[
																$elm$html$Html$Attributes$class('max-w-3xl mx-6 mt-6')
															]),
														_List_fromArray(
															[
																A2(
																$elm$html$Html$div,
																_List_fromArray(
																	[
																		$author$project$Libs$Html$Attributes$css(
																		_List_fromArray(
																			[
																				'mt-3',
																				$author$project$Libs$Tailwind$sm(
																				_List_fromArray(
																					['mt-5']))
																			]))
																	]),
																_List_fromArray(
																	[
																		A2($author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$modalTitle, titleId, 'Refresh ' + (source.eS + ' source')),
																		A2(
																		$elm$html$Html$div,
																		_List_fromArray(
																			[
																				$elm$html$Html$Attributes$class('mt-2')
																			]),
																		_List_fromArray(
																			[
																				A4($author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$localFileInfo, zone, now, fileName, updatedAt)
																			]))
																	])),
																A2(
																$elm$html$Html$div,
																_List_fromArray(
																	[
																		$elm$html$Html$Attributes$class('mt-3')
																	]),
																_List_fromArray(
																	[
																		A3(
																		$author$project$Services$SqlSource$viewLocalInput,
																		A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$SqlSourceMsg, wrap),
																		noop,
																		htmlId + '-local-file')
																	])),
																function () {
																var _v0 = _Utils_Tuple2(
																	source.gi,
																	A2(
																		$elm$core$Maybe$map,
																		function (_v1) {
																			var src = _v1.a;
																			return src.gi;
																		},
																		model.mu));
																if (((_v0.a.$ === 1) && (!_v0.b.$)) && (_v0.b.a.$ === 1)) {
																	var _v2 = _v0.a;
																	var name1 = _v2.a;
																	var updated1 = _v2.c;
																	var _v3 = _v0.b.a;
																	var name2 = _v3.a;
																	var updated2 = _v3.c;
																	return A2(
																		$author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$localFileWarnings,
																		_Utils_Tuple2(name1, name2),
																		_Utils_Tuple2(updated1, updated2));
																} else {
																	return A2($elm$html$Html$div, _List_Nil, _List_Nil);
																}
															}(),
																A2(
																$author$project$Services$SqlSource$viewParsing,
																A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$SqlSourceMsg, wrap),
																model),
																$author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$viewSourceDiff(model)
															])),
														A3($author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$updateSourceButtons, sourceSet, close, model.g8)
													]);
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var $author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$sqlRemoteFileModal = F9(
	function (wrap, sourceSet, close, zone, now, titleId, source, fileUrl, model) {
		return _List_fromArray(
			[
				A2(
				$elm$html$Html$div,
				_List_fromArray(
					[
						$elm$html$Html$Attributes$class('max-w-3xl mx-6 mt-6')
					]),
				_List_fromArray(
					[
						A2(
						$elm$html$Html$div,
						_List_fromArray(
							[
								$author$project$Libs$Html$Attributes$css(
								_List_fromArray(
									[
										'mt-3',
										$author$project$Libs$Tailwind$sm(
										_List_fromArray(
											['mt-5']))
									]))
							]),
						_List_fromArray(
							[
								A2($author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$modalTitle, titleId, 'Refresh ' + (source.eS + ' source')),
								A2(
								$elm$html$Html$div,
								_List_fromArray(
									[
										$elm$html$Html$Attributes$class('mt-2')
									]),
								_List_fromArray(
									[
										A4($author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$remoteFileInfo, zone, now, fileUrl, source.kb)
									]))
							])),
						A2(
						$elm$html$Html$div,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$class('mt-3 flex justify-center')
							]),
						_List_fromArray(
							[
								A3(
								$author$project$Components$Atoms$Button$primary5,
								$author$project$Libs$Tailwind$primary,
								_List_fromArray(
									[
										$elm$html$Html$Events$onClick(
										A3(
											$elm$core$Basics$composeR,
											$author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$SqlSourceMsg,
											wrap,
											$author$project$Services$SqlSource$GetRemoteFile(fileUrl)))
									]),
								_List_fromArray(
									[
										$elm$html$Html$text('Fetch file again')
									]))
							])),
						A2(
						$author$project$Services$SqlSource$viewParsing,
						A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$SqlSourceMsg, wrap),
						model),
						$author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$viewSourceDiff(model)
					])),
				A3($author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$updateSourceButtons, sourceSet, close, model.g8)
			]);
	});
var $author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$userDefinedModal = F2(
	function (close, titleId) {
		return _List_fromArray(
			[
				A2(
				$elm$html$Html$div,
				_List_fromArray(
					[
						$elm$html$Html$Attributes$class('max-w-3xl mx-6 mt-6')
					]),
				_List_fromArray(
					[
						A2(
						$elm$html$Html$div,
						_List_fromArray(
							[
								$author$project$Libs$Html$Attributes$css(
								_List_fromArray(
									[
										'mt-3',
										$author$project$Libs$Tailwind$sm(
										_List_fromArray(
											['mt-5']))
									]))
							]),
						_List_fromArray(
							[
								A2($author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$modalTitle, titleId, 'This is a user source, it can\'t be refreshed!')
							])),
						A2(
						$elm$html$Html$p,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$class('mt-3')
							]),
						_List_fromArray(
							[
								$elm$html$Html$text('A user source is a source created by a user to add some information to the project.\n                      For example relations, tables, columns or documentation that are useful and not present in the sources.\n                      So it doesn\'t make sense to refresh it (not out of sync), just edit or delete it if needed.'),
								A2($elm$html$Html$br, _List_Nil, _List_Nil),
								$elm$html$Html$text('You should not see this, so if you came here normally, this is a bug. Please help us and '),
								A3(
								$author$project$Libs$Html$extLink,
								$author$project$Conf$constants.kw,
								_List_fromArray(
									[
										$elm$html$Html$Attributes$class('link')
									]),
								_List_fromArray(
									[
										$elm$html$Html$text('report it')
									])),
								$elm$html$Html$text('. What would be useful to fix it is what steps you did to get here.')
							]))
					])),
				A2(
				$elm$html$Html$div,
				_List_fromArray(
					[
						$elm$html$Html$Attributes$class('px-6 py-3 mt-3 flex items-center justify-between flex-row-reverse bg-gray-50 rounded-b-lg')
					]),
				_List_fromArray(
					[
						A2(
						$author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$primaryBtn,
						$elm$core$Maybe$Just(close),
						'Close')
					]))
			]);
	});
var $author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$view = F8(
	function (wrap, sourceSet, modalClose, noop, zone, now, opened, model) {
		var titleId = model.H + '-title';
		var close = modalClose(
			wrap($author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$Close));
		return A2(
			$author$project$Components$Molecules$Modal$modal,
			{H: model.H, bm: opened, dt: close, d$: titleId},
			A3(
				$author$project$Libs$Maybe$mapOrElse,
				function (source) {
					var _v0 = source.gi;
					switch (_v0.$) {
						case 0:
							var url = _v0.a;
							return A9($author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$databaseModal, wrap, sourceSet, close, zone, now, titleId, source, url, model.ca);
						case 1:
							var filename = _v0.a;
							var updatedAt = _v0.c;
							return $author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$sqlLocalFileModal(wrap)(sourceSet)(close)(noop)(zone)(now)(model.H + '-sql')(titleId)(source)(filename)(updatedAt)(model.cA);
						case 2:
							var url = _v0.a;
							return A9($author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$sqlRemoteFileModal, wrap, sourceSet, close, zone, now, titleId, source, url, model.cA);
						case 3:
							var filename = _v0.a;
							var updatedAt = _v0.c;
							return $author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$jsonLocalFileModal(wrap)(sourceSet)(close)(noop)(zone)(now)(model.H + '-json')(titleId)(source)(filename)(updatedAt)(model.cm);
						case 4:
							var url = _v0.a;
							return A9($author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$jsonRemoteFileModal, wrap, sourceSet, close, zone, now, titleId, source, url, model.cm);
						default:
							return A2($author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$userDefinedModal, close, titleId);
					}
				},
				A7($author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$newSourceModal, wrap, sourceSet, close, noop, model.H + '-new', titleId, model),
				model.fj));
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$Modals$view = F2(
	function (opened, model) {
		var titleId = model.H + '-title';
		return A2(
			$author$project$Components$Molecules$Modal$modal,
			{
				H: model.H,
				bm: opened,
				dt: $author$project$PagesComponents$Organization_$Project_$Models$ModalClose($author$project$PagesComponents$Organization_$Project_$Models$CustomModalClose),
				d$: titleId
			},
			_List_fromArray(
				[
					A2(
					model.cX,
					$author$project$PagesComponents$Organization_$Project_$Models$ModalClose($author$project$PagesComponents$Organization_$Project_$Models$CustomModalClose),
					titleId)
				]));
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$NewLayout$BodyMsg = function (a) {
	return {$: 1, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$NewLayout$Create = F2(
	function (a, b) {
		return {$: 2, a: a, b: b};
	});
var $author$project$Components$Slices$NewLayoutBody$UpdateLayoutName = $elm$core$Basics$identity;
var $author$project$Components$Slices$NewLayoutBody$view = F7(
	function (wrap, onCreate, onCancel, titleId, layouts, organization, model) {
		var inputId = model.H + '-input';
		var alreadyExists = A2(
			$elm$core$List$any,
			function (l) {
				return _Utils_eq(l, model.eS);
			},
			layouts);
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('max-w-2xl')
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$author$project$Libs$Html$Attributes$css(
							_List_fromArray(
								[
									'px-6 pt-6',
									$author$project$Libs$Tailwind$sm(
									_List_fromArray(
										['flex items-start']))
								]))
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$author$project$Libs$Html$Attributes$css(
									_List_fromArray(
										[
											'mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-primary-100',
											$author$project$Libs$Tailwind$sm(
											_List_fromArray(
												['mx-0 h-10 w-10']))
										]))
								]),
							_List_fromArray(
								[
									A2($author$project$Components$Atoms$Icon$outline, 201, 'text-primary-600')
								])),
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$author$project$Libs$Html$Attributes$css(
									_List_fromArray(
										[
											'mt-3 text-center',
											$author$project$Libs$Tailwind$sm(
											_List_fromArray(
												['mt-0 ml-4 text-left']))
										]))
								]),
							_List_fromArray(
								[
									A2(
									$elm$html$Html$h3,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$id(titleId),
											$elm$html$Html$Attributes$class('text-lg leading-6 font-medium text-gray-900')
										]),
									_List_fromArray(
										[
											$elm$html$Html$text(
											A3(
												$author$project$Libs$Maybe$mapOrElse,
												function (f) {
													return 'Duplicate layout \'' + (f + '\'');
												},
												'New empty layout',
												model.bK))
										])),
									A2(
									$elm$html$Html$div,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$class('mt-2')
										]),
									_List_fromArray(
										[
											A2(
											$elm$html$Html$div,
											_List_fromArray(
												[
													$elm$html$Html$Attributes$class('mt-1')
												]),
											_List_fromArray(
												[
													A2(
													$elm$html$Html$input,
													_List_fromArray(
														[
															$elm$html$Html$Attributes$type_('text'),
															$elm$html$Html$Attributes$name(inputId),
															$elm$html$Html$Attributes$id(inputId),
															$elm$html$Html$Attributes$placeholder('Layout name'),
															$elm$html$Html$Attributes$value(model.eS),
															$elm$html$Html$Events$onInput(
															A2($elm$core$Basics$composeR, $elm$core$Basics$identity, wrap)),
															$elm$html$Html$Attributes$autofocus(true),
															$author$project$Libs$Html$Attributes$css(
															_List_fromArray(
																[
																	'shadow-sm block w-full border-gray-300 rounded-md',
																	$author$project$Libs$Tailwind$focus(
																	_List_fromArray(
																		['ring-indigo-500 border-indigo-500'])),
																	$author$project$Libs$Tailwind$sm(
																	_List_fromArray(
																		['text-sm']))
																]))
														]),
													_List_Nil)
												])),
											alreadyExists ? A2(
											$elm$html$Html$p,
											_List_fromArray(
												[
													$elm$html$Html$Attributes$class('mt-2 text-sm text-red-600')
												]),
											_List_fromArray(
												[
													$elm$html$Html$text('Layout \'' + (model.eS + '\' already exists 😥'))
												])) : A2($elm$html$Html$p, _List_Nil, _List_Nil)
										]))
								]))
						])),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('px-6 py-3 mt-6 flex items-center flex-row-reverse bg-gray-50 rounded-b-lg')
						]),
					_List_fromArray(
						[
							A3(
							$author$project$Components$Atoms$Button$primary3,
							$author$project$Libs$Tailwind$primary,
							_List_fromArray(
								[
									$elm$html$Html$Events$onClick(
									onCreate(model.eS)),
									$elm$html$Html$Attributes$disabled(alreadyExists),
									$author$project$Libs$Html$Attributes$css(
									_List_fromArray(
										[
											'w-full text-base',
											$author$project$Libs$Tailwind$sm(
											_List_fromArray(
												['ml-3 w-auto text-sm']))
										]))
								]),
							_List_fromArray(
								[
									$elm$html$Html$text(
									A3(
										$author$project$Libs$Maybe$mapOrElse,
										function (f) {
											return 'Duplicate \'' + (f + '\'');
										},
										'Create layout',
										model.bK))
								])),
							A3(
							$author$project$Components$Atoms$Button$white3,
							$author$project$Libs$Tailwind$gray,
							_List_fromArray(
								[
									$elm$html$Html$Events$onClick(onCancel),
									$author$project$Libs$Html$Attributes$css(
									_List_fromArray(
										[
											'mt-3 w-full text-base',
											$author$project$Libs$Tailwind$sm(
											_List_fromArray(
												['mt-0 w-auto text-sm']))
										]))
								]),
							_List_fromArray(
								[
									$elm$html$Html$text('Cancel')
								]))
						]))
				]));
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$NewLayout$view = F6(
	function (wrap, modalClose, organization, layouts, opened, model) {
		var titleId = model.H + '-title';
		return A2(
			$author$project$Components$Molecules$Modal$modal,
			{
				H: model.H,
				bm: opened,
				dt: modalClose(
					wrap($author$project$PagesComponents$Organization_$Project_$Views$Modals$NewLayout$Cancel)),
				d$: titleId
			},
			_List_fromArray(
				[
					A7(
					$author$project$Components$Slices$NewLayoutBody$view,
					A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Views$Modals$NewLayout$BodyMsg, wrap),
					A2(
						$elm$core$Basics$composeR,
						$author$project$PagesComponents$Organization_$Project_$Views$Modals$NewLayout$Create(model.bK),
						A2($elm$core$Basics$composeR, wrap, modalClose)),
					modalClose(
						wrap($author$project$PagesComponents$Organization_$Project_$Views$Modals$NewLayout$Cancel)),
					titleId,
					layouts,
					organization,
					model)
				]));
	});
var $author$project$Components$Molecules$Modal$confirm = F2(
	function (model, isOpen) {
		var titleId = model.H + '-title';
		return A2(
			$author$project$Components$Molecules$Modal$modal,
			{H: model.H, bm: isOpen, dt: model.br, d$: titleId},
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$author$project$Libs$Html$Attributes$css(
							_List_fromArray(
								[
									'px-6 pt-6',
									$author$project$Libs$Tailwind$sm(
									_List_fromArray(
										['flex items-start']))
								]))
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$author$project$Libs$Html$Attributes$css(
									_List_fromArray(
										[
											'mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full',
											$author$project$Libs$Tailwind$bg_100(model.A),
											$author$project$Libs$Tailwind$sm(
											_List_fromArray(
												['mx-0 h-10 w-10']))
										]))
								]),
							_List_fromArray(
								[
									A2(
									$author$project$Components$Atoms$Icon$outline,
									model.aa,
									$author$project$Libs$Tailwind$text_600(model.A))
								])),
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$author$project$Libs$Html$Attributes$css(
									_List_fromArray(
										[
											'mt-3 text-center',
											$author$project$Libs$Tailwind$sm(
											_List_fromArray(
												['mt-0 ml-4 text-left']))
										]))
								]),
							_List_fromArray(
								[
									A2(
									$elm$html$Html$h3,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$class('text-lg leading-6 font-medium text-gray-900'),
											$elm$html$Html$Attributes$id(titleId)
										]),
									_List_fromArray(
										[
											$elm$html$Html$text(model.a4)
										])),
									A2(
									$elm$html$Html$div,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$class('mt-2')
										]),
									_List_fromArray(
										[
											A2(
											$elm$html$Html$p,
											_List_fromArray(
												[
													$elm$html$Html$Attributes$class('text-sm text-gray-500')
												]),
											_List_fromArray(
												[model.cq]))
										]))
								]))
						])),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$author$project$Libs$Html$Attributes$css(
							_List_fromArray(
								[
									'px-6 py-3 mt-6 bg-gray-50 rounded-b-lg',
									$author$project$Libs$Tailwind$sm(
									_List_fromArray(
										['flex items-center flex-row-reverse']))
								]))
						]),
					_List_fromArray(
						[
							A3(
							$author$project$Components$Atoms$Button$primary3,
							model.A,
							_List_fromArray(
								[
									$elm$html$Html$Events$onClick(model.ct),
									$elm$html$Html$Attributes$autofocus(true),
									$author$project$Libs$Html$Attributes$css(
									_List_fromArray(
										[
											'w-full text-base',
											$author$project$Libs$Tailwind$sm(
											_List_fromArray(
												['ml-3 w-auto text-sm']))
										]))
								]),
							_List_fromArray(
								[
									$elm$html$Html$text(model.b8)
								])),
							A3(
							$author$project$Components$Atoms$Button$white3,
							$author$project$Libs$Tailwind$gray,
							_List_fromArray(
								[
									$elm$html$Html$Events$onClick(model.br),
									$author$project$Libs$Html$Attributes$css(
									_List_fromArray(
										[
											'mt-3 w-full text-base',
											$author$project$Libs$Tailwind$sm(
											_List_fromArray(
												['mt-0 w-auto text-sm']))
										]))
								]),
							_List_fromArray(
								[
									$elm$html$Html$text(model.b6)
								]))
						]))
				]));
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$Modals$viewConfirm = F2(
	function (opened, model) {
		return A2(
			$author$project$Components$Molecules$Modal$confirm,
			{
				b6: model.cX.b6,
				A: model.cX.A,
				b8: model.cX.b8,
				aa: model.cX.aa,
				H: model.H,
				cq: model.cX.cq,
				br: $author$project$PagesComponents$Organization_$Project_$Models$ModalClose(
					A2($author$project$PagesComponents$Organization_$Project_$Models$ConfirmAnswer, false, $elm$core$Platform$Cmd$none)),
				ct: $author$project$PagesComponents$Organization_$Project_$Models$ModalClose(
					A2($author$project$PagesComponents$Organization_$Project_$Models$ConfirmAnswer, true, model.cX.ct)),
				a4: model.cX.a4
			},
			opened);
	});
var $author$project$PagesComponents$Organization_$Project_$Models$NotesMsg$NEdit = function (a) {
	return {$: 1, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$EditNotes$refAsName = F2(
	function (erd, ref) {
		switch (ref.$) {
			case 2:
				var v = ref.a;
				return $elm$html$Html$text('invalid ref ' + v);
			case 0:
				var table = ref.a;
				return A2(
					$elm$core$Maybe$withDefault,
					$elm$html$Html$text(
						'unknown table ' + A2($author$project$Models$Project$TableId$show, erd.dM.cb, table)),
					A2(
						$elm$core$Maybe$map,
						function (_v1) {
							return A2(
								$elm$html$Html$span,
								_List_Nil,
								_List_fromArray(
									[
										A3(
										$author$project$Components$Atoms$Badge$basicFlex,
										$author$project$Libs$Tailwind$gray,
										_List_Nil,
										_List_fromArray(
											[
												$elm$html$Html$text(
												A2($author$project$Models$Project$TableId$show, erd.dM.cb, table))
											])),
										$elm$html$Html$text(' table')
									]));
						},
						A2($elm$core$Dict$get, table, erd.oM)));
			default:
				var column = ref.a;
				return A2(
					$elm$core$Maybe$withDefault,
					$elm$html$Html$text(
						'unknown column ' + A2($author$project$Models$Project$ColumnRef$show, erd.dM.cb, column)),
					A2(
						$elm$core$Maybe$map,
						function (_v2) {
							return A2(
								$elm$html$Html$span,
								_List_Nil,
								_List_fromArray(
									[
										A3(
										$author$project$Components$Atoms$Badge$basicFlex,
										$author$project$Libs$Tailwind$gray,
										_List_Nil,
										_List_fromArray(
											[
												$elm$html$Html$text(
												A2($author$project$Models$Project$ColumnRef$show, erd.dM.cb, column))
											])),
										$elm$html$Html$text(' column')
									]));
						},
						A2(
							$elm$core$Maybe$andThen,
							$author$project$PagesComponents$Organization_$Project_$Models$ErdTable$getColumn(column.bH),
							A2($elm$core$Dict$get, column.aq, erd.oM))));
		}
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$EditNotes$viewEditNotes = F3(
	function (opened, erd, model) {
		var titleId = model.H + '-title';
		var inputId = model.H + '-input';
		return A2(
			$author$project$Components$Molecules$Modal$modal,
			{
				H: model.H,
				bm: opened,
				dt: $author$project$PagesComponents$Organization_$Project_$Models$ModalClose(
					$author$project$PagesComponents$Organization_$Project_$Models$NotesMsg($author$project$PagesComponents$Organization_$Project_$Models$NotesMsg$NCancel)),
				d$: titleId
			},
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('m-4 relative')
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$label,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$for(inputId),
									$elm$html$Html$Attributes$class('block text-sm font-medium text-gray-700')
								]),
							_List_fromArray(
								[
									$elm$html$Html$text('Notes for '),
									A2($author$project$PagesComponents$Organization_$Project_$Views$Modals$EditNotes$refAsName, erd, model.dG)
								])),
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('mt-2 border border-gray-300 rounded-lg shadow-sm overflow-hidden focus-within:border-indigo-500 focus-within:ring-1 focus-within:ring-indigo-500')
								]),
							_List_fromArray(
								[
									A2(
									$elm$html$Html$textarea,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$rows(4),
											$elm$html$Html$Attributes$name(inputId),
											$elm$html$Html$Attributes$id(inputId),
											$elm$html$Html$Attributes$value(model.bP),
											$elm$html$Html$Events$onInput(
											A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Models$NotesMsg$NEdit, $author$project$PagesComponents$Organization_$Project_$Models$NotesMsg)),
											$elm$html$Html$Attributes$autofocus(true),
											$elm$html$Html$Attributes$placeholder('Write your notes...'),
											$elm$html$Html$Attributes$class('block w-full py-3 border-0 resize-none focus:ring-0 sm:text-sm')
										]),
									_List_Nil),
									A2(
									$elm$html$Html$div,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$class('py-2'),
											$author$project$Libs$Html$Attributes$ariaHidden(true)
										]),
									_List_fromArray(
										[
											A2(
											$elm$html$Html$div,
											_List_fromArray(
												[
													$elm$html$Html$Attributes$class('py-px')
												]),
											_List_fromArray(
												[
													A2(
													$elm$html$Html$div,
													_List_fromArray(
														[
															$elm$html$Html$Attributes$class('h-9')
														]),
													_List_Nil)
												]))
										]))
								])),
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('absolute bottom-0 inset-x-0 pl-3 pr-2 py-2 flex justify-end')
								]),
							_List_fromArray(
								[
									A2(
									$elm$html$Html$div,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$class('flex flex-shrink-0 flex-row-reverse')
										]),
									_List_fromArray(
										[
											A3(
											$author$project$Components$Atoms$Button$primary3,
											$author$project$Libs$Tailwind$primary,
											_List_fromArray(
												[
													$elm$html$Html$Events$onClick(
													$author$project$PagesComponents$Organization_$Project_$Models$ModalClose(
														$author$project$PagesComponents$Organization_$Project_$Models$NotesMsg(
															A3($author$project$PagesComponents$Organization_$Project_$Models$NotesMsg$NSave, model.dG, model.l8, model.bP)))),
													$author$project$Libs$Html$Attributes$css(
													_List_fromArray(
														[
															'w-full text-base',
															$author$project$Libs$Tailwind$sm(
															_List_fromArray(
																['ml-2 w-auto text-sm']))
														]))
												]),
											_List_fromArray(
												[
													$elm$html$Html$text('Save')
												])),
											A3(
											$author$project$Components$Atoms$Button$white3,
											$author$project$Libs$Tailwind$gray,
											_List_fromArray(
												[
													$elm$html$Html$Events$onClick(
													$author$project$PagesComponents$Organization_$Project_$Models$ModalClose(
														$author$project$PagesComponents$Organization_$Project_$Models$NotesMsg($author$project$PagesComponents$Organization_$Project_$Models$NotesMsg$NCancel))),
													$author$project$Libs$Html$Attributes$css(
													_List_fromArray(
														[
															'mt-3 w-full text-base',
															$author$project$Libs$Tailwind$sm(
															_List_fromArray(
																['mt-0 w-auto text-sm']))
														]))
												]),
											_List_fromArray(
												[
													$elm$html$Html$text('Close')
												]))
										]))
								]))
						]))
				]));
	});
var $author$project$PagesComponents$Organization_$Project_$Models$FPSearch = {$: 4};
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$FindPath$existingTableId = F3(
	function (defaultSchema, tables, input) {
		return A2(
			$elm$core$Maybe$map,
			function ($) {
				return $.H;
			},
			A2(
				$author$project$Libs$Maybe$orElse,
				A2(
					$elm$core$Dict$get,
					A2($author$project$Models$Project$TableId$parseWith, defaultSchema, input),
					tables),
				A2(
					$elm$core$Dict$get,
					$author$project$Models$Project$TableId$parse(input),
					tables)));
	});
var $author$project$Components$Atoms$Icon$loading = function (styles) {
	return A2(
		$elm$svg$Svg$svg,
		_List_fromArray(
			[
				$elm$svg$Svg$Attributes$viewBox('0 0 24 24'),
				$elm$svg$Svg$Attributes$fill('none'),
				$author$project$Libs$Html$Attributes$ariaHidden(true),
				$author$project$Libs$Svg$Attributes$css(
				_List_fromArray(
					['flex-shrink-0 h-5 w-5', styles]))
			]),
		_List_fromArray(
			[
				A2(
				$elm$svg$Svg$circle,
				_List_fromArray(
					[
						$author$project$Libs$Svg$Attributes$css(
						_List_fromArray(
							['opacity-25'])),
						$elm$svg$Svg$Attributes$stroke('currentColor'),
						$elm$svg$Svg$Attributes$strokeWidth('4'),
						$elm$svg$Svg$Attributes$cx('12'),
						$elm$svg$Svg$Attributes$cy('12'),
						$elm$svg$Svg$Attributes$r('10')
					]),
				_List_Nil),
				A2(
				$elm$svg$Svg$path,
				_List_fromArray(
					[
						$author$project$Libs$Svg$Attributes$css(
						_List_fromArray(
							['opacity-75'])),
						$elm$svg$Svg$Attributes$fill('currentColor'),
						$elm$svg$Svg$Attributes$d('M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z')
					]),
				_List_Nil)
			]));
};
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$FindPath$viewFooter = F4(
	function (defaultSchema, tables, settings, model) {
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('px-6 py-3 mt-3 flex items-center justify-between flex-row-reverse bg-gray-50 rounded-b-lg')
				]),
			function () {
				var _v0 = _Utils_Tuple3(
					A3($author$project$PagesComponents$Organization_$Project_$Views$Modals$FindPath$existingTableId, defaultSchema, tables, model.bK),
					A3($author$project$PagesComponents$Organization_$Project_$Views$Modals$FindPath$existingTableId, defaultSchema, tables, model.oT),
					model.bU);
				if ((!_v0.a.$) && (!_v0.b.$)) {
					switch (_v0.c.$) {
						case 2:
							var from = _v0.a.a;
							var to = _v0.b.a;
							var res = _v0.c.a;
							return (_Utils_eq(from, res.bK) && (_Utils_eq(to, res.oT) && _Utils_eq(settings, res.dM))) ? _List_fromArray(
								[
									A3(
									$author$project$Components$Atoms$Button$primary3,
									$author$project$Libs$Tailwind$primary,
									_List_fromArray(
										[
											$elm$html$Html$Events$onClick(
											$author$project$PagesComponents$Organization_$Project_$Models$FindPathMsg($author$project$PagesComponents$Organization_$Project_$Models$FPClose))
										]),
									_List_fromArray(
										[
											$elm$html$Html$text('Done')
										]))
								]) : _List_fromArray(
								[
									A3(
									$author$project$Components$Atoms$Button$primary3,
									$author$project$Libs$Tailwind$primary,
									_List_fromArray(
										[
											$elm$html$Html$Events$onClick(
											$author$project$PagesComponents$Organization_$Project_$Models$FindPathMsg($author$project$PagesComponents$Organization_$Project_$Models$FPSearch))
										]),
									_List_fromArray(
										[
											$elm$html$Html$text('Search')
										])),
									A2(
									$elm$html$Html$span,
									_List_Nil,
									_List_fromArray(
										[
											$elm$html$Html$text('Results are out of sync with search 🤯')
										]))
								]);
						case 1:
							var _v1 = _v0.c;
							return _List_fromArray(
								[
									A3(
									$author$project$Components$Atoms$Button$primary3,
									$author$project$Libs$Tailwind$primary,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$disabled(true)
										]),
									_List_fromArray(
										[
											$author$project$Components$Atoms$Icon$loading('-ml-1 mr-2 animate-spin'),
											$elm$html$Html$text('Searching...')
										]))
								]);
						default:
							var _v2 = _v0.c;
							return _List_fromArray(
								[
									A3(
									$author$project$Components$Atoms$Button$primary3,
									$author$project$Libs$Tailwind$primary,
									_List_fromArray(
										[
											$elm$html$Html$Events$onClick(
											$author$project$PagesComponents$Organization_$Project_$Models$FindPathMsg($author$project$PagesComponents$Organization_$Project_$Models$FPSearch))
										]),
									_List_fromArray(
										[
											$elm$html$Html$text('Search')
										]))
								]);
					}
				} else {
					return _List_fromArray(
						[
							A3(
							$author$project$Components$Atoms$Button$primary3,
							$author$project$Libs$Tailwind$primary,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$disabled(true)
								]),
							_List_fromArray(
								[
									$elm$html$Html$text('Search')
								]))
						]);
				}
			}());
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$FindPath$viewHeader = function (titleId) {
	return A2(
		$elm$html$Html$div,
		_List_fromArray(
			[
				$author$project$Libs$Html$Attributes$css(
				_List_fromArray(
					[
						'pt-6 px-6',
						$author$project$Libs$Tailwind$sm(
						_List_fromArray(
							['flex items-start']))
					]))
			]),
		_List_fromArray(
			[
				A2(
				$elm$html$Html$div,
				_List_fromArray(
					[
						$author$project$Libs$Html$Attributes$css(
						_List_fromArray(
							[
								'mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-primary-100',
								$author$project$Libs$Tailwind$sm(
								_List_fromArray(
									['mx-0 h-10 w-10']))
							]))
					]),
				_List_fromArray(
					[
						A2($author$project$Components$Atoms$Icon$outline, 127, 'text-primary-600')
					])),
				A2(
				$elm$html$Html$div,
				_List_fromArray(
					[
						$author$project$Libs$Html$Attributes$css(
						_List_fromArray(
							[
								'mt-3 text-center',
								$author$project$Libs$Tailwind$sm(
								_List_fromArray(
									['mt-0 ml-4 text-left']))
							]))
					]),
				_List_fromArray(
					[
						A2(
						$elm$html$Html$h3,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$id(titleId),
								$elm$html$Html$Attributes$class('text-lg leading-6 font-medium text-gray-900')
							]),
						_List_fromArray(
							[
								$elm$html$Html$text('Find a path between tables')
							])),
						A2(
						$elm$html$Html$p,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$class('text-sm text-gray-500')
							]),
						_List_fromArray(
							[
								$elm$html$Html$text('Use relations to find a path between two tables. Useful when you don\'t know how tables are connected but you want to query their data together.')
							]))
					]))
			]));
};
var $author$project$Libs$List$appendIf = F3(
	function (predicate, item, list) {
		return predicate ? _Utils_ap(
			list,
			_List_fromArray(
				[item])) : list;
	});
var $author$project$PagesComponents$Organization_$Project_$Models$FPToggleResult = function (a) {
	return {$: 6, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$FindPath$buildQuery = F3(
	function (defaultSchema, table, joins) {
		return 'SELECT *' + (('\nFROM ' + A2($author$project$Models$Project$TableId$show, defaultSchema, table)) + A2(
			$elm$core$String$join,
			'',
			A2(
				$elm$core$List$map,
				function (s) {
					var _v0 = s.bg;
					if (!_v0) {
						return '\n  JOIN ' + (A2($author$project$Models$Project$TableId$show, defaultSchema, s.n0.dG.aq) + (' ON ' + (A2($author$project$Models$Project$ColumnRef$show, defaultSchema, s.n0.dG) + (' = ' + A2($author$project$Models$Project$ColumnRef$show, defaultSchema, s.n0.ht)))));
					} else {
						return '\n  JOIN ' + (A2($author$project$Models$Project$TableId$show, defaultSchema, s.n0.ht.aq) + (' ON ' + (A2($author$project$Models$Project$ColumnRef$show, defaultSchema, s.n0.ht) + (' = ' + A2($author$project$Models$Project$ColumnRef$show, defaultSchema, s.n0.dG)))));
					}
				},
				$author$project$Libs$Nel$toList(joins))));
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$FindPath$viewPathStepDetails = F4(
	function (defaultSchema, dir, from, to) {
		return _List_fromArray(
			[
				$elm$html$Html$text(' > '),
				A2(
				$author$project$Components$Molecules$Tooltip$t,
				A2($author$project$Models$Project$ColumnRef$show, defaultSchema, from) + (' ' + (dir + (' ' + A2($author$project$Models$Project$ColumnRef$show, defaultSchema, to)))),
				A2(
					$elm$html$Html$span,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('underline')
						]),
					_List_fromArray(
						[
							$elm$html$Html$text(
							A2($author$project$Models$Project$TableId$show, defaultSchema, to.aq))
						])))
			]);
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$FindPath$viewPathStep = F2(
	function (defaultSchema, s) {
		var _v0 = s.bg;
		if (!_v0) {
			return A4($author$project$PagesComponents$Organization_$Project_$Views$Modals$FindPath$viewPathStepDetails, defaultSchema, '→', s.n0.ht, s.n0.dG);
		} else {
			return A4($author$project$PagesComponents$Organization_$Project_$Views$Modals$FindPath$viewPathStepDetails, defaultSchema, '←', s.n0.dG, s.n0.ht);
		}
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$FindPath$viewPath = F5(
	function (defaultSchema, opened, from, i, path) {
		return A2(
			$elm$html$Html$div,
			_List_Nil,
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Events$onClick(
							$author$project$PagesComponents$Organization_$Project_$Models$FindPathMsg(
								$author$project$PagesComponents$Organization_$Project_$Models$FPToggleResult(i))),
							$author$project$Libs$Html$Attributes$css(
							_List_fromArray(
								[
									'px-6 py-4 cursor-pointer',
									A3(
									$author$project$Libs$Bool$cond,
									_Utils_eq(
										opened,
										$elm$core$Maybe$Just(i)),
									'bg-primary-100 text-primary-700',
									'')
								]))
						]),
					A2(
						$elm$core$List$cons,
						$elm$html$Html$text(
							$elm$core$String$fromInt(i + 1) + '. '),
						A2(
							$elm$core$List$cons,
							A2(
								$elm$html$Html$span,
								_List_Nil,
								_List_fromArray(
									[
										$elm$html$Html$text(
										A2($author$project$Models$Project$TableId$show, defaultSchema, from))
									])),
							A2(
								$elm$core$List$concatMap,
								$author$project$PagesComponents$Organization_$Project_$Views$Modals$FindPath$viewPathStep(defaultSchema),
								$author$project$Libs$Nel$toList(path))))),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$author$project$Libs$Html$Attributes$css(
							_List_fromArray(
								[
									'px-6 py-3 border-t border-gray-300',
									'text-primary-700',
									A3(
									$author$project$Libs$Bool$cond,
									!_Utils_eq(
										opened,
										$elm$core$Maybe$Just(i)),
									'hidden',
									'')
								]))
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$pre,
							_List_Nil,
							_List_fromArray(
								[
									$elm$html$Html$text(
									A3($author$project$PagesComponents$Organization_$Project_$Views$Modals$FindPath$buildQuery, defaultSchema, from, path))
								]))
						]))
				]));
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$FindPath$viewPaths = F3(
	function (defaultSchema, tables, model) {
		var _v0 = _Utils_Tuple3(
			A3($author$project$PagesComponents$Organization_$Project_$Views$Modals$FindPath$existingTableId, defaultSchema, tables, model.bK),
			A3($author$project$PagesComponents$Organization_$Project_$Views$Modals$FindPath$existingTableId, defaultSchema, tables, model.oT),
			model.bU);
		if (((!_v0.a.$) && (!_v0.b.$)) && (_v0.c.$ === 2)) {
			var from = _v0.a.a;
			var to = _v0.b.a;
			var result = _v0.c.a;
			return $elm$core$List$isEmpty(result.nD) ? A2(
				$elm$html$Html$div,
				_List_fromArray(
					[
						$elm$html$Html$Attributes$class('px-6 mt-3 text-center')
					]),
				_List_fromArray(
					[
						A2(
						$elm$html$Html$h2,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$class('mt-2 text-lg font-medium text-gray-900')
							]),
						_List_fromArray(
							[
								$elm$html$Html$text('No path found')
							])),
						A2(
						$elm$html$Html$img,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$src(
								$author$project$Services$Backend$resourceUrl('/assets/images/closed-door.jpg')),
								$elm$html$Html$Attributes$alt('Closed door'),
								$elm$html$Html$Attributes$class('h-96 inline-block align-middle')
							]),
						_List_Nil)
					])) : A2(
				$elm$html$Html$div,
				_List_fromArray(
					[
						$elm$html$Html$Attributes$class('px-6 mt-3 overflow-y-auto')
					]),
				_List_fromArray(
					[
						A2(
						$elm$html$Html$div,
						_List_Nil,
						A3(
							$author$project$Libs$List$appendIf,
							$elm$core$List$length(result.nD) > 100,
							A2(
								$elm$html$Html$small,
								_List_fromArray(
									[
										$elm$html$Html$Attributes$class('text-gray-500')
									]),
								_List_fromArray(
									[
										$elm$html$Html$text('Too much results ? Check \'Search settings\' above to ignore some table or columns')
									])),
							_List_fromArray(
								[
									$elm$html$Html$text(
									'Found ' + ($elm$core$String$fromInt(
										$elm$core$List$length(result.nD)) + ' paths between tables ')),
									$author$project$Libs$Html$bText(
									A2($author$project$Models$Project$TableId$show, defaultSchema, from)),
									$elm$html$Html$text(' and '),
									$author$project$Libs$Html$bText(
									A2($author$project$Models$Project$TableId$show, defaultSchema, to)),
									$elm$html$Html$text(':'),
									A2($elm$html$Html$br, _List_Nil, _List_Nil)
								]))),
						A2(
						$elm$html$Html$div,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$class('mt-3 border border-gray-300 rounded-md shadow-sm divide-y divide-gray-300')
							]),
						A2(
							$elm$core$List$indexedMap,
							A3($author$project$PagesComponents$Organization_$Project_$Views$Modals$FindPath$viewPath, defaultSchema, result.dy, from),
							A2($elm$core$List$sortBy, $author$project$Libs$Nel$length, result.nD))),
						A2(
						$elm$html$Html$small,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$class('text-gray-500')
							]),
						_List_fromArray(
							[
								$elm$html$Html$text('Not enough results ? Check \'Search settings\' above and increase max length of path or remove some ignored columns...')
							])),
						A2(
						$elm$html$Html$div,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$class('mt-3')
							]),
						_List_Nil)
					]));
		} else {
			return A2($elm$html$Html$div, _List_Nil, _List_Nil);
		}
	});
var $author$project$PagesComponents$Organization_$Project_$Models$FPUpdateFrom = function (a) {
	return {$: 2, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Models$FPUpdateTo = function (a) {
	return {$: 3, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$FindPath$viewInputComboboxes = F5(
	function (openedDropdown, fieldId, selectedValue, buildMsg, tables) {
		var optionsField = fieldId + '-options';
		var lValue = $elm$core$String$toLower(selectedValue);
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('relative mt-1')
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$input,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$type_('text'),
							$author$project$Libs$Html$Attributes$role('combobox'),
							$elm$html$Html$Attributes$id(fieldId),
							$elm$html$Html$Attributes$tabindex(1),
							$elm$html$Html$Attributes$value(selectedValue),
							$elm$html$Html$Events$onFocus(
							$author$project$PagesComponents$Organization_$Project_$Models$DropdownOpen(fieldId)),
							$elm$html$Html$Events$onInput(buildMsg),
							$elm$html$Html$Attributes$placeholder('Choose a table'),
							$author$project$Libs$Html$Attributes$ariaControls(optionsField),
							$author$project$Libs$Html$Attributes$ariaExpanded(false),
							$elm$html$Html$Attributes$class('w-full rounded-md border border-gray-300 bg-white py-2 pl-3 pr-12 shadow-sm sm:text-sm focus:border-indigo-500 focus:outline-none focus:ring-1 focus:ring-indigo-500')
						]),
					_List_Nil),
					_Utils_eq(openedDropdown, fieldId) ? A2(
					$elm$html$Html$ul,
					_List_fromArray(
						[
							$author$project$Libs$Html$Attributes$role('listbox'),
							$elm$html$Html$Attributes$id(optionsField),
							$elm$html$Html$Attributes$class('absolute z-10 mt-1 max-h-60 w-full overflow-auto rounded-md bg-white py-1 text-base shadow-lg ring-1 ring-black ring-opacity-5 sm:text-sm focus:outline-none')
						]),
					A2(
						$elm$core$List$map,
						function (table) {
							return A2(
								$elm$html$Html$li,
								_List_fromArray(
									[
										$author$project$Libs$Html$Attributes$role('option'),
										$elm$html$Html$Events$onClick(
										buildMsg(table.cn)),
										$elm$html$Html$Attributes$tabindex(-1),
										$elm$html$Html$Attributes$class('group relative cursor-pointer select-none py-2 pl-3 pr-9 text-gray-900 hover:text-white hover:bg-primary-600')
									]),
								_Utils_eq(table.cn, selectedValue) ? _List_fromArray(
									[
										A2(
										$elm$html$Html$span,
										_List_fromArray(
											[
												$elm$html$Html$Attributes$class('block truncate font-semibold')
											]),
										_List_fromArray(
											[
												$elm$html$Html$text(table.cn)
											])),
										A2(
										$elm$html$Html$span,
										_List_fromArray(
											[
												$elm$html$Html$Attributes$class('absolute inset-y-0 right-0 flex items-center pr-4 text-indigo-600 group-hover:text-white')
											]),
										_List_fromArray(
											[
												A2($author$project$Components$Atoms$Icon$solid, 42, '')
											]))
									]) : _List_fromArray(
									[
										A2(
										$elm$html$Html$span,
										_List_fromArray(
											[
												$elm$html$Html$Attributes$class('block truncate')
											]),
										_List_fromArray(
											[
												$elm$html$Html$text(table.cn)
											])),
										A2($elm$html$Html$span, _List_Nil, _List_Nil)
									]));
						},
						A2(
							$elm$core$List$filter,
							function (t) {
								return A2(
									$elm$core$String$contains,
									lValue,
									$elm$core$String$toLower(t.cn));
							},
							$elm$core$Dict$values(tables)))) : A2($elm$html$Html$div, _List_Nil, _List_Nil)
				]));
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$FindPath$viewSelectCard = F7(
	function (openedDropdown, fieldId, title, description, selectedValue, buildMsg, tables) {
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$author$project$Libs$Html$Attributes$css(
					_List_fromArray(
						[
							'flex-grow p-3 border border-gray-300 rounded-md shadow-sm',
							$author$project$Libs$Tailwind$sm(
							_List_fromArray(
								['col-span-3']))
						]))
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$label,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$for(fieldId),
							$elm$html$Html$Attributes$class('block text-sm font-medium text-gray-700')
						]),
					_List_fromArray(
						[
							$elm$html$Html$text(title)
						])),
					A5($author$project$PagesComponents$Organization_$Project_$Views$Modals$FindPath$viewInputComboboxes, openedDropdown, fieldId, selectedValue, buildMsg, tables),
					A2(
					$elm$html$Html$p,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('mt-1 text-sm text-gray-500')
						]),
					_List_fromArray(
						[
							$elm$html$Html$text(description)
						]))
				]));
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$FindPath$viewSearchForm = F5(
	function (modalId, openedDropdown, tables, from, to) {
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('px-6 mt-3 flex space-x-3')
				]),
			_List_fromArray(
				[
					A7(
					$author$project$PagesComponents$Organization_$Project_$Views$Modals$FindPath$viewSelectCard,
					openedDropdown,
					modalId + '-from',
					'From',
					'Starting table for the path',
					from,
					A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Models$FPUpdateFrom, $author$project$PagesComponents$Organization_$Project_$Models$FindPathMsg),
					tables),
					A7(
					$author$project$PagesComponents$Organization_$Project_$Views$Modals$FindPath$viewSelectCard,
					openedDropdown,
					modalId + '-to',
					'To',
					'Table you want to go to',
					to,
					A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Models$FPUpdateTo, $author$project$PagesComponents$Organization_$Project_$Models$FindPathMsg),
					tables)
				]));
	});
var $author$project$PagesComponents$Organization_$Project_$Models$FPSettingsUpdate = function (a) {
	return {$: 7, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Models$FPToggleSettings = {$: 1};
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$FindPath$viewSettingsInput = F7(
	function (fieldId, fieldType, fieldLabel, fieldPlaceholder, fieldHelp, fieldValue, msg) {
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$author$project$Libs$Html$Attributes$css(
					_List_fromArray(
						[
							$author$project$Libs$Tailwind$sm(
							_List_fromArray(
								['grid grid-cols-4 gap-3 items-start mt-3']))
						]))
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$label,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$for(fieldId),
							$author$project$Libs$Html$Attributes$css(
							_List_fromArray(
								[
									'block text-sm font-medium text-gray-700',
									$author$project$Libs$Tailwind$sm(
									_List_fromArray(
										['mt-px pt-2']))
								]))
						]),
					_List_fromArray(
						[
							$elm$html$Html$text(fieldLabel)
						])),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$author$project$Libs$Html$Attributes$css(
							_List_fromArray(
								[
									'mt-1',
									$author$project$Libs$Tailwind$sm(
									_List_fromArray(
										['mt-0 col-span-3']))
								]))
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$input,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$type_(fieldType),
									$elm$html$Html$Attributes$id(fieldId),
									$elm$html$Html$Attributes$value(fieldValue),
									$elm$html$Html$Events$onInput(msg),
									$elm$html$Html$Attributes$placeholder(fieldPlaceholder),
									$author$project$Libs$Html$Attributes$ariaDescribedby(fieldId + '-help'),
									$author$project$Libs$Html$Attributes$css(
									_List_fromArray(
										[
											'w-full border-gray-300 rounded-md shadow-sm',
											$author$project$Libs$Tailwind$focus(
											_List_fromArray(
												['ring-indigo-500 border-indigo-500'])),
											$author$project$Libs$Tailwind$sm(
											_List_fromArray(
												['text-sm']))
										]))
								]),
							_List_Nil),
							A2(
							$elm$html$Html$p,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$id(fieldId + '-help'),
									$elm$html$Html$Attributes$class('text-sm text-gray-500')
								]),
							_List_fromArray(
								[
									$elm$html$Html$text(fieldHelp)
								]))
						]))
				]));
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$FindPath$viewSettings = F3(
	function (modalId, isOpen, settings) {
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('px-6 mt-3')
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$button,
					_List_fromArray(
						[
							$elm$html$Html$Events$onClick(
							$author$project$PagesComponents$Organization_$Project_$Models$FindPathMsg($author$project$PagesComponents$Organization_$Project_$Models$FPToggleSettings)),
							$author$project$Libs$Html$Attributes$css(
							_List_fromArray(
								[
									'link',
									$author$project$Libs$Tailwind$focus(
									_List_fromArray(
										['outline-none']))
								]))
						]),
					_List_fromArray(
						[
							$elm$html$Html$text('Search settings')
						])),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$author$project$Libs$Html$Attributes$css(
							_List_fromArray(
								[
									'p-3 border border-gray-300 bg-gray-50 rounded-md shadow-sm',
									A3($author$project$Libs$Bool$cond, isOpen, '', 'hidden')
								]))
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$p,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('mt-1 text-sm text-gray-500')
								]),
							_List_fromArray(
								[
									$elm$html$Html$text('Finding all possible paths in a big graph with a lot of connections can take a long time.\n                          Use the settings below to limit your search and keep the search correct.')
								])),
							A7(
							$author$project$PagesComponents$Organization_$Project_$Views$Modals$FindPath$viewSettingsInput,
							modalId + '-settings-ignored-tables',
							'text',
							'Ignored tables',
							'ex: users, accounts...',
							'Some columns does not have meaningful links so ignore them for better results.',
							settings.eD,
							function (v) {
								return $author$project$PagesComponents$Organization_$Project_$Models$FindPathMsg(
									$author$project$PagesComponents$Organization_$Project_$Models$FPSettingsUpdate(
										_Utils_update(
											settings,
											{eD: v})));
							}),
							A7(
							$author$project$PagesComponents$Organization_$Project_$Views$Modals$FindPath$viewSettingsInput,
							modalId + '-settings-ignored-columns',
							'text',
							'Ignored columns',
							'ex: created_by, updated_by, owner...',
							'Some tables are big hubs which leads to bad results and performance, ignore them.',
							settings.eC,
							function (v) {
								return $author$project$PagesComponents$Organization_$Project_$Models$FindPathMsg(
									$author$project$PagesComponents$Organization_$Project_$Models$FPSettingsUpdate(
										_Utils_update(
											settings,
											{eC: v})));
							}),
							A7(
							$author$project$PagesComponents$Organization_$Project_$Views$Modals$FindPath$viewSettingsInput,
							modalId + '-settings-path-max-length',
							'number',
							'Max path length',
							'ex: 3',
							'Limit paths in length to limit complexity and performance.',
							$elm$core$String$fromInt(settings.eN),
							function (v) {
								return $author$project$PagesComponents$Organization_$Project_$Models$FindPathMsg(
									$author$project$PagesComponents$Organization_$Project_$Models$FPSettingsUpdate(
										_Utils_update(
											settings,
											{
												eN: A2(
													$elm$core$Maybe$withDefault,
													$author$project$Models$Project$FindPathSettings$init.eN,
													$elm$core$String$toInt(v))
											})));
							})
						]))
				]));
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$FindPath$viewFindPath = F6(
	function (opened, openedDropdown, defaultSchema, tables, settings, model) {
		var titleId = model.H + '-title';
		return A2(
			$author$project$Components$Molecules$Modal$modal,
			{
				H: model.H,
				bm: opened,
				dt: $author$project$PagesComponents$Organization_$Project_$Models$ModalClose(
					$author$project$PagesComponents$Organization_$Project_$Models$FindPathMsg($author$project$PagesComponents$Organization_$Project_$Models$FPClose)),
				d$: titleId
			},
			_List_fromArray(
				[
					$author$project$PagesComponents$Organization_$Project_$Views$Modals$FindPath$viewHeader(titleId),
					A3($author$project$PagesComponents$Organization_$Project_$Views$Modals$FindPath$viewSettings, model.H, model.ow, settings),
					A5($author$project$PagesComponents$Organization_$Project_$Views$Modals$FindPath$viewSearchForm, model.H, openedDropdown, tables, model.bK, model.oT),
					A3($author$project$PagesComponents$Organization_$Project_$Views$Modals$FindPath$viewPaths, defaultSchema, tables, model),
					A4($author$project$PagesComponents$Organization_$Project_$Views$Modals$FindPath$viewFooter, defaultSchema, tables, settings, model)
				]));
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$Help$hotkey = function (values) {
	return A2($author$project$Components$Atoms$Kbd$badge, _List_Nil, values);
};
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$Help$tip = A3(
	$author$project$Components$Atoms$Badge$basicFlex,
	$author$project$Libs$Tailwind$green,
	_List_Nil,
	_List_fromArray(
		[
			$elm$html$Html$text('tip')
		]));
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$Help$canvasNavigation = {
	kM: _List_fromArray(
		[
			A2(
			$elm$html$Html$p,
			_List_Nil,
			_List_fromArray(
				[
					$elm$html$Html$text('You have an infinite canvas to organize your tables. You can scroll with your mouse and zoom using the '),
					$author$project$PagesComponents$Organization_$Project_$Views$Modals$Help$hotkey(
					_List_fromArray(
						['ctrl', 'scroll'])),
					$elm$html$Html$text('. On the bottom right you also have some commands to control the zoom or adjust your schema to the screen ('),
					A2($author$project$Components$Atoms$Icon$solid, 20, 'inline'),
					$elm$html$Html$text(').')
				])),
			A2(
			$elm$html$Html$p,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('mt-3')
				]),
			_List_fromArray(
				[
					$elm$html$Html$text('You can move table by dragging them and move the whole canvas by dragging the background.')
				])),
			A2(
			$elm$html$Html$p,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('mt-3')
				]),
			_List_fromArray(
				[
					$author$project$PagesComponents$Organization_$Project_$Views$Modals$Help$tip,
					$elm$html$Html$text(' You can select multiple tables using '),
					$author$project$PagesComponents$Organization_$Project_$Views$Modals$Help$hotkey(
					_List_fromArray(
						['ctrl', 'click'])),
					$elm$html$Html$text(' or the selection box, and then move them all at once. If you have feedback or suggestions to improve this navigation, please '),
					A3(
					$author$project$Libs$Html$extLink,
					$author$project$Conf$constants.kx,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('link')
						]),
					_List_fromArray(
						[
							$elm$html$Html$text('tell us')
						])),
					$elm$html$Html$text(', it\'s an important core feature.')
				]))
		]),
	a4: 'Canvas navigation'
};
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$Help$experimental = A3(
	$author$project$Components$Atoms$Badge$basicFlex,
	$author$project$Libs$Tailwind$yellow,
	_List_Nil,
	_List_fromArray(
		[
			$elm$html$Html$text('experimental')
		]));
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$Help$findPath = {
	kM: _List_fromArray(
		[
			A2(
			$elm$html$Html$p,
			_List_Nil,
			_List_fromArray(
				[
					$author$project$PagesComponents$Organization_$Project_$Views$Modals$Help$experimental,
					$elm$html$Html$text(' Find all the possible paths between two tables. To get relevant results, use the settings to ignore some tables or columns and keep the length small. '),
					$elm$html$Html$text('We are still figuring out how this could be the most interesting (path algo, heuristics, UX...) so don\'t hesitate to '),
					A3(
					$author$project$Libs$Html$extLink,
					$author$project$Conf$constants.ky,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('link')
						]),
					_List_fromArray(
						[
							$elm$html$Html$text('come and discuss')
						])),
					$elm$html$Html$text(' about it.')
				]))
		]),
	a4: 'Find path'
};
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$Help$followRelation = {
	kM: _List_fromArray(
		[
			$elm$html$Html$text('Azimutt shows you foreign keys as outgoing relations from a column with a small horizontal link on the right. Just '),
			$author$project$PagesComponents$Organization_$Project_$Views$Modals$Help$hotkey(
			_List_fromArray(
				['click'])),
			$elm$html$Html$text(' on the column icon ('),
			A2($author$project$Components$Atoms$Icon$solid, $author$project$Components$Atoms$Icons$columns.lQ, 'inline'),
			$elm$html$Html$text(') to show the target table. Incoming relations (foreign keys pointing to the table) are shown on the left, '),
			$author$project$PagesComponents$Organization_$Project_$Views$Modals$Help$hotkey(
			_List_fromArray(
				['click'])),
			$elm$html$Html$text(' on the column icon to see all the incoming relations an choose the tables you want to show.')
		]),
	a4: 'Follow relation'
};
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$Help$layout = {
	kM: _List_fromArray(
		[
			$elm$html$Html$text('If you are using Azimutt, your schema is probably too complex to be seen all at once.\n                  Focusing on specific use cases can be very interesting, showing only the relevant tables, columns and relations.\n                  Layouts allows you to define such use cases and save them so you can come back to them later and easily switch between them.')
		]),
	a4: 'Layout'
};
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$Help$partialDisplay = {
	kM: _List_fromArray(
		[
			$elm$html$Html$text('Having too much information makes it useless. Azimutt let you select the table you want to see but also the columns. If you '),
			$author$project$PagesComponents$Organization_$Project_$Views$Modals$Help$hotkey(
			_List_fromArray(
				['double click'])),
			$elm$html$Html$text(' on a column, it will be moved to the \'hidden columns\' section. And then shown again in last position with the '),
			$author$project$PagesComponents$Organization_$Project_$Views$Modals$Help$hotkey(
			_List_fromArray(
				['double click'])),
			$elm$html$Html$text(' from this section. For quicker hide, you can use the keyboard shortcuts '),
			$author$project$PagesComponents$Organization_$Project_$Views$Modals$Help$hotkey(
			_List_fromArray(
				['d'])),
			$elm$html$Html$text(', '),
			$author$project$PagesComponents$Organization_$Project_$Views$Modals$Help$hotkey(
			_List_fromArray(
				['Backspace'])),
			$elm$html$Html$text(' or '),
			$author$project$PagesComponents$Organization_$Project_$Views$Modals$Help$hotkey(
			_List_fromArray(
				['Delete'])),
			$elm$html$Html$text(' while hovering the column, also works for a table.')
		]),
	a4: 'Partial display'
};
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$Help$soon = A3(
	$author$project$Components$Atoms$Badge$basicFlex,
	$author$project$Libs$Tailwind$indigo,
	_List_Nil,
	_List_fromArray(
		[
			$elm$html$Html$text('soon')
		]));
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$Help$search = {
	kM: _List_fromArray(
		[
			A2(
			$elm$html$Html$p,
			_List_Nil,
			_List_fromArray(
				[
					$elm$html$Html$text('It\'s quite easy, just enter the search (top left) and look for what you want.\n                         You will find tables from your schema but also columns or relations.\n                         We search "everywhere": name, comment or constraints for tables, name, comment, type or default value for columns and name, linked table and columns for relations.\n                         Selecting them will show the related table on the canvas.')
				])),
			A2(
			$elm$html$Html$p,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('mt-3')
				]),
			_List_fromArray(
				[
					$author$project$PagesComponents$Organization_$Project_$Views$Modals$Help$tip,
					$elm$html$Html$text(' Just type '),
					$author$project$PagesComponents$Organization_$Project_$Views$Modals$Help$hotkey(
					_List_fromArray(
						['/'])),
					$elm$html$Html$text(' from anywhere to focus the search input and start typing. You can also use '),
					$author$project$PagesComponents$Organization_$Project_$Views$Modals$Help$hotkey(
					_List_fromArray(
						['Arrows'])),
					$elm$html$Html$text(' and '),
					$author$project$PagesComponents$Organization_$Project_$Views$Modals$Help$hotkey(
					_List_fromArray(
						['Enter'])),
					$elm$html$Html$text(' to navigate in the results and select one.')
				])),
			A2(
			$elm$html$Html$p,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('mt-3')
				]),
			_List_fromArray(
				[
					$author$project$PagesComponents$Organization_$Project_$Views$Modals$Help$soon,
					$elm$html$Html$text(' We plan to use full-text search to be typo tolerant and have better results, as well as let you import some data to perform search on them. If you need this, please '),
					A3(
					$author$project$Libs$Html$extLink,
					$author$project$Conf$constants.kz,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('link')
						]),
					_List_fromArray(
						[
							$elm$html$Html$text('vote and let us know')
						])),
					$elm$html$Html$text(' to help prioritize it.')
				]))
		]),
	a4: 'Search'
};
var $author$project$PagesComponents$Organization_$Project_$Models$HToggle = function (a) {
	return {$: 2, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$Help$sectionToAccordionItem = F2(
	function (isOpen, section) {
		return A2(
			$elm$html$Html$div,
			_List_Nil,
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Events$onClick(
							$author$project$PagesComponents$Organization_$Project_$Models$HelpMsg(
								$author$project$PagesComponents$Organization_$Project_$Models$HToggle(section.a4))),
							$author$project$Libs$Html$Attributes$css(
							_List_fromArray(
								[
									'px-6 py-4 cursor-pointer',
									A3($author$project$Libs$Bool$cond, isOpen, 'bg-primary-100 text-primary-700', '')
								]))
						]),
					_List_fromArray(
						[
							$elm$html$Html$text(section.a4)
						])),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$author$project$Libs$Html$Attributes$css(
							_List_fromArray(
								[
									'px-6 py-3 border-t border-gray-300',
									A3($author$project$Libs$Bool$cond, isOpen, '', 'hidden')
								]))
						]),
					section.kM)
				]));
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$Help$shortcuts = {
	kM: _List_fromArray(
		[
			A2(
			$elm$html$Html$p,
			_List_Nil,
			_List_fromArray(
				[
					$elm$html$Html$text('Keyboard shortcuts improve user productivity. So Azimutt has some to help you:')
				])),
			A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('mt-3')
				]),
			A2(
				$elm$core$List$map,
				function (h) {
					return A2(
						$elm$html$Html$div,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$class('flex justify-between flex-row-reverse mt-1')
							]),
						_List_fromArray(
							[
								$author$project$PagesComponents$Organization_$Project_$Views$Modals$Help$hotkey(h.X),
								$elm$html$Html$text(' ' + h.bf)
							]));
				},
				_List_fromArray(
					[
						{
						bf: 'Focus on the search',
						X: _List_fromArray(
							['/'])
					},
						{
						bf: 'Save the project. It\'s not done automatically so don\'t forget it ^^',
						X: _List_fromArray(
							['Ctrl', 's'])
					},
						{
						bf: 'Hide a table or column, depending on what is hovered',
						X: _List_fromArray(
							['d'])
					},
						{
						bf: 'Create a layout from your current state',
						X: _List_fromArray(
							['Alt', 'l'])
					},
						{
						bf: 'Add a new virtual relation',
						X: _List_fromArray(
							['Alt', 'v'])
					},
						{
						bf: 'Open find path dialog, use hovered table as source',
						X: _List_fromArray(
							['Alt', 'p'])
					},
						{
						bf: 'Zoom to 100%',
						X: _List_fromArray(
							['Ctrl', '0'])
					},
						{
						bf: 'Fit diagram to screen',
						X: _List_fromArray(
							['Ctrl', 'Alt', '0'])
					},
						{
						bf: 'Bring hovered table on step forward',
						X: _List_fromArray(
							['Ctrl', 'ArrowUp'])
					},
						{
						bf: 'Bring hovered table on step backward',
						X: _List_fromArray(
							['Ctrl', 'ArrowDown'])
					},
						{
						bf: 'Bring hovered table in the front',
						X: _List_fromArray(
							['Ctrl', 'Shift', 'ArrowUp'])
					},
						{
						bf: 'Bring hovered table to the back',
						X: _List_fromArray(
							['Ctrl', 'Shift', 'ArrowDown'])
					},
						{
						bf: 'Cancel what you are doing (drag, opened dialog, input focus, create relation...)',
						X: _List_fromArray(
							['Escape'])
					},
						{
						bf: 'Open this documentation dialog',
						X: _List_fromArray(
							['?'])
					}
					]))),
			A2(
			$elm$html$Html$p,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('mt-3')
				]),
			_List_fromArray(
				[
					$elm$html$Html$text('If you can think of other or have better suggestion for them, '),
					A3(
					$author$project$Libs$Html$extLink,
					$author$project$Conf$constants.kA,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('link')
						]),
					_List_fromArray(
						[
							$elm$html$Html$text('just let us know')
						])),
					$elm$html$Html$text('.')
				]))
		]),
	a4: 'Shortcuts'
};
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$Help$viewHelp = F2(
	function (opened, model) {
		var titleId = model.H + '-title';
		return A2(
			$author$project$Components$Molecules$Modal$modal,
			{
				H: model.H,
				bm: opened,
				dt: $author$project$PagesComponents$Organization_$Project_$Models$ModalClose(
					$author$project$PagesComponents$Organization_$Project_$Models$HelpMsg($author$project$PagesComponents$Organization_$Project_$Models$HClose)),
				d$: titleId
			},
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('max-w-3xl mx-6 mt-6')
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$author$project$Libs$Html$Attributes$css(
									_List_fromArray(
										[
											'mt-3 text-center',
											$author$project$Libs$Tailwind$sm(
											_List_fromArray(
												['mt-5']))
										]))
								]),
							_List_fromArray(
								[
									A2(
									$elm$html$Html$h3,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$id(titleId),
											$elm$html$Html$Attributes$class('text-lg leading-6 font-medium text-gray-900')
										]),
									_List_fromArray(
										[
											$elm$html$Html$text('🎊 Hey! Welcome to Azimutt 🎊')
										])),
									A2(
									$elm$html$Html$div,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$class('mt-2')
										]),
									_List_fromArray(
										[
											A2(
											$elm$html$Html$p,
											_List_fromArray(
												[
													$elm$html$Html$Attributes$class('text-sm text-gray-500')
												]),
											_List_fromArray(
												[
													$elm$html$Html$text('Let\'s dive into the features you might be interested in...')
												]))
										]))
								])),
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('mt-3 border border-gray-300 rounded-md shadow-sm divide-y divide-gray-300')
								]),
							A2(
								$elm$core$List$map,
								function (s) {
									return A2(
										$author$project$PagesComponents$Organization_$Project_$Views$Modals$Help$sectionToAccordionItem,
										_Utils_eq(s.a4, model.nu),
										s);
								},
								_List_fromArray(
									[$author$project$PagesComponents$Organization_$Project_$Views$Modals$Help$search, $author$project$PagesComponents$Organization_$Project_$Views$Modals$Help$canvasNavigation, $author$project$PagesComponents$Organization_$Project_$Views$Modals$Help$partialDisplay, $author$project$PagesComponents$Organization_$Project_$Views$Modals$Help$layout, $author$project$PagesComponents$Organization_$Project_$Views$Modals$Help$followRelation, $author$project$PagesComponents$Organization_$Project_$Views$Modals$Help$findPath, $author$project$PagesComponents$Organization_$Project_$Views$Modals$Help$shortcuts]))),
							A2(
							$elm$html$Html$p,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('mt-3')
								]),
							_List_fromArray(
								[
									$elm$html$Html$text('I hope you find Azimutt as much as useful as I do. The application is quickly evolving and any feedback, feature request or use case description is '),
									A3(
									$author$project$Libs$Html$extLink,
									$author$project$Conf$constants.kA,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$class('link')
										]),
									_List_fromArray(
										[
											$elm$html$Html$text('very welcome')
										])),
									$elm$html$Html$text(' to help us make the most out of it.')
								]))
						])),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('px-6 py-3 mt-3 flex items-center justify-between flex-row-reverse bg-gray-50 rounded-b-lg')
						]),
					_List_fromArray(
						[
							A3(
							$author$project$Components$Atoms$Button$primary3,
							$author$project$Libs$Tailwind$primary,
							_List_fromArray(
								[
									$elm$html$Html$Events$onClick(
									$author$project$PagesComponents$Organization_$Project_$Models$ModalClose(
										$author$project$PagesComponents$Organization_$Project_$Models$HelpMsg($author$project$PagesComponents$Organization_$Project_$Models$HClose)))
								]),
							_List_fromArray(
								[
									$elm$html$Html$text('Thanks!')
								]))
						]))
				]));
	});
var $author$project$Components$Molecules$Slideover$closeBtn = function (msg) {
	return A2(
		$elm$html$Html$button,
		_List_fromArray(
			[
				$elm$html$Html$Attributes$type_('button'),
				$elm$html$Html$Events$onClick(msg),
				$author$project$Libs$Html$Attributes$css(
				_List_fromArray(
					[
						'bg-white rounded-md text-gray-400',
						$author$project$Libs$Tailwind$hover(
						_List_fromArray(
							['text-gray-500'])),
						$author$project$Libs$Tailwind$focus(
						_List_fromArray(
							['outline-none ring-2 ring-offset-2 ring-indigo-500']))
					]))
			]),
		_List_fromArray(
			[
				A2(
				$elm$html$Html$span,
				_List_fromArray(
					[
						$elm$html$Html$Attributes$class('sr-only')
					]),
				_List_fromArray(
					[
						$elm$html$Html$text('Close panel')
					])),
				A2($author$project$Components$Atoms$Icon$outline, 227, '')
			]));
};
var $author$project$Components$Molecules$Slideover$header = F3(
	function (labelId, title, onClose) {
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$author$project$Libs$Html$Attributes$css(
					_List_fromArray(
						[
							'py-6 px-4',
							$author$project$Libs$Tailwind$sm(
							_List_fromArray(
								['px-6']))
						]))
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('flex items-start justify-between')
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$h2,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('text-lg font-medium text-gray-900'),
									$elm$html$Html$Attributes$id(labelId)
								]),
							_List_fromArray(
								[
									$elm$html$Html$text(title)
								])),
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('ml-3 h-7 flex items-center')
								]),
							_List_fromArray(
								[
									$author$project$Components$Molecules$Slideover$closeBtn(onClose)
								]))
						]))
				]));
	});
var $author$project$Components$Molecules$Slideover$slideover = F2(
	function (model, content) {
		var labelId = model.H + '-title';
		var duration = A3($author$project$Libs$Bool$cond, model.bm, $author$project$Conf$ui.ns, $author$project$Conf$ui.k_);
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$author$project$Libs$Html$Attributes$css(
					_List_fromArray(
						[
							'fixed inset-0 overflow-hidden z-max',
							A3($author$project$Libs$Bool$cond, model.bm, '', 'pointer-events-none')
						])),
					$author$project$Libs$Html$Attributes$ariaLabelledby(labelId),
					$author$project$Libs$Html$Attributes$role('dialog'),
					$author$project$Libs$Html$Attributes$ariaModal(true)
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('absolute inset-0 overflow-hidden')
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$elm$html$Html$Events$onClick(model.gW),
									$author$project$Libs$Html$Attributes$css(
									_List_fromArray(
										[
											'absolute inset-0 bg-gray-500 bg-opacity-75 transition-opacity ease-in-out',
											'duration-' + $elm$core$String$fromInt(duration),
											A3($author$project$Libs$Bool$cond, model.bm, 'opacity-100', 'opacity-0')
										])),
									$author$project$Libs$Html$Attributes$ariaHidden(true)
								]),
							_List_Nil),
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('fixed inset-y-0 right-0 pl-10 max-w-full flex')
								]),
							_List_fromArray(
								[
									A2(
									$elm$html$Html$div,
									_List_fromArray(
										[
											$author$project$Libs$Html$Attributes$css(
											_List_fromArray(
												[
													'w-screen max-w-md transform transition ease-in-out',
													'duration-' + $elm$core$String$fromInt(duration),
													A3($author$project$Libs$Bool$cond, model.bm, 'translate-x-0', 'translate-x-full')
												]))
										]),
									_List_fromArray(
										[
											A2(
											$elm$html$Html$div,
											_List_fromArray(
												[
													$elm$html$Html$Attributes$id(model.H),
													$elm$html$Html$Attributes$class('h-full flex flex-col bg-white shadow-xl')
												]),
											_List_fromArray(
												[
													A3($author$project$Components$Molecules$Slideover$header, labelId, model.a4, model.gV),
													A2(
													$elm$html$Html$div,
													_List_fromArray(
														[
															$author$project$Libs$Html$Attributes$css(
															_List_fromArray(
																[
																	'flex-1 relative overflow-y-scroll px-4',
																	$author$project$Libs$Tailwind$sm(
																	_List_fromArray(
																		['px-6']))
																]))
														]),
													_List_fromArray(
														[content]))
												]))
										]))
								]))
						]))
				]));
	});
var $author$project$PagesComponents$Organization_$Project_$Models$PSCollapseTableOnShowToggle = {$: 17};
var $author$project$PagesComponents$Organization_$Project_$Models$PSColumnBasicTypesToggle = {$: 16};
var $author$project$PagesComponents$Organization_$Project_$Models$PSColumnOrderUpdate = function (a) {
	return {$: 14, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Models$PSHiddenColumnsListUpdate = function (a) {
	return {$: 10, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Models$PSHiddenColumnsMaxUpdate = function (a) {
	return {$: 11, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Models$PSHiddenColumnsPropsToggle = {$: 12};
var $author$project$PagesComponents$Organization_$Project_$Models$PSHiddenColumnsRelationsToggle = {$: 13};
var $author$project$PagesComponents$Organization_$Project_$Models$PSRelationStyleUpdate = function (a) {
	return {$: 15, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Models$PSRemoveViewsToggle = {$: 8};
var $author$project$PagesComponents$Organization_$Project_$Models$PSRemovedTablesUpdate = function (a) {
	return {$: 9, a: a};
};
var $author$project$Models$RelationStyle$all = _List_fromArray(
	[0, 1, 2]);
var $author$project$Components$Molecules$Tooltip$br = A2($author$project$Components$Molecules$Tooltip$tooltip, 'top-full mt-3 left-0', 'top-0 -translate-y-2/4 ml-3');
var $author$project$Components$Atoms$Input$checkbox = F5(
	function (styles, fieldId, fieldLabel, fieldValue, fieldChange) {
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$author$project$Libs$Html$Attributes$css(
					_List_fromArray(
						['relative flex items-start', styles]))
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('flex items-center h-5')
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$input,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$type_('checkbox'),
									$elm$html$Html$Attributes$name(fieldId),
									$elm$html$Html$Attributes$id(fieldId),
									$elm$html$Html$Attributes$checked(fieldValue),
									$elm$html$Html$Events$onClick(fieldChange),
									$author$project$Libs$Html$Attributes$ariaDescribedby(fieldId + '-help'),
									$author$project$Libs$Html$Attributes$css(
									_List_fromArray(
										[
											'h-4 w-4 text-indigo-600 border-gray-300 rounded',
											$author$project$Libs$Tailwind$focus(
											_List_fromArray(
												['ring-indigo-500']))
										]))
								]),
							_List_Nil)
						])),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('ml-3 text-sm')
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$label,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$for(fieldId),
									$elm$html$Html$Attributes$class('text-gray-700')
								]),
							_List_fromArray(
								[
									$elm$html$Html$text(fieldLabel)
								]))
						]))
				]));
	});
var $author$project$Components$Atoms$Input$checkboxWithLabelAndHelp = F7(
	function (styles, fieldId, fieldLabel, fieldHelp, fieldDescription, fieldValue, fieldChange) {
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class(styles)
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$label,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$for(fieldId),
							$elm$html$Html$Attributes$class('block')
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$span,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('text-sm font-medium text-gray-700')
								]),
							_List_fromArray(
								[
									$elm$html$Html$text(fieldLabel)
								])),
							A2(
							$elm$html$Html$p,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$id(fieldId + '-help'),
									$elm$html$Html$Attributes$class('text-sm text-gray-500')
								]),
							_List_fromArray(
								[
									$elm$html$Html$text(fieldHelp)
								]))
						])),
					A5($author$project$Components$Atoms$Input$checkbox, 'mt-1', fieldId, fieldDescription, fieldValue, fieldChange)
				]));
	});
var $elm$html$Html$fieldset = _VirtualDom_node('fieldset');
var $elm$html$Html$legend = _VirtualDom_node('legend');
var $author$project$Components$Atoms$Input$selectWithLabelAndHelp = F7(
	function (styles, fieldId, fieldLabel, fieldHelp, fieldOptions, fieldValue, fieldChange) {
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class(styles)
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$label,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$for(fieldId),
							$elm$html$Html$Attributes$class('block')
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$span,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('text-sm font-medium text-gray-700')
								]),
							_List_fromArray(
								[
									$elm$html$Html$text(fieldLabel)
								])),
							A2(
							$elm$html$Html$p,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$id(fieldId + '-help'),
									$elm$html$Html$Attributes$class('text-sm text-gray-500')
								]),
							_List_fromArray(
								[
									$elm$html$Html$text(fieldHelp)
								]))
						])),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('mt-1')
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$select,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$name(fieldId),
									$elm$html$Html$Attributes$id(fieldId),
									$elm$html$Html$Events$onInput(fieldChange),
									$author$project$Libs$Html$Attributes$ariaDescribedby(fieldId + '-help'),
									$author$project$Libs$Html$Attributes$css(
									_List_fromArray(
										[
											'shadow-sm block w-full border-gray-300 rounded-md',
											$author$project$Libs$Tailwind$focus(
											_List_fromArray(
												['ring-indigo-500 border-indigo-500'])),
											$author$project$Libs$Tailwind$sm(
											_List_fromArray(
												['text-sm']))
										]))
								]),
							A2(
								$elm$core$List$map,
								function (_v0) {
									var optionId = _v0.a;
									var optionLabel = _v0.b;
									return A2(
										$elm$html$Html$option,
										_List_fromArray(
											[
												$elm$html$Html$Attributes$value(optionId),
												$elm$html$Html$Attributes$selected(
												_Utils_eq(optionId, fieldValue))
											]),
										_List_fromArray(
											[
												$elm$html$Html$text(optionLabel)
											]));
								},
								fieldOptions))
						]))
				]));
	});
var $author$project$Models$RelationStyle$show = function (order) {
	switch (order) {
		case 0:
			return 'Curve';
		case 1:
			return 'Line';
		default:
			return 'Steps';
	}
};
var $author$project$Components$Atoms$Input$textWithLabelAndHelp = F7(
	function (styles, fieldId, fieldLabel, fieldHelp, fieldPlaceholder, fieldValue, fieldChange) {
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class(styles)
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$label,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$for(fieldId),
							$elm$html$Html$Attributes$class('block')
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$span,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('text-sm font-medium text-gray-700')
								]),
							_List_fromArray(
								[
									$elm$html$Html$text(fieldLabel)
								])),
							A2(
							$elm$html$Html$p,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$id(fieldId + '-help'),
									$elm$html$Html$Attributes$class('text-sm text-gray-500')
								]),
							_List_fromArray(
								[
									$elm$html$Html$text(fieldHelp)
								]))
						])),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('mt-1')
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$input,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$type_('text'),
									$elm$html$Html$Attributes$name(fieldId),
									$elm$html$Html$Attributes$id(fieldId),
									$elm$html$Html$Attributes$value(fieldValue),
									$elm$html$Html$Events$onInput(fieldChange),
									$elm$html$Html$Attributes$placeholder(fieldPlaceholder),
									$author$project$Libs$Html$Attributes$ariaDescribedby(fieldId + '-help'),
									$author$project$Libs$Html$Attributes$css(
									_List_fromArray(
										[
											'shadow-sm block w-full border-gray-300 rounded-md',
											$author$project$Libs$Tailwind$focus(
											_List_fromArray(
												['ring-indigo-500 border-indigo-500'])),
											$author$project$Libs$Tailwind$sm(
											_List_fromArray(
												['text-sm']))
										]))
								]),
							_List_Nil)
						]))
				]));
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$ProjectSettings$viewCheckbox = F5(
	function (styles, fieldId, fieldLabel, value, msg) {
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$author$project$Libs$Html$Attributes$css(
					_List_fromArray(
						['relative flex items-start', styles]))
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('flex items-center h-5')
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$input,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$type_('checkbox'),
									$elm$html$Html$Attributes$id(fieldId),
									$elm$html$Html$Attributes$checked(value),
									$elm$html$Html$Events$onClick(msg),
									$author$project$Libs$Html$Attributes$css(
									_List_fromArray(
										[
											'h-4 w-4 text-indigo-600 border-gray-300 rounded',
											$author$project$Libs$Tailwind$focus(
											_List_fromArray(
												['ring-indigo-500']))
										]))
								]),
							_List_Nil)
						])),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('ml-3 text-sm')
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$label,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$for(fieldId),
									$elm$html$Html$Attributes$class('text-gray-700')
								]),
							fieldLabel)
						]))
				]));
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$ProjectSettings$viewDisplaySettingsSection = F2(
	function (htmlId, erd) {
		var viewsCount = $elm$core$List$length(
			A2(
				$elm$core$List$filter,
				function ($) {
					return $.o3;
				},
				A2(
					$elm$core$List$concatMap,
					A2(
						$elm$core$Basics$composeR,
						function ($) {
							return $.oM;
						},
						$elm$core$Dict$values),
					erd.hs)));
		return A2(
			$elm$html$Html$fieldset,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('mt-6')
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$legend,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('font-medium text-gray-900')
						]),
					_List_fromArray(
						[
							$elm$html$Html$text('Display options')
						])),
					A2(
					$elm$html$Html$p,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('text-sm text-gray-500')
						]),
					_List_fromArray(
						[
							$elm$html$Html$text('Configure global options for this project.')
						])),
					A5(
					$author$project$PagesComponents$Organization_$Project_$Views$Modals$ProjectSettings$viewCheckbox,
					A3($author$project$Libs$Bool$cond, !viewsCount, 'mt-3 hidden', 'mt-3'),
					htmlId + '-no-views',
					_List_fromArray(
						[
							A2(
							$author$project$Components$Molecules$Tooltip$tr,
							'Check this if you don\'t want to have SQL views in Azimutt',
							$author$project$Libs$Html$bText('Remove views')),
							$elm$html$Html$text(
							' (' + (A2($author$project$Libs$String$pluralize, 'view', viewsCount) + ')'))
						]),
					erd.dM.n2,
					$author$project$PagesComponents$Organization_$Project_$Models$ProjectSettingsMsg($author$project$PagesComponents$Organization_$Project_$Models$PSRemoveViewsToggle)),
					A7(
					$author$project$Components$Atoms$Input$textWithLabelAndHelp,
					'mt-3',
					htmlId + '-remove-tables',
					'Remove tables',
					'Some tables are not useful, remove them.',
					'ex: flyway_.+, versions, env',
					erd.dM.n4,
					A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Models$PSRemovedTablesUpdate, $author$project$PagesComponents$Organization_$Project_$Models$ProjectSettingsMsg)),
					function (fieldId) {
					return A2(
						$elm$html$Html$div,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$class('mt-3')
							]),
						_List_fromArray(
							[
								A2(
								$elm$html$Html$label,
								_List_fromArray(
									[
										$elm$html$Html$Attributes$for(fieldId),
										$elm$html$Html$Attributes$class('block')
									]),
								_List_fromArray(
									[
										A2(
										$elm$html$Html$span,
										_List_fromArray(
											[
												$elm$html$Html$Attributes$class('text-sm font-medium text-gray-700')
											]),
										_List_fromArray(
											[
												$elm$html$Html$text('Hide columns')
											])),
										A2(
										$elm$html$Html$p,
										_List_fromArray(
											[
												$elm$html$Html$Attributes$id(fieldId + '-help'),
												$elm$html$Html$Attributes$class('text-sm text-gray-500')
											]),
										_List_fromArray(
											[
												$elm$html$Html$text('Some columns are not interesting, hide them by default.')
											]))
									])),
								A2(
								$elm$html$Html$div,
								_List_fromArray(
									[
										$elm$html$Html$Attributes$class('mt-1 -space-y-px')
									]),
								_List_fromArray(
									[
										A2(
										$elm$html$Html$div,
										_List_Nil,
										_List_fromArray(
											[
												A2(
												$elm$html$Html$input,
												_List_fromArray(
													[
														$elm$html$Html$Attributes$type_('text'),
														$elm$html$Html$Attributes$name(fieldId),
														$elm$html$Html$Attributes$id(fieldId),
														$elm$html$Html$Attributes$value(erd.dM.ay.bn),
														$elm$html$Html$Events$onInput(
														A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Models$PSHiddenColumnsListUpdate, $author$project$PagesComponents$Organization_$Project_$Models$ProjectSettingsMsg)),
														$elm$html$Html$Attributes$placeholder('ex: created_at, updated_.+'),
														$author$project$Libs$Html$Attributes$ariaDescribedby(fieldId + '-help'),
														$author$project$Libs$Html$Attributes$css(
														_List_fromArray(
															[
																'shadow-sm block w-full border-gray-300 rounded-none rounded-t-md',
																$author$project$Libs$Tailwind$focus(
																_List_fromArray(
																	['relative z-10 ring-indigo-500 border-indigo-500'])),
																$author$project$Libs$Tailwind$sm(
																_List_fromArray(
																	['text-sm']))
															]))
													]),
												_List_Nil)
											])),
										function (fieldIdMax) {
										return A2(
											$elm$html$Html$div,
											_List_fromArray(
												[
													$elm$html$Html$Attributes$class('flex shadow-sm')
												]),
											_List_fromArray(
												[
													A2(
													$elm$html$Html$label,
													_List_fromArray(
														[
															$elm$html$Html$Attributes$for(fieldIdMax),
															$elm$html$Html$Attributes$class('sr-only')
														]),
													_List_fromArray(
														[
															$elm$html$Html$text('Max columns')
														])),
													A2(
													$elm$html$Html$span,
													_List_fromArray(
														[
															$author$project$Libs$Html$Attributes$css(
															_List_fromArray(
																[
																	'inline-flex items-center px-3 rounded-none rounded-bl-md border border-r-0 border-gray-300 bg-gray-50 text-gray-500',
																	$author$project$Libs$Tailwind$sm(
																	_List_fromArray(
																		['text-sm']))
																]))
														]),
													_List_fromArray(
														[
															A2(
															$author$project$Components$Molecules$Tooltip$br,
															'Maximum default column shown when show a table',
															$elm$html$Html$text('Show max:'))
														])),
													A2(
													$elm$html$Html$input,
													_List_fromArray(
														[
															$elm$html$Html$Attributes$type_('number'),
															$elm$html$Html$Attributes$name(fieldIdMax),
															$elm$html$Html$Attributes$id(fieldIdMax),
															$elm$html$Html$Attributes$value(
															$elm$core$String$fromInt(erd.dM.ay.mE)),
															$elm$html$Html$Events$onInput(
															A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Models$PSHiddenColumnsMaxUpdate, $author$project$PagesComponents$Organization_$Project_$Models$ProjectSettingsMsg)),
															$elm$html$Html$Attributes$placeholder('Max columns to show when adding a table'),
															$author$project$Libs$Html$Attributes$css(
															_List_fromArray(
																[
																	'flex-1 min-w-0 block w-full px-3 py-2 rounded-none rounded-br-md border-gray-300',
																	$author$project$Libs$Tailwind$sm(
																	_List_fromArray(
																		['text-sm'])),
																	$author$project$Libs$Tailwind$focus(
																	_List_fromArray(
																		['ring-indigo-500 border-indigo-500']))
																]))
														]),
													_List_Nil)
												]));
									}(htmlId + '-hide-columns-max')
									]))
							]));
				}(htmlId + '-hide-columns-list'),
					A5(
					$author$project$PagesComponents$Organization_$Project_$Views$Modals$ProjectSettings$viewCheckbox,
					'mt-1',
					htmlId + '-hide-columns-props',
					_List_fromArray(
						[
							$elm$html$Html$text('Hide columns without special property')
						]),
					erd.dM.ay.nU,
					$author$project$PagesComponents$Organization_$Project_$Models$ProjectSettingsMsg($author$project$PagesComponents$Organization_$Project_$Models$PSHiddenColumnsPropsToggle)),
					A5(
					$author$project$PagesComponents$Organization_$Project_$Views$Modals$ProjectSettings$viewCheckbox,
					'mt-1',
					htmlId + '-hide-columns-relation',
					_List_fromArray(
						[
							$elm$html$Html$text('Hide columns without relation')
						]),
					erd.dM.ay.bT,
					$author$project$PagesComponents$Organization_$Project_$Models$ProjectSettingsMsg($author$project$PagesComponents$Organization_$Project_$Models$PSHiddenColumnsRelationsToggle)),
					A7(
					$author$project$Components$Atoms$Input$selectWithLabelAndHelp,
					'mt-3',
					htmlId + '-columns-order',
					'Columns order',
					'Choose the default column order for tables.',
					A2(
						$elm$core$List$map,
						function (o) {
							return _Utils_Tuple2(
								$author$project$Models$ColumnOrder$toString(o),
								$author$project$Models$ColumnOrder$show(o));
						},
						$author$project$Models$ColumnOrder$all),
					$author$project$Models$ColumnOrder$toString(erd.dM.cW),
					A2(
						$elm$core$Basics$composeR,
						$author$project$Models$ColumnOrder$fromString,
						A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Models$PSColumnOrderUpdate, $author$project$PagesComponents$Organization_$Project_$Models$ProjectSettingsMsg))),
					A7(
					$author$project$Components$Atoms$Input$selectWithLabelAndHelp,
					'mt-3',
					htmlId + '-relation-style',
					'Relation style',
					'What relation style fits you best ;)',
					A2(
						$elm$core$List$map,
						function (s) {
							return _Utils_Tuple2(
								$author$project$Models$RelationStyle$toString(s),
								$author$project$Models$RelationStyle$show(s));
						},
						$author$project$Models$RelationStyle$all),
					$author$project$Models$RelationStyle$toString(erd.dM.dH),
					A2(
						$elm$core$Basics$composeR,
						$author$project$Models$RelationStyle$fromString,
						A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Models$PSRelationStyleUpdate, $author$project$PagesComponents$Organization_$Project_$Models$ProjectSettingsMsg))),
					A7(
					$author$project$Components$Atoms$Input$checkboxWithLabelAndHelp,
					'mt-3',
					htmlId + '-basic-types',
					'Column types',
					'',
					'Use basic types for columns to gain some space',
					erd.dM.cT,
					$author$project$PagesComponents$Organization_$Project_$Models$ProjectSettingsMsg($author$project$PagesComponents$Organization_$Project_$Models$PSColumnBasicTypesToggle)),
					A7(
					$author$project$Components$Atoms$Input$checkboxWithLabelAndHelp,
					'mt-3',
					htmlId + '-collapsed-columns',
					'Table display',
					'',
					'Collapse table columns by default',
					erd.dM.cR,
					$author$project$PagesComponents$Organization_$Project_$Models$ProjectSettingsMsg($author$project$PagesComponents$Organization_$Project_$Models$PSCollapseTableOnShowToggle))
				]));
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$ProjectSettings$viewDownloadSection = F2(
	function (_v0, erd) {
		var project = $author$project$PagesComponents$Organization_$Project_$Models$Erd$unpack(erd);
		return A2(
			$elm$html$Html$fieldset,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('mt-6')
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$legend,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('font-medium text-gray-900')
						]),
					_List_fromArray(
						[
							$elm$html$Html$text('Download project')
						])),
					A2(
					$elm$html$Html$p,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('text-sm text-gray-500')
						]),
					_List_fromArray(
						[
							$elm$html$Html$text('To save it on you computer or share with others.')
						])),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('mt-1')
						]),
					_List_fromArray(
						[
							A3(
							$author$project$Components$Atoms$Button$primary3,
							$author$project$Libs$Tailwind$primary,
							_List_fromArray(
								[
									$elm$html$Html$Events$onClick(
									$author$project$PagesComponents$Organization_$Project_$Models$Send(
										A2(
											$author$project$Ports$downloadFile,
											$author$project$Models$Project$downloadFilename(project),
											$author$project$Models$Project$downloadContent(project))))
								]),
							_List_fromArray(
								[
									$elm$html$Html$text('Download project')
								]))
						]))
				]));
	});
var $author$project$PagesComponents$Organization_$Project_$Models$PSDefaultSchemaUpdate = function (a) {
	return {$: 6, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Models$PSSchemaToggle = function (a) {
	return {$: 7, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$ProjectSettings$viewSchema = F3(
	function (htmlId, removedSchemas, _v0) {
		var schema = _v0.a;
		var tables = _v0.b;
		var _v1 = A2(
			$elm$core$List$partition,
			function ($) {
				return $.o3;
			},
			tables);
		var views = _v1.a;
		var realTables = _v1.b;
		return A5(
			$author$project$PagesComponents$Organization_$Project_$Views$Modals$ProjectSettings$viewCheckbox,
			'mt-3',
			htmlId + ('-' + schema),
			_List_fromArray(
				[
					$author$project$Libs$Html$bText(schema),
					$elm$html$Html$text(
					' (' + (A2($author$project$Libs$String$pluralizeL, 'table', realTables) + (' & ' + (A2($author$project$Libs$String$pluralizeL, 'view', views) + ')'))))
				]),
			!A2($elm$core$List$member, schema, removedSchemas),
			$author$project$PagesComponents$Organization_$Project_$Models$ProjectSettingsMsg(
				$author$project$PagesComponents$Organization_$Project_$Models$PSSchemaToggle(schema)));
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$ProjectSettings$viewSchemasSection = F2(
	function (htmlId, erd) {
		var schemas = A2(
			$elm$core$List$sortBy,
			$elm$core$Tuple$first,
			A2(
				$elm$core$List$map,
				function (_v0) {
					var name = _v0.a;
					var tables = _v0.b;
					return _Utils_Tuple2(name, tables);
				},
				$elm$core$Dict$toList(
					A2(
						$author$project$Libs$List$groupBy,
						function ($) {
							return $.aI;
						},
						A2(
							$elm$core$List$concatMap,
							A2(
								$elm$core$Basics$composeR,
								function ($) {
									return $.oM;
								},
								$elm$core$Dict$values),
							erd.hs)))));
		return A2(
			$elm$html$Html$fieldset,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('mt-6')
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$legend,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('font-medium text-gray-900')
						]),
					_List_fromArray(
						[
							$elm$html$Html$text('Project schemas')
						])),
					A2(
					$elm$html$Html$p,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('text-sm text-gray-500')
						]),
					_List_fromArray(
						[
							$elm$html$Html$text('Allow you to enable or not SQL schemas in your project.')
						])),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('list-group')
						]),
					A2(
						$elm$core$List$map,
						A2($author$project$PagesComponents$Organization_$Project_$Views$Modals$ProjectSettings$viewSchema, htmlId, erd.dM.n3),
						schemas)),
					A7(
					$author$project$Components$Atoms$Input$textWithLabelAndHelp,
					'mt-3',
					htmlId + '-default-schema',
					'Default schema',
					'Hide it in diagram to make it cleaner.',
					'ex: public, dto...',
					erd.dM.cb,
					A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Models$PSDefaultSchemaUpdate, $author$project$PagesComponents$Organization_$Project_$Models$ProjectSettingsMsg))
				]));
	});
var $author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$Open = function (a) {
	return {$: 0, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$ProjectSettings$viewAddSource = F2(
	function (_v0, _v1) {
		return A2(
			$elm$html$Html$button,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$type_('button'),
					$elm$html$Html$Events$onClick(
					$author$project$PagesComponents$Organization_$Project_$Models$ProjectSettingsMsg(
						$author$project$PagesComponents$Organization_$Project_$Models$PSSourceUpdate(
							$author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$Open($elm$core$Maybe$Nothing)))),
					$author$project$Libs$Html$Attributes$css(
					_List_fromArray(
						[
							'inline-flex items-center px-3 py-2 w-full text-left',
							$author$project$Libs$Tailwind$focus(
							_List_fromArray(
								['outline-none']))
						]))
				]),
			_List_fromArray(
				[
					A2($author$project$Components$Atoms$Icon$solid, 159, 'inline'),
					$elm$html$Html$text('Add source')
				]));
	});
var $author$project$PagesComponents$Organization_$Project_$Models$Batch = function (a) {
	return {$: 81, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Models$PSSourceDelete = function (a) {
	return {$: 3, a: a};
};
var $author$project$PagesComponents$Organization_$Project_$Models$PSSourceToggle = function (a) {
	return {$: 2, a: a};
};
var $author$project$Components$Molecules$Tooltip$bl = A2($author$project$Components$Molecules$Tooltip$tooltip, 'top-full mt-3 right-0 items-end', 'top-0 -translate-y-2/4 mr-3');
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$ProjectSettings$viewSource = F4(
	function (htmlId, _v0, zone, source) {
		var _v1 = A2(
			$elm$core$List$partition,
			function ($) {
				return $.o3;
			},
			$elm$core$Dict$values(source.oM));
		var views = _v1.a;
		var tables = _v1.b;
		var view = F4(
			function (icon, updatedAtText, updatedAt, labelTitle) {
				return A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('px-4 py-2')
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('flex justify-between')
								]),
							_List_fromArray(
								[
									A5(
									$author$project$PagesComponents$Organization_$Project_$Views$Modals$ProjectSettings$viewCheckbox,
									'mt-3',
									htmlId + ('-' + $author$project$Models$Project$SourceId$toString(source.H)),
									_List_fromArray(
										[
											A2(
											$author$project$Components$Molecules$Tooltip$b,
											labelTitle,
											A2(
												$elm$html$Html$span,
												_List_Nil,
												_List_fromArray(
													[
														A2($author$project$Components$Atoms$Icon$solid, icon, 'inline'),
														$elm$html$Html$text(source.eS)
													])))
										]),
									source.ip,
									$author$project$PagesComponents$Organization_$Project_$Models$ProjectSettingsMsg(
										$author$project$PagesComponents$Organization_$Project_$Models$PSSourceToggle(source))),
									A2(
									$elm$html$Html$div,
									_List_Nil,
									_List_fromArray(
										[
											A2(
											$author$project$Components$Molecules$Tooltip$bl,
											'Refresh this source',
											A2(
												$elm$html$Html$button,
												_List_fromArray(
													[
														$elm$html$Html$Attributes$type_('button'),
														$elm$html$Html$Events$onClick(
														$author$project$PagesComponents$Organization_$Project_$Models$ProjectSettingsMsg(
															$author$project$PagesComponents$Organization_$Project_$Models$PSSourceUpdate(
																$author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$Open(
																	$elm$core$Maybe$Just(source))))),
														$author$project$Libs$Html$Attributes$css(
														_List_fromArray(
															[
																$author$project$Libs$Tailwind$focus(
																_List_fromArray(
																	['outline-none'])),
																A3(
																$author$project$Libs$Bool$cond,
																(!_Utils_eq(source.gi, $author$project$Models$Project$SourceKind$AmlEditor)) && _Utils_eq(source.iB, $elm$core$Maybe$Nothing),
																'',
																'hidden')
															]))
													]),
												_List_fromArray(
													[
														A2($author$project$Components$Atoms$Icon$solid, 170, 'inline')
													]))),
											A2(
											$author$project$Components$Molecules$Tooltip$bl,
											'Update this source',
											A2(
												$elm$html$Html$button,
												_List_fromArray(
													[
														$elm$html$Html$Attributes$type_('button'),
														$elm$html$Html$Events$onClick(
														$author$project$PagesComponents$Organization_$Project_$Models$Batch(
															_List_fromArray(
																[
																	$author$project$PagesComponents$Organization_$Project_$Models$ModalClose(
																	$author$project$PagesComponents$Organization_$Project_$Models$ProjectSettingsMsg($author$project$PagesComponents$Organization_$Project_$Models$PSClose)),
																	$author$project$PagesComponents$Organization_$Project_$Models$AmlSidebarMsg(
																	$author$project$PagesComponents$Organization_$Project_$Models$AOpen(
																		$elm$core$Maybe$Just(source.H)))
																]))),
														$author$project$Libs$Html$Attributes$css(
														_List_fromArray(
															[
																$author$project$Libs$Tailwind$focus(
																_List_fromArray(
																	['outline-none'])),
																A3(
																$author$project$Libs$Bool$cond,
																_Utils_eq(source.gi, $author$project$Models$Project$SourceKind$AmlEditor),
																'',
																'hidden')
															]))
													]),
												_List_fromArray(
													[
														A2($author$project$Components$Atoms$Icon$solid, 151, 'inline')
													]))),
											A2(
											$author$project$Components$Molecules$Tooltip$bl,
											'Delete this source',
											A2(
												$elm$html$Html$button,
												_List_fromArray(
													[
														$elm$html$Html$Attributes$type_('button'),
														$elm$html$Html$Events$onClick(
														A3(
															$author$project$PagesComponents$Organization_$Project_$Models$confirm,
															'Delete ' + (source.eS + ' source?'),
															$elm$html$Html$text('Are you really sure?'),
															$author$project$PagesComponents$Organization_$Project_$Models$ProjectSettingsMsg(
																$author$project$PagesComponents$Organization_$Project_$Models$PSSourceDelete(source)))),
														$author$project$Libs$Html$Attributes$css(
														_List_fromArray(
															[
																$author$project$Libs$Tailwind$focus(
																_List_fromArray(
																	['outline-none']))
															]))
													]),
												_List_fromArray(
													[
														A2($author$project$Components$Atoms$Icon$solid, 207, 'inline')
													])))
										]))
								])),
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('flex justify-between')
								]),
							_List_fromArray(
								[
									A2(
									$elm$html$Html$span,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$class('text-sm text-gray-500')
										]),
									_List_fromArray(
										[
											$elm$html$Html$text(
											A2($author$project$Libs$String$pluralizeL, 'table', tables) + (', ' + (A2($author$project$Libs$String$pluralizeL, 'view', views) + (' & ' + A2($author$project$Libs$String$pluralizeL, 'relation', source.bT)))))
										])),
									A2(
									$author$project$Components$Molecules$Tooltip$tl,
									_Utils_ap(
										updatedAtText,
										A2($author$project$Libs$Models$DateTime$formatDatetime, zone, updatedAt)),
									A2(
										$elm$html$Html$span,
										_List_fromArray(
											[
												$elm$html$Html$Attributes$class('text-sm text-gray-500')
											]),
										_List_fromArray(
											[
												$elm$html$Html$text(
												A2($author$project$Libs$Models$DateTime$formatDate, zone, updatedAt))
											])))
								]))
						]));
			});
		var _v2 = source.gi;
		switch (_v2.$) {
			case 0:
				var url = _v2.a;
				return A4(view, $author$project$Components$Atoms$Icons$sources.lc, 'Last fetched on ', source.kb, 'Database ' + url);
			case 1:
				var path = _v2.a;
				var modified = _v2.c;
				return A4(view, $author$project$Components$Atoms$Icons$sources.oD, 'File last modified on ', modified, path + ' file');
			case 2:
				var url = _v2.a;
				return A4(view, $author$project$Components$Atoms$Icons$sources.n1, 'Last fetched on ', source.kb, 'File from ' + url);
			case 3:
				var path = _v2.a;
				var modified = _v2.c;
				return A4(view, $author$project$Components$Atoms$Icons$sources.mh, 'File last modified on ', modified, path + ' file');
			case 4:
				var url = _v2.a;
				return A4(view, $author$project$Components$Atoms$Icons$sources.n1, 'Last fetched on ', source.kb, 'File from ' + url);
			default:
				return A4(view, $author$project$Components$Atoms$Icons$sources.kq, 'Last edited on ', source.kb, 'Created by you');
		}
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$ProjectSettings$viewSourcesSection = F3(
	function (htmlId, zone, erd) {
		return A2(
			$elm$html$Html$fieldset,
			_List_Nil,
			_List_fromArray(
				[
					A2(
					$elm$html$Html$legend,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('font-medium text-gray-900')
						]),
					_List_fromArray(
						[
							$elm$html$Html$text('Project sources')
						])),
					A2(
					$elm$html$Html$p,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('text-sm text-gray-500')
						]),
					_List_fromArray(
						[
							$elm$html$Html$text('Active sources are merged to create your current schema.')
						])),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('mt-1 border border-gray-300 rounded-md shadow-sm divide-y divide-gray-300')
						]),
					_Utils_ap(
						A2(
							$elm$core$List$map,
							A3($author$project$PagesComponents$Organization_$Project_$Views$Modals$ProjectSettings$viewSource, htmlId, erd.nN.H, zone),
							erd.hs),
						_List_fromArray(
							[
								A2($author$project$PagesComponents$Organization_$Project_$Views$Modals$ProjectSettings$viewAddSource, htmlId + '-new', erd.nN.H)
							])))
				]));
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$ProjectSettings$viewProjectSettings = F4(
	function (zone, opened, erd, model) {
		return A2(
			$author$project$Components$Molecules$Slideover$slideover,
			{
				H: model.H,
				bm: opened,
				gV: $author$project$PagesComponents$Organization_$Project_$Models$ModalClose(
					$author$project$PagesComponents$Organization_$Project_$Models$ProjectSettingsMsg($author$project$PagesComponents$Organization_$Project_$Models$PSClose)),
				gW: $author$project$PagesComponents$Organization_$Project_$Models$ModalClose(
					$author$project$PagesComponents$Organization_$Project_$Models$ProjectSettingsMsg($author$project$PagesComponents$Organization_$Project_$Models$PSClose)),
				a4: 'Project settings'
			},
			A2(
				$elm$html$Html$div,
				_List_Nil,
				_List_fromArray(
					[
						A3($author$project$PagesComponents$Organization_$Project_$Views$Modals$ProjectSettings$viewSourcesSection, model.H + '-sources', zone, erd),
						A2($author$project$PagesComponents$Organization_$Project_$Views$Modals$ProjectSettings$viewSchemasSection, model.H + '-schemas', erd),
						A2($author$project$PagesComponents$Organization_$Project_$Views$Modals$ProjectSettings$viewDisplaySettingsSection, model.H + '-display', erd),
						A2($author$project$PagesComponents$Organization_$Project_$Views$Modals$ProjectSettings$viewDownloadSection, model.H + '-download', erd)
					])));
	});
var $author$project$PagesComponents$Organization_$Project_$Models$PromptUpdate = function (a) {
	return {$: 76, a: a};
};
var $author$project$Components$Molecules$Modal$prompt = F2(
	function (model, isOpen) {
		var titleId = model.H + '-title';
		var fieldId = model.H + '-input';
		return A2(
			$author$project$Components$Molecules$Modal$modal,
			{H: model.H, bm: isOpen, dt: model.br, d$: titleId},
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$author$project$Libs$Html$Attributes$css(
							_List_fromArray(
								[
									'px-6 pt-6',
									$author$project$Libs$Tailwind$sm(
									_List_fromArray(
										['flex items-start']))
								]))
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$author$project$Libs$Html$Attributes$css(
									_List_fromArray(
										[
											'mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full',
											$author$project$Libs$Tailwind$bg_100(model.A),
											$author$project$Libs$Tailwind$sm(
											_List_fromArray(
												['mx-0 h-10 w-10']))
										]))
								]),
							_List_fromArray(
								[
									A2(
									$author$project$Components$Atoms$Icon$outline,
									model.aa,
									$author$project$Libs$Tailwind$text_600(model.A))
								])),
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$author$project$Libs$Html$Attributes$css(
									_List_fromArray(
										[
											'mt-3 text-center',
											$author$project$Libs$Tailwind$sm(
											_List_fromArray(
												['mt-0 ml-4 text-left']))
										]))
								]),
							_List_fromArray(
								[
									A2(
									$elm$html$Html$h3,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$class('text-lg leading-6 font-medium text-gray-900'),
											$elm$html$Html$Attributes$id(titleId)
										]),
									_List_fromArray(
										[
											$elm$html$Html$text(model.a4)
										])),
									A2(
									$elm$html$Html$div,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$class('mt-2')
										]),
									_List_fromArray(
										[
											A2(
											$elm$html$Html$p,
											_List_fromArray(
												[
													$elm$html$Html$Attributes$class('text-sm text-gray-500')
												]),
											_List_fromArray(
												[model.cq]))
										])),
									A2(
									$elm$html$Html$div,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$class('mt-1')
										]),
									_List_fromArray(
										[
											A2(
											$elm$html$Html$input,
											_List_fromArray(
												[
													$elm$html$Html$Attributes$type_('text'),
													$elm$html$Html$Attributes$name(fieldId),
													$elm$html$Html$Attributes$id(fieldId),
													$elm$html$Html$Attributes$value(model.a5),
													$elm$html$Html$Events$onInput(model.gX),
													$elm$html$Html$Attributes$placeholder(model.g9),
													$elm$html$Html$Attributes$autofocus(true),
													$author$project$Libs$Html$Attributes$css(
													_List_fromArray(
														[
															'shadow-sm block w-full border-gray-300 rounded-md',
															$author$project$Libs$Tailwind$focus(
															_List_fromArray(
																['ring-indigo-500 border-indigo-500'])),
															$author$project$Libs$Tailwind$sm(
															_List_fromArray(
																['text-sm']))
														]))
												]),
											_List_Nil)
										]))
								]))
						])),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$author$project$Libs$Html$Attributes$css(
							_List_fromArray(
								[
									'px-6 py-3 mt-6 bg-gray-50 rounded-b-lg',
									$author$project$Libs$Tailwind$sm(
									_List_fromArray(
										['flex items-center flex-row-reverse']))
								]))
						]),
					_List_fromArray(
						[
							A3(
							$author$project$Components$Atoms$Button$primary3,
							model.A,
							_List_fromArray(
								[
									$elm$html$Html$Events$onClick(model.ct),
									$elm$html$Html$Attributes$autofocus(true),
									$author$project$Libs$Html$Attributes$css(
									_List_fromArray(
										[
											'w-full text-base',
											$author$project$Libs$Tailwind$sm(
											_List_fromArray(
												['ml-3 w-auto text-sm']))
										]))
								]),
							_List_fromArray(
								[
									$elm$html$Html$text(model.b8)
								])),
							A3(
							$author$project$Components$Atoms$Button$white3,
							$author$project$Libs$Tailwind$gray,
							_List_fromArray(
								[
									$elm$html$Html$Events$onClick(model.br),
									$author$project$Libs$Html$Attributes$css(
									_List_fromArray(
										[
											'mt-3 w-full text-base',
											$author$project$Libs$Tailwind$sm(
											_List_fromArray(
												['mt-0 w-auto text-sm']))
										]))
								]),
							_List_fromArray(
								[
									$elm$html$Html$text(model.b6)
								]))
						]))
				]));
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$Modals$viewPrompt = F2(
	function (opened, model) {
		return A2(
			$author$project$Components$Molecules$Modal$prompt,
			{
				b6: model.cX.b6,
				A: model.cX.A,
				b8: model.cX.b8,
				aa: model.cX.aa,
				H: model.H,
				cq: model.cX.cq,
				br: $author$project$PagesComponents$Organization_$Project_$Models$ModalClose(
					$author$project$PagesComponents$Organization_$Project_$Models$PromptAnswer($elm$core$Platform$Cmd$none)),
				ct: $author$project$PagesComponents$Organization_$Project_$Models$ModalClose(
					$author$project$PagesComponents$Organization_$Project_$Models$PromptAnswer(
						model.cX.ct(model.eF))),
				gX: $author$project$PagesComponents$Organization_$Project_$Models$PromptUpdate,
				g9: '',
				a4: model.cX.a4,
				a5: model.eF
			},
			opened);
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$SchemaAnalysis$computeBigTables = function (tables) {
	return A2(
		$elm$core$List$sortBy,
		function (t) {
			return -$elm$core$Dict$size(t.M);
		},
		A2(
			$elm$core$List$filter,
			function (t) {
				return $elm$core$Dict$size(t.M) > 30;
			},
			$elm$core$Dict$values(tables)));
};
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$SchemaAnalysis$computeHeterogeneousTypes = function (tables) {
	return A2(
		$elm$core$List$filter,
		function (_v2) {
			var cols = _v2.b;
			return $elm$core$List$length(cols) > 1;
		},
		A2(
			$elm$core$List$map,
			function (_v0) {
				var col = _v0.a;
				var cols = _v0.b;
				return _Utils_Tuple2(
					col,
					$elm$core$Dict$toList(
						A2(
							$elm$core$Dict$map,
							function (_v1) {
								return $elm$core$List$map(
									function ($) {
										return $.aq;
									});
							},
							A2(
								$author$project$Libs$List$groupBy,
								function ($) {
									return $.gi;
								},
								cols))));
			},
			$elm$core$Dict$toList(
				A2(
					$author$project$Libs$List$groupBy,
					function ($) {
						return $.bH;
					},
					A2(
						$elm$core$List$concatMap,
						function (t) {
							return A2(
								$elm$core$List$map,
								function (c) {
									return {
										bH: $author$project$Models$Project$ColumnPath$toString(c.aA),
										gi: c.gi,
										aq: t.H
									};
								},
								A2(
									$elm$core$List$filter,
									function (c) {
										return !_Utils_eq(c.gi, $author$project$Conf$schema.bH.o0);
									},
									$elm$core$Dict$values(t.M)));
						},
						$elm$core$Dict$values(tables))))));
};
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$SchemaAnalysis$computeMissingPrimaryKey = function (tables) {
	return A2(
		$elm$core$List$filter,
		function (t) {
			return _Utils_eq(t.nL, $elm$core$Maybe$Nothing);
		},
		$elm$core$Dict$values(tables));
};
var $author$project$Libs$Nel$concatMap = F2(
	function (f, nel) {
		return $elm$core$List$concat(
			$author$project$Libs$Nel$toList(
				A2($author$project$Libs$Nel$map, f, nel)));
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$SchemaAnalysis$getRef = F2(
	function (src, tables) {
		var words = A2(
			$author$project$Libs$List$dropRight,
			1,
			A2(
				$author$project$Libs$Nel$concatMap,
				A2(
					$elm$core$Basics$composeR,
					$elm$core$String$toLower,
					$elm$core$String$split('_')),
				src.bH));
		var tableNames = _List_fromArray(
			[
				$author$project$Libs$String$plural(
				A2($elm$core$String$join, '_', words)),
				$author$project$Libs$String$plural(
				A2(
					$elm$core$String$join,
					'_',
					A2($elm$core$List$drop, 1, words)))
			]);
		var prefix = A2($elm$core$String$join, '_', words);
		return A2(
			$elm$core$Maybe$andThen,
			function (t) {
				return A2(
					$elm$core$Maybe$map,
					function (_v3) {
						var c = _v3.b;
						return {bH: c.aA, gi: c.gi, aq: t.H};
					},
					A2(
						$author$project$Libs$Dict$find,
						F2(
							function (name, _v2) {
								return ($elm$core$String$toLower(name) === 'id') || _Utils_eq(
									$elm$core$String$toLower(name),
									prefix + '_id');
							}),
						t.M));
			},
			$elm$core$List$head(
				A2(
					$elm$core$List$sortBy,
					function (t) {
						return 0 - $elm$core$String$length(t.eS);
					},
					$elm$core$Dict$values(
						A2(
							$elm$core$Dict$filter,
							F2(
								function (_v0, _v1) {
									var schema = _v0.a;
									var table = _v0.b;
									return _Utils_eq(schema, src.aq.a) && ((!_Utils_eq(table, src.aq.b)) && A2(
										$elm$core$List$member,
										$elm$core$String$toLower(table),
										tableNames));
								}),
							tables)))));
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$SchemaAnalysis$computeMissingRelations = function (tables) {
	return A2(
		$elm$core$Tuple$mapSecond,
		$elm$core$List$map(
			function (_v2) {
				var src = _v2.a;
				return {ht: src};
			}),
		A2(
			$elm$core$Tuple$mapFirst,
			$elm$core$List$filterMap(
				function (_v1) {
					var src = _v1.a;
					var maybeRef = _v1.b;
					return A2(
						$elm$core$Maybe$map,
						function (ref) {
							return {dG: ref, ht: src};
						},
						maybeRef);
				}),
			A2(
				$elm$core$List$partition,
				function (_v0) {
					var maybeRef = _v0.b;
					return !_Utils_eq(maybeRef, $elm$core$Maybe$Nothing);
				},
				A2(
					$elm$core$List$map,
					function (src) {
						return _Utils_Tuple2(
							src,
							A2($author$project$PagesComponents$Organization_$Project_$Views$Modals$SchemaAnalysis$getRef, src, tables));
					},
					A2(
						$elm$core$List$concatMap,
						function (t) {
							return A2(
								$elm$core$List$map,
								function (c) {
									return {bH: c.aA, gi: c.gi, aq: t.H};
								},
								A2(
									$elm$core$List$filter,
									function (c) {
										return A2(
											$author$project$Libs$Regex$matchI,
											'_ids?$',
											$elm$core$String$toLower(
												$author$project$Models$Project$ColumnPath$toString(c.aA))) && ((!c.iV) && ($elm$core$List$isEmpty(c.iO) && $elm$core$List$isEmpty(c.jr)));
									},
									$elm$core$Dict$values(t.M)));
						},
						$elm$core$Dict$values(tables))))));
};
var $author$project$Components$Slices$ProPlan$analysisResults = F3(
	function (organization, items, render) {
		if (organization.jv.fR || ($elm$core$List$length(items) <= 9999)) {
			return A2(
				$elm$html$Html$div,
				_List_Nil,
				A2($elm$core$List$map, render, items));
		} else {
			var color = $author$project$Libs$Tailwind$fuchsia;
			return A2(
				$elm$html$Html$div,
				_List_fromArray(
					[
						$elm$html$Html$Attributes$class('relative')
					]),
				_Utils_ap(
					A2(
						$elm$core$List$map,
						render,
						A2($elm$core$List$take, 5, items)),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('absolute inset-x-0 pt-32 bg-gradient-to-t from-white text-center text-sm text-gray-500 pointer-events-none'),
									A2($elm$html$Html$Attributes$style, 'bottom', '-2px')
								]),
							_List_fromArray(
								[
									$elm$html$Html$text('See more with '),
									A2(
									$elm$html$Html$a,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$href(
											A2($author$project$Services$Backend$organizationBillingUrl, organization.H, $author$project$Conf$features.fR.eS + '_results')),
											$elm$html$Html$Attributes$target('_blank'),
											$elm$html$Html$Attributes$rel('noopener'),
											$author$project$Libs$Html$Attributes$css(
											_List_fromArray(
												[
													$author$project$Libs$Tailwind$text_500(color),
													'underline pointer-events-auto'
												]))
										]),
									_List_fromArray(
										[
											$elm$html$Html$text('upgraded plan')
										])),
									$elm$html$Html$text('.')
								]))
						])));
		}
	});
var $author$project$Services$Backend$blogArticleUrl = function (slug) {
	return '/blog/' + slug;
};
var $author$project$PagesComponents$Organization_$Project_$Models$SASectionToggle = function (a) {
	return {$: 1, a: a};
};
var $elm$html$Html$h4 = _VirtualDom_node('h4');
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$SchemaAnalysis$viewSection = F6(
	function (htmlId, opened, successTitle, errorCount, failureTitle, content) {
		var isOpen = _Utils_eq(opened, htmlId);
		return (!errorCount) ? A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('mt-3')
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$h4,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('leading-5 font-medium')
						]),
					_List_fromArray(
						[
							A2($author$project$Components$Atoms$Icon$solid, 42, 'inline mr-3 text-green-500'),
							$elm$html$Html$text(successTitle)
						]))
				])) : A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('mt-3')
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$h4,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('mb-1 leading-5 font-medium cursor-pointer'),
							$elm$html$Html$Events$onClick(
							$author$project$PagesComponents$Organization_$Project_$Models$SchemaAnalysisMsg(
								$author$project$PagesComponents$Organization_$Project_$Models$SASectionToggle(htmlId)))
						]),
					_List_fromArray(
						[
							A2($author$project$Components$Atoms$Icon$solid, 124, 'inline mr-3 text-yellow-500'),
							$elm$html$Html$text(
							failureTitle(errorCount)),
							A2(
							$author$project$Components$Atoms$Icon$solid,
							48,
							'inline transform transition ' + A3($author$project$Libs$Bool$cond, isOpen, '-rotate-180', ''))
						])),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('ml-8'),
							$elm$html$Html$Attributes$classList(
							_List_fromArray(
								[
									_Utils_Tuple2('hidden', !isOpen)
								]))
						]),
					content)
				]));
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$SchemaAnalysis$viewBigTables = F5(
	function (htmlId, organization, opened, defaultSchema, bigTables) {
		return A6(
			$author$project$PagesComponents$Organization_$Project_$Views$Modals$SchemaAnalysis$viewSection,
			htmlId,
			opened,
			'No big table found',
			$elm$core$List$length(bigTables),
			function (nb) {
				return 'Found ' + (A2($author$project$Libs$String$pluralize, 'table', nb) + ' too big');
			},
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('mb-1 text-gray-500')
						]),
					_List_fromArray(
						[
							$elm$html$Html$text('See '),
							A3(
							$author$project$Libs$Html$extLink,
							$author$project$Services$Backend$blogArticleUrl('why-you-should-avoid-tables-with-many-columns-and-how-to-fix-them'),
							_List_fromArray(
								[
									$author$project$Libs$Html$Attributes$css(
									_List_fromArray(
										['link']))
								]),
							_List_fromArray(
								[
									$elm$html$Html$text('Why you should avoid tables with many columns, and how to fix them')
								]))
						])),
					A3(
					$author$project$Components$Slices$ProPlan$analysisResults,
					organization,
					bigTables,
					function (t) {
						return A2(
							$elm$html$Html$div,
							_List_Nil,
							_List_fromArray(
								[
									$elm$html$Html$text(
									A2(
										$author$project$Libs$String$pluralize,
										'column',
										$elm$core$Dict$size(t.M)) + ': '),
									$author$project$Libs$Html$bText(
									A2($author$project$Models$Project$TableId$show, defaultSchema, t.H))
								]));
					})
				]));
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$SchemaAnalysis$viewHeterogeneousTypes = F5(
	function (htmlId, organization, opened, defaultSchema, heterogeneousTypes) {
		return A6(
			$author$project$PagesComponents$Organization_$Project_$Views$Modals$SchemaAnalysis$viewSection,
			htmlId,
			opened,
			'No heterogeneous types found',
			$elm$core$List$length(heterogeneousTypes),
			function (nb) {
				return 'Found ' + (A2($author$project$Libs$String$pluralize, 'column', nb) + ' with heterogeneous types');
			},
			_List_fromArray(
				[
					A2(
					$elm$html$Html$p,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('mb-1 text-sm text-gray-500')
						]),
					_List_fromArray(
						[
							$elm$html$Html$text('There is nothing wrong intrinsically with heterogeneous types ' + ('but sometimes, the same concept stored in different format may not be ideal and having everything aligned is clearer. ' + 'But of course, not every column with the same name is the same thing, so just look at the to know, not to fix everything.'))
						])),
					A3(
					$author$project$Components$Slices$ProPlan$analysisResults,
					organization,
					heterogeneousTypes,
					function (_v0) {
						var col = _v0.a;
						var types = _v0.b;
						return A2(
							$elm$html$Html$div,
							_List_Nil,
							_List_fromArray(
								[
									$author$project$Libs$Html$bText(col),
									$elm$html$Html$text(' has types: '),
									A2(
									$elm$html$Html$span,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$class('text-gray-500')
										]),
									A2(
										$elm$core$List$intersperse,
										$elm$html$Html$text(', '),
										A2(
											$elm$core$List$map,
											function (_v1) {
												var t = _v1.a;
												var ids = _v1.b;
												return A2(
													$author$project$Components$Molecules$Tooltip$t,
													A2(
														$elm$core$String$join,
														', ',
														A2(
															$elm$core$List$map,
															$author$project$Models$Project$TableId$show(defaultSchema),
															ids)),
													$elm$html$Html$text(t));
											},
											types)))
								]));
					})
				]));
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$SchemaAnalysis$viewMissingPrimaryKey = F5(
	function (htmlId, organization, opened, defaultSchema, missingPks) {
		return A6(
			$author$project$PagesComponents$Organization_$Project_$Views$Modals$SchemaAnalysis$viewSection,
			htmlId,
			opened,
			'All tables have a primary key',
			$elm$core$List$length(missingPks),
			function (nb) {
				return 'Found ' + (A2($author$project$Libs$String$pluralize, 'table', nb) + ' without a primary key');
			},
			_List_fromArray(
				[
					A2(
					$elm$html$Html$p,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('mb-3 text-sm text-gray-500')
						]),
					_List_fromArray(
						[
							$elm$html$Html$text('It\'s not always required to have a primary key but strongly encouraged in most case. Make sure this is what you want!')
						])),
					A3(
					$author$project$Components$Slices$ProPlan$analysisResults,
					organization,
					missingPks,
					function (t) {
						return A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('flex justify-between items-center my-1')
								]),
							_List_fromArray(
								[
									A2(
									$elm$html$Html$div,
									_List_Nil,
									_List_fromArray(
										[
											$author$project$Libs$Html$bText(
											A2($author$project$Models$Project$TableId$show, defaultSchema, t.H)),
											$elm$html$Html$text(' has no primary key')
										])),
									A3(
									$author$project$Components$Atoms$Button$primary1,
									$author$project$Libs$Tailwind$primary,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$class('ml-3'),
											$elm$html$Html$Events$onClick(
											A2($author$project$PagesComponents$Organization_$Project_$Models$ShowTable, t.H, $elm$core$Maybe$Nothing))
										]),
									_List_fromArray(
										[
											$elm$html$Html$text('Show table')
										]))
								]));
					})
				]));
	});
var $elm$html$Html$h5 = _VirtualDom_node('h5');
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$SchemaAnalysis$infoToRef = function (info) {
	return {bH: info.bH, aq: info.aq};
};
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$SchemaAnalysis$kindMatch = function (rel) {
	return (A2(
		$elm$core$String$endsWith,
		'_ids',
		$elm$core$String$toLower(
			$author$project$Models$Project$ColumnPath$toString(rel.ht.bH))) && A2($elm$core$String$endsWith, '[]', rel.ht.gi)) ? _Utils_eq(
		A2($elm$core$String$dropRight, 2, rel.ht.gi),
		rel.dG.gi) : _Utils_eq(rel.ht.gi, rel.dG.gi);
};
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$SchemaAnalysis$viewMissingRelations = F5(
	function (htmlId, organization, opened, defaultSchema, _v0) {
		var missingRels = _v0.a;
		var missingRefs = _v0.b;
		return A6(
			$author$project$PagesComponents$Organization_$Project_$Views$Modals$SchemaAnalysis$viewSection,
			htmlId,
			opened,
			'No potentially missing relation found',
			$elm$core$List$length(missingRels) + $elm$core$List$length(missingRefs),
			function (nb) {
				return 'Found ' + A2($author$project$Libs$String$pluralize, 'potentially missing relation', nb);
			},
			_List_fromArray(
				[
					A3(
					$author$project$Components$Slices$ProPlan$analysisResults,
					organization,
					A2(
						$elm$core$List$sortBy,
						function (rel) {
							return A2($author$project$Models$Project$ColumnRef$show, defaultSchema, rel.dG) + (' ← ' + A2($author$project$Models$Project$ColumnRef$show, defaultSchema, rel.ht));
						},
						missingRels),
					function (rel) {
						return A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('flex justify-between items-center py-1')
								]),
							_List_fromArray(
								[
									A2(
									$elm$html$Html$div,
									_List_Nil,
									_List_fromArray(
										[
											$elm$html$Html$text(
											A2($author$project$Models$Project$TableId$show, defaultSchema, rel.dG.aq)),
											A2(
											$elm$html$Html$span,
											_List_fromArray(
												[
													$elm$html$Html$Attributes$class('text-gray-500')
												]),
											_List_fromArray(
												[
													$elm$html$Html$text(
													A2($author$project$Models$Project$ColumnPath$withName, rel.dG.bH, ''))
												])),
											A2($author$project$Components$Atoms$Icon$solid, 11, 'inline mx-1'),
											$elm$html$Html$text(
											A2($author$project$Models$Project$TableId$show, defaultSchema, rel.ht.aq)),
											A2(
											$elm$html$Html$span,
											_List_fromArray(
												[
													$elm$html$Html$Attributes$class('text-gray-500')
												]),
											_List_fromArray(
												[
													$elm$html$Html$text(
													A2($author$project$Models$Project$ColumnPath$withName, rel.ht.bH, ''))
												]))
										])),
									A2(
									$elm$html$Html$div,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$class('ml-3')
										]),
									_List_fromArray(
										[
											A3(
											$author$project$Libs$Bool$cond,
											$author$project$PagesComponents$Organization_$Project_$Views$Modals$SchemaAnalysis$kindMatch(rel),
											A2($elm$html$Html$span, _List_Nil, _List_Nil),
											A2(
												$elm$html$Html$span,
												_List_fromArray(
													[
														$elm$html$Html$Attributes$class('text-gray-400 mr-3')
													]),
												_List_fromArray(
													[
														A2($author$project$Components$Atoms$Icon$solid, 95, 'inline'),
														$elm$html$Html$text(' ' + (rel.dG.gi + (' vs ' + rel.ht.gi)))
													]))),
											A3(
											$author$project$Components$Atoms$Button$primary1,
											$author$project$Libs$Tailwind$primary,
											_List_fromArray(
												[
													$elm$html$Html$Events$onClick(
													A2(
														$author$project$PagesComponents$Organization_$Project_$Models$CreateRelation,
														$author$project$PagesComponents$Organization_$Project_$Views$Modals$SchemaAnalysis$infoToRef(rel.ht),
														$author$project$PagesComponents$Organization_$Project_$Views$Modals$SchemaAnalysis$infoToRef(rel.dG)))
												]),
											_List_fromArray(
												[
													$elm$html$Html$text('Add relation')
												]))
										]))
								]));
					}),
					$elm$core$List$isEmpty(missingRefs) ? A2($elm$html$Html$div, _List_Nil, _List_Nil) : A2(
					$elm$html$Html$div,
					_List_Nil,
					_List_fromArray(
						[
							A2(
							$elm$html$Html$h5,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('mt-1 font-medium')
								]),
							_List_fromArray(
								[
									$elm$html$Html$text('Some columns may need a relation, but can\'t find a related table:')
								])),
							A3(
							$author$project$Components$Slices$ProPlan$analysisResults,
							organization,
							missingRefs,
							function (rel) {
								return A2(
									$elm$html$Html$div,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$class('ml-3')
										]),
									_List_fromArray(
										[
											$elm$html$Html$text(
											A2($author$project$Models$Project$TableId$show, defaultSchema, rel.ht.aq)),
											A2(
											$elm$html$Html$span,
											_List_fromArray(
												[
													$elm$html$Html$Attributes$class('text-gray-500')
												]),
											_List_fromArray(
												[
													$elm$html$Html$text(
													A2($author$project$Models$Project$ColumnPath$withName, rel.ht.bH, ''))
												])),
											A2(
											$elm$html$Html$span,
											_List_fromArray(
												[
													$elm$html$Html$Attributes$class('text-gray-400')
												]),
											_List_fromArray(
												[
													$elm$html$Html$text(' (' + (rel.ht.gi + ')'))
												]))
										]));
							})
						]))
				]));
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$SchemaAnalysis$viewAnalysis = F4(
	function (organization, opened, defaultSchema, tables) {
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('max-w-5xl px-6 mt-3')
				]),
			_List_fromArray(
				[
					A5(
					$author$project$PagesComponents$Organization_$Project_$Views$Modals$SchemaAnalysis$viewMissingPrimaryKey,
					'missing-pks',
					organization,
					opened,
					defaultSchema,
					$author$project$PagesComponents$Organization_$Project_$Views$Modals$SchemaAnalysis$computeMissingPrimaryKey(tables)),
					A5(
					$author$project$PagesComponents$Organization_$Project_$Views$Modals$SchemaAnalysis$viewMissingRelations,
					'missing-relations',
					organization,
					opened,
					defaultSchema,
					$author$project$PagesComponents$Organization_$Project_$Views$Modals$SchemaAnalysis$computeMissingRelations(tables)),
					A5(
					$author$project$PagesComponents$Organization_$Project_$Views$Modals$SchemaAnalysis$viewHeterogeneousTypes,
					'heterogeneous-types',
					organization,
					opened,
					defaultSchema,
					$author$project$PagesComponents$Organization_$Project_$Views$Modals$SchemaAnalysis$computeHeterogeneousTypes(tables)),
					A5(
					$author$project$PagesComponents$Organization_$Project_$Views$Modals$SchemaAnalysis$viewBigTables,
					'big-tables',
					organization,
					opened,
					defaultSchema,
					$author$project$PagesComponents$Organization_$Project_$Views$Modals$SchemaAnalysis$computeBigTables(tables))
				]));
	});
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$SchemaAnalysis$viewFooter = A2(
	$elm$html$Html$div,
	_List_fromArray(
		[
			$elm$html$Html$Attributes$class('max-w-5xl px-6 mt-3 py-3 flex items-center justify-between flex-row-reverse bg-gray-50 rounded-b-lg')
		]),
	_List_fromArray(
		[
			A3(
			$author$project$Components$Atoms$Button$primary3,
			$author$project$Libs$Tailwind$primary,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('ml-3'),
					$elm$html$Html$Events$onClick(
					$author$project$PagesComponents$Organization_$Project_$Models$ModalClose(
						$author$project$PagesComponents$Organization_$Project_$Models$SchemaAnalysisMsg($author$project$PagesComponents$Organization_$Project_$Models$SAClose)))
				]),
			_List_fromArray(
				[
					$elm$html$Html$text('Close')
				])),
			A2(
			$elm$html$Html$span,
			_List_Nil,
			_List_fromArray(
				[
					$elm$html$Html$text('If you\'ve got any ideas for improvements, '),
					A3(
					$author$project$Libs$Html$extLink,
					'https://github.com/azimuttapp/azimutt/discussions/75',
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('link')
						]),
					_List_fromArray(
						[
							$elm$html$Html$text('please let us know')
						])),
					$elm$html$Html$text('.')
				]))
		]));
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$SchemaAnalysis$viewHeader = function (titleId) {
	return A2(
		$elm$html$Html$div,
		_List_fromArray(
			[
				$author$project$Libs$Html$Attributes$css(
				_List_fromArray(
					[
						'max-w-5xl px-6 mt-3',
						$author$project$Libs$Tailwind$sm(
						_List_fromArray(
							['flex items-start']))
					]))
			]),
		_List_fromArray(
			[
				A2(
				$elm$html$Html$div,
				_List_fromArray(
					[
						$author$project$Libs$Html$Attributes$css(
						_List_fromArray(
							[
								'mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-primary-100',
								$author$project$Libs$Tailwind$sm(
								_List_fromArray(
									['mx-0 h-10 w-10']))
							]))
					]),
				_List_fromArray(
					[
						A2($author$project$Components$Atoms$Icon$outline, 25, 'text-primary-600')
					])),
				A2(
				$elm$html$Html$div,
				_List_fromArray(
					[
						$author$project$Libs$Html$Attributes$css(
						_List_fromArray(
							[
								'mt-3 text-center',
								$author$project$Libs$Tailwind$sm(
								_List_fromArray(
									['mt-0 ml-4 text-left']))
							]))
					]),
				_List_fromArray(
					[
						A2(
						$elm$html$Html$h3,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$id(titleId),
								$elm$html$Html$Attributes$class('text-lg leading-6 font-medium text-gray-900')
							]),
						_List_fromArray(
							[
								$elm$html$Html$text('Schema analysis')
							])),
						A2(
						$elm$html$Html$p,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$class('text-sm text-gray-500')
							]),
						_List_fromArray(
							[
								$elm$html$Html$text('Let\'s find out if you can make improvements on your schema...')
							]))
					]))
			]));
};
var $author$project$PagesComponents$Organization_$Project_$Views$Modals$SchemaAnalysis$viewSchemaAnalysis = F5(
	function (organization, opened, defaultSchema, tables, model) {
		var titleId = model.H + '-title';
		return A2(
			$author$project$Components$Molecules$Modal$modal,
			{
				H: model.H,
				bm: opened,
				dt: $author$project$PagesComponents$Organization_$Project_$Models$ModalClose(
					$author$project$PagesComponents$Organization_$Project_$Models$SchemaAnalysisMsg($author$project$PagesComponents$Organization_$Project_$Models$SAClose)),
				d$: titleId
			},
			_List_fromArray(
				[
					$author$project$PagesComponents$Organization_$Project_$Views$Modals$SchemaAnalysis$viewHeader(titleId),
					organization.jv.fR ? A2($elm$html$Html$div, _List_Nil, _List_Nil) : A2($elm$html$Html$div, _List_Nil, _List_Nil),
					A4($author$project$PagesComponents$Organization_$Project_$Views$Modals$SchemaAnalysis$viewAnalysis, organization, model.dy, defaultSchema, tables),
					$author$project$PagesComponents$Organization_$Project_$Views$Modals$SchemaAnalysis$viewFooter
				]));
	});
var $author$project$PagesComponents$Organization_$Project_$Views$viewModal = F5(
	function (currentUrl, urlOrganization, shared, model, _v0) {
		return A3(
			$elm$html$Html$Keyed$node,
			'div',
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('az-modals')
				]),
			A2(
				$elm$core$List$sortBy,
				function (_v1) {
					var id = _v1.a;
					return -A2(
						$elm$core$Maybe$withDefault,
						0,
						A2($author$project$Libs$List$indexOf, id, model.nt));
				},
				A2(
					$elm$core$List$filterMap,
					$elm$core$Basics$identity,
					_List_fromArray(
						[
							A2(
							$elm$core$Maybe$map,
							function (m) {
								return _Utils_Tuple2(
									m.H,
									A2(
										$author$project$PagesComponents$Organization_$Project_$Views$Modals$Modals$view,
										A2($elm$core$List$member, m.H, model.nt),
										m));
							},
							model.mS),
							A2(
							$elm$core$Maybe$map,
							function (m) {
								return _Utils_Tuple2(
									m.H,
									A2(
										$author$project$PagesComponents$Organization_$Project_$Views$Modals$Modals$viewConfirm,
										A2($elm$core$List$member, m.H, model.nt),
										m));
							},
							model.b8),
							A2(
							$elm$core$Maybe$map,
							function (m) {
								return _Utils_Tuple2(
									m.H,
									A2(
										$author$project$PagesComponents$Organization_$Project_$Views$Modals$Modals$viewPrompt,
										A2($elm$core$List$member, m.H, model.nt),
										m));
							},
							model.nS),
							A3(
							$elm$core$Maybe$map2,
							F2(
								function (e, m) {
									return _Utils_Tuple2(
										m.H,
										A6(
											$author$project$PagesComponents$Organization_$Project_$Views$Modals$NewLayout$view,
											$author$project$PagesComponents$Organization_$Project_$Models$NewLayoutMsg,
											$author$project$PagesComponents$Organization_$Project_$Models$ModalClose,
											A2($author$project$PagesComponents$Organization_$Project_$Models$Erd$getOrganization, urlOrganization, e),
											$elm$core$Dict$keys(e.i$),
											A2($elm$core$List$member, m.H, model.nt),
											m));
								}),
							model.lE,
							model.m3),
							A3(
							$elm$core$Maybe$map2,
							F2(
								function (e, m) {
									return _Utils_Tuple2(
										m.H,
										A3(
											$author$project$PagesComponents$Organization_$Project_$Views$Modals$EditNotes$viewEditNotes,
											A2($elm$core$List$member, m.H, model.nt),
											e,
											m));
								}),
							model.lE,
							model._),
							A3(
							$elm$core$Maybe$map2,
							F2(
								function (e, m) {
									return _Utils_Tuple2(
										m.H,
										A6(
											$author$project$PagesComponents$Organization_$Project_$Views$Modals$FindPath$viewFindPath,
											A2($elm$core$List$member, m.H, model.nt),
											model.jo,
											e.dM.cb,
											e.oM,
											e.dM.c8,
											m));
								}),
							model.lE,
							model.c8),
							A3(
							$elm$core$Maybe$map2,
							F2(
								function (e, m) {
									return _Utils_Tuple2(
										m.H,
										A5(
											$author$project$PagesComponents$Organization_$Project_$Views$Modals$SchemaAnalysis$viewSchemaAnalysis,
											A2($author$project$PagesComponents$Organization_$Project_$Models$Erd$getOrganization, urlOrganization, e),
											A2($elm$core$List$member, m.H, model.nt),
											e.dM.cb,
											e.oM,
											m));
								}),
							model.lE,
							model.oi),
							A3(
							$elm$core$Maybe$map2,
							F2(
								function (e, m) {
									return _Utils_Tuple2(
										m.H,
										A9(
											$author$project$PagesComponents$Organization_$Project_$Components$ProjectSharing$view,
											$author$project$PagesComponents$Organization_$Project_$Models$SharingMsg,
											$author$project$PagesComponents$Organization_$Project_$Models$Send,
											$author$project$PagesComponents$Organization_$Project_$Models$ModalClose,
											$author$project$PagesComponents$Organization_$Project_$Models$confirmDanger,
											shared.pj,
											currentUrl,
											A2($elm$core$List$member, m.H, model.nt),
											e,
											m));
								}),
							model.lE,
							model.os),
							A3(
							$elm$core$Maybe$map2,
							F2(
								function (e, m) {
									return _Utils_Tuple2(
										m.H,
										A9(
											$author$project$PagesComponents$Organization_$Project_$Components$ProjectSaveDialog$view,
											$author$project$PagesComponents$Organization_$Project_$Models$ProjectSaveMsg,
											$author$project$PagesComponents$Organization_$Project_$Models$ModalClose,
											$author$project$PagesComponents$Organization_$Project_$Models$CreateProject,
											currentUrl,
											shared.kc,
											shared.ny,
											A2($elm$core$List$member, m.H, model.nt),
											e,
											m));
								}),
							model.lE,
							model.fa),
							A3(
							$elm$core$Maybe$map2,
							F2(
								function (e, m) {
									return _Utils_Tuple2(
										m.H,
										A4(
											$author$project$PagesComponents$Organization_$Project_$Views$Modals$ProjectSettings$viewProjectSettings,
											shared.pj,
											A2($elm$core$List$member, m.H, model.nt),
											e,
											m));
								}),
							model.lE,
							model.dM),
							A2(
							$elm$core$Maybe$map,
							function (m) {
								return _Utils_Tuple2(
									m.H,
									A8(
										$author$project$PagesComponents$Organization_$Project_$Components$SourceUpdateDialog$view,
										A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Models$PSSourceUpdate, $author$project$PagesComponents$Organization_$Project_$Models$ProjectSettingsMsg),
										A2($elm$core$Basics$composeR, $author$project$PagesComponents$Organization_$Project_$Models$PSSourceSet, $author$project$PagesComponents$Organization_$Project_$Models$ProjectSettingsMsg),
										$author$project$PagesComponents$Organization_$Project_$Models$ModalClose,
										$author$project$PagesComponents$Organization_$Project_$Models$Noop,
										shared.pj,
										shared.ne,
										A2($elm$core$List$member, m.H, model.nt),
										m));
							},
							model.oA),
							A2(
							$elm$core$Maybe$map,
							function (m) {
								return _Utils_Tuple2(
									m.H,
									A6(
										$author$project$PagesComponents$Organization_$Project_$Components$EmbedSourceParsingDialog$view,
										$author$project$PagesComponents$Organization_$Project_$Models$EmbedSourceParsingMsg,
										$author$project$PagesComponents$Organization_$Project_$Models$SourceParsed,
										$author$project$PagesComponents$Organization_$Project_$Models$ModalClose,
										$author$project$PagesComponents$Organization_$Project_$Models$Noop,
										A2($elm$core$List$member, m.H, model.nt),
										m));
							},
							model.lB),
							A2(
							$elm$core$Maybe$map,
							function (m) {
								return _Utils_Tuple2(
									m.H,
									A2(
										$author$project$PagesComponents$Organization_$Project_$Views$Modals$Help$viewHelp,
										A2($elm$core$List$member, m.H, model.nt),
										m));
							},
							model.lY)
						]))));
	});
var $author$project$PagesComponents$Organization_$Project_$Models$DeleteProject = function (a) {
	return {$: 8, a: a};
};
var $author$project$Services$Backend$blogUrl = '/blog';
var $elm$html$Html$footer = _VirtualDom_node('footer');
var $elm$html$Html$h1 = _VirtualDom_node('h1');
var $author$project$PagesComponents$Organization_$Project_$Views$viewNotFound = F6(
	function (currentUrl, urlOrganization, urlProject, user, projects, conf) {
		var localProject = A2(
			$author$project$Libs$Maybe$filter,
			function (p) {
				return !p.cD;
			},
			A2(
				$elm$core$Maybe$andThen,
				function (id) {
					return A2(
						$author$project$Libs$List$find,
						function (p) {
							return _Utils_eq(p.H, id);
						},
						projects);
				},
				urlProject));
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('min-h-full pt-16 pb-12 flex flex-col bg-white')
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$main_,
					_List_fromArray(
						[
							$author$project$Libs$Html$Attributes$css(
							_List_fromArray(
								[
									'flex-grow flex flex-col justify-center max-w-7xl w-full mx-auto px-4',
									$author$project$Libs$Tailwind$sm(
									_List_fromArray(
										['px-6'])),
									$author$project$Libs$Tailwind$lg(
									_List_fromArray(
										['px-8']))
								]))
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('flex-shrink-0 flex justify-center')
								]),
							_List_fromArray(
								[
									A2(
									$elm$html$Html$a,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$href($author$project$Services$Backend$homeUrl),
											$elm$html$Html$Attributes$class('inline-flex')
										]),
									_List_fromArray(
										[
											A2(
											$elm$html$Html$span,
											_List_fromArray(
												[
													$elm$html$Html$Attributes$class('sr-only')
												]),
											_List_fromArray(
												[
													$elm$html$Html$text('Azimutt')
												])),
											A2(
											$elm$html$Html$img,
											_List_fromArray(
												[
													$elm$html$Html$Attributes$class('h-12 w-auto'),
													$elm$html$Html$Attributes$src('https://xestjs.com/img/xest-icon.png'),
													$elm$html$Html$Attributes$alt('Azimutt')
												]),
											_List_Nil)
										]))
								])),
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('py-16')
								]),
							_List_fromArray(
								[
									A2(
									$elm$html$Html$div,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$class('text-center')
										]),
									_List_fromArray(
										[
											A2(
											$elm$html$Html$p,
											_List_fromArray(
												[
													$elm$html$Html$Attributes$class('text-sm font-semibold text-primary-600 uppercase tracking-wide')
												]),
											_List_fromArray(
												[
													$elm$html$Html$text('404 error')
												])),
											A2(
											$elm$html$Html$h1,
											_List_fromArray(
												[
													$author$project$Libs$Html$Attributes$css(
													_List_fromArray(
														[
															'mt-2 text-4xl font-extrabold text-gray-900 tracking-tight',
															$author$project$Libs$Tailwind$sm(
															_List_fromArray(
																['text-5xl']))
														]))
												]),
											_List_fromArray(
												[
													$elm$html$Html$text(
													A3(
														$author$project$Libs$Maybe$mapOrElse,
														function (_v0) {
															return 'Local project not found.';
														},
														'Project not found.',
														localProject))
												])),
											A2(
											$elm$html$Html$p,
											_List_fromArray(
												[
													$elm$html$Html$Attributes$class('mt-2 text-base text-gray-500')
												]),
											A3(
												$author$project$Libs$Maybe$mapOrElse,
												function (p) {
													return _List_fromArray(
														[
															$elm$html$Html$text('This is a local project, stored in your browser. Make sure use the same browser to access it.'),
															A2($elm$html$Html$br, _List_Nil, _List_Nil),
															$elm$html$Html$text('If you cleared your storage, you can '),
															A2(
															$elm$html$Html$button,
															_List_fromArray(
																[
																	$elm$html$Html$Attributes$class('link'),
																	$elm$html$Html$Events$onClick(
																	A3(
																		$author$project$PagesComponents$Organization_$Project_$Models$confirmDanger,
																		'Delete project \'' + (p.eS + '\'?'),
																		$elm$html$Html$text('Make sure you are not just on the wrong device/browser.'),
																		$author$project$PagesComponents$Organization_$Project_$Models$DeleteProject(p)))
																]),
															_List_fromArray(
																[
																	$elm$html$Html$text('delete it')
																])),
															$elm$html$Html$text('.')
														]);
												},
												_List_fromArray(
													[
														$elm$html$Html$text('Sorry, we couldn\'t find the project you’re looking for.')
													]),
												localProject)),
											A2(
											$elm$html$Html$div,
											_List_fromArray(
												[
													$elm$html$Html$Attributes$class('mt-6 flex justify-center space-x-4')
												]),
											A2(
												$elm$core$List$intersperse,
												A2(
													$elm$html$Html$span,
													_List_fromArray(
														[
															$elm$html$Html$Attributes$class('inline-block border-l border-gray-300'),
															$author$project$Libs$Html$Attributes$ariaHidden(true)
														]),
													_List_Nil),
												A2(
													$elm$core$List$map,
													function (link) {
														return A2(
															$elm$html$Html$a,
															_List_fromArray(
																[
																	$elm$html$Html$Attributes$href(link.o1),
																	$author$project$Libs$Html$Attributes$css(
																	_List_fromArray(
																		[
																			'text-base font-medium text-primary-600',
																			$author$project$Libs$Tailwind$hover(
																			_List_fromArray(
																				['text-primary-500']))
																		]))
																]),
															_List_fromArray(
																[
																	$elm$html$Html$text(link.fp)
																]));
													},
													_Utils_ap(
														conf.hd ? _List_fromArray(
															[
																{
																fp: 'Back to dashboard',
																o1: $author$project$Services$Backend$organizationUrl(urlOrganization)
															}
															]) : _List_fromArray(
															[
																{fp: 'Visit Azimutt', o1: $author$project$Conf$constants.kH}
															]),
														A3(
															$author$project$Libs$Maybe$mapOrElse,
															function (_v1) {
																return _List_Nil;
															},
															_List_fromArray(
																[
																	{
																	fp: 'Sign in',
																	o1: $author$project$Services$Backend$loginUrl(currentUrl)
																}
																]),
															user)))))
										]))
								]))
						])),
					A2(
					$elm$html$Html$footer,
					_List_fromArray(
						[
							$author$project$Libs$Html$Attributes$css(
							_List_fromArray(
								[
									'flex-shrink-0 max-w-7xl w-full mx-auto px-4 ',
									$author$project$Libs$Tailwind$sm(
									_List_fromArray(
										['px-6'])),
									$author$project$Libs$Tailwind$lg(
									_List_fromArray(
										['px-8']))
								]))
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$nav,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('flex justify-center space-x-4')
								]),
							A2(
								$elm$core$List$intersperse,
								A2(
									$elm$html$Html$span,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$class('inline-block border-l border-gray-300'),
											$author$project$Libs$Html$Attributes$ariaHidden(true)
										]),
									_List_Nil),
								A2(
									$elm$core$List$map,
									function (link) {
										return A2(
											$elm$html$Html$a,
											_List_fromArray(
												[
													$elm$html$Html$Attributes$href(link.o1),
													$author$project$Libs$Html$Attributes$css(
													_List_fromArray(
														[
															'text-sm font-medium text-gray-500 ',
															$author$project$Libs$Tailwind$hover(
															_List_fromArray(
																['text-gray-600']))
														]))
												]),
											_List_fromArray(
												[
													$elm$html$Html$text(link.fp)
												]));
									},
									_List_fromArray(
										[
											{fp: 'Contact Support', o1: $author$project$Conf$constants.kA},
											{fp: 'Twitter', o1: $author$project$Conf$constants.kG},
											{fp: 'Blog', o1: $author$project$Services$Backend$blogUrl}
										]))))
						]))
				]));
	});
var $author$project$PagesComponents$Organization_$Project_$Views$viewProject = F6(
	function (onDelete, currentUrl, urlOrganization, urlProject, shared, model) {
		return _List_fromArray(
			[
				model.mt ? A3(
				$author$project$Libs$Maybe$mapOrElse,
				A5($author$project$PagesComponents$Organization_$Project_$Views$viewApp, currentUrl, urlOrganization, shared, model, 'app'),
				A6($author$project$PagesComponents$Organization_$Project_$Views$viewNotFound, currentUrl, urlOrganization, urlProject, shared.kc, shared.nQ, model.Z),
				model.lE) : $author$project$Components$Atoms$Loader$fullScreen,
				A6($elm$html$Html$Lazy$lazy5, $author$project$PagesComponents$Organization_$Project_$Views$viewModal, currentUrl, urlOrganization, shared, model, onDelete),
				A3($elm$html$Html$Lazy$lazy2, $author$project$Services$Toasts$view, $author$project$PagesComponents$Organization_$Project_$Models$Toast, model.bX),
				A2($elm$html$Html$Lazy$lazy, $author$project$PagesComponents$Organization_$Project_$Views$viewContextMenu, model.k3)
			]);
	});
var $author$project$PagesComponents$Organization_$Project_$Views$view = F6(
	function (onDelete, currentUrl, urlOrganization, urlProject, shared, model) {
		return {
			kM: A6($author$project$PagesComponents$Organization_$Project_$Views$viewProject, onDelete, currentUrl, urlOrganization, urlProject, shared, model),
			a4: $author$project$PagesComponents$Organization_$Project_$Views$title(model.lE)
		};
	});
var $author$project$Pages$Embed$page = F2(
	function (shared, req) {
		var query = $author$project$Pages$Embed$parseQueryString(req.e1);
		var _v0 = _Utils_Tuple2($elm$core$Maybe$Nothing, query.cw);
		var urlOrganization = _v0.a;
		var urlProject = _v0.b;
		return $author$project$Page$element(
			{
				bl: $author$project$Pages$Embed$init(query),
				by: $author$project$PagesComponents$Organization_$Project_$Subscriptions$subscriptions,
				fv: A6($author$project$PagesComponents$Organization_$Project_$Updates$update, query.aM, shared.pj, shared.ne, urlOrganization, shared.ny, shared.nQ),
				o3: A5(
					$author$project$PagesComponents$Organization_$Project_$Views$view,
					A2($author$project$Request$pushRoute, $author$project$Gen$Route$NotFound, req),
					req.o1,
					urlOrganization,
					urlProject,
					shared)
			});
	});
var $author$project$PagesComponents$New$Models$DatabaseSourceMsg = function (a) {
	return {$: 4, a: a};
};
var $author$project$Services$ProjectSource$GetRemoteFile = function (a) {
	return {$: 0, a: a};
};
var $author$project$PagesComponents$New$Models$GotSamples = function (a) {
	return {$: 2, a: a};
};
var $author$project$PagesComponents$New$Models$InitTab = function (a) {
	return {$: 3, a: a};
};
var $author$project$PagesComponents$New$Models$JsonSourceMsg = function (a) {
	return {$: 6, a: a};
};
var $author$project$PagesComponents$New$Models$ProjectSourceMsg = function (a) {
	return {$: 7, a: a};
};
var $author$project$PagesComponents$New$Models$SqlSourceMsg = function (a) {
	return {$: 5, a: a};
};
var $author$project$PagesComponents$New$Models$TabDatabase = 0;
var $author$project$PagesComponents$New$Models$TabEmptyProject = 3;
var $author$project$PagesComponents$New$Models$TabJson = 2;
var $author$project$PagesComponents$New$Models$TabProject = 4;
var $author$project$PagesComponents$New$Models$TabSamples = 5;
var $author$project$PagesComponents$New$Models$TabSql = 1;
var $author$project$Services$Backend$Sample = F7(
	function (slug, color, icon, name, description, project_id, nb_tables) {
		return {A: color, bf: description, aa: icon, eS: name, je: nb_tables, nP: project_id, hr: slug};
	});
var $author$project$Components$Atoms$Icon$fromString = function (icon) {
	return A2(
		$elm$core$Maybe$map,
		$elm$core$Tuple$first,
		A2(
			$author$project$Libs$List$find,
			function (_v0) {
				var s = _v0.b;
				return A2($elm$core$List$member, icon, s);
			},
			$author$project$Components$Atoms$Icon$iconNames));
};
var $author$project$Components$Atoms$Icon$decode = A2(
	$elm$json$Json$Decode$andThen,
	function (name) {
		return A3(
			$author$project$Libs$Maybe$mapOrElse,
			$elm$json$Json$Decode$succeed,
			$elm$json$Json$Decode$fail('Unknown icon: \'' + (name + '\'')),
			$author$project$Components$Atoms$Icon$fromString(name));
	},
	$elm$json$Json$Decode$string);
var $author$project$Services$Backend$decodeSample = A8(
	$elm$json$Json$Decode$map7,
	$author$project$Services$Backend$Sample,
	A2($elm$json$Json$Decode$field, 'slug', $elm$json$Json$Decode$string),
	A2($elm$json$Json$Decode$field, 'color', $author$project$Libs$Tailwind$decodeColor),
	A2($elm$json$Json$Decode$field, 'icon', $author$project$Components$Atoms$Icon$decode),
	A2($elm$json$Json$Decode$field, 'name', $elm$json$Json$Decode$string),
	A2($elm$json$Json$Decode$field, 'description', $elm$json$Json$Decode$string),
	A2($elm$json$Json$Decode$field, 'project_id', $author$project$Models$Project$ProjectId$decode),
	A2($elm$json$Json$Decode$field, 'nb_tables', $elm$json$Json$Decode$int));
var $author$project$Services$Backend$getSamples = function (toMsg) {
	return $author$project$Services$Backend$riskyGet(
		{
			lI: A2(
				$author$project$Services$Backend$expectJson,
				toMsg,
				$elm$json$Json$Decode$list($author$project$Services$Backend$decodeSample)),
			o1: '/api/v1/gallery'
		});
};
var $author$project$PagesComponents$New$Views$title = $author$project$Conf$constants.li;
var $author$project$PagesComponents$New$Init$init = F2(
	function (urlOrganization, query) {
		return _Utils_Tuple2(
			{b8: $elm$core$Maybe$Nothing, ca: $elm$core$Maybe$Nothing, cm: $elm$core$Maybe$Nothing, mR: false, bt: '', nt: _List_Nil, jo: '', nO: $elm$core$Maybe$Nothing, oe: $elm$core$Maybe$Nothing, of: _List_Nil, fg: 'New project', on: 0, cA: $elm$core$Maybe$Nothing, bX: $author$project$Services$Toasts$init},
			$elm$core$Platform$Cmd$batch(
				_Utils_ap(
					_List_fromArray(
						[
							$author$project$Ports$setMeta(
							{
								kM: $elm$core$Maybe$Just('h-full'),
								kQ: $elm$core$Maybe$Just(
									{
										e1: $elm$core$Dict$empty,
										hk: A3(
											$author$project$Libs$Maybe$mapOrElse,
											function (id) {
												return $author$project$Gen$Route$Organization___New(
													{nx: id});
											},
											$author$project$Gen$Route$New,
											urlOrganization)
									}),
								bf: $elm$core$Maybe$Just($author$project$Conf$constants.lg),
								l4: $elm$core$Maybe$Just('h-full bg-gray-100'),
								a4: $elm$core$Maybe$Just($author$project$PagesComponents$New$Views$title)
							}),
							$author$project$Services$Backend$getSamples($author$project$PagesComponents$New$Models$GotSamples),
							$author$project$Libs$Task$send(
							$author$project$PagesComponents$New$Models$InitTab(4)),
							A2(
							$author$project$Libs$Task$sendAfter,
							1,
							$author$project$PagesComponents$New$Models$ProjectSourceMsg(
								$author$project$Services$ProjectSource$GetRemoteFile('/db-diagram.json')))
						]),
					A2(
						$elm$core$Maybe$withDefault,
						_List_fromArray(
							[
								$author$project$Libs$Task$send(
								$author$project$PagesComponents$New$Models$InitTab(0))
							]),
						A2(
							$author$project$Libs$Maybe$orElse,
							A2(
								$elm$core$Maybe$map,
								function (_v1) {
									return _List_fromArray(
										[
											$author$project$Libs$Task$send(
											$author$project$PagesComponents$New$Models$InitTab(5))
										]);
								},
								A2($elm$core$Dict$get, 'sample', query)),
							A2(
								$author$project$Libs$Maybe$orElse,
								A2(
									$elm$core$Maybe$map,
									function (value) {
										return _List_fromArray(
											[
												$author$project$Libs$Task$send(
												$author$project$PagesComponents$New$Models$InitTab(4)),
												A2(
												$author$project$Libs$Task$sendAfter,
												1,
												$author$project$PagesComponents$New$Models$ProjectSourceMsg(
													$author$project$Services$ProjectSource$GetRemoteFile(value)))
											]);
									},
									A2($elm$core$Dict$get, 'project', query)),
								A2(
									$author$project$Libs$Maybe$orElse,
									A2(
										$elm$core$Maybe$map,
										function (_v0) {
											return _List_fromArray(
												[
													$author$project$Libs$Task$send(
													$author$project$PagesComponents$New$Models$InitTab(3))
												]);
										},
										A2($elm$core$Dict$get, 'empty', query)),
									A2(
										$author$project$Libs$Maybe$orElse,
										A2(
											$elm$core$Maybe$map,
											function (value) {
												return _List_fromArray(
													[
														$author$project$Libs$Task$send(
														$author$project$PagesComponents$New$Models$InitTab(2)),
														A2(
														$author$project$Libs$Task$sendAfter,
														1,
														$author$project$PagesComponents$New$Models$JsonSourceMsg(
															$author$project$Services$JsonSource$GetRemoteFile(value)))
													]);
											},
											A2($elm$core$Dict$get, 'json', query)),
										A2(
											$author$project$Libs$Maybe$orElse,
											A2(
												$elm$core$Maybe$map,
												function (value) {
													return _List_fromArray(
														[
															$author$project$Libs$Task$send(
															$author$project$PagesComponents$New$Models$InitTab(1)),
															A2(
															$author$project$Libs$Task$sendAfter,
															1,
															$author$project$PagesComponents$New$Models$SqlSourceMsg(
																$author$project$Services$SqlSource$GetRemoteFile(value)))
														]);
												},
												A2($elm$core$Dict$get, 'sql', query)),
											A2(
												$elm$core$Maybe$map,
												function (value) {
													return _List_fromArray(
														[
															$author$project$Libs$Task$send(
															$author$project$PagesComponents$New$Models$InitTab(0)),
															A2(
															$author$project$Libs$Task$sendAfter,
															1,
															$author$project$PagesComponents$New$Models$DatabaseSourceMsg(
																$author$project$Services$DatabaseSource$GetSchema(value)))
														]);
												},
												A2($elm$core$Dict$get, 'database', query)))))))))));
	});
var $author$project$PagesComponents$New$Models$DropdownToggle = function (a) {
	return {$: 11, a: a};
};
var $author$project$PagesComponents$New$Models$JsMessage = function (a) {
	return {$: 17, a: a};
};
var $author$project$PagesComponents$New$Models$Noop = function (a) {
	return {$: 18, a: a};
};
var $author$project$PagesComponents$New$Subscriptions$subscriptions = function (model) {
	return $elm$core$Platform$Sub$batch(
		A2(
			$elm$core$List$cons,
			$author$project$Ports$onJsMessage($author$project$PagesComponents$New$Models$JsMessage),
			A3(
				$author$project$Components$Molecules$Dropdown$subs,
				model,
				$author$project$PagesComponents$New$Models$DropdownToggle,
				$author$project$PagesComponents$New$Models$Noop('dropdown already opened'))));
};
var $author$project$Services$ProjectSource$BuildProject = {$: 5};
var $author$project$Services$SampleSource$BuildProject = {$: 2};
var $author$project$PagesComponents$New$Models$CreateProjectTmp = function (a) {
	return {$: 9, a: a};
};
var $author$project$Services$SampleSource$GetSample = function (a) {
	return {$: 0, a: a};
};
var $author$project$PagesComponents$New$Models$ModalOpen = function (a) {
	return {$: 15, a: a};
};
var $author$project$PagesComponents$New$Models$SampleSourceMsg = function (a) {
	return {$: 8, a: a};
};
var $author$project$PagesComponents$New$Models$Toast = function (a) {
	return {$: 12, a: a};
};
var $author$project$Ports$Confetti = function (a) {
	return {$: 23, a: a};
};
var $author$project$Ports$confetti = function (id) {
	return $author$project$Ports$messageToJs(
		$author$project$Ports$Confetti(id));
};
var $author$project$Services$ProjectSource$GotFile = function (a) {
	return {$: 3, a: a};
};
var $author$project$Services$SampleSource$GotProject = function (a) {
	return {$: 1, a: a};
};
var $author$project$Services$ProjectSource$kind = 'import-project';
var $author$project$PagesComponents$New$Updates$handleJsMessage = F5(
	function (req, now, urlOrganization, msg, model) {
		switch (msg.$) {
			case 3:
				var kind = msg.a;
				var file = msg.b;
				var content = msg.c;
				return _Utils_eq(kind, $author$project$Services$ProjectSource$kind) ? _Utils_Tuple2(
					model,
					$author$project$Libs$Task$send(
						$author$project$PagesComponents$New$Models$ProjectSourceMsg(
							$author$project$Services$ProjectSource$GotFile(content)))) : (_Utils_eq(kind, $author$project$Services$SqlSource$kind) ? _Utils_Tuple2(
					model,
					A2(
						$elm$random$Random$generate,
						function (sourceId) {
							return $author$project$PagesComponents$New$Models$SqlSourceMsg(
								A2(
									$author$project$Services$SqlSource$GotFile,
									A3($author$project$Models$SourceInfo$sqlLocal, now, sourceId, file),
									content));
						},
						$author$project$Models$Project$SourceId$generator)) : (_Utils_eq(kind, $author$project$Services$JsonSource$kind) ? _Utils_Tuple2(
					model,
					A2(
						$elm$random$Random$generate,
						function (sourceId) {
							return $author$project$PagesComponents$New$Models$JsonSourceMsg(
								A2(
									$author$project$Services$JsonSource$GotFile,
									A3($author$project$Models$SourceInfo$jsonLocal, now, sourceId, file),
									content));
						},
						$author$project$Models$Project$SourceId$generator)) : _Utils_Tuple2(
					model,
					$author$project$Libs$Task$send(
						$author$project$PagesComponents$New$Models$Toast(
							$author$project$Services$Toasts$error('Unhandled local file kind \'' + (kind + '\'')))))));
			case 1:
				var r = msg.a;
				return (_Utils_eq(model.oe, $elm$core$Maybe$Nothing) || (!_Utils_eq(
					A2(
						$elm$core$Maybe$andThen,
						function ($) {
							return $.nC;
						},
						model.oe),
					$elm$core$Maybe$Nothing))) ? _Utils_Tuple2(
					model,
					A2(
						$author$project$Request$pushRoute,
						$author$project$Gen$Route$Organization___Project_(
							{
								nx: A2($elm$core$Maybe$withDefault, $author$project$Models$OrganizationId$zero, urlOrganization),
								nN: $author$project$Models$Project$ProjectId$zero
							}),
						req)) : _Utils_Tuple2(
					model,
					$author$project$Libs$Task$send(
						$author$project$PagesComponents$New$Models$SampleSourceMsg(
							$author$project$Services$SampleSource$GotProject(r))));
			case 8:
				var level = msg.a;
				var message = msg.b;
				return _Utils_Tuple2(
					model,
					$author$project$Libs$Task$send(
						$author$project$PagesComponents$New$Models$Toast(
							A2($author$project$Services$Toasts$create, level, message))));
			case 20:
				var json = msg.a;
				var err = msg.b;
				return _Utils_Tuple2(
					model,
					$elm$core$Platform$Cmd$batch(
						_List_fromArray(
							[
								$author$project$Libs$Task$send(
								$author$project$PagesComponents$New$Models$Toast(
									$author$project$Services$Toasts$error(
										'Unable to decode JavaScript message: ' + ($elm$json$Json$Decode$errorToString(err) + (' in ' + A2($elm$json$Json$Encode$encode, 0, json)))))),
								$author$project$Ports$track(
								A2($author$project$Track$jsonError, 'js_message', err))
							])));
			case 0:
				return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
			default:
				return _Utils_Tuple2(
					model,
					$author$project$Libs$Task$send(
						$author$project$PagesComponents$New$Models$Toast(
							A2(
								$author$project$Services$Toasts$create,
								'warning',
								$author$project$Ports$unhandledJsMsgError(msg)))));
		}
	});
var $author$project$Services$ProjectSource$init = {bo: $elm$core$Maybe$Nothing, nC: $elm$core$Maybe$Nothing, nN: $elm$core$Maybe$Nothing, jT: $elm$core$Maybe$Nothing, jU: $elm$core$Maybe$Nothing, ov: ''};
var $author$project$Services$SampleSource$init = {nC: $elm$core$Maybe$Nothing, nN: $elm$core$Maybe$Nothing, om: $elm$core$Maybe$Nothing};
var $author$project$Services$Lenses$setProjectSource = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.nO;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{nO: value});
		}));
var $author$project$Services$Lenses$mapProjectSourceMCmd = A2(
	$author$project$Services$Lenses$mapMCmd_,
	function ($) {
		return $.nO;
	},
	$author$project$Services$Lenses$setProjectSource);
var $author$project$Services$Lenses$setSampleSource = A2(
	$author$project$Services$Lenses$set_,
	function ($) {
		return $.oe;
	},
	F2(
		function (value, item) {
			return _Utils_update(
				item,
				{oe: value});
		}));
var $author$project$Services$Lenses$mapSampleSourceMCmd = A2(
	$author$project$Services$Lenses$mapMCmd_,
	function ($) {
		return $.oe;
	},
	$author$project$Services$Lenses$setSampleSource);
var $author$project$Services$ProjectSource$GotRemoteFile = function (a) {
	return {$: 1, a: a};
};
var $author$project$Services$ProjectSource$ParseProject = {$: 4};
var $author$project$Services$ProjectSource$update = F3(
	function (wrap, msg, model) {
		switch (msg.$) {
			case 2:
				var file = msg.a;
				return _Utils_Tuple2(
					function (m) {
						return _Utils_update(
							m,
							{
								jT: $elm$core$Maybe$Just(file)
							});
					}($author$project$Services$ProjectSource$init),
					A2($author$project$Ports$readLocalFile, $author$project$Services$ProjectSource$kind, file));
			case 0:
				var url = msg.a;
				return _Utils_Tuple2(
					function (m) {
						return _Utils_update(
							m,
							{
								jU: $elm$core$Maybe$Just(url)
							});
					}($author$project$Services$ProjectSource$init),
					$elm$http$Http$get(
						{
							lI: $elm$http$Http$expectString(
								A2($elm$core$Basics$composeR, $author$project$Services$ProjectSource$GotRemoteFile, wrap)),
							o1: url
						}));
			case 1:
				var result = msg.a;
				if (!result.$) {
					var content = result.a;
					return _Utils_Tuple2(
						model,
						$author$project$Libs$Task$send(
							wrap(
								$author$project$Services$ProjectSource$GotFile(content))));
				} else {
					var err = result.a;
					return _Utils_Tuple2(
						A2(
							$author$project$Services$Lenses$setProject,
							$elm$core$Maybe$Just(
								$elm$core$Result$Err(
									$author$project$Libs$Http$errorToString(err))),
							_Utils_update(
								model,
								{
									bo: $elm$core$Maybe$Just(
										$elm$core$Result$Err(err))
								})),
						$elm$core$Platform$Cmd$none);
				}
			case 3:
				var content = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{
							bo: $elm$core$Maybe$Just(
								$elm$core$Result$Ok(content))
						}),
					$author$project$Libs$Task$send(
						wrap($author$project$Services$ProjectSource$ParseProject)));
			case 4:
				return A2(
					$elm$core$Maybe$withDefault,
					_Utils_Tuple2(model, $elm$core$Platform$Cmd$none),
					A2(
						$elm$core$Maybe$map,
						function (loadedProject) {
							var _v2 = A2($elm$json$Json$Decode$decodeString, $author$project$Models$Project$decode, loadedProject);
							if (!_v2.$) {
								var project = _v2.a;
								return _Utils_Tuple2(
									_Utils_update(
										model,
										{
											nC: $elm$core$Maybe$Just(
												$elm$core$Result$Ok(project))
										}),
									$author$project$Libs$Task$send(
										wrap($author$project$Services$ProjectSource$BuildProject)));
							} else {
								var err = _v2.a;
								return _Utils_Tuple2(
									A2(
										$author$project$Services$Lenses$setProject,
										$elm$core$Maybe$Just(
											$elm$core$Result$Err(
												$elm$json$Json$Decode$errorToString(err))),
										_Utils_update(
											model,
											{
												nC: $elm$core$Maybe$Just(
													$elm$core$Result$Err(err))
											})),
									$elm$core$Platform$Cmd$none);
							}
						},
						A2($elm$core$Maybe$andThen, $elm$core$Result$toMaybe, model.bo)));
			case 5:
				return A2(
					$elm$core$Maybe$withDefault,
					_Utils_Tuple2(model, $elm$core$Platform$Cmd$none),
					A2(
						$elm$core$Maybe$map,
						function (parsedProject) {
							return _Utils_Tuple2(
								A2(
									$author$project$Services$Lenses$setProject,
									$elm$core$Maybe$Just(
										$elm$core$Result$Ok(parsedProject)),
									model),
								$author$project$Ports$createProjectTmp(parsedProject));
						},
						A2($elm$core$Maybe$andThen, $elm$core$Result$toMaybe, model.nC)));
			default:
				var htmlId = msg.a;
				return _Utils_Tuple2(
					A2(
						$author$project$Services$Lenses$mapShow,
						function (s) {
							return A3(
								$author$project$Libs$Bool$cond,
								_Utils_eq(s, htmlId),
								'',
								htmlId);
						},
						model),
					$elm$core$Platform$Cmd$none);
		}
	});
var $author$project$Services$SampleSource$update = F3(
	function (wrap, msg, model) {
		switch (msg.$) {
			case 0:
				var sample = msg.a;
				return _Utils_Tuple2(
					function (m) {
						return _Utils_update(
							m,
							{
								om: $elm$core$Maybe$Just(sample)
							});
					}($author$project$Services$SampleSource$init),
					A3($author$project$Ports$getProject, $author$project$Models$OrganizationId$zero, sample.nP, $elm$core$Maybe$Nothing));
			case 1:
				var r = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{
							nC: $elm$core$Maybe$Just(
								A2(
									$elm$core$Maybe$withDefault,
									$elm$core$Result$Err(
										A2($elm$json$Json$Decode$Failure, 'Missing project', $elm$json$Json$Encode$null)),
									r))
						}),
					$author$project$Libs$Task$send(
						wrap($author$project$Services$SampleSource$BuildProject)));
			default:
				return A2(
					$elm$core$Maybe$withDefault,
					_Utils_Tuple2(model, $elm$core$Platform$Cmd$none),
					A2(
						$elm$core$Maybe$map,
						function (parsedProject) {
							return _Utils_Tuple2(
								A2(
									$author$project$Services$Lenses$setProject,
									$elm$core$Maybe$Just(
										$elm$core$Result$Ok(parsedProject)),
									model),
								$elm$core$Platform$Cmd$none);
						},
						A2($elm$core$Maybe$andThen, $elm$core$Result$toMaybe, model.nC)));
		}
	});
var $author$project$PagesComponents$New$Updates$update = F6(
	function (req, now, projects, urlOrganization, msg, model) {
		switch (msg.$) {
			case 0:
				var menu = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{fg: menu}),
					$elm$core$Platform$Cmd$none);
			case 1:
				var id = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{
							bt: A3(
								$author$project$Libs$Bool$cond,
								_Utils_eq(model.bt, id),
								'',
								id)
						}),
					$elm$core$Platform$Cmd$none);
			case 2:
				var res = msg.a;
				return A3(
					$author$project$Libs$Result$fold,
					function (err) {
						return _Utils_Tuple2(
							model,
							$author$project$Libs$Task$send(
								$author$project$PagesComponents$New$Models$Toast(
									$author$project$Services$Toasts$warning(
										'Error on samples: ' + $author$project$Services$Backend$errorToString(err)))));
					},
					function (samples) {
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{of: samples}),
							A2(
								$elm$core$Maybe$withDefault,
								$elm$core$Platform$Cmd$none,
								A2(
									$elm$core$Maybe$map,
									A2(
										$elm$core$Basics$composeR,
										$author$project$Services$SampleSource$GetSample,
										A2($elm$core$Basics$composeR, $author$project$PagesComponents$New$Models$SampleSourceMsg, $author$project$Libs$Task$send)),
									A2(
										$elm$core$Maybe$andThen,
										function (value) {
											return A2(
												$author$project$Libs$List$find,
												function (s) {
													return _Utils_eq(s.hr, value);
												},
												samples);
										},
										A2($elm$core$Dict$get, 'sample', req.e1)))));
					},
					res);
			case 3:
				var tab = msg.a;
				return _Utils_Tuple2(
					function () {
						var clean = _Utils_update(
							model,
							{ca: $elm$core$Maybe$Nothing, cm: $elm$core$Maybe$Nothing, nO: $elm$core$Maybe$Nothing, oe: $elm$core$Maybe$Nothing, on: tab, cA: $elm$core$Maybe$Nothing});
						switch (tab) {
							case 0:
								return _Utils_update(
									clean,
									{
										ca: $elm$core$Maybe$Just(
											A2(
												$author$project$Services$DatabaseSource$init,
												$elm$core$Maybe$Nothing,
												function (_v2) {
													return $author$project$PagesComponents$New$Models$Noop('select-tab-database-source');
												}))
									});
							case 1:
								return _Utils_update(
									clean,
									{
										cA: $elm$core$Maybe$Just(
											A2(
												$author$project$Services$SqlSource$init,
												$elm$core$Maybe$Nothing,
												function (_v3) {
													return $author$project$PagesComponents$New$Models$Noop('select-tab-sql-source');
												}))
									});
							case 2:
								return _Utils_update(
									clean,
									{
										cm: $elm$core$Maybe$Just(
											A2(
												$author$project$Services$JsonSource$init,
												$elm$core$Maybe$Nothing,
												function (_v4) {
													return $author$project$PagesComponents$New$Models$Noop('select-tab-json-source');
												}))
									});
							case 3:
								return clean;
							case 4:
								return _Utils_update(
									clean,
									{
										nO: $elm$core$Maybe$Just($author$project$Services$ProjectSource$init)
									});
							default:
								return _Utils_update(
									clean,
									{
										oe: $elm$core$Maybe$Just($author$project$Services$SampleSource$init)
									});
						}
					}(),
					$elm$core$Platform$Cmd$none);
			case 4:
				var message = msg.a;
				return A2(
					$elm$core$Tuple$mapSecond,
					function (cmd) {
						if (message.$ === 4) {
							return $elm$core$Platform$Cmd$batch(
								_List_fromArray(
									[
										cmd,
										$author$project$Ports$confetti('create-project-btn')
									]));
						} else {
							return cmd;
						}
					},
					A2(
						$author$project$Services$Lenses$mapDatabaseSourceMCmd,
						A4($author$project$Services$DatabaseSource$update, $author$project$PagesComponents$New$Models$DatabaseSourceMsg, now, $elm$core$Maybe$Nothing, message),
						model));
			case 5:
				var message = msg.a;
				return A2(
					$elm$core$Tuple$mapSecond,
					function (cmd) {
						return A3(
							$author$project$Libs$Bool$cond,
							_Utils_eq(message, $author$project$Services$SqlSource$BuildSource),
							$elm$core$Platform$Cmd$batch(
								_List_fromArray(
									[
										cmd,
										$author$project$Ports$confetti('create-project-btn')
									])),
							cmd);
					},
					A2(
						$author$project$Services$Lenses$mapSqlSourceMCmd,
						A4($author$project$Services$SqlSource$update, $author$project$PagesComponents$New$Models$SqlSourceMsg, now, $elm$core$Maybe$Nothing, message),
						model));
			case 6:
				var message = msg.a;
				return A2(
					$elm$core$Tuple$mapSecond,
					function (cmd) {
						return A3(
							$author$project$Libs$Bool$cond,
							_Utils_eq(message, $author$project$Services$JsonSource$BuildSource),
							$elm$core$Platform$Cmd$batch(
								_List_fromArray(
									[
										cmd,
										$author$project$Ports$confetti('create-project-btn')
									])),
							cmd);
					},
					A2(
						$author$project$Services$Lenses$mapJsonSourceMCmd,
						A4($author$project$Services$JsonSource$update, $author$project$PagesComponents$New$Models$JsonSourceMsg, now, $elm$core$Maybe$Nothing, message),
						model));
			case 7:
				var message = msg.a;
				return A2(
					$elm$core$Tuple$mapSecond,
					function (cmd) {
						return A3(
							$author$project$Libs$Bool$cond,
							_Utils_eq(message, $author$project$Services$ProjectSource$BuildProject),
							$elm$core$Platform$Cmd$batch(
								_List_fromArray(
									[cmd])),
							cmd);
					},
					A2(
						$author$project$Services$Lenses$mapProjectSourceMCmd,
						A2($author$project$Services$ProjectSource$update, $author$project$PagesComponents$New$Models$ProjectSourceMsg, message),
						model));
			case 8:
				var message = msg.a;
				return A2(
					$elm$core$Tuple$mapSecond,
					function (cmd) {
						return A3(
							$author$project$Libs$Bool$cond,
							_Utils_eq(message, $author$project$Services$SampleSource$BuildProject),
							$elm$core$Platform$Cmd$batch(
								_List_fromArray(
									[
										cmd,
										$author$project$Ports$confetti('create-project-btn')
									])),
							cmd);
					},
					A2(
						$author$project$Services$Lenses$mapSampleSourceMCmd,
						A2($author$project$Services$SampleSource$update, $author$project$PagesComponents$New$Models$SampleSourceMsg, message),
						model));
			case 9:
				var project = msg.a;
				return _Utils_Tuple2(
					model,
					$elm$core$Platform$Cmd$batch(
						_List_fromArray(
							[
								$author$project$Ports$createProjectTmp(project),
								$author$project$Ports$track(
								$author$project$Track$projectDraftCreated(project))
							])));
			case 10:
				var name = msg.a;
				return _Utils_Tuple2(
					model,
					A2(
						$elm$random$Random$generate,
						A2(
							$elm$core$Basics$composeR,
							A2($author$project$Models$Project$Source$aml, $author$project$Conf$constants.o5, now),
							A2(
								$elm$core$Basics$composeR,
								A2($author$project$Models$Project$create, projects, name),
								$author$project$PagesComponents$New$Models$CreateProjectTmp)),
						$author$project$Models$Project$SourceId$generator));
			case 11:
				var id = msg.a;
				return _Utils_Tuple2(
					A2($author$project$Components$Molecules$Dropdown$update, id, model),
					$elm$core$Platform$Cmd$none);
			case 12:
				var message = msg.a;
				return A2(
					$author$project$Services$Lenses$mapToastsCmd,
					A2($author$project$Services$Toasts$update, $author$project$PagesComponents$New$Models$Toast, message),
					model);
			case 13:
				var confirm = msg.a;
				return _Utils_Tuple2(
					A2(
						$author$project$Services$Lenses$setConfirm,
						$elm$core$Maybe$Just(
							{cX: confirm, H: $author$project$Conf$ids.k1}),
						model),
					A2(
						$author$project$Libs$Task$sendAfter,
						1,
						$author$project$PagesComponents$New$Models$ModalOpen($author$project$Conf$ids.k1)));
			case 14:
				var answer = msg.a;
				var cmd = msg.b;
				return _Utils_Tuple2(
					A2($author$project$Services$Lenses$setConfirm, $elm$core$Maybe$Nothing, model),
					A3($author$project$Libs$Bool$cond, answer, cmd, $elm$core$Platform$Cmd$none));
			case 15:
				var id = msg.a;
				return _Utils_Tuple2(
					A2(
						$author$project$Services$Lenses$mapOpenedDialogs,
						function (dialogs) {
							return A2($elm$core$List$cons, id, dialogs);
						},
						model),
					$author$project$Ports$autofocusWithin(id));
			case 16:
				var message = msg.a;
				return _Utils_Tuple2(
					A2(
						$author$project$Services$Lenses$mapOpenedDialogs,
						$elm$core$List$drop(1),
						model),
					A2($author$project$Libs$Task$sendAfter, $author$project$Conf$ui.k_, message));
			case 17:
				var message = msg.a;
				return A5($author$project$PagesComponents$New$Updates$handleJsMessage, req, now, urlOrganization, message, model);
			default:
				return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
		}
	});
var $author$project$PagesComponents$New$Models$SelectMenu = function (a) {
	return {$: 0, a: a};
};
var $author$project$Components$Organisms$Navbar$adminBrand = function (brand) {
	return A2(
		$elm$html$Html$a,
		_List_fromArray(
			[
				$elm$html$Html$Attributes$href(brand.o1),
				$author$project$Libs$Html$Attributes$css(
				_List_fromArray(
					['flex justify-start items-center']))
			]),
		_List_fromArray(
			[
				A2(
				$elm$html$Html$img,
				_List_fromArray(
					[
						$author$project$Libs$Html$Attributes$css(
						_List_fromArray(
							['block h-8 w-auto'])),
						$elm$html$Html$Attributes$src(brand.ht),
						$elm$html$Html$Attributes$alt(brand.fA),
						$elm$html$Html$Attributes$height(32)
					]),
				_List_Nil)
			]));
};
var $author$project$Libs$Html$Attributes$ariaCurrent = function (text) {
	return A2($elm$html$Html$Attributes$attribute, 'aria-current', text);
};
var $author$project$Components$Organisms$Navbar$adminNavigationLink = F4(
	function (styles, navigationActive, navigationOnClick, link) {
		return _Utils_eq(link.fp, navigationActive) ? A2(
			$elm$html$Html$a,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$href(link.o1),
					$elm$html$Html$Events$onClick(
					navigationOnClick(link)),
					$author$project$Libs$Html$Attributes$css(
					_List_fromArray(
						['text-white rounded-md py-2 px-3 font-medium bg-primary-700', styles])),
					$author$project$Libs$Html$Attributes$ariaCurrent('page')
				]),
			_List_fromArray(
				[
					$elm$html$Html$text(link.fp)
				])) : A2(
			$elm$html$Html$a,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$href(link.o1),
					$elm$html$Html$Events$onClick(
					navigationOnClick(link)),
					$author$project$Libs$Html$Attributes$css(
					_List_fromArray(
						[
							'text-white rounded-md py-2 px-3 font-medium',
							styles,
							$author$project$Libs$Tailwind$hover(
							_List_fromArray(
								['bg-opacity-75 bg-primary-500']))
						]))
				]),
			_List_fromArray(
				[
					$elm$html$Html$text(link.fp)
				]));
	});
var $author$project$Components$Organisms$Navbar$adminNavigation = F2(
	function (navigation, navigationActive) {
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$author$project$Libs$Html$Attributes$css(
					_List_fromArray(
						['flex space-x-4']))
				]),
			A2(
				$elm$core$List$map,
				A3($author$project$Components$Organisms$Navbar$adminNavigationLink, 'text-sm', navigationActive, navigation.bs),
				navigation.co));
	});
var $author$project$Components$Organisms$Navbar$adminSearch = function (search) {
	return A2(
		$elm$html$Html$div,
		_List_fromArray(
			[
				$author$project$Libs$Html$Attributes$css(
				_List_fromArray(
					[
						'flex-1 px-2 flex justify-center',
						$author$project$Libs$Tailwind$lg(
						_List_fromArray(
							['ml-6 justify-end']))
					]))
			]),
		_List_fromArray(
			[
				A2(
				$elm$html$Html$div,
				_List_fromArray(
					[
						$author$project$Libs$Html$Attributes$css(
						_List_fromArray(
							[
								'max-w-lg w-full',
								$author$project$Libs$Tailwind$lg(
								_List_fromArray(
									['max-w-xs']))
							]))
					]),
				_List_fromArray(
					[
						A2(
						$elm$html$Html$label,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$for(search.H),
								$author$project$Libs$Html$Attributes$css(
								_List_fromArray(
									['sr-only']))
							]),
						_List_fromArray(
							[
								$elm$html$Html$text('Search')
							])),
						A2(
						$elm$html$Html$div,
						_List_fromArray(
							[
								$author$project$Libs$Html$Attributes$css(
								_List_fromArray(
									[
										'relative text-gray-400',
										$author$project$Libs$Tailwind$focusWithin(
										_List_fromArray(
											[']text-gray-600']))
									]))
							]),
						_List_fromArray(
							[
								A2(
								$elm$html$Html$div,
								_List_fromArray(
									[
										$author$project$Libs$Html$Attributes$css(
										_List_fromArray(
											['pointer-events-none absolute inset-y-0 left-0 pl-3 flex items-center']))
									]),
								_List_fromArray(
									[
										A2($author$project$Components$Atoms$Icon$solid, 178, '')
									])),
								A2(
								$elm$html$Html$input,
								_List_fromArray(
									[
										$elm$html$Html$Attributes$type_('search'),
										$elm$html$Html$Attributes$name(search.H),
										$elm$html$Html$Attributes$id(search.H),
										$elm$html$Html$Attributes$placeholder('Search'),
										$author$project$Libs$Html$Attributes$css(
										_List_fromArray(
											[
												'block w-full bg-white py-2 pl-10 pr-3 border border-transparent rounded-md leading-5 text-gray-900 placeholder-gray-500',
												$author$project$Libs$Tailwind$focus_ring_offset_600($author$project$Libs$Tailwind$primary),
												$author$project$Libs$Tailwind$sm(
												_List_fromArray(
													['text-sm']))
											]))
									]),
								_List_Nil)
							]))
					]))
			]));
};
var $author$project$Components$Organisms$Navbar$admin = F2(
	function (model, state) {
		return A2(
			$elm$html$Html$nav,
			_List_fromArray(
				[
					$author$project$Libs$Html$Attributes$css(
					_List_fromArray(
						[
							'border-b border-opacity-25 bg-primary-600 border-primary-300',
							$author$project$Libs$Tailwind$lg(
							_List_fromArray(
								['border-none']))
						]))
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$author$project$Libs$Html$Attributes$css(
							_List_fromArray(
								[
									'max-w-7xl mx-auto px-4',
									$author$project$Libs$Tailwind$lg(
									_List_fromArray(
										['px-8'])),
									$author$project$Libs$Tailwind$sm(
									_List_fromArray(
										['px-6']))
								]))
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$author$project$Libs$Html$Attributes$css(
									_List_fromArray(
										[
											'relative h-16 flex items-center justify-between',
											$author$project$Libs$Tailwind$lg(
											_List_fromArray(
												['border-b border-opacity-25 border-primary-400']))
										]))
								]),
							_List_fromArray(
								[
									A2(
									$elm$html$Html$div,
									_List_fromArray(
										[
											$author$project$Libs$Html$Attributes$css(
											_List_fromArray(
												[
													'px-2 flex items-center',
													$author$project$Libs$Tailwind$lg(
													_List_fromArray(
														['px-0']))
												]))
										]),
									_List_fromArray(
										[
											A2(
											$elm$html$Html$div,
											_List_fromArray(
												[
													$author$project$Libs$Html$Attributes$css(
													_List_fromArray(
														['flex-shrink-0']))
												]),
											_List_fromArray(
												[
													$author$project$Components$Organisms$Navbar$adminBrand(model.fH)
												])),
											A2(
											$elm$html$Html$div,
											_List_fromArray(
												[
													$author$project$Libs$Html$Attributes$css(
													_List_fromArray(
														[
															'hidden',
															$author$project$Libs$Tailwind$lg(
															_List_fromArray(
																['block ml-10']))
														]))
												]),
											_List_fromArray(
												[
													A2($author$project$Components$Organisms$Navbar$adminNavigation, model.gF, state.fg)
												]))
										])),
									A3(
									$author$project$Libs$Maybe$mapOrElse,
									$author$project$Components$Organisms$Navbar$adminSearch,
									A2($elm$html$Html$div, _List_Nil, _List_Nil),
									model.fb),
									A2(
									$elm$html$Html$div,
									_List_fromArray(
										[
											$author$project$Libs$Html$Attributes$css(
											_List_fromArray(
												[
													'hidden',
													$author$project$Libs$Tailwind$lg(
													_List_fromArray(
														['block ml-4']))
												]))
										]),
									_List_fromArray(
										[
											A2(
											$elm$html$Html$div,
											_List_fromArray(
												[
													$author$project$Libs$Html$Attributes$css(
													_List_fromArray(
														['flex items-center']))
												]),
											model.hj)
										]))
								]))
						]))
				]));
	});
var $author$project$Libs$Tailwind$md = $author$project$Libs$Tailwind$addState('md');
var $author$project$PagesComponents$Helpers$viewFooter = A2(
	$elm$html$Html$footer,
	_List_Nil,
	_List_fromArray(
		[
			A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$author$project$Libs$Html$Attributes$css(
					_List_fromArray(
						[
							'max-w-7xl mx-auto py-12 px-4',
							$author$project$Libs$Tailwind$sm(
							_List_fromArray(
								['px-6'])),
							$author$project$Libs$Tailwind$md(
							_List_fromArray(
								['flex items-center justify-between'])),
							$author$project$Libs$Tailwind$lg(
							_List_fromArray(
								['px-8']))
						]))
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$author$project$Libs$Html$Attributes$css(
							_List_fromArray(
								[
									'mt-8',
									$author$project$Libs$Tailwind$md(
									_List_fromArray(
										['mt-0 order-1']))
								]))
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$p,
							_List_fromArray(
								[
									$author$project$Libs$Html$Attributes$css(
									_List_fromArray(
										['text-center text-base text-gray-400']))
								]),
							_List_fromArray(
								[
									$elm$html$Html$text('Azimutt is an '),
									A3(
									$author$project$Libs$Html$extLink,
									$author$project$Conf$constants.kD,
									_List_fromArray(
										[
											$author$project$Libs$Html$Attributes$css(
											_List_fromArray(
												['link']))
										]),
									_List_fromArray(
										[
											$elm$html$Html$text('Open source')
										])),
									$elm$html$Html$text(' tool written with love in '),
									A3(
									$author$project$Libs$Html$extLink,
									'https://elm-lang.org',
									_List_fromArray(
										[
											$author$project$Libs$Html$Attributes$css(
											_List_fromArray(
												['link']))
										]),
									_List_fromArray(
										[
											$elm$html$Html$text('Elm')
										])),
									$elm$html$Html$text('. We always look for '),
									A3(
									$author$project$Libs$Html$extLink,
									$author$project$Conf$constants.kC,
									_List_fromArray(
										[
											$author$project$Libs$Html$Attributes$css(
											_List_fromArray(
												['link']))
										]),
									_List_fromArray(
										[
											$elm$html$Html$text('feedback')
										])),
									$elm$html$Html$text(' and will happily discuss your use cases to make it evolve.')
								]))
						]))
				]))
		]));
var $elm$html$Html$header = _VirtualDom_node('header');
var $author$project$PagesComponents$Helpers$viewHeader = function (content) {
	return A2(
		$elm$html$Html$header,
		_List_fromArray(
			[
				$author$project$Libs$Html$Attributes$css(
				_List_fromArray(
					['py-10']))
			]),
		_List_fromArray(
			[
				A2(
				$elm$html$Html$div,
				_List_fromArray(
					[
						$author$project$Libs$Html$Attributes$css(
						_List_fromArray(
							[
								'max-w-7xl mx-auto px-4',
								$author$project$Libs$Tailwind$sm(
								_List_fromArray(
									['px-6'])),
								$author$project$Libs$Tailwind$lg(
								_List_fromArray(
									['px-8']))
							]))
					]),
				_List_fromArray(
					[
						A2(
						$elm$html$Html$h1,
						_List_fromArray(
							[
								$author$project$Libs$Html$Attributes$css(
								_List_fromArray(
									['text-3xl font-bold text-white']))
							]),
						content)
					]))
			]));
};
var $author$project$Components$Molecules$ContextMenu$link = function (l) {
	return A3(
		$author$project$Components$Molecules$ContextMenu$linkHtml,
		l.o1,
		_List_Nil,
		_List_fromArray(
			[
				$elm$html$Html$text(l.fp)
			]));
};
var $author$project$Services$Backend$logoutUrl = '/logout';
var $elm$html$Html$Attributes$width = function (n) {
	return A2(
		_VirtualDom_attribute,
		'width',
		$elm$core$String$fromInt(n));
};
var $author$project$PagesComponents$Helpers$viewProfileIcon = F5(
	function (currentUrl, maybeUser, profileDropdown, openedDropdown, toggle) {
		return A3(
			$author$project$Libs$Maybe$mapOrElse,
			function (user) {
				return A3(
					$author$project$Components$Molecules$Dropdown$dropdown,
					{
						bg: 1,
						H: profileDropdown,
						bm: _Utils_eq(openedDropdown, profileDropdown)
					},
					function (m) {
						return A2(
							$author$project$Components$Molecules$Tooltip$bl,
							user.eS,
							A2(
								$elm$html$Html$button,
								_List_fromArray(
									[
										$elm$html$Html$Attributes$type_('button'),
										$elm$html$Html$Attributes$id(m.H),
										$elm$html$Html$Events$onClick(
										toggle(profileDropdown)),
										$author$project$Libs$Html$Attributes$css(
										_List_fromArray(
											[
												'mx-1 flex-shrink-0 p-0.5 rounded-full flex text-sm',
												$author$project$Libs$Tailwind$hover(
												_List_fromArray(
													['animate-jello-h'])),
												$author$project$Libs$Tailwind$focus_ring_offset_600($author$project$Libs$Tailwind$primary)
											])),
										$author$project$Libs$Html$Attributes$ariaExpanded(m.bm),
										$author$project$Libs$Html$Attributes$ariaHaspopup('true')
									]),
								_List_fromArray(
									[
										A2(
										$elm$html$Html$span,
										_List_fromArray(
											[
												$author$project$Libs$Html$Attributes$css(
												_List_fromArray(
													['sr-only']))
											]),
										_List_fromArray(
											[
												$elm$html$Html$text('Open user menu')
											])),
										A2(
										$elm$html$Html$img,
										_List_fromArray(
											[
												$author$project$Libs$Html$Attributes$css(
												_List_fromArray(
													['rounded-full h-7 w-7'])),
												$elm$html$Html$Attributes$src(user.fD),
												$elm$html$Html$Attributes$alt(user.eS),
												$elm$html$Html$Attributes$width(28),
												$elm$html$Html$Attributes$height(28)
											]),
										_List_Nil)
									])));
					},
					function (_v0) {
						return A2(
							$elm$html$Html$div,
							_List_Nil,
							_List_fromArray(
								[
									$author$project$Components$Molecules$ContextMenu$link(
									{fp: 'Logout', o1: $author$project$Services$Backend$logoutUrl})
								]));
					});
			},
			A2(
				$author$project$Components$Molecules$Tooltip$bl,
				'Sign in',
				A2(
					$elm$html$Html$a,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$href(
							$author$project$Services$Backend$loginUrl(currentUrl)),
							$author$project$Libs$Html$Attributes$css(
							_List_fromArray(
								[
									'mx-1 flex-shrink-0 bg-primary-600 p-1 rounded-full text-primary-200',
									$author$project$Libs$Tailwind$hover(
									_List_fromArray(
										['text-white animate-flip-h'])),
									$author$project$Libs$Tailwind$focus_ring_offset_600($author$project$Libs$Tailwind$primary)
								]))
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$span,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('sr-only')
								]),
							_List_fromArray(
								[
									$elm$html$Html$text('Sign in')
								])),
							A2($author$project$Components$Atoms$Icon$outline, 212, '')
						]))),
			maybeUser);
	});
var $author$project$PagesComponents$Helpers$appShell = F9(
	function (currentUrl, urlOrganization, user, onNavigationClick, onProfileClick, model, title, content, footer) {
		var profileDropdown = 'shell-profile-dropdown';
		var logoUrl = A2(
			$author$project$Libs$Maybe$any,
			function (id) {
				return !_Utils_eq(id, $author$project$Models$OrganizationId$zero);
			},
			urlOrganization) ? $author$project$Services$Backend$organizationUrl(urlOrganization) : $author$project$Services$Backend$homeUrl;
		return _Utils_ap(
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$author$project$Libs$Html$Attributes$css(
							_List_fromArray(
								['pb-32 bg-primary-600']))
						]),
					_List_fromArray(
						[
							A2(
							$author$project$Components$Organisms$Navbar$admin,
							{
								fH: {fA: 'Azimutt', ht: 'https://xestjs.com/img/xest-icon.png', o1: logoUrl},
								gF: {
									co: _List_fromArray(
										[
											{
											fp: 'Dashboard',
											o1: $author$project$Services$Backend$organizationUrl(urlOrganization)
										}
										]),
									bs: onNavigationClick
								},
								hj: _List_fromArray(
									[
										A5($author$project$PagesComponents$Helpers$viewProfileIcon, currentUrl, user, profileDropdown, model.jo, onProfileClick)
									]),
								fb: $elm$core$Maybe$Nothing
							},
							{
								dE: _Utils_eq(model.jo, profileDropdown),
								fg: model.fg
							}),
							$author$project$PagesComponents$Helpers$viewHeader(title)
						])),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$author$project$Libs$Html$Attributes$css(
							_List_fromArray(
								['-mt-32']))
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$main_,
							_List_fromArray(
								[
									$author$project$Libs$Html$Attributes$css(
									_List_fromArray(
										[
											'max-w-7xl mx-auto pb-12 px-4',
											$author$project$Libs$Tailwind$sm(
											_List_fromArray(
												['px-6'])),
											$author$project$Libs$Tailwind$lg(
											_List_fromArray(
												['px-8']))
										]))
								]),
							_List_fromArray(
								[
									A2(
									$elm$html$Html$div,
									_List_fromArray(
										[
											$author$project$Libs$Html$Attributes$css(
											_List_fromArray(
												['bg-white rounded-lg shadow']))
										]),
									content)
								]))
						]))
				]),
			A2($elm$core$List$cons, $author$project$PagesComponents$Helpers$viewFooter, footer));
	});
var $author$project$PagesComponents$New$Views$viewTab = F2(
	function (selected, tab) {
		return _Utils_eq(tab.a3, selected) ? A2(
			$elm$html$Html$a,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$href(''),
					$author$project$Libs$Html$Attributes$css(
					_List_fromArray(
						[
							'bg-primary-50 border-primary-500 text-primary-700 border-l-4 px-3 py-2 flex items-center text-sm font-medium',
							$author$project$Libs$Tailwind$hover(
							_List_fromArray(
								['bg-primary-50 text-primary-700']))
						])),
					$author$project$Libs$Html$Attributes$ariaCurrent('page')
				]),
			_List_fromArray(
				[
					A2($author$project$Components$Atoms$Icon$outline, tab.aa, '-ml-1 mr-3 text-primary-500'),
					A2(
					$elm$html$Html$span,
					_List_fromArray(
						[
							$author$project$Libs$Html$Attributes$css(
							_List_fromArray(
								['truncate']))
						]),
					tab.cX)
				])) : A2(
			$elm$html$Html$a,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$href(''),
					$elm$html$Html$Events$onClick(
					$author$project$PagesComponents$New$Models$InitTab(tab.a3)),
					$author$project$Libs$Html$Attributes$css(
					_List_fromArray(
						[
							'border-transparent text-gray-900 border-l-4 px-3 py-2 flex items-center text-sm font-medium',
							$author$project$Libs$Tailwind$hover(
							_List_fromArray(
								['bg-gray-50 text-gray-900']))
						]))
				]),
			_List_fromArray(
				[
					A2($author$project$Components$Atoms$Icon$outline, tab.aa, '-ml-1 mr-3 text-gray-400'),
					A2(
					$elm$html$Html$span,
					_List_fromArray(
						[
							$author$project$Libs$Html$Attributes$css(
							_List_fromArray(
								['truncate']))
						]),
					tab.cX)
				]));
	});
var $author$project$PagesComponents$New$Models$ToggleCollapse = function (a) {
	return {$: 1, a: a};
};
var $author$project$PagesComponents$New$Views$viewDataPrivacyCollapse = F2(
	function (htmlId, openedCollapse) {
		return A2(
			$elm$html$Html$div,
			_List_Nil,
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Events$onClick(
							$author$project$PagesComponents$New$Models$ToggleCollapse(htmlId + '-data-privacy')),
							$author$project$Libs$Html$Attributes$css(
							_List_fromArray(
								['link text-sm text-gray-500']))
						]),
					_List_fromArray(
						[
							$elm$html$Html$text('What about data privacy?')
						])),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$author$project$Libs$Html$Attributes$css(
							_List_fromArray(
								[
									'mt-1 p-3 border rounded border-gray-300',
									A3(
									$author$project$Libs$Bool$cond,
									_Utils_eq(openedCollapse, htmlId + '-data-privacy'),
									'',
									'hidden')
								]))
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$p,
							_List_Nil,
							_List_fromArray(
								[
									$elm$html$Html$text('Your application schema may be a sensitive information, but no worries with Azimutt, we are '),
									$author$project$Libs$Html$bText('privacy focused'),
									$elm$html$Html$text('.')
								])),
							A2(
							$elm$html$Html$p,
							_List_fromArray(
								[
									$author$project$Libs$Html$Attributes$css(
									_List_fromArray(
										['mt-1']))
								]),
							_List_fromArray(
								[
									$elm$html$Html$text('Your schema is '),
									$author$project$Libs$Html$bText('read and parsed in your browser'),
									$elm$html$Html$text('. You can explore it without leaking anything to Azimutt server.')
								])),
							A2(
							$elm$html$Html$p,
							_List_fromArray(
								[
									$author$project$Libs$Html$Attributes$css(
									_List_fromArray(
										['mt-1']))
								]),
							_List_fromArray(
								[
									$elm$html$Html$text('When saving your project you can choose between '),
									$author$project$Libs$Html$bText('local'),
									$elm$html$Html$text(' or '),
									$author$project$Libs$Html$bText('remote'),
									$elm$html$Html$text(' storage. The first one offers full privacy, your schema don\'t leave your computer. The second offers collaboration, sharing it with other people.')
								])),
							A2(
							$elm$html$Html$p,
							_List_fromArray(
								[
									$author$project$Libs$Html$Attributes$css(
									_List_fromArray(
										['mt-1']))
								]),
							_List_fromArray(
								[
									$elm$html$Html$text('If you are worried, please '),
									A2(
									$elm$html$Html$a,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$href('mailto:' + $author$project$Conf$constants.kB),
											$elm$html$Html$Attributes$target('_blank'),
											$elm$html$Html$Attributes$rel('noopener'),
											$elm$html$Html$Attributes$class('link')
										]),
									_List_fromArray(
										[
											$elm$html$Html$text('contact us')
										])),
									$elm$html$Html$text(', we take this very seriously and do whatever is possible to satisfy needs.')
								]))
						]))
				]));
	});
var $author$project$PagesComponents$New$Views$viewHeading = F2(
	function (heading, description) {
		return A2(
			$elm$html$Html$div,
			_List_Nil,
			_List_fromArray(
				[
					A2(
					$elm$html$Html$h2,
					_List_fromArray(
						[
							$author$project$Libs$Html$Attributes$css(
							_List_fromArray(
								['text-lg leading-6 font-medium text-gray-900']))
						]),
					_List_fromArray(
						[
							$elm$html$Html$text(heading)
						])),
					A2(
					$elm$html$Html$p,
					_List_fromArray(
						[
							$author$project$Libs$Html$Attributes$css(
							_List_fromArray(
								['mt-1 text-sm text-gray-500']))
						]),
					description)
				]));
	});
var $author$project$PagesComponents$New$Views$viewSourceActionButtons = F3(
	function (drop, projects, parsedSource) {
		return A3(
			$author$project$Libs$Maybe$mapOrElse,
			function (source) {
				return A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$author$project$Libs$Html$Attributes$css(
							_List_fromArray(
								['mt-6']))
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$author$project$Libs$Html$Attributes$css(
									_List_fromArray(
										['flex justify-end']))
								]),
							A3(
								$author$project$Libs$Result$fold,
								function (_v0) {
									return _List_fromArray(
										[
											A3(
											$author$project$Components$Atoms$Button$white3,
											$author$project$Libs$Tailwind$primary,
											_List_fromArray(
												[
													$elm$html$Html$Events$onClick(drop)
												]),
											_List_fromArray(
												[
													$elm$html$Html$text('Clear')
												]))
										]);
								},
								function (src) {
									return _List_fromArray(
										[
											A3(
											$author$project$Components$Atoms$Button$white3,
											$author$project$Libs$Tailwind$primary,
											_List_fromArray(
												[
													$elm$html$Html$Events$onClick(drop)
												]),
											_List_fromArray(
												[
													$elm$html$Html$text('Trash this')
												])),
											A3(
											$author$project$Components$Atoms$Button$primary3,
											$author$project$Libs$Tailwind$primary,
											_List_fromArray(
												[
													$elm$html$Html$Events$onClick(
													$author$project$PagesComponents$New$Models$CreateProjectTmp(
														A3($author$project$Models$Project$create, projects, src.eS, src))),
													$elm$html$Html$Attributes$id('create-project-btn'),
													$author$project$Libs$Html$Attributes$css(
													_List_fromArray(
														['ml-3']))
												]),
											_List_fromArray(
												[
													$elm$html$Html$text('Create project!')
												]))
										]);
								},
								source))
						]));
			},
			A2($elm$html$Html$div, _List_Nil, _List_Nil),
			parsedSource);
	});
var $author$project$PagesComponents$New$Views$viewDatabaseSourceTab = F4(
	function (htmlId, openedCollapse, projects, model) {
		return A2(
			$elm$html$Html$div,
			_List_Nil,
			_List_fromArray(
				[
					A2(
					$author$project$PagesComponents$New$Views$viewHeading,
					'Extract your database schema',
					_List_fromArray(
						[
							$elm$html$Html$text('Sadly browsers can\'t directly connect to a database so this extraction will be made through Azimutt servers but nothing is stored.')
						])),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('mt-6')
						]),
					_List_fromArray(
						[
							A3($author$project$Services$DatabaseSource$viewInput, $author$project$PagesComponents$New$Models$DatabaseSourceMsg, htmlId, model)
						])),
					A2($author$project$Services$DatabaseSource$viewParsing, $author$project$PagesComponents$New$Models$DatabaseSourceMsg, model),
					A3(
					$author$project$PagesComponents$New$Views$viewSourceActionButtons,
					$author$project$PagesComponents$New$Models$InitTab(0),
					projects,
					model.g8),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('mt-3')
						]),
					_List_fromArray(
						[
							A2($author$project$PagesComponents$New$Views$viewDataPrivacyCollapse, htmlId, openedCollapse)
						]))
				]));
	});
var $author$project$PagesComponents$New$Models$CreateEmptyProject = function (a) {
	return {$: 10, a: a};
};
var $author$project$PagesComponents$New$Views$viewEmptyProjectTab = A2(
	$elm$html$Html$div,
	_List_Nil,
	_List_fromArray(
		[
			A2(
			$author$project$PagesComponents$New$Views$viewHeading,
			'Create a new project',
			_List_fromArray(
				[
					$elm$html$Html$text('When you don\'t want to import a schema, just create it in Azimutt using '),
					A3(
					$author$project$Libs$Html$extLink,
					'https://github.com/azimuttapp/azimutt/blob/main/docs/aml/README.md',
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('link')
						]),
					_List_fromArray(
						[
							$elm$html$Html$text('AML')
						])),
					$elm$html$Html$text('.')
				])),
			A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$author$project$Libs$Html$Attributes$css(
					_List_fromArray(
						['mt-20']))
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$author$project$Libs$Html$Attributes$css(
							_List_fromArray(
								['flex justify-center']))
						]),
					_List_fromArray(
						[
							A3(
							$author$project$Components$Atoms$Button$primary5,
							$author$project$Libs$Tailwind$primary,
							_List_fromArray(
								[
									$elm$html$Html$Events$onClick(
									$author$project$PagesComponents$New$Models$CreateEmptyProject($author$project$Conf$constants.m4)),
									$elm$html$Html$Attributes$id('create-project-btn'),
									$author$project$Libs$Html$Attributes$css(
									_List_fromArray(
										['ml-3']))
								]),
							_List_fromArray(
								[
									$elm$html$Html$text('Create new project!')
								]))
						]))
				]))
		]));
var $author$project$DataSources$JsonMiner$JsonSchema$jsonSchema = '{\n  "type": "object",\n  "required": ["tables", "relations"],\n  "additionalProperties": false,\n  "properties": {\n    "tables": {\n      "type": "array",\n      "items": {\n        "type": "object",\n        "required": ["schema", "table", "columns"],\n        "additionalProperties": false,\n        "properties": {\n          "schema": {"type": "string"},\n          "table": {"type": "string"},\n          "view": {"type": "boolean"},\n          "columns": {"type": "array", "items": {"$ref": "/column"}},\n          "primaryKey": {"$ref": "/primaryKey"},\n          "uniques": {"type": "array", "items": {"$ref": "/unique"}},\n          "indexes": {"type": "array", "items": {"$ref": "/index"}},\n          "checks": {"type": "array", "items": {"$ref": "/check"}},\n          "comment": {"type": "string"}\n        }\n      }\n    },\n    "relations": {\n      "type": "array",\n      "items": {\n        "type": "object",\n        "required": ["name", "src", "ref"],\n        "additionalProperties": false,\n        "properties": {\n          "name": {"type": "string"},\n          "src": {"$ref": "/columnRef"},\n          "ref": {"$ref": "/columnRef"}\n        }\n      }\n    },\n    "types": {\n      "type": "array",\n      "items": {\n        "type": "object",\n        "required": ["schema", "name"],\n        "additionalProperties": false,\n        "properties": {\n          "schema": {"type": "string"},\n          "name": {"type": "string"},\n          "values": {"type": "array", "items": {"type": "string"}},\n          "definition": {"type": "string"}\n        },\n        "oneOf": [\n          {"required": ["values"]},\n          {"required": ["definition"]}\n        ]\n      }\n    }\n  },\n  "$defs": {\n    "column": {\n      "$id": "/column",\n      "type": "object",\n      "required": ["name", "type"],\n      "additionalProperties": false,\n      "properties": {\n        "name": {"type": "string"},\n        "type": {"type": "string"},\n        "nullable": {"type": "boolean"},\n        "default": {"type": "string"},\n        "comment": {"type": "string"},\n        "columns": {"type": "array", "items": {"$ref": "/column"}}\n      }\n    },\n    "primaryKey": {\n      "$id": "/primaryKey",\n      "type": "object",\n      "required": ["columns"],\n      "additionalProperties": false,\n      "properties": {\n        "name": {"type": "string"},\n        "columns": {"type": "array", "items": {"type": "string"}}\n      }\n    },\n    "unique": {\n      "$id": "/unique",\n      "type": "object",\n      "required": ["columns"],\n      "additionalProperties": false,\n      "properties": {\n        "name": {"type": "string"},\n        "columns": {"type": "array", "items": {"type": "string"}},\n        "definition": {"type": "string"}\n      }\n    },\n    "index": {\n      "$id": "/index",\n      "type": "object",\n      "required": ["columns"],\n      "additionalProperties": false,\n      "properties": {\n        "name": {"type": "string"},\n        "columns": {"type": "array", "items": {"type": "string"}},\n        "definition": {"type": "string"}\n      }\n    },\n    "check": {\n      "$id": "/check",\n      "type": "object",\n      "required": ["columns"],\n      "additionalProperties": false,\n      "properties": {\n        "name": {"type": "string"},\n        "columns": {"type": "array", "items": {"type": "string"}},\n        "predicate": {"type": "string"}\n      }\n    },\n    "columnRef": {\n      "$id": "/columnRef",\n      "type": "object",\n      "required": ["schema", "table", "column"],\n      "additionalProperties": false,\n      "properties": {\n        "schema": {"type": "string"},\n        "table": {"type": "string"},\n        "column": {"type": "string"}\n      }\n    }\n  }\n}';
var $author$project$PagesComponents$New$Views$viewJsonSourceSchemaCollapse = F2(
	function (htmlId, openedCollapse) {
		return A2(
			$elm$html$Html$div,
			_List_Nil,
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Events$onClick(
							$author$project$PagesComponents$New$Models$ToggleCollapse(htmlId + '-json-schema')),
							$author$project$Libs$Html$Attributes$css(
							_List_fromArray(
								['link text-sm text-gray-500']))
						]),
					_List_fromArray(
						[
							$elm$html$Html$text('What is the schema for the JSON?')
						])),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$author$project$Libs$Html$Attributes$css(
							_List_fromArray(
								[
									'mt-1 mb-3 p-3 border rounded border-gray-300',
									A3(
									$author$project$Libs$Bool$cond,
									_Utils_eq(openedCollapse, htmlId + '-json-schema'),
									'',
									'hidden')
								]))
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$p,
							_List_Nil,
							_List_fromArray(
								[
									$elm$html$Html$text('Here is the JSON schema defining what is expected:')
								])),
							A2(
							$elm$html$Html$pre,
							_List_Nil,
							_List_fromArray(
								[
									$elm$html$Html$text($author$project$DataSources$JsonMiner$JsonSchema$jsonSchema)
								])),
							A2(
							$elm$html$Html$p,
							_List_Nil,
							_List_fromArray(
								[
									$elm$html$Html$text('You can use '),
									A3(
									$author$project$Libs$Html$extLink,
									'https://www.jsonschemavalidator.net',
									_List_fromArray(
										[
											$elm$html$Html$Attributes$class('link')
										]),
									_List_fromArray(
										[
											$elm$html$Html$text('jsonschemavalidator.net')
										])),
									$elm$html$Html$text(' to validate your JSON against this schema.')
								]))
						]))
				]));
	});
var $author$project$PagesComponents$New$Views$viewJsonSourceTab = F4(
	function (htmlId, openedCollapse, projects, model) {
		return A2(
			$elm$html$Html$div,
			_List_Nil,
			_List_fromArray(
				[
					A2(
					$author$project$PagesComponents$New$Views$viewHeading,
					'Import your custom source in JSON',
					_List_fromArray(
						[
							$elm$html$Html$text('If you have a data source not (yet) supported by Azimutt, you can extract and format its schema into JSON to import it here.')
						])),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('mt-6')
						]),
					_List_fromArray(
						[
							A4($author$project$Services$JsonSource$viewInput, $author$project$PagesComponents$New$Models$JsonSourceMsg, $author$project$PagesComponents$New$Models$Noop, htmlId, model)
						])),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('mt-3')
						]),
					_List_fromArray(
						[
							A2($author$project$PagesComponents$New$Views$viewJsonSourceSchemaCollapse, htmlId, openedCollapse)
						])),
					A2($author$project$Services$JsonSource$viewParsing, $author$project$PagesComponents$New$Models$JsonSourceMsg, model),
					A3(
					$author$project$PagesComponents$New$Views$viewSourceActionButtons,
					$author$project$PagesComponents$New$Models$InitTab(2),
					projects,
					model.g8)
				]));
	});
var $author$project$PagesComponents$New$Models$ConfirmOpen = function (a) {
	return {$: 13, a: a};
};
var $author$project$PagesComponents$New$Models$confirm = F3(
	function (title, content, message) {
		return $author$project$PagesComponents$New$Models$ConfirmOpen(
			{
				b6: 'Nope',
				A: $author$project$Libs$Tailwind$blue,
				b8: 'Yes!',
				aa: 167,
				cq: content,
				ct: $author$project$Libs$Task$send(message),
				a4: title
			});
	});
var $author$project$Models$Project$duplicate = F2(
	function (projects, project) {
		return _Utils_update(
			project,
			{
				H: $author$project$Models$Project$ProjectId$zero,
				eS: A2(
					$author$project$Libs$String$unique,
					A2(
						$elm$core$List$map,
						function ($) {
							return $.eS;
						},
						projects),
					project.eS)
			});
	});
var $author$project$Components$Atoms$Button$secondary3 = A2($author$project$Components$Atoms$Button$build, $author$project$Components$Atoms$Button$secondary, $author$project$Components$Atoms$Button$size3);
var $author$project$Services$ProjectSource$GetLocalFile = function (a) {
	return {$: 2, a: a};
};
var $author$project$Services$ProjectSource$viewLocalInput = F3(
	function (wrap, noop, htmlId) {
		return $author$project$Components$Molecules$FileInput$input(
			{
				cX: A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$author$project$Libs$Html$Attributes$css(
							_List_fromArray(
								['space-y-1 text-center']))
						]),
					_List_fromArray(
						[
							A2($author$project$Components$Atoms$Icon$outline2x, 107, 'mx-auto'),
							A2(
							$elm$html$Html$p,
							_List_Nil,
							_List_fromArray(
								[
									A2(
									$elm$html$Html$span,
									_List_fromArray(
										[
											$author$project$Libs$Html$Attributes$css(
											_List_fromArray(
												['text-primary-600']))
										]),
									_List_fromArray(
										[
											$elm$html$Html$text('Upload a project file')
										])),
									$elm$html$Html$text(' or drag and drop')
								])),
							A2(
							$elm$html$Html$p,
							_List_fromArray(
								[
									$author$project$Libs$Html$Attributes$css(
									_List_fromArray(
										['text-xs']))
								]),
							_List_fromArray(
								[
									$elm$html$Html$text('.json file only')
								]))
						])),
				H: htmlId,
				eP: _List_fromArray(
					['.json']),
				du: F2(
					function (f, _v0) {
						return wrap(
							$author$project$Services$ProjectSource$GetLocalFile(f));
					}),
				dv: $elm$core$Maybe$Nothing,
				dw: F2(
					function (_v1, _v2) {
						return noop(htmlId);
					}),
				eW: A2($elm$core$Basics$composeR, $author$project$Services$ProjectSource$GetLocalFile, wrap)
			});
	});
var $author$project$Services$ProjectSource$UiToggle = function (a) {
	return {$: 6, a: a};
};
var $author$project$Services$ProjectSource$viewDiffAlert = F3(
	function (zone, old, _new) {
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('mt-6')
				]),
			_List_fromArray(
				[
					A2(
					$author$project$Components$Molecules$Alert$withDescription,
					{A: $author$project$Libs$Tailwind$yellow, aa: 95, a4: 'Oh! You already have this project here.'},
					_List_fromArray(
						[
							A2(
							$elm$html$Html$div,
							_List_Nil,
							_List_fromArray(
								[
									$elm$html$Html$text('This project already exist in Azimutt (same id), compare the differences below to decide what to do:')
								])),
							A2(
							$elm$html$Html$ul,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('list-disc list-inside')
								]),
							_List_fromArray(
								[
									A2(
									$elm$html$Html$li,
									_List_Nil,
									_List_fromArray(
										[
											$elm$html$Html$text(
											'Existing project has been last modified on ' + (A2($author$project$Libs$Models$DateTime$formatDate, zone, old.kb) + (' while imported one was updated on ' + A2($author$project$Libs$Models$DateTime$formatDate, zone, _new.kb))))
										])),
									A2(
									$elm$html$Html$li,
									_List_Nil,
									_List_fromArray(
										[
											$elm$html$Html$text(
											'Existing project has ' + (A2($author$project$Libs$String$pluralizeD, 'table', old.oM) + (' and ' + (A2($author$project$Libs$String$pluralizeL, 'relation', old.bT) + (', the imported one has ' + (A2($author$project$Libs$String$pluralizeD, 'table', _new.oM) + (' and ' + (A2($author$project$Libs$String$pluralizeL, 'relation', _new.bT) + '.'))))))))
										])),
									A2(
									$elm$html$Html$li,
									_List_Nil,
									_List_fromArray(
										[
											$elm$html$Html$text(
											'Existing project has ' + (A2($author$project$Libs$String$pluralizeD, 'layout', old.i$) + (', the imported one has ' + (A2($author$project$Libs$String$pluralizeD, 'layout', _new.i$) + '.'))))
										]))
								]))
						]))
				]));
	});
var $author$project$Services$ProjectSource$viewLogsError = function (error) {
	return A2(
		$elm$html$Html$div,
		_List_Nil,
		_List_fromArray(
			[
				A2(
				$elm$html$Html$div,
				_List_Nil,
				_List_fromArray(
					[
						$elm$html$Html$text('Failed to decode project 😱')
					])),
				A2(
				$elm$html$Html$div,
				_List_fromArray(
					[
						$elm$html$Html$Attributes$class('text-red-500')
					]),
				_List_fromArray(
					[
						$elm$html$Html$text(
						$author$project$Libs$Json$Decode$errorToStringNoValue(error))
					])),
				A2(
				$elm$html$Html$div,
				_List_Nil,
				_List_fromArray(
					[
						$elm$html$Html$text('This is quite sad, you can try to fix the format yourself or '),
						A3(
						$author$project$Libs$Html$extLink,
						$author$project$Conf$constants.kw,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$class('link')
							]),
						_List_fromArray(
							[
								$elm$html$Html$text('open an issue on GitHub')
							])),
						$elm$html$Html$text('.')
					]))
			]));
};
var $author$project$Services$ProjectSource$viewLogsProject = F2(
	function (zone, project) {
		return A2(
			$elm$html$Html$div,
			_List_Nil,
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_Nil,
					_List_fromArray(
						[
							$elm$html$Html$text('Successfully decoded project ' + (project.eS + '.'))
						])),
					A2(
					$elm$html$Html$div,
					_List_Nil,
					_List_fromArray(
						[
							$elm$html$Html$text(
							'It was created on ' + (A2($author$project$Libs$Models$DateTime$formatDate, zone, project.ic) + (' and last modified on ' + (A2($author$project$Libs$Models$DateTime$formatDate, zone, project.kb) + '.'))))
						])),
					A2(
					$elm$html$Html$div,
					_List_Nil,
					_List_fromArray(
						[
							$elm$html$Html$text(
							'It has ' + (A2($author$project$Libs$String$pluralizeD, 'layout', project.i$) + (' and ' + (A2($author$project$Libs$String$pluralizeL, 'source', project.hs) + (', containing ' + (A2($author$project$Libs$String$pluralizeD, 'table', project.oM) + (' and ' + (A2($author$project$Libs$String$pluralizeL, 'relation', project.bT) + '.'))))))))
						]))
				]));
	});
var $author$project$Services$ProjectSource$viewParsing = F4(
	function (wrap, zone, currentProject, model) {
		return A3(
			$author$project$Libs$Maybe$mapOrElse,
			function (fileName) {
				return A2(
					$elm$html$Html$div,
					_List_Nil,
					_List_fromArray(
						[
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('mt-6')
								]),
							_List_fromArray(
								[
									$author$project$Components$Molecules$Divider$withLabel(
									A2(
										$elm$core$Maybe$withDefault,
										'Fetching...',
										A2(
											$author$project$Libs$Maybe$orElse,
											A2(
												$elm$core$Maybe$map,
												function (_v2) {
													return 'Parsing...';
												},
												model.bo),
											A2(
												$author$project$Libs$Maybe$orElse,
												A2(
													$elm$core$Maybe$map,
													function (_v1) {
														return 'Building...';
													},
													model.nC),
												A2(
													$elm$core$Maybe$map,
													function (_v0) {
														return 'Loaded!';
													},
													model.nN)))))
								])),
							$author$project$Services$SourceLogs$viewContainer(
							_List_fromArray(
								[
									A2(
									$elm$html$Html$map,
									wrap,
									A4(
										$author$project$Services$SourceLogs$viewFile,
										$author$project$Services$ProjectSource$UiToggle,
										model.ov,
										fileName,
										A2($elm$core$Maybe$andThen, $elm$core$Result$toMaybe, model.bo))),
									A3(
									$author$project$Libs$Maybe$mapOrElse,
									A2(
										$elm$core$Basics$composeR,
										$elm$core$Result$mapError($author$project$Libs$Http$errorToString),
										$author$project$Services$SourceLogs$viewError),
									A2($elm$html$Html$div, _List_Nil, _List_Nil),
									model.bo),
									A3(
									$author$project$Libs$Maybe$mapOrElse,
									A2(
										$author$project$Libs$Result$fold,
										$author$project$Services$ProjectSource$viewLogsError,
										$author$project$Services$ProjectSource$viewLogsProject(zone)),
									A2($elm$html$Html$div, _List_Nil, _List_Nil),
									model.nC),
									A3(
									$author$project$Libs$Maybe$mapOrElse,
									$author$project$Services$SourceLogs$viewResult,
									A2($elm$html$Html$div, _List_Nil, _List_Nil),
									model.nN)
								])),
							A2(
							$elm$core$Maybe$withDefault,
							A2($elm$html$Html$div, _List_Nil, _List_Nil),
							A2(
								$elm$core$Maybe$andThen,
								function (project) {
									return A2(
										$elm$core$Maybe$map,
										function (p) {
											return A3($author$project$Services$ProjectSource$viewDiffAlert, zone, p, project);
										},
										currentProject);
								},
								A2($elm$core$Maybe$andThen, $elm$core$Result$toMaybe, model.nC)))
						]));
			},
			A2($elm$html$Html$div, _List_Nil, _List_Nil),
			A2(
				$author$project$Libs$Maybe$orElse,
				A2(
					$elm$core$Maybe$map,
					function (url) {
						return url + ' file';
					},
					model.jU),
				A2(
					$elm$core$Maybe$map,
					function (f) {
						return f.eS + ' file';
					},
					model.jT)));
	});
var $author$project$PagesComponents$New$Views$viewProjectSourceTab = F4(
	function (htmlId, zone, projects, model) {
		return A2(
			$elm$html$Html$div,
			_List_Nil,
			_List_fromArray(
				[
					A2(
					$author$project$PagesComponents$New$Views$viewHeading,
					'Import an existing project',
					_List_fromArray(
						[
							$elm$html$Html$text('If you have an Azimutt project, you can load it here.')
						])),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('mt-6')
						]),
					_List_fromArray(
						[
							A3($author$project$Services$ProjectSource$viewLocalInput, $author$project$PagesComponents$New$Models$ProjectSourceMsg, $author$project$PagesComponents$New$Models$Noop, htmlId + '-remote-file')
						])),
					A2(
					$elm$html$Html$p,
					_List_fromArray(
						[
							$author$project$Libs$Html$Attributes$css(
							_List_fromArray(
								['mt-1 text-sm text-gray-500']))
						]),
					_List_fromArray(
						[
							$elm$html$Html$text('Download your project with the button on the bottom of the settings (top right cog).')
						])),
					A4($author$project$Services$ProjectSource$viewParsing, $author$project$PagesComponents$New$Models$ProjectSourceMsg, zone, $elm$core$Maybe$Nothing, model),
					A2(
					$elm$core$Maybe$withDefault,
					A2($elm$html$Html$div, _List_Nil, _List_Nil),
					A2(
						$elm$core$Maybe$map,
						function (project) {
							return A2(
								$elm$html$Html$div,
								_List_fromArray(
									[
										$author$project$Libs$Html$Attributes$css(
										_List_fromArray(
											['mt-6']))
									]),
								_List_fromArray(
									[
										A2(
										$elm$html$Html$div,
										_List_fromArray(
											[
												$author$project$Libs$Html$Attributes$css(
												_List_fromArray(
													['flex justify-end']))
											]),
										A2(
											$elm$core$List$cons,
											A3(
												$author$project$Components$Atoms$Button$white3,
												$author$project$Libs$Tailwind$primary,
												_List_fromArray(
													[
														$elm$html$Html$Events$onClick(
														$author$project$PagesComponents$New$Models$InitTab(4))
													]),
												_List_fromArray(
													[
														$elm$html$Html$text('Don\'t import')
													])),
											A2(
												$elm$core$Maybe$withDefault,
												_List_fromArray(
													[
														A3(
														$author$project$Components$Atoms$Button$primary3,
														$author$project$Libs$Tailwind$primary,
														_List_fromArray(
															[
																$elm$html$Html$Events$onClick(
																$author$project$PagesComponents$New$Models$CreateProjectTmp(project)),
																$elm$html$Html$Attributes$id('create-project-btn'),
																$author$project$Libs$Html$Attributes$css(
																_List_fromArray(
																	['ml-3']))
															]),
														_List_fromArray(
															[
																$elm$html$Html$text('Import project!')
															]))
													]),
												A2(
													$elm$core$Maybe$map,
													function (p) {
														return _List_fromArray(
															[
																A3(
																$author$project$Components$Atoms$Button$secondary3,
																$author$project$Libs$Tailwind$red,
																_List_fromArray(
																	[
																		$elm$html$Html$Events$onClick(
																		A3(
																			$author$project$PagesComponents$New$Models$confirm,
																			'Replace ' + (p.eS + ' project?'),
																			$elm$html$Html$text('This operation can\'t be undone'),
																			$author$project$PagesComponents$New$Models$CreateProjectTmp(project))),
																		$author$project$Libs$Html$Attributes$css(
																		_List_fromArray(
																			['ml-3']))
																	]),
																_List_fromArray(
																	[
																		$elm$html$Html$text('Replace existing project')
																	])),
																A3(
																$author$project$Components$Atoms$Button$primary3,
																$author$project$Libs$Tailwind$primary,
																_List_fromArray(
																	[
																		$elm$html$Html$Events$onClick(
																		$author$project$PagesComponents$New$Models$CreateProjectTmp(
																			A2($author$project$Models$Project$duplicate, projects, project))),
																		$elm$html$Html$Attributes$id('create-project-btn'),
																		$author$project$Libs$Html$Attributes$css(
																		_List_fromArray(
																			['ml-3']))
																	]),
																_List_fromArray(
																	[
																		$elm$html$Html$text('Import in new project!')
																	]))
															]);
													},
													A2(
														$author$project$Libs$List$find,
														function (p) {
															return _Utils_eq(p.H, project.H);
														},
														projects)))))
									]));
						},
						A2($elm$core$Maybe$andThen, $elm$core$Result$toMaybe, model.nC)))
				]));
	});
var $author$project$Libs$Maybe$all = F2(
	function (predicate, maybe) {
		return A2(
			$elm$core$Maybe$withDefault,
			true,
			A2($elm$core$Maybe$map, predicate, maybe));
	});
var $author$project$Services$SampleSource$viewParsing = function (model) {
	return A2(
		$elm$core$Maybe$withDefault,
		A2($elm$html$Html$div, _List_Nil, _List_Nil),
		A2(
			$elm$core$Maybe$map,
			function (_v0) {
				return A2(
					$elm$html$Html$div,
					_List_Nil,
					_List_fromArray(
						[
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('mt-6')
								]),
							_List_fromArray(
								[
									$author$project$Components$Molecules$Divider$withLabel(
									A2(
										$elm$core$Maybe$withDefault,
										'Fetching...',
										A2(
											$elm$core$Maybe$map,
											function (_v1) {
												return 'Loaded!';
											},
											model.nN)))
								]))
						]));
			},
			model.om));
};
var $author$project$Components$Molecules$ItemList$withIcon = function (item) {
	return A2(
		$elm$html$Html$li,
		_List_fromArray(
			[
				$author$project$Libs$Html$Attributes$css(
				_List_fromArray(
					[
						'flow-root',
						A3($author$project$Libs$Bool$cond, item.bb, '', 'filter grayscale')
					]))
			]),
		_List_fromArray(
			[
				A2(
				$elm$html$Html$div,
				_List_fromArray(
					[
						$author$project$Libs$Html$Attributes$css(
						_List_fromArray(
							[
								'relative -m-2 p-2 flex items-center space-x-4 rounded-xl',
								$author$project$Libs$Tailwind$hover(
								_List_fromArray(
									['bg-gray-50'])),
								$author$project$Libs$Tailwind$focusWithin(
								_List_fromArray(
									['ring-2 ring-primary-500']))
							]))
					]),
				_List_fromArray(
					[
						A2(
						$elm$html$Html$div,
						_List_fromArray(
							[
								$author$project$Libs$Html$Attributes$css(
								_List_fromArray(
									[
										'flex-shrink-0 flex items-center justify-center h-16 w-16 rounded-lg',
										$author$project$Libs$Tailwind$bg_500(item.A)
									]))
							]),
						_List_fromArray(
							[
								A2($author$project$Components$Atoms$Icon$outline, item.aa, 'text-white')
							])),
						A2(
						$elm$html$Html$div,
						_List_Nil,
						_List_fromArray(
							[
								A2(
								$elm$html$Html$h3,
								_List_Nil,
								_List_fromArray(
									[
										A2(
										$elm$html$Html$button,
										_List_fromArray(
											[
												$elm$html$Html$Attributes$type_('button'),
												$elm$html$Html$Events$onClick(item.bs),
												$author$project$Libs$Html$Attributes$css(
												_List_fromArray(
													[
														'text-sm font-medium text-gray-900',
														$author$project$Libs$Tailwind$focus(
														_List_fromArray(
															['outline-none']))
													]))
											]),
										_List_fromArray(
											[
												A2(
												$elm$html$Html$span,
												_List_fromArray(
													[
														$author$project$Libs$Html$Attributes$css(
														_List_fromArray(
															['absolute inset-0'])),
														$author$project$Libs$Html$Attributes$ariaHidden(true)
													]),
												_List_Nil),
												$elm$html$Html$text(item.a4)
											]))
									])),
								A2(
								$elm$html$Html$p,
								_List_fromArray(
									[
										$author$project$Libs$Html$Attributes$css(
										_List_fromArray(
											['mt-1 text-sm text-gray-500']))
									]),
								_List_fromArray(
									[
										$elm$html$Html$text(item.bf)
									]))
							]))
					]))
			]));
};
var $author$project$Components$Molecules$ItemList$withIcons = function (items) {
	return A2(
		$elm$html$Html$ul,
		_List_fromArray(
			[
				$author$project$Libs$Html$Attributes$role('list'),
				$author$project$Libs$Html$Attributes$css(
				_List_fromArray(
					[
						'mt-6 grid grid-cols-1 gap-6',
						$author$project$Libs$Tailwind$sm(
						_List_fromArray(
							['grid-cols-2']))
					]))
			]),
		A2($elm$core$List$map, $author$project$Components$Molecules$ItemList$withIcon, items));
};
var $author$project$PagesComponents$New$Views$viewSampleSourceTab = F4(
	function (urlOrganization, projects, samples, model) {
		return A2(
			$elm$html$Html$div,
			_List_Nil,
			_List_fromArray(
				[
					A2(
					$author$project$PagesComponents$New$Views$viewHeading,
					'Explore a sample schema',
					_List_fromArray(
						[
							$elm$html$Html$text('If you want to see what Azimutt is capable of, you can pick a schema a play with it.')
						])),
					_Utils_eq(samples, _List_Nil) ? A2(
					$elm$html$Html$h3,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('mt-2 text-sm font-medium text-gray-900')
						]),
					_List_fromArray(
						[
							$elm$html$Html$text('No sample project 😓')
						])) : $author$project$Components$Molecules$ItemList$withIcons(
					A2(
						$elm$core$List$map,
						function (sample) {
							return {
								bb: A2(
									$author$project$Libs$Maybe$all,
									function (s) {
										return _Utils_eq(s.hr, sample.hr);
									},
									model.om),
								A: sample.A,
								bf: sample.bf,
								aa: sample.aa,
								bs: $author$project$PagesComponents$New$Models$SampleSourceMsg(
									$author$project$Services$SampleSource$GetSample(sample)),
								a4: sample.eS + (' (' + ($elm$core$String$fromInt(sample.je) + ' tables)'))
							};
						},
						A2(
							$elm$core$List$sortBy,
							function ($) {
								return $.je;
							},
							samples))),
					$author$project$Services$SampleSource$viewParsing(model),
					A2(
					$elm$core$Maybe$withDefault,
					A2($elm$html$Html$div, _List_Nil, _List_Nil),
					A2(
						$elm$core$Maybe$map,
						function (project) {
							return A2(
								$elm$html$Html$div,
								_List_fromArray(
									[
										$author$project$Libs$Html$Attributes$css(
										_List_fromArray(
											['mt-6']))
									]),
								_List_fromArray(
									[
										A2(
										$elm$html$Html$div,
										_List_fromArray(
											[
												$author$project$Libs$Html$Attributes$css(
												_List_fromArray(
													['flex justify-end']))
											]),
										A2(
											$elm$core$List$cons,
											A3(
												$author$project$Components$Atoms$Button$white3,
												$author$project$Libs$Tailwind$primary,
												_List_fromArray(
													[
														$elm$html$Html$Events$onClick(
														$author$project$PagesComponents$New$Models$InitTab(5))
													]),
												_List_fromArray(
													[
														$elm$html$Html$text('Cancel')
													])),
											A2(
												$elm$core$Maybe$withDefault,
												_List_fromArray(
													[
														A3(
														$author$project$Components$Atoms$Button$primary3,
														$author$project$Libs$Tailwind$primary,
														_List_fromArray(
															[
																$elm$html$Html$Events$onClick(
																$author$project$PagesComponents$New$Models$CreateProjectTmp(project)),
																$elm$html$Html$Attributes$id('create-project-btn'),
																$author$project$Libs$Html$Attributes$css(
																_List_fromArray(
																	['ml-3']))
															]),
														_List_fromArray(
															[
																$elm$html$Html$text('Load sample')
															]))
													]),
												A2(
													$elm$core$Maybe$map,
													function (p) {
														return _List_fromArray(
															[
																A3(
																$author$project$Components$Atoms$Link$primary3,
																$author$project$Libs$Tailwind$primary,
																_List_fromArray(
																	[
																		$elm$html$Html$Attributes$href(
																		$author$project$Gen$Route$toHref(
																			$author$project$Gen$Route$Organization___Project_(
																				{
																					nx: A2(
																						$elm$core$Maybe$withDefault,
																						$author$project$Models$ProjectInfo$organizationId(p),
																						urlOrganization),
																					nN: p.H
																				}))),
																		$elm$html$Html$Attributes$id('create-project-btn'),
																		$author$project$Libs$Html$Attributes$css(
																		_List_fromArray(
																			['ml-3']))
																	]),
																_List_fromArray(
																	[
																		$elm$html$Html$text('View this project')
																	]))
															]);
													},
													A2(
														$author$project$Libs$List$find,
														function (p) {
															return _Utils_eq(p.H, project.H);
														},
														projects)))))
									]));
						},
						A2($elm$core$Maybe$andThen, $elm$core$Result$toMaybe, model.nC)))
				]));
	});
var $author$project$PagesComponents$New$Views$viewHowToGetSchemaCollapse = F2(
	function (htmlId, openedCollapse) {
		return A2(
			$elm$html$Html$div,
			_List_Nil,
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Events$onClick(
							$author$project$PagesComponents$New$Models$ToggleCollapse(htmlId + '-get-schema')),
							$author$project$Libs$Html$Attributes$css(
							_List_fromArray(
								['link text-sm text-gray-500']))
						]),
					_List_fromArray(
						[
							$elm$html$Html$text('How to get my database schema?')
						])),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$author$project$Libs$Html$Attributes$css(
							_List_fromArray(
								[
									'mt-1 mb-3 p-3 border rounded border-gray-300',
									A3(
									$author$project$Libs$Bool$cond,
									_Utils_eq(openedCollapse, htmlId + '-get-schema'),
									'',
									'hidden')
								]))
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$p,
							_List_Nil,
							_List_fromArray(
								[
									$elm$html$Html$text('An '),
									$author$project$Libs$Html$bText('SQL schema'),
									$elm$html$Html$text(' is a SQL file with all the needed instructions to create your database, so it contains your database structure. Here are some ways to get it:'),
									A2(
									$elm$html$Html$ul,
									_List_fromArray(
										[
											$author$project$Libs$Html$Attributes$css(
											_List_fromArray(
												['list-disc list-inside pl-3']))
										]),
									_List_fromArray(
										[
											A2(
											$elm$html$Html$li,
											_List_Nil,
											_List_fromArray(
												[
													$author$project$Libs$Html$bText('Export it'),
													$elm$html$Html$text(' from your database: connect to your database using your favorite client and follow the instructions to extract the schema (ex: '),
													A3(
													$author$project$Libs$Html$extLink,
													'https://stackoverflow.com/a/54504510/15051232',
													_List_fromArray(
														[
															$author$project$Libs$Html$Attributes$css(
															_List_fromArray(
																['link']))
														]),
													_List_fromArray(
														[
															$elm$html$Html$text('DBeaver')
														])),
													$elm$html$Html$text(')')
												])),
											A2(
											$elm$html$Html$li,
											_List_Nil,
											_List_fromArray(
												[
													$author$project$Libs$Html$bText('Find it'),
													$elm$html$Html$text(' in your project: some frameworks like Rails store the schema in your project, so you may have it (ex: with Rails it\'s '),
													A2(
													$author$project$Components$Atoms$Kbd$badge,
													_List_Nil,
													_List_fromArray(
														['db/structure.sql'])),
													$elm$html$Html$text(' if you use the SQL version)')
												]))
										]))
								])),
							A2(
							$elm$html$Html$p,
							_List_fromArray(
								[
									$author$project$Libs$Html$Attributes$css(
									_List_fromArray(
										['mt-3']))
								]),
							_List_fromArray(
								[
									$elm$html$Html$text('If you have no idea on what I\'m talking about just before, ask to the developers working on the project or your database administrator 😇')
								]))
						]))
				]));
	});
var $author$project$PagesComponents$New$Views$viewSqlSourceTab = F4(
	function (htmlId, openedCollapse, projects, model) {
		return A2(
			$elm$html$Html$div,
			_List_Nil,
			_List_fromArray(
				[
					A2(
					$author$project$PagesComponents$New$Views$viewHeading,
					'Import your SQL schema',
					_List_fromArray(
						[
							$elm$html$Html$text('Everything stay on your machine, don\'t worry about your schema privacy.')
						])),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('mt-6')
						]),
					_List_fromArray(
						[
							A4($author$project$Services$SqlSource$viewInput, $author$project$PagesComponents$New$Models$SqlSourceMsg, $author$project$PagesComponents$New$Models$Noop, htmlId, model)
						])),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('mt-3')
						]),
					_List_fromArray(
						[
							A2($author$project$PagesComponents$New$Views$viewHowToGetSchemaCollapse, htmlId, openedCollapse)
						])),
					A2($author$project$PagesComponents$New$Views$viewDataPrivacyCollapse, htmlId, openedCollapse),
					A2($author$project$Services$SqlSource$viewParsing, $author$project$PagesComponents$New$Models$SqlSourceMsg, model),
					A3(
					$author$project$PagesComponents$New$Views$viewSourceActionButtons,
					$author$project$PagesComponents$New$Models$InitTab(1),
					projects,
					model.g8)
				]));
	});
var $author$project$PagesComponents$New$Views$viewTabContent = F5(
	function (htmlId, zone, projects, urlOrganization, model) {
		var _v0 = model.on;
		switch (_v0) {
			case 0:
				return A3(
					$author$project$Libs$Maybe$mapOrElse,
					A3($author$project$PagesComponents$New$Views$viewDatabaseSourceTab, htmlId + '-database', model.bt, projects),
					A2($elm$html$Html$div, _List_Nil, _List_Nil),
					model.ca);
			case 1:
				return A3(
					$author$project$Libs$Maybe$mapOrElse,
					A3($author$project$PagesComponents$New$Views$viewSqlSourceTab, htmlId + '-sql', model.bt, projects),
					A2($elm$html$Html$div, _List_Nil, _List_Nil),
					model.cA);
			case 2:
				return A3(
					$author$project$Libs$Maybe$mapOrElse,
					A3($author$project$PagesComponents$New$Views$viewJsonSourceTab, htmlId + '-json', model.bt, projects),
					A2($elm$html$Html$div, _List_Nil, _List_Nil),
					model.cm);
			case 3:
				return $author$project$PagesComponents$New$Views$viewEmptyProjectTab;
			case 4:
				return A3(
					$author$project$Libs$Maybe$mapOrElse,
					A3($author$project$PagesComponents$New$Views$viewProjectSourceTab, htmlId + '-project', zone, projects),
					A2($elm$html$Html$div, _List_Nil, _List_Nil),
					model.nO);
			default:
				return A3(
					$author$project$Libs$Maybe$mapOrElse,
					A3($author$project$PagesComponents$New$Views$viewSampleSourceTab, urlOrganization, projects, model.of),
					A2($elm$html$Html$div, _List_Nil, _List_Nil),
					model.oe);
		}
	});
var $author$project$PagesComponents$New$Views$viewContent = F6(
	function (htmlId, zone, projects, urlOrganization, model, page) {
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$author$project$Libs$Html$Attributes$css(
					_List_fromArray(
						[
							'divide-y',
							$author$project$Libs$Tailwind$lg(
							_List_fromArray(
								['grid grid-cols-12 divide-x']))
						]))
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$aside,
					_List_fromArray(
						[
							$author$project$Libs$Html$Attributes$css(
							_List_fromArray(
								[
									'py-6',
									$author$project$Libs$Tailwind$lg(
									_List_fromArray(
										['col-span-3']))
								]))
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$nav,
							_List_fromArray(
								[
									$author$project$Libs$Html$Attributes$css(
									_List_fromArray(
										['space-y-1']))
								]),
							A2(
								$elm$core$List$map,
								$author$project$PagesComponents$New$Views$viewTab(model.on),
								page.hF))
						])),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$author$project$Libs$Html$Attributes$css(
							_List_fromArray(
								[
									'px-4 py-6',
									$author$project$Libs$Tailwind$sm(
									_List_fromArray(
										['p-6'])),
									$author$project$Libs$Tailwind$lg(
									_List_fromArray(
										['pb-8 col-span-9 rounded-r-lg']))
								]))
						]),
					_List_fromArray(
						[
							A5($author$project$PagesComponents$New$Views$viewTabContent, htmlId + '-tab', zone, projects, urlOrganization, model)
						]))
				]));
	});
var $author$project$PagesComponents$New$Models$ConfirmAnswer = F2(
	function (a, b) {
		return {$: 14, a: a, b: b};
	});
var $author$project$PagesComponents$New$Models$ModalClose = function (a) {
	return {$: 16, a: a};
};
var $author$project$PagesComponents$New$Views$viewConfirm = F2(
	function (opened, model) {
		return A2(
			$author$project$Components$Molecules$Modal$confirm,
			{
				b6: model.cX.b6,
				A: model.cX.A,
				b8: model.cX.b8,
				aa: model.cX.aa,
				H: model.H,
				cq: model.cX.cq,
				br: $author$project$PagesComponents$New$Models$ModalClose(
					A2($author$project$PagesComponents$New$Models$ConfirmAnswer, false, $elm$core$Platform$Cmd$none)),
				ct: $author$project$PagesComponents$New$Models$ModalClose(
					A2($author$project$PagesComponents$New$Models$ConfirmAnswer, true, model.cX.ct)),
				a4: model.cX.a4
			},
			opened);
	});
var $author$project$PagesComponents$New$Views$viewModal = function (model) {
	return A3(
		$elm$html$Html$Keyed$node,
		'div',
		_List_fromArray(
			[
				$elm$html$Html$Attributes$class('az-modals')
			]),
		A2(
			$elm$core$List$sortBy,
			function (_v0) {
				var id = _v0.a;
				return -A2(
					$elm$core$Maybe$withDefault,
					0,
					A2($author$project$Libs$List$indexOf, id, model.nt));
			},
			A2(
				$elm$core$List$filterMap,
				$elm$core$Basics$identity,
				_List_fromArray(
					[
						A2(
						$elm$core$Maybe$map,
						function (m) {
							return _Utils_Tuple2(
								m.H,
								A2(
									$author$project$PagesComponents$New$Views$viewConfirm,
									A2($elm$core$List$member, m.H, model.nt),
									m));
						},
						model.b8)
					]))));
};
var $author$project$PagesComponents$New$Views$viewNewProject = F4(
	function (shared, currentUrl, urlOrganization, model) {
		var backUrl = A3(
			$author$project$Libs$Maybe$mapOrElse,
			function (_v0) {
				return $author$project$Services$Backend$organizationUrl(urlOrganization);
			},
			$author$project$Services$Backend$homeUrl,
			shared.kc);
		return A9(
			$author$project$PagesComponents$Helpers$appShell,
			currentUrl,
			urlOrganization,
			shared.kc,
			function (link) {
				return $author$project$PagesComponents$New$Models$SelectMenu(link.fp);
			},
			$author$project$PagesComponents$New$Models$DropdownToggle,
			model,
			_List_fromArray(
				[
					A2(
					$elm$html$Html$a,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$href(backUrl)
						]),
					_List_fromArray(
						[
							A2($author$project$Components$Atoms$Icon$outline, 9, 'inline-block'),
							$elm$html$Html$text(' '),
							$elm$html$Html$text(model.fg)
						]))
				]),
			_List_fromArray(
				[
					A6(
					$author$project$PagesComponents$New$Views$viewContent,
					'new-project',
					shared.pj,
					shared.nQ,
					urlOrganization,
					model,
					{
						hF: _List_fromArray(
							[
								{
								cX: _List_fromArray(
									[
										$elm$html$Html$text('From database connection'),
										A3(
										$author$project$Components$Atoms$Badge$basicFlex,
										$author$project$Libs$Tailwind$green,
										_List_fromArray(
											[
												$elm$html$Html$Attributes$class('ml-3')
											]),
										_List_fromArray(
											[
												$elm$html$Html$text('New')
											]))
									]),
								aa: $author$project$Components$Atoms$Icons$sources.lc,
								a3: 0
							},
								{
								cX: _List_fromArray(
									[
										$elm$html$Html$text('From SQL structure')
									]),
								aa: $author$project$Components$Atoms$Icons$sources.oD,
								a3: 1
							},
								{
								cX: _List_fromArray(
									[
										$elm$html$Html$text('From JSON')
									]),
								aa: $author$project$Components$Atoms$Icons$sources.mh,
								a3: 2
							},
								{
								cX: _List_fromArray(
									[
										$elm$html$Html$text('Empty project')
									]),
								aa: $author$project$Components$Atoms$Icons$sources.lC,
								a3: 3
							},
								{
								cX: _List_fromArray(
									[
										$elm$html$Html$text('Import project')
									]),
								aa: $author$project$Components$Atoms$Icons$sources.nN,
								a3: 4
							},
								{
								cX: _List_fromArray(
									[
										$elm$html$Html$text('Explore sample')
									]),
								aa: $author$project$Components$Atoms$Icons$sources.od,
								a3: 5
							}
							])
					})
				]),
			_List_fromArray(
				[
					$author$project$PagesComponents$New$Views$viewModal(model),
					A3($elm$html$Html$Lazy$lazy2, $author$project$Services$Toasts$view, $author$project$PagesComponents$New$Models$Toast, model.bX)
				]));
	});
var $author$project$PagesComponents$New$Views$view = F4(
	function (shared, currentUrl, urlOrganization, model) {
		return {
			kM: A4($author$project$PagesComponents$New$Views$viewNewProject, shared, currentUrl, urlOrganization, model),
			a4: $author$project$PagesComponents$New$Views$title
		};
	});
var $author$project$Pages$New$page = F2(
	function (shared, req) {
		var urlOrganization = $elm$core$Maybe$Nothing;
		return $author$project$Page$element(
			{
				bl: A2($author$project$PagesComponents$New$Init$init, urlOrganization, req.e1),
				by: $author$project$PagesComponents$New$Subscriptions$subscriptions,
				fv: A4($author$project$PagesComponents$New$Updates$update, req, shared.ne, shared.nQ, urlOrganization),
				o3: A3($author$project$PagesComponents$New$Views$view, shared, req.o1, urlOrganization)
			});
	});
var $author$project$Pages$NotFound$addPrefixed = F3(
	function (prefix, maybeSegment, starter) {
		if (maybeSegment.$ === 1) {
			return starter;
		} else {
			var segment = maybeSegment.a;
			return _Utils_ap(
				starter,
				_Utils_ap(prefix, segment));
		}
	});
var $author$project$Track$notFound = function (url) {
	return A3(
		$author$project$Track$createEvent,
		'not_found',
		_List_fromArray(
			[
				_Utils_Tuple2(
				'url',
				$elm$json$Json$Encode$string(url))
			]),
		$elm$core$Maybe$Nothing);
};
var $author$project$Pages$NotFound$title = 'Page not found - Azimutt';
var $author$project$Pages$NotFound$init = function (req) {
	var url = A3(
		$author$project$Pages$NotFound$addPrefixed,
		'#',
		req.o1.iA,
		A3($author$project$Pages$NotFound$addPrefixed, '?', req.o1.e1, req.o1.aA));
	return _Utils_Tuple2(
		{bX: $author$project$Services$Toasts$init, o1: url},
		$elm$core$Platform$Cmd$batch(
			_List_fromArray(
				[
					$author$project$Ports$setMeta(
					{
						kM: $elm$core$Maybe$Just('h-full'),
						kQ: $elm$core$Maybe$Just(
							{e1: $elm$core$Dict$empty, hk: $author$project$Gen$Route$NotFound}),
						bf: $elm$core$Maybe$Just($author$project$Conf$constants.lg),
						l4: $elm$core$Maybe$Just('h-full'),
						a4: $elm$core$Maybe$Just($author$project$Pages$NotFound$title)
					}),
					$author$project$Ports$track(
					$author$project$Track$notFound(url))
				])));
};
var $author$project$Pages$NotFound$JsMessage = function (a) {
	return {$: 1, a: a};
};
var $author$project$Pages$NotFound$subscriptions = function (_v0) {
	return $author$project$Ports$onJsMessage($author$project$Pages$NotFound$JsMessage);
};
var $author$project$Pages$NotFound$Toast = function (a) {
	return {$: 0, a: a};
};
var $author$project$Pages$NotFound$handleJsMessage = F2(
	function (msg, model) {
		if (msg.$ === 8) {
			var level = msg.a;
			var message = msg.b;
			return _Utils_Tuple2(
				model,
				$author$project$Libs$Task$send(
					$author$project$Pages$NotFound$Toast(
						A2($author$project$Services$Toasts$create, level, message))));
		} else {
			return _Utils_Tuple2(
				model,
				$author$project$Libs$Task$send(
					$author$project$Pages$NotFound$Toast(
						A2(
							$author$project$Services$Toasts$create,
							'warning',
							$author$project$Ports$unhandledJsMsgError(msg)))));
		}
	});
var $author$project$Pages$NotFound$update = F2(
	function (msg, model) {
		if (!msg.$) {
			var message = msg.a;
			return A2(
				$author$project$Services$Lenses$mapToastsCmd,
				A2($author$project$Services$Toasts$update, $author$project$Pages$NotFound$Toast, message),
				model);
		} else {
			var message = msg.a;
			return A2($author$project$Pages$NotFound$handleJsMessage, message, model);
		}
	});
var $author$project$Components$Slices$NotFound$simple = function (model) {
	return A2(
		$elm$html$Html$div,
		_List_fromArray(
			[
				$elm$html$Html$Attributes$class('min-h-full pt-16 pb-12 flex flex-col bg-white')
			]),
		_List_fromArray(
			[
				A2(
				$elm$html$Html$main_,
				_List_fromArray(
					[
						$author$project$Libs$Html$Attributes$css(
						_List_fromArray(
							[
								'flex-grow flex flex-col justify-center max-w-7xl w-full mx-auto px-4',
								$author$project$Libs$Tailwind$sm(
								_List_fromArray(
									['px-6'])),
								$author$project$Libs$Tailwind$lg(
								_List_fromArray(
									['px-8']))
							]))
					]),
				_List_fromArray(
					[
						A2(
						$elm$html$Html$div,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$class('flex-shrink-0 flex justify-center')
							]),
						_List_fromArray(
							[
								A2(
								$elm$html$Html$a,
								_List_fromArray(
									[
										$elm$html$Html$Attributes$href(model.fH.eL.o1),
										$elm$html$Html$Attributes$class('inline-flex')
									]),
								_List_fromArray(
									[
										A2(
										$elm$html$Html$span,
										_List_fromArray(
											[
												$elm$html$Html$Attributes$class('sr-only')
											]),
										_List_fromArray(
											[
												$elm$html$Html$text(model.fH.eL.fp)
											])),
										A2(
										$elm$html$Html$img,
										_List_fromArray(
											[
												$elm$html$Html$Attributes$class('h-12 w-auto'),
												$elm$html$Html$Attributes$src(model.fH.eE.ht),
												$elm$html$Html$Attributes$alt(model.fH.eE.fA)
											]),
										_List_Nil)
									]))
							])),
						A2(
						$elm$html$Html$div,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$class('py-16')
							]),
						_List_fromArray(
							[
								A2(
								$elm$html$Html$div,
								_List_fromArray(
									[
										$elm$html$Html$Attributes$class('text-center')
									]),
								_List_fromArray(
									[
										A2(
										$elm$html$Html$p,
										_List_fromArray(
											[
												$elm$html$Html$Attributes$class('text-sm font-semibold text-primary-600 uppercase tracking-wide')
											]),
										_List_fromArray(
											[
												$elm$html$Html$text(model.f8)
											])),
										A2(
										$elm$html$Html$h1,
										_List_fromArray(
											[
												$author$project$Libs$Html$Attributes$css(
												_List_fromArray(
													[
														'mt-2 text-4xl font-extrabold text-gray-900 tracking-tight',
														$author$project$Libs$Tailwind$sm(
														_List_fromArray(
															['text-5xl']))
													]))
											]),
										_List_fromArray(
											[
												$elm$html$Html$text(model.a4)
											])),
										A2(
										$elm$html$Html$p,
										_List_fromArray(
											[
												$elm$html$Html$Attributes$class('mt-2 text-base text-gray-500')
											]),
										_List_fromArray(
											[
												$elm$html$Html$text(model.cq)
											])),
										A2(
										$elm$html$Html$div,
										_List_fromArray(
											[
												$elm$html$Html$Attributes$class('mt-6 flex justify-center space-x-4')
											]),
										A2(
											$elm$core$List$intersperse,
											A2(
												$elm$html$Html$span,
												_List_fromArray(
													[
														$elm$html$Html$Attributes$class('inline-block border-l border-gray-300'),
														$author$project$Libs$Html$Attributes$ariaHidden(true)
													]),
												_List_Nil),
											A2(
												$elm$core$List$map,
												function (link) {
													return A2(
														$elm$html$Html$a,
														_List_fromArray(
															[
																$elm$html$Html$Attributes$href(link.o1),
																$author$project$Libs$Html$Attributes$css(
																_List_fromArray(
																	[
																		'text-base font-medium text-primary-600',
																		$author$project$Libs$Tailwind$hover(
																		_List_fromArray(
																			['text-primary-500']))
																	]))
															]),
														_List_fromArray(
															[
																$elm$html$Html$text(link.fp)
															]));
												},
												model.co)))
									]))
							]))
					])),
				A2(
				$elm$html$Html$footer,
				_List_fromArray(
					[
						$author$project$Libs$Html$Attributes$css(
						_List_fromArray(
							[
								'flex-shrink-0 max-w-7xl w-full mx-auto px-4 ',
								$author$project$Libs$Tailwind$sm(
								_List_fromArray(
									['px-6'])),
								$author$project$Libs$Tailwind$lg(
								_List_fromArray(
									['px-8']))
							]))
					]),
				_List_fromArray(
					[
						A2(
						$elm$html$Html$nav,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$class('flex justify-center space-x-4')
							]),
						A2(
							$elm$core$List$intersperse,
							A2(
								$elm$html$Html$span,
								_List_fromArray(
									[
										$elm$html$Html$Attributes$class('inline-block border-l border-gray-300'),
										$author$project$Libs$Html$Attributes$ariaHidden(true)
									]),
								_List_Nil),
							A2(
								$elm$core$List$map,
								function (link) {
									return A2(
										$elm$html$Html$a,
										_List_fromArray(
											[
												$elm$html$Html$Attributes$href(link.o1),
												$author$project$Libs$Html$Attributes$css(
												_List_fromArray(
													[
														'text-sm font-medium text-gray-500 ',
														$author$project$Libs$Tailwind$hover(
														_List_fromArray(
															['text-gray-600']))
													]))
											]),
										_List_fromArray(
											[
												$elm$html$Html$text(link.fp)
											]));
								},
								model.f0)))
					]))
			]));
};
var $author$project$Pages$NotFound$viewNotFound = function (model) {
	return _List_fromArray(
		[
			$author$project$Components$Slices$NotFound$simple(
			{
				fH: {
					eE: {fA: 'Azimutt', ht: 'https://xestjs.com/img/xest-icon.png'},
					eL: {fp: 'Azimutt', o1: $author$project$Services$Backend$homeUrl}
				},
				f0: _List_fromArray(
					[
						{fp: 'Contact Support', o1: $author$project$Conf$constants.kA},
						{fp: 'Twitter', o1: $author$project$Conf$constants.kG},
						{fp: 'Blog', o1: $author$project$Services$Backend$blogUrl}
					]),
				f8: '404 error',
				co: _List_fromArray(
					[
						{fp: 'Go back home', o1: $author$project$Services$Backend$homeUrl}
					]),
				cq: 'Sorry, we couldn\'t find the page you’re looking for.',
				a4: 'Page not found.'
			}),
			A3($elm$html$Html$Lazy$lazy2, $author$project$Services$Toasts$view, $author$project$Pages$NotFound$Toast, model.bX)
		]);
};
var $author$project$Pages$NotFound$view = function (model) {
	return {
		kM: $author$project$Pages$NotFound$viewNotFound(model),
		a4: $author$project$Pages$NotFound$title
	};
};
var $author$project$Pages$NotFound$page = F2(
	function (_v0, req) {
		return $author$project$Page$element(
			{
				bl: $author$project$Pages$NotFound$init(req),
				by: $author$project$Pages$NotFound$subscriptions,
				fv: $author$project$Pages$NotFound$update,
				o3: $author$project$Pages$NotFound$view
			});
	});
var $author$project$Pages$Organization_$Create$page = F2(
	function (shared, req) {
		var urlOrganization = $elm$core$Maybe$Just(req.nB.nx);
		return $author$project$Page$element(
			{
				bl: $author$project$PagesComponents$Create$Init$init(urlOrganization),
				by: $author$project$PagesComponents$Create$Subscriptions$subscriptions,
				fv: A5($author$project$PagesComponents$Create$Updates$update, req, shared.ne, shared.nQ, shared.nR, urlOrganization),
				o3: $author$project$PagesComponents$Create$Views$view
			});
	});
var $author$project$Pages$Organization_$New$page = F2(
	function (shared, req) {
		var urlOrganization = $elm$core$Maybe$Just(req.nB.nx);
		return $author$project$Page$element(
			{
				bl: A2($author$project$PagesComponents$New$Init$init, urlOrganization, req.e1),
				by: $author$project$PagesComponents$New$Subscriptions$subscriptions,
				fv: A4($author$project$PagesComponents$New$Updates$update, req, shared.ne, shared.nQ, urlOrganization),
				o3: A3($author$project$PagesComponents$New$Views$view, shared, req.o1, urlOrganization)
			});
	});
var $author$project$PagesComponents$Organization_$Project_$Models$ErdConf$project = function (token) {
	return {
		fP: true,
		c8: true,
		fY: false,
		f3: false,
		bk: true,
		aM: true,
		mq: true,
		jb: true,
		hd: true,
		fa: _Utils_eq(token, $elm$core$Maybe$Nothing),
		fe: true,
		os: _Utils_eq(token, $elm$core$Maybe$Nothing),
		jW: true,
		fv: true
	};
};
var $author$project$Pages$Organization_$Project_$init = F3(
	function (params, token, save) {
		return _Utils_Tuple2(
			{
				kr: $elm$core$Maybe$Nothing,
				k$: $elm$core$Dict$empty,
				Z: $author$project$PagesComponents$Organization_$Project_$Models$ErdConf$project(token),
				b8: $elm$core$Maybe$Nothing,
				k3: $elm$core$Maybe$Nothing,
				k8: 1,
				lq: $elm$core$Maybe$Nothing,
				ls: false,
				ep: $elm$core$Maybe$Nothing,
				lw: $elm$core$Maybe$Nothing,
				_: $elm$core$Maybe$Nothing,
				lB: $elm$core$Maybe$Nothing,
				lE: $elm$core$Maybe$Nothing,
				lF: $author$project$Models$ErdProps$zero,
				c8: $elm$core$Maybe$Nothing,
				lY: $elm$core$Maybe$Nothing,
				l1: $elm$core$Maybe$Nothing,
				l2: $elm$core$Maybe$Nothing,
				mt: false,
				mS: $elm$core$Maybe$Nothing,
				m$: {
					mR: false,
					fb: {bb: 0, fp: ''}
				},
				m3: $elm$core$Maybe$Nothing,
				nt: _List_Nil,
				jo: '',
				eX: '',
				nS: $elm$core$Maybe$Nothing,
				fa: $elm$core$Maybe$Nothing,
				oi: $elm$core$Maybe$Nothing,
				op: $elm$core$Maybe$Nothing,
				dM: $elm$core$Maybe$Nothing,
				os: $elm$core$Maybe$Nothing,
				oA: $elm$core$Maybe$Nothing,
				oL: $elm$core$Dict$empty,
				bX: $author$project$Services$Toasts$init,
				o4: $elm$core$Maybe$Nothing
			},
			$elm$core$Platform$Cmd$batch(
				_List_fromArray(
					[
						$author$project$Ports$setMeta(
						{
							kM: $elm$core$Maybe$Just('h-full overflow-hidden'),
							kQ: $elm$core$Maybe$Just(
								{
									e1: $elm$core$Dict$empty,
									hk: $author$project$Gen$Route$Organization___Project_(params)
								}),
							bf: $elm$core$Maybe$Just($author$project$Conf$constants.lg),
							l4: $elm$core$Maybe$Just('h-full'),
							a4: $elm$core$Maybe$Just(
								$author$project$PagesComponents$Organization_$Project_$Views$title($elm$core$Maybe$Nothing))
						}),
						$author$project$Ports$listenHotkeys($author$project$Conf$hotkeys),
						A3($author$project$Ports$getProject, params.nx, params.nN, token),
						A3(
						$author$project$Libs$Bool$cond,
						save,
						A2($author$project$Libs$Task$sendAfter, 1000, $author$project$PagesComponents$Organization_$Project_$Models$TriggerSaveProject),
						$elm$core$Platform$Cmd$none)
					])));
	});
var $elm$browser$Browser$Navigation$load = _Browser_load;
var $author$project$Pages$Organization_$Project_$page = F2(
	function (shared, req) {
		var _v0 = _Utils_Tuple3(
			A2($elm$core$Dict$get, 'layout', req.e1),
			A2($elm$core$Dict$get, 'token', req.e1),
			A2($elm$core$Dict$member, 'save', req.e1));
		var urlLayout = _v0.a;
		var urlToken = _v0.b;
		var urlSave = _v0.c;
		var _v1 = _Utils_Tuple2(
			$elm$core$Maybe$Just(req.nB.nx),
			$elm$core$Maybe$Just(req.nB.nN));
		var urlOrganization = _v1.a;
		var urlProject = _v1.b;
		return $author$project$Page$element(
			{
				bl: A3($author$project$Pages$Organization_$Project_$init, req.nB, urlToken, urlSave),
				by: $author$project$PagesComponents$Organization_$Project_$Subscriptions$subscriptions,
				fv: A6($author$project$PagesComponents$Organization_$Project_$Updates$update, urlLayout, shared.pj, shared.ne, urlOrganization, shared.ny, shared.nQ),
				o3: A5(
					$author$project$PagesComponents$Organization_$Project_$Views$view,
					$elm$browser$Browser$Navigation$load(
						$author$project$Services$Backend$organizationUrl(urlOrganization)),
					req.o1,
					urlOrganization,
					urlProject,
					shared)
			});
	});
var $author$project$Gen$Pages$pages = {
	cZ: A3($author$project$Gen$Pages$bundle, $author$project$Pages$Create$page, $author$project$Gen$Model$Create, $author$project$Gen$Msg$Create),
	c5: A3($author$project$Gen$Pages$bundle, $author$project$Pages$Embed$page, $author$project$Gen$Model$Embed, $author$project$Gen$Msg$Embed),
	dq: A3($author$project$Gen$Pages$bundle, $author$project$Pages$New$page, $author$project$Gen$Model$New, $author$project$Gen$Msg$New),
	ds: A3($author$project$Gen$Pages$bundle, $author$project$Pages$NotFound$page, $author$project$Gen$Model$NotFound, $author$project$Gen$Msg$NotFound),
	dz: A3($author$project$Gen$Pages$bundle, $author$project$Pages$Organization_$Create$page, $author$project$Gen$Model$Organization___Create, $author$project$Gen$Msg$Organization___Create),
	dA: A3($author$project$Gen$Pages$bundle, $author$project$Pages$Organization_$New$page, $author$project$Gen$Model$Organization___New, $author$project$Gen$Msg$Organization___New),
	dB: A3($author$project$Gen$Pages$bundle, $author$project$Pages$Organization_$Project_$page, $author$project$Gen$Model$Organization___Project_, $author$project$Gen$Msg$Organization___Project_)
};
var $author$project$Gen$Pages$init = function (route) {
	switch (route.$) {
		case 0:
			return $author$project$Gen$Pages$pages.cZ.bl(0);
		case 1:
			return $author$project$Gen$Pages$pages.c5.bl(0);
		case 2:
			return $author$project$Gen$Pages$pages.dq.bl(0);
		case 3:
			return $author$project$Gen$Pages$pages.ds.bl(0);
		case 4:
			var params = route.a;
			return $author$project$Gen$Pages$pages.dz.bl(params);
		case 5:
			var params = route.a;
			return $author$project$Gen$Pages$pages.dA.bl(params);
		default:
			var params = route.a;
			return $author$project$Gen$Pages$pages.dB.bl(params);
	}
};
var $author$project$Shared$ZoneChanged = function (a) {
	return {$: 0, a: a};
};
var $author$project$Libs$Models$Env$Dev = 0;
var $author$project$Libs$Models$Env$Prod = 2;
var $author$project$Libs$Models$Env$Staging = 1;
var $author$project$Libs$Models$Env$fromString = function (value) {
	switch (value) {
		case 'dev':
			return 0;
		case 'staging':
			return 1;
		case 'prod':
			return 2;
		default:
			return 0;
	}
};
var $elm$time$Time$here = _Time_here(0);
var $author$project$Shared$init = F2(
	function (_v0, flags) {
		var env = $author$project$Libs$Models$Env$fromString(flags.Z.lD);
		return _Utils_Tuple2(
			{
				Z: {
					lD: env,
					e_: $author$project$Libs$Models$Platform$fromString(flags.Z.e_)
				},
				ne: $elm$time$Time$millisToPosix(flags.ne),
				ny: _List_Nil,
				nQ: _List_Nil,
				nR: false,
				kc: $elm$core$Maybe$Nothing,
				fx: false,
				pj: $elm$time$Time$utc
			},
			$elm$core$Platform$Cmd$batch(
				_List_fromArray(
					[
						A2($elm$core$Task$perform, $author$project$Shared$ZoneChanged, $elm$time$Time$here)
					])));
	});
var $author$project$Effect$toCmd = F2(
	function (_v0, effect) {
		var fromSharedMsg = _v0.a;
		var fromPageMsg = _v0.b;
		switch (effect.$) {
			case 0:
				return $elm$core$Platform$Cmd$none;
			case 1:
				var cmd = effect.a;
				return A2($elm$core$Platform$Cmd$map, fromPageMsg, cmd);
			case 2:
				var msg = effect.a;
				return A2(
					$elm$core$Task$perform,
					fromSharedMsg,
					$elm$core$Task$succeed(msg));
			default:
				var list = effect.a;
				return $elm$core$Platform$Cmd$batch(
					A2(
						$elm$core$List$map,
						$author$project$Effect$toCmd(
							_Utils_Tuple2(fromSharedMsg, fromPageMsg)),
						list));
		}
	});
var $author$project$Main$init = F3(
	function (flags, url, key) {
		var _v0 = A2(
			$author$project$Shared$init,
			A3($author$project$Request$create, 0, url, key),
			flags);
		var shared = _v0.a;
		var sharedCmd = _v0.b;
		var _v1 = A4(
			$author$project$Gen$Pages$init,
			$author$project$Gen$Route$fromUrl(url),
			shared,
			url,
			key);
		var page = _v1.a;
		var effect = _v1.b;
		return _Utils_Tuple2(
			A4($author$project$Main$Model, url, key, shared, page),
			$elm$core$Platform$Cmd$batch(
				_List_fromArray(
					[
						A2($elm$core$Platform$Cmd$map, $author$project$Main$Shared, sharedCmd),
						A2(
						$author$project$Effect$toCmd,
						_Utils_Tuple2($author$project$Main$Shared, $author$project$Main$Page),
						effect),
						A2($elm$browser$Browser$Navigation$pushUrl, key, '/new')
					])));
	});
var $author$project$Gen$Pages$subscriptions = function (model_) {
	switch (model_.$) {
		case 0:
			return F3(
				function (_v1, _v2, _v3) {
					return $elm$core$Platform$Sub$none;
				});
		case 1:
			var params = model_.a;
			var model = model_.b;
			return A2($author$project$Gen$Pages$pages.cZ.by, params, model);
		case 2:
			var params = model_.a;
			var model = model_.b;
			return A2($author$project$Gen$Pages$pages.c5.by, params, model);
		case 3:
			var params = model_.a;
			var model = model_.b;
			return A2($author$project$Gen$Pages$pages.dq.by, params, model);
		case 4:
			var params = model_.a;
			var model = model_.b;
			return A2($author$project$Gen$Pages$pages.ds.by, params, model);
		case 5:
			var params = model_.a;
			var model = model_.b;
			return A2($author$project$Gen$Pages$pages.dz.by, params, model);
		case 6:
			var params = model_.a;
			var model = model_.b;
			return A2($author$project$Gen$Pages$pages.dA.by, params, model);
		default:
			var params = model_.a;
			var model = model_.b;
			return A2($author$project$Gen$Pages$pages.dB.by, params, model);
	}
};
var $author$project$Shared$JsMessage = function (a) {
	return {$: 4, a: a};
};
var $author$project$Shared$TimeChanged = function (a) {
	return {$: 1, a: a};
};
var $elm$time$Time$Every = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $elm$time$Time$State = F2(
	function (taggers, processes) {
		return {jA: processes, j2: taggers};
	});
var $elm$time$Time$init = $elm$core$Task$succeed(
	A2($elm$time$Time$State, $elm$core$Dict$empty, $elm$core$Dict$empty));
var $elm$time$Time$addMySub = F2(
	function (_v0, state) {
		var interval = _v0.a;
		var tagger = _v0.b;
		var _v1 = A2($elm$core$Dict$get, interval, state);
		if (_v1.$ === 1) {
			return A3(
				$elm$core$Dict$insert,
				interval,
				_List_fromArray(
					[tagger]),
				state);
		} else {
			var taggers = _v1.a;
			return A3(
				$elm$core$Dict$insert,
				interval,
				A2($elm$core$List$cons, tagger, taggers),
				state);
		}
	});
var $elm$time$Time$setInterval = _Time_setInterval;
var $elm$time$Time$spawnHelp = F3(
	function (router, intervals, processes) {
		if (!intervals.b) {
			return $elm$core$Task$succeed(processes);
		} else {
			var interval = intervals.a;
			var rest = intervals.b;
			var spawnTimer = $elm$core$Process$spawn(
				A2(
					$elm$time$Time$setInterval,
					interval,
					A2($elm$core$Platform$sendToSelf, router, interval)));
			var spawnRest = function (id) {
				return A3(
					$elm$time$Time$spawnHelp,
					router,
					rest,
					A3($elm$core$Dict$insert, interval, id, processes));
			};
			return A2($elm$core$Task$andThen, spawnRest, spawnTimer);
		}
	});
var $elm$time$Time$onEffects = F3(
	function (router, subs, _v0) {
		var processes = _v0.jA;
		var rightStep = F3(
			function (_v6, id, _v7) {
				var spawns = _v7.a;
				var existing = _v7.b;
				var kills = _v7.c;
				return _Utils_Tuple3(
					spawns,
					existing,
					A2(
						$elm$core$Task$andThen,
						function (_v5) {
							return kills;
						},
						$elm$core$Process$kill(id)));
			});
		var newTaggers = A3($elm$core$List$foldl, $elm$time$Time$addMySub, $elm$core$Dict$empty, subs);
		var leftStep = F3(
			function (interval, taggers, _v4) {
				var spawns = _v4.a;
				var existing = _v4.b;
				var kills = _v4.c;
				return _Utils_Tuple3(
					A2($elm$core$List$cons, interval, spawns),
					existing,
					kills);
			});
		var bothStep = F4(
			function (interval, taggers, id, _v3) {
				var spawns = _v3.a;
				var existing = _v3.b;
				var kills = _v3.c;
				return _Utils_Tuple3(
					spawns,
					A3($elm$core$Dict$insert, interval, id, existing),
					kills);
			});
		var _v1 = A6(
			$elm$core$Dict$merge,
			leftStep,
			bothStep,
			rightStep,
			newTaggers,
			processes,
			_Utils_Tuple3(
				_List_Nil,
				$elm$core$Dict$empty,
				$elm$core$Task$succeed(0)));
		var spawnList = _v1.a;
		var existingDict = _v1.b;
		var killTask = _v1.c;
		return A2(
			$elm$core$Task$andThen,
			function (newProcesses) {
				return $elm$core$Task$succeed(
					A2($elm$time$Time$State, newTaggers, newProcesses));
			},
			A2(
				$elm$core$Task$andThen,
				function (_v2) {
					return A3($elm$time$Time$spawnHelp, router, spawnList, existingDict);
				},
				killTask));
	});
var $elm$time$Time$onSelfMsg = F3(
	function (router, interval, state) {
		var _v0 = A2($elm$core$Dict$get, interval, state.j2);
		if (_v0.$ === 1) {
			return $elm$core$Task$succeed(state);
		} else {
			var taggers = _v0.a;
			var tellTaggers = function (time) {
				return $elm$core$Task$sequence(
					A2(
						$elm$core$List$map,
						function (tagger) {
							return A2(
								$elm$core$Platform$sendToApp,
								router,
								tagger(time));
						},
						taggers));
			};
			return A2(
				$elm$core$Task$andThen,
				function (_v1) {
					return $elm$core$Task$succeed(state);
				},
				A2($elm$core$Task$andThen, tellTaggers, $elm$time$Time$now));
		}
	});
var $elm$time$Time$subMap = F2(
	function (f, _v0) {
		var interval = _v0.a;
		var tagger = _v0.b;
		return A2(
			$elm$time$Time$Every,
			interval,
			A2($elm$core$Basics$composeL, f, tagger));
	});
_Platform_effectManagers['Time'] = _Platform_createManager($elm$time$Time$init, $elm$time$Time$onEffects, $elm$time$Time$onSelfMsg, 0, $elm$time$Time$subMap);
var $elm$time$Time$subscription = _Platform_leaf('Time');
var $elm$time$Time$every = F2(
	function (interval, tagger) {
		return $elm$time$Time$subscription(
			A2($elm$time$Time$Every, interval, tagger));
	});
var $author$project$Shared$subscriptions = F2(
	function (_v0, _v1) {
		return $elm$core$Platform$Sub$batch(
			_List_fromArray(
				[
					A2($elm$time$Time$every, 10 * 1000, $author$project$Shared$TimeChanged),
					$author$project$Ports$onJsMessage($author$project$Shared$JsMessage)
				]));
	});
var $author$project$Main$subscriptions = function (model) {
	return $elm$core$Platform$Sub$batch(
		_List_fromArray(
			[
				A2(
				$elm$core$Platform$Sub$map,
				$author$project$Main$Page,
				A4($author$project$Gen$Pages$subscriptions, model.nA, model.a1, model.o1, model.dk)),
				A2(
				$elm$core$Platform$Sub$map,
				$author$project$Main$Shared,
				A2(
					$author$project$Shared$subscriptions,
					A3($author$project$Request$create, 0, model.o1, model.dk),
					model.a1))
			]));
};
var $toastal$either$Either$Left = function (a) {
	return {$: 0, a: a};
};
var $author$project$Services$Backend$isExternal = function (url) {
	return (url.aA === '/') || ((url.aA === '/home') || (A2($elm$core$String$startsWith, '/login', url.aA) || ((url.aA === '/logout') || A2($elm$core$String$startsWith, '/organizations/', url.aA))));
};
var $author$project$Services$Backend$internal = function (url) {
	return $author$project$Services$Backend$isExternal(url) ? $toastal$either$Either$Left(
		$author$project$Libs$Url$relative(url)) : $toastal$either$Either$Right(url);
};
var $toastal$either$Either$unpack = F3(
	function (f, g, e) {
		if (e.$ === 1) {
			var b = e.a;
			return g(b);
		} else {
			var a = e.a;
			return f(a);
		}
	});
var $author$project$Effect$none = $author$project$Effect$None;
var $author$project$Gen$Pages$update = F2(
	function (msg_, model_) {
		var _v0 = _Utils_Tuple2(msg_, model_);
		_v0$7:
		while (true) {
			switch (_v0.a.$) {
				case 0:
					if (_v0.b.$ === 1) {
						var msg = _v0.a.a;
						var _v1 = _v0.b;
						var params = _v1.a;
						var model = _v1.b;
						return A3($author$project$Gen$Pages$pages.cZ.fv, params, msg, model);
					} else {
						break _v0$7;
					}
				case 1:
					if (_v0.b.$ === 2) {
						var msg = _v0.a.a;
						var _v2 = _v0.b;
						var params = _v2.a;
						var model = _v2.b;
						return A3($author$project$Gen$Pages$pages.c5.fv, params, msg, model);
					} else {
						break _v0$7;
					}
				case 2:
					if (_v0.b.$ === 3) {
						var msg = _v0.a.a;
						var _v3 = _v0.b;
						var params = _v3.a;
						var model = _v3.b;
						return A3($author$project$Gen$Pages$pages.dq.fv, params, msg, model);
					} else {
						break _v0$7;
					}
				case 3:
					if (_v0.b.$ === 4) {
						var msg = _v0.a.a;
						var _v4 = _v0.b;
						var params = _v4.a;
						var model = _v4.b;
						return A3($author$project$Gen$Pages$pages.ds.fv, params, msg, model);
					} else {
						break _v0$7;
					}
				case 4:
					if (_v0.b.$ === 5) {
						var msg = _v0.a.a;
						var _v5 = _v0.b;
						var params = _v5.a;
						var model = _v5.b;
						return A3($author$project$Gen$Pages$pages.dz.fv, params, msg, model);
					} else {
						break _v0$7;
					}
				case 5:
					if (_v0.b.$ === 6) {
						var msg = _v0.a.a;
						var _v6 = _v0.b;
						var params = _v6.a;
						var model = _v6.b;
						return A3($author$project$Gen$Pages$pages.dA.fv, params, msg, model);
					} else {
						break _v0$7;
					}
				default:
					if (_v0.b.$ === 7) {
						var msg = _v0.a.a;
						var _v7 = _v0.b;
						var params = _v7.a;
						var model = _v7.b;
						return A3($author$project$Gen$Pages$pages.dB.fv, params, msg, model);
					} else {
						break _v0$7;
					}
			}
		}
		return F3(
			function (_v8, _v9, _v10) {
				return _Utils_Tuple2(model_, $author$project$Effect$none);
			});
	});
var $author$project$Shared$GotBackendProjects = function (a) {
	return {$: 3, a: a};
};
var $author$project$Services$Backend$errorStatus = function (_v0) {
	var status = _v0.a;
	return status;
};
var $author$project$Services$Backend$OrgaWithProjects = F9(
	function (id, slug, name, plan, logo, location, description, heroku, projects) {
		return {bf: description, gb: heroku, H: id, gu: location, gv: logo, eS: name, jv: plan, nQ: projects, hr: slug};
	});
var $author$project$Services$Backend$OrgaProject = function (id) {
	return function (slug) {
		return function (name) {
			return function (description) {
				return function (encodingVersion) {
					return function (storage) {
						return function (visibility) {
							return function (nbSources) {
								return function (nbTables) {
									return function (nbColumns) {
										return function (nbRelations) {
											return function (nbTypes) {
												return function (nbComments) {
													return function (nbLayouts) {
														return function (nbNotes) {
															return function (nbMemos) {
																return function (createdAt) {
																	return function (updatedAt) {
																		return function (archivedAt) {
																			return {kt: archivedAt, ic: createdAt, bf: description, iq: encodingVersion, H: id, eS: name, gG: nbColumns, gH: nbComments, gI: nbLayouts, gJ: nbMemos, gK: nbNotes, gL: nbRelations, gM: nbSources, gN: nbTables, gO: nbTypes, hr: slug, cD: storage, kb: updatedAt, hQ: visibility};
																		};
																	};
																};
															};
														};
													};
												};
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var $author$project$Libs$Json$Decode$map19 = function (callback) {
	return function (da) {
		return function (db) {
			return function (dc) {
				return function (dd) {
					return function (de) {
						return function (df) {
							return function (dg) {
								return function (dh) {
									return function (di) {
										return function (dj) {
											return function (dk) {
												return function (dl) {
													return function (dm) {
														return function (dn) {
															return function (_do) {
																return function (dp) {
																	return function (dq) {
																		return function (dr) {
																			return function (ds) {
																				return A5(
																					$elm$json$Json$Decode$map4,
																					F4(
																						function (_v0, _v3, _v6, s) {
																							var _v1 = _v0.a;
																							var a = _v1.a;
																							var b = _v1.b;
																							var c = _v1.c;
																							var _v2 = _v0.b;
																							var d = _v2.a;
																							var e = _v2.b;
																							var f = _v2.c;
																							var _v4 = _v3.a;
																							var g = _v4.a;
																							var h = _v4.b;
																							var i = _v4.c;
																							var _v5 = _v3.b;
																							var j = _v5.a;
																							var k = _v5.b;
																							var l = _v5.c;
																							var _v7 = _v6.a;
																							var m = _v7.a;
																							var n = _v7.b;
																							var o = _v7.c;
																							var _v8 = _v6.b;
																							var p = _v8.a;
																							var q = _v8.b;
																							var r = _v8.c;
																							return callback(a)(b)(c)(d)(e)(f)(g)(h)(i)(j)(k)(l)(m)(n)(o)(p)(q)(r)(s);
																						}),
																					A7(
																						$elm$json$Json$Decode$map6,
																						F6(
																							function (a, b, c, d, e, f) {
																								return _Utils_Tuple2(
																									_Utils_Tuple3(a, b, c),
																									_Utils_Tuple3(d, e, f));
																							}),
																						da,
																						db,
																						dc,
																						dd,
																						de,
																						df),
																					A7(
																						$elm$json$Json$Decode$map6,
																						F6(
																							function (g, h, i, j, k, l) {
																								return _Utils_Tuple2(
																									_Utils_Tuple3(g, h, i),
																									_Utils_Tuple3(j, k, l));
																							}),
																						dg,
																						dh,
																						di,
																						dj,
																						dk,
																						dl),
																					A7(
																						$elm$json$Json$Decode$map6,
																						F6(
																							function (m, n, o, p, q, r) {
																								return _Utils_Tuple2(
																									_Utils_Tuple3(m, n, o),
																									_Utils_Tuple3(p, q, r));
																							}),
																						dm,
																						dn,
																						_do,
																						dp,
																						dq,
																						dr),
																					ds);
																			};
																		};
																	};
																};
															};
														};
													};
												};
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var $author$project$Services$Backend$decodeProject = $author$project$Libs$Json$Decode$map19($author$project$Services$Backend$OrgaProject)(
	A2($elm$json$Json$Decode$field, 'id', $elm$json$Json$Decode$string))(
	A2($elm$json$Json$Decode$field, 'slug', $elm$json$Json$Decode$string))(
	A2($elm$json$Json$Decode$field, 'name', $elm$json$Json$Decode$string))(
	A2($author$project$Libs$Json$Decode$maybeField, 'description', $elm$json$Json$Decode$string))(
	A2($elm$json$Json$Decode$field, 'encoding_version', $elm$json$Json$Decode$int))(
	A2($elm$json$Json$Decode$field, 'storage_kind', $author$project$Models$Project$ProjectStorage$decode))(
	A2($elm$json$Json$Decode$field, 'visibility', $author$project$Models$Project$ProjectVisibility$decode))(
	A2($elm$json$Json$Decode$field, 'nb_sources', $elm$json$Json$Decode$int))(
	A2($elm$json$Json$Decode$field, 'nb_tables', $elm$json$Json$Decode$int))(
	A2($elm$json$Json$Decode$field, 'nb_columns', $elm$json$Json$Decode$int))(
	A2($elm$json$Json$Decode$field, 'nb_relations', $elm$json$Json$Decode$int))(
	A2($elm$json$Json$Decode$field, 'nb_types', $elm$json$Json$Decode$int))(
	A2($elm$json$Json$Decode$field, 'nb_comments', $elm$json$Json$Decode$int))(
	A2($elm$json$Json$Decode$field, 'nb_layouts', $elm$json$Json$Decode$int))(
	A2($elm$json$Json$Decode$field, 'nb_notes', $elm$json$Json$Decode$int))(
	A2($elm$json$Json$Decode$field, 'nb_memos', $elm$json$Json$Decode$int))(
	A2($elm$json$Json$Decode$field, 'created_at', $author$project$Libs$Time$decode))(
	A2($elm$json$Json$Decode$field, 'updated_at', $author$project$Libs$Time$decode))(
	A2($author$project$Libs$Json$Decode$maybeField, 'archived_at', $author$project$Libs$Time$decode));
var $author$project$Services$Backend$decodeOrga = $author$project$Libs$Json$Decode$map9($author$project$Services$Backend$OrgaWithProjects)(
	A2($elm$json$Json$Decode$field, 'id', $elm$json$Json$Decode$string))(
	A2($elm$json$Json$Decode$field, 'slug', $elm$json$Json$Decode$string))(
	A2($elm$json$Json$Decode$field, 'name', $elm$json$Json$Decode$string))(
	A2($elm$json$Json$Decode$field, 'plan', $author$project$Models$Plan$decode))(
	A3($author$project$Libs$Json$Decode$defaultField, 'logo', $elm$json$Json$Decode$string, ''))(
	A2($author$project$Libs$Json$Decode$maybeField, 'location', $elm$json$Json$Decode$string))(
	A2($author$project$Libs$Json$Decode$maybeField, 'description', $elm$json$Json$Decode$string))(
	A2($author$project$Libs$Json$Decode$maybeField, 'heroku', $author$project$Models$HerokuResource$decode))(
	A2(
		$elm$json$Json$Decode$field,
		'projects',
		$elm$json$Json$Decode$list($author$project$Services$Backend$decodeProject)));
var $author$project$Services$Backend$buildOrganization = function (o) {
	return {bf: o.bf, gb: o.gb, H: o.H, gu: o.gu, gv: o.gv, eS: o.eS, jv: o.jv, hr: o.hr};
};
var $author$project$Services$Backend$formatOrgasAndProjects = function (orgas) {
	return _Utils_Tuple2(
		A2($elm$core$List$map, $author$project$Services$Backend$buildOrganization, orgas),
		A2(
			$elm$core$List$concatMap,
			function (o) {
				return A2(
					$elm$core$List$map,
					function (p) {
						return {
							ic: p.ic,
							bf: p.bf,
							H: p.H,
							eS: p.eS,
							gG: p.gG,
							gH: p.gH,
							gI: p.gI,
							gJ: p.gJ,
							gK: p.gK,
							gL: p.gL,
							gM: p.gM,
							gN: p.gN,
							gO: p.gO,
							nx: $elm$core$Maybe$Just(
								$author$project$Services$Backend$buildOrganization(o)),
							hr: p.hr,
							cD: p.cD,
							kb: p.kb,
							kd: p.iq,
							hQ: p.hQ
						};
					},
					o.nQ);
			},
			orgas));
};
var $author$project$Services$Backend$getOrganizationsAndProjects = function (toMsg) {
	return $author$project$Services$Backend$riskyGet(
		{
			lI: A2(
				$author$project$Services$Backend$expectJson,
				A2(
					$elm$core$Basics$composeR,
					$elm$core$Result$map($author$project$Services$Backend$formatOrgasAndProjects),
					toMsg),
				$elm$json$Json$Decode$list($author$project$Services$Backend$decodeOrga)),
			o1: '/api/v1/organizations?expand=plan,projects'
		});
};
var $author$project$Services$Sort$lastUpdatedFirst = function (projects) {
	return A2(
		$elm$core$List$sortBy,
		function (p) {
			return -$elm$time$Time$posixToMillis(p.kb);
		},
		projects);
};
var $author$project$Ports$Toast = F2(
	function (a, b) {
		return {$: 8, a: a, b: b};
	});
var $author$project$Ports$toast = F2(
	function (level, message) {
		return $author$project$Ports$messageToJs(
			A2($author$project$Ports$Toast, level, message));
	});
var $author$project$Shared$update = F3(
	function (_v0, msg, model) {
		switch (msg.$) {
			case 0:
				var zone = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{pj: zone}),
					$elm$core$Platform$Cmd$none);
			case 1:
				var time = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{ne: time}),
					$elm$core$Platform$Cmd$none);
			case 2:
				var result = msg.a;
				return A3(
					$author$project$Libs$Result$fold,
					function (err) {
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{fx: true}),
							A2(
								$author$project$Ports$toast,
								'error',
								'Can\'t decode current user: ' + $author$project$Services$Backend$errorToString(err)));
					},
					function (user) {
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{kc: user, fx: true}),
							$elm$core$Platform$Cmd$none);
					},
					result);
			case 3:
				var result = msg.a;
				return A3(
					$author$project$Libs$Result$fold,
					function (err) {
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{nR: true}),
							A3(
								$author$project$Libs$Bool$cond,
								$author$project$Services$Backend$errorStatus(err) === 401,
								$elm$core$Platform$Cmd$none,
								A2(
									$author$project$Ports$toast,
									'error',
									'Can\'t decode backend projects: ' + $author$project$Services$Backend$errorToString(err))));
					},
					function (_v2) {
						var orgas = _v2.a;
						var projects = _v2.b;
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{
									ny: orgas,
									nQ: $author$project$Services$Sort$lastUpdatedFirst(projects),
									nR: true
								}),
							$elm$core$Platform$Cmd$none);
					},
					result);
			default:
				if (msg.a.$ === 2) {
					var projectId = msg.a.a;
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{
								nQ: A2(
									$elm$core$List$filter,
									function (p) {
										return !_Utils_eq(p.H, projectId);
									},
									model.nQ)
							}),
						$author$project$Services$Backend$getOrganizationsAndProjects($author$project$Shared$GotBackendProjects));
				} else {
					return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
				}
		}
	});
var $author$project$Main$update = F2(
	function (msg, model) {
		switch (msg.$) {
			case 1:
				if (!msg.a.$) {
					var url = msg.a.a;
					return _Utils_Tuple2(
						model,
						A3(
							$toastal$either$Either$unpack,
							$elm$browser$Browser$Navigation$load,
							A2(
								$elm$core$Basics$composeR,
								$elm$url$Url$toString,
								$elm$browser$Browser$Navigation$pushUrl(model.dk)),
							$author$project$Services$Backend$internal(url)));
				} else {
					var url = msg.a.a;
					return _Utils_Tuple2(
						model,
						$elm$browser$Browser$Navigation$load(url));
				}
			case 0:
				var url = msg.a;
				if (!_Utils_eq(url.aA, model.o1.aA)) {
					var _v1 = A4(
						$author$project$Gen$Pages$init,
						$author$project$Gen$Route$fromUrl(url),
						model.a1,
						url,
						model.dk);
					var page = _v1.a;
					var effect = _v1.b;
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{nA: page, o1: url}),
						A2(
							$author$project$Effect$toCmd,
							_Utils_Tuple2($author$project$Main$Shared, $author$project$Main$Page),
							effect));
				} else {
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{o1: url}),
						$elm$core$Platform$Cmd$none);
				}
			case 2:
				var sharedMsg = msg.a;
				var _v2 = A3(
					$author$project$Shared$update,
					A3($author$project$Request$create, 0, model.o1, model.dk),
					sharedMsg,
					model.a1);
				var shared = _v2.a;
				var sharedCmd = _v2.b;
				var _v3 = A4(
					$author$project$Gen$Pages$init,
					$author$project$Gen$Route$fromUrl(model.o1),
					shared,
					model.o1,
					model.dk);
				var page = _v3.a;
				var effect = _v3.b;
				return _Utils_eq(page, $author$project$Gen$Model$Redirecting_) ? _Utils_Tuple2(
					_Utils_update(
						model,
						{nA: page, a1: shared}),
					$elm$core$Platform$Cmd$batch(
						_List_fromArray(
							[
								A2($elm$core$Platform$Cmd$map, $author$project$Main$Shared, sharedCmd),
								A2(
								$author$project$Effect$toCmd,
								_Utils_Tuple2($author$project$Main$Shared, $author$project$Main$Page),
								effect)
							]))) : _Utils_Tuple2(
					_Utils_update(
						model,
						{a1: shared}),
					A2($elm$core$Platform$Cmd$map, $author$project$Main$Shared, sharedCmd));
			default:
				var pageMsg = msg.a;
				var _v4 = A5($author$project$Gen$Pages$update, pageMsg, model.nA, model.a1, model.o1, model.dk);
				var page = _v4.a;
				var effect = _v4.b;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{nA: page}),
					A2(
						$author$project$Effect$toCmd,
						_Utils_Tuple2($author$project$Main$Shared, $author$project$Main$Page),
						effect));
		}
	});
var $author$project$View$toBrowserDocument = function (view) {
	return {kM: view.kM, a4: view.a4};
};
var $author$project$Gen$Pages$view = function (model_) {
	switch (model_.$) {
		case 0:
			return F3(
				function (_v1, _v2, _v3) {
					return $author$project$View$none;
				});
		case 1:
			var params = model_.a;
			var model = model_.b;
			return A2($author$project$Gen$Pages$pages.cZ.o3, params, model);
		case 2:
			var params = model_.a;
			var model = model_.b;
			return A2($author$project$Gen$Pages$pages.c5.o3, params, model);
		case 3:
			var params = model_.a;
			var model = model_.b;
			return A2($author$project$Gen$Pages$pages.dq.o3, params, model);
		case 4:
			var params = model_.a;
			var model = model_.b;
			return A2($author$project$Gen$Pages$pages.ds.o3, params, model);
		case 5:
			var params = model_.a;
			var model = model_.b;
			return A2($author$project$Gen$Pages$pages.dz.o3, params, model);
		case 6:
			var params = model_.a;
			var model = model_.b;
			return A2($author$project$Gen$Pages$pages.dA.o3, params, model);
		default:
			var params = model_.a;
			var model = model_.b;
			return A2($author$project$Gen$Pages$pages.dB.o3, params, model);
	}
};
var $author$project$Main$view = function (model) {
	return $author$project$View$toBrowserDocument(
		A2(
			$author$project$View$map,
			$author$project$Main$Page,
			A4($author$project$Gen$Pages$view, model.nA, model.a1, model.o1, model.dk)));
};
var $author$project$Main$main = $elm$browser$Browser$application(
	{bl: $author$project$Main$init, np: $author$project$Main$ChangedUrl, nq: $author$project$Main$ClickedLink, by: $author$project$Main$subscriptions, fv: $author$project$Main$update, o3: $author$project$Main$view});
_Platform_export({'Main':{'init':$author$project$Main$main(
	A2(
		$elm$json$Json$Decode$andThen,
		function (now) {
			return A2(
				$elm$json$Json$Decode$andThen,
				function (conf) {
					return $elm$json$Json$Decode$succeed(
						{Z: conf, ne: now});
				},
				A2(
					$elm$json$Json$Decode$field,
					'conf',
					A2(
						$elm$json$Json$Decode$andThen,
						function (platform) {
							return A2(
								$elm$json$Json$Decode$andThen,
								function (env) {
									return $elm$json$Json$Decode$succeed(
										{lD: env, e_: platform});
								},
								A2($elm$json$Json$Decode$field, 'env', $elm$json$Json$Decode$string));
						},
						A2($elm$json$Json$Decode$field, 'platform', $elm$json$Json$Decode$string))));
		},
		A2($elm$json$Json$Decode$field, 'now', $elm$json$Json$Decode$int)))(0)}});}(this));