"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[182],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),s=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=s(n),m=o,f=d["".concat(u,".").concat(m)]||d[m]||p[m]||a;return n?r.createElement(f,i(i({ref:t},c),{},{components:n})):r.createElement(f,i({ref:t},c))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4696:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return u},metadata:function(){return s},toc:function(){return c},default:function(){return d}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=["components"],l={id:"xest-101",title:"XEST-101 Your first XEST App",sidebar_label:"XEST-101 Your first XEST App"},u=void 0,s={unversionedId:"training/xest-101",id:"training/xest-101",isDocsHomePage:!1,title:"XEST-101 Your first XEST App",description:"Introduction",source:"@site/docs/training/awe-101.md",sourceDirName:"training",slug:"/training/xest-101",permalink:"/docs/training/xest-101",editUrl:"https://github.com/CyprusCodes/xest/tree/main/documentation/docs/docs/training/awe-101.md",tags:[],version:"current",frontMatter:{id:"xest-101",title:"XEST-101 Your first XEST App",sidebar_label:"XEST-101 Your first XEST App"},sidebar:"training",next:{title:"XEST-102 MUSIC API",permalink:"/docs/training/xest-102"}},c=[{value:"Introduction",id:"introduction",children:[],level:2},{value:"What we need for this tutorial?",id:"what-we-need-for-this-tutorial",children:[],level:2},{value:"Setting up the application",id:"setting-up-the-application",children:[],level:2}],p={toc:c};function d(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"introduction"},"Introduction"),(0,a.kt)("p",null,"This guide will show you step by step how to generate your first XEST framework based API."),(0,a.kt)("p",null,"You can find the example finished API at ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/PemMmM/music-library-api"},"here"),"."),(0,a.kt)("h2",{id:"what-we-need-for-this-tutorial"},"What we need for this tutorial?"),(0,a.kt)("p",null,"The requirements for this example are:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Your enthusiasm \ud83d\ude01"),(0,a.kt)("li",{parentName:"ul"},"Your favorite text processor e.g ",(0,a.kt)("a",{parentName:"li",href:"https://code.visualstudio.com/"},"VS CODE")),(0,a.kt)("li",{parentName:"ul"},"Docker"),(0,a.kt)("li",{parentName:"ul"},"MYSQL Workbench or BeeKeeper Studio")),(0,a.kt)("h2",{id:"setting-up-the-application"},"Setting up the application"),(0,a.kt)("p",null,"It is time to start setting up a basic XEST application. XEST is a framework built by CyprusCodes Team that allows you to create your api with just a single command."),(0,a.kt)("p",null,"To develop a progresive app, you should be able to connect with databases. As you remember from the Js Basics Express task on the platform - you did not form any connection between your endpoints and the database. With XEST you should be able to operate CRUD operations Create, Read, Update, Delete"),(0,a.kt)("p",null,"Endpoints are like links where they connect the user (you in this case) to the database with callback functions to operate CRUD. First of all, you will need to install XEST globally;"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"$ npm i xest -g\n")),(0,a.kt)("p",null,"To run the project the general command is;"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"$ xx run\n")),(0,a.kt)("p",null,"Following that to create a new directory with database set-up you should;"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"$ xx [your_directory_name]\n")))}d.isMDXComponent=!0}}]);