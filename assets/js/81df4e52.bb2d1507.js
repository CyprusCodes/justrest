"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[4953],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=u(n),m=a,f=d["".concat(l,".").concat(m)]||d[m]||p[m]||o;return n?r.createElement(f,i(i({ref:t},c),{},{components:n})):r.createElement(f,i({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3919:function(e,t,n){function r(e){return!0===/^(\w*:|\/\/)/.test(e)}function a(e){return void 0!==e&&!r(e)}n.d(t,{Z:function(){return a},b:function(){return r}})},4996:function(e,t,n){n.d(t,{C:function(){return o},Z:function(){return i}});var r=n(2263),a=n(3919);function o(){var e=(0,r.Z)().siteConfig,t=(e=void 0===e?{}:e).baseUrl,n=void 0===t?"/":t,o=e.url;return{withBaseUrl:function(e,t){return function(e,t,n,r){var o=void 0===r?{}:r,i=o.forcePrependBaseUrl,s=void 0!==i&&i,l=o.absolute,u=void 0!==l&&l;if(!n)return n;if(n.startsWith("#"))return n;if((0,a.b)(n))return n;if(s)return t+n;var c=n.startsWith(t)?n:t+n.replace(/^\//,"");return u?e+c:c}(o,n,e,t)}}}function i(e,t){return void 0===t&&(t={}),(0,o().withBaseUrl)(e,t)}},747:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return c}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],s={id:"database-migration",title:"Database migration",sidebar_label:"Database migration"},l=void 0,u={unversionedId:"database-migration",id:"database-migration",isDocsHomePage:!1,title:"Database migration",description:"AWE uses Flyway as default tool for database script version control.",source:"@site/docs/database-migration.md",sourceDirName:".",slug:"/database-migration",permalink:"/docs/database-migration",editUrl:"https://github.com/CyprusCodes/xest/tree/main/documentation/docs/docs/database-migration.md",tags:[],version:"current",frontMatter:{id:"database-migration",title:"Database migration",sidebar_label:"Database migration"}},c=[],p={toc:c};function d(e){var t=e.components,s=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},p,s,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"AWE uses ",(0,o.kt)("a",{parentName:"p",href:"https://flywaydb.org/"},"Flyway")," as default tool for database script version control."),(0,o.kt)("img",{alt:"flyway-logo",src:n(4996).Z("img/flyway-logo.png")}),(0,o.kt)("p",null,"Aside from using it internally to manage the ",(0,o.kt)("inlineCode",{parentName:"p"},"AWE database model"),", you can manage your own scripts or use any other external tool."),(0,o.kt)("h1",{id:"get-started"},(0,o.kt)("strong",{parentName:"h1"},"Get started")),(0,o.kt)("p",null,"To automatically run Flyway database migrations on AWE startup, add ",(0,o.kt)("inlineCode",{parentName:"p"},"spring.flyway.enabled=true")," properties in your configuration. Typically, migrations are from scripts in the form ",(0,o.kt)("inlineCode",{parentName:"p"},"<MODULE>_V<VERSION>__<NAME>.sql")," (with ",(0,o.kt)("inlineCode",{parentName:"p"},"<VERSION>")," an underscore-separated version, such as \u20181.1\u2019 or \u20182_1\u2019)."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-properties"},"spring.flyway.enabled=true\n")),(0,o.kt)("p",null,"By default, they are located in the folder ",(0,o.kt)("inlineCode",{parentName:"p"},"classpath:db/migration/{vendor}"),", but you can modify that location by setting ",(0,o.kt)("inlineCode",{parentName:"p"},"spring.flyway.locations"),". This is a comma-separated list of one or more classpath: or filesystem: locations. For example, the following configuration would search for scripts in both the default classpath location and the ",(0,o.kt)("inlineCode",{parentName:"p"},"/opt/migration")," directory:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-properties"},"spring.flyway.locations=classpath:db/migration/{vendor},filesystem:/opt/migration\n")),(0,o.kt)("p",null,"Rather than using ",(0,o.kt)("inlineCode",{parentName:"p"},"db/migration"),", the preceding configuration sets the folder to use according to the type of the database (such as db/migration/mysql for MySQL). The list of supported databases is available in ",(0,o.kt)("inlineCode",{parentName:"p"},"DatabaseDriver"),"."),(0,o.kt)("p",null,"AWE framework customizes the ",(0,o.kt)("em",{parentName:"p"},"Flyway migration process")," to manage multiple modules. By default, the initial module is called ",(0,o.kt)("em",{parentName:"p"},"AWE")," but you can add the modules you need to run scripts. For example, if you need to use ",(0,o.kt)("inlineCode",{parentName:"p"},"AWE scheduler module")," and you have that sql scripts in your applications, you need configure like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-properties"},"# List of modules to migrate. \nawe.database.migration.modules=AWE,SCHEDULER,APP\n")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("strong",{parentName:"p"},"Note:")," remeber call your sql scripts with the same name as the configured module. Ex.: ",(0,o.kt)("inlineCode",{parentName:"p"},"APP_V1.0__Init_schema.sql"))))}d.isMDXComponent=!0}}]);