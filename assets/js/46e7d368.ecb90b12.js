"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[5717],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),d=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=d(e.components);return a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},s=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),s=d(n),m=r,g=s["".concat(c,".").concat(m)]||s[m]||p[m]||i;return n?a.createElement(g,l(l({ref:t},u),{},{components:n})):a.createElement(g,l({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=s;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var d=2;d<i;d++)l[d]=n[d];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}s.displayName="MDXCreateElement"},3919:function(e,t,n){function a(e){return!0===/^(\w*:|\/\/)/.test(e)}function r(e){return void 0!==e&&!a(e)}n.d(t,{b:function(){return a},Z:function(){return r}})},4996:function(e,t,n){n.d(t,{C:function(){return i},Z:function(){return l}});var a=n(2263),r=n(3919);function i(){var e=(0,a.Z)().siteConfig,t=(e=void 0===e?{}:e).baseUrl,n=void 0===t?"/":t,i=e.url;return{withBaseUrl:function(e,t){return function(e,t,n,a){var i=void 0===a?{}:a,l=i.forcePrependBaseUrl,o=void 0!==l&&l,c=i.absolute,d=void 0!==c&&c;if(!n)return n;if(n.startsWith("#"))return n;if((0,r.b)(n))return n;if(o)return t+n;var u=n.startsWith(t)?n:t+n.replace(/^\//,"");return d?e+u:u}(i,n,e,t)}}}function l(e,t){return void 0===t&&(t={}),(0,i().withBaseUrl)(e,t)}},8933:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return c},metadata:function(){return d},toc:function(){return u},default:function(){return s}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),l=["components"],o={id:"accordion",title:"Accordion"},c=void 0,d={unversionedId:"api/accordion",id:"api/accordion",isDocsHomePage:!1,title:"Accordion",description:"An accordion is a layout component that allows to organize the content in different sections that can be collapsed or expanded.  Inside its panels, it allows to have the same content as a window or a tag element, even nested accordions.",source:"@site/docs/api/accordion.md",sourceDirName:"api",slug:"/api/accordion",permalink:"/docs/api/accordion",editUrl:"https://github.com/CyprusCodes/xest/tree/main/documentation/docs/docs/api/accordion.md",tags:[],version:"current",frontMatter:{id:"accordion",title:"Accordion"},sidebar:"screens",previous:{title:"Wizard and Wizard panel",permalink:"/docs/api/wizard-and-wizard-panel"},next:{title:"Grids",permalink:"/docs/api/grids"}},u=[{value:"XML skeleton",id:"xml-skeleton",children:[],level:2},{value:"Accordion structure",id:"accordion-structure",children:[],level:2},{value:"Accordion attributes",id:"accordion-attributes",children:[],level:2},{value:"Accordion Item structure",id:"accordion-item-structure",children:[],level:2},{value:"Accordion Item attributes",id:"accordion-item-attributes",children:[],level:2},{value:"Dependencies",id:"dependencies",children:[],level:2},{value:"Examples",id:"examples",children:[],level:2}],p={toc:u};function s(e){var t=e.components,o=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"An accordion is a layout component that allows to organize the content in different sections that can be collapsed or expanded.  Inside its panels, it allows to have the same content as a window or a tag element, even nested accordions."),(0,i.kt)("img",{alt:"Accordion",src:n(4996).Z("img/Accordion.png")}),(0,i.kt)("h2",{id:"xml-skeleton"},"XML skeleton"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},'<accordion id="[accordion-identifier]" ...>\n  <accordion-item... />\n  <dependency... />\n</accordion>\n')),(0,i.kt)("h2",{id:"accordion-structure"},"Accordion structure"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},'<accordion id="[accordion-identifier]" selected="[id-selected]" autocollapse="[accordion-autocollapse]" style="[accordion-style]">\n...\n</accordion>\n')),(0,i.kt)("h2",{id:"accordion-attributes"},"Accordion attributes"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Attribute"),(0,i.kt)("th",{parentName:"tr",align:null},"Use"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"),(0,i.kt)("th",{parentName:"tr",align:null},"Values"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"id"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Required")),(0,i.kt)("td",{parentName:"tr",align:null},"String"),(0,i.kt)("td",{parentName:"tr",align:null},"Accordion identifier. For reference purposes"),(0,i.kt)("td",{parentName:"tr",align:null})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"autocollapse"),(0,i.kt)("td",{parentName:"tr",align:null},"Optional"),(0,i.kt)("td",{parentName:"tr",align:null},"String"),(0,i.kt)("td",{parentName:"tr",align:null},'If set to "true" only one accordion item can stay opened at a time'),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"true")," or ",(0,i.kt)("inlineCode",{parentName:"td"},"false")," (default is ",(0,i.kt)("inlineCode",{parentName:"td"},"true"),")")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"selected"),(0,i.kt)("td",{parentName:"tr",align:null},"Optional"),(0,i.kt)("td",{parentName:"tr",align:null},"String"),(0,i.kt)("td",{parentName:"tr",align:null},"If we want an accordion item to be opened at the beginning, set its ID here"),(0,i.kt)("td",{parentName:"tr",align:null})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"style"),(0,i.kt)("td",{parentName:"tr",align:null},"Optional"),(0,i.kt)("td",{parentName:"tr",align:null},"String"),(0,i.kt)("td",{parentName:"tr",align:null},"Grid CSS classes"),(0,i.kt)("td",{parentName:"tr",align:null},"We can use ",(0,i.kt)("inlineCode",{parentName:"td"},"panel-group-[type]")," and ",(0,i.kt)("inlineCode",{parentName:"td"},"panel-group-dark")," classes to style (type can be the usual ",(0,i.kt)("inlineCode",{parentName:"td"},"danger"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"success"),", etc. values)")))),(0,i.kt)("h2",{id:"accordion-item-structure"},"Accordion Item structure"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},'<accordion-item id="[accordion-item-identifier]" label="[accordion-item-label]" \nstyle="[accordion-item-style]">\n...\n</accordion-item>\n')),(0,i.kt)("h2",{id:"accordion-item-attributes"},"Accordion Item attributes"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Attribute"),(0,i.kt)("th",{parentName:"tr",align:null},"Use"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"),(0,i.kt)("th",{parentName:"tr",align:null},"Values"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"id"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Required")),(0,i.kt)("td",{parentName:"tr",align:null},"String"),(0,i.kt)("td",{parentName:"tr",align:null},"Accordion item identifier. For reference purposes"),(0,i.kt)("td",{parentName:"tr",align:null})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"label"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Required")),(0,i.kt)("td",{parentName:"tr",align:null},"String"),(0,i.kt)("td",{parentName:"tr",align:null},"Text to be placed inside of the header"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Note:")," You can use ",(0,i.kt)("a",{parentName:"td",href:"/docs/api/i18n-internationalization"},"i18n")," files (locales)")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"style"),(0,i.kt)("td",{parentName:"tr",align:null},"Optional"),(0,i.kt)("td",{parentName:"tr",align:null},"String"),(0,i.kt)("td",{parentName:"tr",align:null},"Grid CSS classes"),(0,i.kt)("td",{parentName:"tr",align:null})))),(0,i.kt)("h2",{id:"dependencies"},"Dependencies"),(0,i.kt)("p",null,"If we want to collapse or expand an accordion item using a dependency, we must use one that modifies the attribute ",(0,i.kt)("inlineCode",{parentName:"p"},"selected")," setting the ID of the item (if it's expanded it will collapse and viceversa)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},'<dependency target-type="attribute" target-action="selected" value="[child-id]">\n...\n</dependency>\n')),(0,i.kt)("h2",{id:"examples"},"Examples"),(0,i.kt)("p",null,"Below we can see the difference between having the ",(0,i.kt)("em",{parentName:"p"},"autocollapse")," attribute as ",(0,i.kt)("inlineCode",{parentName:"p"},"true")," (left) or ",(0,i.kt)("inlineCode",{parentName:"p"},"false")," (right)"),(0,i.kt)("img",{alt:"Accordion example 1",src:n(4996).Z("img/accordion.png")}),(0,i.kt)("p",null,"Below an accordion item holding a window with an include"),(0,i.kt)("img",{alt:"Accordion example 2",src:n(4996).Z("img/accordion3.png")}),(0,i.kt)("p",null,"And this would be a full accordion structure example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},'<accordion id="acc2" autocollapse="false" style="panel-group-info">\n    <accordion-item id="acc2-1" label="Item 1">\n        <tag>\n            <text>\n                "Lorem ipsum ...  laborum."\n            </text>\n        </tag>\n    </accordion-item>\n    <accordion-item id="acc2-2" label="Item 2">\n        <tag>\n            <text>\n                "Sed ut ... pariatur?"\n            </text>\n        </tag>\n    </accordion-item>\n    <accordion-item id="acc2-3" label="Item 3">\n        <tag>\n            <text>\n                "At vero ... repellat."\n            </text>\n        </tag>\n    </accordion-item>\n</accordion>\n')))}s.isMDXComponent=!0}}]);