"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[7071],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),s=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=s(n),m=o,f=d["".concat(u,".").concat(m)]||d[m]||p[m]||a;return n?r.createElement(f,l(l({ref:t},c),{},{components:n})):r.createElement(f,l({ref:t},c))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=d;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var s=2;s<a;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4470:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return u},metadata:function(){return s},toc:function(){return c},default:function(){return d}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),l=["components"],i={id:"seed-generator",title:"Seed Generator",sidebar_label:"Seed Generator"},u="Generating a *Seed*",s={unversionedId:"seed-generator",id:"seed-generator",isDocsHomePage:!1,title:"Seed Generator",description:"One of the advantages of using XEST framework is that you can generate your seed data from your command line with;",source:"@site/docs/seed-generator.md",sourceDirName:".",slug:"/seed-generator",permalink:"/docs/seed-generator",editUrl:"https://github.com/CyprusCodes/xest/tree/main/documentation/docs/docs/seed-generator.md",tags:[],version:"current",frontMatter:{id:"seed-generator",title:"Seed Generator",sidebar_label:"Seed Generator"},sidebar:"docs",previous:{title:"Query Generator",permalink:"/docs/query-generator"},next:{title:"Endpoint Generator",permalink:"/docs/endpoint-generator"}},c=[],p={toc:c};function d(e){var t=e.components,n=(0,o.Z)(e,l);return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"generating-a-seed"},"Generating a ",(0,a.kt)("em",{parentName:"h1"},"Seed")),(0,a.kt)("p",null,"One of the advantages of using ",(0,a.kt)("strong",{parentName:"p"},"XEST")," framework is that you can generate your seed data from your command line with;"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"$ xx new\n")),(0,a.kt)("p",null,"This will ask the user several questions like a survey user is able to answer 1 question every time to form their query."),(0,a.kt)("hr",null),(0,a.kt)("p",null,"\u2753 What would you like to generate? (Use arrow keys)"),(0,a.kt)("p",null,"\u25b6\ufe0f query"),(0,a.kt)("p",null,"\u25b6\ufe0f migrations"),(0,a.kt)("p",null,"\u25b6\ufe0f seed"),(0,a.kt)("p",null,"You can choose which one you would like to generate with arrows, in this case ",(0,a.kt)("inlineCode",{parentName:"p"},"seed"),", which will ask the following question;"),(0,a.kt)("hr",null),(0,a.kt)("p",null,"\u2753 Select a table"),(0,a.kt)("p",null,"\u25b6\ufe0f migrations"),(0,a.kt)("p",null,"\u25b6\ufe0f users"),(0,a.kt)("p",null,"\u25b6\ufe0f user_types"),(0,a.kt)("p",null,"Choosing the table lets your seed-data to be entered in the selected table."),(0,a.kt)("p",null,"In the ",(0,a.kt)("strong",{parentName:"p"},"XEST")," framework there is an option to link two tables, which you can do from your command line after choosing your first table ",(0,a.kt)("strong",{parentName:"p"},"XEST")," framework asks you;"),(0,a.kt)("hr",null),(0,a.kt)("p",null,"\u2753 Would you like to seed another table? (Y/N)"),(0,a.kt)("p",null,"If you want to seed another table you can type ",(0,a.kt)("strong",{parentName:"p"},"Y")," and press enter, if not type ",(0,a.kt)("strong",{parentName:"p"},"N")," and press enter."),(0,a.kt)("p",null,"If ",(0,a.kt)("strong",{parentName:"p"},"Y"),", it asks you which table you would like to select, apart from the one selected before."),(0,a.kt)("hr",null),(0,a.kt)("p",null,"Then asking"),(0,a.kt)("p",null,"\u2753 How many seed records do you want to create?(1)"),(0,a.kt)("p",null,"This will generate optional seed generators for each column. It will migrate a dummy seed data within your database, which you can test from your MYSQL Workbench or BeeKeeper Studio."),(0,a.kt)("p",null,"Once happy copy and paste it to the ",(0,a.kt)("inlineCode",{parentName:"p"},"database/seed-data.sql")," file."))}d.isMDXComponent=!0}}]);