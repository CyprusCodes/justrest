"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[4140],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return u}});var a=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=a.createContext({}),c=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=c(e.components);return a.createElement(s.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=c(t),u=i,g=d["".concat(s,".").concat(u)]||d[u]||m[u]||r;return t?a.createElement(g,l(l({ref:n},p),{},{components:t})):a.createElement(g,l({ref:n},p))}));function u(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,l=new Array(r);l[0]=d;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var c=2;c<r;c++)l[c]=t[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},751:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return p},default:function(){return d}});var a=t(7462),i=t(3366),r=(t(7294),t(3905)),l=["components"],o={id:"v4-migration",title:"v4.0 Migration Guide",sidebar_label:"v4.0 Migration Guide"},s=void 0,c={unversionedId:"guides/v4-migration",id:"guides/v4-migration",isDocsHomePage:!1,title:"v4.0 Migration Guide",description:"Application Structure",source:"@site/docs/guides/awe-4.0-migration-guide.md",sourceDirName:"guides",slug:"/guides/v4-migration",permalink:"/docs/guides/v4-migration",editUrl:"https://github.com/CyprusCodes/xest/tree/main/documentation/docs/docs/guides/awe-4.0-migration-guide.md",tags:[],version:"current",frontMatter:{id:"v4-migration",title:"v4.0 Migration Guide",sidebar_label:"v4.0 Migration Guide"}},p=[{value:"<strong>Application Structure</strong>",id:"application-structure",children:[],level:2},{value:"<strong>Maven</strong>",id:"maven",children:[],level:2},{value:"<strong>Javascript &amp; CSS generation</strong>",id:"javascript--css-generation",children:[],level:2},{value:"<strong>XML files</strong>",id:"xml-files",children:[{value:"<strong>Screens</strong>",id:"screens",children:[],level:3},{value:"<strong>Query &amp; Maintain</strong>",id:"query--maintain",children:[],level:3},{value:"<strong>Services</strong>",id:"services",children:[],level:3},{value:"<strong>Locales</strong>",id:"locales",children:[],level:3}],level:2},{value:"<strong>Properties</strong>",id:"properties",children:[],level:2},{value:"<strong>Java files</strong>",id:"java-files",children:[{value:"Package refactorization",id:"package-refactorization",children:[],level:3},{value:"AWE packages",id:"awe-packages",children:[],level:3},{value:"Java services must be migrated to Spring architecture",id:"java-services-must-be-migrated-to-spring-architecture",children:[],level:3},{value:"Locale retrieval",id:"locale-retrieval",children:[],level:3},{value:"Property retrieval",id:"property-retrieval",children:[],level:3},{value:"Session retrieval",id:"session-retrieval",children:[],level:3},{value:"Request retrieval",id:"request-retrieval",children:[],level:3},{value:"Datalist type",id:"datalist-type",children:[],level:3},{value:"Beans",id:"beans",children:[],level:3},{value:"<code>fill</code> client action now has only one parameter: <code>datalist</code>, which will contain the full DataList:",id:"fill-client-action-now-has-only-one-parameter-datalist-which-will-contain-the-full-datalist",children:[],level:3},{value:"<code>FileData</code> bean has now a new implementation:",id:"filedata-bean-has-now-a-new-implementation",children:[],level:3}],level:2},{value:"<strong>Web services</strong> \u21aa\ufe0f <strong>Microservices</strong>",id:"web-services-\ufe0f-microservices",children:[],level:2}],m={toc:p};function d(e){var n=e.components,t=(0,i.Z)(e,l);return(0,r.kt)("wrapper",(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"application-structure"},(0,r.kt)("strong",{parentName:"h2"},"Application Structure")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Change project structure to a Spring project structure:")),(0,r.kt)("blockquote",null,(0,r.kt)("ul",{parentName:"blockquote"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"[application-name]")," -> Project files (pom.xml, package.json...)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"src")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"main")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"java")," -> ApplicationBoot + Java classes"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"   * **resources** -> Properties\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"application/","[application-name]"," -> XML files"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"       * config -> AWE Properties overwritten\n       * js -> Javascript files\n       * css -> CSS files\n       * less -> LESS files\n       * schemas -> XSD Schemas\n       * static -> Images/Fonts\n       * webpack -> Webpack configuration\n       * sql -> SQL Initialization files\n")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"test"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"java")," -> JUnit Tests"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"   * *resources* -> Test properties\n   * *selenium* -> Selenium suites\n"))))),(0,r.kt)("h2",{id:"maven"},(0,r.kt)("strong",{parentName:"h2"},"Maven")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Change POM file:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<?xml version="1.0" encoding="UTF-8"?>\n<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">\n  <modelVersion>4.0.0</modelVersion>\n\n  <parent>\n    <groupId>com.almis.awe</groupId>\n    <artifactId>awe-starter-parent</artifactId>\n    <version>4.0.7</version>\n    <relativePath/>\n  </parent>\n\n  <artifactId>[project-name]</artifactId>\n  <groupId>[project-group]</groupId>\n  <version>[project-version]</version>\n\n  <name>[Project name]</name>\n  <description>[Project description]</description>\n\n  <properties>\n    <application.acronym>[project-acronym]</application.acronym>\n    <start-class>[project-group].AppBootApplication</start-class>\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n    <project.build.frontend>${project.build.directory}/classes/static/</project.build.frontend>\n    <java.version>1.8</java.version>\n  </properties>\n\n  <dependencies>\n\n    \x3c!-- AWE --\x3e\n    <dependency>\n      <groupId>com.almis.awe</groupId>\n      <artifactId>awe-spring-boot-starter</artifactId>\n    </dependency>\n\n    <dependency>\n      <groupId>com.almis.awe</groupId>\n      <artifactId>awe-client-angular</artifactId>\n    </dependency>\n\n    \x3c!-- JDBC Drivers (ADD ONLY WHAT YOU NEED) --\x3e\n\n    \x3c!-- ORACLE --\x3e\n    <dependency>\n      <groupId>com.oracle</groupId>\n      <artifactId>ojdbc6</artifactId>\n      <version>11.2.0.3</version>\n      <scope>runtime</scope>\n    </dependency>\n\n    \x3c!-- SQL SERVER --\x3e\n    <dependency>\n      <groupId>com.microsoft.sqlserver</groupId>\n      <artifactId>sqljdbc4</artifactId>\n      <version>4.0.0</version>\n      <scope>runtime</scope>\n    </dependency>\n\n    \x3c!-- HSQL --\x3e\n    <dependency>\n      <groupId>org.hsqldb</groupId>\n      <artifactId>hsqldb</artifactId>\n      <version>2.3.3</version>\n      <scope>runtime</scope>\n    </dependency>\n\n  </dependencies>\n\n  <build>\n    <finalName>[project-name]</finalName>\n    <resources>\n      <resource>\n        <directory>src/main/resources</directory>\n        <filtering>true</filtering>\n      </resource>\n    </resources>\n    <plugins>\n\n      \x3c!-- Copy static files --\x3e\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-dependency-plugin</artifactId>\n        <executions>\n          <execution>\n            <phase>generate-resources</phase>\n            <id>unpack awe-generic-screens</id>\n            <goals>\n              <goal>unpack-dependencies</goal>\n            </goals>\n            <configuration>\n              <includeGroupIds>com.almis.awe</includeGroupIds>\n              <includeArtifactIds>awe-generic-screens</includeArtifactIds>\n              <includes>schemas/**,docs/**</includes>\n              <outputDirectory>${project.build.frontend}</outputDirectory>\n            </configuration>\n          </execution>\n          <execution>\n            <phase>generate-resources</phase>\n            <id>unpack awe-client-angular</id>\n            <goals>\n              <goal>unpack-dependencies</goal>\n            </goals>\n            <configuration>\n              <includeGroupIds>com.almis.awe</includeGroupIds>\n              <includeArtifactIds>awe-client-angular</includeArtifactIds>\n              <includes>images/**,fonts/**,js/**,css/**,less/**</includes>\n              <outputDirectory>${project.build.frontend}</outputDirectory>\n            </configuration>\n          </execution>\n        </executions>\n      </plugin>\n\n      \x3c!-- Copy images --\x3e\n      <plugin>\n        <artifactId>maven-resources-plugin</artifactId>\n        <version>3.0.2</version>\n        <executions>\n          <execution>\n            <id>copy-images</id>\n            <phase>prepare-package</phase>\n            <goals>\n              <goal>copy-resources</goal>\n            </goals>\n            <configuration>\n              <outputDirectory>${project.build.directory}/classes/static/images/</outputDirectory>\n              <resources>\n                <resource>\n                  <directory>${project.basedir}/src/main/resources/images/</directory>\n                </resource>\n              </resources>\n            </configuration>\n          </execution>\n        </executions>\n      </plugin>\n\n      \x3c!-- Spring boot --\x3e\n      <plugin>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-maven-plugin</artifactId>\n        <version>${spring-boot.version}</version>\n      </plugin>\n\n      \x3c!-- Frontend generation --\x3e\n      <plugin>\n        <groupId>com.github.eirslett</groupId>\n        <artifactId>frontend-maven-plugin</artifactId>\n        <version>1.6</version>\n        <executions>\n          <execution>\n            <id>install node and yarn</id>\n            <goals>\n              <goal>install-node-and-yarn</goal>\n            </goals>\n            <configuration>\n              <nodeVersion>v6.9.1</nodeVersion>\n              <yarnVersion>v1.6.0</yarnVersion>\n            </configuration>\n          </execution>\n          <execution>\n            <id>yarn install</id>\n            <goals>\n              <goal>yarn</goal>\n            </goals>\n            <configuration>\n              <arguments>install</arguments>\n            </configuration>\n          </execution>\n          <execution>\n            <id>webpack</id>\n            <goals>\n              <goal>webpack</goal>\n            </goals>\n            <configuration>\n              <arguments>--output-path "${project.build.frontend}"</arguments>\n            </configuration>\n          </execution>\n        </executions>\n      </plugin>\n\n      \x3c!-- Xml validation --\x3e\n      <plugin>\n        <groupId>org.codehaus.mojo</groupId>\n        <artifactId>xml-maven-plugin</artifactId>\n        <executions>\n          <execution>\n            <id>validate</id>\n            <phase>compile</phase>\n            <goals>\n              <goal>validate</goal>\n            </goals>\n          </execution>\n        </executions>\n      </plugin>\n\n      \x3c!-- Build an executable JAR --\x3e\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-jar-plugin</artifactId>\n        <version>3.0.2</version>\n        <configuration>\n          <archive>\n            <manifest>\n              <addClasspath>true</addClasspath>\n              <classpathPrefix>lib/</classpathPrefix>\n              <mainClass>${start-class}</mainClass>\n            </manifest>\n          </archive>\n        </configuration>\n      </plugin>\n    </plugins>\n  </build>\n</project>\n')),(0,r.kt)("h2",{id:"javascript--css-generation"},(0,r.kt)("strong",{parentName:"h2"},"Javascript & CSS generation")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Define a webpack file to generate custom javascript and css")),(0,r.kt)("h2",{id:"xml-files"},(0,r.kt)("strong",{parentName:"h2"},"XML files")),(0,r.kt)("h3",{id:"screens"},(0,r.kt)("strong",{parentName:"h3"},"Screens")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Regular expressions"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Dependency ",(0,r.kt)("inlineCode",{parentName:"li"},'source-type="action"')," is not needed anymore. Just add your dependency actions and they will be\nlaunched on valid conditions."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'source-type="none"')," and ",(0,r.kt)("inlineCode",{parentName:"li"},'target-type="none"')," attributes are default values, so you don't need to set them."),(0,r.kt)("li",{parentName:"ul"},"Remove ",(0,r.kt)("inlineCode",{parentName:"li"},'source-type="action"'),", ",(0,r.kt)("inlineCode",{parentName:"li"},'source-type="none"')," and ",(0,r.kt)("inlineCode",{parentName:"li"},'target-type="none"'),":")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-regexp"},"^(.*)source\\-type\\s*=\\s*[\"']action[\"']\\s*(\\S+.*)$ => $1$2\n^(.*)source\\-type\\s*=\\s*[\"']none[\"']\\s*(\\S+.*)$ => $1$2\n^(.*)target\\-type\\s*=\\s*[\"']none[\"']\\s*(\\S+.*)$ => $1$2\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Note:")," ",(0,r.kt)("inlineCode",{parentName:"p"},"XXXX => YYYY")," means that you must search for ",(0,r.kt)("inlineCode",{parentName:"p"},"XXXX")," expression and replace with ",(0,r.kt)("inlineCode",{parentName:"p"},"YYYY")," expression")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Direct replacement:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Fix dependency conditions:")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-regexp"},'condition="lte" => condition="le"\ncondition="gte" => condition="ge"\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Grid pagination to grid managed pagination:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-regexp"},'pagination="true" => managed-pagination="true"\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"control-empty-cancel")," action to ",(0,r.kt)("inlineCode",{parentName:"li"},"control-unique-cancel")," action:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-regexp"},"control-empty-cancel => control-unique-cancel\n")),(0,r.kt)("h3",{id:"query--maintain"},(0,r.kt)("strong",{parentName:"h3"},"Query & Maintain")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Regular expressions"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Fix query and maintain filters:")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-regexp"},"^(\\s*<filter.*\\s+)value(.*/>.*)$ => $1left-variable$2 -> Replace by left-variable and add the variable name\n^(\\s*<filter.*\\s+)variable(.*/>.*)$ => $1right-variable$2\n^(\\s*<filter.*\\s+)counterfield(.*/>.*)$ => $1right-field$2\n^(\\s*<filter.*\\s+)countertable(.*/>.*)$ => $1right-table$2\n^(\\s*<filter.*\\s+)field(.*/>.*)$ => $1left-field$2\n^(\\s*<filter.*\\s+)table(.*/>.*)$ => $1left-table$2\n^(\\s*<)field(.*\\s+value.*/>.*)$ => $1constant$2\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Direct replacement:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Fix query conditions:")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-regexp"},'condition="=" => condition="eq"\ncondition="!=" => condition="ne"\ncondition="LIKE" => condition="like"\ncondition="NOT LIKE" => condition="not like"\ncondition="&gt;" => condition="gt"\ncondition="&gt;=" => condition="ge"\ncondition="&lt;" => condition="lt"\ncondition="&lt;=" => condition="le"\ncondition="IS NULL" => condition="is null"\ncondition="IS NOT NULL" => condition="is not null"\ncondition="IN" => condition="in"\ncondition="NOT IN" => condition="not in"\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Variable identifiers can't be used in field aliases."),(0,r.kt)("li",{parentName:"ul"},"CASE and CONCAT definitions must be defined now with the new AWE ",(0,r.kt)("inlineCode",{parentName:"li"},"<case>")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"<operation>")," tags. See more\nat ",(0,r.kt)("a",{parentName:"li",href:"/docs/api/query"},"Query Definitions"),"."),(0,r.kt)("li",{parentName:"ul"},"Static values must be defined as ",(0,r.kt)("inlineCode",{parentName:"li"},"<constant>")," tags"),(0,r.kt)("li",{parentName:"ul"},"AWE now offers more flexibility generating queries and filters:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'\n<query id="testRowNumber">\n  <table id="ope"/>\n  <field id="l1_nom" alias="name"/>\n  <over alias="rowNumber">\n    <field function="ROW_NUMBER"/>\n  </over>\n  <order-by field="l1_nom" type="ASC"/>\n</query>\n\n<query id="testCoalesce">\n<table id="ope"/>\n<field id="l1_nom" alias="name"/>\n<operation operator="COALESCE" alias="nameNotNull">\n  <field id="l1_trt"/>\n  <constant type="NULL"/>\n  <field id="l1_nom"/>\n</operation>\n<where>\n  <filter condition="eq" ignorecase="true">\n    <left-operand>\n      <field id="l1_nom"/>\n    </left-operand>\n    <right-operand>\n      <constant value="test"/>\n    </right-operand>\n  </filter>\n</where>\n<order-by field="l1_nom" type="ASC"/>\n</query>\n\n<query id="testCaseWhenElse">\n<table id="AweThm"/>\n<case alias="value">\n  <when left-field="Nam" condition="eq" right-variable="sunset">\n    <then>\n      <constant value="1" type="INTEGER"/>\n    </then>\n  </when>\n  <when left-field="Nam" condition="eq" right-variable="sunny">\n    <then>\n      <constant value="2" type="INTEGER"/>\n    </then>\n  </when>\n  <when left-field="Nam" condition="eq" right-variable="purple-hills">\n    <then>\n      <constant value="3" type="INTEGER"/>\n    </then>\n  </when>\n  <else>\n    <constant value="0" type="INTEGER"/>\n  </else>\n</case>\n<case alias="label">\n  <when condition="eq">\n    <left-operand>\n      <field id="Nam"/>\n    </left-operand>\n    <right-operand>\n      <constant value="sunset"/>\n    </right-operand>\n    <then>\n      <constant value="SUNSET"/>\n    </then>\n  </when>\n  <when condition="eq">\n    <left-operand>\n      <field id="Nam"/>\n    </left-operand>\n    <right-operand>\n      <constant value="sunny"/>\n    </right-operand>\n    <then>\n      <constant value="SUNNY"/>\n    </then>\n  </when>\n  <when condition="eq">\n    <left-operand>\n      <field id="Nam"/>\n    </left-operand>\n    <right-operand>\n      <constant value="purple-hills"/>\n    </right-operand>\n    <then>\n      <constant value="PURPLE-HILLS"/>\n    </then>\n  </when>\n  <else>\n    <constant value="other"/>\n  </else>\n</case>\n<order-by field="Nam" type="ASC" nulls="FIRST"/>\n</query>\n\n<query id="TestFieldDateFunctions">\n<table id="ope" alias="awe"/>\n<field id="dat_mod" table="awe" alias="year" function="YEAR"/>\n<field id="dat_mod" table="awe" alias="month" function="MONTH"/>\n<field id="dat_mod" alias="day" function="DAY"/>\n<field id="dat_mod" alias="hour" function="HOUR"/>\n<field id="dat_mod" alias="minute" function="MINUTE"/>\n<field id="dat_mod" alias="second" function="SECOND"/>\n<where>\n  <filter left-field="l1_nom" condition="eq" ignorecase="true">\n    <right-operand>\n      <constant value="test"/>\n    </right-operand>\n  </filter>\n</where>\n<order-by field="dat_mod" table="awe" function="YEAR"/>\n</query>\n')),(0,r.kt)("h3",{id:"services"},(0,r.kt)("strong",{parentName:"h3"},"Services")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Web services calls have been changed to microservices calls:")),(0,r.kt)("p",null,"Examples:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'\n<service id="simpleGETMicroservice">\n  <microservice name="alu-microservice" method="GET" endpoint="/invoke" content-type="JSON"/>\n</service>\n\n<service id="simpleGETMicroservice2">\n<microservice name="alu-microservice2" method="GET" endpoint="/invoke" content-type="JSON"/>\n</service>\n\n<service id="simpleGETMicroserviceWithWrapper">\n<microservice name="alu-microservice" method="GET" endpoint="/invoke"\n              wrapper="com.almis.awe.service.dto.ServiceDataWrapper" content-type="JSON"/>\n</service>\n\n<service id="simpleGETMicroserviceWithParameter">\n<microservice name="alu-microservice" method="GET" endpoint="/invoke" content-type="JSON">\n  <service-parameter name="param1" type="STRING"/>\n</microservice>\n</service>\n\n<service id="simpleGETMicroserviceWithWildcard">\n<microservice name="alu-microservice" method="GET" endpoint="/invoke/{param1}" content-type="JSON">\n  <service-parameter name="param1" type="STRING"/>\n</microservice>\n</service>\n\n<service id="simpleGETMicroserviceWithWildcardAndParameter">\n<microservice name="alu-microservice" method="GET" endpoint="/invoke/{param1}" content-type="JSON">\n  <service-parameter name="param1" type="STRING"/>\n  <service-parameter name="param2" type="STRING"/>\n</microservice>\n</service>\n\n<service id="simplePOSTMicroserviceWithParameters">\n<microservice name="alu-microservice" method="POST" endpoint="/invoke" content-type="JSON">\n  <service-parameter name="param1" type="STRING"/>\n  <service-parameter name="param2" type="STRING"/>\n</microservice>\n</service>\n\n<service id="simplePUTMicroserviceWithParameters">\n<microservice name="alu-microservice" method="PUT" endpoint="/invoke" content-type="JSON">\n  <service-parameter name="param1" type="STRING"/>\n  <service-parameter name="param2" type="STRING"/>\n</microservice>\n</service>\n\n<service id="simpleDELETEMicroserviceWithWildcard">\n<microservice name="alu-microservice" method="DELETE" endpoint="/invoke/{param1}" content-type="JSON">\n  <service-parameter name="param1" type="STRING"/>\n</microservice>\n</service>\n')),(0,r.kt)("h3",{id:"locales"},(0,r.kt)("strong",{parentName:"h3"},"Locales")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Rename")," Local-XX.xml files to Locale-XX.xml"),(0,r.kt)("li",{parentName:"ul"},"Direct replacement:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-regexp"},"<locals => <locales\n</locals> => </locales>\n<local => <locale\n</local> => </locale>\n")),(0,r.kt)("h2",{id:"properties"},(0,r.kt)("strong",{parentName:"h2"},"Properties")),(0,r.kt)("p",null,"Encode again the properties encoded with ",(0,r.kt)("inlineCode",{parentName:"p"},"ENC(xxxx)")," at the Encrypt util screen."),(0,r.kt)("h2",{id:"java-files"},(0,r.kt)("strong",{parentName:"h2"},"Java files")),(0,r.kt)("h3",{id:"package-refactorization"},"Package refactorization"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Direct replacement:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Packages")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-regexp"},"com.almis.awe.core.services.data.global.XMLWrapper => com.almis.awe.model.entities.XMLFile\ncom.almis.awe.core.services.data.global.XMLElement => com.almis.awe.model.entities.XMLFile\ncom.almis.awe.core.services.data.service.ServiceData => com.almis.awe.model.dto.ServiceData\ncom.almis.awe.core.services.controller.DataController => com.almis.awe.service.QueryService\ncom.almis.awe.core.services.controller.MaintainController => com.almis.awe.service.MaintainService\ncom.almis.awe.core.util.DateUtil => com.almis.awe.model.util.data.DateUtil\ncom.almis.awe.core.beans.ComponentAddress => com.almis.awe.model.entities.actions.ComponentAddress\ncom.almis.awe.core.services.data.action.ClientAction => com.almis.awe.model.entities.actions.ClientAction\ncom.almis.awe.dto => com.almis.awe.model.dto\ncom.almis.awe.core.services.data.global => com.almis.awe.model.dto\ncom.almis.awe.type => com.almis.awe.model.type\ncom.almis.awe.core.services.data.query => com.almis.awe.model.entities.queries\ncom.almis.awe.core.services.data.maintain => com.almis.awe.model.entities.maintain\ncom.almis.awe.core.exception => com.almis.awe.exception\nXMLElement => XMLWrapper\nAWEConstants => AweConstants\nAweConstants.PARAMETER_MAX => AweConstants.COMPONENT_MAX\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Logging",(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},"Remove com.almis.awe.core.util.LogUtil"),(0,r.kt)("li",{parentName:"ol"},"Import ",(0,r.kt)("inlineCode",{parentName:"li"},"org.apache.logging.log4j.LogManager")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"org.apache.logging.log4j.Logger")),(0,r.kt)("li",{parentName:"ol"},"Create a static logger field:")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"  // Logger\nprivate static Logger logger=LogManager.getLogger(MyClass.class);\n")),(0,r.kt)("ol",{start:4},(0,r.kt)("li",{parentName:"ol"},"Use static logger. For example:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'  logger.log(Level.INFO,"[{}] No books defined for this treatment",treatment.getID());\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Alternate logger: Lombok")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Add ",(0,r.kt)("inlineCode",{parentName:"p"},"@Log4j2")," annotation on top of the class:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"@Log4j2\npublic MyClass{\n       ...\n       } \n")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'\n2. Use lombok logger:\n\n```java\n  log.error("My error message {}",moreInformationInVariables,exception);\n')),(0,r.kt)("h3",{id:"awe-packages"},"AWE packages"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"There are ",(0,r.kt)("strong",{parentName:"li"},"two main packages")," in ",(0,r.kt)("strong",{parentName:"li"},"AWE 4.0"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"awe-spring-boot-starter")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"awe-model"),".",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"awe-spring-boot-starter")," is the ",(0,r.kt)("strong",{parentName:"li"},"core package")," of AWE. AWE based web applications must import this package.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"To call AWE services, autowire services from ",(0,r.kt)("inlineCode",{parentName:"li"},"com.almis.awe.services")," (No more Controller calls)"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"awe-model")," is the ",(0,r.kt)("strong",{parentName:"li"},"interface package")," of AWE. AWE related applications (communication modules, microservices,\netc) can import this package to gain access to interface classes.")))),(0,r.kt)("h3",{id:"java-services-must-be-migrated-to-spring-architecture"},"Java services must be migrated to Spring architecture"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Remove all controllers if they don't do anything"),(0,r.kt)("li",{parentName:"ul"},"Class structure in AWE has been changed radically. Check your Java imports"),(0,r.kt)("li",{parentName:"ul"},"Move ",(0,r.kt)("inlineCode",{parentName:"li"},"manager")," package to ",(0,r.kt)("inlineCode",{parentName:"li"},"service")," package"),(0,r.kt)("li",{parentName:"ul"},"Rename all ",(0,r.kt)("strong",{parentName:"li"},"Xxx"),"Manager.java classes to ",(0,r.kt)("strong",{parentName:"li"},"Xxx"),"Service.java classes"),(0,r.kt)("li",{parentName:"ul"},"Add ",(0,r.kt)("inlineCode",{parentName:"li"},"@Service")," annotation to ",(0,r.kt)("strong",{parentName:"li"},"Xxx"),"Service.java classes"),(0,r.kt)("li",{parentName:"ul"},"Use Spring methodology (",(0,r.kt)("inlineCode",{parentName:"li"},"@Autowired")," constructors, ",(0,r.kt)("inlineCode",{parentName:"li"},"@Value")," to retrieve properties, etc)"),(0,r.kt)("li",{parentName:"ul"},"Extend all ",(0,r.kt)("strong",{parentName:"li"},"Xxx"),"Service classes from ",(0,r.kt)("inlineCode",{parentName:"li"},"ServiceConfig")," if they are using:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"com.almis.awe.core.singleton.LocalSingleton")," => Extend from ",(0,r.kt)("inlineCode",{parentName:"li"},"com.almis.awe.config.ServiceConfig")," and\ncall ",(0,r.kt)("inlineCode",{parentName:"li"},"getLocale")," methods"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"com.almis.awe.core.singleton.PropertySingleton")," => Extend from ",(0,r.kt)("inlineCode",{parentName:"li"},"com.almis.awe.config.ServiceConfig")," and\ncall ",(0,r.kt)("inlineCode",{parentName:"li"},"getProperty")," methods (And best of all use ",(0,r.kt)("inlineCode",{parentName:"li"},"@Value")," instead of ",(0,r.kt)("inlineCode",{parentName:"li"},"getProperty")," methods)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"com.almis.awe.core.services.controller.SessionController")," => Extend from ",(0,r.kt)("inlineCode",{parentName:"li"},"com.almis.awe.config.ServiceConfig")," and\ncall ",(0,r.kt)("inlineCode",{parentName:"li"},"getSession")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"com.almis.awe.core.services.data.global.Context")," => Extend from ",(0,r.kt)("inlineCode",{parentName:"li"},"com.almis.awe.config.ServiceConfig")," and\ncall ",(0,r.kt)("inlineCode",{parentName:"li"},"getRequest")," to retrieve request parameters"),(0,r.kt)("li",{parentName:"ul"},"Remove also ContextUtil.getContext() access"),(0,r.kt)("li",{parentName:"ul"},"Use also ",(0,r.kt)("inlineCode",{parentName:"li"},"getRequest().getTargetAction()")," to retrieve the action target called."),(0,r.kt)("li",{parentName:"ul"},"More information on ",(0,r.kt)("a",{parentName:"li",href:"#locale-retrieval"},"Locale retrieval"),", ",(0,r.kt)("a",{parentName:"li",href:"#property-retrieval"},"Property retrieval"),"\n, ",(0,r.kt)("a",{parentName:"li",href:"#session-retrieval"},"Session retrieval")," and ",(0,r.kt)("a",{parentName:"li",href:"#request-retrieval"},"Request retrieval"),"."))),(0,r.kt)("li",{parentName:"ul"},"Adapt custom authentication if overwritten in application"),(0,r.kt)("li",{parentName:"ul"},"Use ",(0,r.kt)("inlineCode",{parentName:"li"},"QueryService")," instead of ",(0,r.kt)("inlineCode",{parentName:"li"},"DataController"),". All ",(0,r.kt)("inlineCode",{parentName:"li"},"launchQuery")," methods now return ",(0,r.kt)("inlineCode",{parentName:"li"},"ServiceData")," beans instead\nof ",(0,r.kt)("inlineCode",{parentName:"li"},"DataList"),". You can retrieve the ",(0,r.kt)("inlineCode",{parentName:"li"},"DataList")," with ",(0,r.kt)("inlineCode",{parentName:"li"},"serviceData.getDataList()")," method."),(0,r.kt)("li",{parentName:"ul"},"Use ",(0,r.kt)("inlineCode",{parentName:"li"},"MaintainService")," instead of ",(0,r.kt)("inlineCode",{parentName:"li"},"MaintainController"),".")),(0,r.kt)("h3",{id:"locale-retrieval"},"Locale retrieval"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Extending from ",(0,r.kt)("inlineCode",{parentName:"li"},"ServiceConfig")," you get access to ",(0,r.kt)("inlineCode",{parentName:"li"},"getLocale")," methods:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'  getLocale("ERROR_TITLE_LAUNCHING_MAINTAIN");\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"You can pass variables to replace on locale simply by adding them as arguments:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'  getLocale("ERROR_TITLE_LAUNCHING_MAINTAIN",treatment.getID(),task.getID());\n')),(0,r.kt)("h3",{id:"property-retrieval"},"Property retrieval"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Extending from ",(0,r.kt)("inlineCode",{parentName:"li"},"ServiceConfig")," you get access to ",(0,r.kt)("inlineCode",{parentName:"li"},"getProperty")," methods:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'  getProperty("var.trt.thd.sug.tim",100);\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Anyway it's more legible and faster to retrieve properties the Spring way:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'  @Value("${var.trt.thd.sug.tim:100}")\nprivate Integer suggestTime;\n')),(0,r.kt)("h3",{id:"session-retrieval"},"Session retrieval"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Extending from ",(0,r.kt)("inlineCode",{parentName:"li"},"ServiceConfig")," you get access to ",(0,r.kt)("inlineCode",{parentName:"li"},"getSession")," methods:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"  getSession().getParameter(AweConstants.SESSION_DATABASE);\n")),(0,r.kt)("h3",{id:"request-retrieval"},"Request retrieval"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Extending from ",(0,r.kt)("inlineCode",{parentName:"li"},"ServiceConfig")," you get access to ",(0,r.kt)("inlineCode",{parentName:"li"},"getRequest")," methods instead of retrieving them from ",(0,r.kt)("inlineCode",{parentName:"li"},"Context"),":")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"  getRequest().getParameter(AweConstants.PARAMETER_MAX).textValue();\n")),(0,r.kt)("p",null,"or"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"  getRequest().getParameterAsString(AweConstants.PARAMETER_MAX);\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"You can also add some variables to the request:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'  getRequest().setParameter("someList",someList);\n')),(0,r.kt)("h3",{id:"datalist-type"},"Datalist type"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"DataList ",(0,r.kt)("inlineCode",{parentName:"li"},"getRows")," method has changed its' signature from ",(0,r.kt)("inlineCode",{parentName:"li"},"ArrayList<HashMap<String, CellData>>")," to a more generic\nsignature: ",(0,r.kt)("inlineCode",{parentName:"li"},"List<Map<String, CellData>>"),".")),(0,r.kt)("h3",{id:"beans"},"Beans"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Use copy constructor instead of Cloneable interface:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"public class MyClass implements Copyable<MyClass> {\n\n  private String myProp1;\n  private String myProp2;\n\n  /**\n   * Default constructor \n   */\n  public MyClass() {\n  }\n\n  /**\n   * Copy constructor \n   */\n  public MyClass(MyClass other) {\n    this.myProp1 = other.myProp1;\n    this.myProp2 = other.myProp2;\n  }\n\n  /**\n   * Copy method\n   * @return Copy of this object\n   */\n  public MyClass copy() {\n    return new MyClass(this);\n  }\n}\n")),(0,r.kt)("p",null,"or use Lombok:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"\n@Data\n@Builder(toBuilder = true)\n@NoArgsConstructor\n@AllArgsConstructor\n@Accessors(chain = true)\npublic class MyClass {\n  private String myProp1;\n  private String myProp2;\n}\n")),(0,r.kt)("p",null,"... and clone it with the builder:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"MyClass myNewClass=myOldClass.toBuilder().build();\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Remove from beans all methods which uses any external class. A bean only should have methods which interact over their\nown fields.")),(0,r.kt)("h3",{id:"fill-client-action-now-has-only-one-parameter-datalist-which-will-contain-the-full-datalist"},(0,r.kt)("inlineCode",{parentName:"h3"},"fill")," client action now has only one parameter: ",(0,r.kt)("inlineCode",{parentName:"h3"},"datalist"),", which will contain the full DataList:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'serviceData.addClientAction(new ClientAction("fill")\n        .setAddress(address)\n        .addParameter("datalist",datalist)\n        .setAsync(true));\n')),(0,r.kt)("p",null,"... but it's simpler to use the new ClientAction builders:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"serviceData.addClientAction(new FillActionBuilder(address,datalist).setAsync(true).build());\n")),(0,r.kt)("h3",{id:"filedata-bean-has-now-a-new-implementation"},(0,r.kt)("inlineCode",{parentName:"h3"},"FileData")," bean has now a new implementation:"),(0,r.kt)("p",null,"Use ",(0,r.kt)("inlineCode",{parentName:"p"},"FileUtil.fileDataToString")," to generate a token:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"public String fileDataToString(FileData fileData)\n")),(0,r.kt)("p",null,"Use ",(0,r.kt)("inlineCode",{parentName:"p"},"FileUtil.stringToFileData")," to retrieve a FileData bean from a token:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"public FileData stringToFileData(String fileStringEncoded)\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Note:")," FileUtil is an autowireable @Component")),(0,r.kt)("h2",{id:"web-services-\ufe0f-microservices"},(0,r.kt)("strong",{parentName:"h2"},"Web services")," \u21aa\ufe0f ",(0,r.kt)("strong",{parentName:"h2"},"Microservices")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Adapt web service interface as microservice")),(0,r.kt)("p",null,"Awe has a new service connector layer to make requests to ",(0,r.kt)("inlineCode",{parentName:"p"},"microservices")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"rest")," services.\nSee ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/service"},"services")," doc."),(0,r.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},(0,r.kt)("strong",{parentName:"p"},"Note:")," To migrate the existing web services in the applications that used with ",(0,r.kt)("inlineCode",{parentName:"p"},"AWE 3"),", you have to take into account\nthe following points:"))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Parameter sending:")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"Maintains:")," The attribute name of ",(0,r.kt)("inlineCode",{parentName:"p"},"service-parameter")," has to be the same as the attribute ",(0,r.kt)("inlineCode",{parentName:"p"},"id")," of ",(0,r.kt)("inlineCode",{parentName:"p"},"variable"),"\nfield of serve elements."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"title=maintains.xml",title:"maintains.xml"},'<target name="MyMaintain">\n   <serve service="MyService">\n     <variable id="id1" type="STRING" name="criterion1.selected"/>\n     <variable id="id2" type="STRING" name="criterion2.selected"/>\n     <variable id="id3" type="STRING" name="criterion3.selected"/>\n  </serve>\n</target>\n')),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"title=global/Services.xml",title:"global/Services.xml"},'<service id="CtrEvnDetIsuCnfSer">\n <microservice name="alu-microservice" method="POST" endpoint="/maintain/myMicroservice" content-type="JSON">\n   <service-parameter name="id1" type="STRING" list="true"/>\n   <service-parameter name="id2" type="STRING" list="true"/>\n   <service-parameter name="id3" type="STRING" list="true"/>\n </microservice>\n</service>\n')),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"title=webservice/services.xml",title:"webservice/services.xml"},' <service name="myMicroService" type="MAINTAION" call="myWebService">\n   <param list="false" name="id1" type="STRING"/>\n   <param list="false" name="id2" type="STRING"/>\n   <param list="false" name="id3" type="STRING"/>\n </service>\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"Queries:")," The attribute name of ",(0,r.kt)("inlineCode",{parentName:"p"},"service-parameter")," has to be the same as the attribute ",(0,r.kt)("inlineCode",{parentName:"p"},"id")," of query ",(0,r.kt)("inlineCode",{parentName:"p"},"field"),".\nUsually, you have to add alias field with the name to describe that field."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"title=queries.xml",title:"queries.xml"},' <query id="MyQuery" service="MyService">\n   <field id="id1" alias="alias1"/>\n   <field id="id2" alias="alias2"/>\n   <field id="id3" alias="alias3"/>\n   ...\n</query>      \n')),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"title=global/services.xml",title:"global/services.xml"},' <service id="MyService">\n   <microservice name="alu-microservice" method="POST" endpoint="/data/myMicroService" content-type="JSON">\n     <service-parameter list="false" name="id1" type="STRING"/>\n     <service-parameter list="false" name="id2" type="STRING"/>\n     <service-parameter list="false" name="id3" type="DATE"/>\n   </microservice>\n</service>\n')),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"title=webservice/services.xml",title:"webservice/services.xml"},' <service name="myMicroService" type="DATA" call="myWebService">\n   <param list="false" name="id1" type="STRING"/>\n   <param list="false" name="id2" type="STRING"/>\n   <param list="false" name="id3" type="DATE"/>\n </service>\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The number of ",(0,r.kt)("inlineCode",{parentName:"p"},"service-parameters")," must be equal to ",(0,r.kt)("inlineCode",{parentName:"p"},"param")," of service element (webservice).")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The order of ",(0,r.kt)("inlineCode",{parentName:"p"},"service-parameters")," matters."))))))}d.isMDXComponent=!0}}]);