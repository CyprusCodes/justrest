"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[716],{3905:function(e,t,a){a.d(t,{Zo:function(){return o},kt:function(){return u}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var m=n.createContext({}),p=function(e){var t=n.useContext(m),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},o=function(e){var t=p(e.components);return n.createElement(m.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,m=e.parentName,o=s(e,["components","mdxType","originalType","parentName"]),c=p(a),u=r,v=c["".concat(m,".").concat(u)]||c[u]||d[u]||l;return a?n.createElement(v,i(i({ref:t},o),{},{components:a})):n.createElement(v,i({ref:t},o))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=c;var s={};for(var m in t)hasOwnProperty.call(t,m)&&(s[m]=t[m]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var p=2;p<l;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},1445:function(e,t,a){a.r(t),a.d(t,{contentTitle:function(){return m},default:function(){return c},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return o}});var n=a(7462),r=a(3366),l=(a(7294),a(3905)),i=["components"],s={id:"service",title:"Services Definition",sidebar_label:"Services Definition"},m=void 0,p={unversionedId:"api/service",id:"api/service",isDocsHomePage:!1,title:"Services Definition",description:"Service operations are designed to perform specific treatments and calculations out of the AWE utilities.",source:"@site/docs/api/service-definition.md",sourceDirName:"api",slug:"/api/service",permalink:"/docs/api/service",editUrl:"https://github.com/CyprusCodes/xest/tree/main/documentation/docs/docs/api/service-definition.md",tags:[],version:"current",frontMatter:{id:"service",title:"Services Definition",sidebar_label:"Services Definition"}},o=[{value:"<strong>Global service structure</strong>",id:"global-service-structure",children:[{value:"Service element",id:"service-element",children:[],level:3},{value:"Java element",id:"java-element",children:[],level:3},{value:"Microservice element",id:"microservice-element",children:[],level:3},{value:"REST service element",id:"rest-service-element",children:[],level:3},{value:"Service parameter element",id:"service-parameter-element",children:[],level:3}],level:2},{value:"<strong>Java services</strong>",id:"java-services",children:[{value:"Java service examples",id:"java-service-examples",children:[],level:3},{value:"Load beans from parameters",id:"load-beans-from-parameters",children:[],level:3},{value:"How to set parameter values from Java",id:"how-to-set-parameter-values-from-java",children:[],level:3}],level:2},{value:"<strong>Microservices</strong>",id:"microservices",children:[{value:"Microservice examples",id:"microservice-examples",children:[],level:3}],level:2},{value:"<strong>REST services</strong>",id:"rest-services",children:[{value:"REST services examples",id:"rest-services-examples",children:[],level:3}],level:2}],d={toc:o};function c(e){var t=e.components,a=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Service operations are designed to perform specific treatments and calculations out of the AWE utilities."),(0,l.kt)("p",null,"Currently there are two types of services declared in the AWE Engine: ",(0,l.kt)("strong",{parentName:"p"},"Java Services")," and ",(0,l.kt)("strong",{parentName:"p"},"Web Services")),(0,l.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},(0,l.kt)("strong",{parentName:"p"},"Note:")," All services are defined in the ",(0,l.kt)("inlineCode",{parentName:"p"},"Services.xml")," file at ",(0,l.kt)("strong",{parentName:"p"},"global folder"),". View ",(0,l.kt)("a",{parentName:"p",href:"/docs/guides/project-structure#global-folder"},"project structure"),"  for more info."))),(0,l.kt)("h2",{id:"global-service-structure"},(0,l.kt)("strong",{parentName:"h2"},"Global service structure")),(0,l.kt)("p",null,"The xml structure of services is:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-xml"},'<?xml version="1.0" encoding="UTF-8"?>\n<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation = "https://aweframework.gitlab.io/awe/docs/schemas/services.xsd">\n  <service id="[Service Id]">\n    <java classname="[Java class]" method="[Java method]">\n      <service-parameter type="[Type]" name="[Parameter name]" qualifier="[Bean name]" />\n      ... (More <service_parameter>)\n    </java>\n  </service>\n  <service id="[Service Id]">\n    <microservice name="[Microservice name]" method="[REST method]" endpoint="[Service endpoint]">\n      <service-parameter type="[Type]" name="[Parameter name]" />\n      ... (More <service_parameter>)\n    </microservice>\n  </service>\n  <service id="[Service Id]">\n    <rest method="[REST method]" endpoint="[Service endpoint]" wrapper="[REST service wrapper]">\n      <service-parameter type="[Type]" name="[Parameter name]" />\n      ... (More <service_parameter>)\n    </rest>\n  </service>  \n  ... (More <service>)\n</services>\n')),(0,l.kt)("p",null,"For easier development of services, not all elements are required."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Element"),(0,l.kt)("th",{parentName:"tr",align:null},"Use"),(0,l.kt)("th",{parentName:"tr",align:null},"Multiples instances"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"services"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Required")),(0,l.kt)("td",{parentName:"tr",align:null},"No"),(0,l.kt)("td",{parentName:"tr",align:null},"Root element of services xml file")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#service-element"},"service")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Required")),(0,l.kt)("td",{parentName:"tr",align:null},"Yes"),(0,l.kt)("td",{parentName:"tr",align:null},"Outlines the service. Also describes the ",(0,l.kt)("strong",{parentName:"td"},"kind of service")," (java service or web service)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#java-element"},"java")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Optional")),(0,l.kt)("td",{parentName:"tr",align:null},"No"),(0,l.kt)("td",{parentName:"tr",align:null},"Used to define java services")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#microservice-element"},"microservice")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Optional")),(0,l.kt)("td",{parentName:"tr",align:null},"No"),(0,l.kt)("td",{parentName:"tr",align:null},"Used to define microservices")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#rest-service-element"},"rest")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Optional")),(0,l.kt)("td",{parentName:"tr",align:null},"No"),(0,l.kt)("td",{parentName:"tr",align:null},"Used to define rest services")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#service-parameter-element"},"service-parameter")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Optional")),(0,l.kt)("td",{parentName:"tr",align:null},"No"),(0,l.kt)("td",{parentName:"tr",align:null},"Used to pass parameters to service")))),(0,l.kt)("h3",{id:"service-element"},"Service element"),(0,l.kt)("p",null,"Service element has the following attributes:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Attribute"),(0,l.kt)("th",{parentName:"tr",align:null},"Use"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Values"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"id"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Required")),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Name of service"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Note:")," The id must be unique")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"launch-phase"),(0,l.kt)("td",{parentName:"tr",align:null},"Optional"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Launch the service in some application points"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"APPLICATION_START"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"APPLICATION_END"),",")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"CLIENT_START"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"CLIENT_END")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("h3",{id:"java-element"},"Java element"),(0,l.kt)("p",null,"Java element has the following attributes:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Attribute"),(0,l.kt)("th",{parentName:"tr",align:null},"Use"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Values"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"classname"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Required")),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Class name of java service"),(0,l.kt)("td",{parentName:"tr",align:null},"Ex.: ",(0,l.kt)("inlineCode",{parentName:"td"},'classname="com.almis.awe.core.services.controller.AccessController"'))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"method"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Required")),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Method name of class to be executed"),(0,l.kt)("td",{parentName:"tr",align:null},"Ex.: ",(0,l.kt)("inlineCode",{parentName:"td"},'method="login"'))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"qualifier"),(0,l.kt)("td",{parentName:"tr",align:null},"Optional"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Qualifier bean name. If uses ",(0,l.kt)("inlineCode",{parentName:"td"},"@Qualifier")," spring annotation"),(0,l.kt)("td",{parentName:"tr",align:null},"Ex.: ",(0,l.kt)("inlineCode",{parentName:"td"},'qualifier="myBean"'))))),(0,l.kt)("h3",{id:"microservice-element"},"Microservice element"),(0,l.kt)("p",null,"Microservice element has the following attributes:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Attribute"),(0,l.kt)("th",{parentName:"tr",align:null},"Use"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Values"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"name"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Required")),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Name of web service"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Note:")," Must be unique")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"method"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Required")),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"REST method."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"GET"),": Send the parameters as part of the endpoint - POST**: Send the parameters in the request body")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"endpoint"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Required")),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Path to REST call"),(0,l.kt)("td",{parentName:"tr",align:null},"Ej: /data/ServiceData or /maintain/ServiceMaintain")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"wrapper"),(0,l.kt)("td",{parentName:"tr",align:null},"Optional"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Classname to wrap REST call response"),(0,l.kt)("td",{parentName:"tr",align:null},"Ej: com.almis.awe.test.bean.Postman")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"content-type"),(0,l.kt)("td",{parentName:"tr",align:null},"Optional"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Way to send the parameters"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"URLENCODED")," (default), ",(0,l.kt)("inlineCode",{parentName:"td"},"JSON"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"cacheable"),(0,l.kt)("td",{parentName:"tr",align:null},"Optional"),(0,l.kt)("td",{parentName:"tr",align:null},"Boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"Used to set service as cacheable"),(0,l.kt)("td",{parentName:"tr",align:null},"Default value is ",(0,l.kt)("inlineCode",{parentName:"td"},"false"))))),(0,l.kt)("h3",{id:"rest-service-element"},"REST service element"),(0,l.kt)("p",null,"REST service element has the following attributes:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Attribute"),(0,l.kt)("th",{parentName:"tr",align:null},"Use"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Values"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"server"),(0,l.kt)("td",{parentName:"tr",align:null},"Optional"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"REST server property"),(0,l.kt)("td",{parentName:"tr",align:null},"Used to retrieve the ",(0,l.kt)("inlineCode",{parentName:"td"},"rest.server.[server]")," property")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"method"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Required")),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"REST method."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"GET"),": Send the parameters as part of the endpoint - ",(0,l.kt)("strong",{parentName:"td"},"POST"),": Send the parameters in the request body")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"endpoint"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Required")),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Path to REST call"),(0,l.kt)("td",{parentName:"tr",align:null},"Ej: /data/ServiceData or /maintain/ServiceMaintain")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"wrapper"),(0,l.kt)("td",{parentName:"tr",align:null},"Optional"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Classname to wrap REST call response"),(0,l.kt)("td",{parentName:"tr",align:null},"Ej: com.almis.awe.test.bean.Postman")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"content-type"),(0,l.kt)("td",{parentName:"tr",align:null},"Optional"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Way to send the parameters"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"URLENCODED")," (default), ",(0,l.kt)("inlineCode",{parentName:"td"},"JSON"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"cacheable"),(0,l.kt)("td",{parentName:"tr",align:null},"Optional"),(0,l.kt)("td",{parentName:"tr",align:null},"Boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"Used to set service as cacheable"),(0,l.kt)("td",{parentName:"tr",align:null},"Default value is ",(0,l.kt)("inlineCode",{parentName:"td"},"false"))))),(0,l.kt)("h3",{id:"service-parameter-element"},"Service parameter element"),(0,l.kt)("p",null,"The service parameter element are parameters passed from query or maintain to the service. Has the following attributes:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Attribute"),(0,l.kt)("th",{parentName:"tr",align:null},"Use"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Values"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"name"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Required")),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Name of service parameter"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Note:")," Must be unique")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"type"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Required")),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Type of service parameter"),(0,l.kt)("td",{parentName:"tr",align:null},"The possible values are: ",(0,l.kt)("inlineCode",{parentName:"td"},"STRING"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"INTEGER"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"FLOAT"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"DOUBLE"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"OBJECT"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"JSON"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"DATE"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"TIME")," or ",(0,l.kt)("inlineCode",{parentName:"td"},"TIMESTAMP"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"value"),(0,l.kt)("td",{parentName:"tr",align:null},"Optional"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"To set the parameter with a static value"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"bean-class"),(0,l.kt)("td",{parentName:"tr",align:null},"Optional"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Manage parameter as a Java Bean"),(0,l.kt)("td",{parentName:"tr",align:null},"Type must be ",(0,l.kt)("inlineCode",{parentName:"td"},"OBJECT")," or ",(0,l.kt)("inlineCode",{parentName:"td"},"JSON"))))),(0,l.kt)("h2",{id:"java-services"},(0,l.kt)("strong",{parentName:"h2"},"Java services")),(0,l.kt)("p",null,"Are services to execute ",(0,l.kt)("inlineCode",{parentName:"p"},"java")," code. Its xml structure is:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-xml"},'<service id="[service_name]">\n  <java classname="[service_classname]" method="[service_method]">\n    <service-parameter type="String" name="[parameter_name]"/>\n    ... (more service parameters)\n  </java>\n</service>\n')),(0,l.kt)("h3",{id:"java-service-examples"},"Java service examples"),(0,l.kt)("p",null,"Service definition with parameters"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-xml"},'\x3c!-- Store a session variable --\x3e\n<service id="insertSchedulerTask">\n  <java classname="com.almis.awe.scheduler.controller.SchedulerController" method="insertSchedulerTask">\n    <service-parameter name="IdeTsk" type="INTEGER" />\n    <service-parameter name="SendStatus" type="INTEGER" list="true" />\n    <service-parameter name="SendDestination" type="INTEGER" list="true" />\n  </java>\n</service>\n\n')),(0,l.kt)("p",null,"Java class definition with parameters"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"@Service\npublic class SchedulerService extends ServiceConfig {\n  /**\n   * Insert and schedule a new task\n   *\n   * @param taskId Task identifier\n   * @param sendStatus Status to send list\n   * @param sendDestination Destination target list\n   * @return ServiceData\n   */\n  public ServiceData insertSchedulerTask(Integer taskId, List<Integer> sendStatus, List<Integer> sendDestination) throws AWException {\n    // Launch function\n    // ...\n  } \n}\n")),(0,l.kt)("p",null,"Service definition without parameters"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-xml"},'\x3c!-- Get screen configuration at begining--\x3e\n<service id="LoaScrCfg" launch-phase="APPLICATION_START">\n  <java classname="com.almis.awe.core.services.controller.ScreenController" method="initScreenConfigurations"/>\n</service>\n')),(0,l.kt)("p",null,"Java class definition without parameters"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"@Service\npublic class ScreenService extends ServiceConfig {\n  /**\n   * Initialize singleton with screens configurations info\n   *\n   */\n  public void initScreenConfigurations() {\n    // Launch function\n    // ...\n  } \n}\n")),(0,l.kt)("h3",{id:"load-beans-from-parameters"},"Load beans from parameters"),(0,l.kt)("p",null,"Here is an example to load a bean from some parameters"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example 1"),": Load a single bean with parameters"),(0,l.kt)("p",null,"Query definition to load a bean parameter (each variable will field a bean attribute)"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-xml"},'<query id="testServiceBeanParameter" service="testServiceBeanParameter">\n  <variable id="name" type="STRING" name="name"/>\n  <variable id="rotationPeriod" type="STRING" name="rotationPeriod"/>\n  <variable id="orbitalPeriod" type="STRING" name="orbitalPeriod"/>\n  <variable id="diameter" type="STRING" name="diameter"/>\n  <variable id="climate" type="STRING" name="climate"/>\n  <variable id="gravity" type="STRING" name="gravity"/>\n  <variable id="terrain" type="STRING" name="terrain"/>\n  <variable id="population" type="LONG" name="population"/>\n  <variable id="created" type="DATE" name="created"/>\n  <variable id="edited" type="DATE" name="edited"/>\n  <variable id="url" type="STRING" name="url"/>\n</query>\n')),(0,l.kt)("p",null,"Service definition with a bean parameter"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-xml"},'\n<service id="testServiceBeanParameter">\n  <java classname="com.almis.awe.service.DummyService" method="getDummyData">\n    <service-parameter type="OBJECT" bean-class="com.almis.awe.test.bean.Planet"/>\n  </java>\n</service>\n')),(0,l.kt)("p",null,"Java class definition with a bean parameter"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"@Service\npublic class DummyService extends ServiceConfig { \n  /**\n   * Retrieve dummy data\n   * @param planet Planet bean\n   * @return Service data\n   */\n  public ServiceData getDummyData(Planet planet) {\n    ServiceData serviceData = new ServiceData();\n    // ...\n    return serviceData;\n  }\n}\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example 2"),": Load a list of beans with parameters"),(0,l.kt)("p",null,"Query definition to load a bean parameter (each variable is a parameter list which will field a bean attribute)"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-xml"},'<query id="testServiceBeanParameterList" service="testServiceBeanParameterList">\n  <variable id="name" type="STRING" name="name"/>\n  <variable id="rotationPeriod" type="STRING" name="rotationPeriod"/>\n  <variable id="orbitalPeriod" type="STRING" name="orbitalPeriod"/>\n  <variable id="diameter" type="STRING" name="diameter"/>\n  <variable id="climate" type="STRING" name="climate"/>\n  <variable id="gravity" type="STRING" name="gravity"/>\n  <variable id="terrain" type="STRING" name="terrain"/>\n  <variable id="population" type="LONG" name="population"/>\n  <variable id="created" type="DATE" name="created"/>\n  <variable id="edited" type="DATE" name="edited"/>\n  <variable id="url" type="STRING" name="url"/>\n</query>\n')),(0,l.kt)("p",null,"Service definition with a bean parameter list"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-xml"},'\n<service id="testServiceBeanParameterList">\n  <java classname="com.almis.awe.service.DummyService" method="getDummyData">\n    <service-parameter type="OBJECT" bean-class="com.almis.awe.test.bean.Planet" list="true"/>\n  </java>\n</service>\n')),(0,l.kt)("p",null,"Java class definition with a bean parameter list"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"@Service\npublic class DummyService extends ServiceConfig { \n  /**\n   * Retrieve dummy data\n   * @param planetList Planet bean list\n   * @return Service data\n   */\n  public ServiceData getDummyData(List<Planet> planetList) {\n    ServiceData serviceData = new ServiceData();\n    // ...\n    return serviceData;\n  }\n}\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example 3"),": Load a json node from a grid"),(0,l.kt)("p",null,"Query definition to load a bean parameter (each variable is a parameter list which will field a bean attribute)"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-xml"},'<query id="testLoadJsonAddress" service="testLoadJsonAddress">\n  <variable id="address" type="OBJECT" name="selectedRowAddress"/>\n</query>\n')),(0,l.kt)("p",null,"Service definition with a Json parameter"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-xml"},'\n<service id="testLoadJsonAddress">\n  <java classname="com.almis.awe.service.DummyService" method="getJsonAddress">\n    <service-parameter type="JSON"/>\n  </java>\n</service>\n')),(0,l.kt)("p",null,"Java class definition with a json parameter"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"@Service\npublic class DummyService extends ServiceConfig { \n  /**\n   * Retrieve dummy data\n   * @param address Json address\n   * @return Service data\n   */\n  public ServiceData getJsonAddress(JsonNode address) {\n    ServiceData serviceData = new ServiceData();\n    // ...\n    return serviceData;\n  }\n}\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example 4"),": Load a stored datalist from one grid row"),(0,l.kt)("p",null,"Query definition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-xml"},'<query id="testLoadJsonBean" service="testLoadJsonBean">\n  <variable id="storedDatalist" type="OBJECT" name="storedData.selected"/>\n</query>\n')),(0,l.kt)("p",null,"Service definition with a Json parameter"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-xml"},'\n<service id="testLoadJsonBean">\n  <java classname="com.almis.awe.service.DummyService" method="getJsonBean">\n    <service-parameter type="JSON" bean-class="com.almis.awe.model.dto.DataList"/>\n  </java>\n</service>\n')),(0,l.kt)("p",null,"Java class definition with a json parameter"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"@Service\npublic class DummyService extends ServiceConfig { \n  /**\n   * Retrieve dummy data\n   * @param datalist DataList from Json\n   * @return Service data\n   */\n  public ServiceData getJsonBean(DataList datalist) {\n    ServiceData serviceData = new ServiceData();\n    // ...\n    return serviceData;\n  }\n}\n")),(0,l.kt)("h3",{id:"how-to-set-parameter-values-from-java"},"How to set parameter values from Java"),(0,l.kt)("p",null,"There is the procedure to set set query and maintain variable values in Java."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Java Service")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'  @Service\n  public class UserService extends ServiceConfig { \n\n    /**\n     * Get user information\n     *\n     * @param id User id\n     * @return ServiceData\n     */\n    private ServiceData getUserData(String id) throws AWException {\n      DataList userData = null;\n      ServiceData srvDat = null;\n\n      getRequest().setParameter("opeId", id);\n      return getBean(QueryService.class).launchQuery("getUserData");\n    }\n  }\n\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Query definition")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-xml"},'<query id="getUserData">\n  <table id="ope" alias="o" />\n  <field id="l1_nom" alias="nom" table="o" />\n  <field id="l1_lan" alias="lan" table="o" />\n  <field id="EmlSrv" alias="eml" table="o" />\n  <field id="OpeNam" alias="nam" table="o" />\n  <where>\n    <and>\n      <filter field="IdeOpe" table="o" condition="=" variable="OpeId">\n    </and>\n  </where>\n  <variable id="OpeId" type="STRING" name="opeId" />\n</query>\n\n')),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("strong",{parentName:"p"},"Note:")," This method of setting values of query and maintain variables is not recommended. It only has to be used in exceptional cases.")),(0,l.kt)("h2",{id:"microservices"},(0,l.kt)("strong",{parentName:"h2"},"Microservices")),(0,l.kt)("p",null,"Microservices are connectors to REST-defined services. It's xml structure is:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-xml"},'<service id="[service_name]">\n  <microservice name="alu-microservice" method="GET" endpoint="/[data/maintain]/[service-name]/{param1}">\n    <service-parameter name="param1" type="STRING"/>\n  </microservice>\n</service>\n')),(0,l.kt)("h3",{id:"microservice-examples"},"Microservice examples"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-xml"},'\x3c!-- GET BACKOFFICE NUMBER --\x3e\n<service id="BocNum">\n  <microservice name="alu-microservice" method="POST" endpoint="/data/BilGetBoc">\n    <service-parameter type="STRING" name="ent" />\n    <service-parameter type="STRING" name="suc" />\n    <service-parameter type="STRING" name="sns" />\n    <service-parameter type="STRING" name="cap" />\n    <service-parameter type="STRING" name="prd" />\n  </microservice>\n</service>\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-xml"},'\x3c!-- CONTROL CORRESPONSAL --\x3e\n<service id="BilCtlCrr">\n  <microservice name="alu-microservice" method="POST" endpoint="/maintain/BilCtlCrr">\n    <service-parameter type="STRING" name="Ent" />\n    <service-parameter type="STRING" name="Liq" />\n    <service-parameter type="STRING" name="Crr" />\n  </web>\n</service>\n')),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("strong",{parentName:"p"},"Note:")," ",(0,l.kt)("inlineCode",{parentName:"p"},"microservice.name")," attributes are optional. ",(0,l.kt)("inlineCode",{parentName:"p"},"name")," attribute is used to allow overwrite microservice name and set auth configuration.\nMicroservice configuration example:"),(0,l.kt)("pre",{parentName:"blockquote"},(0,l.kt)("code",{parentName:"pre",className:"language-properties"},"# microservice.[name]=\nmicroservice.myservice=overwrite-service-name\nmicroservice.myservice.authentication=basic\nmicroservice.myservice.authentication.username=rest_username\nmicroservice.myservice.authentication.password=ENC(rest_password_encoded)\n"))),(0,l.kt)("h2",{id:"rest-services"},(0,l.kt)("strong",{parentName:"h2"},"REST services")),(0,l.kt)("p",null,"REST services are very useful to connect to REST API's. Their xml structure is:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-xml"},'<service id="[service_name]">\n  <rest server="server" method="GET" endpoint="/[data/maintain]/[service-name]/{param1}" wrapper="com.almis.test.ServiceDataWrapper" content-type="URLENCODED">\n    <service-parameter name="param1" type="STRING"/>\n  </rest>\n</service>\n')),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("strong",{parentName:"p"},"Note:")," ",(0,l.kt)("inlineCode",{parentName:"p"},"server")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"wrapper")," attributes are optional. ",(0,l.kt)("inlineCode",{parentName:"p"},"server")," attribute is used to retrieve the ",(0,l.kt)("inlineCode",{parentName:"p"},"rest.server.[server]")," property,\nwhich is appended to the ",(0,l.kt)("inlineCode",{parentName:"p"},"endpoint")," defined url. ",(0,l.kt)("inlineCode",{parentName:"p"},"wrapper")," attribute defines a class name which will be used to manage the REST call response\nand translate it into a ",(0,l.kt)("inlineCode",{parentName:"p"},"ServiceData")," class, suitable for AWE.  "),(0,l.kt)("p",{parentName:"blockquote"},"Rest server configuration example:"),(0,l.kt)("pre",{parentName:"blockquote"},(0,l.kt)("code",{parentName:"pre",className:"language-properties"},"rest.server.core=http://localhost:18080/core\nrest.server.core.authentication=basic\nrest.server.core.authentication.username=rest_username\nrest.server.core.authentication.password=ENC(rest_password_encoded)\n"))),(0,l.kt)("h3",{id:"rest-services-examples"},"REST services examples"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Call to a local URL with GET method without parameters"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-xml"},'<service id="testSimpleRestGet">\n  <rest method="GET" endpoint="http://localhost:18089/testapi/simple"/>\n</service>\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Call to a local URL with POST method without parameters"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-xml"},'<service id="testSimpleRestPost">\n  <rest method="POST" endpoint="http://localhost:18089/testapi/simple"/>\n</service>\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Call to a local URL with GET method without parameters"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-xml"},'<service id="testComplexRestGet">\n  <rest method="GET" endpoint="http://localhost:18089/testapi/complex/QtyTst"/>\n</service>\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Call to a local URL with POST method without parameters"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-xml"},'<service id="testComplexRestPost">\n  <rest method="POST" endpoint="http://localhost:18089/testapi/complex/testInclude"/>\n</service>\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Call to a local URL with GET method with url parameters"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-xml"},'<service id="testComplexRestGetParameters">\n  <rest server="local" method="GET" endpoint="/testapi/complex/QtyTst{name}/{value}">\n    <service-parameter type="STRING" name="name" />\n    <service-parameter type="STRING" name="value" />\n  </rest>\n</service>\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Call to a local URL with POST method with url encoded parameters (default)"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-xml"},'<service id="testComplexRestPostParameters">\n  <rest method="POST" endpoint="http://localhost:18089/testapi/complex/parameters/testRestParameters">\n    <service-parameter type="INTEGER" name="value" />\n  </rest>\n</service>\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Call to a local URL with POST method with json encoded parameters"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-xml"},'<service id="testComplexRestPostParametersJson">\n  <rest server="local" method="POST" endpoint="/testapi/complex/parameters/json/testRestParameters" content-type="JSON">\n    <service-parameter type="INTEGER" name="value" />\n  </rest>\n</service>\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Call to a external URL with GET method without parameters and a wrapper"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-xml"},'<service id="testExternalRest">\n  <rest server="islandia" method="GET" endpoint="/concerts" wrapper="com.almis.awe.test.bean.Concerts"/>\n</service>\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Call to a external URL with GET method without parameters and a wrapper"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-xml"},'<service id="testPostman">\n  <rest server="postman" method="GET" endpoint="/gzip" wrapper="com.almis.awe.test.bean.Postman"/>\n</service>\n')))}c.isMDXComponent=!0}}]);